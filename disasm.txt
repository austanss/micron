
bin/kernel/mnk.elf:     file format elf64-x86-64


Disassembly of section .stivalehdr:

0000000000200000 <stivale_hdr>:
	...
  200008:	01 00                	add    DWORD PTR [rax],eax
  20000a:	00 00                	add    BYTE PTR [rax],al
  20000c:	00 00                	add    BYTE PTR [rax],al
  20000e:	20 00                	and    BYTE PTR [rax],al
	...

Disassembly of section .text:

0000000000201000 <mnkmain>:
  201000:	55                   	push   rbp
  201001:	48 89 e5             	mov    rbp,rsp
  201004:	48 83 ec 10          	sub    rsp,0x10
  201008:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20100c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  201010:	e8 35 03 00 00       	call   20134a <sys::config::calculate_kernel_size()>
  201015:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201019:	48 8d 50 08          	lea    rdx,[rax+0x8]
  20101d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201021:	48 83 c0 18          	add    rax,0x18
  201025:	48 89 d6             	mov    rsi,rdx
  201028:	48 89 c7             	mov    rdi,rax
  20102b:	e8 8e 01 00 00       	call   2011be <sys::config::configure_memory(stivale_framebuffer*, stivale_memory_map*)>
  201030:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201034:	48 89 c6             	mov    rsi,rax
  201037:	bf 00 00 00 00       	mov    edi,0x0
  20103c:	e8 7a 03 00 00       	call   2013bb <tss_install>
  201041:	e8 be 0d 00 00       	call   201e04 <load_idt>
  201046:	fb                   	sti    
  201047:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20104b:	48 83 c0 18          	add    rax,0x18
  20104f:	48 89 c7             	mov    rdi,rax
  201052:	e8 2d 02 00 00       	call   201284 <sys::config::configure_graphics(stivale_framebuffer*)>
  201057:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20105b:	48 8b 40 28          	mov    rax,QWORD PTR [rax+0x28]
  20105f:	48 89 c7             	mov    rdi,rax
  201062:	e8 a3 02 00 00       	call   20130a <sys::config::configure_pci(sys::acpi::rsdp2*)>
  201067:	bf e8 03 00 00       	mov    edi,0x3e8
  20106c:	e8 27 27 00 00       	call   203798 <io::pit::set_c0_frequency(unsigned int)>
  201071:	e8 11 27 00 00       	call   203787 <io::pit::pit_init()>
  201076:	e8 12 2c 00 00       	call   203c8d <sys::audio::pcspk::init()>
  20107b:	e8 99 70 00 00       	call   208119 <io::keyboard::init()>
  201080:	e8 03 03 00 00       	call   201388 <sys::config::configure_userspace()>
  201085:	90                   	nop
  201086:	c9                   	leave  
  201087:	c3                   	ret    

0000000000201088 <sys::config::setup_paging(stivale_framebuffer*)>:
  201088:	55                   	push   rbp
  201089:	48 89 e5             	mov    rbp,rsp
  20108c:	48 83 ec 30          	sub    rsp,0x30
  201090:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  201094:	e8 57 76 00 00       	call   2086f0 <configure_pat>
  201099:	e8 2b 1c 00 00       	call   202cc9 <request_page>
  20109e:	48 c7 c2 10 01 21 00 	mov    rdx,0x210110
  2010a5:	48 89 02             	mov    QWORD PTR [rdx],rax
  2010a8:	48 c7 c0 10 01 21 00 	mov    rax,0x210110
  2010af:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2010b2:	ba 00 10 00 00       	mov    edx,0x1000
  2010b7:	be 00 00 00 00       	mov    esi,0x0
  2010bc:	48 89 c7             	mov    rdi,rax
  2010bf:	e8 c6 1e 00 00       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2010c4:	48 c7 c0 10 01 21 00 	mov    rax,0x210110
  2010cb:	48 8b 08             	mov    rcx,QWORD PTR [rax]
  2010ce:	48 c7 c0 10 01 21 00 	mov    rax,0x210110
  2010d5:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2010d8:	ba 00 00 00 00       	mov    edx,0x0
  2010dd:	48 89 ce             	mov    rsi,rcx
  2010e0:	48 89 c7             	mov    rdi,rax
  2010e3:	e8 66 1f 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  2010e8:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  2010ef:	00 
  2010f0:	ba 00 00 00 00       	mov    edx,0x0
  2010f5:	be 00 00 00 00       	mov    esi,0x0
  2010fa:	bf 00 00 00 00       	mov    edi,0x0
  2010ff:	e8 d6 16 00 00       	call   2027da <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)>
  201104:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
  201108:	0f 92 c0             	setb   al
  20110b:	84 c0                	test   al,al
  20110d:	74 22                	je     201131 <sys::config::setup_paging(stivale_framebuffer*)+0xa9>
  20110f:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  201113:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201117:	ba 00 00 00 00       	mov    edx,0x0
  20111c:	48 89 ce             	mov    rsi,rcx
  20111f:	48 89 c7             	mov    rdi,rax
  201122:	e8 27 1f 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  201127:	48 81 45 f8 00 10 00 	add    QWORD PTR [rbp-0x8],0x1000
  20112e:	00 
  20112f:	eb bf                	jmp    2010f0 <sys::config::setup_paging(stivale_framebuffer*)+0x68>
  201131:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  201135:	48 8b 00             	mov    rax,QWORD PTR [rax]
  201138:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20113c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  201140:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  201144:	0f b7 d0             	movzx  edx,ax
  201147:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20114b:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  20114f:	0f b7 c0             	movzx  eax,ax
  201152:	48 0f af d0          	imul   rdx,rax
  201156:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20115a:	0f b7 40 0e          	movzx  eax,WORD PTR [rax+0xe]
  20115e:	66 c1 e8 03          	shr    ax,0x3
  201162:	0f b7 c0             	movzx  eax,ax
  201165:	48 0f af c2          	imul   rax,rdx
  201169:	48 05 00 04 00 00    	add    rax,0x400
  20116f:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  201173:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201177:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20117b:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20117f:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  201183:	48 01 d0             	add    rax,rdx
  201186:	48 39 45 f0          	cmp    QWORD PTR [rbp-0x10],rax
  20118a:	73 22                	jae    2011ae <sys::config::setup_paging(stivale_framebuffer*)+0x126>
  20118c:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  201190:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201194:	ba 01 00 00 00       	mov    edx,0x1
  201199:	48 89 ce             	mov    rsi,rcx
  20119c:	48 89 c7             	mov    rdi,rax
  20119f:	e8 aa 1e 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  2011a4:	48 81 45 f0 00 10 00 	add    QWORD PTR [rbp-0x10],0x1000
  2011ab:	00 
  2011ac:	eb cd                	jmp    20117b <sys::config::setup_paging(stivale_framebuffer*)+0xf3>
  2011ae:	48 c7 c0 10 01 21 00 	mov    rax,0x210110
  2011b5:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2011b8:	0f 22 d8             	mov    cr3,rax
  2011bb:	90                   	nop
  2011bc:	c9                   	leave  
  2011bd:	c3                   	ret    

00000000002011be <sys::config::configure_memory(stivale_framebuffer*, stivale_memory_map*)>:
  2011be:	55                   	push   rbp
  2011bf:	48 89 e5             	mov    rbp,rsp
  2011c2:	48 83 ec 20          	sub    rsp,0x20
  2011c6:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2011ca:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  2011ce:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2011d2:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2011d5:	ba ff ff 00 00       	mov    edx,0xffff
  2011da:	be ff 00 00 00       	mov    esi,0xff
  2011df:	48 89 c7             	mov    rdi,rax
  2011e2:	e8 a3 1d 00 00       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2011e7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2011eb:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  2011ef:	48 89 d0             	mov    rax,rdx
  2011f2:	48 01 c0             	add    rax,rax
  2011f5:	48 01 d0             	add    rax,rdx
  2011f8:	48 c1 e0 03          	shl    rax,0x3
  2011fc:	48 89 c1             	mov    rcx,rax
  2011ff:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  201203:	ba 18 00 00 00       	mov    edx,0x18
  201208:	48 89 ce             	mov    rsi,rcx
  20120b:	48 89 c7             	mov    rdi,rax
  20120e:	e8 86 16 00 00       	call   202899 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)>
  201213:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201217:	48 89 c7             	mov    rdi,rax
  20121a:	e8 69 fe ff ff       	call   201088 <sys::config::setup_paging(stivale_framebuffer*)>
  20121f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  201226:	81 7d fc ff 00 00 00 	cmp    DWORD PTR [rbp-0x4],0xff
  20122d:	7f 3e                	jg     20126d <sys::config::configure_memory(stivale_framebuffer*, stivale_memory_map*)+0xaf>
  20122f:	48 b8 00 00 00 00 00 	movabs rax,0xffff800000000000
  201236:	80 ff ff 
  201239:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20123d:	e8 87 1a 00 00       	call   202cc9 <request_page>
  201242:	48 89 c1             	mov    rcx,rax
  201245:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201249:	ba 00 00 00 00       	mov    edx,0x0
  20124e:	48 89 ce             	mov    rsi,rcx
  201251:	48 89 c7             	mov    rdi,rax
  201254:	e8 f5 1d 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  201259:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20125d:	48 05 00 10 00 00    	add    rax,0x1000
  201263:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  201267:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  20126b:	eb b9                	jmp    201226 <sys::config::configure_memory(stivale_framebuffer*, stivale_memory_map*)+0x68>
  20126d:	be 00 00 10 00       	mov    esi,0x100000
  201272:	48 bf 00 00 00 00 00 	movabs rdi,0xffff800000000000
  201279:	80 ff ff 
  20127c:	e8 67 11 00 00       	call   2023e8 <memory::heap::initialize_heap(void*, unsigned long)>
  201281:	90                   	nop
  201282:	c9                   	leave  
  201283:	c3                   	ret    

0000000000201284 <sys::config::configure_graphics(stivale_framebuffer*)>:
  201284:	55                   	push   rbp
  201285:	48 89 e5             	mov    rbp,rsp
  201288:	48 83 ec 10          	sub    rsp,0x10
  20128c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  201290:	48 c7 c1 c0 01 21 00 	mov    rcx,0x2101c0
  201297:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20129b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  20129f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2012a2:	48 89 01             	mov    QWORD PTR [rcx],rax
  2012a5:	48 89 51 08          	mov    QWORD PTR [rcx+0x8],rdx
  2012a9:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2012b0:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  2012b4:	0f b7 d0             	movzx  edx,ax
  2012b7:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2012be:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  2012c2:	0f b7 c0             	movzx  eax,ax
  2012c5:	0f af d0             	imul   edx,eax
  2012c8:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2012cf:	0f b7 40 0e          	movzx  eax,WORD PTR [rax+0xe]
  2012d3:	66 c1 e8 03          	shr    ax,0x3
  2012d7:	0f b7 c0             	movzx  eax,ax
  2012da:	0f af c2             	imul   eax,edx
  2012dd:	8d 90 ff 0f 00 00    	lea    edx,[rax+0xfff]
  2012e3:	85 c0                	test   eax,eax
  2012e5:	0f 48 c2             	cmovs  eax,edx
  2012e8:	c1 f8 0c             	sar    eax,0xc
  2012eb:	83 c0 01             	add    eax,0x1
  2012ee:	48 98                	cdqe   
  2012f0:	48 89 c7             	mov    rdi,rax
  2012f3:	e8 3b 1a 00 00       	call   202d33 <request_pages>
  2012f8:	48 c7 c2 d0 01 21 00 	mov    rdx,0x2101d0
  2012ff:	48 89 02             	mov    QWORD PTR [rdx],rax
  201302:	e8 1b 31 00 00       	call   204422 <io::tty::initialize()>
  201307:	90                   	nop
  201308:	c9                   	leave  
  201309:	c3                   	ret    

000000000020130a <sys::config::configure_pci(sys::acpi::rsdp2*)>:
  20130a:	55                   	push   rbp
  20130b:	48 89 e5             	mov    rbp,rsp
  20130e:	48 83 ec 20          	sub    rsp,0x20
  201312:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  201316:	48 c7 c0 88 01 21 00 	mov    rax,0x210188
  20131d:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  201321:	48 89 10             	mov    QWORD PTR [rax],rdx
  201324:	48 8d 3d d5 8c 00 00 	lea    rdi,[rip+0x8cd5]        # 20a000 <$help+0x658>
  20132b:	e8 5a 2f 00 00       	call   20428a <sys::acpi::get_table(char*)>
  201330:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  201334:	48 c7 c0 80 01 21 00 	mov    rax,0x210180
  20133b:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  20133f:	48 89 10             	mov    QWORD PTR [rax],rdx
  201342:	e8 4a 2e 00 00       	call   204191 <io::pci::enumerate_pci()>
  201347:	90                   	nop
  201348:	c9                   	leave  
  201349:	c3                   	ret    

000000000020134a <sys::config::calculate_kernel_size()>:
  20134a:	55                   	push   rbp
  20134b:	48 89 e5             	mov    rbp,rsp
  20134e:	48 c7 c0 00 20 21 00 	mov    rax,0x212000
  201355:	48 89 c2             	mov    rdx,rax
  201358:	48 c7 c0 00 00 20 00 	mov    rax,0x200000
  20135f:	48 89 c1             	mov    rcx,rax
  201362:	48 89 d0             	mov    rax,rdx
  201365:	48 29 c8             	sub    rax,rcx
  201368:	48 89 05 99 cc 00 00 	mov    QWORD PTR [rip+0xcc99],rax        # 20e008 <sys::config::__kernel_size>
  20136f:	48 8b 05 92 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc92]        # 20e008 <sys::config::__kernel_size>
  201376:	48 c1 e8 0c          	shr    rax,0xc
  20137a:	48 83 c0 01          	add    rax,0x1
  20137e:	48 89 05 7b cc 00 00 	mov    QWORD PTR [rip+0xcc7b],rax        # 20e000 <sys::config::__kernel_pages>
  201385:	90                   	nop
  201386:	5d                   	pop    rbp
  201387:	c3                   	ret    

0000000000201388 <sys::config::configure_userspace()>:
  201388:	55                   	push   rbp
  201389:	48 89 e5             	mov    rbp,rsp
  20138c:	48 c7 c0 00 90 20 00 	mov    rax,0x209000
  201393:	48 89 c7             	mov    rdi,rax
  201396:	e8 1d 21 00 00       	call   2034b8 <donate_to_userspace>
  20139b:	90                   	nop
  20139c:	5d                   	pop    rbp
  20139d:	c3                   	ret    

000000000020139e <cpu::tss::tss_init()>:
  20139e:	55                   	push   rbp
  20139f:	48 89 e5             	mov    rbp,rsp
  2013a2:	ba 68 00 00 00       	mov    edx,0x68
  2013a7:	be 00 00 00 00       	mov    esi,0x0
  2013ac:	48 8d 3d 6d cc 00 00 	lea    rdi,[rip+0xcc6d]        # 20e020 <s_tss_descriptors>
  2013b3:	e8 d2 1b 00 00       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2013b8:	90                   	nop
  2013b9:	5d                   	pop    rbp
  2013ba:	c3                   	ret    

00000000002013bb <tss_install>:
  2013bb:	55                   	push   rbp
  2013bc:	48 89 e5             	mov    rbp,rsp
  2013bf:	48 83 ec 20          	sub    rsp,0x20
  2013c3:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  2013c6:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  2013ca:	e8 fa 18 00 00       	call   202cc9 <request_page>
  2013cf:	48 05 00 10 00 00    	add    rax,0x1000
  2013d5:	48 89 05 ac cc 00 00 	mov    QWORD PTR [rip+0xccac],rax        # 20e088 <isr_stack>
  2013dc:	e8 e8 18 00 00       	call   202cc9 <request_page>
  2013e1:	48 05 00 10 00 00    	add    rax,0x1000
  2013e7:	48 89 05 a2 cc 00 00 	mov    QWORD PTR [rip+0xcca2],rax        # 20e090 <irq_stack>
  2013ee:	e8 d6 18 00 00       	call   202cc9 <request_page>
  2013f3:	48 05 00 10 00 00    	add    rax,0x1000
  2013f9:	48 89 05 98 cc 00 00 	mov    QWORD PTR [rip+0xcc98],rax        # 20e098 <sgi_stack>
  201400:	48 8b 05 81 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc81]        # 20e088 <isr_stack>
  201407:	48 2d 00 10 00 00    	sub    rax,0x1000
  20140d:	48 89 c1             	mov    rcx,rax
  201410:	48 8b 05 71 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc71]        # 20e088 <isr_stack>
  201417:	48 2d 00 10 00 00    	sub    rax,0x1000
  20141d:	ba 00 00 00 00       	mov    edx,0x0
  201422:	48 89 ce             	mov    rsi,rcx
  201425:	48 89 c7             	mov    rdi,rax
  201428:	e8 21 1c 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  20142d:	48 8b 05 5c cc 00 00 	mov    rax,QWORD PTR [rip+0xcc5c]        # 20e090 <irq_stack>
  201434:	48 2d 00 10 00 00    	sub    rax,0x1000
  20143a:	48 89 c1             	mov    rcx,rax
  20143d:	48 8b 05 4c cc 00 00 	mov    rax,QWORD PTR [rip+0xcc4c]        # 20e090 <irq_stack>
  201444:	48 2d 00 10 00 00    	sub    rax,0x1000
  20144a:	ba 00 00 00 00       	mov    edx,0x0
  20144f:	48 89 ce             	mov    rsi,rcx
  201452:	48 89 c7             	mov    rdi,rax
  201455:	e8 f4 1b 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  20145a:	48 8b 05 37 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc37]        # 20e098 <sgi_stack>
  201461:	48 2d 00 10 00 00    	sub    rax,0x1000
  201467:	48 89 c1             	mov    rcx,rax
  20146a:	48 8b 05 27 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc27]        # 20e098 <sgi_stack>
  201471:	48 2d 00 10 00 00    	sub    rax,0x1000
  201477:	ba 00 00 00 00       	mov    edx,0x0
  20147c:	48 89 ce             	mov    rsi,rcx
  20147f:	48 89 c7             	mov    rdi,rax
  201482:	e8 c7 1b 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  201487:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20148a:	48 63 d0             	movsxd rdx,eax
  20148d:	48 89 d0             	mov    rax,rdx
  201490:	48 01 c0             	add    rax,rax
  201493:	48 01 d0             	add    rax,rdx
  201496:	48 c1 e0 02          	shl    rax,0x2
  20149a:	48 01 d0             	add    rax,rdx
  20149d:	48 c1 e0 03          	shl    rax,0x3
  2014a1:	48 8d 15 78 cb 00 00 	lea    rdx,[rip+0xcb78]        # 20e020 <s_tss_descriptors>
  2014a8:	48 01 d0             	add    rax,rdx
  2014ab:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2014af:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2014b3:	ba 68 00 00 00       	mov    edx,0x68
  2014b8:	be 00 00 00 00       	mov    esi,0x0
  2014bd:	48 89 c7             	mov    rdi,rax
  2014c0:	e8 c5 1a 00 00       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2014c5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2014c9:	be 68 00 00 00       	mov    esi,0x68
  2014ce:	48 89 c7             	mov    rdi,rax
  2014d1:	e8 6d 03 00 00       	call   201843 <cpu::gdt::gdt_install_tss(unsigned long, unsigned long)>
  2014d6:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  2014d9:	48 63 d0             	movsxd rdx,eax
  2014dc:	48 89 d0             	mov    rax,rdx
  2014df:	48 01 c0             	add    rax,rax
  2014e2:	48 01 d0             	add    rax,rdx
  2014e5:	48 c1 e0 02          	shl    rax,0x2
  2014e9:	48 01 d0             	add    rax,rdx
  2014ec:	48 c1 e0 03          	shl    rax,0x3
  2014f0:	48 89 c1             	mov    rcx,rax
  2014f3:	48 8d 15 26 cb 00 00 	lea    rdx,[rip+0xcb26]        # 20e020 <s_tss_descriptors>
  2014fa:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2014fe:	48 89 44 11 04       	mov    QWORD PTR [rcx+rdx*1+0x4],rax
  201503:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  201506:	48 63 d0             	movsxd rdx,eax
  201509:	48 89 d0             	mov    rax,rdx
  20150c:	48 01 c0             	add    rax,rax
  20150f:	48 01 d0             	add    rax,rdx
  201512:	48 c1 e0 02          	shl    rax,0x2
  201516:	48 01 d0             	add    rax,rdx
  201519:	48 c1 e0 03          	shl    rax,0x3
  20151d:	48 89 c2             	mov    rdx,rax
  201520:	48 8d 05 5f cb 00 00 	lea    rax,[rip+0xcb5f]        # 20e086 <s_tss_descriptors+0x66>
  201527:	66 c7 04 02 68 00    	mov    WORD PTR [rdx+rax*1],0x68
  20152d:	48 8b 05 54 cb 00 00 	mov    rax,QWORD PTR [rip+0xcb54]        # 20e088 <isr_stack>
  201534:	48 89 c1             	mov    rcx,rax
  201537:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20153a:	48 63 d0             	movsxd rdx,eax
  20153d:	48 89 d0             	mov    rax,rdx
  201540:	48 01 c0             	add    rax,rax
  201543:	48 01 d0             	add    rax,rdx
  201546:	48 c1 e0 02          	shl    rax,0x2
  20154a:	48 01 d0             	add    rax,rdx
  20154d:	48 c1 e0 03          	shl    rax,0x3
  201551:	48 89 c2             	mov    rdx,rax
  201554:	48 8d 05 e5 ca 00 00 	lea    rax,[rip+0xcae5]        # 20e040 <s_tss_descriptors+0x20>
  20155b:	48 89 4c 02 04       	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  201560:	48 8b 05 29 cb 00 00 	mov    rax,QWORD PTR [rip+0xcb29]        # 20e090 <irq_stack>
  201567:	48 89 c1             	mov    rcx,rax
  20156a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20156d:	48 63 d0             	movsxd rdx,eax
  201570:	48 89 d0             	mov    rax,rdx
  201573:	48 01 c0             	add    rax,rax
  201576:	48 01 d0             	add    rax,rdx
  201579:	48 c1 e0 02          	shl    rax,0x2
  20157d:	48 01 d0             	add    rax,rdx
  201580:	48 c1 e0 03          	shl    rax,0x3
  201584:	48 89 c2             	mov    rdx,rax
  201587:	48 8d 05 ba ca 00 00 	lea    rax,[rip+0xcaba]        # 20e048 <s_tss_descriptors+0x28>
  20158e:	48 89 4c 02 04       	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  201593:	48 8b 05 fe ca 00 00 	mov    rax,QWORD PTR [rip+0xcafe]        # 20e098 <sgi_stack>
  20159a:	48 89 c1             	mov    rcx,rax
  20159d:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  2015a0:	48 63 d0             	movsxd rdx,eax
  2015a3:	48 89 d0             	mov    rax,rdx
  2015a6:	48 01 c0             	add    rax,rax
  2015a9:	48 01 d0             	add    rax,rdx
  2015ac:	48 c1 e0 02          	shl    rax,0x2
  2015b0:	48 01 d0             	add    rax,rdx
  2015b3:	48 c1 e0 03          	shl    rax,0x3
  2015b7:	48 89 c2             	mov    rdx,rax
  2015ba:	48 8d 05 8f ca 00 00 	lea    rax,[rip+0xca8f]        # 20e050 <s_tss_descriptors+0x30>
  2015c1:	48 89 4c 02 04       	mov    QWORD PTR [rdx+rax*1+0x4],rcx
  2015c6:	bf 28 00 00 00       	mov    edi,0x28
  2015cb:	e8 17 71 00 00       	call   2086e7 <load_tss>
  2015d0:	90                   	nop
  2015d1:	c9                   	leave  
  2015d2:	c3                   	ret    

00000000002015d3 <cpu::tss::tss_setstack(int, unsigned long)>:
  2015d3:	55                   	push   rbp
  2015d4:	48 89 e5             	mov    rbp,rsp
  2015d7:	48 83 ec 10          	sub    rsp,0x10
  2015db:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  2015de:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  2015e2:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2015e5:	48 63 d0             	movsxd rdx,eax
  2015e8:	48 89 d0             	mov    rax,rdx
  2015eb:	48 01 c0             	add    rax,rax
  2015ee:	48 01 d0             	add    rax,rdx
  2015f1:	48 c1 e0 02          	shl    rax,0x2
  2015f5:	48 01 d0             	add    rax,rdx
  2015f8:	48 c1 e0 03          	shl    rax,0x3
  2015fc:	48 89 c1             	mov    rcx,rax
  2015ff:	48 8d 15 1a ca 00 00 	lea    rdx,[rip+0xca1a]        # 20e020 <s_tss_descriptors>
  201606:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20160a:	48 89 44 11 04       	mov    QWORD PTR [rcx+rdx*1+0x4],rax
  20160f:	90                   	nop
  201610:	c9                   	leave  
  201611:	c3                   	ret    

0000000000201612 <tss_get>:
  201612:	55                   	push   rbp
  201613:	48 89 e5             	mov    rbp,rsp
  201616:	48 83 ec 08          	sub    rsp,0x8
  20161a:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  20161d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  201620:	48 63 d0             	movsxd rdx,eax
  201623:	48 89 d0             	mov    rax,rdx
  201626:	48 01 c0             	add    rax,rax
  201629:	48 01 d0             	add    rax,rdx
  20162c:	48 c1 e0 02          	shl    rax,0x2
  201630:	48 01 d0             	add    rax,rdx
  201633:	48 c1 e0 03          	shl    rax,0x3
  201637:	48 8d 15 e2 c9 00 00 	lea    rdx,[rip+0xc9e2]        # 20e020 <s_tss_descriptors>
  20163e:	48 01 d0             	add    rax,rdx
  201641:	c9                   	leave  
  201642:	c3                   	ret    

0000000000201643 <userspace_debug_catch>:
  201643:	55                   	push   rbp
  201644:	48 89 e5             	mov    rbp,rsp
  201647:	90                   	nop
  201648:	5d                   	pop    rbp
  201649:	c3                   	ret    

000000000020164a <gdt_init>:
  20164a:	55                   	push   rbp
  20164b:	48 89 e5             	mov    rbp,rsp
  20164e:	66 c7 05 29 da 00 00 	mov    WORD PTR [rip+0xda29],0x7f        # 20f080 <s_gdt>
  201655:	7f 00 
  201657:	48 8d 05 a2 d9 00 00 	lea    rax,[rip+0xd9a2]        # 20f000 <s_gdt_descriptors>
  20165e:	48 89 05 1d da 00 00 	mov    QWORD PTR [rip+0xda1d],rax        # 20f082 <s_gdt+0x2>
  201665:	b9 00 00 00 00       	mov    ecx,0x0
  20166a:	ba 00 00 00 00       	mov    edx,0x0
  20166f:	be 00 00 00 00       	mov    esi,0x0
  201674:	bf 00 00 00 00       	mov    edi,0x0
  201679:	e8 73 00 00 00       	call   2016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>
  20167e:	b9 a0 00 00 00       	mov    ecx,0xa0
  201683:	ba 9a 00 00 00       	mov    edx,0x9a
  201688:	be 00 00 00 00       	mov    esi,0x0
  20168d:	bf 00 00 00 00       	mov    edi,0x0
  201692:	e8 5a 00 00 00       	call   2016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>
  201697:	b9 a0 00 00 00       	mov    ecx,0xa0
  20169c:	ba 92 00 00 00       	mov    edx,0x92
  2016a1:	be 00 00 00 00       	mov    esi,0x0
  2016a6:	bf 00 00 00 00       	mov    edi,0x0
  2016ab:	e8 41 00 00 00       	call   2016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>
  2016b0:	b9 a0 00 00 00       	mov    ecx,0xa0
  2016b5:	ba f2 00 00 00       	mov    edx,0xf2
  2016ba:	be 00 00 00 00       	mov    esi,0x0
  2016bf:	bf 00 00 00 00       	mov    edi,0x0
  2016c4:	e8 28 00 00 00       	call   2016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>
  2016c9:	b9 a0 00 00 00       	mov    ecx,0xa0
  2016ce:	ba fa 00 00 00       	mov    edx,0xfa
  2016d3:	be 00 00 00 00       	mov    esi,0x0
  2016d8:	bf 00 00 00 00       	mov    edi,0x0
  2016dd:	e8 0f 00 00 00       	call   2016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>
  2016e2:	48 8d 3d 97 d9 00 00 	lea    rdi,[rip+0xd997]        # 20f080 <s_gdt>
  2016e9:	e8 e2 6f 00 00       	call   2086d0 <load_gdt>
  2016ee:	90                   	nop
  2016ef:	5d                   	pop    rbp
  2016f0:	c3                   	ret    

00000000002016f1 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)>:
  2016f1:	55                   	push   rbp
  2016f2:	48 89 e5             	mov    rbp,rsp
  2016f5:	48 83 ec 18          	sub    rsp,0x18
  2016f9:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  2016fd:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  201701:	89 c8                	mov    eax,ecx
  201703:	88 55 ec             	mov    BYTE PTR [rbp-0x14],dl
  201706:	88 45 e8             	mov    BYTE PTR [rbp-0x18],al
  201709:	8b 05 7d d9 00 00    	mov    eax,DWORD PTR [rip+0xd97d]        # 20f08c <s_gdt_index>
  20170f:	83 f8 0f             	cmp    eax,0xf
  201712:	0f 87 28 01 00 00    	ja     201840 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)+0x14f>
  201718:	8b 15 6e d9 00 00    	mov    edx,DWORD PTR [rip+0xd96e]        # 20f08c <s_gdt_index>
  20171e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201722:	89 c1                	mov    ecx,eax
  201724:	89 d0                	mov    eax,edx
  201726:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  20172d:	00 
  20172e:	48 8d 05 cd d8 00 00 	lea    rax,[rip+0xd8cd]        # 20f002 <s_gdt_descriptors+0x2>
  201735:	66 89 0c 02          	mov    WORD PTR [rdx+rax*1],cx
  201739:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20173d:	48 c1 e8 10          	shr    rax,0x10
  201741:	48 89 c2             	mov    rdx,rax
  201744:	8b 05 42 d9 00 00    	mov    eax,DWORD PTR [rip+0xd942]        # 20f08c <s_gdt_index>
  20174a:	89 d1                	mov    ecx,edx
  20174c:	89 c0                	mov    eax,eax
  20174e:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  201755:	00 
  201756:	48 8d 05 a7 d8 00 00 	lea    rax,[rip+0xd8a7]        # 20f004 <s_gdt_descriptors+0x4>
  20175d:	88 0c 02             	mov    BYTE PTR [rdx+rax*1],cl
  201760:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201764:	48 c1 e8 18          	shr    rax,0x18
  201768:	48 89 c2             	mov    rdx,rax
  20176b:	8b 05 1b d9 00 00    	mov    eax,DWORD PTR [rip+0xd91b]        # 20f08c <s_gdt_index>
  201771:	89 d1                	mov    ecx,edx
  201773:	89 c0                	mov    eax,eax
  201775:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  20177c:	00 
  20177d:	48 8d 05 83 d8 00 00 	lea    rax,[rip+0xd883]        # 20f007 <s_gdt_descriptors+0x7>
  201784:	88 0c 02             	mov    BYTE PTR [rdx+rax*1],cl
  201787:	8b 15 ff d8 00 00    	mov    edx,DWORD PTR [rip+0xd8ff]        # 20f08c <s_gdt_index>
  20178d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201791:	89 c1                	mov    ecx,eax
  201793:	89 d0                	mov    eax,edx
  201795:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  20179c:	00 
  20179d:	48 8d 05 5c d8 00 00 	lea    rax,[rip+0xd85c]        # 20f000 <s_gdt_descriptors>
  2017a4:	66 89 0c 02          	mov    WORD PTR [rdx+rax*1],cx
  2017a8:	8b 05 de d8 00 00    	mov    eax,DWORD PTR [rip+0xd8de]        # 20f08c <s_gdt_index>
  2017ae:	89 c0                	mov    eax,eax
  2017b0:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
  2017b7:	00 
  2017b8:	48 8d 15 46 d8 00 00 	lea    rdx,[rip+0xd846]        # 20f005 <s_gdt_descriptors+0x5>
  2017bf:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  2017c3:	88 04 11             	mov    BYTE PTR [rcx+rdx*1],al
  2017c6:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2017ca:	48 c1 e8 10          	shr    rax,0x10
  2017ce:	89 c2                	mov    edx,eax
  2017d0:	8b 05 b6 d8 00 00    	mov    eax,DWORD PTR [rip+0xd8b6]        # 20f08c <s_gdt_index>
  2017d6:	89 d1                	mov    ecx,edx
  2017d8:	83 e1 0f             	and    ecx,0xf
  2017db:	89 c0                	mov    eax,eax
  2017dd:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2017e4:	00 
  2017e5:	48 8d 05 1a d8 00 00 	lea    rax,[rip+0xd81a]        # 20f006 <s_gdt_descriptors+0x6>
  2017ec:	88 0c 02             	mov    BYTE PTR [rdx+rax*1],cl
  2017ef:	8b 05 97 d8 00 00    	mov    eax,DWORD PTR [rip+0xd897]        # 20f08c <s_gdt_index>
  2017f5:	89 c0                	mov    eax,eax
  2017f7:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2017fe:	00 
  2017ff:	48 8d 05 00 d8 00 00 	lea    rax,[rip+0xd800]        # 20f006 <s_gdt_descriptors+0x6>
  201806:	0f b6 14 02          	movzx  edx,BYTE PTR [rdx+rax*1]
  20180a:	0f b6 45 e8          	movzx  eax,BYTE PTR [rbp-0x18]
  20180e:	83 e0 f0             	and    eax,0xfffffff0
  201811:	89 c1                	mov    ecx,eax
  201813:	8b 05 73 d8 00 00    	mov    eax,DWORD PTR [rip+0xd873]        # 20f08c <s_gdt_index>
  201819:	09 d1                	or     ecx,edx
  20181b:	89 c0                	mov    eax,eax
  20181d:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  201824:	00 
  201825:	48 8d 05 da d7 00 00 	lea    rax,[rip+0xd7da]        # 20f006 <s_gdt_descriptors+0x6>
  20182c:	88 0c 02             	mov    BYTE PTR [rdx+rax*1],cl
  20182f:	8b 05 57 d8 00 00    	mov    eax,DWORD PTR [rip+0xd857]        # 20f08c <s_gdt_index>
  201835:	83 c0 01             	add    eax,0x1
  201838:	89 05 4e d8 00 00    	mov    DWORD PTR [rip+0xd84e],eax        # 20f08c <s_gdt_index>
  20183e:	eb 01                	jmp    201841 <cpu::gdt::gdt_install_descriptor(unsigned long, unsigned long, unsigned char, unsigned char)+0x150>
  201840:	90                   	nop
  201841:	c9                   	leave  
  201842:	c3                   	ret    

0000000000201843 <cpu::gdt::gdt_install_tss(unsigned long, unsigned long)>:
  201843:	55                   	push   rbp
  201844:	48 89 e5             	mov    rbp,rsp
  201847:	48 83 ec 20          	sub    rsp,0x20
  20184b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  20184f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  201853:	66 c7 45 fe 89 00    	mov    WORD PTR [rbp-0x2],0x89
  201859:	8b 05 2d d8 00 00    	mov    eax,DWORD PTR [rip+0xd82d]        # 20f08c <s_gdt_index>
  20185f:	89 c0                	mov    eax,eax
  201861:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  201868:	00 
  201869:	48 8d 05 90 d7 00 00 	lea    rax,[rip+0xd790]        # 20f000 <s_gdt_descriptors>
  201870:	48 01 d0             	add    rax,rdx
  201873:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  201877:	8b 05 0f d8 00 00    	mov    eax,DWORD PTR [rip+0xd80f]        # 20f08c <s_gdt_index>
  20187d:	83 f8 0f             	cmp    eax,0xf
  201880:	0f 87 8b 00 00 00    	ja     201911 <cpu::gdt::gdt_install_tss(unsigned long, unsigned long)+0xce>
  201886:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  20188a:	89 c2                	mov    edx,eax
  20188c:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201890:	88 50 05             	mov    BYTE PTR [rax+0x5],dl
  201893:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201897:	89 c2                	mov    edx,eax
  201899:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20189d:	66 89 50 02          	mov    WORD PTR [rax+0x2],dx
  2018a1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2018a5:	48 c1 e8 10          	shr    rax,0x10
  2018a9:	89 c2                	mov    edx,eax
  2018ab:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018af:	88 50 04             	mov    BYTE PTR [rax+0x4],dl
  2018b2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2018b6:	48 c1 e8 18          	shr    rax,0x18
  2018ba:	89 c2                	mov    edx,eax
  2018bc:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018c0:	88 50 07             	mov    BYTE PTR [rax+0x7],dl
  2018c3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2018c7:	48 c1 e8 20          	shr    rax,0x20
  2018cb:	89 c2                	mov    edx,eax
  2018cd:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018d1:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  2018d4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2018d8:	89 c2                	mov    edx,eax
  2018da:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018de:	66 89 10             	mov    WORD PTR [rax],dx
  2018e1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2018e5:	48 c1 e8 10          	shr    rax,0x10
  2018e9:	83 e0 0f             	and    eax,0xf
  2018ec:	89 c2                	mov    edx,eax
  2018ee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018f2:	88 50 06             	mov    BYTE PTR [rax+0x6],dl
  2018f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2018f9:	c7 40 0c 00 00 00 00 	mov    DWORD PTR [rax+0xc],0x0
  201900:	8b 05 86 d7 00 00    	mov    eax,DWORD PTR [rip+0xd786]        # 20f08c <s_gdt_index>
  201906:	83 c0 02             	add    eax,0x2
  201909:	89 05 7d d7 00 00    	mov    DWORD PTR [rip+0xd77d],eax        # 20f08c <s_gdt_index>
  20190f:	eb 01                	jmp    201912 <cpu::gdt::gdt_install_tss(unsigned long, unsigned long)+0xcf>
  201911:	90                   	nop
  201912:	c9                   	leave  
  201913:	c3                   	ret    

0000000000201914 <io::outb(unsigned short, unsigned char)>:
  201914:	55                   	push   rbp
  201915:	48 89 e5             	mov    rbp,rsp
  201918:	48 83 ec 08          	sub    rsp,0x8
  20191c:	89 f8                	mov    eax,edi
  20191e:	89 f2                	mov    edx,esi
  201920:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  201924:	89 d0                	mov    eax,edx
  201926:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  201929:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  20192d:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  201931:	ee                   	out    dx,al
  201932:	90                   	nop
  201933:	c9                   	leave  
  201934:	c3                   	ret    

0000000000201935 <$get_symbol_label>:
  201935:	55                   	push   rbp
  201936:	48 89 e5             	mov    rbp,rsp
  201939:	48 83 ec 18          	sub    rsp,0x18
  20193d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  201941:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  201948:	48 c7 c2 60 c8 20 00 	mov    rdx,0x20c860
  20194f:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  201952:	48 98                	cdqe   
  201954:	48 c1 e0 04          	shl    rax,0x4
  201958:	48 01 d0             	add    rax,rdx
  20195b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20195e:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
  201962:	74 6d                	je     2019d1 <$get_symbol_label+0x9c>
  201964:	48 c7 c2 60 c8 20 00 	mov    rdx,0x20c860
  20196b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  20196e:	48 98                	cdqe   
  201970:	48 c1 e0 04          	shl    rax,0x4
  201974:	48 01 d0             	add    rax,rdx
  201977:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20197a:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  20197e:	72 48                	jb     2019c8 <$get_symbol_label+0x93>
  201980:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  201983:	83 c0 01             	add    eax,0x1
  201986:	48 c7 c2 60 c8 20 00 	mov    rdx,0x20c860
  20198d:	48 98                	cdqe   
  20198f:	48 c1 e0 04          	shl    rax,0x4
  201993:	48 01 d0             	add    rax,rdx
  201996:	48 8b 00             	mov    rax,QWORD PTR [rax]
  201999:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  20199d:	73 29                	jae    2019c8 <$get_symbol_label+0x93>
  20199f:	48 c7 c0 00 20 21 00 	mov    rax,0x212000
  2019a6:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  2019aa:	73 1c                	jae    2019c8 <$get_symbol_label+0x93>
  2019ac:	48 c7 c2 60 c8 20 00 	mov    rdx,0x20c860
  2019b3:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2019b6:	48 98                	cdqe   
  2019b8:	48 c1 e0 04          	shl    rax,0x4
  2019bc:	48 01 d0             	add    rax,rdx
  2019bf:	48 83 c0 08          	add    rax,0x8
  2019c3:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2019c6:	eb 10                	jmp    2019d8 <$get_symbol_label+0xa3>
  2019c8:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2019cc:	e9 77 ff ff ff       	jmp    201948 <$get_symbol_label+0x13>
  2019d1:	48 8d 05 ba 87 00 00 	lea    rax,[rip+0x87ba]        # 20a192 <BASE_GRAN+0x16a>
  2019d8:	c9                   	leave  
  2019d9:	c3                   	ret    

00000000002019da <exception_handler>:
  2019da:	55                   	push   rbp
  2019db:	48 89 e5             	mov    rbp,rsp
  2019de:	48 83 ec 20          	sub    rsp,0x20
  2019e2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2019e6:	e8 97 2b 00 00       	call   204582 <io::tty::clear()>
  2019eb:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2019ef:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  2019f3:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2019fa:	00 
  2019fb:	48 8d 05 fe bd 00 00 	lea    rax,[rip+0xbdfe]        # 20d800 <exception_messages>
  201a02:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  201a06:	48 89 c6             	mov    rsi,rax
  201a09:	48 8d 3d a0 87 00 00 	lea    rdi,[rip+0x87a0]        # 20a1b0 <BASE_GRAN+0x188>
  201a10:	b8 00 00 00 00       	mov    eax,0x0
  201a15:	e8 61 55 00 00       	call   206f7b <printf>
  201a1a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201a1e:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
  201a22:	48 89 c6             	mov    rsi,rax
  201a25:	48 8d 3d a7 87 00 00 	lea    rdi,[rip+0x87a7]        # 20a1d3 <BASE_GRAN+0x1ab>
  201a2c:	b8 00 00 00 00       	mov    eax,0x0
  201a31:	e8 45 55 00 00       	call   206f7b <printf>
  201a36:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201a3a:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  201a3e:	48 83 f8 0e          	cmp    rax,0xe
  201a42:	0f 85 d9 00 00 00    	jne    201b21 <exception_handler+0x147>
  201a48:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201a4c:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  201a50:	48 89 c6             	mov    rsi,rax
  201a53:	48 8d 3d 8e 87 00 00 	lea    rdi,[rip+0x878e]        # 20a1e8 <BASE_GRAN+0x1c0>
  201a5a:	b8 00 00 00 00       	mov    eax,0x0
  201a5f:	e8 17 55 00 00       	call   206f7b <printf>
  201a64:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201a68:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
  201a6c:	83 e0 01             	and    eax,0x1
  201a6f:	48 85 c0             	test   rax,rax
  201a72:	74 09                	je     201a7d <exception_handler+0xa3>
  201a74:	48 8d 05 8d 87 00 00 	lea    rax,[rip+0x878d]        # 20a208 <BASE_GRAN+0x1e0>
  201a7b:	eb 07                	jmp    201a84 <exception_handler+0xaa>
  201a7d:	48 8d 05 8e 87 00 00 	lea    rax,[rip+0x878e]        # 20a212 <BASE_GRAN+0x1ea>
  201a84:	48 89 c6             	mov    rsi,rax
  201a87:	48 8d 3d 90 87 00 00 	lea    rdi,[rip+0x8790]        # 20a21e <BASE_GRAN+0x1f6>
  201a8e:	b8 00 00 00 00       	mov    eax,0x0
  201a93:	e8 e3 54 00 00       	call   206f7b <printf>
  201a98:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201a9c:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
  201aa0:	83 e0 10             	and    eax,0x10
  201aa3:	48 85 c0             	test   rax,rax
  201aa6:	74 11                	je     201ab9 <exception_handler+0xdf>
  201aa8:	48 8d 3d 89 87 00 00 	lea    rdi,[rip+0x8789]        # 20a238 <BASE_GRAN+0x210>
  201aaf:	b8 00 00 00 00       	mov    eax,0x0
  201ab4:	e8 c2 54 00 00       	call   206f7b <printf>
  201ab9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201abd:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
  201ac1:	83 e0 02             	and    eax,0x2
  201ac4:	48 85 c0             	test   rax,rax
  201ac7:	74 09                	je     201ad2 <exception_handler+0xf8>
  201ac9:	48 8d 05 8d 87 00 00 	lea    rax,[rip+0x878d]        # 20a25d <BASE_GRAN+0x235>
  201ad0:	eb 07                	jmp    201ad9 <exception_handler+0xff>
  201ad2:	48 8d 05 8a 87 00 00 	lea    rax,[rip+0x878a]        # 20a263 <BASE_GRAN+0x23b>
  201ad9:	48 89 c6             	mov    rsi,rax
  201adc:	48 8d 3d 85 87 00 00 	lea    rdi,[rip+0x8785]        # 20a268 <BASE_GRAN+0x240>
  201ae3:	b8 00 00 00 00       	mov    eax,0x0
  201ae8:	e8 8e 54 00 00       	call   206f7b <printf>
  201aed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201af1:	48 8b 40 68          	mov    rax,QWORD PTR [rax+0x68]
  201af5:	83 e0 04             	and    eax,0x4
  201af8:	48 85 c0             	test   rax,rax
  201afb:	74 09                	je     201b06 <exception_handler+0x12c>
  201afd:	48 8d 05 76 87 00 00 	lea    rax,[rip+0x8776]        # 20a27a <BASE_GRAN+0x252>
  201b04:	eb 07                	jmp    201b0d <exception_handler+0x133>
  201b06:	48 8d 05 77 87 00 00 	lea    rax,[rip+0x8777]        # 20a284 <BASE_GRAN+0x25c>
  201b0d:	48 89 c6             	mov    rsi,rax
  201b10:	48 8d 3d 74 87 00 00 	lea    rdi,[rip+0x8774]        # 20a28b <BASE_GRAN+0x263>
  201b17:	b8 00 00 00 00       	mov    eax,0x0
  201b1c:	e8 5a 54 00 00       	call   206f7b <printf>
  201b21:	48 c7 c0 00 00 20 00 	mov    rax,0x200000
  201b28:	48 2d 00 00 20 00    	sub    rax,0x200000
  201b2e:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  201b32:	48 8d 3d 67 87 00 00 	lea    rdi,[rip+0x8767]        # 20a2a0 <BASE_GRAN+0x278>
  201b39:	b8 00 00 00 00       	mov    eax,0x0
  201b3e:	e8 38 54 00 00       	call   206f7b <printf>
  201b43:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201b47:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
  201b4b:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
  201b4f:	48 89 c6             	mov    rsi,rax
  201b52:	48 8d 3d 71 87 00 00 	lea    rdi,[rip+0x8771]        # 20a2ca <BASE_GRAN+0x2a2>
  201b59:	b8 00 00 00 00       	mov    eax,0x0
  201b5e:	e8 18 54 00 00       	call   206f7b <printf>
  201b63:	48 8d 3d 6c 87 00 00 	lea    rdi,[rip+0x876c]        # 20a2d6 <BASE_GRAN+0x2ae>
  201b6a:	b8 00 00 00 00       	mov    eax,0x0
  201b6f:	e8 07 54 00 00       	call   206f7b <printf>
  201b74:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201b78:	48 8b 40 70          	mov    rax,QWORD PTR [rax+0x70]
  201b7c:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
  201b80:	48 89 c7             	mov    rdi,rax
  201b83:	e8 ad fd ff ff       	call   201935 <$get_symbol_label>
  201b88:	48 89 c6             	mov    rsi,rax
  201b8b:	48 8d 3d 58 87 00 00 	lea    rdi,[rip+0x8758]        # 20a2ea <BASE_GRAN+0x2c2>
  201b92:	b8 00 00 00 00       	mov    eax,0x0
  201b97:	e8 df 53 00 00       	call   206f7b <printf>
  201b9c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  201ba0:	48 8b 40 38          	mov    rax,QWORD PTR [rax+0x38]
  201ba4:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  201ba8:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  201bad:	74 38                	je     201be7 <exception_handler+0x20d>
  201baf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201bb3:	48 83 c0 08          	add    rax,0x8
  201bb7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  201bba:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
  201bbe:	48 89 c7             	mov    rdi,rax
  201bc1:	e8 6f fd ff ff       	call   201935 <$get_symbol_label>
  201bc6:	48 89 c6             	mov    rsi,rax
  201bc9:	48 8d 3d 1a 87 00 00 	lea    rdi,[rip+0x871a]        # 20a2ea <BASE_GRAN+0x2c2>
  201bd0:	b8 00 00 00 00       	mov    eax,0x0
  201bd5:	e8 a1 53 00 00       	call   206f7b <printf>
  201bda:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201bde:	48 8b 00             	mov    rax,QWORD PTR [rax]
  201be1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  201be5:	eb c1                	jmp    201ba8 <exception_handler+0x1ce>
  201be7:	90                   	nop
  201be8:	fa                   	cli    
  201be9:	f4                   	hlt    
  201bea:	e8 4e 26 00 00       	call   20423d <restart_cold>
  201bef:	90                   	nop
  201bf0:	c9                   	leave  
  201bf1:	c3                   	ret    

0000000000201bf2 <isr_handler>:
  201bf2:	55                   	push   rbp
  201bf3:	48 89 e5             	mov    rbp,rsp
  201bf6:	48 83 ec 10          	sub    rsp,0x10
  201bfa:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  201bfe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201c02:	48 89 c7             	mov    rdi,rax
  201c05:	e8 d0 fd ff ff       	call   2019da <exception_handler>
  201c0a:	90                   	nop
  201c0b:	c9                   	leave  
  201c0c:	c3                   	ret    

0000000000201c0d <irq_handler>:
  201c0d:	55                   	push   rbp
  201c0e:	48 89 e5             	mov    rbp,rsp
  201c11:	48 83 ec 10          	sub    rsp,0x10
  201c15:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  201c19:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201c1d:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  201c21:	48 83 f8 20          	cmp    rax,0x20
  201c25:	75 56                	jne    201c7d <irq_handler+0x70>
  201c27:	48 c7 c0 28 01 21 00 	mov    rax,0x210128
  201c2e:	48 8b 00             	mov    rax,QWORD PTR [rax]
  201c31:	48 8d 50 01          	lea    rdx,[rax+0x1]
  201c35:	48 c7 c0 28 01 21 00 	mov    rax,0x210128
  201c3c:	48 89 10             	mov    QWORD PTR [rax],rdx
  201c3f:	8b 05 67 e4 00 00    	mov    eax,DWORD PTR [rip+0xe467]        # 2100ac <milliseconds>
  201c45:	83 c0 01             	add    eax,0x1
  201c48:	89 05 5e e4 00 00    	mov    DWORD PTR [rip+0xe45e],eax        # 2100ac <milliseconds>
  201c4e:	8b 15 58 e4 00 00    	mov    edx,DWORD PTR [rip+0xe458]        # 2100ac <milliseconds>
  201c54:	48 c7 c0 1c 01 21 00 	mov    rax,0x21011c
  201c5b:	8b 00                	mov    eax,DWORD PTR [rax]
  201c5d:	39 c2                	cmp    edx,eax
  201c5f:	72 1c                	jb     201c7d <irq_handler+0x70>
  201c61:	c7 05 41 e4 00 00 00 	mov    DWORD PTR [rip+0xe441],0x0        # 2100ac <milliseconds>
  201c68:	00 00 00 
  201c6b:	48 8b 05 3e e4 00 00 	mov    rax,QWORD PTR [rip+0xe43e]        # 2100b0 <seconds>
  201c72:	48 83 c0 01          	add    rax,0x1
  201c76:	48 89 05 33 e4 00 00 	mov    QWORD PTR [rip+0xe433],rax        # 2100b0 <seconds>
  201c7d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201c81:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  201c85:	48 83 f8 21          	cmp    rax,0x21
  201c89:	75 05                	jne    201c90 <irq_handler+0x83>
  201c8b:	e8 51 62 00 00       	call   207ee1 <kbd_irq_handler>
  201c90:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201c94:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  201c98:	48 83 f8 24          	cmp    rax,0x24
  201c9c:	75 05                	jne    201ca3 <irq_handler+0x96>
  201c9e:	e8 f5 65 00 00       	call   208298 <io::serial::console::read_character()>
  201ca3:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  201ca7:	48 8b 40 60          	mov    rax,QWORD PTR [rax+0x60]
  201cab:	48 83 f8 27          	cmp    rax,0x27
  201caf:	76 0f                	jbe    201cc0 <irq_handler+0xb3>
  201cb1:	be 20 00 00 00       	mov    esi,0x20
  201cb6:	bf a0 00 00 00       	mov    edi,0xa0
  201cbb:	e8 54 fc ff ff       	call   201914 <io::outb(unsigned short, unsigned char)>
  201cc0:	be 20 00 00 00       	mov    esi,0x20
  201cc5:	bf 20 00 00 00       	mov    edi,0x20
  201cca:	e8 45 fc ff ff       	call   201914 <io::outb(unsigned short, unsigned char)>
  201ccf:	90                   	nop
  201cd0:	c9                   	leave  
  201cd1:	c3                   	ret    

0000000000201cd2 <idt_set>:
  201cd2:	55                   	push   rbp
  201cd3:	48 89 e5             	mov    rbp,rsp
  201cd6:	48 83 ec 18          	sub    rsp,0x18
  201cda:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  201cde:	89 d0                	mov    eax,edx
  201ce0:	89 ca                	mov    edx,ecx
  201ce2:	89 f9                	mov    ecx,edi
  201ce4:	88 4d fc             	mov    BYTE PTR [rbp-0x4],cl
  201ce7:	66 89 45 f8          	mov    WORD PTR [rbp-0x8],ax
  201ceb:	89 d0                	mov    eax,edx
  201ced:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
  201cf0:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201cf4:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  201cf8:	89 d1                	mov    ecx,edx
  201cfa:	48 98                	cdqe   
  201cfc:	48 c1 e0 04          	shl    rax,0x4
  201d00:	48 89 c2             	mov    rdx,rax
  201d03:	48 8d 05 96 d3 00 00 	lea    rax,[rip+0xd396]        # 20f0a0 <idt_s>
  201d0a:	66 89 0c 02          	mov    WORD PTR [rdx+rax*1],cx
  201d0e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201d12:	48 c1 e8 10          	shr    rax,0x10
  201d16:	48 89 c2             	mov    rdx,rax
  201d19:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201d1d:	89 d1                	mov    ecx,edx
  201d1f:	48 98                	cdqe   
  201d21:	48 c1 e0 04          	shl    rax,0x4
  201d25:	48 89 c2             	mov    rdx,rax
  201d28:	48 8d 05 77 d3 00 00 	lea    rax,[rip+0xd377]        # 20f0a6 <idt_s+0x6>
  201d2f:	66 89 0c 02          	mov    WORD PTR [rdx+rax*1],cx
  201d33:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  201d37:	48 c1 e8 20          	shr    rax,0x20
  201d3b:	48 89 c2             	mov    rdx,rax
  201d3e:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201d42:	89 d1                	mov    ecx,edx
  201d44:	48 98                	cdqe   
  201d46:	48 c1 e0 04          	shl    rax,0x4
  201d4a:	48 89 c2             	mov    rdx,rax
  201d4d:	48 8d 05 54 d3 00 00 	lea    rax,[rip+0xd354]        # 20f0a8 <idt_s+0x8>
  201d54:	89 0c 02             	mov    DWORD PTR [rdx+rax*1],ecx
  201d57:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201d5b:	48 98                	cdqe   
  201d5d:	48 c1 e0 04          	shl    rax,0x4
  201d61:	48 89 c1             	mov    rcx,rax
  201d64:	48 8d 15 37 d3 00 00 	lea    rdx,[rip+0xd337]        # 20f0a2 <idt_s+0x2>
  201d6b:	0f b7 45 f8          	movzx  eax,WORD PTR [rbp-0x8]
  201d6f:	66 89 04 11          	mov    WORD PTR [rcx+rdx*1],ax
  201d73:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201d77:	48 98                	cdqe   
  201d79:	48 c1 e0 04          	shl    rax,0x4
  201d7d:	48 89 c1             	mov    rcx,rax
  201d80:	48 8d 15 1e d3 00 00 	lea    rdx,[rip+0xd31e]        # 20f0a5 <idt_s+0x5>
  201d87:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  201d8b:	88 04 11             	mov    BYTE PTR [rcx+rdx*1],al
  201d8e:	80 7d fc 1f          	cmp    BYTE PTR [rbp-0x4],0x1f
  201d92:	77 1a                	ja     201dae <idt_set+0xdc>
  201d94:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201d98:	48 98                	cdqe   
  201d9a:	48 c1 e0 04          	shl    rax,0x4
  201d9e:	48 89 c2             	mov    rdx,rax
  201da1:	48 8d 05 fc d2 00 00 	lea    rax,[rip+0xd2fc]        # 20f0a4 <idt_s+0x4>
  201da8:	c6 04 02 01          	mov    BYTE PTR [rdx+rax*1],0x1
  201dac:	eb 38                	jmp    201de6 <idt_set+0x114>
  201dae:	80 7d fc 2f          	cmp    BYTE PTR [rbp-0x4],0x2f
  201db2:	77 1a                	ja     201dce <idt_set+0xfc>
  201db4:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201db8:	48 98                	cdqe   
  201dba:	48 c1 e0 04          	shl    rax,0x4
  201dbe:	48 89 c2             	mov    rdx,rax
  201dc1:	48 8d 05 dc d2 00 00 	lea    rax,[rip+0xd2dc]        # 20f0a4 <idt_s+0x4>
  201dc8:	c6 04 02 02          	mov    BYTE PTR [rdx+rax*1],0x2
  201dcc:	eb 18                	jmp    201de6 <idt_set+0x114>
  201dce:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201dd2:	48 98                	cdqe   
  201dd4:	48 c1 e0 04          	shl    rax,0x4
  201dd8:	48 89 c2             	mov    rdx,rax
  201ddb:	48 8d 05 c2 d2 00 00 	lea    rax,[rip+0xd2c2]        # 20f0a4 <idt_s+0x4>
  201de2:	c6 04 02 03          	mov    BYTE PTR [rdx+rax*1],0x3
  201de6:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  201dea:	48 98                	cdqe   
  201dec:	48 c1 e0 04          	shl    rax,0x4
  201df0:	48 89 c2             	mov    rdx,rax
  201df3:	48 8d 05 b2 d2 00 00 	lea    rax,[rip+0xd2b2]        # 20f0ac <idt_s+0xc>
  201dfa:	c7 04 02 00 00 00 00 	mov    DWORD PTR [rdx+rax*1],0x0
  201e01:	90                   	nop
  201e02:	c9                   	leave  
  201e03:	c3                   	ret    

0000000000201e04 <load_idt>:
  201e04:	55                   	push   rbp
  201e05:	48 89 e5             	mov    rbp,rsp
  201e08:	66 c7 05 8f e2 00 00 	mov    WORD PTR [rip+0xe28f],0xfff        # 2100a0 <idtPointer>
  201e0f:	ff 0f 
  201e11:	48 8d 05 88 d2 00 00 	lea    rax,[rip+0xd288]        # 20f0a0 <idt_s>
  201e18:	48 89 05 83 e2 00 00 	mov    QWORD PTR [rip+0xe283],rax        # 2100a2 <idtPointer+0x2>
  201e1f:	ba 00 10 00 00       	mov    edx,0x1000
  201e24:	be 00 00 00 00       	mov    esi,0x0
  201e29:	48 8d 3d 70 d2 00 00 	lea    rdi,[rip+0xd270]        # 20f0a0 <idt_s>
  201e30:	e8 55 11 00 00       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  201e35:	48 c7 c0 a4 83 20 00 	mov    rax,0x2083a4
  201e3c:	b9 8e 00 00 00       	mov    ecx,0x8e
  201e41:	ba 08 00 00 00       	mov    edx,0x8
  201e46:	48 89 c6             	mov    rsi,rax
  201e49:	bf 00 00 00 00       	mov    edi,0x0
  201e4e:	e8 7f fe ff ff       	call   201cd2 <idt_set>
  201e53:	48 c7 c0 b2 83 20 00 	mov    rax,0x2083b2
  201e5a:	b9 8e 00 00 00       	mov    ecx,0x8e
  201e5f:	ba 08 00 00 00       	mov    edx,0x8
  201e64:	48 89 c6             	mov    rsi,rax
  201e67:	bf 01 00 00 00       	mov    edi,0x1
  201e6c:	e8 61 fe ff ff       	call   201cd2 <idt_set>
  201e71:	48 c7 c0 b4 83 20 00 	mov    rax,0x2083b4
  201e78:	b9 8e 00 00 00       	mov    ecx,0x8e
  201e7d:	ba 08 00 00 00       	mov    edx,0x8
  201e82:	48 89 c6             	mov    rsi,rax
  201e85:	bf 02 00 00 00       	mov    edi,0x2
  201e8a:	e8 43 fe ff ff       	call   201cd2 <idt_set>
  201e8f:	48 c7 c0 c2 83 20 00 	mov    rax,0x2083c2
  201e96:	b9 8e 00 00 00       	mov    ecx,0x8e
  201e9b:	ba 08 00 00 00       	mov    edx,0x8
  201ea0:	48 89 c6             	mov    rsi,rax
  201ea3:	bf 03 00 00 00       	mov    edi,0x3
  201ea8:	e8 25 fe ff ff       	call   201cd2 <idt_set>
  201ead:	48 c7 c0 d0 83 20 00 	mov    rax,0x2083d0
  201eb4:	b9 8e 00 00 00       	mov    ecx,0x8e
  201eb9:	ba 08 00 00 00       	mov    edx,0x8
  201ebe:	48 89 c6             	mov    rsi,rax
  201ec1:	bf 04 00 00 00       	mov    edi,0x4
  201ec6:	e8 07 fe ff ff       	call   201cd2 <idt_set>
  201ecb:	48 c7 c0 de 83 20 00 	mov    rax,0x2083de
  201ed2:	b9 8e 00 00 00       	mov    ecx,0x8e
  201ed7:	ba 08 00 00 00       	mov    edx,0x8
  201edc:	48 89 c6             	mov    rsi,rax
  201edf:	bf 05 00 00 00       	mov    edi,0x5
  201ee4:	e8 e9 fd ff ff       	call   201cd2 <idt_set>
  201ee9:	48 c7 c0 ec 83 20 00 	mov    rax,0x2083ec
  201ef0:	b9 8e 00 00 00       	mov    ecx,0x8e
  201ef5:	ba 08 00 00 00       	mov    edx,0x8
  201efa:	48 89 c6             	mov    rsi,rax
  201efd:	bf 06 00 00 00       	mov    edi,0x6
  201f02:	e8 cb fd ff ff       	call   201cd2 <idt_set>
  201f07:	48 c7 c0 fa 83 20 00 	mov    rax,0x2083fa
  201f0e:	b9 8e 00 00 00       	mov    ecx,0x8e
  201f13:	ba 08 00 00 00       	mov    edx,0x8
  201f18:	48 89 c6             	mov    rsi,rax
  201f1b:	bf 07 00 00 00       	mov    edi,0x7
  201f20:	e8 ad fd ff ff       	call   201cd2 <idt_set>
  201f25:	48 c7 c0 08 84 20 00 	mov    rax,0x208408
  201f2c:	b9 8e 00 00 00       	mov    ecx,0x8e
  201f31:	ba 08 00 00 00       	mov    edx,0x8
  201f36:	48 89 c6             	mov    rsi,rax
  201f39:	bf 08 00 00 00       	mov    edi,0x8
  201f3e:	e8 8f fd ff ff       	call   201cd2 <idt_set>
  201f43:	48 c7 c0 14 84 20 00 	mov    rax,0x208414
  201f4a:	b9 8e 00 00 00       	mov    ecx,0x8e
  201f4f:	ba 08 00 00 00       	mov    edx,0x8
  201f54:	48 89 c6             	mov    rsi,rax
  201f57:	bf 09 00 00 00       	mov    edi,0x9
  201f5c:	e8 71 fd ff ff       	call   201cd2 <idt_set>
  201f61:	48 c7 c0 22 84 20 00 	mov    rax,0x208422
  201f68:	b9 8e 00 00 00       	mov    ecx,0x8e
  201f6d:	ba 08 00 00 00       	mov    edx,0x8
  201f72:	48 89 c6             	mov    rsi,rax
  201f75:	bf 0a 00 00 00       	mov    edi,0xa
  201f7a:	e8 53 fd ff ff       	call   201cd2 <idt_set>
  201f7f:	48 c7 c0 2e 84 20 00 	mov    rax,0x20842e
  201f86:	b9 8e 00 00 00       	mov    ecx,0x8e
  201f8b:	ba 08 00 00 00       	mov    edx,0x8
  201f90:	48 89 c6             	mov    rsi,rax
  201f93:	bf 0b 00 00 00       	mov    edi,0xb
  201f98:	e8 35 fd ff ff       	call   201cd2 <idt_set>
  201f9d:	48 c7 c0 3a 84 20 00 	mov    rax,0x20843a
  201fa4:	b9 8e 00 00 00       	mov    ecx,0x8e
  201fa9:	ba 08 00 00 00       	mov    edx,0x8
  201fae:	48 89 c6             	mov    rsi,rax
  201fb1:	bf 0c 00 00 00       	mov    edi,0xc
  201fb6:	e8 17 fd ff ff       	call   201cd2 <idt_set>
  201fbb:	48 c7 c0 46 84 20 00 	mov    rax,0x208446
  201fc2:	b9 8e 00 00 00       	mov    ecx,0x8e
  201fc7:	ba 08 00 00 00       	mov    edx,0x8
  201fcc:	48 89 c6             	mov    rsi,rax
  201fcf:	bf 0d 00 00 00       	mov    edi,0xd
  201fd4:	e8 f9 fc ff ff       	call   201cd2 <idt_set>
  201fd9:	48 c7 c0 52 84 20 00 	mov    rax,0x208452
  201fe0:	b9 8e 00 00 00       	mov    ecx,0x8e
  201fe5:	ba 08 00 00 00       	mov    edx,0x8
  201fea:	48 89 c6             	mov    rsi,rax
  201fed:	bf 0e 00 00 00       	mov    edi,0xe
  201ff2:	e8 db fc ff ff       	call   201cd2 <idt_set>
  201ff7:	48 c7 c0 5e 84 20 00 	mov    rax,0x20845e
  201ffe:	b9 8e 00 00 00       	mov    ecx,0x8e
  202003:	ba 08 00 00 00       	mov    edx,0x8
  202008:	48 89 c6             	mov    rsi,rax
  20200b:	bf 0f 00 00 00       	mov    edi,0xf
  202010:	e8 bd fc ff ff       	call   201cd2 <idt_set>
  202015:	48 c7 c0 6c 84 20 00 	mov    rax,0x20846c
  20201c:	b9 8e 00 00 00       	mov    ecx,0x8e
  202021:	ba 08 00 00 00       	mov    edx,0x8
  202026:	48 89 c6             	mov    rsi,rax
  202029:	bf 10 00 00 00       	mov    edi,0x10
  20202e:	e8 9f fc ff ff       	call   201cd2 <idt_set>
  202033:	48 c7 c0 7a 84 20 00 	mov    rax,0x20847a
  20203a:	b9 8e 00 00 00       	mov    ecx,0x8e
  20203f:	ba 08 00 00 00       	mov    edx,0x8
  202044:	48 89 c6             	mov    rsi,rax
  202047:	bf 11 00 00 00       	mov    edi,0x11
  20204c:	e8 81 fc ff ff       	call   201cd2 <idt_set>
  202051:	48 c7 c0 88 84 20 00 	mov    rax,0x208488
  202058:	b9 8e 00 00 00       	mov    ecx,0x8e
  20205d:	ba 08 00 00 00       	mov    edx,0x8
  202062:	48 89 c6             	mov    rsi,rax
  202065:	bf 12 00 00 00       	mov    edi,0x12
  20206a:	e8 63 fc ff ff       	call   201cd2 <idt_set>
  20206f:	48 c7 c0 96 84 20 00 	mov    rax,0x208496
  202076:	b9 8e 00 00 00       	mov    ecx,0x8e
  20207b:	ba 08 00 00 00       	mov    edx,0x8
  202080:	48 89 c6             	mov    rsi,rax
  202083:	bf 13 00 00 00       	mov    edi,0x13
  202088:	e8 45 fc ff ff       	call   201cd2 <idt_set>
  20208d:	48 c7 c0 a4 84 20 00 	mov    rax,0x2084a4
  202094:	b9 8e 00 00 00       	mov    ecx,0x8e
  202099:	ba 08 00 00 00       	mov    edx,0x8
  20209e:	48 89 c6             	mov    rsi,rax
  2020a1:	bf 14 00 00 00       	mov    edi,0x14
  2020a6:	e8 27 fc ff ff       	call   201cd2 <idt_set>
  2020ab:	48 c7 c0 b2 84 20 00 	mov    rax,0x2084b2
  2020b2:	b9 8e 00 00 00       	mov    ecx,0x8e
  2020b7:	ba 08 00 00 00       	mov    edx,0x8
  2020bc:	48 89 c6             	mov    rsi,rax
  2020bf:	bf 15 00 00 00       	mov    edi,0x15
  2020c4:	e8 09 fc ff ff       	call   201cd2 <idt_set>
  2020c9:	48 c7 c0 c0 84 20 00 	mov    rax,0x2084c0
  2020d0:	b9 8e 00 00 00       	mov    ecx,0x8e
  2020d5:	ba 08 00 00 00       	mov    edx,0x8
  2020da:	48 89 c6             	mov    rsi,rax
  2020dd:	bf 16 00 00 00       	mov    edi,0x16
  2020e2:	e8 eb fb ff ff       	call   201cd2 <idt_set>
  2020e7:	48 c7 c0 ce 84 20 00 	mov    rax,0x2084ce
  2020ee:	b9 8e 00 00 00       	mov    ecx,0x8e
  2020f3:	ba 08 00 00 00       	mov    edx,0x8
  2020f8:	48 89 c6             	mov    rsi,rax
  2020fb:	bf 17 00 00 00       	mov    edi,0x17
  202100:	e8 cd fb ff ff       	call   201cd2 <idt_set>
  202105:	48 c7 c0 dc 84 20 00 	mov    rax,0x2084dc
  20210c:	b9 8e 00 00 00       	mov    ecx,0x8e
  202111:	ba 08 00 00 00       	mov    edx,0x8
  202116:	48 89 c6             	mov    rsi,rax
  202119:	bf 18 00 00 00       	mov    edi,0x18
  20211e:	e8 af fb ff ff       	call   201cd2 <idt_set>
  202123:	48 c7 c0 ea 84 20 00 	mov    rax,0x2084ea
  20212a:	b9 8e 00 00 00       	mov    ecx,0x8e
  20212f:	ba 08 00 00 00       	mov    edx,0x8
  202134:	48 89 c6             	mov    rsi,rax
  202137:	bf 19 00 00 00       	mov    edi,0x19
  20213c:	e8 91 fb ff ff       	call   201cd2 <idt_set>
  202141:	48 c7 c0 f8 84 20 00 	mov    rax,0x2084f8
  202148:	b9 8e 00 00 00       	mov    ecx,0x8e
  20214d:	ba 08 00 00 00       	mov    edx,0x8
  202152:	48 89 c6             	mov    rsi,rax
  202155:	bf 1a 00 00 00       	mov    edi,0x1a
  20215a:	e8 73 fb ff ff       	call   201cd2 <idt_set>
  20215f:	48 c7 c0 06 85 20 00 	mov    rax,0x208506
  202166:	b9 8e 00 00 00       	mov    ecx,0x8e
  20216b:	ba 08 00 00 00       	mov    edx,0x8
  202170:	48 89 c6             	mov    rsi,rax
  202173:	bf 1b 00 00 00       	mov    edi,0x1b
  202178:	e8 55 fb ff ff       	call   201cd2 <idt_set>
  20217d:	48 c7 c0 14 85 20 00 	mov    rax,0x208514
  202184:	b9 8e 00 00 00       	mov    ecx,0x8e
  202189:	ba 08 00 00 00       	mov    edx,0x8
  20218e:	48 89 c6             	mov    rsi,rax
  202191:	bf 1c 00 00 00       	mov    edi,0x1c
  202196:	e8 37 fb ff ff       	call   201cd2 <idt_set>
  20219b:	48 c7 c0 22 85 20 00 	mov    rax,0x208522
  2021a2:	b9 8e 00 00 00       	mov    ecx,0x8e
  2021a7:	ba 08 00 00 00       	mov    edx,0x8
  2021ac:	48 89 c6             	mov    rsi,rax
  2021af:	bf 1d 00 00 00       	mov    edi,0x1d
  2021b4:	e8 19 fb ff ff       	call   201cd2 <idt_set>
  2021b9:	48 c7 c0 30 85 20 00 	mov    rax,0x208530
  2021c0:	b9 8e 00 00 00       	mov    ecx,0x8e
  2021c5:	ba 08 00 00 00       	mov    edx,0x8
  2021ca:	48 89 c6             	mov    rsi,rax
  2021cd:	bf 1e 00 00 00       	mov    edi,0x1e
  2021d2:	e8 fb fa ff ff       	call   201cd2 <idt_set>
  2021d7:	48 c7 c0 3e 85 20 00 	mov    rax,0x20853e
  2021de:	b9 8e 00 00 00       	mov    ecx,0x8e
  2021e3:	ba 08 00 00 00       	mov    edx,0x8
  2021e8:	48 89 c6             	mov    rsi,rax
  2021eb:	bf 1f 00 00 00       	mov    edi,0x1f
  2021f0:	e8 dd fa ff ff       	call   201cd2 <idt_set>
  2021f5:	48 c7 c0 4c 85 20 00 	mov    rax,0x20854c
  2021fc:	b9 8e 00 00 00       	mov    ecx,0x8e
  202201:	ba 08 00 00 00       	mov    edx,0x8
  202206:	48 89 c6             	mov    rsi,rax
  202209:	bf 20 00 00 00       	mov    edi,0x20
  20220e:	e8 bf fa ff ff       	call   201cd2 <idt_set>
  202213:	48 c7 c0 5a 85 20 00 	mov    rax,0x20855a
  20221a:	b9 8e 00 00 00       	mov    ecx,0x8e
  20221f:	ba 08 00 00 00       	mov    edx,0x8
  202224:	48 89 c6             	mov    rsi,rax
  202227:	bf 21 00 00 00       	mov    edi,0x21
  20222c:	e8 a1 fa ff ff       	call   201cd2 <idt_set>
  202231:	48 c7 c0 68 85 20 00 	mov    rax,0x208568
  202238:	b9 8e 00 00 00       	mov    ecx,0x8e
  20223d:	ba 08 00 00 00       	mov    edx,0x8
  202242:	48 89 c6             	mov    rsi,rax
  202245:	bf 22 00 00 00       	mov    edi,0x22
  20224a:	e8 83 fa ff ff       	call   201cd2 <idt_set>
  20224f:	48 c7 c0 76 85 20 00 	mov    rax,0x208576
  202256:	b9 8e 00 00 00       	mov    ecx,0x8e
  20225b:	ba 08 00 00 00       	mov    edx,0x8
  202260:	48 89 c6             	mov    rsi,rax
  202263:	bf 23 00 00 00       	mov    edi,0x23
  202268:	e8 65 fa ff ff       	call   201cd2 <idt_set>
  20226d:	48 c7 c0 84 85 20 00 	mov    rax,0x208584
  202274:	b9 8e 00 00 00       	mov    ecx,0x8e
  202279:	ba 08 00 00 00       	mov    edx,0x8
  20227e:	48 89 c6             	mov    rsi,rax
  202281:	bf 24 00 00 00       	mov    edi,0x24
  202286:	e8 47 fa ff ff       	call   201cd2 <idt_set>
  20228b:	48 c7 c0 92 85 20 00 	mov    rax,0x208592
  202292:	b9 8e 00 00 00       	mov    ecx,0x8e
  202297:	ba 08 00 00 00       	mov    edx,0x8
  20229c:	48 89 c6             	mov    rsi,rax
  20229f:	bf 25 00 00 00       	mov    edi,0x25
  2022a4:	e8 29 fa ff ff       	call   201cd2 <idt_set>
  2022a9:	48 c7 c0 a0 85 20 00 	mov    rax,0x2085a0
  2022b0:	b9 8e 00 00 00       	mov    ecx,0x8e
  2022b5:	ba 08 00 00 00       	mov    edx,0x8
  2022ba:	48 89 c6             	mov    rsi,rax
  2022bd:	bf 26 00 00 00       	mov    edi,0x26
  2022c2:	e8 0b fa ff ff       	call   201cd2 <idt_set>
  2022c7:	48 c7 c0 ae 85 20 00 	mov    rax,0x2085ae
  2022ce:	b9 8e 00 00 00       	mov    ecx,0x8e
  2022d3:	ba 08 00 00 00       	mov    edx,0x8
  2022d8:	48 89 c6             	mov    rsi,rax
  2022db:	bf 27 00 00 00       	mov    edi,0x27
  2022e0:	e8 ed f9 ff ff       	call   201cd2 <idt_set>
  2022e5:	48 c7 c0 bc 85 20 00 	mov    rax,0x2085bc
  2022ec:	b9 8e 00 00 00       	mov    ecx,0x8e
  2022f1:	ba 08 00 00 00       	mov    edx,0x8
  2022f6:	48 89 c6             	mov    rsi,rax
  2022f9:	bf 28 00 00 00       	mov    edi,0x28
  2022fe:	e8 cf f9 ff ff       	call   201cd2 <idt_set>
  202303:	48 c7 c0 ca 85 20 00 	mov    rax,0x2085ca
  20230a:	b9 8e 00 00 00       	mov    ecx,0x8e
  20230f:	ba 08 00 00 00       	mov    edx,0x8
  202314:	48 89 c6             	mov    rsi,rax
  202317:	bf 29 00 00 00       	mov    edi,0x29
  20231c:	e8 b1 f9 ff ff       	call   201cd2 <idt_set>
  202321:	48 c7 c0 d8 85 20 00 	mov    rax,0x2085d8
  202328:	b9 8e 00 00 00       	mov    ecx,0x8e
  20232d:	ba 08 00 00 00       	mov    edx,0x8
  202332:	48 89 c6             	mov    rsi,rax
  202335:	bf 2a 00 00 00       	mov    edi,0x2a
  20233a:	e8 93 f9 ff ff       	call   201cd2 <idt_set>
  20233f:	48 c7 c0 e6 85 20 00 	mov    rax,0x2085e6
  202346:	b9 8e 00 00 00       	mov    ecx,0x8e
  20234b:	ba 08 00 00 00       	mov    edx,0x8
  202350:	48 89 c6             	mov    rsi,rax
  202353:	bf 2b 00 00 00       	mov    edi,0x2b
  202358:	e8 75 f9 ff ff       	call   201cd2 <idt_set>
  20235d:	48 c7 c0 f4 85 20 00 	mov    rax,0x2085f4
  202364:	b9 8e 00 00 00       	mov    ecx,0x8e
  202369:	ba 08 00 00 00       	mov    edx,0x8
  20236e:	48 89 c6             	mov    rsi,rax
  202371:	bf 2c 00 00 00       	mov    edi,0x2c
  202376:	e8 57 f9 ff ff       	call   201cd2 <idt_set>
  20237b:	48 c7 c0 02 86 20 00 	mov    rax,0x208602
  202382:	b9 8e 00 00 00       	mov    ecx,0x8e
  202387:	ba 08 00 00 00       	mov    edx,0x8
  20238c:	48 89 c6             	mov    rsi,rax
  20238f:	bf 2d 00 00 00       	mov    edi,0x2d
  202394:	e8 39 f9 ff ff       	call   201cd2 <idt_set>
  202399:	48 c7 c0 10 86 20 00 	mov    rax,0x208610
  2023a0:	b9 8e 00 00 00       	mov    ecx,0x8e
  2023a5:	ba 08 00 00 00       	mov    edx,0x8
  2023aa:	48 89 c6             	mov    rsi,rax
  2023ad:	bf 2e 00 00 00       	mov    edi,0x2e
  2023b2:	e8 1b f9 ff ff       	call   201cd2 <idt_set>
  2023b7:	48 c7 c0 1e 86 20 00 	mov    rax,0x20861e
  2023be:	b9 8e 00 00 00       	mov    ecx,0x8e
  2023c3:	ba 08 00 00 00       	mov    edx,0x8
  2023c8:	48 89 c6             	mov    rsi,rax
  2023cb:	bf 2f 00 00 00       	mov    edi,0x2f
  2023d0:	e8 fd f8 ff ff       	call   201cd2 <idt_set>
  2023d5:	48 8d 05 c4 dc 00 00 	lea    rax,[rip+0xdcc4]        # 2100a0 <idtPointer>
  2023dc:	48 89 c7             	mov    rdi,rax
  2023df:	e8 bc 5f 00 00       	call   2083a0 <lidt>
  2023e4:	90                   	nop
  2023e5:	5d                   	pop    rbp
  2023e6:	c3                   	ret    
  2023e7:	90                   	nop

00000000002023e8 <memory::heap::initialize_heap(void*, unsigned long)>:
  2023e8:	55                   	push   rbp
  2023e9:	48 89 e5             	mov    rbp,rsp
  2023ec:	48 83 ec 20          	sub    rsp,0x20
  2023f0:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2023f4:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  2023f8:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2023fc:	48 89 05 b5 dc 00 00 	mov    QWORD PTR [rip+0xdcb5],rax        # 2100b8 <heap_start>
  202403:	48 8b 05 ae dc 00 00 	mov    rax,QWORD PTR [rip+0xdcae]        # 2100b8 <heap_start>
  20240a:	48 89 c2             	mov    rdx,rax
  20240d:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  202411:	48 01 d0             	add    rax,rdx
  202414:	48 89 05 a5 dc 00 00 	mov    QWORD PTR [rip+0xdca5],rax        # 2100c0 <heap_end>
  20241b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20241f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202423:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  202427:	48 8d 50 e0          	lea    rdx,[rax-0x20]
  20242b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20242f:	48 89 10             	mov    QWORD PTR [rax],rdx
  202432:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202436:	48 c7 40 10 00 00 00 	mov    QWORD PTR [rax+0x10],0x0
  20243d:	00 
  20243e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202442:	48 c7 40 08 00 00 00 	mov    QWORD PTR [rax+0x8],0x0
  202449:	00 
  20244a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20244e:	c6 40 18 01          	mov    BYTE PTR [rax+0x18],0x1
  202452:	90                   	nop
  202453:	c9                   	leave  
  202454:	c3                   	ret    

0000000000202455 <memory::heap::malloc(unsigned long)>:
  202455:	55                   	push   rbp
  202456:	48 89 e5             	mov    rbp,rsp
  202459:	48 83 ec 20          	sub    rsp,0x20
  20245d:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202461:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  202466:	75 0a                	jne    202472 <memory::heap::malloc(unsigned long)+0x1d>
  202468:	b8 00 00 00 00       	mov    eax,0x0
  20246d:	e9 9c 00 00 00       	jmp    20250e <memory::heap::malloc(unsigned long)+0xb9>
  202472:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202476:	83 e0 0f             	and    eax,0xf
  202479:	48 85 c0             	test   rax,rax
  20247c:	74 0f                	je     20248d <memory::heap::malloc(unsigned long)+0x38>
  20247e:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202482:	83 e0 0f             	and    eax,0xf
  202485:	48 83 c0 10          	add    rax,0x10
  202489:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20248d:	48 8b 05 24 dc 00 00 	mov    rax,QWORD PTR [rip+0xdc24]        # 2100b8 <heap_start>
  202494:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202498:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20249c:	0f b6 40 18          	movzx  eax,BYTE PTR [rax+0x18]
  2024a0:	84 c0                	test   al,al
  2024a2:	74 49                	je     2024ed <memory::heap::malloc(unsigned long)+0x98>
  2024a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024a8:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2024ab:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  2024af:	73 21                	jae    2024d2 <memory::heap::malloc(unsigned long)+0x7d>
  2024b1:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  2024b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024b9:	48 89 d6             	mov    rsi,rdx
  2024bc:	48 89 c7             	mov    rdi,rax
  2024bf:	e8 be 00 00 00       	call   202582 <memory::heap::heap_segment_header::split(unsigned long)>
  2024c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024c8:	c6 40 18 00          	mov    BYTE PTR [rax+0x18],0x0
  2024cc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024d0:	eb 3c                	jmp    20250e <memory::heap::malloc(unsigned long)+0xb9>
  2024d2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024d6:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2024d9:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  2024dd:	75 0e                	jne    2024ed <memory::heap::malloc(unsigned long)+0x98>
  2024df:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024e3:	c6 40 18 00          	mov    BYTE PTR [rax+0x18],0x0
  2024e7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024eb:	eb 21                	jmp    20250e <memory::heap::malloc(unsigned long)+0xb9>
  2024ed:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024f1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2024f5:	48 85 c0             	test   rax,rax
  2024f8:	74 0e                	je     202508 <memory::heap::malloc(unsigned long)+0xb3>
  2024fa:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2024fe:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202502:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202506:	eb 90                	jmp    202498 <memory::heap::malloc(unsigned long)+0x43>
  202508:	90                   	nop
  202509:	b8 00 00 00 00       	mov    eax,0x0
  20250e:	c9                   	leave  
  20250f:	c3                   	ret    

0000000000202510 <memory::heap::free(void*)>:
  202510:	55                   	push   rbp
  202511:	48 89 e5             	mov    rbp,rsp
  202514:	48 83 ec 20          	sub    rsp,0x20
  202518:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  20251c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202520:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202524:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202528:	c6 40 18 01          	mov    BYTE PTR [rax+0x18],0x1
  20252c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202530:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202534:	48 85 c0             	test   rax,rax
  202537:	74 1c                	je     202555 <memory::heap::free(void*)+0x45>
  202539:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20253d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202541:	0f b6 40 18          	movzx  eax,BYTE PTR [rax+0x18]
  202545:	84 c0                	test   al,al
  202547:	74 0c                	je     202555 <memory::heap::free(void*)+0x45>
  202549:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20254d:	48 89 c7             	mov    rdi,rax
  202550:	e8 e5 00 00 00       	call   20263a <memory::heap::heap_segment_header::combine_forward()>
  202555:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202559:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  20255d:	48 85 c0             	test   rax,rax
  202560:	74 1c                	je     20257e <memory::heap::free(void*)+0x6e>
  202562:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202566:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  20256a:	0f b6 40 18          	movzx  eax,BYTE PTR [rax+0x18]
  20256e:	84 c0                	test   al,al
  202570:	74 0c                	je     20257e <memory::heap::free(void*)+0x6e>
  202572:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202576:	48 89 c7             	mov    rdi,rax
  202579:	e8 4a 01 00 00       	call   2026c8 <memory::heap::heap_segment_header::combine_backward()>
  20257e:	90                   	nop
  20257f:	c9                   	leave  
  202580:	c3                   	ret    
  202581:	90                   	nop

0000000000202582 <memory::heap::heap_segment_header::split(unsigned long)>:
  202582:	55                   	push   rbp
  202583:	48 89 e5             	mov    rbp,rsp
  202586:	48 83 ec 20          	sub    rsp,0x20
  20258a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  20258e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202592:	48 83 7d e0 0f       	cmp    QWORD PTR [rbp-0x20],0xf
  202597:	77 0a                	ja     2025a3 <memory::heap::heap_segment_header::split(unsigned long)+0x21>
  202599:	b8 00 00 00 00       	mov    eax,0x0
  20259e:	e9 95 00 00 00       	jmp    202638 <memory::heap::heap_segment_header::split(unsigned long)+0xb6>
  2025a3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2025a7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2025aa:	48 2b 45 e0          	sub    rax,QWORD PTR [rbp-0x20]
  2025ae:	48 83 e8 40          	sub    rax,0x40
  2025b2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2025b6:	48 83 7d f8 0f       	cmp    QWORD PTR [rbp-0x8],0xf
  2025bb:	77 07                	ja     2025c4 <memory::heap::heap_segment_header::split(unsigned long)+0x42>
  2025bd:	b8 00 00 00 00       	mov    eax,0x0
  2025c2:	eb 74                	jmp    202638 <memory::heap::heap_segment_header::split(unsigned long)+0xb6>
  2025c4:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  2025c8:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2025cc:	48 01 d0             	add    rax,rdx
  2025cf:	48 83 c0 20          	add    rax,0x20
  2025d3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2025d7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2025db:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2025df:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  2025e3:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  2025e7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2025eb:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  2025ef:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2025f3:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  2025f7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2025fb:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  2025ff:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  202603:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202607:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20260b:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  20260f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202613:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  202617:	48 89 10             	mov    QWORD PTR [rax],rdx
  20261a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20261e:	0f b6 50 18          	movzx  edx,BYTE PTR [rax+0x18]
  202622:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202626:	88 50 18             	mov    BYTE PTR [rax+0x18],dl
  202629:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20262d:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  202631:	48 89 10             	mov    QWORD PTR [rax],rdx
  202634:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202638:	c9                   	leave  
  202639:	c3                   	ret    

000000000020263a <memory::heap::heap_segment_header::combine_forward()>:
  20263a:	55                   	push   rbp
  20263b:	48 89 e5             	mov    rbp,rsp
  20263e:	48 83 ec 08          	sub    rsp,0x8
  202642:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  202646:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20264a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20264e:	48 85 c0             	test   rax,rax
  202651:	74 6e                	je     2026c1 <memory::heap::heap_segment_header::combine_forward()+0x87>
  202653:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202657:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20265b:	0f b6 40 18          	movzx  eax,BYTE PTR [rax+0x18]
  20265f:	83 f0 01             	xor    eax,0x1
  202662:	84 c0                	test   al,al
  202664:	75 5e                	jne    2026c4 <memory::heap::heap_segment_header::combine_forward()+0x8a>
  202666:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20266a:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20266e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202672:	48 85 c0             	test   rax,rax
  202675:	74 14                	je     20268b <memory::heap::heap_segment_header::combine_forward()+0x51>
  202677:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20267b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20267f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202683:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  202687:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  20268b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20268f:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  202692:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202696:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20269a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20269d:	48 01 d0             	add    rax,rdx
  2026a0:	48 8d 50 20          	lea    rdx,[rax+0x20]
  2026a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2026a8:	48 89 10             	mov    QWORD PTR [rax],rdx
  2026ab:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2026af:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2026b3:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  2026b7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2026bb:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  2026bf:	eb 04                	jmp    2026c5 <memory::heap::heap_segment_header::combine_forward()+0x8b>
  2026c1:	90                   	nop
  2026c2:	eb 01                	jmp    2026c5 <memory::heap::heap_segment_header::combine_forward()+0x8b>
  2026c4:	90                   	nop
  2026c5:	c9                   	leave  
  2026c6:	c3                   	ret    
  2026c7:	90                   	nop

00000000002026c8 <memory::heap::heap_segment_header::combine_backward()>:
  2026c8:	55                   	push   rbp
  2026c9:	48 89 e5             	mov    rbp,rsp
  2026cc:	48 83 ec 08          	sub    rsp,0x8
  2026d0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  2026d4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2026d8:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  2026dc:	48 85 c0             	test   rax,rax
  2026df:	74 10                	je     2026f1 <memory::heap::heap_segment_header::combine_backward()+0x29>
  2026e1:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2026e5:	48 8b 40 10          	mov    rax,QWORD PTR [rax+0x10]
  2026e9:	48 89 c7             	mov    rdi,rax
  2026ec:	e8 49 ff ff ff       	call   20263a <memory::heap::heap_segment_header::combine_forward()>
  2026f1:	90                   	nop
  2026f2:	c9                   	leave  
  2026f3:	c3                   	ret    

00000000002026f4 <memory_types(unsigned short)>:
  2026f4:	55                   	push   rbp
  2026f5:	48 89 e5             	mov    rbp,rsp
  2026f8:	48 83 ec 08          	sub    rsp,0x8
  2026fc:	89 f8                	mov    eax,edi
  2026fe:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  202702:	0f b7 45 fc          	movzx  eax,WORD PTR [rbp-0x4]
  202706:	83 f8 0a             	cmp    eax,0xa
  202709:	7f 2b                	jg     202736 <memory_types(unsigned short)+0x42>
  20270b:	85 c0                	test   eax,eax
  20270d:	7e 6f                	jle    20277e <memory_types(unsigned short)+0x8a>
  20270f:	83 f8 0a             	cmp    eax,0xa
  202712:	77 6a                	ja     20277e <memory_types(unsigned short)+0x8a>
  202714:	89 c0                	mov    eax,eax
  202716:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  20271d:	00 
  20271e:	48 8d 05 6f 7c 00 00 	lea    rax,[rip+0x7c6f]        # 20a394 <BASE_GRAN+0x36c>
  202725:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  202728:	48 98                	cdqe   
  20272a:	48 8d 15 63 7c 00 00 	lea    rdx,[rip+0x7c63]        # 20a394 <BASE_GRAN+0x36c>
  202731:	48 01 d0             	add    rax,rdx
  202734:	ff e0                	jmp    rax
  202736:	3d 00 10 00 00       	cmp    eax,0x1000
  20273b:	74 38                	je     202775 <memory_types(unsigned short)+0x81>
  20273d:	eb 3f                	jmp    20277e <memory_types(unsigned short)+0x8a>
  20273f:	48 8d 05 b2 7b 00 00 	lea    rax,[rip+0x7bb2]        # 20a2f8 <BASE_GRAN+0x2d0>
  202746:	eb 3d                	jmp    202785 <memory_types(unsigned short)+0x91>
  202748:	48 8d 05 bd 7b 00 00 	lea    rax,[rip+0x7bbd]        # 20a30c <BASE_GRAN+0x2e4>
  20274f:	eb 34                	jmp    202785 <memory_types(unsigned short)+0x91>
  202751:	48 8d 05 c4 7b 00 00 	lea    rax,[rip+0x7bc4]        # 20a31c <BASE_GRAN+0x2f4>
  202758:	eb 2b                	jmp    202785 <memory_types(unsigned short)+0x91>
  20275a:	48 8d 05 d3 7b 00 00 	lea    rax,[rip+0x7bd3]        # 20a334 <BASE_GRAN+0x30c>
  202761:	eb 22                	jmp    202785 <memory_types(unsigned short)+0x91>
  202763:	48 8d 05 da 7b 00 00 	lea    rax,[rip+0x7bda]        # 20a344 <BASE_GRAN+0x31c>
  20276a:	eb 19                	jmp    202785 <memory_types(unsigned short)+0x91>
  20276c:	48 8d 05 df 7b 00 00 	lea    rax,[rip+0x7bdf]        # 20a352 <BASE_GRAN+0x32a>
  202773:	eb 10                	jmp    202785 <memory_types(unsigned short)+0x91>
  202775:	48 8d 05 e4 7b 00 00 	lea    rax,[rip+0x7be4]        # 20a360 <BASE_GRAN+0x338>
  20277c:	eb 07                	jmp    202785 <memory_types(unsigned short)+0x91>
  20277e:	48 8d 05 f9 7b 00 00 	lea    rax,[rip+0x7bf9]        # 20a37e <BASE_GRAN+0x356>
  202785:	c9                   	leave  
  202786:	c3                   	ret    

0000000000202787 <init_bitmap(unsigned long, void*)>:
  202787:	55                   	push   rbp
  202788:	48 89 e5             	mov    rbp,rsp
  20278b:	48 83 ec 20          	sub    rsp,0x20
  20278f:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202793:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202797:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20279b:	48 89 05 4e d9 00 00 	mov    QWORD PTR [rip+0xd94e],rax        # 2100f0 <page_bitmap_map>
  2027a2:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2027a6:	48 89 05 4b d9 00 00 	mov    QWORD PTR [rip+0xd94b],rax        # 2100f8 <page_bitmap_map+0x8>
  2027ad:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  2027b4:	00 
  2027b5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2027b9:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  2027bd:	73 18                	jae    2027d7 <init_bitmap(unsigned long, void*)+0x50>
  2027bf:	48 8b 15 32 d9 00 00 	mov    rdx,QWORD PTR [rip+0xd932]        # 2100f8 <page_bitmap_map+0x8>
  2027c6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2027ca:	48 01 d0             	add    rax,rdx
  2027cd:	c6 00 00             	mov    BYTE PTR [rax],0x0
  2027d0:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  2027d5:	eb de                	jmp    2027b5 <init_bitmap(unsigned long, void*)+0x2e>
  2027d7:	90                   	nop
  2027d8:	c9                   	leave  
  2027d9:	c3                   	ret    

00000000002027da <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)>:
  2027da:	55                   	push   rbp
  2027db:	48 89 e5             	mov    rbp,rsp
  2027de:	48 83 ec 38          	sub    rsp,0x38
  2027e2:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  2027e6:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  2027ea:	48 89 55 c8          	mov    QWORD PTR [rbp-0x38],rdx
  2027ee:	48 8b 05 13 d9 00 00 	mov    rax,QWORD PTR [rip+0xd913]        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  2027f5:	48 85 c0             	test   rax,rax
  2027f8:	74 0c                	je     202806 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)+0x2c>
  2027fa:	48 8b 05 07 d9 00 00 	mov    rax,QWORD PTR [rip+0xd907]        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202801:	e9 91 00 00 00       	jmp    202897 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)+0xbd>
  202806:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  20280a:	ba 00 00 00 00       	mov    edx,0x0
  20280f:	48 f7 75 c8          	div    QWORD PTR [rbp-0x38]
  202813:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  202817:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  20281e:	00 
  20281f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202823:	48 3b 45 f0          	cmp    rax,QWORD PTR [rbp-0x10]
  202827:	73 43                	jae    20286c <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)+0x92>
  202829:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20282d:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  202830:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202834:	48 0f af 45 c8       	imul   rax,QWORD PTR [rbp-0x38]
  202839:	48 01 d0             	add    rax,rdx
  20283c:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  202840:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202844:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  202847:	83 f8 01             	cmp    eax,0x1
  20284a:	75 19                	jne    202865 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)+0x8b>
  20284c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202850:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  202853:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202857:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20285b:	48 01 d0             	add    rax,rdx
  20285e:	48 89 05 a3 d8 00 00 	mov    QWORD PTR [rip+0xd8a3],rax        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202865:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  20286a:	eb b3                	jmp    20281f <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)+0x45>
  20286c:	48 8b 05 95 d8 00 00 	mov    rax,QWORD PTR [rip+0xd895]        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202873:	48 c1 e8 14          	shr    rax,0x14
  202877:	48 89 05 8a d8 00 00 	mov    QWORD PTR [rip+0xd88a],rax        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  20287e:	48 8b 05 83 d8 00 00 	mov    rax,QWORD PTR [rip+0xd883]        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202885:	48 c1 e0 14          	shl    rax,0x14
  202889:	48 89 05 78 d8 00 00 	mov    QWORD PTR [rip+0xd878],rax        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202890:	48 8b 05 71 d8 00 00 	mov    rax,QWORD PTR [rip+0xd871]        # 210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>
  202897:	c9                   	leave  
  202898:	c3                   	ret    

0000000000202899 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)>:
  202899:	55                   	push   rbp
  20289a:	48 89 e5             	mov    rbp,rsp
  20289d:	48 83 ec 70          	sub    rsp,0x70
  2028a1:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
  2028a5:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
  2028a9:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
  2028ad:	0f b6 05 4c d8 00 00 	movzx  eax,BYTE PTR [rip+0xd84c]        # 210100 <initialized>
  2028b4:	84 c0                	test   al,al
  2028b6:	0f 85 85 02 00 00    	jne    202b41 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x2a8>
  2028bc:	c6 05 3d d8 00 00 01 	mov    BYTE PTR [rip+0xd83d],0x1        # 210100 <initialized>
  2028c3:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  2028c7:	ba 00 00 00 00       	mov    edx,0x0
  2028cc:	48 f7 75 98          	div    QWORD PTR [rbp-0x68]
  2028d0:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  2028d4:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  2028db:	00 
  2028dc:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
  2028e3:	00 
  2028e4:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
  2028eb:	00 
  2028ec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2028f0:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
  2028f4:	0f 83 e4 00 00 00    	jae    2029de <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x145>
  2028fa:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  2028fe:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  202901:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202905:	48 0f af 45 98       	imul   rax,QWORD PTR [rbp-0x68]
  20290a:	48 01 d0             	add    rax,rdx
  20290d:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  202911:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  202915:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  202918:	83 f8 01             	cmp    eax,0x1
  20291b:	75 31                	jne    20294e <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0xb5>
  20291d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  202921:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202925:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
  20292b:	48 39 45 f0          	cmp    QWORD PTR [rbp-0x10],rax
  20292f:	73 1d                	jae    20294e <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0xb5>
  202931:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  202935:	48 8b 00             	mov    rax,QWORD PTR [rax]
  202938:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  20293c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  202940:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202944:	48 25 00 f0 ff ff    	and    rax,0xfffffffffffff000
  20294a:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20294e:	48 8d 3d 6b 7a 00 00 	lea    rdi,[rip+0x7a6b]        # 20a3c0 <BASE_GRAN+0x398>
  202955:	e8 83 58 00 00       	call   2081dd <serial_msg>
  20295a:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  20295e:	48 8b 00             	mov    rax,QWORD PTR [rax]
  202961:	be 10 00 00 00       	mov    esi,0x10
  202966:	48 89 c7             	mov    rdi,rax
  202969:	e8 0b 11 00 00       	call   203a79 <util::itoa(long, int)>
  20296e:	48 89 c7             	mov    rdi,rax
  202971:	e8 67 58 00 00       	call   2081dd <serial_msg>
  202976:	48 8d 3d 48 7a 00 00 	lea    rdi,[rip+0x7a48]        # 20a3c5 <BASE_GRAN+0x39d>
  20297d:	e8 5b 58 00 00       	call   2081dd <serial_msg>
  202982:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  202986:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  202989:	0f b7 c0             	movzx  eax,ax
  20298c:	89 c7                	mov    edi,eax
  20298e:	e8 61 fd ff ff       	call   2026f4 <memory_types(unsigned short)>
  202993:	48 89 c7             	mov    rdi,rax
  202996:	e8 42 58 00 00       	call   2081dd <serial_msg>
  20299b:	48 8d 3d 26 7a 00 00 	lea    rdi,[rip+0x7a26]        # 20a3c8 <BASE_GRAN+0x3a0>
  2029a2:	e8 36 58 00 00       	call   2081dd <serial_msg>
  2029a7:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  2029ab:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2029af:	48 c1 e8 0c          	shr    rax,0xc
  2029b3:	be 0a 00 00 00       	mov    esi,0xa
  2029b8:	48 89 c7             	mov    rdi,rax
  2029bb:	e8 b9 10 00 00       	call   203a79 <util::itoa(long, int)>
  2029c0:	48 89 c7             	mov    rdi,rax
  2029c3:	e8 15 58 00 00       	call   2081dd <serial_msg>
  2029c8:	48 8d 3d 00 7a 00 00 	lea    rdi,[rip+0x7a00]        # 20a3cf <BASE_GRAN+0x3a7>
  2029cf:	e8 09 58 00 00       	call   2081dd <serial_msg>
  2029d4:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  2029d9:	e9 0e ff ff ff       	jmp    2028ec <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x53>
  2029de:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
  2029e2:	48 8b 4d a0          	mov    rcx,QWORD PTR [rbp-0x60]
  2029e6:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  2029ea:	48 89 ce             	mov    rsi,rcx
  2029ed:	48 89 c7             	mov    rdi,rax
  2029f0:	e8 e5 fd ff ff       	call   2027da <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)>
  2029f5:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  2029f9:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2029fd:	48 89 05 dc d6 00 00 	mov    QWORD PTR [rip+0xd6dc],rax        # 2100e0 <memory::pmm::total_memory_size>
  202a04:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  202a08:	48 89 05 c1 d6 00 00 	mov    QWORD PTR [rip+0xd6c1],rax        # 2100d0 <memory::pmm::free_memory_size>
  202a0f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  202a13:	48 c1 e8 0f          	shr    rax,0xf
  202a17:	48 83 c0 01          	add    rax,0x1
  202a1b:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  202a1f:	48 8d 3d b1 79 00 00 	lea    rdi,[rip+0x79b1]        # 20a3d7 <BASE_GRAN+0x3af>
  202a26:	e8 b2 57 00 00       	call   2081dd <serial_msg>
  202a2b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  202a2f:	48 c1 e8 14          	shr    rax,0x14
  202a33:	be 0a 00 00 00       	mov    esi,0xa
  202a38:	48 89 c7             	mov    rdi,rax
  202a3b:	e8 39 10 00 00       	call   203a79 <util::itoa(long, int)>
  202a40:	48 89 c7             	mov    rdi,rax
  202a43:	e8 95 57 00 00       	call   2081dd <serial_msg>
  202a48:	48 8d 3d 9c 79 00 00 	lea    rdi,[rip+0x799c]        # 20a3eb <BASE_GRAN+0x3c3>
  202a4f:	e8 89 57 00 00       	call   2081dd <serial_msg>
  202a54:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  202a58:	be 0a 00 00 00       	mov    esi,0xa
  202a5d:	48 89 c7             	mov    rdi,rax
  202a60:	e8 14 10 00 00       	call   203a79 <util::itoa(long, int)>
  202a65:	48 89 c7             	mov    rdi,rax
  202a68:	e8 70 57 00 00       	call   2081dd <serial_msg>
  202a6d:	48 8d 3d 8a 79 00 00 	lea    rdi,[rip+0x798a]        # 20a3fe <BASE_GRAN+0x3d6>
  202a74:	e8 64 57 00 00       	call   2081dd <serial_msg>
  202a79:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  202a7d:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  202a81:	48 89 d6             	mov    rsi,rdx
  202a84:	48 89 c7             	mov    rdi,rax
  202a87:	e8 fb fc ff ff       	call   202787 <init_bitmap(unsigned long, void*)>
  202a8c:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
  202a93:	00 
  202a94:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  202a98:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
  202a9c:	73 55                	jae    202af3 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x25a>
  202a9e:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  202aa2:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  202aa5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  202aa9:	48 0f af 45 98       	imul   rax,QWORD PTR [rbp-0x68]
  202aae:	48 01 d0             	add    rax,rdx
  202ab1:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  202ab5:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  202ab9:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  202abc:	83 f8 01             	cmp    eax,0x1
  202abf:	74 2b                	je     202aec <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x253>
  202ac1:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  202ac5:	48 8b 00             	mov    rax,QWORD PTR [rax]
  202ac8:	48 39 45 c8          	cmp    QWORD PTR [rbp-0x38],rax
  202acc:	76 1e                	jbe    202aec <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x253>
  202ace:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  202ad2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  202ad6:	48 c1 e8 0c          	shr    rax,0xc
  202ada:	48 8b 55 b8          	mov    rdx,QWORD PTR [rbp-0x48]
  202ade:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
  202ae1:	48 89 c6             	mov    rsi,rax
  202ae4:	48 89 d7             	mov    rdi,rdx
  202ae7:	e8 97 01 00 00       	call   202c83 <reserve_pages>
  202aec:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  202af1:	eb a1                	jmp    202a94 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x1fb>
  202af3:	48 8b 05 f6 d5 00 00 	mov    rax,QWORD PTR [rip+0xd5f6]        # 2100f0 <page_bitmap_map>
  202afa:	48 c1 e8 0c          	shr    rax,0xc
  202afe:	48 8d 50 01          	lea    rdx,[rax+0x1]
  202b02:	48 8b 05 ef d5 00 00 	mov    rax,QWORD PTR [rip+0xd5ef]        # 2100f8 <page_bitmap_map+0x8>
  202b09:	48 89 d6             	mov    rsi,rdx
  202b0c:	48 89 c7             	mov    rdi,rax
  202b0f:	e8 ef 03 00 00       	call   202f03 <lock_pages>
  202b14:	be 00 01 00 00       	mov    esi,0x100
  202b19:	bf 00 00 00 00       	mov    edi,0x0
  202b1e:	e8 60 01 00 00       	call   202c83 <reserve_pages>
  202b23:	48 c7 c0 00 e0 20 00 	mov    rax,0x20e000
  202b2a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  202b2d:	48 89 c6             	mov    rsi,rax
  202b30:	48 c7 c0 00 00 20 00 	mov    rax,0x200000
  202b37:	48 89 c7             	mov    rdi,rax
  202b3a:	e8 44 01 00 00       	call   202c83 <reserve_pages>
  202b3f:	eb 01                	jmp    202b42 <memory::pmm::initialize(stivale_memory_map*, unsigned long, unsigned long)+0x2a9>
  202b41:	90                   	nop
  202b42:	c9                   	leave  
  202b43:	c3                   	ret    

0000000000202b44 <unreserve_page(void*)>:
  202b44:	55                   	push   rbp
  202b45:	48 89 e5             	mov    rbp,rsp
  202b48:	48 83 ec 20          	sub    rsp,0x20
  202b4c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202b50:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202b54:	48 c1 e8 0c          	shr    rax,0xc
  202b58:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202b5c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202b60:	48 89 c6             	mov    rsi,rax
  202b63:	48 8d 3d 86 d5 00 00 	lea    rdi,[rip+0xd586]        # 2100f0 <page_bitmap_map>
  202b6a:	e8 f3 0d 00 00       	call   203962 <util::bitmap::operator[](unsigned long)>
  202b6f:	0f b6 c0             	movzx  eax,al
  202b72:	85 c0                	test   eax,eax
  202b74:	0f 94 c0             	sete   al
  202b77:	84 c0                	test   al,al
  202b79:	75 42                	jne    202bbd <unreserve_page(void*)+0x79>
  202b7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202b7f:	ba 00 00 00 00       	mov    edx,0x0
  202b84:	48 89 c6             	mov    rsi,rax
  202b87:	48 8d 3d 62 d5 00 00 	lea    rdi,[rip+0xd562]        # 2100f0 <page_bitmap_map>
  202b8e:	e8 49 0e 00 00       	call   2039dc <util::bitmap::set(unsigned long, bool)>
  202b93:	48 8b 05 36 d5 00 00 	mov    rax,QWORD PTR [rip+0xd536]        # 2100d0 <memory::pmm::free_memory_size>
  202b9a:	48 05 00 10 00 00    	add    rax,0x1000
  202ba0:	48 89 05 29 d5 00 00 	mov    QWORD PTR [rip+0xd529],rax        # 2100d0 <memory::pmm::free_memory_size>
  202ba7:	48 8b 05 3a d5 00 00 	mov    rax,QWORD PTR [rip+0xd53a]        # 2100e8 <memory::pmm::reserved_memory_size>
  202bae:	48 2d 00 10 00 00    	sub    rax,0x1000
  202bb4:	48 89 05 2d d5 00 00 	mov    QWORD PTR [rip+0xd52d],rax        # 2100e8 <memory::pmm::reserved_memory_size>
  202bbb:	eb 01                	jmp    202bbe <unreserve_page(void*)+0x7a>
  202bbd:	90                   	nop
  202bbe:	c9                   	leave  
  202bbf:	c3                   	ret    

0000000000202bc0 <unreserve_pages(void*, unsigned long)>:
  202bc0:	55                   	push   rbp
  202bc1:	48 89 e5             	mov    rbp,rsp
  202bc4:	48 83 ec 20          	sub    rsp,0x20
  202bc8:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202bcc:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202bd0:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202bd7:	00 
  202bd8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202bdc:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
  202be0:	73 21                	jae    202c03 <unreserve_pages(void*, unsigned long)+0x43>
  202be2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202be6:	48 c1 e0 0c          	shl    rax,0xc
  202bea:	48 89 c2             	mov    rdx,rax
  202bed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202bf1:	48 01 d0             	add    rax,rdx
  202bf4:	48 89 c7             	mov    rdi,rax
  202bf7:	e8 48 ff ff ff       	call   202b44 <unreserve_page(void*)>
  202bfc:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202c01:	eb d5                	jmp    202bd8 <unreserve_pages(void*, unsigned long)+0x18>
  202c03:	90                   	nop
  202c04:	c9                   	leave  
  202c05:	c3                   	ret    

0000000000202c06 <reserve_page>:
  202c06:	55                   	push   rbp
  202c07:	48 89 e5             	mov    rbp,rsp
  202c0a:	48 83 ec 20          	sub    rsp,0x20
  202c0e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202c12:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202c16:	48 c1 e8 0c          	shr    rax,0xc
  202c1a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202c1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202c22:	48 89 c6             	mov    rsi,rax
  202c25:	48 8d 3d c4 d4 00 00 	lea    rdi,[rip+0xd4c4]        # 2100f0 <page_bitmap_map>
  202c2c:	e8 31 0d 00 00       	call   203962 <util::bitmap::operator[](unsigned long)>
  202c31:	0f b6 c0             	movzx  eax,al
  202c34:	83 f8 01             	cmp    eax,0x1
  202c37:	0f 94 c0             	sete   al
  202c3a:	84 c0                	test   al,al
  202c3c:	75 42                	jne    202c80 <reserve_page+0x7a>
  202c3e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202c42:	ba 01 00 00 00       	mov    edx,0x1
  202c47:	48 89 c6             	mov    rsi,rax
  202c4a:	48 8d 3d 9f d4 00 00 	lea    rdi,[rip+0xd49f]        # 2100f0 <page_bitmap_map>
  202c51:	e8 86 0d 00 00       	call   2039dc <util::bitmap::set(unsigned long, bool)>
  202c56:	48 8b 05 73 d4 00 00 	mov    rax,QWORD PTR [rip+0xd473]        # 2100d0 <memory::pmm::free_memory_size>
  202c5d:	48 2d 00 10 00 00    	sub    rax,0x1000
  202c63:	48 89 05 66 d4 00 00 	mov    QWORD PTR [rip+0xd466],rax        # 2100d0 <memory::pmm::free_memory_size>
  202c6a:	48 8b 05 77 d4 00 00 	mov    rax,QWORD PTR [rip+0xd477]        # 2100e8 <memory::pmm::reserved_memory_size>
  202c71:	48 05 00 10 00 00    	add    rax,0x1000
  202c77:	48 89 05 6a d4 00 00 	mov    QWORD PTR [rip+0xd46a],rax        # 2100e8 <memory::pmm::reserved_memory_size>
  202c7e:	eb 01                	jmp    202c81 <reserve_page+0x7b>
  202c80:	90                   	nop
  202c81:	c9                   	leave  
  202c82:	c3                   	ret    

0000000000202c83 <reserve_pages>:
  202c83:	55                   	push   rbp
  202c84:	48 89 e5             	mov    rbp,rsp
  202c87:	48 83 ec 20          	sub    rsp,0x20
  202c8b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202c8f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202c93:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202c9a:	00 
  202c9b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202c9f:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
  202ca3:	73 21                	jae    202cc6 <reserve_pages+0x43>
  202ca5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202ca9:	48 c1 e0 0c          	shl    rax,0xc
  202cad:	48 89 c2             	mov    rdx,rax
  202cb0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202cb4:	48 01 d0             	add    rax,rdx
  202cb7:	48 89 c7             	mov    rdi,rax
  202cba:	e8 47 ff ff ff       	call   202c06 <reserve_page>
  202cbf:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202cc4:	eb d5                	jmp    202c9b <reserve_pages+0x18>
  202cc6:	90                   	nop
  202cc7:	c9                   	leave  
  202cc8:	c3                   	ret    

0000000000202cc9 <request_page>:
  202cc9:	55                   	push   rbp
  202cca:	48 89 e5             	mov    rbp,rsp
  202ccd:	48 83 ec 10          	sub    rsp,0x10
  202cd1:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202cd8:	00 
  202cd9:	48 8b 05 10 d4 00 00 	mov    rax,QWORD PTR [rip+0xd410]        # 2100f0 <page_bitmap_map>
  202ce0:	48 c1 e0 03          	shl    rax,0x3
  202ce4:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
  202ce8:	73 42                	jae    202d2c <request_page+0x63>
  202cea:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202cee:	48 89 c6             	mov    rsi,rax
  202cf1:	48 8d 3d f8 d3 00 00 	lea    rdi,[rip+0xd3f8]        # 2100f0 <page_bitmap_map>
  202cf8:	e8 65 0c 00 00       	call   203962 <util::bitmap::operator[](unsigned long)>
  202cfd:	0f b6 c0             	movzx  eax,al
  202d00:	83 f8 01             	cmp    eax,0x1
  202d03:	0f 94 c0             	sete   al
  202d06:	84 c0                	test   al,al
  202d08:	75 1a                	jne    202d24 <request_page+0x5b>
  202d0a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202d0e:	48 c1 e0 0c          	shl    rax,0xc
  202d12:	48 89 c7             	mov    rdi,rax
  202d15:	e8 6c 01 00 00       	call   202e86 <lock_page>
  202d1a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202d1e:	48 c1 e0 0c          	shl    rax,0xc
  202d22:	eb 0d                	jmp    202d31 <request_page+0x68>
  202d24:	90                   	nop
  202d25:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202d2a:	eb ad                	jmp    202cd9 <request_page+0x10>
  202d2c:	b8 00 00 00 00       	mov    eax,0x0
  202d31:	c9                   	leave  
  202d32:	c3                   	ret    

0000000000202d33 <request_pages>:
  202d33:	55                   	push   rbp
  202d34:	48 89 e5             	mov    rbp,rsp
  202d37:	48 83 ec 30          	sub    rsp,0x30
  202d3b:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  202d3f:	48 83 7d d8 01       	cmp    QWORD PTR [rbp-0x28],0x1
  202d44:	77 07                	ja     202d4d <request_pages+0x1a>
  202d46:	b8 00 00 00 00       	mov    eax,0x0
  202d4b:	eb 75                	jmp    202dc2 <request_pages+0x8f>
  202d4d:	e8 77 ff ff ff       	call   202cc9 <request_page>
  202d52:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  202d56:	48 83 6d d8 01       	sub    QWORD PTR [rbp-0x28],0x1
  202d5b:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  202d5f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202d63:	ba 00 00 00 00       	mov    edx,0x0
  202d68:	48 89 ce             	mov    rsi,rcx
  202d6b:	48 89 c7             	mov    rdi,rax
  202d6e:	e8 db 02 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  202d73:	48 c7 45 f8 01 00 00 	mov    QWORD PTR [rbp-0x8],0x1
  202d7a:	00 
  202d7b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202d7f:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
  202d83:	77 39                	ja     202dbe <request_pages+0x8b>
  202d85:	e8 3f ff ff ff       	call   202cc9 <request_page>
  202d8a:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  202d8e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202d92:	48 c1 e0 0c          	shl    rax,0xc
  202d96:	48 89 c2             	mov    rdx,rax
  202d99:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202d9d:	48 01 d0             	add    rax,rdx
  202da0:	48 89 c1             	mov    rcx,rax
  202da3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202da7:	ba 00 00 00 00       	mov    edx,0x0
  202dac:	48 89 c6             	mov    rsi,rax
  202daf:	48 89 cf             	mov    rdi,rcx
  202db2:	e8 97 02 00 00       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  202db7:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202dbc:	eb bd                	jmp    202d7b <request_pages+0x48>
  202dbe:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202dc2:	c9                   	leave  
  202dc3:	c3                   	ret    

0000000000202dc4 <free_page>:
  202dc4:	55                   	push   rbp
  202dc5:	48 89 e5             	mov    rbp,rsp
  202dc8:	48 83 ec 20          	sub    rsp,0x20
  202dcc:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202dd0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202dd4:	48 c1 e8 0c          	shr    rax,0xc
  202dd8:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202ddc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202de0:	48 89 c6             	mov    rsi,rax
  202de3:	48 8d 3d 06 d3 00 00 	lea    rdi,[rip+0xd306]        # 2100f0 <page_bitmap_map>
  202dea:	e8 73 0b 00 00       	call   203962 <util::bitmap::operator[](unsigned long)>
  202def:	0f b6 c0             	movzx  eax,al
  202df2:	85 c0                	test   eax,eax
  202df4:	0f 94 c0             	sete   al
  202df7:	84 c0                	test   al,al
  202df9:	75 42                	jne    202e3d <free_page+0x79>
  202dfb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202dff:	ba 00 00 00 00       	mov    edx,0x0
  202e04:	48 89 c6             	mov    rsi,rax
  202e07:	48 8d 3d e2 d2 00 00 	lea    rdi,[rip+0xd2e2]        # 2100f0 <page_bitmap_map>
  202e0e:	e8 c9 0b 00 00       	call   2039dc <util::bitmap::set(unsigned long, bool)>
  202e13:	48 8b 05 b6 d2 00 00 	mov    rax,QWORD PTR [rip+0xd2b6]        # 2100d0 <memory::pmm::free_memory_size>
  202e1a:	48 05 00 10 00 00    	add    rax,0x1000
  202e20:	48 89 05 a9 d2 00 00 	mov    QWORD PTR [rip+0xd2a9],rax        # 2100d0 <memory::pmm::free_memory_size>
  202e27:	48 8b 05 aa d2 00 00 	mov    rax,QWORD PTR [rip+0xd2aa]        # 2100d8 <memory::pmm::used_memory_size>
  202e2e:	48 2d 00 10 00 00    	sub    rax,0x1000
  202e34:	48 89 05 9d d2 00 00 	mov    QWORD PTR [rip+0xd29d],rax        # 2100d8 <memory::pmm::used_memory_size>
  202e3b:	eb 01                	jmp    202e3e <free_page+0x7a>
  202e3d:	90                   	nop
  202e3e:	c9                   	leave  
  202e3f:	c3                   	ret    

0000000000202e40 <free_pages>:
  202e40:	55                   	push   rbp
  202e41:	48 89 e5             	mov    rbp,rsp
  202e44:	48 83 ec 20          	sub    rsp,0x20
  202e48:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202e4c:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202e50:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202e57:	00 
  202e58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202e5c:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
  202e60:	73 21                	jae    202e83 <free_pages+0x43>
  202e62:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202e66:	48 c1 e0 0c          	shl    rax,0xc
  202e6a:	48 89 c2             	mov    rdx,rax
  202e6d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202e71:	48 01 d0             	add    rax,rdx
  202e74:	48 89 c7             	mov    rdi,rax
  202e77:	e8 48 ff ff ff       	call   202dc4 <free_page>
  202e7c:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202e81:	eb d5                	jmp    202e58 <free_pages+0x18>
  202e83:	90                   	nop
  202e84:	c9                   	leave  
  202e85:	c3                   	ret    

0000000000202e86 <lock_page>:
  202e86:	55                   	push   rbp
  202e87:	48 89 e5             	mov    rbp,rsp
  202e8a:	48 83 ec 20          	sub    rsp,0x20
  202e8e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202e92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202e96:	48 c1 e8 0c          	shr    rax,0xc
  202e9a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202e9e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202ea2:	48 89 c6             	mov    rsi,rax
  202ea5:	48 8d 3d 44 d2 00 00 	lea    rdi,[rip+0xd244]        # 2100f0 <page_bitmap_map>
  202eac:	e8 b1 0a 00 00       	call   203962 <util::bitmap::operator[](unsigned long)>
  202eb1:	0f b6 c0             	movzx  eax,al
  202eb4:	83 f8 01             	cmp    eax,0x1
  202eb7:	0f 94 c0             	sete   al
  202eba:	84 c0                	test   al,al
  202ebc:	75 42                	jne    202f00 <lock_page+0x7a>
  202ebe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202ec2:	ba 01 00 00 00       	mov    edx,0x1
  202ec7:	48 89 c6             	mov    rsi,rax
  202eca:	48 8d 3d 1f d2 00 00 	lea    rdi,[rip+0xd21f]        # 2100f0 <page_bitmap_map>
  202ed1:	e8 06 0b 00 00       	call   2039dc <util::bitmap::set(unsigned long, bool)>
  202ed6:	48 8b 05 f3 d1 00 00 	mov    rax,QWORD PTR [rip+0xd1f3]        # 2100d0 <memory::pmm::free_memory_size>
  202edd:	48 2d 00 10 00 00    	sub    rax,0x1000
  202ee3:	48 89 05 e6 d1 00 00 	mov    QWORD PTR [rip+0xd1e6],rax        # 2100d0 <memory::pmm::free_memory_size>
  202eea:	48 8b 05 e7 d1 00 00 	mov    rax,QWORD PTR [rip+0xd1e7]        # 2100d8 <memory::pmm::used_memory_size>
  202ef1:	48 05 00 10 00 00    	add    rax,0x1000
  202ef7:	48 89 05 da d1 00 00 	mov    QWORD PTR [rip+0xd1da],rax        # 2100d8 <memory::pmm::used_memory_size>
  202efe:	eb 01                	jmp    202f01 <lock_page+0x7b>
  202f00:	90                   	nop
  202f01:	c9                   	leave  
  202f02:	c3                   	ret    

0000000000202f03 <lock_pages>:
  202f03:	55                   	push   rbp
  202f04:	48 89 e5             	mov    rbp,rsp
  202f07:	48 83 ec 20          	sub    rsp,0x20
  202f0b:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202f0f:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  202f13:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202f1a:	00 
  202f1b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202f1f:	48 3b 45 e0          	cmp    rax,QWORD PTR [rbp-0x20]
  202f23:	73 21                	jae    202f46 <lock_pages+0x43>
  202f25:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202f29:	48 c1 e0 0c          	shl    rax,0xc
  202f2d:	48 89 c2             	mov    rdx,rax
  202f30:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202f34:	48 01 d0             	add    rax,rdx
  202f37:	48 89 c7             	mov    rdi,rax
  202f3a:	e8 47 ff ff ff       	call   202e86 <lock_page>
  202f3f:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202f44:	eb d5                	jmp    202f1b <lock_pages+0x18>
  202f46:	90                   	nop
  202f47:	c9                   	leave  
  202f48:	c3                   	ret    

0000000000202f49 <memory::operations::memcpy(void*, void const*, unsigned long)>:
  202f49:	55                   	push   rbp
  202f4a:	48 89 e5             	mov    rbp,rsp
  202f4d:	48 83 ec 18          	sub    rsp,0x18
  202f51:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  202f55:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  202f59:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  202f5d:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  202f61:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  202f65:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202f69:	48 89 d6             	mov    rsi,rdx
  202f6c:	48 89 c7             	mov    rdi,rax
  202f6f:	fc                   	cld    
  202f70:	f3 a4                	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  202f72:	48 89 f8             	mov    rax,rdi
  202f75:	48 89 f2             	mov    rdx,rsi
  202f78:	48 89 4d e8          	mov    QWORD PTR [rbp-0x18],rcx
  202f7c:	48 89 55 f0          	mov    QWORD PTR [rbp-0x10],rdx
  202f80:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  202f84:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202f88:	c9                   	leave  
  202f89:	c3                   	ret    

0000000000202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>:
  202f8a:	55                   	push   rbp
  202f8b:	48 89 e5             	mov    rbp,rsp
  202f8e:	48 83 ec 28          	sub    rsp,0x28
  202f92:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  202f96:	89 f0                	mov    eax,esi
  202f98:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  202f9c:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
  202f9f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202fa3:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  202fa7:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  202fae:	00 
  202faf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202fb3:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
  202fb7:	73 18                	jae    202fd1 <memory::operations::memset(void*, unsigned char, unsigned long)+0x47>
  202fb9:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  202fbd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202fc1:	48 01 c2             	add    rdx,rax
  202fc4:	0f b6 45 e4          	movzx  eax,BYTE PTR [rbp-0x1c]
  202fc8:	88 02                	mov    BYTE PTR [rdx],al
  202fca:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  202fcf:	eb de                	jmp    202faf <memory::operations::memset(void*, unsigned char, unsigned long)+0x25>
  202fd1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  202fd5:	c9                   	leave  
  202fd6:	c3                   	ret    
  202fd7:	90                   	nop

0000000000202fd8 <memory::paging::page_map_indexer::page_map_indexer(unsigned long)>:
  202fd8:	55                   	push   rbp
  202fd9:	48 89 e5             	mov    rbp,rsp
  202fdc:	48 83 ec 10          	sub    rsp,0x10
  202fe0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  202fe4:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  202fe8:	48 c1 6d f0 0c       	shr    QWORD PTR [rbp-0x10],0xc
  202fed:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  202ff1:	25 ff 01 00 00       	and    eax,0x1ff
  202ff6:	48 89 c2             	mov    rdx,rax
  202ff9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  202ffd:	48 89 50 18          	mov    QWORD PTR [rax+0x18],rdx
  203001:	48 c1 6d f0 09       	shr    QWORD PTR [rbp-0x10],0x9
  203006:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20300a:	25 ff 01 00 00       	and    eax,0x1ff
  20300f:	48 89 c2             	mov    rdx,rax
  203012:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203016:	48 89 50 10          	mov    QWORD PTR [rax+0x10],rdx
  20301a:	48 c1 6d f0 09       	shr    QWORD PTR [rbp-0x10],0x9
  20301f:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203023:	25 ff 01 00 00       	and    eax,0x1ff
  203028:	48 89 c2             	mov    rdx,rax
  20302b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20302f:	48 89 50 08          	mov    QWORD PTR [rax+0x8],rdx
  203033:	48 c1 6d f0 09       	shr    QWORD PTR [rbp-0x10],0x9
  203038:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20303c:	25 ff 01 00 00       	and    eax,0x1ff
  203041:	48 89 c2             	mov    rdx,rax
  203044:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203048:	48 89 10             	mov    QWORD PTR [rax],rdx
  20304b:	90                   	nop
  20304c:	c9                   	leave  
  20304d:	c3                   	ret    

000000000020304e <memory::paging::map_memory(void*, void*, bool)>:
  20304e:	55                   	push   rbp
  20304f:	48 89 e5             	mov    rbp,rsp
  203052:	48 83 ec 70          	sub    rsp,0x70
  203056:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
  20305a:	48 89 75 a0          	mov    QWORD PTR [rbp-0x60],rsi
  20305e:	89 d0                	mov    eax,edx
  203060:	88 45 9c             	mov    BYTE PTR [rbp-0x64],al
  203063:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
  203067:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  20306b:	48 89 d6             	mov    rsi,rdx
  20306e:	48 89 c7             	mov    rdi,rax
  203071:	e8 62 ff ff ff       	call   202fd8 <memory::paging::page_map_indexer::page_map_indexer(unsigned long)>
  203076:	48 8b 05 93 d0 00 00 	mov    rax,QWORD PTR [rip+0xd093]        # 210110 <memory::paging::pml_4>
  20307d:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  203081:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  203085:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  203089:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20308d:	be 00 00 00 00       	mov    esi,0x0
  203092:	48 89 c7             	mov    rdi,rax
  203095:	e8 a0 05 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  20309a:	83 f0 01             	xor    eax,0x1
  20309d:	84 c0                	test   al,al
  20309f:	0f 84 92 00 00 00    	je     203137 <memory::paging::map_memory(void*, void*, bool)+0xe9>
  2030a5:	e8 1f fc ff ff       	call   202cc9 <request_page>
  2030aa:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2030ae:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2030b2:	ba 00 10 00 00       	mov    edx,0x1000
  2030b7:	be 00 00 00 00       	mov    esi,0x0
  2030bc:	48 89 c7             	mov    rdi,rax
  2030bf:	e8 c6 fe ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2030c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2030c8:	48 c1 e8 0c          	shr    rax,0xc
  2030cc:	48 89 c2             	mov    rdx,rax
  2030cf:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2030d3:	48 89 d6             	mov    rsi,rdx
  2030d6:	48 89 c7             	mov    rdi,rax
  2030d9:	e8 b4 05 00 00       	call   203692 <memory::paging::page_directory_entry::set_address(unsigned long)>
  2030de:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2030e2:	ba 01 00 00 00       	mov    edx,0x1
  2030e7:	be 00 00 00 00       	mov    esi,0x0
  2030ec:	48 89 c7             	mov    rdi,rax
  2030ef:	e8 e8 04 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  2030f4:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2030f8:	ba 01 00 00 00       	mov    edx,0x1
  2030fd:	be 01 00 00 00       	mov    esi,0x1
  203102:	48 89 c7             	mov    rdi,rax
  203105:	e8 d2 04 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  20310a:	48 8b 05 ff cf 00 00 	mov    rax,QWORD PTR [rip+0xcfff]        # 210110 <memory::paging::pml_4>
  203111:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  203115:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
  203119:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
  20311d:	48 8b 4d f8          	mov    rcx,QWORD PTR [rbp-0x8]
  203121:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203125:	ba 00 00 00 00       	mov    edx,0x0
  20312a:	48 89 ce             	mov    rsi,rcx
  20312d:	48 89 c7             	mov    rdi,rax
  203130:	e8 19 ff ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  203135:	eb 14                	jmp    20314b <memory::paging::map_memory(void*, void*, bool)+0xfd>
  203137:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20313b:	48 89 c7             	mov    rdi,rax
  20313e:	e8 2d 05 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  203143:	48 c1 e0 0c          	shl    rax,0xc
  203147:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  20314b:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  20314f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203153:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  203157:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  20315b:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20315f:	be 00 00 00 00       	mov    esi,0x0
  203164:	48 89 c7             	mov    rdi,rax
  203167:	e8 ce 04 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  20316c:	83 f0 01             	xor    eax,0x1
  20316f:	84 c0                	test   al,al
  203171:	0f 84 8f 00 00 00    	je     203206 <memory::paging::map_memory(void*, void*, bool)+0x1b8>
  203177:	e8 4d fb ff ff       	call   202cc9 <request_page>
  20317c:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  203180:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203184:	ba 00 10 00 00       	mov    edx,0x1000
  203189:	be 00 00 00 00       	mov    esi,0x0
  20318e:	48 89 c7             	mov    rdi,rax
  203191:	e8 f4 fd ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  203196:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20319a:	48 c1 e8 0c          	shr    rax,0xc
  20319e:	48 89 c2             	mov    rdx,rax
  2031a1:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2031a5:	48 89 d6             	mov    rsi,rdx
  2031a8:	48 89 c7             	mov    rdi,rax
  2031ab:	e8 e2 04 00 00       	call   203692 <memory::paging::page_directory_entry::set_address(unsigned long)>
  2031b0:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2031b4:	ba 01 00 00 00       	mov    edx,0x1
  2031b9:	be 00 00 00 00       	mov    esi,0x0
  2031be:	48 89 c7             	mov    rdi,rax
  2031c1:	e8 16 04 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  2031c6:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2031ca:	ba 01 00 00 00       	mov    edx,0x1
  2031cf:	be 01 00 00 00       	mov    esi,0x1
  2031d4:	48 89 c7             	mov    rdi,rax
  2031d7:	e8 00 04 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  2031dc:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  2031e0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2031e4:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
  2031e8:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
  2031ec:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  2031f0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2031f4:	ba 00 00 00 00       	mov    edx,0x0
  2031f9:	48 89 ce             	mov    rsi,rcx
  2031fc:	48 89 c7             	mov    rdi,rax
  2031ff:	e8 4a fe ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  203204:	eb 14                	jmp    20321a <memory::paging::map_memory(void*, void*, bool)+0x1cc>
  203206:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20320a:	48 89 c7             	mov    rdi,rax
  20320d:	e8 5e 04 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  203212:	48 c1 e0 0c          	shl    rax,0xc
  203216:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20321a:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  20321e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203222:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  203226:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  20322a:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20322e:	be 00 00 00 00       	mov    esi,0x0
  203233:	48 89 c7             	mov    rdi,rax
  203236:	e8 ff 03 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  20323b:	83 f0 01             	xor    eax,0x1
  20323e:	84 c0                	test   al,al
  203240:	0f 84 8f 00 00 00    	je     2032d5 <memory::paging::map_memory(void*, void*, bool)+0x287>
  203246:	e8 7e fa ff ff       	call   202cc9 <request_page>
  20324b:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20324f:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203253:	ba 00 10 00 00       	mov    edx,0x1000
  203258:	be 00 00 00 00       	mov    esi,0x0
  20325d:	48 89 c7             	mov    rdi,rax
  203260:	e8 25 fd ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  203265:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203269:	48 c1 e8 0c          	shr    rax,0xc
  20326d:	48 89 c2             	mov    rdx,rax
  203270:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203274:	48 89 d6             	mov    rsi,rdx
  203277:	48 89 c7             	mov    rdi,rax
  20327a:	e8 13 04 00 00       	call   203692 <memory::paging::page_directory_entry::set_address(unsigned long)>
  20327f:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203283:	ba 01 00 00 00       	mov    edx,0x1
  203288:	be 00 00 00 00       	mov    esi,0x0
  20328d:	48 89 c7             	mov    rdi,rax
  203290:	e8 47 03 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203295:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203299:	ba 01 00 00 00       	mov    edx,0x1
  20329e:	be 01 00 00 00       	mov    esi,0x1
  2032a3:	48 89 c7             	mov    rdi,rax
  2032a6:	e8 31 03 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  2032ab:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  2032af:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2032b3:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
  2032b7:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
  2032bb:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  2032bf:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2032c3:	ba 00 00 00 00       	mov    edx,0x0
  2032c8:	48 89 ce             	mov    rsi,rcx
  2032cb:	48 89 c7             	mov    rdi,rax
  2032ce:	e8 7b fd ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  2032d3:	eb 14                	jmp    2032e9 <memory::paging::map_memory(void*, void*, bool)+0x29b>
  2032d5:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2032d9:	48 89 c7             	mov    rdi,rax
  2032dc:	e8 8f 03 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  2032e1:	48 c1 e0 0c          	shl    rax,0xc
  2032e5:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  2032e9:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  2032ed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2032f1:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  2032f5:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  2032f9:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  2032fd:	48 c1 e8 0c          	shr    rax,0xc
  203301:	48 89 c2             	mov    rdx,rax
  203304:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203308:	48 89 d6             	mov    rsi,rdx
  20330b:	48 89 c7             	mov    rdi,rax
  20330e:	e8 7f 03 00 00       	call   203692 <memory::paging::page_directory_entry::set_address(unsigned long)>
  203313:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203317:	ba 01 00 00 00       	mov    edx,0x1
  20331c:	be 00 00 00 00       	mov    esi,0x0
  203321:	48 89 c7             	mov    rdi,rax
  203324:	e8 b3 02 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203329:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20332d:	ba 01 00 00 00       	mov    edx,0x1
  203332:	be 01 00 00 00       	mov    esi,0x1
  203337:	48 89 c7             	mov    rdi,rax
  20333a:	e8 9d 02 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  20333f:	0f b6 55 9c          	movzx  edx,BYTE PTR [rbp-0x64]
  203343:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203347:	89 d6                	mov    esi,edx
  203349:	48 89 c7             	mov    rdi,rax
  20334c:	e8 97 03 00 00       	call   2036e8 <memory::paging::page_directory_entry::set_pat(unsigned char)>
  203351:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  203355:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203359:	48 8b 4d b8          	mov    rcx,QWORD PTR [rbp-0x48]
  20335d:	48 89 0c d0          	mov    QWORD PTR [rax+rdx*8],rcx
  203361:	90                   	nop
  203362:	c9                   	leave  
  203363:	c3                   	ret    

0000000000203364 <memory::paging::get_physical_address(void*)>:
  203364:	55                   	push   rbp
  203365:	48 89 e5             	mov    rbp,rsp
  203368:	48 83 ec 60          	sub    rsp,0x60
  20336c:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
  203370:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
  203374:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  203378:	48 89 d6             	mov    rsi,rdx
  20337b:	48 89 c7             	mov    rdi,rax
  20337e:	e8 55 fc ff ff       	call   202fd8 <memory::paging::page_map_indexer::page_map_indexer(unsigned long)>
  203383:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  203387:	66 25 ff 0f          	and    ax,0xfff
  20338b:	66 89 45 fe          	mov    WORD PTR [rbp-0x2],ax
  20338f:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  203393:	48 f7 d0             	not    rax
  203396:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  20339a:	48 8b 05 6f cd 00 00 	mov    rax,QWORD PTR [rip+0xcd6f]        # 210110 <memory::paging::pml_4>
  2033a1:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  2033a5:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  2033a9:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  2033ad:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2033b1:	be 00 00 00 00       	mov    esi,0x0
  2033b6:	48 89 c7             	mov    rdi,rax
  2033b9:	e8 7c 02 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  2033be:	83 f0 01             	xor    eax,0x1
  2033c1:	84 c0                	test   al,al
  2033c3:	74 0c                	je     2033d1 <memory::paging::get_physical_address(void*)+0x6d>
  2033c5:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
  2033cc:	e9 e5 00 00 00       	jmp    2034b6 <memory::paging::get_physical_address(void*)+0x152>
  2033d1:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2033d5:	48 89 c7             	mov    rdi,rax
  2033d8:	e8 93 02 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  2033dd:	48 c1 e0 0c          	shl    rax,0xc
  2033e1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2033e5:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  2033e9:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2033ed:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  2033f1:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  2033f5:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2033f9:	be 00 00 00 00       	mov    esi,0x0
  2033fe:	48 89 c7             	mov    rdi,rax
  203401:	e8 34 02 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  203406:	83 f0 01             	xor    eax,0x1
  203409:	84 c0                	test   al,al
  20340b:	74 0c                	je     203419 <memory::paging::get_physical_address(void*)+0xb5>
  20340d:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
  203414:	e9 9d 00 00 00       	jmp    2034b6 <memory::paging::get_physical_address(void*)+0x152>
  203419:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20341d:	48 89 c7             	mov    rdi,rax
  203420:	e8 4b 02 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  203425:	48 c1 e0 0c          	shl    rax,0xc
  203429:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20342d:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  203431:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203435:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  203439:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  20343d:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203441:	be 00 00 00 00       	mov    esi,0x0
  203446:	48 89 c7             	mov    rdi,rax
  203449:	e8 ec 01 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  20344e:	83 f0 01             	xor    eax,0x1
  203451:	84 c0                	test   al,al
  203453:	74 09                	je     20345e <memory::paging::get_physical_address(void*)+0xfa>
  203455:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
  20345c:	eb 58                	jmp    2034b6 <memory::paging::get_physical_address(void*)+0x152>
  20345e:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203462:	48 89 c7             	mov    rdi,rax
  203465:	e8 06 02 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  20346a:	48 c1 e0 0c          	shl    rax,0xc
  20346e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  203472:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  203476:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  20347a:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  20347e:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  203482:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203486:	be 00 00 00 00       	mov    esi,0x0
  20348b:	48 89 c7             	mov    rdi,rax
  20348e:	e8 a7 01 00 00       	call   20363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>
  203493:	83 f0 01             	xor    eax,0x1
  203496:	84 c0                	test   al,al
  203498:	74 09                	je     2034a3 <memory::paging::get_physical_address(void*)+0x13f>
  20349a:	48 c7 c0 ff ff ff ff 	mov    rax,0xffffffffffffffff
  2034a1:	eb 13                	jmp    2034b6 <memory::paging::get_physical_address(void*)+0x152>
  2034a3:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2034a7:	48 89 c7             	mov    rdi,rax
  2034aa:	e8 c1 01 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  2034af:	0f b7 55 fe          	movzx  edx,WORD PTR [rbp-0x2]
  2034b3:	48 09 d0             	or     rax,rdx
  2034b6:	c9                   	leave  
  2034b7:	c3                   	ret    

00000000002034b8 <donate_to_userspace>:
  2034b8:	55                   	push   rbp
  2034b9:	48 89 e5             	mov    rbp,rsp
  2034bc:	48 83 ec 60          	sub    rsp,0x60
  2034c0:	48 89 7d a8          	mov    QWORD PTR [rbp-0x58],rdi
  2034c4:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
  2034c8:	48 8d 45 c0          	lea    rax,[rbp-0x40]
  2034cc:	48 89 d6             	mov    rsi,rdx
  2034cf:	48 89 c7             	mov    rdi,rax
  2034d2:	e8 01 fb ff ff       	call   202fd8 <memory::paging::page_map_indexer::page_map_indexer(unsigned long)>
  2034d7:	48 8b 05 32 cc 00 00 	mov    rax,QWORD PTR [rip+0xcc32]        # 210110 <memory::paging::pml_4>
  2034de:	48 8b 55 c0          	mov    rdx,QWORD PTR [rbp-0x40]
  2034e2:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  2034e6:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  2034ea:	48 8b 15 1f cc 00 00 	mov    rdx,QWORD PTR [rip+0xcc1f]        # 210110 <memory::paging::pml_4>
  2034f1:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  2034f5:	48 c1 e0 03          	shl    rax,0x3
  2034f9:	48 01 d0             	add    rax,rdx
  2034fc:	ba 01 00 00 00       	mov    edx,0x1
  203501:	be 02 00 00 00       	mov    esi,0x2
  203506:	48 89 c7             	mov    rdi,rax
  203509:	e8 ce 00 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  20350e:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  203512:	48 89 c7             	mov    rdi,rax
  203515:	e8 56 01 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  20351a:	48 c1 e0 0c          	shl    rax,0xc
  20351e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203522:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  203526:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  20352d:	00 
  20352e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203532:	48 01 d0             	add    rax,rdx
  203535:	ba 01 00 00 00       	mov    edx,0x1
  20353a:	be 02 00 00 00       	mov    esi,0x2
  20353f:	48 89 c7             	mov    rdi,rax
  203542:	e8 95 00 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203547:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  20354b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20354f:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  203553:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  203557:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  20355b:	48 89 c7             	mov    rdi,rax
  20355e:	e8 0d 01 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  203563:	48 c1 e0 0c          	shl    rax,0xc
  203567:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20356b:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  20356f:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  203576:	00 
  203577:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20357b:	48 01 d0             	add    rax,rdx
  20357e:	ba 01 00 00 00       	mov    edx,0x1
  203583:	be 02 00 00 00       	mov    esi,0x2
  203588:	48 89 c7             	mov    rdi,rax
  20358b:	e8 4c 00 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203590:	48 8b 55 d0          	mov    rdx,QWORD PTR [rbp-0x30]
  203594:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203598:	48 8b 04 d0          	mov    rax,QWORD PTR [rax+rdx*8]
  20359c:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  2035a0:	48 8d 45 b8          	lea    rax,[rbp-0x48]
  2035a4:	48 89 c7             	mov    rdi,rax
  2035a7:	e8 c4 00 00 00       	call   203670 <memory::paging::page_directory_entry::get_address()>
  2035ac:	48 c1 e0 0c          	shl    rax,0xc
  2035b0:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  2035b4:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  2035b8:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2035bf:	00 
  2035c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2035c4:	48 01 d0             	add    rax,rdx
  2035c7:	ba 01 00 00 00       	mov    edx,0x1
  2035cc:	be 02 00 00 00       	mov    esi,0x2
  2035d1:	48 89 c7             	mov    rdi,rax
  2035d4:	e8 03 00 00 00       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  2035d9:	90                   	nop
  2035da:	c9                   	leave  
  2035db:	c3                   	ret    

00000000002035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>:
  2035dc:	55                   	push   rbp
  2035dd:	48 89 e5             	mov    rbp,rsp
  2035e0:	48 83 ec 20          	sub    rsp,0x20
  2035e4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2035e8:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  2035eb:	89 d0                	mov    eax,edx
  2035ed:	88 45 e0             	mov    BYTE PTR [rbp-0x20],al
  2035f0:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  2035f3:	ba 01 00 00 00       	mov    edx,0x1
  2035f8:	89 c1                	mov    ecx,eax
  2035fa:	48 d3 e2             	shl    rdx,cl
  2035fd:	48 89 d0             	mov    rax,rdx
  203600:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203604:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203608:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  20360b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20360f:	48 f7 d0             	not    rax
  203612:	48 21 c2             	and    rdx,rax
  203615:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203619:	48 89 10             	mov    QWORD PTR [rax],rdx
  20361c:	80 7d e0 00          	cmp    BYTE PTR [rbp-0x20],0x0
  203620:	74 15                	je     203637 <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)+0x5b>
  203622:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203626:	48 8b 00             	mov    rax,QWORD PTR [rax]
  203629:	48 0b 45 f8          	or     rax,QWORD PTR [rbp-0x8]
  20362d:	48 89 c2             	mov    rdx,rax
  203630:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203634:	48 89 10             	mov    QWORD PTR [rax],rdx
  203637:	90                   	nop
  203638:	c9                   	leave  
  203639:	c3                   	ret    

000000000020363a <memory::paging::page_directory_entry::get_flag(memory::paging::pt_flag)>:
  20363a:	55                   	push   rbp
  20363b:	48 89 e5             	mov    rbp,rsp
  20363e:	48 83 ec 20          	sub    rsp,0x20
  203642:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203646:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  203649:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  20364c:	ba 01 00 00 00       	mov    edx,0x1
  203651:	89 c1                	mov    ecx,eax
  203653:	48 d3 e2             	shl    rdx,cl
  203656:	48 89 d0             	mov    rax,rdx
  203659:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  20365d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203661:	48 8b 00             	mov    rax,QWORD PTR [rax]
  203664:	48 23 45 f8          	and    rax,QWORD PTR [rbp-0x8]
  203668:	48 85 c0             	test   rax,rax
  20366b:	0f 95 c0             	setne  al
  20366e:	c9                   	leave  
  20366f:	c3                   	ret    

0000000000203670 <memory::paging::page_directory_entry::get_address()>:
  203670:	55                   	push   rbp
  203671:	48 89 e5             	mov    rbp,rsp
  203674:	48 83 ec 08          	sub    rsp,0x8
  203678:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20367c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203680:	48 8b 00             	mov    rax,QWORD PTR [rax]
  203683:	48 ba 00 f0 ff ff ff 	movabs rdx,0xffffffffff000
  20368a:	ff 0f 00 
  20368d:	48 21 d0             	and    rax,rdx
  203690:	c9                   	leave  
  203691:	c3                   	ret    

0000000000203692 <memory::paging::page_directory_entry::set_address(unsigned long)>:
  203692:	55                   	push   rbp
  203693:	48 89 e5             	mov    rbp,rsp
  203696:	48 83 ec 10          	sub    rsp,0x10
  20369a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20369e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  2036a2:	48 b8 ff ff ff ff ff 	movabs rax,0xffffffffff
  2036a9:	00 00 00 
  2036ac:	48 21 45 f0          	and    QWORD PTR [rbp-0x10],rax
  2036b0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2036b4:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2036b7:	48 ba ff 0f 00 00 00 	movabs rdx,0xfff0000000000fff
  2036be:	00 f0 ff 
  2036c1:	48 21 c2             	and    rdx,rax
  2036c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2036c8:	48 89 10             	mov    QWORD PTR [rax],rdx
  2036cb:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2036cf:	48 8b 10             	mov    rdx,QWORD PTR [rax]
  2036d2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2036d6:	48 c1 e0 0c          	shl    rax,0xc
  2036da:	48 09 c2             	or     rdx,rax
  2036dd:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2036e1:	48 89 10             	mov    QWORD PTR [rax],rdx
  2036e4:	90                   	nop
  2036e5:	c9                   	leave  
  2036e6:	c3                   	ret    
  2036e7:	90                   	nop

00000000002036e8 <memory::paging::page_directory_entry::set_pat(unsigned char)>:
  2036e8:	55                   	push   rbp
  2036e9:	48 89 e5             	mov    rbp,rsp
  2036ec:	48 83 ec 10          	sub    rsp,0x10
  2036f0:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  2036f4:	89 f0                	mov    eax,esi
  2036f6:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
  2036f9:	80 65 f4 07          	and    BYTE PTR [rbp-0xc],0x7
  2036fd:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  203701:	83 e0 01             	and    eax,0x1
  203704:	85 c0                	test   eax,eax
  203706:	0f 95 c0             	setne  al
  203709:	0f b6 d0             	movzx  edx,al
  20370c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203710:	be 03 00 00 00       	mov    esi,0x3
  203715:	48 89 c7             	mov    rdi,rax
  203718:	e8 bf fe ff ff       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  20371d:	d0 6d f4             	shr    BYTE PTR [rbp-0xc],1
  203720:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  203724:	83 e0 01             	and    eax,0x1
  203727:	85 c0                	test   eax,eax
  203729:	0f 95 c0             	setne  al
  20372c:	0f b6 d0             	movzx  edx,al
  20372f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203733:	be 04 00 00 00       	mov    esi,0x4
  203738:	48 89 c7             	mov    rdi,rax
  20373b:	e8 9c fe ff ff       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203740:	d0 6d f4             	shr    BYTE PTR [rbp-0xc],1
  203743:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  203747:	83 e0 01             	and    eax,0x1
  20374a:	85 c0                	test   eax,eax
  20374c:	0f 95 c0             	setne  al
  20374f:	0f b6 d0             	movzx  edx,al
  203752:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203756:	be 07 00 00 00       	mov    esi,0x7
  20375b:	48 89 c7             	mov    rdi,rax
  20375e:	e8 79 fe ff ff       	call   2035dc <memory::paging::page_directory_entry::set_flag(memory::paging::pt_flag, bool)>
  203763:	90                   	nop
  203764:	c9                   	leave  
  203765:	c3                   	ret    

0000000000203766 <io::outb(unsigned short, unsigned char)>:
  203766:	55                   	push   rbp
  203767:	48 89 e5             	mov    rbp,rsp
  20376a:	48 83 ec 08          	sub    rsp,0x8
  20376e:	89 f8                	mov    eax,edi
  203770:	89 f2                	mov    edx,esi
  203772:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  203776:	89 d0                	mov    eax,edx
  203778:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  20377b:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  20377f:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  203783:	ee                   	out    dx,al
  203784:	90                   	nop
  203785:	c9                   	leave  
  203786:	c3                   	ret    

0000000000203787 <io::pit::pit_init()>:
  203787:	55                   	push   rbp
  203788:	48 89 e5             	mov    rbp,rsp
  20378b:	bf 00 00 00 00       	mov    edi,0x0
  203790:	e8 b8 07 00 00       	call   203f4d <irq_unmask>
  203795:	90                   	nop
  203796:	5d                   	pop    rbp
  203797:	c3                   	ret    

0000000000203798 <io::pit::set_c0_frequency(unsigned int)>:
  203798:	55                   	push   rbp
  203799:	48 89 e5             	mov    rbp,rsp
  20379c:	48 83 ec 08          	sub    rsp,0x8
  2037a0:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  2037a3:	fa                   	cli    
  2037a4:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2037a7:	89 05 6f c9 00 00    	mov    DWORD PTR [rip+0xc96f],eax        # 21011c <io::pit::frequency_hz>
  2037ad:	b8 de 34 12 00       	mov    eax,0x1234de
  2037b2:	ba 00 00 00 00       	mov    edx,0x0
  2037b7:	f7 75 fc             	div    DWORD PTR [rbp-0x4]
  2037ba:	66 89 05 57 c9 00 00 	mov    WORD PTR [rip+0xc957],ax        # 210118 <io::pit::divisor>
  2037c1:	be 34 00 00 00       	mov    esi,0x34
  2037c6:	bf 43 00 00 00       	mov    edi,0x43
  2037cb:	e8 96 ff ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  2037d0:	0f b7 05 41 c9 00 00 	movzx  eax,WORD PTR [rip+0xc941]        # 210118 <io::pit::divisor>
  2037d7:	0f b6 c0             	movzx  eax,al
  2037da:	89 c6                	mov    esi,eax
  2037dc:	bf 40 00 00 00       	mov    edi,0x40
  2037e1:	e8 80 ff ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  2037e6:	0f b7 05 2b c9 00 00 	movzx  eax,WORD PTR [rip+0xc92b]        # 210118 <io::pit::divisor>
  2037ed:	66 c1 e8 08          	shr    ax,0x8
  2037f1:	0f b6 c0             	movzx  eax,al
  2037f4:	89 c6                	mov    esi,eax
  2037f6:	bf 40 00 00 00       	mov    edi,0x40
  2037fb:	e8 66 ff ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  203800:	fb                   	sti    
  203801:	90                   	nop
  203802:	c9                   	leave  
  203803:	c3                   	ret    

0000000000203804 <io::pit::set_c2_frequency(unsigned int)>:
  203804:	55                   	push   rbp
  203805:	48 89 e5             	mov    rbp,rsp
  203808:	48 83 ec 08          	sub    rsp,0x8
  20380c:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  20380f:	fa                   	cli    
  203810:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  203813:	89 05 0b c9 00 00    	mov    DWORD PTR [rip+0xc90b],eax        # 210124 <io::pit::c2_frequency_hz>
  203819:	b8 de 34 12 00       	mov    eax,0x1234de
  20381e:	ba 00 00 00 00       	mov    edx,0x0
  203823:	f7 75 fc             	div    DWORD PTR [rbp-0x4]
  203826:	66 89 05 f3 c8 00 00 	mov    WORD PTR [rip+0xc8f3],ax        # 210120 <io::pit::c2_divisor>
  20382d:	be b6 00 00 00       	mov    esi,0xb6
  203832:	bf 43 00 00 00       	mov    edi,0x43
  203837:	e8 2a ff ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  20383c:	0f b7 05 d5 c8 00 00 	movzx  eax,WORD PTR [rip+0xc8d5]        # 210118 <io::pit::divisor>
  203843:	0f b6 c0             	movzx  eax,al
  203846:	89 c6                	mov    esi,eax
  203848:	bf 42 00 00 00       	mov    edi,0x42
  20384d:	e8 14 ff ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  203852:	0f b7 05 bf c8 00 00 	movzx  eax,WORD PTR [rip+0xc8bf]        # 210118 <io::pit::divisor>
  203859:	66 c1 e8 08          	shr    ax,0x8
  20385d:	0f b6 c0             	movzx  eax,al
  203860:	89 c6                	mov    esi,eax
  203862:	bf 42 00 00 00       	mov    edi,0x42
  203867:	e8 fa fe ff ff       	call   203766 <io::outb(unsigned short, unsigned char)>
  20386c:	fb                   	sti    
  20386d:	90                   	nop
  20386e:	c9                   	leave  
  20386f:	c3                   	ret    

0000000000203870 <sys_keyboard_event_subscribe>:
  203870:	55                   	push   rbp
  203871:	48 89 e5             	mov    rbp,rsp
  203874:	48 83 ec 10          	sub    rsp,0x10
  203878:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20387c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203880:	48 89 c7             	mov    rdi,rax
  203883:	e8 57 45 00 00       	call   207ddf <io::keyboard::keyboard_event_subscribe(void (*)(io::keyboard::keyboard_packet))>
  203888:	90                   	nop
  203889:	c9                   	leave  
  20388a:	c3                   	ret    

000000000020388b <sys_copy_framebuffer>:
  20388b:	55                   	push   rbp
  20388c:	48 89 e5             	mov    rbp,rsp
  20388f:	48 83 ec 10          	sub    rsp,0x10
  203893:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  203897:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  20389e:	0f b7 40 08          	movzx  eax,WORD PTR [rax+0x8]
  2038a2:	0f b7 d0             	movzx  edx,ax
  2038a5:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2038ac:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  2038b0:	0f b7 c0             	movzx  eax,ax
  2038b3:	0f af d0             	imul   edx,eax
  2038b6:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2038bd:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  2038c1:	0f b7 c0             	movzx  eax,ax
  2038c4:	0f af c2             	imul   eax,edx
  2038c7:	48 63 d0             	movsxd rdx,eax
  2038ca:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2038d1:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2038d4:	48 89 c1             	mov    rcx,rax
  2038d7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2038db:	48 89 c6             	mov    rsi,rax
  2038de:	48 89 cf             	mov    rdi,rcx
  2038e1:	e8 63 f6 ff ff       	call   202f49 <memory::operations::memcpy(void*, void const*, unsigned long)>
  2038e6:	90                   	nop
  2038e7:	c9                   	leave  
  2038e8:	c3                   	ret    

00000000002038e9 <sys_get_info>:
  2038e9:	55                   	push   rbp
  2038ea:	48 89 e5             	mov    rbp,rsp
  2038ed:	48 83 ec 08          	sub    rsp,0x8
  2038f1:	89 f8                	mov    eax,edi
  2038f3:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  2038f6:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  2038fa:	85 c0                	test   eax,eax
  2038fc:	74 07                	je     203905 <sys_get_info+0x1c>
  2038fe:	83 f8 01             	cmp    eax,0x1
  203901:	74 0e                	je     203911 <sys_get_info+0x28>
  203903:	eb 18                	jmp    20391d <sys_get_info+0x34>
  203905:	48 c7 c0 e0 00 21 00 	mov    rax,0x2100e0
  20390c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20390f:	eb 11                	jmp    203922 <sys_get_info+0x39>
  203911:	48 c7 c0 d0 00 21 00 	mov    rax,0x2100d0
  203918:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20391b:	eb 05                	jmp    203922 <sys_get_info+0x39>
  20391d:	b8 00 00 00 00       	mov    eax,0x0
  203922:	c9                   	leave  
  203923:	c3                   	ret    

0000000000203924 <sys_tty_print>:
  203924:	55                   	push   rbp
  203925:	48 89 e5             	mov    rbp,rsp
  203928:	48 83 ec 10          	sub    rsp,0x10
  20392c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  203930:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203934:	48 89 c7             	mov    rdi,rax
  203937:	e8 25 14 00 00       	call   204d61 <io::tty::write(char const*)>
  20393c:	90                   	nop
  20393d:	c9                   	leave  
  20393e:	c3                   	ret    

000000000020393f <sys_allocate_page>:
  20393f:	55                   	push   rbp
  203940:	48 89 e5             	mov    rbp,rsp
  203943:	48 83 ec 10          	sub    rsp,0x10
  203947:	e8 7d f3 ff ff       	call   202cc9 <request_page>
  20394c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203950:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203954:	48 89 c7             	mov    rdi,rax
  203957:	e8 5c fb ff ff       	call   2034b8 <donate_to_userspace>
  20395c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203960:	c9                   	leave  
  203961:	c3                   	ret    

0000000000203962 <util::bitmap::operator[](unsigned long)>:
  203962:	55                   	push   rbp
  203963:	48 89 e5             	mov    rbp,rsp
  203966:	48 83 ec 10          	sub    rsp,0x10
  20396a:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20396e:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  203972:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  203976:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20397a:	48 89 d6             	mov    rsi,rdx
  20397d:	48 89 c7             	mov    rdi,rax
  203980:	e8 03 00 00 00       	call   203988 <util::bitmap::get(unsigned long)>
  203985:	c9                   	leave  
  203986:	c3                   	ret    
  203987:	90                   	nop

0000000000203988 <util::bitmap::get(unsigned long)>:
  203988:	55                   	push   rbp
  203989:	48 89 e5             	mov    rbp,rsp
  20398c:	48 83 ec 20          	sub    rsp,0x20
  203990:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203994:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  203998:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  20399c:	48 c1 e8 03          	shr    rax,0x3
  2039a0:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2039a4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2039a8:	83 e0 07             	and    eax,0x7
  2039ab:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
  2039ae:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
  2039b2:	ba 80 00 00 00       	mov    edx,0x80
  2039b7:	89 c1                	mov    ecx,eax
  2039b9:	d3 fa                	sar    edx,cl
  2039bb:	89 d0                	mov    eax,edx
  2039bd:	88 45 f6             	mov    BYTE PTR [rbp-0xa],al
  2039c0:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2039c4:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  2039c8:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2039cc:	48 01 d0             	add    rax,rdx
  2039cf:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2039d2:	22 45 f6             	and    al,BYTE PTR [rbp-0xa]
  2039d5:	84 c0                	test   al,al
  2039d7:	0f 95 c0             	setne  al
  2039da:	c9                   	leave  
  2039db:	c3                   	ret    

00000000002039dc <util::bitmap::set(unsigned long, bool)>:
  2039dc:	55                   	push   rbp
  2039dd:	48 89 e5             	mov    rbp,rsp
  2039e0:	48 83 ec 28          	sub    rsp,0x28
  2039e4:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2039e8:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  2039ec:	89 d0                	mov    eax,edx
  2039ee:	88 45 dc             	mov    BYTE PTR [rbp-0x24],al
  2039f1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2039f5:	48 c1 e8 03          	shr    rax,0x3
  2039f9:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2039fd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  203a01:	83 e0 07             	and    eax,0x7
  203a04:	88 45 f7             	mov    BYTE PTR [rbp-0x9],al
  203a07:	0f b6 45 f7          	movzx  eax,BYTE PTR [rbp-0x9]
  203a0b:	ba 80 00 00 00       	mov    edx,0x80
  203a10:	89 c1                	mov    ecx,eax
  203a12:	d3 fa                	sar    edx,cl
  203a14:	89 d0                	mov    eax,edx
  203a16:	88 45 f6             	mov    BYTE PTR [rbp-0xa],al
  203a19:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203a1d:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  203a21:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203a25:	48 01 d0             	add    rax,rdx
  203a28:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203a2b:	89 c2                	mov    edx,eax
  203a2d:	0f b6 45 f6          	movzx  eax,BYTE PTR [rbp-0xa]
  203a31:	f7 d0                	not    eax
  203a33:	89 d1                	mov    ecx,edx
  203a35:	21 c1                	and    ecx,eax
  203a37:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203a3b:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  203a3f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203a43:	48 01 d0             	add    rax,rdx
  203a46:	89 ca                	mov    edx,ecx
  203a48:	88 10                	mov    BYTE PTR [rax],dl
  203a4a:	80 7d dc 00          	cmp    BYTE PTR [rbp-0x24],0x0
  203a4e:	74 26                	je     203a76 <util::bitmap::set(unsigned long, bool)+0x9a>
  203a50:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203a54:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
  203a58:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203a5c:	48 01 d0             	add    rax,rdx
  203a5f:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203a62:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  203a66:	48 8b 4a 08          	mov    rcx,QWORD PTR [rdx+0x8]
  203a6a:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  203a6e:	48 01 ca             	add    rdx,rcx
  203a71:	0a 45 f6             	or     al,BYTE PTR [rbp-0xa]
  203a74:	88 02                	mov    BYTE PTR [rdx],al
  203a76:	90                   	nop
  203a77:	c9                   	leave  
  203a78:	c3                   	ret    

0000000000203a79 <util::itoa(long, int)>:
  203a79:	55                   	push   rbp
  203a7a:	48 89 e5             	mov    rbp,rsp
  203a7d:	48 83 ec 20          	sub    rsp,0x20
  203a81:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203a85:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  203a88:	48 c7 45 f8 3c 00 00 	mov    QWORD PTR [rbp-0x8],0x3c
  203a8f:	00 
  203a90:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  203a95:	74 4b                	je     203ae2 <util::itoa(long, int)+0x69>
  203a97:	48 83 7d f8 00       	cmp    QWORD PTR [rbp-0x8],0x0
  203a9c:	74 44                	je     203ae2 <util::itoa(long, int)+0x69>
  203a9e:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  203aa1:	48 63 c8             	movsxd rcx,eax
  203aa4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203aa8:	48 99                	cqo    
  203aaa:	48 f7 f9             	idiv   rcx
  203aad:	48 8d 05 f8 6b 00 00 	lea    rax,[rip+0x6bf8]        # 20a6ac <BASE_GRAN+0x684>
  203ab4:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
  203ab8:	48 8d 0d 81 c6 00 00 	lea    rcx,[rip+0xc681]        # 210140 <util::itoa(long, int)::buf>
  203abf:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  203ac3:	48 01 ca             	add    rdx,rcx
  203ac6:	88 02                	mov    BYTE PTR [rdx],al
  203ac8:	48 83 6d f8 01       	sub    QWORD PTR [rbp-0x8],0x1
  203acd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  203ad0:	48 63 f0             	movsxd rsi,eax
  203ad3:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203ad7:	48 99                	cqo    
  203ad9:	48 f7 fe             	idiv   rsi
  203adc:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  203ae0:	eb ae                	jmp    203a90 <util::itoa(long, int)+0x17>
  203ae2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203ae6:	48 8d 50 01          	lea    rdx,[rax+0x1]
  203aea:	48 8d 05 4f c6 00 00 	lea    rax,[rip+0xc64f]        # 210140 <util::itoa(long, int)::buf>
  203af1:	48 01 d0             	add    rax,rdx
  203af4:	c9                   	leave  
  203af5:	c3                   	ret    

0000000000203af6 <util::strcomp(char const*, char const*)>:
  203af6:	55                   	push   rbp
  203af7:	48 89 e5             	mov    rbp,rsp
  203afa:	48 83 ec 10          	sub    rsp,0x10
  203afe:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  203b02:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  203b06:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b0a:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203b0d:	84 c0                	test   al,al
  203b0f:	74 25                	je     203b36 <util::strcomp(char const*, char const*)+0x40>
  203b11:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b15:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  203b18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203b1c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203b1f:	38 c2                	cmp    dl,al
  203b21:	74 07                	je     203b2a <util::strcomp(char const*, char const*)+0x34>
  203b23:	b8 00 00 00 00       	mov    eax,0x0
  203b28:	eb 11                	jmp    203b3b <util::strcomp(char const*, char const*)+0x45>
  203b2a:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
  203b2f:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  203b34:	eb d0                	jmp    203b06 <util::strcomp(char const*, char const*)+0x10>
  203b36:	b8 01 00 00 00       	mov    eax,0x1
  203b3b:	c9                   	leave  
  203b3c:	c3                   	ret    

0000000000203b3d <util::strlen(char const*)>:
  203b3d:	55                   	push   rbp
  203b3e:	48 89 e5             	mov    rbp,rsp
  203b41:	48 83 ec 18          	sub    rsp,0x18
  203b45:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203b49:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  203b50:	00 
  203b51:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  203b55:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b59:	48 01 d0             	add    rax,rdx
  203b5c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203b5f:	84 c0                	test   al,al
  203b61:	74 19                	je     203b7c <util::strlen(char const*)+0x3f>
  203b63:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  203b67:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b6b:	48 01 d0             	add    rax,rdx
  203b6e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203b71:	84 c0                	test   al,al
  203b73:	74 07                	je     203b7c <util::strlen(char const*)+0x3f>
  203b75:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  203b7a:	eb d5                	jmp    203b51 <util::strlen(char const*)+0x14>
  203b7c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b80:	c9                   	leave  
  203b81:	c3                   	ret    

0000000000203b82 <util::strcat(char*, char const*)>:
  203b82:	55                   	push   rbp
  203b83:	48 89 e5             	mov    rbp,rsp
  203b86:	48 83 ec 20          	sub    rsp,0x20
  203b8a:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203b8e:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  203b92:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203b96:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203b9a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203b9e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203ba1:	84 c0                	test   al,al
  203ba3:	74 07                	je     203bac <util::strcat(char*, char const*)+0x2a>
  203ba5:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  203baa:	eb ee                	jmp    203b9a <util::strcat(char*, char const*)+0x18>
  203bac:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  203bb0:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203bb3:	84 c0                	test   al,al
  203bb5:	74 19                	je     203bd0 <util::strcat(char*, char const*)+0x4e>
  203bb7:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  203bbb:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  203bbe:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203bc2:	88 10                	mov    BYTE PTR [rax],dl
  203bc4:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  203bc9:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  203bce:	eb dc                	jmp    203bac <util::strcat(char*, char const*)+0x2a>
  203bd0:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203bd4:	c6 00 00             	mov    BYTE PTR [rax],0x0
  203bd7:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203bdb:	c9                   	leave  
  203bdc:	c3                   	ret    

0000000000203bdd <util::strcpy(char*, char const*)>:
  203bdd:	55                   	push   rbp
  203bde:	48 89 e5             	mov    rbp,rsp
  203be1:	48 83 ec 20          	sub    rsp,0x20
  203be5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  203be9:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  203bed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203bf1:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203bf5:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  203bf9:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  203bfc:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203c00:	88 10                	mov    BYTE PTR [rax],dl
  203c02:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  203c06:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  203c09:	84 c0                	test   al,al
  203c0b:	0f 95 c0             	setne  al
  203c0e:	84 c0                	test   al,al
  203c10:	74 0c                	je     203c1e <util::strcpy(char*, char const*)+0x41>
  203c12:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  203c17:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  203c1c:	eb d7                	jmp    203bf5 <util::strcpy(char*, char const*)+0x18>
  203c1e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203c22:	c9                   	leave  
  203c23:	c3                   	ret    

0000000000203c24 <util::isdigit(char)>:
  203c24:	55                   	push   rbp
  203c25:	48 89 e5             	mov    rbp,rsp
  203c28:	48 83 ec 08          	sub    rsp,0x8
  203c2c:	89 f8                	mov    eax,edi
  203c2e:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  203c31:	80 7d fc 2f          	cmp    BYTE PTR [rbp-0x4],0x2f
  203c35:	7e 0d                	jle    203c44 <util::isdigit(char)+0x20>
  203c37:	80 7d fc 39          	cmp    BYTE PTR [rbp-0x4],0x39
  203c3b:	7f 07                	jg     203c44 <util::isdigit(char)+0x20>
  203c3d:	b8 01 00 00 00       	mov    eax,0x1
  203c42:	eb 05                	jmp    203c49 <util::isdigit(char)+0x25>
  203c44:	b8 00 00 00 00       	mov    eax,0x0
  203c49:	0f b6 c0             	movzx  eax,al
  203c4c:	c9                   	leave  
  203c4d:	c3                   	ret    

0000000000203c4e <io::outb(unsigned short, unsigned char)>:
  203c4e:	55                   	push   rbp
  203c4f:	48 89 e5             	mov    rbp,rsp
  203c52:	48 83 ec 08          	sub    rsp,0x8
  203c56:	89 f8                	mov    eax,edi
  203c58:	89 f2                	mov    edx,esi
  203c5a:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  203c5e:	89 d0                	mov    eax,edx
  203c60:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  203c63:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  203c67:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  203c6b:	ee                   	out    dx,al
  203c6c:	90                   	nop
  203c6d:	c9                   	leave  
  203c6e:	c3                   	ret    

0000000000203c6f <io::inb(unsigned short)>:
  203c6f:	55                   	push   rbp
  203c70:	48 89 e5             	mov    rbp,rsp
  203c73:	48 83 ec 18          	sub    rsp,0x18
  203c77:	89 f8                	mov    eax,edi
  203c79:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
  203c7d:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
  203c81:	89 c2                	mov    edx,eax
  203c83:	ec                   	in     al,dx
  203c84:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  203c87:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203c8b:	c9                   	leave  
  203c8c:	c3                   	ret    

0000000000203c8d <sys::audio::pcspk::init()>:
  203c8d:	55                   	push   rbp
  203c8e:	48 89 e5             	mov    rbp,rsp
  203c91:	bf 61 00 00 00       	mov    edi,0x61
  203c96:	e8 d4 ff ff ff       	call   203c6f <io::inb(unsigned short)>
  203c9b:	83 c8 01             	or     eax,0x1
  203c9e:	0f b6 c0             	movzx  eax,al
  203ca1:	89 c6                	mov    esi,eax
  203ca3:	bf 61 00 00 00       	mov    edi,0x61
  203ca8:	e8 a1 ff ff ff       	call   203c4e <io::outb(unsigned short, unsigned char)>
  203cad:	90                   	nop
  203cae:	5d                   	pop    rbp
  203caf:	c3                   	ret    

0000000000203cb0 <sys::audio::pcspk::play_sound(unsigned int)>:
  203cb0:	55                   	push   rbp
  203cb1:	48 89 e5             	mov    rbp,rsp
  203cb4:	48 83 ec 20          	sub    rsp,0x20
  203cb8:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  203cbb:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  203cbe:	89 c7                	mov    edi,eax
  203cc0:	e8 3f fb ff ff       	call   203804 <io::pit::set_c2_frequency(unsigned int)>
  203cc5:	bf 61 00 00 00       	mov    edi,0x61
  203cca:	e8 a0 ff ff ff       	call   203c6f <io::inb(unsigned short)>
  203ccf:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  203cd2:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203cd6:	83 c8 03             	or     eax,0x3
  203cd9:	38 45 ff             	cmp    BYTE PTR [rbp-0x1],al
  203cdc:	74 16                	je     203cf4 <sys::audio::pcspk::play_sound(unsigned int)+0x44>
  203cde:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203ce2:	83 c8 03             	or     eax,0x3
  203ce5:	0f b6 c0             	movzx  eax,al
  203ce8:	89 c6                	mov    esi,eax
  203cea:	bf 61 00 00 00       	mov    edi,0x61
  203cef:	e8 5a ff ff ff       	call   203c4e <io::outb(unsigned short, unsigned char)>
  203cf4:	90                   	nop
  203cf5:	c9                   	leave  
  203cf6:	c3                   	ret    

0000000000203cf7 <sys::audio::pcspk::stop_sound()>:
  203cf7:	55                   	push   rbp
  203cf8:	48 89 e5             	mov    rbp,rsp
  203cfb:	48 83 ec 10          	sub    rsp,0x10
  203cff:	bf 61 00 00 00       	mov    edi,0x61
  203d04:	e8 66 ff ff ff       	call   203c6f <io::inb(unsigned short)>
  203d09:	83 e0 fc             	and    eax,0xfffffffc
  203d0c:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  203d0f:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203d13:	89 c6                	mov    esi,eax
  203d15:	bf 61 00 00 00       	mov    edi,0x61
  203d1a:	e8 2f ff ff ff       	call   203c4e <io::outb(unsigned short, unsigned char)>
  203d1f:	90                   	nop
  203d20:	c9                   	leave  
  203d21:	c3                   	ret    

0000000000203d22 <sys::audio::pcspk::beep()>:
  203d22:	55                   	push   rbp
  203d23:	48 89 e5             	mov    rbp,rsp
  203d26:	bf e8 03 00 00       	mov    edi,0x3e8
  203d2b:	e8 80 ff ff ff       	call   203cb0 <sys::audio::pcspk::play_sound(unsigned int)>
  203d30:	bf 0a 00 00 00       	mov    edi,0xa
  203d35:	e8 d6 49 00 00       	call   208710 <sleep>
  203d3a:	e8 b8 ff ff ff       	call   203cf7 <sys::audio::pcspk::stop_sound()>
  203d3f:	bf 01 00 00 00       	mov    edi,0x1
  203d44:	e8 bb fa ff ff       	call   203804 <io::pit::set_c2_frequency(unsigned int)>
  203d49:	90                   	nop
  203d4a:	5d                   	pop    rbp
  203d4b:	c3                   	ret    

0000000000203d4c <sys::audio::pcspk::beep(unsigned int, unsigned int)>:
  203d4c:	55                   	push   rbp
  203d4d:	48 89 e5             	mov    rbp,rsp
  203d50:	48 83 ec 10          	sub    rsp,0x10
  203d54:	89 7d fc             	mov    DWORD PTR [rbp-0x4],edi
  203d57:	89 75 f8             	mov    DWORD PTR [rbp-0x8],esi
  203d5a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  203d5d:	89 c7                	mov    edi,eax
  203d5f:	e8 4c ff ff ff       	call   203cb0 <sys::audio::pcspk::play_sound(unsigned int)>
  203d64:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  203d67:	48 89 c7             	mov    rdi,rax
  203d6a:	e8 a1 49 00 00       	call   208710 <sleep>
  203d6f:	e8 83 ff ff ff       	call   203cf7 <sys::audio::pcspk::stop_sound()>
  203d74:	bf 01 00 00 00       	mov    edi,0x1
  203d79:	e8 86 fa ff ff       	call   203804 <io::pit::set_c2_frequency(unsigned int)>
  203d7e:	90                   	nop
  203d7f:	c9                   	leave  
  203d80:	c3                   	ret    

0000000000203d81 <io::outb(unsigned short, unsigned char)>:
  203d81:	55                   	push   rbp
  203d82:	48 89 e5             	mov    rbp,rsp
  203d85:	48 83 ec 08          	sub    rsp,0x8
  203d89:	89 f8                	mov    eax,edi
  203d8b:	89 f2                	mov    edx,esi
  203d8d:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  203d91:	89 d0                	mov    eax,edx
  203d93:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  203d96:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  203d9a:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  203d9e:	ee                   	out    dx,al
  203d9f:	90                   	nop
  203da0:	c9                   	leave  
  203da1:	c3                   	ret    

0000000000203da2 <io::inb(unsigned short)>:
  203da2:	55                   	push   rbp
  203da3:	48 89 e5             	mov    rbp,rsp
  203da6:	48 83 ec 18          	sub    rsp,0x18
  203daa:	89 f8                	mov    eax,edi
  203dac:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
  203db0:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
  203db4:	89 c2                	mov    edx,eax
  203db6:	ec                   	in     al,dx
  203db7:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  203dba:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203dbe:	c9                   	leave  
  203dbf:	c3                   	ret    

0000000000203dc0 <io::io_wait()>:
  203dc0:	55                   	push   rbp
  203dc1:	48 89 e5             	mov    rbp,rsp
  203dc4:	b8 00 00 00 00       	mov    eax,0x0
  203dc9:	e6 80                	out    0x80,al
  203dcb:	90                   	nop
  203dcc:	5d                   	pop    rbp
  203dcd:	c3                   	ret    

0000000000203dce <pic_send_eoi>:
  203dce:	55                   	push   rbp
  203dcf:	48 89 e5             	mov    rbp,rsp
  203dd2:	48 83 ec 08          	sub    rsp,0x8
  203dd6:	89 f8                	mov    eax,edi
  203dd8:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  203ddb:	80 7d fc 07          	cmp    BYTE PTR [rbp-0x4],0x7
  203ddf:	76 0f                	jbe    203df0 <pic_send_eoi+0x22>
  203de1:	be 20 00 00 00       	mov    esi,0x20
  203de6:	bf a0 00 00 00       	mov    edi,0xa0
  203deb:	e8 91 ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203df0:	be 20 00 00 00       	mov    esi,0x20
  203df5:	bf 20 00 00 00       	mov    edi,0x20
  203dfa:	e8 82 ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203dff:	90                   	nop
  203e00:	c9                   	leave  
  203e01:	c3                   	ret    

0000000000203e02 <pic_remap>:
  203e02:	55                   	push   rbp
  203e03:	48 89 e5             	mov    rbp,rsp
  203e06:	48 83 ec 18          	sub    rsp,0x18
  203e0a:	89 fa                	mov    edx,edi
  203e0c:	89 f0                	mov    eax,esi
  203e0e:	88 55 ec             	mov    BYTE PTR [rbp-0x14],dl
  203e11:	88 45 e8             	mov    BYTE PTR [rbp-0x18],al
  203e14:	bf 21 00 00 00       	mov    edi,0x21
  203e19:	e8 84 ff ff ff       	call   203da2 <io::inb(unsigned short)>
  203e1e:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  203e21:	bf a1 00 00 00       	mov    edi,0xa1
  203e26:	e8 77 ff ff ff       	call   203da2 <io::inb(unsigned short)>
  203e2b:	88 45 fe             	mov    BYTE PTR [rbp-0x2],al
  203e2e:	be 11 00 00 00       	mov    esi,0x11
  203e33:	bf 20 00 00 00       	mov    edi,0x20
  203e38:	e8 44 ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203e3d:	e8 7e ff ff ff       	call   203dc0 <io::io_wait()>
  203e42:	be 11 00 00 00       	mov    esi,0x11
  203e47:	bf a0 00 00 00       	mov    edi,0xa0
  203e4c:	e8 30 ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203e51:	e8 6a ff ff ff       	call   203dc0 <io::io_wait()>
  203e56:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  203e5a:	89 c6                	mov    esi,eax
  203e5c:	bf 21 00 00 00       	mov    edi,0x21
  203e61:	e8 1b ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203e66:	e8 55 ff ff ff       	call   203dc0 <io::io_wait()>
  203e6b:	0f b6 45 e8          	movzx  eax,BYTE PTR [rbp-0x18]
  203e6f:	89 c6                	mov    esi,eax
  203e71:	bf a1 00 00 00       	mov    edi,0xa1
  203e76:	e8 06 ff ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203e7b:	e8 40 ff ff ff       	call   203dc0 <io::io_wait()>
  203e80:	be 04 00 00 00       	mov    esi,0x4
  203e85:	bf 21 00 00 00       	mov    edi,0x21
  203e8a:	e8 f2 fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203e8f:	e8 2c ff ff ff       	call   203dc0 <io::io_wait()>
  203e94:	be 02 00 00 00       	mov    esi,0x2
  203e99:	bf a1 00 00 00       	mov    edi,0xa1
  203e9e:	e8 de fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203ea3:	e8 18 ff ff ff       	call   203dc0 <io::io_wait()>
  203ea8:	be 01 00 00 00       	mov    esi,0x1
  203ead:	bf 21 00 00 00       	mov    edi,0x21
  203eb2:	e8 ca fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203eb7:	e8 04 ff ff ff       	call   203dc0 <io::io_wait()>
  203ebc:	be 01 00 00 00       	mov    esi,0x1
  203ec1:	bf a1 00 00 00       	mov    edi,0xa1
  203ec6:	e8 b6 fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203ecb:	e8 f0 fe ff ff       	call   203dc0 <io::io_wait()>
  203ed0:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  203ed4:	89 c6                	mov    esi,eax
  203ed6:	bf 21 00 00 00       	mov    edi,0x21
  203edb:	e8 a1 fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203ee0:	0f b6 45 fe          	movzx  eax,BYTE PTR [rbp-0x2]
  203ee4:	89 c6                	mov    esi,eax
  203ee6:	bf a1 00 00 00       	mov    edi,0xa1
  203eeb:	e8 91 fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203ef0:	90                   	nop
  203ef1:	c9                   	leave  
  203ef2:	c3                   	ret    

0000000000203ef3 <irq_mask>:
  203ef3:	55                   	push   rbp
  203ef4:	48 89 e5             	mov    rbp,rsp
  203ef7:	48 83 ec 18          	sub    rsp,0x18
  203efb:	89 f8                	mov    eax,edi
  203efd:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
  203f00:	80 7d ec 07          	cmp    BYTE PTR [rbp-0x14],0x7
  203f04:	77 08                	ja     203f0e <irq_mask+0x1b>
  203f06:	66 c7 45 fe 21 00    	mov    WORD PTR [rbp-0x2],0x21
  203f0c:	eb 0a                	jmp    203f18 <irq_mask+0x25>
  203f0e:	66 c7 45 fe a1 00    	mov    WORD PTR [rbp-0x2],0xa1
  203f14:	80 6d ec 08          	sub    BYTE PTR [rbp-0x14],0x8
  203f18:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  203f1c:	89 c7                	mov    edi,eax
  203f1e:	e8 7f fe ff ff       	call   203da2 <io::inb(unsigned short)>
  203f23:	89 c6                	mov    esi,eax
  203f25:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  203f29:	ba 01 00 00 00       	mov    edx,0x1
  203f2e:	89 c1                	mov    ecx,eax
  203f30:	d3 e2                	shl    edx,cl
  203f32:	89 d0                	mov    eax,edx
  203f34:	09 f0                	or     eax,esi
  203f36:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  203f39:	0f b6 55 fd          	movzx  edx,BYTE PTR [rbp-0x3]
  203f3d:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  203f41:	89 d6                	mov    esi,edx
  203f43:	89 c7                	mov    edi,eax
  203f45:	e8 37 fe ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203f4a:	90                   	nop
  203f4b:	c9                   	leave  
  203f4c:	c3                   	ret    

0000000000203f4d <irq_unmask>:
  203f4d:	55                   	push   rbp
  203f4e:	48 89 e5             	mov    rbp,rsp
  203f51:	48 83 ec 18          	sub    rsp,0x18
  203f55:	89 f8                	mov    eax,edi
  203f57:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
  203f5a:	80 7d ec 07          	cmp    BYTE PTR [rbp-0x14],0x7
  203f5e:	77 08                	ja     203f68 <irq_unmask+0x1b>
  203f60:	66 c7 45 fe 21 00    	mov    WORD PTR [rbp-0x2],0x21
  203f66:	eb 0a                	jmp    203f72 <irq_unmask+0x25>
  203f68:	66 c7 45 fe a1 00    	mov    WORD PTR [rbp-0x2],0xa1
  203f6e:	80 6d ec 08          	sub    BYTE PTR [rbp-0x14],0x8
  203f72:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  203f76:	89 c7                	mov    edi,eax
  203f78:	e8 25 fe ff ff       	call   203da2 <io::inb(unsigned short)>
  203f7d:	89 c6                	mov    esi,eax
  203f7f:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  203f83:	ba 01 00 00 00       	mov    edx,0x1
  203f88:	89 c1                	mov    ecx,eax
  203f8a:	d3 e2                	shl    edx,cl
  203f8c:	89 d0                	mov    eax,edx
  203f8e:	f7 d0                	not    eax
  203f90:	21 f0                	and    eax,esi
  203f92:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  203f95:	0f b6 55 fd          	movzx  edx,BYTE PTR [rbp-0x3]
  203f99:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  203f9d:	89 d6                	mov    esi,edx
  203f9f:	89 c7                	mov    edi,eax
  203fa1:	e8 db fd ff ff       	call   203d81 <io::outb(unsigned short, unsigned char)>
  203fa6:	90                   	nop
  203fa7:	c9                   	leave  
  203fa8:	c3                   	ret    

0000000000203fa9 <configure_pic>:
  203fa9:	55                   	push   rbp
  203faa:	48 89 e5             	mov    rbp,rsp
  203fad:	be 28 00 00 00       	mov    esi,0x28
  203fb2:	bf 20 00 00 00       	mov    edi,0x20
  203fb7:	e8 46 fe ff ff       	call   203e02 <pic_remap>
  203fbc:	90                   	nop
  203fbd:	5d                   	pop    rbp
  203fbe:	c3                   	ret    

0000000000203fbf <enumerate_function(unsigned long, unsigned long)>:
  203fbf:	55                   	push   rbp
  203fc0:	48 89 e5             	mov    rbp,rsp
  203fc3:	48 83 ec 30          	sub    rsp,0x30
  203fc7:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  203fcb:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  203fcf:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  203fd3:	48 c1 e0 0c          	shl    rax,0xc
  203fd7:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  203fdb:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  203fdf:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  203fe3:	48 01 d0             	add    rax,rdx
  203fe6:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  203fea:	48 8b 4d f0          	mov    rcx,QWORD PTR [rbp-0x10]
  203fee:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  203ff2:	ba 00 00 00 00       	mov    edx,0x0
  203ff7:	48 89 ce             	mov    rsi,rcx
  203ffa:	48 89 c7             	mov    rdi,rax
  203ffd:	e8 4c f0 ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  204002:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  204006:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20400a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20400e:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  204012:	66 85 c0             	test   ax,ax
  204015:	74 4c                	je     204063 <enumerate_function(unsigned long, unsigned long)+0xa4>
  204017:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20401b:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  20401f:	66 83 f8 ff          	cmp    ax,0xffff
  204023:	74 41                	je     204066 <enumerate_function(unsigned long, unsigned long)+0xa7>
  204025:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204029:	0f b6 40 0b          	movzx  eax,BYTE PTR [rax+0xb]
  20402d:	0f b6 c0             	movzx  eax,al
  204030:	83 f8 01             	cmp    eax,0x1
  204033:	75 32                	jne    204067 <enumerate_function(unsigned long, unsigned long)+0xa8>
  204035:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204039:	0f b6 40 0a          	movzx  eax,BYTE PTR [rax+0xa]
  20403d:	0f b6 c0             	movzx  eax,al
  204040:	83 f8 06             	cmp    eax,0x6
  204043:	75 22                	jne    204067 <enumerate_function(unsigned long, unsigned long)+0xa8>
  204045:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204049:	0f b6 40 09          	movzx  eax,BYTE PTR [rax+0x9]
  20404d:	0f b6 c0             	movzx  eax,al
  204050:	83 f8 01             	cmp    eax,0x1
  204053:	75 12                	jne    204067 <enumerate_function(unsigned long, unsigned long)+0xa8>
  204055:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204059:	48 89 c7             	mov    rdi,rax
  20405c:	e8 c3 32 00 00       	call   207324 <io::disk::ahci::initialize(io::pci::device_header*)>
  204061:	eb 04                	jmp    204067 <enumerate_function(unsigned long, unsigned long)+0xa8>
  204063:	90                   	nop
  204064:	eb 01                	jmp    204067 <enumerate_function(unsigned long, unsigned long)+0xa8>
  204066:	90                   	nop
  204067:	c9                   	leave  
  204068:	c3                   	ret    

0000000000204069 <enumerate_device(unsigned long, unsigned long)>:
  204069:	55                   	push   rbp
  20406a:	48 89 e5             	mov    rbp,rsp
  20406d:	48 83 ec 30          	sub    rsp,0x30
  204071:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  204075:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  204079:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  20407d:	48 c1 e0 0f          	shl    rax,0xf
  204081:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  204085:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  204089:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20408d:	48 01 d0             	add    rax,rdx
  204090:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  204094:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  204098:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20409c:	ba 00 00 00 00       	mov    edx,0x0
  2040a1:	48 89 ce             	mov    rsi,rcx
  2040a4:	48 89 c7             	mov    rdi,rax
  2040a7:	e8 a2 ef ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  2040ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2040b0:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  2040b4:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2040b8:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  2040bc:	66 85 c0             	test   ax,ax
  2040bf:	74 36                	je     2040f7 <enumerate_device(unsigned long, unsigned long)+0x8e>
  2040c1:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2040c5:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  2040c9:	66 83 f8 ff          	cmp    ax,0xffff
  2040cd:	74 2b                	je     2040fa <enumerate_device(unsigned long, unsigned long)+0x91>
  2040cf:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  2040d6:	83 7d fc 07          	cmp    DWORD PTR [rbp-0x4],0x7
  2040da:	7f 1f                	jg     2040fb <enumerate_device(unsigned long, unsigned long)+0x92>
  2040dc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2040df:	48 63 d0             	movsxd rdx,eax
  2040e2:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2040e6:	48 89 d6             	mov    rsi,rdx
  2040e9:	48 89 c7             	mov    rdi,rax
  2040ec:	e8 ce fe ff ff       	call   203fbf <enumerate_function(unsigned long, unsigned long)>
  2040f1:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2040f5:	eb df                	jmp    2040d6 <enumerate_device(unsigned long, unsigned long)+0x6d>
  2040f7:	90                   	nop
  2040f8:	eb 01                	jmp    2040fb <enumerate_device(unsigned long, unsigned long)+0x92>
  2040fa:	90                   	nop
  2040fb:	c9                   	leave  
  2040fc:	c3                   	ret    

00000000002040fd <enumerate_bus(unsigned long, unsigned long)>:
  2040fd:	55                   	push   rbp
  2040fe:	48 89 e5             	mov    rbp,rsp
  204101:	48 83 ec 30          	sub    rsp,0x30
  204105:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  204109:	48 89 75 d0          	mov    QWORD PTR [rbp-0x30],rsi
  20410d:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  204111:	48 c1 e0 14          	shl    rax,0x14
  204115:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  204119:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  20411d:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  204121:	48 01 d0             	add    rax,rdx
  204124:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  204128:	48 8b 4d e8          	mov    rcx,QWORD PTR [rbp-0x18]
  20412c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204130:	ba 00 00 00 00       	mov    edx,0x0
  204135:	48 89 ce             	mov    rsi,rcx
  204138:	48 89 c7             	mov    rdi,rax
  20413b:	e8 0e ef ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  204140:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204144:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  204148:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  20414c:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  204150:	66 85 c0             	test   ax,ax
  204153:	74 36                	je     20418b <enumerate_bus(unsigned long, unsigned long)+0x8e>
  204155:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  204159:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  20415d:	66 83 f8 ff          	cmp    ax,0xffff
  204161:	74 2b                	je     20418e <enumerate_bus(unsigned long, unsigned long)+0x91>
  204163:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  20416a:	83 7d fc 1f          	cmp    DWORD PTR [rbp-0x4],0x1f
  20416e:	7f 1f                	jg     20418f <enumerate_bus(unsigned long, unsigned long)+0x92>
  204170:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  204173:	48 63 d0             	movsxd rdx,eax
  204176:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20417a:	48 89 d6             	mov    rsi,rdx
  20417d:	48 89 c7             	mov    rdi,rax
  204180:	e8 e4 fe ff ff       	call   204069 <enumerate_device(unsigned long, unsigned long)>
  204185:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  204189:	eb df                	jmp    20416a <enumerate_bus(unsigned long, unsigned long)+0x6d>
  20418b:	90                   	nop
  20418c:	eb 01                	jmp    20418f <enumerate_bus(unsigned long, unsigned long)+0x92>
  20418e:	90                   	nop
  20418f:	c9                   	leave  
  204190:	c3                   	ret    

0000000000204191 <io::pci::enumerate_pci()>:
  204191:	55                   	push   rbp
  204192:	48 89 e5             	mov    rbp,rsp
  204195:	48 83 ec 20          	sub    rsp,0x20
  204199:	48 8b 05 e0 bf 00 00 	mov    rax,QWORD PTR [rip+0xbfe0]        # 210180 <io::pci::mcfg>
  2041a0:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  2041a3:	89 c0                	mov    eax,eax
  2041a5:	48 83 e8 2c          	sub    rax,0x2c
  2041a9:	48 c1 e8 04          	shr    rax,0x4
  2041ad:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  2041b0:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  2041b7:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2041ba:	3b 45 ec             	cmp    eax,DWORD PTR [rbp-0x14]
  2041bd:	7d 61                	jge    204220 <io::pci::enumerate_pci()+0x8f>
  2041bf:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2041c2:	48 98                	cdqe   
  2041c4:	48 c1 e0 04          	shl    rax,0x4
  2041c8:	48 89 c2             	mov    rdx,rax
  2041cb:	48 8b 05 ae bf 00 00 	mov    rax,QWORD PTR [rip+0xbfae]        # 210180 <io::pci::mcfg>
  2041d2:	48 01 d0             	add    rax,rdx
  2041d5:	48 83 c0 2c          	add    rax,0x2c
  2041d9:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  2041dd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2041e1:	0f b6 40 0a          	movzx  eax,BYTE PTR [rax+0xa]
  2041e5:	0f b6 c0             	movzx  eax,al
  2041e8:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2041ec:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2041f0:	0f b6 40 0b          	movzx  eax,BYTE PTR [rax+0xb]
  2041f4:	0f b6 c0             	movzx  eax,al
  2041f7:	48 39 45 f0          	cmp    QWORD PTR [rbp-0x10],rax
  2041fb:	73 1d                	jae    20421a <io::pci::enumerate_pci()+0x89>
  2041fd:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  204201:	48 8b 00             	mov    rax,QWORD PTR [rax]
  204204:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  204208:	48 89 d6             	mov    rsi,rdx
  20420b:	48 89 c7             	mov    rdi,rax
  20420e:	e8 ea fe ff ff       	call   2040fd <enumerate_bus(unsigned long, unsigned long)>
  204213:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
  204218:	eb d2                	jmp    2041ec <io::pci::enumerate_pci()+0x5b>
  20421a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  20421e:	eb 97                	jmp    2041b7 <io::pci::enumerate_pci()+0x26>
  204220:	90                   	nop
  204221:	c9                   	leave  
  204222:	c3                   	ret    

0000000000204223 <shutdown>:
  204223:	55                   	push   rbp
  204224:	48 89 e5             	mov    rbp,rsp
  204227:	e8 56 03 00 00       	call   204582 <io::tty::clear()>
  20422c:	fa                   	cli    
  20422d:	f4                   	hlt    
  20422e:	90                   	nop
  20422f:	5d                   	pop    rbp
  204230:	c3                   	ret    

0000000000204231 <restart_warm>:
  204231:	55                   	push   rbp
  204232:	48 89 e5             	mov    rbp,rsp
  204235:	e9 c6 bd df ff       	jmp    0 <stivale_hdr-0x200000>
  20423a:	90                   	nop
  20423b:	5d                   	pop    rbp
  20423c:	c3                   	ret    

000000000020423d <restart_cold>:
  20423d:	55                   	push   rbp
  20423e:	48 89 e5             	mov    rbp,rsp
  204241:	e9 ba bd df ff       	jmp    0 <stivale_hdr-0x200000>
  204246:	90                   	nop
  204247:	5d                   	pop    rbp
  204248:	c3                   	ret    

0000000000204249 <io::outb(unsigned short, unsigned char)>:
  204249:	55                   	push   rbp
  20424a:	48 89 e5             	mov    rbp,rsp
  20424d:	48 83 ec 08          	sub    rsp,0x8
  204251:	89 f8                	mov    eax,edi
  204253:	89 f2                	mov    edx,esi
  204255:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  204259:	89 d0                	mov    eax,edx
  20425b:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  20425e:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  204262:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  204266:	ee                   	out    dx,al
  204267:	90                   	nop
  204268:	c9                   	leave  
  204269:	c3                   	ret    

000000000020426a <io::serial::serial_byte(unsigned char)>:
  20426a:	55                   	push   rbp
  20426b:	48 89 e5             	mov    rbp,rsp
  20426e:	48 83 ec 08          	sub    rsp,0x8
  204272:	89 f8                	mov    eax,edi
  204274:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  204277:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  20427b:	89 c6                	mov    esi,eax
  20427d:	bf f8 03 00 00       	mov    edi,0x3f8
  204282:	e8 c2 ff ff ff       	call   204249 <io::outb(unsigned short, unsigned char)>
  204287:	90                   	nop
  204288:	c9                   	leave  
  204289:	c3                   	ret    

000000000020428a <sys::acpi::get_table(char*)>:
  20428a:	55                   	push   rbp
  20428b:	48 89 e5             	mov    rbp,rsp
  20428e:	48 83 ec 28          	sub    rsp,0x28
  204292:	48 89 7d d8          	mov    QWORD PTR [rbp-0x28],rdi
  204296:	bf 0a 00 00 00       	mov    edi,0xa
  20429b:	e8 ca ff ff ff       	call   20426a <io::serial::serial_byte(unsigned char)>
  2042a0:	48 8b 05 e1 be 00 00 	mov    rax,QWORD PTR [rip+0xbee1]        # 210188 <sys::acpi::rsdp>
  2042a7:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
  2042ab:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  2042ae:	89 c0                	mov    eax,eax
  2042b0:	48 83 e8 24          	sub    rax,0x24
  2042b4:	48 c1 e8 03          	shr    rax,0x3
  2042b8:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  2042bc:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  2042c3:	00 
  2042c4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2042c8:	48 3b 45 e8          	cmp    rax,QWORD PTR [rbp-0x18]
  2042cc:	73 72                	jae    204340 <sys::acpi::get_table(char*)+0xb6>
  2042ce:	48 8b 05 b3 be 00 00 	mov    rax,QWORD PTR [rip+0xbeb3]        # 210188 <sys::acpi::rsdp>
  2042d5:	48 8b 40 18          	mov    rax,QWORD PTR [rax+0x18]
  2042d9:	48 89 c2             	mov    rdx,rax
  2042dc:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2042e0:	48 c1 e0 03          	shl    rax,0x3
  2042e4:	48 01 d0             	add    rax,rdx
  2042e7:	48 83 c0 24          	add    rax,0x24
  2042eb:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2042ee:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  2042f2:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
  2042f9:	83 7d f4 03          	cmp    DWORD PTR [rbp-0xc],0x3
  2042fd:	7f 3a                	jg     204339 <sys::acpi::get_table(char*)+0xaf>
  2042ff:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  204302:	48 63 d0             	movsxd rdx,eax
  204305:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204309:	48 01 d0             	add    rax,rdx
  20430c:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  20430f:	0f be c8             	movsx  ecx,al
  204312:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  204316:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  204319:	48 98                	cdqe   
  20431b:	0f b6 04 02          	movzx  eax,BYTE PTR [rdx+rax*1]
  20431f:	0f b6 c0             	movzx  eax,al
  204322:	39 c1                	cmp    ecx,eax
  204324:	75 12                	jne    204338 <sys::acpi::get_table(char*)+0xae>
  204326:	83 7d f4 03          	cmp    DWORD PTR [rbp-0xc],0x3
  20432a:	75 06                	jne    204332 <sys::acpi::get_table(char*)+0xa8>
  20432c:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  204330:	eb 13                	jmp    204345 <sys::acpi::get_table(char*)+0xbb>
  204332:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
  204336:	eb c1                	jmp    2042f9 <sys::acpi::get_table(char*)+0x6f>
  204338:	90                   	nop
  204339:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  20433e:	eb 84                	jmp    2042c4 <sys::acpi::get_table(char*)+0x3a>
  204340:	b8 00 00 00 00       	mov    eax,0x0
  204345:	c9                   	leave  
  204346:	c3                   	ret    

0000000000204347 <gfx::screen::plot_pixel(gfx::shapes::s_pos_point, unsigned int)>:
  204347:	55                   	push   rbp
  204348:	48 89 e5             	mov    rbp,rsp
  20434b:	48 83 ec 10          	sub    rsp,0x10
  20434f:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  204353:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
  204356:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  20435d:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  204361:	0f b7 d0             	movzx  edx,ax
  204364:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  204367:	0f af d0             	imul   edx,eax
  20436a:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  20436d:	01 d0                	add    eax,edx
  20436f:	89 c0                	mov    eax,eax
  204371:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  204378:	00 
  204379:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  204380:	48 8b 00             	mov    rax,QWORD PTR [rax]
  204383:	48 01 d0             	add    rax,rdx
  204386:	48 89 c2             	mov    rdx,rax
  204389:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  20438c:	89 02                	mov    DWORD PTR [rdx],eax
  20438e:	90                   	nop
  20438f:	c9                   	leave  
  204390:	c3                   	ret    

0000000000204391 <gfx::screen::plot_pixel_buffer(gfx::shapes::s_pos_point, unsigned int)>:
  204391:	55                   	push   rbp
  204392:	48 89 e5             	mov    rbp,rsp
  204395:	48 83 ec 10          	sub    rsp,0x10
  204399:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20439d:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
  2043a0:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2043a7:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  2043ab:	0f b7 d0             	movzx  edx,ax
  2043ae:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2043b1:	0f af d0             	imul   edx,eax
  2043b4:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  2043b7:	01 d0                	add    eax,edx
  2043b9:	89 c0                	mov    eax,eax
  2043bb:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  2043c2:	00 
  2043c3:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2043ca:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2043cd:	48 01 d0             	add    rax,rdx
  2043d0:	48 89 c2             	mov    rdx,rax
  2043d3:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  2043d6:	89 02                	mov    DWORD PTR [rdx],eax
  2043d8:	90                   	nop
  2043d9:	c9                   	leave  
  2043da:	c3                   	ret    

00000000002043db <io::tty::vga_entry(unsigned char, unsigned char)>:
  2043db:	55                   	push   rbp
  2043dc:	48 89 e5             	mov    rbp,rsp
  2043df:	48 83 ec 08          	sub    rsp,0x8
  2043e3:	89 fa                	mov    edx,edi
  2043e5:	89 f0                	mov    eax,esi
  2043e7:	88 55 fc             	mov    BYTE PTR [rbp-0x4],dl
  2043ea:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  2043ed:	0f b6 55 fc          	movzx  edx,BYTE PTR [rbp-0x4]
  2043f1:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  2043f5:	c1 e0 08             	shl    eax,0x8
  2043f8:	09 d0                	or     eax,edx
  2043fa:	c9                   	leave  
  2043fb:	c3                   	ret    

00000000002043fc <util::get_bit(unsigned long, unsigned char)>:
  2043fc:	55                   	push   rbp
  2043fd:	48 89 e5             	mov    rbp,rsp
  204400:	48 83 ec 10          	sub    rsp,0x10
  204404:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  204408:	89 f0                	mov    eax,esi
  20440a:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
  20440d:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  204411:	48 8b 55 f8          	mov    rdx,QWORD PTR [rbp-0x8]
  204415:	89 c1                	mov    ecx,eax
  204417:	48 d3 ea             	shr    rdx,cl
  20441a:	48 89 d0             	mov    rax,rdx
  20441d:	83 e0 01             	and    eax,0x1
  204420:	c9                   	leave  
  204421:	c3                   	ret    

0000000000204422 <io::tty::initialize()>:
  204422:	55                   	push   rbp
  204423:	48 89 e5             	mov    rbp,rsp
  204426:	48 83 ec 10          	sub    rsp,0x10
  20442a:	48 c7 05 6b bd 00 00 	mov    QWORD PTR [rip+0xbd6b],0x0        # 2101a0 <io::tty::row>
  204431:	00 00 00 00 
  204435:	48 c7 05 68 bd 00 00 	mov    QWORD PTR [rip+0xbd68],0x0        # 2101a8 <io::tty::column>
  20443c:	00 00 00 00 
  204440:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  204447:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  20444b:	0f b7 d0             	movzx  edx,ax
  20444e:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  204455:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  204459:	0f b7 c0             	movzx  eax,ax
  20445c:	89 d6                	mov    esi,edx
  20445e:	89 c7                	mov    edi,eax
  204460:	e8 26 2c 00 00       	call   20708b <gfx::shapes::dims(unsigned int, unsigned int)>
  204465:	48 89 c7             	mov    rdi,rax
  204468:	e8 ee 0b 00 00       	call   20505b <io::tty::get_optimal_size(gfx::shapes::s_dimensions)>
  20446d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  204471:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  204474:	89 c0                	mov    eax,eax
  204476:	48 89 05 13 bd 00 00 	mov    QWORD PTR [rip+0xbd13],rax        # 210190 <io::tty::vga_width>
  20447d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  204480:	89 c0                	mov    eax,eax
  204482:	48 89 05 0f bd 00 00 	mov    QWORD PTR [rip+0xbd0f],rax        # 210198 <io::tty::vga_height>
  204489:	e8 3b e8 ff ff       	call   202cc9 <request_page>
  20448e:	48 89 05 1b bd 00 00 	mov    QWORD PTR [rip+0xbd1b],rax        # 2101b0 <io::tty::text_buffer>
  204495:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  204498:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  20449b:	0f af c2             	imul   eax,edx
  20449e:	01 c0                	add    eax,eax
  2044a0:	89 c2                	mov    edx,eax
  2044a2:	48 8b 05 07 bd 00 00 	mov    rax,QWORD PTR [rip+0xbd07]        # 2101b0 <io::tty::text_buffer>
  2044a9:	be 00 00 00 00       	mov    esi,0x0
  2044ae:	48 89 c7             	mov    rdi,rax
  2044b1:	e8 d4 ea ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2044b6:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2044bd:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  2044c1:	0f b7 d0             	movzx  edx,ax
  2044c4:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2044cb:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  2044cf:	0f b7 c0             	movzx  eax,ax
  2044d2:	0f af d0             	imul   edx,eax
  2044d5:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  2044dc:	0f b7 40 0e          	movzx  eax,WORD PTR [rax+0xe]
  2044e0:	66 c1 e8 03          	shr    ax,0x3
  2044e4:	0f b7 c0             	movzx  eax,ax
  2044e7:	0f af c2             	imul   eax,edx
  2044ea:	48 63 d0             	movsxd rdx,eax
  2044ed:	48 c7 c0 d0 01 21 00 	mov    rax,0x2101d0
  2044f4:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2044f7:	be 00 00 00 00       	mov    esi,0x0
  2044fc:	48 89 c7             	mov    rdi,rax
  2044ff:	e8 86 ea ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  204504:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  20450b:	0f b7 40 0a          	movzx  eax,WORD PTR [rax+0xa]
  20450f:	0f b7 d0             	movzx  edx,ax
  204512:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  204519:	0f b7 40 0c          	movzx  eax,WORD PTR [rax+0xc]
  20451d:	0f b7 c0             	movzx  eax,ax
  204520:	0f af d0             	imul   edx,eax
  204523:	48 c7 c0 c0 01 21 00 	mov    rax,0x2101c0
  20452a:	0f b7 40 0e          	movzx  eax,WORD PTR [rax+0xe]
  20452e:	66 c1 e8 03          	shr    ax,0x3
  204532:	0f b7 c0             	movzx  eax,ax
  204535:	0f af c2             	imul   eax,edx
  204538:	48 98                	cdqe   
  20453a:	48 c7 c2 c0 01 21 00 	mov    rdx,0x2101c0
  204541:	48 8b 12             	mov    rdx,QWORD PTR [rdx]
  204544:	48 89 d1             	mov    rcx,rdx
  204547:	48 89 c2             	mov    rdx,rax
  20454a:	be 00 00 00 00       	mov    esi,0x0
  20454f:	48 89 cf             	mov    rdi,rcx
  204552:	e8 33 ea ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  204557:	48 8d 3d 62 61 00 00 	lea    rdi,[rip+0x6162]        # 20a6c0 <BASE_GRAN+0x698>
  20455e:	e8 7a 3c 00 00       	call   2081dd <serial_msg>
  204563:	48 8b 05 46 bc 00 00 	mov    rax,QWORD PTR [rip+0xbc46]        # 2101b0 <io::tty::text_buffer>
  20456a:	be 10 00 00 00       	mov    esi,0x10
  20456f:	48 89 c7             	mov    rdi,rax
  204572:	e8 02 f5 ff ff       	call   203a79 <util::itoa(long, int)>
  204577:	48 89 c7             	mov    rdi,rax
  20457a:	e8 5e 3c 00 00       	call   2081dd <serial_msg>
  20457f:	90                   	nop
  204580:	c9                   	leave  
  204581:	c3                   	ret    

0000000000204582 <io::tty::clear()>:
  204582:	55                   	push   rbp
  204583:	48 89 e5             	mov    rbp,rsp
  204586:	48 83 ec 10          	sub    rsp,0x10
  20458a:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  204591:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  204594:	48 8b 05 fd bb 00 00 	mov    rax,QWORD PTR [rip+0xbbfd]        # 210198 <io::tty::vga_height>
  20459b:	48 39 c2             	cmp    rdx,rax
  20459e:	73 3d                	jae    2045dd <io::tty::clear()+0x5b>
  2045a0:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
  2045a7:	8b 55 f8             	mov    edx,DWORD PTR [rbp-0x8]
  2045aa:	48 8b 05 df bb 00 00 	mov    rax,QWORD PTR [rip+0xbbdf]        # 210190 <io::tty::vga_width>
  2045b1:	48 39 c2             	cmp    rdx,rax
  2045b4:	73 21                	jae    2045d7 <io::tty::clear()+0x55>
  2045b6:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  2045b9:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  2045bc:	48 89 d1             	mov    rcx,rdx
  2045bf:	48 89 c2             	mov    rdx,rax
  2045c2:	be 00 00 00 00       	mov    esi,0x0
  2045c7:	bf 20 00 00 00       	mov    edi,0x20
  2045cc:	e8 1e 00 00 00       	call   2045ef <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)>
  2045d1:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
  2045d5:	eb d0                	jmp    2045a7 <io::tty::clear()+0x25>
  2045d7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2045db:	eb b4                	jmp    204591 <io::tty::clear()+0xf>
  2045dd:	be 00 00 00 00       	mov    esi,0x0
  2045e2:	bf 00 00 00 00       	mov    edi,0x0
  2045e7:	e8 1f 0a 00 00       	call   20500b <io::tty::set_cursor(unsigned long, unsigned long)>
  2045ec:	90                   	nop
  2045ed:	c9                   	leave  
  2045ee:	c3                   	ret    

00000000002045ef <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)>:
  2045ef:	55                   	push   rbp
  2045f0:	48 89 e5             	mov    rbp,rsp
  2045f3:	53                   	push   rbx
  2045f4:	48 83 ec 28          	sub    rsp,0x28
  2045f8:	89 f0                	mov    eax,esi
  2045fa:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
  2045fe:	48 89 4d d8          	mov    QWORD PTR [rbp-0x28],rcx
  204602:	89 fa                	mov    edx,edi
  204604:	88 55 ec             	mov    BYTE PTR [rbp-0x14],dl
  204607:	88 45 e8             	mov    BYTE PTR [rbp-0x18],al
  20460a:	48 8b 05 7f bb 00 00 	mov    rax,QWORD PTR [rip+0xbb7f]        # 210190 <io::tty::vga_width>
  204611:	48 39 45 e0          	cmp    QWORD PTR [rbp-0x20],rax
  204615:	77 61                	ja     204678 <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)+0x89>
  204617:	48 8b 05 7a bb 00 00 	mov    rax,QWORD PTR [rip+0xbb7a]        # 210198 <io::tty::vga_height>
  20461e:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
  204622:	77 57                	ja     20467b <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)+0x8c>
  204624:	0f b6 55 e8          	movzx  edx,BYTE PTR [rbp-0x18]
  204628:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  20462c:	0f b6 c0             	movzx  eax,al
  20462f:	48 8b 35 7a bb 00 00 	mov    rsi,QWORD PTR [rip+0xbb7a]        # 2101b0 <io::tty::text_buffer>
  204636:	48 8b 0d 53 bb 00 00 	mov    rcx,QWORD PTR [rip+0xbb53]        # 210190 <io::tty::vga_width>
  20463d:	48 89 cf             	mov    rdi,rcx
  204640:	48 0f af 7d d8       	imul   rdi,QWORD PTR [rbp-0x28]
  204645:	48 8b 4d e0          	mov    rcx,QWORD PTR [rbp-0x20]
  204649:	48 01 f9             	add    rcx,rdi
  20464c:	48 01 c9             	add    rcx,rcx
  20464f:	48 8d 1c 0e          	lea    rbx,[rsi+rcx*1]
  204653:	89 d6                	mov    esi,edx
  204655:	89 c7                	mov    edi,eax
  204657:	e8 7f fd ff ff       	call   2043db <io::tty::vga_entry(unsigned char, unsigned char)>
  20465c:	66 89 03             	mov    WORD PTR [rbx],ax
  20465f:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204663:	0f b7 d0             	movzx  edx,ax
  204666:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  20466a:	0f b7 c0             	movzx  eax,ax
  20466d:	89 d6                	mov    esi,edx
  20466f:	89 c7                	mov    edi,eax
  204671:	e8 e6 00 00 00       	call   20475c <io::tty::render_entry_at(unsigned short, unsigned short)>
  204676:	eb 04                	jmp    20467c <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)+0x8d>
  204678:	90                   	nop
  204679:	eb 01                	jmp    20467c <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)+0x8d>
  20467b:	90                   	nop
  20467c:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  204680:	c9                   	leave  
  204681:	c3                   	ret    

0000000000204682 <io::tty::convert_vga_to_pix(unsigned char)>:
  204682:	55                   	push   rbp
  204683:	48 89 e5             	mov    rbp,rsp
  204686:	48 83 ec 18          	sub    rsp,0x18
  20468a:	89 f8                	mov    eax,edi
  20468c:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
  20468f:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  204696:	0f b6 45 ec          	movzx  eax,BYTE PTR [rbp-0x14]
  20469a:	83 f8 0f             	cmp    eax,0xf
  20469d:	0f 87 b4 00 00 00    	ja     204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046a3:	89 c0                	mov    eax,eax
  2046a5:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  2046ac:	00 
  2046ad:	48 8d 05 1c 60 00 00 	lea    rax,[rip+0x601c]        # 20a6d0 <BASE_GRAN+0x6a8>
  2046b4:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  2046b7:	48 98                	cdqe   
  2046b9:	48 8d 15 10 60 00 00 	lea    rdx,[rip+0x6010]        # 20a6d0 <BASE_GRAN+0x6a8>
  2046c0:	48 01 d0             	add    rax,rdx
  2046c3:	ff e0                	jmp    rax
  2046c5:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  2046cc:	e9 86 00 00 00       	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046d1:	c7 45 fc ff ff ff 00 	mov    DWORD PTR [rbp-0x4],0xffffff
  2046d8:	eb 7d                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046da:	c7 45 fc 00 00 ff 00 	mov    DWORD PTR [rbp-0x4],0xff0000
  2046e1:	eb 74                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046e3:	c7 45 fc ff 22 22 00 	mov    DWORD PTR [rbp-0x4],0x2222ff
  2046ea:	eb 6b                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046ec:	c7 45 fc 22 ff 22 00 	mov    DWORD PTR [rbp-0x4],0x22ff22
  2046f3:	eb 62                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046f5:	c7 45 fc ff ff 11 00 	mov    DWORD PTR [rbp-0x4],0x11ffff
  2046fc:	eb 59                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  2046fe:	c7 45 fc aa 01 ff 00 	mov    DWORD PTR [rbp-0x4],0xff01aa
  204705:	eb 50                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204707:	c7 45 fc cd eb ff 00 	mov    DWORD PTR [rbp-0x4],0xffebcd
  20470e:	eb 47                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204710:	c7 45 fc dd dd dd 00 	mov    DWORD PTR [rbp-0x4],0xdddddd
  204717:	eb 3e                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204719:	c7 45 fc 55 55 55 00 	mov    DWORD PTR [rbp-0x4],0x555555
  204720:	eb 35                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204722:	c7 45 fc ff aa 01 00 	mov    DWORD PTR [rbp-0x4],0x1aaff
  204729:	eb 2c                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  20472b:	c7 45 fc 01 ff 01 00 	mov    DWORD PTR [rbp-0x4],0x1ff01
  204732:	eb 23                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204734:	c7 45 fc ff dd 01 00 	mov    DWORD PTR [rbp-0x4],0x1ddff
  20473b:	eb 1a                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  20473d:	c7 45 fc 22 22 ff 00 	mov    DWORD PTR [rbp-0x4],0xff2222
  204744:	eb 11                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  204746:	c7 45 fc 77 00 ff 00 	mov    DWORD PTR [rbp-0x4],0xff0077
  20474d:	eb 08                	jmp    204757 <io::tty::convert_vga_to_pix(unsigned char)+0xd5>
  20474f:	c7 45 fc 13 45 8b 00 	mov    DWORD PTR [rbp-0x4],0x8b4513
  204756:	90                   	nop
  204757:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  20475a:	c9                   	leave  
  20475b:	c3                   	ret    

000000000020475c <io::tty::render_entry_at(unsigned short, unsigned short)>:
  20475c:	55                   	push   rbp
  20475d:	48 89 e5             	mov    rbp,rsp
  204760:	53                   	push   rbx
  204761:	48 81 ec 98 00 00 00 	sub    rsp,0x98
  204768:	89 fa                	mov    edx,edi
  20476a:	89 f0                	mov    eax,esi
  20476c:	66 89 95 6c ff ff ff 	mov    WORD PTR [rbp-0x94],dx
  204773:	66 89 85 68 ff ff ff 	mov    WORD PTR [rbp-0x98],ax
  20477a:	48 8b 0d 2f ba 00 00 	mov    rcx,QWORD PTR [rip+0xba2f]        # 2101b0 <io::tty::text_buffer>
  204781:	0f b7 95 68 ff ff ff 	movzx  edx,WORD PTR [rbp-0x98]
  204788:	48 8b 05 01 ba 00 00 	mov    rax,QWORD PTR [rip+0xba01]        # 210190 <io::tty::vga_width>
  20478f:	48 0f af d0          	imul   rdx,rax
  204793:	0f b7 85 6c ff ff ff 	movzx  eax,WORD PTR [rbp-0x94]
  20479a:	48 01 d0             	add    rax,rdx
  20479d:	48 01 c0             	add    rax,rax
  2047a0:	48 01 c8             	add    rax,rcx
  2047a3:	0f b7 00             	movzx  eax,WORD PTR [rax]
  2047a6:	66 89 45 c6          	mov    WORD PTR [rbp-0x3a],ax
  2047aa:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  2047ae:	66 c1 e8 08          	shr    ax,0x8
  2047b2:	83 e0 0f             	and    eax,0xf
  2047b5:	88 45 c5             	mov    BYTE PTR [rbp-0x3b],al
  2047b8:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  2047bc:	66 c1 e8 0c          	shr    ax,0xc
  2047c0:	88 45 c4             	mov    BYTE PTR [rbp-0x3c],al
  2047c3:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  2047c7:	88 45 c3             	mov    BYTE PTR [rbp-0x3d],al
  2047ca:	0f b6 45 c5          	movzx  eax,BYTE PTR [rbp-0x3b]
  2047ce:	89 c7                	mov    edi,eax
  2047d0:	e8 ad fe ff ff       	call   204682 <io::tty::convert_vga_to_pix(unsigned char)>
  2047d5:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
  2047d8:	0f b6 45 c4          	movzx  eax,BYTE PTR [rbp-0x3c]
  2047dc:	89 c7                	mov    edi,eax
  2047de:	e8 9f fe ff ff       	call   204682 <io::tty::convert_vga_to_pix(unsigned char)>
  2047e3:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
  2047e6:	0f be 45 c3          	movsx  eax,BYTE PTR [rbp-0x3d]
  2047ea:	89 c7                	mov    edi,eax
  2047ec:	e8 c0 2a 00 00       	call   2072b1 <gfx::fonts::get_character_font(char)>
  2047f1:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  2047f5:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
  2047f9:	80 7d ef 40          	cmp    BYTE PTR [rbp-0x11],0x40
  2047fd:	77 2f                	ja     20482e <io::tty::render_entry_at(unsigned short, unsigned short)+0xd2>
  2047ff:	0f b6 55 ef          	movzx  edx,BYTE PTR [rbp-0x11]
  204803:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  204807:	8d 58 ff             	lea    ebx,[rax-0x1]
  20480a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  20480e:	89 d6                	mov    esi,edx
  204810:	48 89 c7             	mov    rdi,rax
  204813:	e8 e4 fb ff ff       	call   2043fc <util::get_bit(unsigned long, unsigned char)>
  204818:	48 63 d3             	movsxd rdx,ebx
  20481b:	88 84 15 70 ff ff ff 	mov    BYTE PTR [rbp+rdx*1-0x90],al
  204822:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  204826:	83 c0 01             	add    eax,0x1
  204829:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
  20482c:	eb cb                	jmp    2047f9 <io::tty::render_entry_at(unsigned short, unsigned short)+0x9d>
  20482e:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
  204835:	00 
  204836:	0f b7 95 68 ff ff ff 	movzx  edx,WORD PTR [rbp-0x98]
  20483d:	89 d0                	mov    eax,edx
  20483f:	c1 e0 03             	shl    eax,0x3
  204842:	01 d0                	add    eax,edx
  204844:	48 98                	cdqe   
  204846:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  20484a:	48 83 7d e0 07       	cmp    QWORD PTR [rbp-0x20],0x7
  20484f:	0f 87 a1 00 00 00    	ja     2048f6 <io::tty::render_entry_at(unsigned short, unsigned short)+0x19a>
  204855:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
  20485c:	00 
  20485d:	0f b7 85 6c ff ff ff 	movzx  eax,WORD PTR [rbp-0x94]
  204864:	c1 e0 03             	shl    eax,0x3
  204867:	48 98                	cdqe   
  204869:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  20486d:	48 83 7d d0 07       	cmp    QWORD PTR [rbp-0x30],0x7
  204872:	77 73                	ja     2048e7 <io::tty::render_entry_at(unsigned short, unsigned short)+0x18b>
  204874:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  204878:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  20487f:	00 
  204880:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  204884:	48 01 d0             	add    rax,rdx
  204887:	0f b6 84 05 70 ff ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x90]
  20488e:	ff 
  20488f:	84 c0                	test   al,al
  204891:	74 25                	je     2048b8 <io::tty::render_entry_at(unsigned short, unsigned short)+0x15c>
  204893:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204897:	89 c2                	mov    edx,eax
  204899:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  20489d:	89 d6                	mov    esi,edx
  20489f:	89 c7                	mov    edi,eax
  2048a1:	e8 c5 27 00 00       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  2048a6:	48 89 c2             	mov    rdx,rax
  2048a9:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  2048ac:	89 c6                	mov    esi,eax
  2048ae:	48 89 d7             	mov    rdi,rdx
  2048b1:	e8 91 fa ff ff       	call   204347 <gfx::screen::plot_pixel(gfx::shapes::s_pos_point, unsigned int)>
  2048b6:	eb 23                	jmp    2048db <io::tty::render_entry_at(unsigned short, unsigned short)+0x17f>
  2048b8:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  2048bc:	89 c2                	mov    edx,eax
  2048be:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2048c2:	89 d6                	mov    esi,edx
  2048c4:	89 c7                	mov    edi,eax
  2048c6:	e8 a0 27 00 00       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  2048cb:	48 89 c2             	mov    rdx,rax
  2048ce:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
  2048d1:	89 c6                	mov    esi,eax
  2048d3:	48 89 d7             	mov    rdi,rdx
  2048d6:	e8 6c fa ff ff       	call   204347 <gfx::screen::plot_pixel(gfx::shapes::s_pos_point, unsigned int)>
  2048db:	48 83 45 d0 01       	add    QWORD PTR [rbp-0x30],0x1
  2048e0:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
  2048e5:	eb 86                	jmp    20486d <io::tty::render_entry_at(unsigned short, unsigned short)+0x111>
  2048e7:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  2048ec:	48 83 45 d8 01       	add    QWORD PTR [rbp-0x28],0x1
  2048f1:	e9 54 ff ff ff       	jmp    20484a <io::tty::render_entry_at(unsigned short, unsigned short)+0xee>
  2048f6:	90                   	nop
  2048f7:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  2048fb:	c9                   	leave  
  2048fc:	c3                   	ret    

00000000002048fd <io::tty::render_entry_at_buffer(unsigned short, unsigned short)>:
  2048fd:	55                   	push   rbp
  2048fe:	48 89 e5             	mov    rbp,rsp
  204901:	53                   	push   rbx
  204902:	48 81 ec 98 00 00 00 	sub    rsp,0x98
  204909:	89 fa                	mov    edx,edi
  20490b:	89 f0                	mov    eax,esi
  20490d:	66 89 95 6c ff ff ff 	mov    WORD PTR [rbp-0x94],dx
  204914:	66 89 85 68 ff ff ff 	mov    WORD PTR [rbp-0x98],ax
  20491b:	48 8b 0d 8e b8 00 00 	mov    rcx,QWORD PTR [rip+0xb88e]        # 2101b0 <io::tty::text_buffer>
  204922:	0f b7 95 68 ff ff ff 	movzx  edx,WORD PTR [rbp-0x98]
  204929:	48 8b 05 60 b8 00 00 	mov    rax,QWORD PTR [rip+0xb860]        # 210190 <io::tty::vga_width>
  204930:	48 0f af d0          	imul   rdx,rax
  204934:	0f b7 85 6c ff ff ff 	movzx  eax,WORD PTR [rbp-0x94]
  20493b:	48 01 d0             	add    rax,rdx
  20493e:	48 01 c0             	add    rax,rax
  204941:	48 01 c8             	add    rax,rcx
  204944:	0f b7 00             	movzx  eax,WORD PTR [rax]
  204947:	66 89 45 c6          	mov    WORD PTR [rbp-0x3a],ax
  20494b:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  20494f:	66 c1 e8 08          	shr    ax,0x8
  204953:	83 e0 0f             	and    eax,0xf
  204956:	88 45 c5             	mov    BYTE PTR [rbp-0x3b],al
  204959:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  20495d:	66 c1 e8 0c          	shr    ax,0xc
  204961:	88 45 c4             	mov    BYTE PTR [rbp-0x3c],al
  204964:	0f b7 45 c6          	movzx  eax,WORD PTR [rbp-0x3a]
  204968:	88 45 c3             	mov    BYTE PTR [rbp-0x3d],al
  20496b:	0f b6 45 c5          	movzx  eax,BYTE PTR [rbp-0x3b]
  20496f:	89 c7                	mov    edi,eax
  204971:	e8 0c fd ff ff       	call   204682 <io::tty::convert_vga_to_pix(unsigned char)>
  204976:	89 45 bc             	mov    DWORD PTR [rbp-0x44],eax
  204979:	0f b6 45 c4          	movzx  eax,BYTE PTR [rbp-0x3c]
  20497d:	89 c7                	mov    edi,eax
  20497f:	e8 fe fc ff ff       	call   204682 <io::tty::convert_vga_to_pix(unsigned char)>
  204984:	89 45 b8             	mov    DWORD PTR [rbp-0x48],eax
  204987:	0f be 45 c3          	movsx  eax,BYTE PTR [rbp-0x3d]
  20498b:	89 c7                	mov    edi,eax
  20498d:	e8 1f 29 00 00       	call   2072b1 <gfx::fonts::get_character_font(char)>
  204992:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  204996:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
  20499a:	80 7d ef 40          	cmp    BYTE PTR [rbp-0x11],0x40
  20499e:	77 2f                	ja     2049cf <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0xd2>
  2049a0:	0f b6 55 ef          	movzx  edx,BYTE PTR [rbp-0x11]
  2049a4:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  2049a8:	8d 58 ff             	lea    ebx,[rax-0x1]
  2049ab:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  2049af:	89 d6                	mov    esi,edx
  2049b1:	48 89 c7             	mov    rdi,rax
  2049b4:	e8 43 fa ff ff       	call   2043fc <util::get_bit(unsigned long, unsigned char)>
  2049b9:	48 63 d3             	movsxd rdx,ebx
  2049bc:	88 84 15 70 ff ff ff 	mov    BYTE PTR [rbp+rdx*1-0x90],al
  2049c3:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  2049c7:	83 c0 01             	add    eax,0x1
  2049ca:	88 45 ef             	mov    BYTE PTR [rbp-0x11],al
  2049cd:	eb cb                	jmp    20499a <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x9d>
  2049cf:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
  2049d6:	00 
  2049d7:	0f b7 95 68 ff ff ff 	movzx  edx,WORD PTR [rbp-0x98]
  2049de:	89 d0                	mov    eax,edx
  2049e0:	c1 e0 03             	shl    eax,0x3
  2049e3:	01 d0                	add    eax,edx
  2049e5:	48 98                	cdqe   
  2049e7:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  2049eb:	48 83 7d e0 07       	cmp    QWORD PTR [rbp-0x20],0x7
  2049f0:	0f 87 a1 00 00 00    	ja     204a97 <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x19a>
  2049f6:	48 c7 45 d0 00 00 00 	mov    QWORD PTR [rbp-0x30],0x0
  2049fd:	00 
  2049fe:	0f b7 85 6c ff ff ff 	movzx  eax,WORD PTR [rbp-0x94]
  204a05:	c1 e0 03             	shl    eax,0x3
  204a08:	48 98                	cdqe   
  204a0a:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  204a0e:	48 83 7d d0 07       	cmp    QWORD PTR [rbp-0x30],0x7
  204a13:	77 73                	ja     204a88 <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x18b>
  204a15:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  204a19:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  204a20:	00 
  204a21:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  204a25:	48 01 d0             	add    rax,rdx
  204a28:	0f b6 84 05 70 ff ff 	movzx  eax,BYTE PTR [rbp+rax*1-0x90]
  204a2f:	ff 
  204a30:	84 c0                	test   al,al
  204a32:	74 25                	je     204a59 <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x15c>
  204a34:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204a38:	89 c2                	mov    edx,eax
  204a3a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204a3e:	89 d6                	mov    esi,edx
  204a40:	89 c7                	mov    edi,eax
  204a42:	e8 24 26 00 00       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  204a47:	48 89 c2             	mov    rdx,rax
  204a4a:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  204a4d:	89 c6                	mov    esi,eax
  204a4f:	48 89 d7             	mov    rdi,rdx
  204a52:	e8 3a f9 ff ff       	call   204391 <gfx::screen::plot_pixel_buffer(gfx::shapes::s_pos_point, unsigned int)>
  204a57:	eb 23                	jmp    204a7c <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x17f>
  204a59:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204a5d:	89 c2                	mov    edx,eax
  204a5f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204a63:	89 d6                	mov    esi,edx
  204a65:	89 c7                	mov    edi,eax
  204a67:	e8 ff 25 00 00       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  204a6c:	48 89 c2             	mov    rdx,rax
  204a6f:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
  204a72:	89 c6                	mov    esi,eax
  204a74:	48 89 d7             	mov    rdi,rdx
  204a77:	e8 15 f9 ff ff       	call   204391 <gfx::screen::plot_pixel_buffer(gfx::shapes::s_pos_point, unsigned int)>
  204a7c:	48 83 45 d0 01       	add    QWORD PTR [rbp-0x30],0x1
  204a81:	48 83 45 c8 02       	add    QWORD PTR [rbp-0x38],0x2
  204a86:	eb 86                	jmp    204a0e <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0x111>
  204a88:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  204a8d:	48 83 45 d8 02       	add    QWORD PTR [rbp-0x28],0x2
  204a92:	e9 54 ff ff ff       	jmp    2049eb <io::tty::render_entry_at_buffer(unsigned short, unsigned short)+0xee>
  204a97:	90                   	nop
  204a98:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  204a9c:	c9                   	leave  
  204a9d:	c3                   	ret    

0000000000204a9e <io::tty::render_buffer()>:
  204a9e:	55                   	push   rbp
  204a9f:	48 89 e5             	mov    rbp,rsp
  204aa2:	48 83 ec 10          	sub    rsp,0x10
  204aa6:	66 c7 45 fe 00 00    	mov    WORD PTR [rbp-0x2],0x0
  204aac:	0f b7 55 fe          	movzx  edx,WORD PTR [rbp-0x2]
  204ab0:	48 8b 05 e1 b6 00 00 	mov    rax,QWORD PTR [rip+0xb6e1]        # 210198 <io::tty::vga_height>
  204ab7:	48 39 c2             	cmp    rdx,rax
  204aba:	73 41                	jae    204afd <io::tty::render_buffer()+0x5f>
  204abc:	66 c7 45 fc 00 00    	mov    WORD PTR [rbp-0x4],0x0
  204ac2:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  204ac6:	48 8b 05 c3 b6 00 00 	mov    rax,QWORD PTR [rip+0xb6c3]        # 210190 <io::tty::vga_width>
  204acd:	48 39 c2             	cmp    rdx,rax
  204ad0:	73 1e                	jae    204af0 <io::tty::render_buffer()+0x52>
  204ad2:	0f b7 55 fe          	movzx  edx,WORD PTR [rbp-0x2]
  204ad6:	0f b7 45 fc          	movzx  eax,WORD PTR [rbp-0x4]
  204ada:	89 d6                	mov    esi,edx
  204adc:	89 c7                	mov    edi,eax
  204ade:	e8 79 fc ff ff       	call   20475c <io::tty::render_entry_at(unsigned short, unsigned short)>
  204ae3:	0f b7 45 fc          	movzx  eax,WORD PTR [rbp-0x4]
  204ae7:	83 c0 01             	add    eax,0x1
  204aea:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  204aee:	eb d2                	jmp    204ac2 <io::tty::render_buffer()+0x24>
  204af0:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  204af4:	83 c0 01             	add    eax,0x1
  204af7:	66 89 45 fe          	mov    WORD PTR [rbp-0x2],ax
  204afb:	eb af                	jmp    204aac <io::tty::render_buffer()+0xe>
  204afd:	90                   	nop
  204afe:	c9                   	leave  
  204aff:	c3                   	ret    

0000000000204b00 <io::tty::shift()>:
  204b00:	55                   	push   rbp
  204b01:	48 89 e5             	mov    rbp,rsp
  204b04:	53                   	push   rbx
  204b05:	48 83 ec 28          	sub    rsp,0x28
  204b09:	48 c7 45 e8 00 00 00 	mov    QWORD PTR [rbp-0x18],0x0
  204b10:	00 
  204b11:	48 8b 05 78 b6 00 00 	mov    rax,QWORD PTR [rip+0xb678]        # 210190 <io::tty::vga_width>
  204b18:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  204b1c:	73 2b                	jae    204b49 <io::tty::shift()+0x49>
  204b1e:	48 8b 15 8b b6 00 00 	mov    rdx,QWORD PTR [rip+0xb68b]        # 2101b0 <io::tty::text_buffer>
  204b25:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  204b29:	48 01 c0             	add    rax,rax
  204b2c:	48 8d 1c 02          	lea    rbx,[rdx+rax*1]
  204b30:	be 00 00 00 00       	mov    esi,0x0
  204b35:	bf 00 00 00 00       	mov    edi,0x0
  204b3a:	e8 9c f8 ff ff       	call   2043db <io::tty::vga_entry(unsigned char, unsigned char)>
  204b3f:	66 89 03             	mov    WORD PTR [rbx],ax
  204b42:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  204b47:	eb c8                	jmp    204b11 <io::tty::shift()+0x11>
  204b49:	48 c7 45 e0 00 00 00 	mov    QWORD PTR [rbp-0x20],0x0
  204b50:	00 
  204b51:	48 8b 05 38 b6 00 00 	mov    rax,QWORD PTR [rip+0xb638]        # 210190 <io::tty::vga_width>
  204b58:	48 39 45 e0          	cmp    QWORD PTR [rbp-0x20],rax
  204b5c:	73 5a                	jae    204bb8 <io::tty::shift()+0xb8>
  204b5e:	48 c7 45 d8 00 00 00 	mov    QWORD PTR [rbp-0x28],0x0
  204b65:	00 
  204b66:	48 8b 15 2b b6 00 00 	mov    rdx,QWORD PTR [rip+0xb62b]        # 210198 <io::tty::vga_height>
  204b6d:	48 8b 05 1c b6 00 00 	mov    rax,QWORD PTR [rip+0xb61c]        # 210190 <io::tty::vga_width>
  204b74:	48 0f af c2          	imul   rax,rdx
  204b78:	48 39 45 d8          	cmp    QWORD PTR [rbp-0x28],rax
  204b7c:	73 33                	jae    204bb1 <io::tty::shift()+0xb1>
  204b7e:	48 8b 15 2b b6 00 00 	mov    rdx,QWORD PTR [rip+0xb62b]        # 2101b0 <io::tty::text_buffer>
  204b85:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  204b89:	48 83 c0 01          	add    rax,0x1
  204b8d:	48 01 c0             	add    rax,rax
  204b90:	48 01 d0             	add    rax,rdx
  204b93:	48 8b 0d 16 b6 00 00 	mov    rcx,QWORD PTR [rip+0xb616]        # 2101b0 <io::tty::text_buffer>
  204b9a:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  204b9e:	48 01 d2             	add    rdx,rdx
  204ba1:	48 01 ca             	add    rdx,rcx
  204ba4:	0f b7 00             	movzx  eax,WORD PTR [rax]
  204ba7:	66 89 02             	mov    WORD PTR [rdx],ax
  204baa:	48 83 45 d8 01       	add    QWORD PTR [rbp-0x28],0x1
  204baf:	eb b5                	jmp    204b66 <io::tty::shift()+0x66>
  204bb1:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  204bb6:	eb 99                	jmp    204b51 <io::tty::shift()+0x51>
  204bb8:	48 8b 05 e1 b5 00 00 	mov    rax,QWORD PTR [rip+0xb5e1]        # 2101a0 <io::tty::row>
  204bbf:	48 83 e8 01          	sub    rax,0x1
  204bc3:	48 89 05 d6 b5 00 00 	mov    QWORD PTR [rip+0xb5d6],rax        # 2101a0 <io::tty::row>
  204bca:	e8 cf fe ff ff       	call   204a9e <io::tty::render_buffer()>
  204bcf:	90                   	nop
  204bd0:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  204bd4:	c9                   	leave  
  204bd5:	c3                   	ret    

0000000000204bd6 <io::tty::put_char(char, unsigned char)>:
  204bd6:	55                   	push   rbp
  204bd7:	48 89 e5             	mov    rbp,rsp
  204bda:	48 83 ec 10          	sub    rsp,0x10
  204bde:	89 fa                	mov    edx,edi
  204be0:	89 f0                	mov    eax,esi
  204be2:	88 55 fc             	mov    BYTE PTR [rbp-0x4],dl
  204be5:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  204be8:	80 7d fc 00          	cmp    BYTE PTR [rbp-0x4],0x0
  204bec:	0f 84 6c 01 00 00    	je     204d5e <io::tty::put_char(char, unsigned char)+0x188>
  204bf2:	80 7d fc 09          	cmp    BYTE PTR [rbp-0x4],0x9
  204bf6:	75 1f                	jne    204c17 <io::tty::put_char(char, unsigned char)+0x41>
  204bf8:	48 8b 05 a9 b5 00 00 	mov    rax,QWORD PTR [rip+0xb5a9]        # 2101a8 <io::tty::column>
  204bff:	48 c1 e8 02          	shr    rax,0x2
  204c03:	48 83 c0 01          	add    rax,0x1
  204c07:	48 c1 e0 02          	shl    rax,0x2
  204c0b:	48 89 05 96 b5 00 00 	mov    QWORD PTR [rip+0xb596],rax        # 2101a8 <io::tty::column>
  204c12:	e9 48 01 00 00       	jmp    204d5f <io::tty::put_char(char, unsigned char)+0x189>
  204c17:	80 7d fc 08          	cmp    BYTE PTR [rbp-0x4],0x8
  204c1b:	75 78                	jne    204c95 <io::tty::put_char(char, unsigned char)+0xbf>
  204c1d:	48 8b 05 84 b5 00 00 	mov    rax,QWORD PTR [rip+0xb584]        # 2101a8 <io::tty::column>
  204c24:	48 85 c0             	test   rax,rax
  204c27:	75 32                	jne    204c5b <io::tty::put_char(char, unsigned char)+0x85>
  204c29:	48 8b 05 70 b5 00 00 	mov    rax,QWORD PTR [rip+0xb570]        # 2101a0 <io::tty::row>
  204c30:	48 85 c0             	test   rax,rax
  204c33:	74 38                	je     204c6d <io::tty::put_char(char, unsigned char)+0x97>
  204c35:	48 8b 05 54 b5 00 00 	mov    rax,QWORD PTR [rip+0xb554]        # 210190 <io::tty::vga_width>
  204c3c:	48 83 e8 01          	sub    rax,0x1
  204c40:	48 89 05 61 b5 00 00 	mov    QWORD PTR [rip+0xb561],rax        # 2101a8 <io::tty::column>
  204c47:	48 8b 05 52 b5 00 00 	mov    rax,QWORD PTR [rip+0xb552]        # 2101a0 <io::tty::row>
  204c4e:	48 83 e8 01          	sub    rax,0x1
  204c52:	48 89 05 47 b5 00 00 	mov    QWORD PTR [rip+0xb547],rax        # 2101a0 <io::tty::row>
  204c59:	eb 12                	jmp    204c6d <io::tty::put_char(char, unsigned char)+0x97>
  204c5b:	48 8b 05 46 b5 00 00 	mov    rax,QWORD PTR [rip+0xb546]        # 2101a8 <io::tty::column>
  204c62:	48 83 e8 01          	sub    rax,0x1
  204c66:	48 89 05 3b b5 00 00 	mov    QWORD PTR [rip+0xb53b],rax        # 2101a8 <io::tty::column>
  204c6d:	48 8b 15 2c b5 00 00 	mov    rdx,QWORD PTR [rip+0xb52c]        # 2101a0 <io::tty::row>
  204c74:	48 8b 05 2d b5 00 00 	mov    rax,QWORD PTR [rip+0xb52d]        # 2101a8 <io::tty::column>
  204c7b:	48 89 d1             	mov    rcx,rdx
  204c7e:	48 89 c2             	mov    rdx,rax
  204c81:	be 00 00 00 00       	mov    esi,0x0
  204c86:	bf 20 00 00 00       	mov    edi,0x20
  204c8b:	e8 5f f9 ff ff       	call   2045ef <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)>
  204c90:	e9 ca 00 00 00       	jmp    204d5f <io::tty::put_char(char, unsigned char)+0x189>
  204c95:	80 7d fc 0a          	cmp    BYTE PTR [rbp-0x4],0xa
  204c99:	74 1d                	je     204cb8 <io::tty::put_char(char, unsigned char)+0xe2>
  204c9b:	48 8b 0d fe b4 00 00 	mov    rcx,QWORD PTR [rip+0xb4fe]        # 2101a0 <io::tty::row>
  204ca2:	48 8b 15 ff b4 00 00 	mov    rdx,QWORD PTR [rip+0xb4ff]        # 2101a8 <io::tty::column>
  204ca9:	0f b6 75 f8          	movzx  esi,BYTE PTR [rbp-0x8]
  204cad:	0f be 45 fc          	movsx  eax,BYTE PTR [rbp-0x4]
  204cb1:	89 c7                	mov    edi,eax
  204cb3:	e8 37 f9 ff ff       	call   2045ef <io::tty::put_entry_at(char, unsigned char, unsigned long, unsigned long)>
  204cb8:	48 8b 05 e9 b4 00 00 	mov    rax,QWORD PTR [rip+0xb4e9]        # 2101a8 <io::tty::column>
  204cbf:	48 83 c0 01          	add    rax,0x1
  204cc3:	48 89 05 de b4 00 00 	mov    QWORD PTR [rip+0xb4de],rax        # 2101a8 <io::tty::column>
  204cca:	48 8b 15 d7 b4 00 00 	mov    rdx,QWORD PTR [rip+0xb4d7]        # 2101a8 <io::tty::column>
  204cd1:	48 8b 05 b8 b4 00 00 	mov    rax,QWORD PTR [rip+0xb4b8]        # 210190 <io::tty::vga_width>
  204cd8:	48 39 c2             	cmp    rdx,rax
  204cdb:	0f 93 c0             	setae  al
  204cde:	84 c0                	test   al,al
  204ce0:	74 3a                	je     204d1c <io::tty::put_char(char, unsigned char)+0x146>
  204ce2:	48 c7 05 bb b4 00 00 	mov    QWORD PTR [rip+0xb4bb],0x0        # 2101a8 <io::tty::column>
  204ce9:	00 00 00 00 
  204ced:	48 8b 05 ac b4 00 00 	mov    rax,QWORD PTR [rip+0xb4ac]        # 2101a0 <io::tty::row>
  204cf4:	48 83 c0 01          	add    rax,0x1
  204cf8:	48 89 05 a1 b4 00 00 	mov    QWORD PTR [rip+0xb4a1],rax        # 2101a0 <io::tty::row>
  204cff:	48 8b 15 9a b4 00 00 	mov    rdx,QWORD PTR [rip+0xb49a]        # 2101a0 <io::tty::row>
  204d06:	48 8b 05 8b b4 00 00 	mov    rax,QWORD PTR [rip+0xb48b]        # 210198 <io::tty::vga_height>
  204d0d:	48 39 c2             	cmp    rdx,rax
  204d10:	0f 93 c0             	setae  al
  204d13:	84 c0                	test   al,al
  204d15:	74 05                	je     204d1c <io::tty::put_char(char, unsigned char)+0x146>
  204d17:	e8 e4 fd ff ff       	call   204b00 <io::tty::shift()>
  204d1c:	80 7d fc 0a          	cmp    BYTE PTR [rbp-0x4],0xa
  204d20:	75 3d                	jne    204d5f <io::tty::put_char(char, unsigned char)+0x189>
  204d22:	48 8b 05 77 b4 00 00 	mov    rax,QWORD PTR [rip+0xb477]        # 2101a0 <io::tty::row>
  204d29:	48 83 c0 01          	add    rax,0x1
  204d2d:	48 89 05 6c b4 00 00 	mov    QWORD PTR [rip+0xb46c],rax        # 2101a0 <io::tty::row>
  204d34:	48 8b 15 65 b4 00 00 	mov    rdx,QWORD PTR [rip+0xb465]        # 2101a0 <io::tty::row>
  204d3b:	48 8b 05 56 b4 00 00 	mov    rax,QWORD PTR [rip+0xb456]        # 210198 <io::tty::vga_height>
  204d42:	48 39 c2             	cmp    rdx,rax
  204d45:	0f 93 c0             	setae  al
  204d48:	84 c0                	test   al,al
  204d4a:	74 05                	je     204d51 <io::tty::put_char(char, unsigned char)+0x17b>
  204d4c:	e8 af fd ff ff       	call   204b00 <io::tty::shift()>
  204d51:	48 c7 05 4c b4 00 00 	mov    QWORD PTR [rip+0xb44c],0x0        # 2101a8 <io::tty::column>
  204d58:	00 00 00 00 
  204d5c:	eb 01                	jmp    204d5f <io::tty::put_char(char, unsigned char)+0x189>
  204d5e:	90                   	nop
  204d5f:	c9                   	leave  
  204d60:	c3                   	ret    

0000000000204d61 <io::tty::write(char const*)>:
  204d61:	55                   	push   rbp
  204d62:	48 89 e5             	mov    rbp,rsp
  204d65:	48 83 ec 40          	sub    rsp,0x40
  204d69:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  204d6d:	c6 45 ff 07          	mov    BYTE PTR [rbp-0x1],0x7
  204d71:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204d75:	48 8d 35 94 59 00 00 	lea    rsi,[rip+0x5994]        # 20a710 <BASE_GRAN+0x6e8>
  204d7c:	48 89 c7             	mov    rdi,rax
  204d7f:	e8 72 ed ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204d84:	84 c0                	test   al,al
  204d86:	74 4c                	je     204dd4 <io::tty::write(char const*)+0x73>
  204d88:	48 c7 45 f0 00 00 00 	mov    QWORD PTR [rbp-0x10],0x0
  204d8f:	00 
  204d90:	48 8b 05 f9 b3 00 00 	mov    rax,QWORD PTR [rip+0xb3f9]        # 210190 <io::tty::vga_width>
  204d97:	48 39 45 f0          	cmp    QWORD PTR [rbp-0x10],rax
  204d9b:	0f 83 67 02 00 00    	jae    205008 <io::tty::write(char const*)+0x2a7>
  204da1:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  204da5:	83 e0 01             	and    eax,0x1
  204da8:	48 85 c0             	test   rax,rax
  204dab:	75 11                	jne    204dbe <io::tty::write(char const*)+0x5d>
  204dad:	be 0f 00 00 00       	mov    esi,0xf
  204db2:	bf 2d 00 00 00       	mov    edi,0x2d
  204db7:	e8 1a fe ff ff       	call   204bd6 <io::tty::put_char(char, unsigned char)>
  204dbc:	eb 0f                	jmp    204dcd <io::tty::write(char const*)+0x6c>
  204dbe:	be 0f 00 00 00       	mov    esi,0xf
  204dc3:	bf 3d 00 00 00       	mov    edi,0x3d
  204dc8:	e8 09 fe ff ff       	call   204bd6 <io::tty::put_char(char, unsigned char)>
  204dcd:	48 83 45 f0 01       	add    QWORD PTR [rbp-0x10],0x1
  204dd2:	eb bc                	jmp    204d90 <io::tty::write(char const*)+0x2f>
  204dd4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204dd8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  204ddb:	84 c0                	test   al,al
  204ddd:	0f 84 26 02 00 00    	je     205009 <io::tty::write(char const*)+0x2a8>
  204de3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204de7:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  204dea:	3c 24                	cmp    al,0x24
  204dec:	0f 85 f5 01 00 00    	jne    204fe7 <io::tty::write(char const*)+0x286>
  204df2:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
  204df9:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
  204dfe:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204e02:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  204e05:	3c 21                	cmp    al,0x21
  204e07:	74 1b                	je     204e24 <io::tty::write(char const*)+0xc3>
  204e09:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204e0d:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  204e10:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  204e13:	48 98                	cdqe   
  204e15:	88 54 05 dd          	mov    BYTE PTR [rbp+rax*1-0x23],dl
  204e19:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
  204e1d:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
  204e22:	eb da                	jmp    204dfe <io::tty::write(char const*)+0x9d>
  204e24:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
  204e29:	90                   	nop
  204e2a:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  204e2d:	83 c0 01             	add    eax,0x1
  204e30:	48 98                	cdqe   
  204e32:	c6 44 05 dd 00       	mov    BYTE PTR [rbp+rax*1-0x23],0x0
  204e37:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204e3b:	48 89 c6             	mov    rsi,rax
  204e3e:	48 8d 3d d8 58 00 00 	lea    rdi,[rip+0x58d8]        # 20a71d <BASE_GRAN+0x6f5>
  204e45:	e8 ac ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204e4a:	84 c0                	test   al,al
  204e4c:	74 04                	je     204e52 <io::tty::write(char const*)+0xf1>
  204e4e:	c6 45 ff 00          	mov    BYTE PTR [rbp-0x1],0x0
  204e52:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204e56:	48 89 c6             	mov    rsi,rax
  204e59:	48 8d 3d c3 58 00 00 	lea    rdi,[rip+0x58c3]        # 20a723 <BASE_GRAN+0x6fb>
  204e60:	e8 91 ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204e65:	84 c0                	test   al,al
  204e67:	74 04                	je     204e6d <io::tty::write(char const*)+0x10c>
  204e69:	c6 45 ff 01          	mov    BYTE PTR [rbp-0x1],0x1
  204e6d:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204e71:	48 89 c6             	mov    rsi,rax
  204e74:	48 8d 3d ad 58 00 00 	lea    rdi,[rip+0x58ad]        # 20a728 <BASE_GRAN+0x700>
  204e7b:	e8 76 ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204e80:	84 c0                	test   al,al
  204e82:	74 04                	je     204e88 <io::tty::write(char const*)+0x127>
  204e84:	c6 45 ff 02          	mov    BYTE PTR [rbp-0x1],0x2
  204e88:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204e8c:	48 89 c6             	mov    rsi,rax
  204e8f:	48 8d 3d 98 58 00 00 	lea    rdi,[rip+0x5898]        # 20a72e <BASE_GRAN+0x706>
  204e96:	e8 5b ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204e9b:	84 c0                	test   al,al
  204e9d:	74 04                	je     204ea3 <io::tty::write(char const*)+0x142>
  204e9f:	c6 45 ff 03          	mov    BYTE PTR [rbp-0x1],0x3
  204ea3:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204ea7:	48 89 c6             	mov    rsi,rax
  204eaa:	48 8d 3d 82 58 00 00 	lea    rdi,[rip+0x5882]        # 20a733 <BASE_GRAN+0x70b>
  204eb1:	e8 40 ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204eb6:	84 c0                	test   al,al
  204eb8:	74 04                	je     204ebe <io::tty::write(char const*)+0x15d>
  204eba:	c6 45 ff 04          	mov    BYTE PTR [rbp-0x1],0x4
  204ebe:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204ec2:	48 89 c6             	mov    rsi,rax
  204ec5:	48 8d 3d 6b 58 00 00 	lea    rdi,[rip+0x586b]        # 20a737 <BASE_GRAN+0x70f>
  204ecc:	e8 25 ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204ed1:	84 c0                	test   al,al
  204ed3:	74 04                	je     204ed9 <io::tty::write(char const*)+0x178>
  204ed5:	c6 45 ff 05          	mov    BYTE PTR [rbp-0x1],0x5
  204ed9:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204edd:	48 89 c6             	mov    rsi,rax
  204ee0:	48 8d 3d 58 58 00 00 	lea    rdi,[rip+0x5858]        # 20a73f <BASE_GRAN+0x717>
  204ee7:	e8 0a ec ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204eec:	84 c0                	test   al,al
  204eee:	74 04                	je     204ef4 <io::tty::write(char const*)+0x193>
  204ef0:	c6 45 ff 06          	mov    BYTE PTR [rbp-0x1],0x6
  204ef4:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204ef8:	48 89 c6             	mov    rsi,rax
  204efb:	48 8d 3d 43 58 00 00 	lea    rdi,[rip+0x5843]        # 20a745 <BASE_GRAN+0x71d>
  204f02:	e8 ef eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f07:	84 c0                	test   al,al
  204f09:	74 04                	je     204f0f <io::tty::write(char const*)+0x1ae>
  204f0b:	c6 45 ff 07          	mov    BYTE PTR [rbp-0x1],0x7
  204f0f:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f13:	48 89 c6             	mov    rsi,rax
  204f16:	48 8d 3d 33 58 00 00 	lea    rdi,[rip+0x5833]        # 20a750 <BASE_GRAN+0x728>
  204f1d:	e8 d4 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f22:	84 c0                	test   al,al
  204f24:	74 04                	je     204f2a <io::tty::write(char const*)+0x1c9>
  204f26:	c6 45 ff 08          	mov    BYTE PTR [rbp-0x1],0x8
  204f2a:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f2e:	48 89 c6             	mov    rsi,rax
  204f31:	48 8d 3d 22 58 00 00 	lea    rdi,[rip+0x5822]        # 20a75a <BASE_GRAN+0x732>
  204f38:	e8 b9 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f3d:	84 c0                	test   al,al
  204f3f:	74 04                	je     204f45 <io::tty::write(char const*)+0x1e4>
  204f41:	c6 45 ff 09          	mov    BYTE PTR [rbp-0x1],0x9
  204f45:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f49:	48 89 c6             	mov    rsi,rax
  204f4c:	48 8d 3d 12 58 00 00 	lea    rdi,[rip+0x5812]        # 20a765 <BASE_GRAN+0x73d>
  204f53:	e8 9e eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f58:	84 c0                	test   al,al
  204f5a:	74 04                	je     204f60 <io::tty::write(char const*)+0x1ff>
  204f5c:	c6 45 ff 0a          	mov    BYTE PTR [rbp-0x1],0xa
  204f60:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f64:	48 89 c6             	mov    rsi,rax
  204f67:	48 8d 3d 03 58 00 00 	lea    rdi,[rip+0x5803]        # 20a771 <BASE_GRAN+0x749>
  204f6e:	e8 83 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f73:	84 c0                	test   al,al
  204f75:	74 04                	je     204f7b <io::tty::write(char const*)+0x21a>
  204f77:	c6 45 ff 0b          	mov    BYTE PTR [rbp-0x1],0xb
  204f7b:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f7f:	48 89 c6             	mov    rsi,rax
  204f82:	48 8d 3d f3 57 00 00 	lea    rdi,[rip+0x57f3]        # 20a77c <BASE_GRAN+0x754>
  204f89:	e8 68 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204f8e:	84 c0                	test   al,al
  204f90:	74 04                	je     204f96 <io::tty::write(char const*)+0x235>
  204f92:	c6 45 ff 0c          	mov    BYTE PTR [rbp-0x1],0xc
  204f96:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204f9a:	48 89 c6             	mov    rsi,rax
  204f9d:	48 8d 3d e2 57 00 00 	lea    rdi,[rip+0x57e2]        # 20a786 <BASE_GRAN+0x75e>
  204fa4:	e8 4d eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204fa9:	84 c0                	test   al,al
  204fab:	74 04                	je     204fb1 <io::tty::write(char const*)+0x250>
  204fad:	c6 45 ff 0d          	mov    BYTE PTR [rbp-0x1],0xd
  204fb1:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204fb5:	48 89 c6             	mov    rsi,rax
  204fb8:	48 8d 3d d5 57 00 00 	lea    rdi,[rip+0x57d5]        # 20a794 <BASE_GRAN+0x76c>
  204fbf:	e8 32 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204fc4:	84 c0                	test   al,al
  204fc6:	74 04                	je     204fcc <io::tty::write(char const*)+0x26b>
  204fc8:	c6 45 ff 0e          	mov    BYTE PTR [rbp-0x1],0xe
  204fcc:	48 8d 45 dd          	lea    rax,[rbp-0x23]
  204fd0:	48 89 c6             	mov    rsi,rax
  204fd3:	48 8d 3d c6 57 00 00 	lea    rdi,[rip+0x57c6]        # 20a7a0 <BASE_GRAN+0x778>
  204fda:	e8 17 eb ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  204fdf:	84 c0                	test   al,al
  204fe1:	74 04                	je     204fe7 <io::tty::write(char const*)+0x286>
  204fe3:	c6 45 ff 0f          	mov    BYTE PTR [rbp-0x1],0xf
  204fe7:	0f b6 55 ff          	movzx  edx,BYTE PTR [rbp-0x1]
  204feb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  204fef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  204ff2:	0f be c0             	movsx  eax,al
  204ff5:	89 d6                	mov    esi,edx
  204ff7:	89 c7                	mov    edi,eax
  204ff9:	e8 d8 fb ff ff       	call   204bd6 <io::tty::put_char(char, unsigned char)>
  204ffe:	48 83 45 c8 01       	add    QWORD PTR [rbp-0x38],0x1
  205003:	e9 cc fd ff ff       	jmp    204dd4 <io::tty::write(char const*)+0x73>
  205008:	90                   	nop
  205009:	c9                   	leave  
  20500a:	c3                   	ret    

000000000020500b <io::tty::set_cursor(unsigned long, unsigned long)>:
  20500b:	55                   	push   rbp
  20500c:	48 89 e5             	mov    rbp,rsp
  20500f:	48 83 ec 10          	sub    rsp,0x10
  205013:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  205017:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  20501b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20501f:	48 89 05 82 b1 00 00 	mov    QWORD PTR [rip+0xb182],rax        # 2101a8 <io::tty::column>
  205026:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20502a:	48 89 05 6f b1 00 00 	mov    QWORD PTR [rip+0xb16f],rax        # 2101a0 <io::tty::row>
  205031:	90                   	nop
  205032:	c9                   	leave  
  205033:	c3                   	ret    

0000000000205034 <io::tty::write_line(char const*)>:
  205034:	55                   	push   rbp
  205035:	48 89 e5             	mov    rbp,rsp
  205038:	48 83 ec 10          	sub    rsp,0x10
  20503c:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  205040:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  205044:	48 89 c7             	mov    rdi,rax
  205047:	e8 15 fd ff ff       	call   204d61 <io::tty::write(char const*)>
  20504c:	48 8d 3d 53 57 00 00 	lea    rdi,[rip+0x5753]        # 20a7a6 <BASE_GRAN+0x77e>
  205053:	e8 09 fd ff ff       	call   204d61 <io::tty::write(char const*)>
  205058:	90                   	nop
  205059:	c9                   	leave  
  20505a:	c3                   	ret    

000000000020505b <io::tty::get_optimal_size(gfx::shapes::s_dimensions)>:
  20505b:	55                   	push   rbp
  20505c:	48 89 e5             	mov    rbp,rsp
  20505f:	48 83 ec 18          	sub    rsp,0x18
  205063:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  205067:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  20506a:	c1 e8 03             	shr    eax,0x3
  20506d:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  205070:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  205073:	89 c0                	mov    eax,eax
  205075:	48 69 c0 39 8e e3 38 	imul   rax,rax,0x38e38e39
  20507c:	48 c1 e8 20          	shr    rax,0x20
  205080:	d1 e8                	shr    eax,1
  205082:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  205085:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  205089:	c9                   	leave  
  20508a:	c3                   	ret    

000000000020508b <puts>:
  20508b:	55                   	push   rbp
  20508c:	48 89 e5             	mov    rbp,rsp
  20508f:	48 83 ec 10          	sub    rsp,0x10
  205093:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  205097:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20509b:	48 89 c6             	mov    rsi,rax
  20509e:	48 8d 3d 03 57 00 00 	lea    rdi,[rip+0x5703]        # 20a7a8 <BASE_GRAN+0x780>
  2050a5:	b8 00 00 00 00       	mov    eax,0x0
  2050aa:	e8 cc 1e 00 00       	call   206f7b <printf>
  2050af:	90                   	nop
  2050b0:	c9                   	leave  
  2050b1:	c3                   	ret    

00000000002050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>:
  2050b2:	55                   	push   rbp
  2050b3:	48 89 e5             	mov    rbp,rsp
  2050b6:	53                   	push   rbx
  2050b7:	48 81 ec 78 01 00 00 	sub    rsp,0x178
  2050be:	48 89 bd a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rdi
  2050c5:	48 89 b5 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],rsi
  2050cc:	89 95 9c fe ff ff    	mov    DWORD PTR [rbp-0x164],edx
  2050d2:	89 c8                	mov    eax,ecx
  2050d4:	44 89 c6             	mov    esi,r8d
  2050d7:	44 89 8d 90 fe ff ff 	mov    DWORD PTR [rbp-0x170],r9d
  2050de:	8b 4d 10             	mov    ecx,DWORD PTR [rbp+0x10]
  2050e1:	8b 55 18             	mov    edx,DWORD PTR [rbp+0x18]
  2050e4:	88 85 98 fe ff ff    	mov    BYTE PTR [rbp-0x168],al
  2050ea:	89 f0                	mov    eax,esi
  2050ec:	88 85 94 fe ff ff    	mov    BYTE PTR [rbp-0x16c],al
  2050f2:	89 c8                	mov    eax,ecx
  2050f4:	88 85 8c fe ff ff    	mov    BYTE PTR [rbp-0x174],al
  2050fa:	89 d0                	mov    eax,edx
  2050fc:	88 85 88 fe ff ff    	mov    BYTE PTR [rbp-0x178],al
  205102:	48 c7 45 b0 00 00 00 	mov    QWORD PTR [rbp-0x50],0x0
  205109:	00 
  20510a:	48 c7 45 b8 00 00 00 	mov    QWORD PTR [rbp-0x48],0x0
  205111:	00 
  205112:	48 c7 45 c0 00 00 00 	mov    QWORD PTR [rbp-0x40],0x0
  205119:	00 
  20511a:	48 c7 45 c8 00 00 00 	mov    QWORD PTR [rbp-0x38],0x0
  205121:	00 
  205122:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  205126:	ba 20 00 00 00       	mov    edx,0x20
  20512b:	be 00 00 00 00       	mov    esi,0x0
  205130:	48 89 c7             	mov    rdi,rax
  205133:	e8 52 de ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  205138:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  20513c:	48 8d 35 6d 56 00 00 	lea    rsi,[rip+0x566d]        # 20a7b0 <BASE_GRAN+0x788>
  205143:	48 89 c7             	mov    rdi,rax
  205146:	e8 92 ea ff ff       	call   203bdd <util::strcpy(char*, char const*)>
  20514b:	83 bd 9c fe ff ff 10 	cmp    DWORD PTR [rbp-0x164],0x10
  205152:	75 15                	jne    205169 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0xb7>
  205154:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  205158:	48 8d 35 5c 56 00 00 	lea    rsi,[rip+0x565c]        # 20a7bb <BASE_GRAN+0x793>
  20515f:	48 89 c7             	mov    rdi,rax
  205162:	e8 1b ea ff ff       	call   203b82 <util::strcat(char*, char const*)>
  205167:	eb 26                	jmp    20518f <__int_str(long, char*, int, bool, bool, int, bool, bool)+0xdd>
  205169:	83 bd 9c fe ff ff 11 	cmp    DWORD PTR [rbp-0x164],0x11
  205170:	75 1d                	jne    20518f <__int_str(long, char*, int, bool, bool, int, bool, bool)+0xdd>
  205172:	48 8d 45 b0          	lea    rax,[rbp-0x50]
  205176:	48 8d 35 45 56 00 00 	lea    rsi,[rip+0x5645]        # 20a7c2 <BASE_GRAN+0x79a>
  20517d:	48 89 c7             	mov    rdi,rax
  205180:	e8 fd e9 ff ff       	call   203b82 <util::strcat(char*, char const*)>
  205185:	c7 85 9c fe ff ff 10 	mov    DWORD PTR [rbp-0x164],0x10
  20518c:	00 00 00 
  20518f:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  205196:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20519a:	48 83 bd a8 fe ff ff 	cmp    QWORD PTR [rbp-0x158],0x0
  2051a1:	00 
  2051a2:	79 18                	jns    2051bc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x10a>
  2051a4:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2051a8:	48 8d 50 01          	lea    rdx,[rax+0x1]
  2051ac:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  2051b0:	c6 00 2d             	mov    BYTE PTR [rax],0x2d
  2051b3:	48 f7 9d a8 fe ff ff 	neg    QWORD PTR [rbp-0x158]
  2051ba:	eb 40                	jmp    2051fc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x14a>
  2051bc:	80 bd 98 fe ff ff 00 	cmp    BYTE PTR [rbp-0x168],0x0
  2051c3:	74 11                	je     2051d6 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x124>
  2051c5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2051c9:	48 8d 50 01          	lea    rdx,[rax+0x1]
  2051cd:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  2051d1:	c6 00 2b             	mov    BYTE PTR [rax],0x2b
  2051d4:	eb 26                	jmp    2051fc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x14a>
  2051d6:	0f b6 85 98 fe ff ff 	movzx  eax,BYTE PTR [rbp-0x168]
  2051dd:	83 f0 01             	xor    eax,0x1
  2051e0:	84 c0                	test   al,al
  2051e2:	74 18                	je     2051fc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x14a>
  2051e4:	80 bd 94 fe ff ff 00 	cmp    BYTE PTR [rbp-0x16c],0x0
  2051eb:	74 0f                	je     2051fc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x14a>
  2051ed:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2051f1:	48 8d 50 01          	lea    rdx,[rax+0x1]
  2051f5:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
  2051f9:	c6 00 20             	mov    BYTE PTR [rax],0x20
  2051fc:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  205203:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  205207:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  20520c:	8b 85 9c fe ff ff    	mov    eax,DWORD PTR [rbp-0x164]
  205212:	48 63 d8             	movsxd rbx,eax
  205215:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  205219:	48 99                	cqo    
  20521b:	48 f7 fb             	idiv   rbx
  20521e:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  205222:	48 83 7d e0 00       	cmp    QWORD PTR [rbp-0x20],0x0
  205227:	74 02                	je     20522b <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x179>
  205229:	eb dc                	jmp    205207 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x155>
  20522b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20522f:	c6 00 00             	mov    BYTE PTR [rax],0x0
  205232:	8b 85 9c fe ff ff    	mov    eax,DWORD PTR [rbp-0x164]
  205238:	48 63 c8             	movsxd rcx,eax
  20523b:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  205242:	48 99                	cqo    
  205244:	48 f7 f9             	idiv   rcx
  205247:	48 89 d0             	mov    rax,rdx
  20524a:	0f b6 54 05 b0       	movzx  edx,BYTE PTR [rbp+rax*1-0x50]
  20524f:	48 83 6d e8 01       	sub    QWORD PTR [rbp-0x18],0x1
  205254:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  205258:	88 10                	mov    BYTE PTR [rax],dl
  20525a:	8b 85 9c fe ff ff    	mov    eax,DWORD PTR [rbp-0x164]
  205260:	48 63 c8             	movsxd rcx,eax
  205263:	48 8b 85 a8 fe ff ff 	mov    rax,QWORD PTR [rbp-0x158]
  20526a:	48 99                	cqo    
  20526c:	48 f7 f9             	idiv   rcx
  20526f:	48 89 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],rax
  205276:	48 83 bd a8 fe ff ff 	cmp    QWORD PTR [rbp-0x158],0x0
  20527d:	00 
  20527e:	74 02                	je     205282 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x1d0>
  205280:	eb b0                	jmp    205232 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x180>
  205282:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  205289:	48 89 c7             	mov    rdi,rax
  20528c:	e8 ac e8 ff ff       	call   203b3d <util::strlen(char const*)>
  205291:	89 c2                	mov    edx,eax
  205293:	8b 85 90 fe ff ff    	mov    eax,DWORD PTR [rbp-0x170]
  205299:	29 d0                	sub    eax,edx
  20529b:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
  20529e:	83 7d dc 00          	cmp    DWORD PTR [rbp-0x24],0x0
  2052a2:	79 07                	jns    2052ab <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x1f9>
  2052a4:	c7 45 dc 00 00 00 00 	mov    DWORD PTR [rbp-0x24],0x0
  2052ab:	80 bd 8c fe ff ff 00 	cmp    BYTE PTR [rbp-0x174],0x0
  2052b2:	74 5b                	je     20530f <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x25d>
  2052b4:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  2052b7:	8d 50 ff             	lea    edx,[rax-0x1]
  2052ba:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
  2052bd:	85 c0                	test   eax,eax
  2052bf:	0f 95 c0             	setne  al
  2052c2:	84 c0                	test   al,al
  2052c4:	0f 84 12 02 00 00    	je     2054dc <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x42a>
  2052ca:	80 bd 88 fe ff ff 00 	cmp    BYTE PTR [rbp-0x178],0x0
  2052d1:	74 1e                	je     2052f1 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x23f>
  2052d3:	48 8b 9d a0 fe ff ff 	mov    rbx,QWORD PTR [rbp-0x160]
  2052da:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  2052e1:	48 89 c7             	mov    rdi,rax
  2052e4:	e8 54 e8 ff ff       	call   203b3d <util::strlen(char const*)>
  2052e9:	48 01 d8             	add    rax,rbx
  2052ec:	c6 00 30             	mov    BYTE PTR [rax],0x30
  2052ef:	eb c3                	jmp    2052b4 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x202>
  2052f1:	48 8b 9d a0 fe ff ff 	mov    rbx,QWORD PTR [rbp-0x160]
  2052f8:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  2052ff:	48 89 c7             	mov    rdi,rax
  205302:	e8 36 e8 ff ff       	call   203b3d <util::strlen(char const*)>
  205307:	48 01 d8             	add    rax,rbx
  20530a:	c6 00 20             	mov    BYTE PTR [rax],0x20
  20530d:	eb a5                	jmp    2052b4 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x202>
  20530f:	48 c7 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],0x0
  205316:	00 00 00 00 
  20531a:	48 c7 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],0x0
  205321:	00 00 00 00 
  205325:	48 c7 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],0x0
  20532c:	00 00 00 00 
  205330:	48 c7 85 c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],0x0
  205337:	00 00 00 00 
  20533b:	48 c7 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],0x0
  205342:	00 00 00 00 
  205346:	48 c7 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],0x0
  20534d:	00 00 00 00 
  205351:	48 c7 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],0x0
  205358:	00 00 00 00 
  20535c:	48 c7 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],0x0
  205363:	00 00 00 00 
  205367:	48 c7 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],0x0
  20536e:	00 00 00 00 
  205372:	48 c7 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],0x0
  205379:	00 00 00 00 
  20537d:	48 c7 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],0x0
  205384:	00 00 00 00 
  205388:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
  20538f:	00 00 00 00 
  205393:	48 c7 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],0x0
  20539a:	00 00 00 00 
  20539e:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x0
  2053a5:	00 00 00 00 
  2053a9:	48 c7 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],0x0
  2053b0:	00 00 00 00 
  2053b4:	48 c7 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],0x0
  2053bb:	00 00 00 00 
  2053bf:	48 c7 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],0x0
  2053c6:	00 00 00 00 
  2053ca:	48 c7 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],0x0
  2053d1:	00 00 00 00 
  2053d5:	48 c7 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],0x0
  2053dc:	00 00 00 00 
  2053e0:	48 c7 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],0x0
  2053e7:	00 00 00 00 
  2053eb:	48 c7 85 50 ff ff ff 	mov    QWORD PTR [rbp-0xb0],0x0
  2053f2:	00 00 00 00 
  2053f6:	48 c7 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],0x0
  2053fd:	00 00 00 00 
  205401:	48 c7 85 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],0x0
  205408:	00 00 00 00 
  20540c:	48 c7 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],0x0
  205413:	00 00 00 00 
  205417:	48 c7 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],0x0
  20541e:	00 00 00 00 
  205422:	48 c7 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],0x0
  205429:	00 00 00 00 
  20542d:	48 c7 45 80 00 00 00 	mov    QWORD PTR [rbp-0x80],0x0
  205434:	00 
  205435:	48 c7 45 88 00 00 00 	mov    QWORD PTR [rbp-0x78],0x0
  20543c:	00 
  20543d:	48 c7 45 90 00 00 00 	mov    QWORD PTR [rbp-0x70],0x0
  205444:	00 
  205445:	48 c7 45 98 00 00 00 	mov    QWORD PTR [rbp-0x68],0x0
  20544c:	00 
  20544d:	48 c7 45 a0 00 00 00 	mov    QWORD PTR [rbp-0x60],0x0
  205454:	00 
  205455:	48 c7 45 a8 00 00 00 	mov    QWORD PTR [rbp-0x58],0x0
  20545c:	00 
  20545d:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  205460:	8d 50 ff             	lea    edx,[rax-0x1]
  205463:	89 55 dc             	mov    DWORD PTR [rbp-0x24],edx
  205466:	85 c0                	test   eax,eax
  205468:	0f 95 c0             	setne  al
  20546b:	84 c0                	test   al,al
  20546d:	74 3b                	je     2054aa <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x3f8>
  20546f:	80 bd 88 fe ff ff 00 	cmp    BYTE PTR [rbp-0x178],0x0
  205476:	74 19                	je     205491 <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x3df>
  205478:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  20547f:	48 89 c7             	mov    rdi,rax
  205482:	e8 b6 e6 ff ff       	call   203b3d <util::strlen(char const*)>
  205487:	c6 84 05 b0 fe ff ff 	mov    BYTE PTR [rbp+rax*1-0x150],0x30
  20548e:	30 
  20548f:	eb cc                	jmp    20545d <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x3ab>
  205491:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  205498:	48 89 c7             	mov    rdi,rax
  20549b:	e8 9d e6 ff ff       	call   203b3d <util::strlen(char const*)>
  2054a0:	c6 84 05 b0 fe ff ff 	mov    BYTE PTR [rbp+rax*1-0x150],0x20
  2054a7:	20 
  2054a8:	eb b3                	jmp    20545d <__int_str(long, char*, int, bool, bool, int, bool, bool)+0x3ab>
  2054aa:	48 8b 95 a0 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x160]
  2054b1:	48 8d 85 b0 fe ff ff 	lea    rax,[rbp-0x150]
  2054b8:	48 89 d6             	mov    rsi,rdx
  2054bb:	48 89 c7             	mov    rdi,rax
  2054be:	e8 bf e6 ff ff       	call   203b82 <util::strcat(char*, char const*)>
  2054c3:	48 8d 95 b0 fe ff ff 	lea    rdx,[rbp-0x150]
  2054ca:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  2054d1:	48 89 d6             	mov    rsi,rdx
  2054d4:	48 89 c7             	mov    rdi,rax
  2054d7:	e8 01 e7 ff ff       	call   203bdd <util::strcpy(char*, char const*)>
  2054dc:	48 8b 85 a0 fe ff ff 	mov    rax,QWORD PTR [rbp-0x160]
  2054e3:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  2054e7:	c9                   	leave  
  2054e8:	c3                   	ret    

00000000002054e9 <displayCharacter(char, int*)>:
  2054e9:	55                   	push   rbp
  2054ea:	48 89 e5             	mov    rbp,rsp
  2054ed:	48 83 ec 10          	sub    rsp,0x10
  2054f1:	89 f8                	mov    eax,edi
  2054f3:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  2054f7:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  2054fa:	0f be 45 fc          	movsx  eax,BYTE PTR [rbp-0x4]
  2054fe:	be 0f 00 00 00       	mov    esi,0xf
  205503:	89 c7                	mov    edi,eax
  205505:	e8 cc f6 ff ff       	call   204bd6 <io::tty::put_char(char, unsigned char)>
  20550a:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20550e:	8b 00                	mov    eax,DWORD PTR [rax]
  205510:	8d 50 01             	lea    edx,[rax+0x1]
  205513:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  205517:	89 10                	mov    DWORD PTR [rax],edx
  205519:	90                   	nop
  20551a:	c9                   	leave  
  20551b:	c3                   	ret    

000000000020551c <displayString(char*, int*)>:
  20551c:	55                   	push   rbp
  20551d:	48 89 e5             	mov    rbp,rsp
  205520:	48 83 ec 20          	sub    rsp,0x20
  205524:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  205528:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  20552c:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  205533:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205536:	48 63 d0             	movsxd rdx,eax
  205539:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20553d:	48 01 d0             	add    rax,rdx
  205540:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205543:	84 c0                	test   al,al
  205545:	74 27                	je     20556e <displayString(char*, int*)+0x52>
  205547:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  20554a:	48 63 d0             	movsxd rdx,eax
  20554d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  205551:	48 01 d0             	add    rax,rdx
  205554:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205557:	0f be c0             	movsx  eax,al
  20555a:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  20555e:	48 89 d6             	mov    rsi,rdx
  205561:	89 c7                	mov    edi,eax
  205563:	e8 81 ff ff ff       	call   2054e9 <displayCharacter(char, int*)>
  205568:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  20556c:	eb c5                	jmp    205533 <displayString(char*, int*)+0x17>
  20556e:	90                   	nop
  20556f:	c9                   	leave  
  205570:	c3                   	ret    

0000000000205571 <vprintf(char const*, __va_list_tag*)>:
  205571:	55                   	push   rbp
  205572:	48 89 e5             	mov    rbp,rsp
  205575:	48 81 ec c0 01 00 00 	sub    rsp,0x1c0
  20557c:	48 89 bd 48 fe ff ff 	mov    QWORD PTR [rbp-0x1b8],rdi
  205583:	48 89 b5 40 fe ff ff 	mov    QWORD PTR [rbp-0x1c0],rsi
  20558a:	c7 85 54 ff ff ff 00 	mov    DWORD PTR [rbp-0xac],0x0
  205591:	00 00 00 
  205594:	48 c7 85 50 fe ff ff 	mov    QWORD PTR [rbp-0x1b0],0x0
  20559b:	00 00 00 00 
  20559f:	48 c7 85 58 fe ff ff 	mov    QWORD PTR [rbp-0x1a8],0x0
  2055a6:	00 00 00 00 
  2055aa:	48 c7 85 60 fe ff ff 	mov    QWORD PTR [rbp-0x1a0],0x0
  2055b1:	00 00 00 00 
  2055b5:	48 c7 85 68 fe ff ff 	mov    QWORD PTR [rbp-0x198],0x0
  2055bc:	00 00 00 00 
  2055c0:	48 c7 85 70 fe ff ff 	mov    QWORD PTR [rbp-0x190],0x0
  2055c7:	00 00 00 00 
  2055cb:	48 c7 85 78 fe ff ff 	mov    QWORD PTR [rbp-0x188],0x0
  2055d2:	00 00 00 00 
  2055d6:	48 c7 85 80 fe ff ff 	mov    QWORD PTR [rbp-0x180],0x0
  2055dd:	00 00 00 00 
  2055e1:	48 c7 85 88 fe ff ff 	mov    QWORD PTR [rbp-0x178],0x0
  2055e8:	00 00 00 00 
  2055ec:	48 c7 85 90 fe ff ff 	mov    QWORD PTR [rbp-0x170],0x0
  2055f3:	00 00 00 00 
  2055f7:	48 c7 85 98 fe ff ff 	mov    QWORD PTR [rbp-0x168],0x0
  2055fe:	00 00 00 00 
  205602:	48 c7 85 a0 fe ff ff 	mov    QWORD PTR [rbp-0x160],0x0
  205609:	00 00 00 00 
  20560d:	48 c7 85 a8 fe ff ff 	mov    QWORD PTR [rbp-0x158],0x0
  205614:	00 00 00 00 
  205618:	48 c7 85 b0 fe ff ff 	mov    QWORD PTR [rbp-0x150],0x0
  20561f:	00 00 00 00 
  205623:	48 c7 85 b8 fe ff ff 	mov    QWORD PTR [rbp-0x148],0x0
  20562a:	00 00 00 00 
  20562e:	48 c7 85 c0 fe ff ff 	mov    QWORD PTR [rbp-0x140],0x0
  205635:	00 00 00 00 
  205639:	48 c7 85 c8 fe ff ff 	mov    QWORD PTR [rbp-0x138],0x0
  205640:	00 00 00 00 
  205644:	48 c7 85 d0 fe ff ff 	mov    QWORD PTR [rbp-0x130],0x0
  20564b:	00 00 00 00 
  20564f:	48 c7 85 d8 fe ff ff 	mov    QWORD PTR [rbp-0x128],0x0
  205656:	00 00 00 00 
  20565a:	48 c7 85 e0 fe ff ff 	mov    QWORD PTR [rbp-0x120],0x0
  205661:	00 00 00 00 
  205665:	48 c7 85 e8 fe ff ff 	mov    QWORD PTR [rbp-0x118],0x0
  20566c:	00 00 00 00 
  205670:	48 c7 85 f0 fe ff ff 	mov    QWORD PTR [rbp-0x110],0x0
  205677:	00 00 00 00 
  20567b:	48 c7 85 f8 fe ff ff 	mov    QWORD PTR [rbp-0x108],0x0
  205682:	00 00 00 00 
  205686:	48 c7 85 00 ff ff ff 	mov    QWORD PTR [rbp-0x100],0x0
  20568d:	00 00 00 00 
  205691:	48 c7 85 08 ff ff ff 	mov    QWORD PTR [rbp-0xf8],0x0
  205698:	00 00 00 00 
  20569c:	48 c7 85 10 ff ff ff 	mov    QWORD PTR [rbp-0xf0],0x0
  2056a3:	00 00 00 00 
  2056a7:	48 c7 85 18 ff ff ff 	mov    QWORD PTR [rbp-0xe8],0x0
  2056ae:	00 00 00 00 
  2056b2:	48 c7 85 20 ff ff ff 	mov    QWORD PTR [rbp-0xe0],0x0
  2056b9:	00 00 00 00 
  2056bd:	48 c7 85 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],0x0
  2056c4:	00 00 00 00 
  2056c8:	48 c7 85 30 ff ff ff 	mov    QWORD PTR [rbp-0xd0],0x0
  2056cf:	00 00 00 00 
  2056d3:	48 c7 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],0x0
  2056da:	00 00 00 00 
  2056de:	48 c7 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],0x0
  2056e5:	00 00 00 00 
  2056e9:	48 c7 85 48 ff ff ff 	mov    QWORD PTR [rbp-0xb8],0x0
  2056f0:	00 00 00 00 
  2056f4:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  2056fb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2056fe:	48 63 d0             	movsxd rdx,eax
  205701:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205708:	48 01 d0             	add    rax,rdx
  20570b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  20570e:	84 c0                	test   al,al
  205710:	0f 84 5d 18 00 00    	je     206f73 <vprintf(char const*, __va_list_tag*)+0x1a02>
  205716:	c6 45 fb 00          	mov    BYTE PTR [rbp-0x5],0x0
  20571a:	c6 45 fa 00          	mov    BYTE PTR [rbp-0x6],0x0
  20571e:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
  205725:	c7 45 f0 00 00 00 00 	mov    DWORD PTR [rbp-0x10],0x0
  20572c:	c6 45 ef 00          	mov    BYTE PTR [rbp-0x11],0x0
  205730:	c6 45 ee 00          	mov    BYTE PTR [rbp-0x12],0x0
  205734:	c6 45 ed 00          	mov    BYTE PTR [rbp-0x13],0x0
  205738:	c6 45 ec 00          	mov    BYTE PTR [rbp-0x14],0x0
  20573c:	c6 45 eb 00          	mov    BYTE PTR [rbp-0x15],0x0
  205740:	c6 45 ea 00          	mov    BYTE PTR [rbp-0x16],0x0
  205744:	c7 45 e4 00 00 00 00 	mov    DWORD PTR [rbp-0x1c],0x0
  20574b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  20574e:	48 63 d0             	movsxd rdx,eax
  205751:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205758:	48 01 d0             	add    rax,rdx
  20575b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  20575e:	3c 25                	cmp    al,0x25
  205760:	0f 85 dd 17 00 00    	jne    206f43 <vprintf(char const*, __va_list_tag*)+0x19d2>
  205766:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  20576a:	c6 45 e3 00          	mov    BYTE PTR [rbp-0x1d],0x0
  20576e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205771:	48 63 d0             	movsxd rdx,eax
  205774:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  20577b:	48 01 d0             	add    rax,rdx
  20577e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205781:	0f be c0             	movsx  eax,al
  205784:	83 e8 20             	sub    eax,0x20
  205787:	83 f8 10             	cmp    eax,0x10
  20578a:	77 54                	ja     2057e0 <vprintf(char const*, __va_list_tag*)+0x26f>
  20578c:	89 c0                	mov    eax,eax
  20578e:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  205795:	00 
  205796:	48 8d 05 37 50 00 00 	lea    rax,[rip+0x5037]        # 20a7d4 <BASE_GRAN+0x7ac>
  20579d:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  2057a0:	48 98                	cdqe   
  2057a2:	48 8d 15 2b 50 00 00 	lea    rdx,[rip+0x502b]        # 20a7d4 <BASE_GRAN+0x7ac>
  2057a9:	48 01 d0             	add    rax,rdx
  2057ac:	ff e0                	jmp    rax
  2057ae:	c6 45 ef 01          	mov    BYTE PTR [rbp-0x11],0x1
  2057b2:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2057b6:	eb 2d                	jmp    2057e5 <vprintf(char const*, __va_list_tag*)+0x274>
  2057b8:	c6 45 eb 01          	mov    BYTE PTR [rbp-0x15],0x1
  2057bc:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2057c0:	eb 23                	jmp    2057e5 <vprintf(char const*, __va_list_tag*)+0x274>
  2057c2:	c6 45 ec 01          	mov    BYTE PTR [rbp-0x14],0x1
  2057c6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2057ca:	eb 19                	jmp    2057e5 <vprintf(char const*, __va_list_tag*)+0x274>
  2057cc:	c6 45 ed 01          	mov    BYTE PTR [rbp-0x13],0x1
  2057d0:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2057d4:	eb 0f                	jmp    2057e5 <vprintf(char const*, __va_list_tag*)+0x274>
  2057d6:	c6 45 ee 01          	mov    BYTE PTR [rbp-0x12],0x1
  2057da:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2057de:	eb 05                	jmp    2057e5 <vprintf(char const*, __va_list_tag*)+0x274>
  2057e0:	c6 45 e3 01          	mov    BYTE PTR [rbp-0x1d],0x1
  2057e4:	90                   	nop
  2057e5:	80 7d e3 00          	cmp    BYTE PTR [rbp-0x1d],0x0
  2057e9:	74 83                	je     20576e <vprintf(char const*, __va_list_tag*)+0x1fd>
  2057eb:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2057ee:	48 63 d0             	movsxd rdx,eax
  2057f1:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2057f8:	48 01 d0             	add    rax,rdx
  2057fb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2057fe:	0f be c0             	movsx  eax,al
  205801:	89 c7                	mov    edi,eax
  205803:	e8 1c e4 ff ff       	call   203c24 <util::isdigit(char)>
  205808:	85 c0                	test   eax,eax
  20580a:	0f 95 c0             	setne  al
  20580d:	84 c0                	test   al,al
  20580f:	74 31                	je     205842 <vprintf(char const*, __va_list_tag*)+0x2d1>
  205811:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
  205814:	89 d0                	mov    eax,edx
  205816:	c1 e0 02             	shl    eax,0x2
  205819:	01 d0                	add    eax,edx
  20581b:	01 c0                	add    eax,eax
  20581d:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  205820:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205823:	48 63 d0             	movsxd rdx,eax
  205826:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  20582d:	48 01 d0             	add    rax,rdx
  205830:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205833:	0f be c0             	movsx  eax,al
  205836:	83 e8 30             	sub    eax,0x30
  205839:	01 45 f4             	add    DWORD PTR [rbp-0xc],eax
  20583c:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  205840:	eb a9                	jmp    2057eb <vprintf(char const*, __va_list_tag*)+0x27a>
  205842:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205845:	48 63 d0             	movsxd rdx,eax
  205848:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  20584f:	48 01 d0             	add    rax,rdx
  205852:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205855:	3c 2a                	cmp    al,0x2a
  205857:	75 61                	jne    2058ba <vprintf(char const*, __va_list_tag*)+0x349>
  205859:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205860:	8b 00                	mov    eax,DWORD PTR [rax]
  205862:	83 f8 2f             	cmp    eax,0x2f
  205865:	77 30                	ja     205897 <vprintf(char const*, __va_list_tag*)+0x326>
  205867:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20586e:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205872:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205879:	8b 00                	mov    eax,DWORD PTR [rax]
  20587b:	89 c0                	mov    eax,eax
  20587d:	48 01 d0             	add    rax,rdx
  205880:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205887:	8b 12                	mov    edx,DWORD PTR [rdx]
  205889:	8d 4a 08             	lea    ecx,[rdx+0x8]
  20588c:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205893:	89 0a                	mov    DWORD PTR [rdx],ecx
  205895:	eb 1a                	jmp    2058b1 <vprintf(char const*, __va_list_tag*)+0x340>
  205897:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20589e:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2058a2:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2058a6:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2058ad:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2058b1:	8b 00                	mov    eax,DWORD PTR [rax]
  2058b3:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  2058b6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2058ba:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2058bd:	48 63 d0             	movsxd rdx,eax
  2058c0:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2058c7:	48 01 d0             	add    rax,rdx
  2058ca:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2058cd:	3c 2e                	cmp    al,0x2e
  2058cf:	0f 85 d5 00 00 00    	jne    2059aa <vprintf(char const*, __va_list_tag*)+0x439>
  2058d5:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2058d9:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2058dc:	48 63 d0             	movsxd rdx,eax
  2058df:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2058e6:	48 01 d0             	add    rax,rdx
  2058e9:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2058ec:	0f be c0             	movsx  eax,al
  2058ef:	89 c7                	mov    edi,eax
  2058f1:	e8 2e e3 ff ff       	call   203c24 <util::isdigit(char)>
  2058f6:	85 c0                	test   eax,eax
  2058f8:	0f 95 c0             	setne  al
  2058fb:	84 c0                	test   al,al
  2058fd:	74 31                	je     205930 <vprintf(char const*, __va_list_tag*)+0x3bf>
  2058ff:	8b 55 f0             	mov    edx,DWORD PTR [rbp-0x10]
  205902:	89 d0                	mov    eax,edx
  205904:	c1 e0 02             	shl    eax,0x2
  205907:	01 d0                	add    eax,edx
  205909:	01 c0                	add    eax,eax
  20590b:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
  20590e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205911:	48 63 d0             	movsxd rdx,eax
  205914:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  20591b:	48 01 d0             	add    rax,rdx
  20591e:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205921:	0f be c0             	movsx  eax,al
  205924:	83 e8 30             	sub    eax,0x30
  205927:	01 45 f0             	add    DWORD PTR [rbp-0x10],eax
  20592a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  20592e:	eb a9                	jmp    2058d9 <vprintf(char const*, __va_list_tag*)+0x368>
  205930:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205933:	48 63 d0             	movsxd rdx,eax
  205936:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  20593d:	48 01 d0             	add    rax,rdx
  205940:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205943:	3c 2a                	cmp    al,0x2a
  205945:	75 6a                	jne    2059b1 <vprintf(char const*, __va_list_tag*)+0x440>
  205947:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20594e:	8b 00                	mov    eax,DWORD PTR [rax]
  205950:	83 f8 2f             	cmp    eax,0x2f
  205953:	77 30                	ja     205985 <vprintf(char const*, __va_list_tag*)+0x414>
  205955:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20595c:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205960:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205967:	8b 00                	mov    eax,DWORD PTR [rax]
  205969:	89 c0                	mov    eax,eax
  20596b:	48 01 d0             	add    rax,rdx
  20596e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205975:	8b 12                	mov    edx,DWORD PTR [rdx]
  205977:	8d 4a 08             	lea    ecx,[rdx+0x8]
  20597a:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205981:	89 0a                	mov    DWORD PTR [rdx],ecx
  205983:	eb 1a                	jmp    20599f <vprintf(char const*, __va_list_tag*)+0x42e>
  205985:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20598c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205990:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205994:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20599b:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  20599f:	8b 00                	mov    eax,DWORD PTR [rax]
  2059a1:	89 45 f0             	mov    DWORD PTR [rbp-0x10],eax
  2059a4:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2059a8:	eb 07                	jmp    2059b1 <vprintf(char const*, __va_list_tag*)+0x440>
  2059aa:	c7 45 f0 06 00 00 00 	mov    DWORD PTR [rbp-0x10],0x6
  2059b1:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2059b4:	48 63 d0             	movsxd rdx,eax
  2059b7:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2059be:	48 01 d0             	add    rax,rdx
  2059c1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2059c4:	3c 68                	cmp    al,0x68
  2059c6:	74 73                	je     205a3b <vprintf(char const*, __va_list_tag*)+0x4ca>
  2059c8:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2059cb:	48 63 d0             	movsxd rdx,eax
  2059ce:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2059d5:	48 01 d0             	add    rax,rdx
  2059d8:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2059db:	3c 6c                	cmp    al,0x6c
  2059dd:	74 5c                	je     205a3b <vprintf(char const*, __va_list_tag*)+0x4ca>
  2059df:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2059e2:	48 63 d0             	movsxd rdx,eax
  2059e5:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  2059ec:	48 01 d0             	add    rax,rdx
  2059ef:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2059f2:	3c 6a                	cmp    al,0x6a
  2059f4:	74 45                	je     205a3b <vprintf(char const*, __va_list_tag*)+0x4ca>
  2059f6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2059f9:	48 63 d0             	movsxd rdx,eax
  2059fc:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a03:	48 01 d0             	add    rax,rdx
  205a06:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a09:	3c 7a                	cmp    al,0x7a
  205a0b:	74 2e                	je     205a3b <vprintf(char const*, __va_list_tag*)+0x4ca>
  205a0d:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a10:	48 63 d0             	movsxd rdx,eax
  205a13:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a1a:	48 01 d0             	add    rax,rdx
  205a1d:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a20:	3c 74                	cmp    al,0x74
  205a22:	74 17                	je     205a3b <vprintf(char const*, __va_list_tag*)+0x4ca>
  205a24:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a27:	48 63 d0             	movsxd rdx,eax
  205a2a:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a31:	48 01 d0             	add    rax,rdx
  205a34:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a37:	3c 4c                	cmp    al,0x4c
  205a39:	75 56                	jne    205a91 <vprintf(char const*, __va_list_tag*)+0x520>
  205a3b:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a3e:	48 63 d0             	movsxd rdx,eax
  205a41:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a48:	48 01 d0             	add    rax,rdx
  205a4b:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a4e:	88 45 fa             	mov    BYTE PTR [rbp-0x6],al
  205a51:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  205a55:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a58:	48 63 d0             	movsxd rdx,eax
  205a5b:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a62:	48 01 d0             	add    rax,rdx
  205a65:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a68:	3c 68                	cmp    al,0x68
  205a6a:	75 06                	jne    205a72 <vprintf(char const*, __va_list_tag*)+0x501>
  205a6c:	c6 45 fa 48          	mov    BYTE PTR [rbp-0x6],0x48
  205a70:	eb 1f                	jmp    205a91 <vprintf(char const*, __va_list_tag*)+0x520>
  205a72:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a75:	48 63 d0             	movsxd rdx,eax
  205a78:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a7f:	48 01 d0             	add    rax,rdx
  205a82:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205a85:	3c 6c                	cmp    al,0x6c
  205a87:	75 08                	jne    205a91 <vprintf(char const*, __va_list_tag*)+0x520>
  205a89:	c6 45 fa 71          	mov    BYTE PTR [rbp-0x6],0x71
  205a8d:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  205a91:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  205a94:	48 63 d0             	movsxd rdx,eax
  205a97:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  205a9e:	48 01 d0             	add    rax,rdx
  205aa1:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  205aa4:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
  205aa7:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205aae:	ba 00 01 00 00       	mov    edx,0x100
  205ab3:	be 00 00 00 00       	mov    esi,0x0
  205ab8:	48 89 c7             	mov    rdi,rax
  205abb:	e8 ca d4 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  205ac0:	c7 45 dc 0a 00 00 00 	mov    DWORD PTR [rbp-0x24],0xa
  205ac7:	80 7d fb 6f          	cmp    BYTE PTR [rbp-0x5],0x6f
  205acb:	75 27                	jne    205af4 <vprintf(char const*, __va_list_tag*)+0x583>
  205acd:	c7 45 dc 08 00 00 00 	mov    DWORD PTR [rbp-0x24],0x8
  205ad4:	c6 45 fb 75          	mov    BYTE PTR [rbp-0x5],0x75
  205ad8:	80 7d ec 00          	cmp    BYTE PTR [rbp-0x14],0x0
  205adc:	74 16                	je     205af4 <vprintf(char const*, __va_list_tag*)+0x583>
  205ade:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  205ae5:	48 89 c6             	mov    rsi,rax
  205ae8:	48 8d 3d da 4c 00 00 	lea    rdi,[rip+0x4cda]        # 20a7c9 <BASE_GRAN+0x7a1>
  205aef:	e8 28 fa ff ff       	call   20551c <displayString(char*, int*)>
  205af4:	80 7d fb 70          	cmp    BYTE PTR [rbp-0x5],0x70
  205af8:	75 0f                	jne    205b09 <vprintf(char const*, __va_list_tag*)+0x598>
  205afa:	c7 45 dc 10 00 00 00 	mov    DWORD PTR [rbp-0x24],0x10
  205b01:	c6 45 fa 7a          	mov    BYTE PTR [rbp-0x6],0x7a
  205b05:	c6 45 fb 75          	mov    BYTE PTR [rbp-0x5],0x75
  205b09:	0f be 45 fb          	movsx  eax,BYTE PTR [rbp-0x5]
  205b0d:	83 e8 41             	sub    eax,0x41
  205b10:	83 f8 37             	cmp    eax,0x37
  205b13:	0f 87 93 13 00 00    	ja     206eac <vprintf(char const*, __va_list_tag*)+0x193b>
  205b19:	89 c0                	mov    eax,eax
  205b1b:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  205b22:	00 
  205b23:	48 8d 05 ee 4c 00 00 	lea    rax,[rip+0x4cee]        # 20a818 <BASE_GRAN+0x7f0>
  205b2a:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  205b2d:	48 98                	cdqe   
  205b2f:	48 8d 15 e2 4c 00 00 	lea    rdx,[rip+0x4ce2]        # 20a818 <BASE_GRAN+0x7f0>
  205b36:	48 01 d0             	add    rax,rdx
  205b39:	ff e0                	jmp    rax
  205b3b:	c7 45 dc 10 00 00 00 	mov    DWORD PTR [rbp-0x24],0x10
  205b42:	83 7d dc 0a          	cmp    DWORD PTR [rbp-0x24],0xa
  205b46:	74 05                	je     205b4d <vprintf(char const*, __va_list_tag*)+0x5dc>
  205b48:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  205b4b:	eb 05                	jmp    205b52 <vprintf(char const*, __va_list_tag*)+0x5e1>
  205b4d:	b8 11 00 00 00       	mov    eax,0x11
  205b52:	89 45 dc             	mov    DWORD PTR [rbp-0x24],eax
  205b55:	80 7d ec 00          	cmp    BYTE PTR [rbp-0x14],0x0
  205b59:	74 16                	je     205b71 <vprintf(char const*, __va_list_tag*)+0x600>
  205b5b:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  205b62:	48 89 c6             	mov    rsi,rax
  205b65:	48 8d 3d 5f 4c 00 00 	lea    rdi,[rip+0x4c5f]        # 20a7cb <BASE_GRAN+0x7a3>
  205b6c:	e8 ab f9 ff ff       	call   20551c <displayString(char*, int*)>
  205b71:	0f be 45 fa          	movsx  eax,BYTE PTR [rbp-0x6]
  205b75:	85 c0                	test   eax,eax
  205b77:	74 48                	je     205bc1 <vprintf(char const*, __va_list_tag*)+0x650>
  205b79:	85 c0                	test   eax,eax
  205b7b:	0f 88 f3 05 00 00    	js     206174 <vprintf(char const*, __va_list_tag*)+0xc03>
  205b81:	83 f8 7a             	cmp    eax,0x7a
  205b84:	0f 8f ea 05 00 00    	jg     206174 <vprintf(char const*, __va_list_tag*)+0xc03>
  205b8a:	83 f8 48             	cmp    eax,0x48
  205b8d:	0f 8c e1 05 00 00    	jl     206174 <vprintf(char const*, __va_list_tag*)+0xc03>
  205b93:	83 e8 48             	sub    eax,0x48
  205b96:	83 f8 32             	cmp    eax,0x32
  205b99:	0f 87 d5 05 00 00    	ja     206174 <vprintf(char const*, __va_list_tag*)+0xc03>
  205b9f:	89 c0                	mov    eax,eax
  205ba1:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  205ba8:	00 
  205ba9:	48 8d 05 48 4d 00 00 	lea    rax,[rip+0x4d48]        # 20a8f8 <BASE_GRAN+0x8d0>
  205bb0:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  205bb3:	48 98                	cdqe   
  205bb5:	48 8d 15 3c 4d 00 00 	lea    rdx,[rip+0x4d3c]        # 20a8f8 <BASE_GRAN+0x8d0>
  205bbc:	48 01 d0             	add    rax,rdx
  205bbf:	ff e0                	jmp    rax
  205bc1:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205bc8:	8b 00                	mov    eax,DWORD PTR [rax]
  205bca:	83 f8 2f             	cmp    eax,0x2f
  205bcd:	77 30                	ja     205bff <vprintf(char const*, __va_list_tag*)+0x68e>
  205bcf:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205bd6:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205bda:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205be1:	8b 00                	mov    eax,DWORD PTR [rax]
  205be3:	89 c0                	mov    eax,eax
  205be5:	48 01 d0             	add    rax,rdx
  205be8:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205bef:	8b 12                	mov    edx,DWORD PTR [rdx]
  205bf1:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205bf4:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205bfb:	89 0a                	mov    DWORD PTR [rdx],ecx
  205bfd:	eb 1a                	jmp    205c19 <vprintf(char const*, __va_list_tag*)+0x6a8>
  205bff:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205c06:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205c0a:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205c0e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205c15:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205c19:	8b 00                	mov    eax,DWORD PTR [rax]
  205c1b:	89 85 60 ff ff ff    	mov    DWORD PTR [rbp-0xa0],eax
  205c21:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205c26:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205c2a:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205c2f:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205c33:	8b 85 60 ff ff ff    	mov    eax,DWORD PTR [rbp-0xa0]
  205c39:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205c3d:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205c40:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205c47:	41 50                	push   r8
  205c49:	57                   	push   rdi
  205c4a:	45 89 d0             	mov    r8d,r10d
  205c4d:	48 89 c7             	mov    rdi,rax
  205c50:	e8 5d f4 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205c55:	48 83 c4 10          	add    rsp,0x10
  205c59:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205c60:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205c67:	48 89 d6             	mov    rsi,rdx
  205c6a:	48 89 c7             	mov    rdi,rax
  205c6d:	e8 aa f8 ff ff       	call   20551c <displayString(char*, int*)>
  205c72:	e9 fe 04 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  205c77:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205c7e:	8b 00                	mov    eax,DWORD PTR [rax]
  205c80:	83 f8 2f             	cmp    eax,0x2f
  205c83:	77 30                	ja     205cb5 <vprintf(char const*, __va_list_tag*)+0x744>
  205c85:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205c8c:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205c90:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205c97:	8b 00                	mov    eax,DWORD PTR [rax]
  205c99:	89 c0                	mov    eax,eax
  205c9b:	48 01 d0             	add    rax,rdx
  205c9e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205ca5:	8b 12                	mov    edx,DWORD PTR [rdx]
  205ca7:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205caa:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205cb1:	89 0a                	mov    DWORD PTR [rdx],ecx
  205cb3:	eb 1a                	jmp    205ccf <vprintf(char const*, __va_list_tag*)+0x75e>
  205cb5:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205cbc:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205cc0:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205cc4:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205ccb:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205ccf:	8b 00                	mov    eax,DWORD PTR [rax]
  205cd1:	88 85 65 ff ff ff    	mov    BYTE PTR [rbp-0x9b],al
  205cd7:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205cdc:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205ce0:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205ce5:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205ce9:	0f b6 85 65 ff ff ff 	movzx  eax,BYTE PTR [rbp-0x9b]
  205cf0:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205cf4:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205cf7:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205cfe:	41 50                	push   r8
  205d00:	57                   	push   rdi
  205d01:	45 89 d0             	mov    r8d,r10d
  205d04:	48 89 c7             	mov    rdi,rax
  205d07:	e8 a6 f3 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205d0c:	48 83 c4 10          	add    rsp,0x10
  205d10:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205d17:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205d1e:	48 89 d6             	mov    rsi,rdx
  205d21:	48 89 c7             	mov    rdi,rax
  205d24:	e8 f3 f7 ff ff       	call   20551c <displayString(char*, int*)>
  205d29:	e9 47 04 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  205d2e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205d35:	8b 00                	mov    eax,DWORD PTR [rax]
  205d37:	83 f8 2f             	cmp    eax,0x2f
  205d3a:	77 30                	ja     205d6c <vprintf(char const*, __va_list_tag*)+0x7fb>
  205d3c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205d43:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205d47:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205d4e:	8b 00                	mov    eax,DWORD PTR [rax]
  205d50:	89 c0                	mov    eax,eax
  205d52:	48 01 d0             	add    rax,rdx
  205d55:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205d5c:	8b 12                	mov    edx,DWORD PTR [rdx]
  205d5e:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205d61:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205d68:	89 0a                	mov    DWORD PTR [rdx],ecx
  205d6a:	eb 1a                	jmp    205d86 <vprintf(char const*, __va_list_tag*)+0x815>
  205d6c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205d73:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205d77:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205d7b:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205d82:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205d86:	8b 00                	mov    eax,DWORD PTR [rax]
  205d88:	66 89 85 66 ff ff ff 	mov    WORD PTR [rbp-0x9a],ax
  205d8f:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205d94:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205d98:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205d9d:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205da1:	0f b7 85 66 ff ff ff 	movzx  eax,WORD PTR [rbp-0x9a]
  205da8:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205dac:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205daf:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205db6:	41 50                	push   r8
  205db8:	57                   	push   rdi
  205db9:	45 89 d0             	mov    r8d,r10d
  205dbc:	48 89 c7             	mov    rdi,rax
  205dbf:	e8 ee f2 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205dc4:	48 83 c4 10          	add    rsp,0x10
  205dc8:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205dcf:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205dd6:	48 89 d6             	mov    rsi,rdx
  205dd9:	48 89 c7             	mov    rdi,rax
  205ddc:	e8 3b f7 ff ff       	call   20551c <displayString(char*, int*)>
  205de1:	e9 8f 03 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  205de6:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205ded:	8b 00                	mov    eax,DWORD PTR [rax]
  205def:	83 f8 2f             	cmp    eax,0x2f
  205df2:	77 30                	ja     205e24 <vprintf(char const*, __va_list_tag*)+0x8b3>
  205df4:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205dfb:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205dff:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205e06:	8b 00                	mov    eax,DWORD PTR [rax]
  205e08:	89 c0                	mov    eax,eax
  205e0a:	48 01 d0             	add    rax,rdx
  205e0d:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205e14:	8b 12                	mov    edx,DWORD PTR [rdx]
  205e16:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205e19:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205e20:	89 0a                	mov    DWORD PTR [rdx],ecx
  205e22:	eb 1a                	jmp    205e3e <vprintf(char const*, __va_list_tag*)+0x8cd>
  205e24:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205e2b:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205e2f:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205e33:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205e3a:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205e3e:	48 8b 00             	mov    rax,QWORD PTR [rax]
  205e41:	48 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],rax
  205e48:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205e4d:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205e51:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205e56:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205e5a:	48 8b 85 70 ff ff ff 	mov    rax,QWORD PTR [rbp-0x90]
  205e61:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205e65:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205e68:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205e6f:	41 50                	push   r8
  205e71:	57                   	push   rdi
  205e72:	45 89 d0             	mov    r8d,r10d
  205e75:	48 89 c7             	mov    rdi,rax
  205e78:	e8 35 f2 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205e7d:	48 83 c4 10          	add    rsp,0x10
  205e81:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205e88:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205e8f:	48 89 d6             	mov    rsi,rdx
  205e92:	48 89 c7             	mov    rdi,rax
  205e95:	e8 82 f6 ff ff       	call   20551c <displayString(char*, int*)>
  205e9a:	e9 d6 02 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  205e9f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205ea6:	8b 00                	mov    eax,DWORD PTR [rax]
  205ea8:	83 f8 2f             	cmp    eax,0x2f
  205eab:	77 30                	ja     205edd <vprintf(char const*, __va_list_tag*)+0x96c>
  205ead:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205eb4:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205eb8:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205ebf:	8b 00                	mov    eax,DWORD PTR [rax]
  205ec1:	89 c0                	mov    eax,eax
  205ec3:	48 01 d0             	add    rax,rdx
  205ec6:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205ecd:	8b 12                	mov    edx,DWORD PTR [rdx]
  205ecf:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205ed2:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205ed9:	89 0a                	mov    DWORD PTR [rdx],ecx
  205edb:	eb 1a                	jmp    205ef7 <vprintf(char const*, __va_list_tag*)+0x986>
  205edd:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205ee4:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205ee8:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205eec:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205ef3:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205ef7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  205efa:	48 89 85 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rax
  205f01:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205f06:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205f0a:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205f0f:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205f13:	48 8b 85 78 ff ff ff 	mov    rax,QWORD PTR [rbp-0x88]
  205f1a:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205f1e:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205f21:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205f28:	41 50                	push   r8
  205f2a:	57                   	push   rdi
  205f2b:	45 89 d0             	mov    r8d,r10d
  205f2e:	48 89 c7             	mov    rdi,rax
  205f31:	e8 7c f1 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205f36:	48 83 c4 10          	add    rsp,0x10
  205f3a:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205f41:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  205f48:	48 89 d6             	mov    rsi,rdx
  205f4b:	48 89 c7             	mov    rdi,rax
  205f4e:	e8 c9 f5 ff ff       	call   20551c <displayString(char*, int*)>
  205f53:	e9 1d 02 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  205f58:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205f5f:	8b 00                	mov    eax,DWORD PTR [rax]
  205f61:	83 f8 2f             	cmp    eax,0x2f
  205f64:	77 30                	ja     205f96 <vprintf(char const*, __va_list_tag*)+0xa25>
  205f66:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205f6d:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  205f71:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205f78:	8b 00                	mov    eax,DWORD PTR [rax]
  205f7a:	89 c0                	mov    eax,eax
  205f7c:	48 01 d0             	add    rax,rdx
  205f7f:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205f86:	8b 12                	mov    edx,DWORD PTR [rdx]
  205f88:	8d 4a 08             	lea    ecx,[rdx+0x8]
  205f8b:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205f92:	89 0a                	mov    DWORD PTR [rdx],ecx
  205f94:	eb 1a                	jmp    205fb0 <vprintf(char const*, __va_list_tag*)+0xa3f>
  205f96:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  205f9d:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  205fa1:	48 8d 48 08          	lea    rcx,[rax+0x8]
  205fa5:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  205fac:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  205fb0:	48 8b 00             	mov    rax,QWORD PTR [rax]
  205fb3:	48 89 85 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rax
  205fba:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  205fbf:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  205fc3:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  205fc8:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  205fcc:	48 8b 85 68 ff ff ff 	mov    rax,QWORD PTR [rbp-0x98]
  205fd3:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  205fd7:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  205fda:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  205fe1:	41 50                	push   r8
  205fe3:	57                   	push   rdi
  205fe4:	45 89 d0             	mov    r8d,r10d
  205fe7:	48 89 c7             	mov    rdi,rax
  205fea:	e8 c3 f0 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  205fef:	48 83 c4 10          	add    rsp,0x10
  205ff3:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  205ffa:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206001:	48 89 d6             	mov    rsi,rdx
  206004:	48 89 c7             	mov    rdi,rax
  206007:	e8 10 f5 ff ff       	call   20551c <displayString(char*, int*)>
  20600c:	e9 64 01 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  206011:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206018:	8b 00                	mov    eax,DWORD PTR [rax]
  20601a:	83 f8 2f             	cmp    eax,0x2f
  20601d:	77 30                	ja     20604f <vprintf(char const*, __va_list_tag*)+0xade>
  20601f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206026:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  20602a:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206031:	8b 00                	mov    eax,DWORD PTR [rax]
  206033:	89 c0                	mov    eax,eax
  206035:	48 01 d0             	add    rax,rdx
  206038:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20603f:	8b 12                	mov    edx,DWORD PTR [rdx]
  206041:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206044:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20604b:	89 0a                	mov    DWORD PTR [rdx],ecx
  20604d:	eb 1a                	jmp    206069 <vprintf(char const*, __va_list_tag*)+0xaf8>
  20604f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206056:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20605a:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20605e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206065:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206069:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20606c:	48 89 45 88          	mov    QWORD PTR [rbp-0x78],rax
  206070:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206075:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206079:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  20607e:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206082:	48 8b 45 88          	mov    rax,QWORD PTR [rbp-0x78]
  206086:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  20608a:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  20608d:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206094:	41 50                	push   r8
  206096:	57                   	push   rdi
  206097:	45 89 d0             	mov    r8d,r10d
  20609a:	48 89 c7             	mov    rdi,rax
  20609d:	e8 10 f0 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  2060a2:	48 83 c4 10          	add    rsp,0x10
  2060a6:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  2060ad:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  2060b4:	48 89 d6             	mov    rsi,rdx
  2060b7:	48 89 c7             	mov    rdi,rax
  2060ba:	e8 5d f4 ff ff       	call   20551c <displayString(char*, int*)>
  2060bf:	e9 b1 00 00 00       	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  2060c4:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2060cb:	8b 00                	mov    eax,DWORD PTR [rax]
  2060cd:	83 f8 2f             	cmp    eax,0x2f
  2060d0:	77 30                	ja     206102 <vprintf(char const*, __va_list_tag*)+0xb91>
  2060d2:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2060d9:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2060dd:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2060e4:	8b 00                	mov    eax,DWORD PTR [rax]
  2060e6:	89 c0                	mov    eax,eax
  2060e8:	48 01 d0             	add    rax,rdx
  2060eb:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2060f2:	8b 12                	mov    edx,DWORD PTR [rdx]
  2060f4:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2060f7:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2060fe:	89 0a                	mov    DWORD PTR [rdx],ecx
  206100:	eb 1a                	jmp    20611c <vprintf(char const*, __va_list_tag*)+0xbab>
  206102:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206109:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20610d:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206111:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206118:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  20611c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20611f:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
  206123:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206128:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  20612c:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  206131:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206135:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206139:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  20613c:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206143:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
  206147:	41 50                	push   r8
  206149:	57                   	push   rdi
  20614a:	45 89 d0             	mov    r8d,r10d
  20614d:	48 89 c7             	mov    rdi,rax
  206150:	e8 5d ef ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206155:	48 83 c4 10          	add    rsp,0x10
  206159:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206160:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206167:	48 89 d6             	mov    rsi,rdx
  20616a:	48 89 c7             	mov    rdi,rax
  20616d:	e8 aa f3 ff ff       	call   20551c <displayString(char*, int*)>
  206172:	eb 01                	jmp    206175 <vprintf(char const*, __va_list_tag*)+0xc04>
  206174:	90                   	nop
  206175:	e9 36 0d 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  20617a:	0f be 45 fa          	movsx  eax,BYTE PTR [rbp-0x6]
  20617e:	85 c0                	test   eax,eax
  206180:	74 48                	je     2061ca <vprintf(char const*, __va_list_tag*)+0xc59>
  206182:	85 c0                	test   eax,eax
  206184:	0f 88 d3 05 00 00    	js     20675d <vprintf(char const*, __va_list_tag*)+0x11ec>
  20618a:	83 f8 7a             	cmp    eax,0x7a
  20618d:	0f 8f ca 05 00 00    	jg     20675d <vprintf(char const*, __va_list_tag*)+0x11ec>
  206193:	83 f8 48             	cmp    eax,0x48
  206196:	0f 8c c1 05 00 00    	jl     20675d <vprintf(char const*, __va_list_tag*)+0x11ec>
  20619c:	83 e8 48             	sub    eax,0x48
  20619f:	83 f8 32             	cmp    eax,0x32
  2061a2:	0f 87 b5 05 00 00    	ja     20675d <vprintf(char const*, __va_list_tag*)+0x11ec>
  2061a8:	89 c0                	mov    eax,eax
  2061aa:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  2061b1:	00 
  2061b2:	48 8d 05 0b 48 00 00 	lea    rax,[rip+0x480b]        # 20a9c4 <BASE_GRAN+0x99c>
  2061b9:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  2061bc:	48 98                	cdqe   
  2061be:	48 8d 15 ff 47 00 00 	lea    rdx,[rip+0x47ff]        # 20a9c4 <BASE_GRAN+0x99c>
  2061c5:	48 01 d0             	add    rax,rdx
  2061c8:	ff e0                	jmp    rax
  2061ca:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2061d1:	8b 00                	mov    eax,DWORD PTR [rax]
  2061d3:	83 f8 2f             	cmp    eax,0x2f
  2061d6:	77 30                	ja     206208 <vprintf(char const*, __va_list_tag*)+0xc97>
  2061d8:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2061df:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2061e3:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2061ea:	8b 00                	mov    eax,DWORD PTR [rax]
  2061ec:	89 c0                	mov    eax,eax
  2061ee:	48 01 d0             	add    rax,rdx
  2061f1:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2061f8:	8b 12                	mov    edx,DWORD PTR [rdx]
  2061fa:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2061fd:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206204:	89 0a                	mov    DWORD PTR [rdx],ecx
  206206:	eb 1a                	jmp    206222 <vprintf(char const*, __va_list_tag*)+0xcb1>
  206208:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20620f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206213:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206217:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20621e:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206222:	8b 00                	mov    eax,DWORD PTR [rax]
  206224:	89 45 90             	mov    DWORD PTR [rbp-0x70],eax
  206227:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  20622c:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206230:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  206235:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206239:	8b 45 90             	mov    eax,DWORD PTR [rbp-0x70]
  20623c:	48 98                	cdqe   
  20623e:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206242:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  206245:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  20624c:	41 50                	push   r8
  20624e:	57                   	push   rdi
  20624f:	45 89 d0             	mov    r8d,r10d
  206252:	48 89 c7             	mov    rdi,rax
  206255:	e8 58 ee ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  20625a:	48 83 c4 10          	add    rsp,0x10
  20625e:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206265:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  20626c:	48 89 d6             	mov    rsi,rdx
  20626f:	48 89 c7             	mov    rdi,rax
  206272:	e8 a5 f2 ff ff       	call   20551c <displayString(char*, int*)>
  206277:	e9 e2 04 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  20627c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206283:	8b 00                	mov    eax,DWORD PTR [rax]
  206285:	83 f8 2f             	cmp    eax,0x2f
  206288:	77 30                	ja     2062ba <vprintf(char const*, __va_list_tag*)+0xd49>
  20628a:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206291:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206295:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20629c:	8b 00                	mov    eax,DWORD PTR [rax]
  20629e:	89 c0                	mov    eax,eax
  2062a0:	48 01 d0             	add    rax,rdx
  2062a3:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2062aa:	8b 12                	mov    edx,DWORD PTR [rdx]
  2062ac:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2062af:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2062b6:	89 0a                	mov    DWORD PTR [rdx],ecx
  2062b8:	eb 1a                	jmp    2062d4 <vprintf(char const*, __va_list_tag*)+0xd63>
  2062ba:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2062c1:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2062c5:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2062c9:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2062d0:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2062d4:	8b 00                	mov    eax,DWORD PTR [rax]
  2062d6:	88 45 95             	mov    BYTE PTR [rbp-0x6b],al
  2062d9:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  2062de:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  2062e2:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  2062e7:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  2062eb:	48 0f be 45 95       	movsx  rax,BYTE PTR [rbp-0x6b]
  2062f0:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  2062f4:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  2062f7:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  2062fe:	41 50                	push   r8
  206300:	57                   	push   rdi
  206301:	45 89 d0             	mov    r8d,r10d
  206304:	48 89 c7             	mov    rdi,rax
  206307:	e8 a6 ed ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  20630c:	48 83 c4 10          	add    rsp,0x10
  206310:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206317:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  20631e:	48 89 d6             	mov    rsi,rdx
  206321:	48 89 c7             	mov    rdi,rax
  206324:	e8 f3 f1 ff ff       	call   20551c <displayString(char*, int*)>
  206329:	e9 30 04 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  20632e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206335:	8b 00                	mov    eax,DWORD PTR [rax]
  206337:	83 f8 2f             	cmp    eax,0x2f
  20633a:	77 30                	ja     20636c <vprintf(char const*, __va_list_tag*)+0xdfb>
  20633c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206343:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206347:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20634e:	8b 00                	mov    eax,DWORD PTR [rax]
  206350:	89 c0                	mov    eax,eax
  206352:	48 01 d0             	add    rax,rdx
  206355:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20635c:	8b 12                	mov    edx,DWORD PTR [rdx]
  20635e:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206361:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206368:	89 0a                	mov    DWORD PTR [rdx],ecx
  20636a:	eb 1a                	jmp    206386 <vprintf(char const*, __va_list_tag*)+0xe15>
  20636c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206373:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206377:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20637b:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206382:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206386:	8b 00                	mov    eax,DWORD PTR [rax]
  206388:	66 89 45 96          	mov    WORD PTR [rbp-0x6a],ax
  20638c:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206391:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206395:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  20639a:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  20639e:	48 0f bf 45 96       	movsx  rax,WORD PTR [rbp-0x6a]
  2063a3:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  2063a7:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  2063aa:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  2063b1:	41 50                	push   r8
  2063b3:	57                   	push   rdi
  2063b4:	45 89 d0             	mov    r8d,r10d
  2063b7:	48 89 c7             	mov    rdi,rax
  2063ba:	e8 f3 ec ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  2063bf:	48 83 c4 10          	add    rsp,0x10
  2063c3:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  2063ca:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  2063d1:	48 89 d6             	mov    rsi,rdx
  2063d4:	48 89 c7             	mov    rdi,rax
  2063d7:	e8 40 f1 ff ff       	call   20551c <displayString(char*, int*)>
  2063dc:	e9 7d 03 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  2063e1:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2063e8:	8b 00                	mov    eax,DWORD PTR [rax]
  2063ea:	83 f8 2f             	cmp    eax,0x2f
  2063ed:	77 30                	ja     20641f <vprintf(char const*, __va_list_tag*)+0xeae>
  2063ef:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2063f6:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2063fa:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206401:	8b 00                	mov    eax,DWORD PTR [rax]
  206403:	89 c0                	mov    eax,eax
  206405:	48 01 d0             	add    rax,rdx
  206408:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20640f:	8b 12                	mov    edx,DWORD PTR [rdx]
  206411:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206414:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20641b:	89 0a                	mov    DWORD PTR [rdx],ecx
  20641d:	eb 1a                	jmp    206439 <vprintf(char const*, __va_list_tag*)+0xec8>
  20641f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206426:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  20642a:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20642e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206435:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206439:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20643c:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
  206440:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206445:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206449:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  20644e:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206452:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206456:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  206459:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206460:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  206464:	41 50                	push   r8
  206466:	57                   	push   rdi
  206467:	45 89 d0             	mov    r8d,r10d
  20646a:	48 89 c7             	mov    rdi,rax
  20646d:	e8 40 ec ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206472:	48 83 c4 10          	add    rsp,0x10
  206476:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  20647d:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206484:	48 89 d6             	mov    rsi,rdx
  206487:	48 89 c7             	mov    rdi,rax
  20648a:	e8 8d f0 ff ff       	call   20551c <displayString(char*, int*)>
  20648f:	e9 ca 02 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  206494:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20649b:	8b 00                	mov    eax,DWORD PTR [rax]
  20649d:	83 f8 2f             	cmp    eax,0x2f
  2064a0:	77 30                	ja     2064d2 <vprintf(char const*, __va_list_tag*)+0xf61>
  2064a2:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2064a9:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2064ad:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2064b4:	8b 00                	mov    eax,DWORD PTR [rax]
  2064b6:	89 c0                	mov    eax,eax
  2064b8:	48 01 d0             	add    rax,rdx
  2064bb:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2064c2:	8b 12                	mov    edx,DWORD PTR [rdx]
  2064c4:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2064c7:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2064ce:	89 0a                	mov    DWORD PTR [rdx],ecx
  2064d0:	eb 1a                	jmp    2064ec <vprintf(char const*, __va_list_tag*)+0xf7b>
  2064d2:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2064d9:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2064dd:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2064e1:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2064e8:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2064ec:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2064ef:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
  2064f3:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  2064f8:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  2064fc:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  206501:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206505:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206509:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  20650c:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206513:	48 8b 45 a8          	mov    rax,QWORD PTR [rbp-0x58]
  206517:	41 50                	push   r8
  206519:	57                   	push   rdi
  20651a:	45 89 d0             	mov    r8d,r10d
  20651d:	48 89 c7             	mov    rdi,rax
  206520:	e8 8d eb ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206525:	48 83 c4 10          	add    rsp,0x10
  206529:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206530:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206537:	48 89 d6             	mov    rsi,rdx
  20653a:	48 89 c7             	mov    rdi,rax
  20653d:	e8 da ef ff ff       	call   20551c <displayString(char*, int*)>
  206542:	e9 17 02 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  206547:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20654e:	8b 00                	mov    eax,DWORD PTR [rax]
  206550:	83 f8 2f             	cmp    eax,0x2f
  206553:	77 30                	ja     206585 <vprintf(char const*, __va_list_tag*)+0x1014>
  206555:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20655c:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206560:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206567:	8b 00                	mov    eax,DWORD PTR [rax]
  206569:	89 c0                	mov    eax,eax
  20656b:	48 01 d0             	add    rax,rdx
  20656e:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206575:	8b 12                	mov    edx,DWORD PTR [rdx]
  206577:	8d 4a 08             	lea    ecx,[rdx+0x8]
  20657a:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206581:	89 0a                	mov    DWORD PTR [rdx],ecx
  206583:	eb 1a                	jmp    20659f <vprintf(char const*, __va_list_tag*)+0x102e>
  206585:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20658c:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206590:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206594:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20659b:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  20659f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2065a2:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
  2065a6:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  2065ab:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  2065af:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  2065b4:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  2065b8:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  2065bc:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  2065bf:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  2065c6:	48 8b 45 98          	mov    rax,QWORD PTR [rbp-0x68]
  2065ca:	41 50                	push   r8
  2065cc:	57                   	push   rdi
  2065cd:	45 89 d0             	mov    r8d,r10d
  2065d0:	48 89 c7             	mov    rdi,rax
  2065d3:	e8 da ea ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  2065d8:	48 83 c4 10          	add    rsp,0x10
  2065dc:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  2065e3:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  2065ea:	48 89 d6             	mov    rsi,rdx
  2065ed:	48 89 c7             	mov    rdi,rax
  2065f0:	e8 27 ef ff ff       	call   20551c <displayString(char*, int*)>
  2065f5:	e9 64 01 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  2065fa:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206601:	8b 00                	mov    eax,DWORD PTR [rax]
  206603:	83 f8 2f             	cmp    eax,0x2f
  206606:	77 30                	ja     206638 <vprintf(char const*, __va_list_tag*)+0x10c7>
  206608:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20660f:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206613:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20661a:	8b 00                	mov    eax,DWORD PTR [rax]
  20661c:	89 c0                	mov    eax,eax
  20661e:	48 01 d0             	add    rax,rdx
  206621:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206628:	8b 12                	mov    edx,DWORD PTR [rdx]
  20662a:	8d 4a 08             	lea    ecx,[rdx+0x8]
  20662d:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206634:	89 0a                	mov    DWORD PTR [rdx],ecx
  206636:	eb 1a                	jmp    206652 <vprintf(char const*, __va_list_tag*)+0x10e1>
  206638:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20663f:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206643:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206647:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20664e:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206652:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206655:	48 89 45 b8          	mov    QWORD PTR [rbp-0x48],rax
  206659:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  20665e:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206662:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  206667:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  20666b:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  20666f:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206673:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  206676:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  20667d:	41 50                	push   r8
  20667f:	57                   	push   rdi
  206680:	45 89 d0             	mov    r8d,r10d
  206683:	48 89 c7             	mov    rdi,rax
  206686:	e8 27 ea ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  20668b:	48 83 c4 10          	add    rsp,0x10
  20668f:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206696:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  20669d:	48 89 d6             	mov    rsi,rdx
  2066a0:	48 89 c7             	mov    rdi,rax
  2066a3:	e8 74 ee ff ff       	call   20551c <displayString(char*, int*)>
  2066a8:	e9 b1 00 00 00       	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  2066ad:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2066b4:	8b 00                	mov    eax,DWORD PTR [rax]
  2066b6:	83 f8 2f             	cmp    eax,0x2f
  2066b9:	77 30                	ja     2066eb <vprintf(char const*, __va_list_tag*)+0x117a>
  2066bb:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2066c2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2066c6:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2066cd:	8b 00                	mov    eax,DWORD PTR [rax]
  2066cf:	89 c0                	mov    eax,eax
  2066d1:	48 01 d0             	add    rax,rdx
  2066d4:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2066db:	8b 12                	mov    edx,DWORD PTR [rdx]
  2066dd:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2066e0:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2066e7:	89 0a                	mov    DWORD PTR [rdx],ecx
  2066e9:	eb 1a                	jmp    206705 <vprintf(char const*, __va_list_tag*)+0x1194>
  2066eb:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2066f2:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2066f6:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2066fa:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206701:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206705:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206708:	48 89 45 b0          	mov    QWORD PTR [rbp-0x50],rax
  20670c:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206711:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206715:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  20671a:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  20671e:	44 8b 4d f4          	mov    r9d,DWORD PTR [rbp-0xc]
  206722:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  206725:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  20672c:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  206730:	41 50                	push   r8
  206732:	57                   	push   rdi
  206733:	45 89 d0             	mov    r8d,r10d
  206736:	48 89 c7             	mov    rdi,rax
  206739:	e8 74 e9 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  20673e:	48 83 c4 10          	add    rsp,0x10
  206742:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206749:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206750:	48 89 d6             	mov    rsi,rdx
  206753:	48 89 c7             	mov    rdi,rax
  206756:	e8 c1 ed ff ff       	call   20551c <displayString(char*, int*)>
  20675b:	eb 01                	jmp    20675e <vprintf(char const*, __va_list_tag*)+0x11ed>
  20675d:	90                   	nop
  20675e:	e9 4d 07 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  206763:	80 7d fa 6c          	cmp    BYTE PTR [rbp-0x6],0x6c
  206767:	75 74                	jne    2067dd <vprintf(char const*, __va_list_tag*)+0x126c>
  206769:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206770:	8b 00                	mov    eax,DWORD PTR [rax]
  206772:	83 f8 2f             	cmp    eax,0x2f
  206775:	77 30                	ja     2067a7 <vprintf(char const*, __va_list_tag*)+0x1236>
  206777:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20677e:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206782:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206789:	8b 00                	mov    eax,DWORD PTR [rax]
  20678b:	89 c0                	mov    eax,eax
  20678d:	48 01 d0             	add    rax,rdx
  206790:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206797:	8b 12                	mov    edx,DWORD PTR [rdx]
  206799:	8d 4a 08             	lea    ecx,[rdx+0x8]
  20679c:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2067a3:	89 0a                	mov    DWORD PTR [rdx],ecx
  2067a5:	eb 1a                	jmp    2067c1 <vprintf(char const*, __va_list_tag*)+0x1250>
  2067a7:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2067ae:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2067b2:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2067b6:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2067bd:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2067c1:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2067c4:	0f be c0             	movsx  eax,al
  2067c7:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  2067ce:	48 89 d6             	mov    rsi,rdx
  2067d1:	89 c7                	mov    edi,eax
  2067d3:	e8 11 ed ff ff       	call   2054e9 <displayCharacter(char, int*)>
  2067d8:	e9 d3 06 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  2067dd:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2067e4:	8b 00                	mov    eax,DWORD PTR [rax]
  2067e6:	83 f8 2f             	cmp    eax,0x2f
  2067e9:	77 30                	ja     20681b <vprintf(char const*, __va_list_tag*)+0x12aa>
  2067eb:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2067f2:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2067f6:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2067fd:	8b 00                	mov    eax,DWORD PTR [rax]
  2067ff:	89 c0                	mov    eax,eax
  206801:	48 01 d0             	add    rax,rdx
  206804:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20680b:	8b 12                	mov    edx,DWORD PTR [rdx]
  20680d:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206810:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206817:	89 0a                	mov    DWORD PTR [rdx],ecx
  206819:	eb 1a                	jmp    206835 <vprintf(char const*, __va_list_tag*)+0x12c4>
  20681b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206822:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206826:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20682a:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206831:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206835:	8b 00                	mov    eax,DWORD PTR [rax]
  206837:	0f be c0             	movsx  eax,al
  20683a:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206841:	48 89 d6             	mov    rsi,rdx
  206844:	89 c7                	mov    edi,eax
  206846:	e8 9e ec ff ff       	call   2054e9 <displayCharacter(char, int*)>
  20684b:	e9 60 06 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  206850:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206857:	8b 00                	mov    eax,DWORD PTR [rax]
  206859:	83 f8 2f             	cmp    eax,0x2f
  20685c:	77 30                	ja     20688e <vprintf(char const*, __va_list_tag*)+0x131d>
  20685e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206865:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206869:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206870:	8b 00                	mov    eax,DWORD PTR [rax]
  206872:	89 c0                	mov    eax,eax
  206874:	48 01 d0             	add    rax,rdx
  206877:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20687e:	8b 12                	mov    edx,DWORD PTR [rdx]
  206880:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206883:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20688a:	89 0a                	mov    DWORD PTR [rdx],ecx
  20688c:	eb 1a                	jmp    2068a8 <vprintf(char const*, __va_list_tag*)+0x1337>
  20688e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206895:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206899:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20689d:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2068a4:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2068a8:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2068ab:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  2068b2:	48 89 d6             	mov    rsi,rdx
  2068b5:	48 89 c7             	mov    rdi,rax
  2068b8:	e8 5f ec ff ff       	call   20551c <displayString(char*, int*)>
  2068bd:	e9 ee 05 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  2068c2:	0f be 45 fa          	movsx  eax,BYTE PTR [rbp-0x6]
  2068c6:	85 c0                	test   eax,eax
  2068c8:	0f 84 1e 01 00 00    	je     2069ec <vprintf(char const*, __va_list_tag*)+0x147b>
  2068ce:	85 c0                	test   eax,eax
  2068d0:	0f 88 9c 03 00 00    	js     206c72 <vprintf(char const*, __va_list_tag*)+0x1701>
  2068d6:	83 f8 7a             	cmp    eax,0x7a
  2068d9:	0f 8f 93 03 00 00    	jg     206c72 <vprintf(char const*, __va_list_tag*)+0x1701>
  2068df:	83 f8 48             	cmp    eax,0x48
  2068e2:	0f 8c 8a 03 00 00    	jl     206c72 <vprintf(char const*, __va_list_tag*)+0x1701>
  2068e8:	83 e8 48             	sub    eax,0x48
  2068eb:	83 f8 32             	cmp    eax,0x32
  2068ee:	0f 87 7e 03 00 00    	ja     206c72 <vprintf(char const*, __va_list_tag*)+0x1701>
  2068f4:	89 c0                	mov    eax,eax
  2068f6:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  2068fd:	00 
  2068fe:	48 8d 05 8b 41 00 00 	lea    rax,[rip+0x418b]        # 20aa90 <BASE_GRAN+0xa68>
  206905:	8b 04 02             	mov    eax,DWORD PTR [rdx+rax*1]
  206908:	48 98                	cdqe   
  20690a:	48 8d 15 7f 41 00 00 	lea    rdx,[rip+0x417f]        # 20aa90 <BASE_GRAN+0xa68>
  206911:	48 01 d0             	add    rax,rdx
  206914:	ff e0                	jmp    rax
  206916:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  20691c:	89 c6                	mov    esi,eax
  20691e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206925:	8b 00                	mov    eax,DWORD PTR [rax]
  206927:	83 f8 2f             	cmp    eax,0x2f
  20692a:	77 30                	ja     20695c <vprintf(char const*, __va_list_tag*)+0x13eb>
  20692c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206933:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206937:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20693e:	8b 00                	mov    eax,DWORD PTR [rax]
  206940:	89 c0                	mov    eax,eax
  206942:	48 01 d0             	add    rax,rdx
  206945:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  20694c:	8b 12                	mov    edx,DWORD PTR [rdx]
  20694e:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206951:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206958:	89 0a                	mov    DWORD PTR [rdx],ecx
  20695a:	eb 1a                	jmp    206976 <vprintf(char const*, __va_list_tag*)+0x1405>
  20695c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206963:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206967:	48 8d 48 08          	lea    rcx,[rax+0x8]
  20696b:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206972:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206976:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206979:	40 88 30             	mov    BYTE PTR [rax],sil
  20697c:	e9 f2 02 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206981:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206987:	89 c6                	mov    esi,eax
  206989:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206990:	8b 00                	mov    eax,DWORD PTR [rax]
  206992:	83 f8 2f             	cmp    eax,0x2f
  206995:	77 30                	ja     2069c7 <vprintf(char const*, __va_list_tag*)+0x1456>
  206997:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  20699e:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  2069a2:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2069a9:	8b 00                	mov    eax,DWORD PTR [rax]
  2069ab:	89 c0                	mov    eax,eax
  2069ad:	48 01 d0             	add    rax,rdx
  2069b0:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2069b7:	8b 12                	mov    edx,DWORD PTR [rdx]
  2069b9:	8d 4a 08             	lea    ecx,[rdx+0x8]
  2069bc:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2069c3:	89 0a                	mov    DWORD PTR [rdx],ecx
  2069c5:	eb 1a                	jmp    2069e1 <vprintf(char const*, __va_list_tag*)+0x1470>
  2069c7:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2069ce:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  2069d2:	48 8d 48 08          	lea    rcx,[rax+0x8]
  2069d6:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  2069dd:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  2069e1:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2069e4:	66 89 30             	mov    WORD PTR [rax],si
  2069e7:	e9 87 02 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  2069ec:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  2069f3:	8b 00                	mov    eax,DWORD PTR [rax]
  2069f5:	83 f8 2f             	cmp    eax,0x2f
  2069f8:	77 30                	ja     206a2a <vprintf(char const*, __va_list_tag*)+0x14b9>
  2069fa:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a01:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206a05:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a0c:	8b 00                	mov    eax,DWORD PTR [rax]
  206a0e:	89 c0                	mov    eax,eax
  206a10:	48 01 d0             	add    rax,rdx
  206a13:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206a1a:	8b 12                	mov    edx,DWORD PTR [rdx]
  206a1c:	8d 4a 08             	lea    ecx,[rdx+0x8]
  206a1f:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206a26:	89 0a                	mov    DWORD PTR [rdx],ecx
  206a28:	eb 1a                	jmp    206a44 <vprintf(char const*, __va_list_tag*)+0x14d3>
  206a2a:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a31:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206a35:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206a39:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206a40:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206a44:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206a47:	48 89 45 c0          	mov    QWORD PTR [rbp-0x40],rax
  206a4b:	8b 95 54 ff ff ff    	mov    edx,DWORD PTR [rbp-0xac]
  206a51:	48 8b 45 c0          	mov    rax,QWORD PTR [rbp-0x40]
  206a55:	89 10                	mov    DWORD PTR [rax],edx
  206a57:	e9 17 02 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206a5c:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206a62:	48 63 d0             	movsxd rdx,eax
  206a65:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a6c:	8b 00                	mov    eax,DWORD PTR [rax]
  206a6e:	83 f8 2f             	cmp    eax,0x2f
  206a71:	77 30                	ja     206aa3 <vprintf(char const*, __va_list_tag*)+0x1532>
  206a73:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a7a:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
  206a7e:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206a85:	8b 00                	mov    eax,DWORD PTR [rax]
  206a87:	89 c0                	mov    eax,eax
  206a89:	48 01 c8             	add    rax,rcx
  206a8c:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206a93:	8b 09                	mov    ecx,DWORD PTR [rcx]
  206a95:	8d 71 08             	lea    esi,[rcx+0x8]
  206a98:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206a9f:	89 31                	mov    DWORD PTR [rcx],esi
  206aa1:	eb 1a                	jmp    206abd <vprintf(char const*, __va_list_tag*)+0x154c>
  206aa3:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206aaa:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206aae:	48 8d 70 08          	lea    rsi,[rax+0x8]
  206ab2:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206ab9:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
  206abd:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206ac0:	48 89 10             	mov    QWORD PTR [rax],rdx
  206ac3:	e9 ab 01 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206ac8:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206ace:	48 63 d0             	movsxd rdx,eax
  206ad1:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206ad8:	8b 00                	mov    eax,DWORD PTR [rax]
  206ada:	83 f8 2f             	cmp    eax,0x2f
  206add:	77 30                	ja     206b0f <vprintf(char const*, __va_list_tag*)+0x159e>
  206adf:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206ae6:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
  206aea:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206af1:	8b 00                	mov    eax,DWORD PTR [rax]
  206af3:	89 c0                	mov    eax,eax
  206af5:	48 01 c8             	add    rax,rcx
  206af8:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206aff:	8b 09                	mov    ecx,DWORD PTR [rcx]
  206b01:	8d 71 08             	lea    esi,[rcx+0x8]
  206b04:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206b0b:	89 31                	mov    DWORD PTR [rcx],esi
  206b0d:	eb 1a                	jmp    206b29 <vprintf(char const*, __va_list_tag*)+0x15b8>
  206b0f:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206b16:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206b1a:	48 8d 70 08          	lea    rsi,[rax+0x8]
  206b1e:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206b25:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
  206b29:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206b2c:	48 89 10             	mov    QWORD PTR [rax],rdx
  206b2f:	e9 3f 01 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206b34:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206b3a:	48 63 d0             	movsxd rdx,eax
  206b3d:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206b44:	8b 00                	mov    eax,DWORD PTR [rax]
  206b46:	83 f8 2f             	cmp    eax,0x2f
  206b49:	77 30                	ja     206b7b <vprintf(char const*, __va_list_tag*)+0x160a>
  206b4b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206b52:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
  206b56:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206b5d:	8b 00                	mov    eax,DWORD PTR [rax]
  206b5f:	89 c0                	mov    eax,eax
  206b61:	48 01 c8             	add    rax,rcx
  206b64:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206b6b:	8b 09                	mov    ecx,DWORD PTR [rcx]
  206b6d:	8d 71 08             	lea    esi,[rcx+0x8]
  206b70:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206b77:	89 31                	mov    DWORD PTR [rcx],esi
  206b79:	eb 1a                	jmp    206b95 <vprintf(char const*, __va_list_tag*)+0x1624>
  206b7b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206b82:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206b86:	48 8d 70 08          	lea    rsi,[rax+0x8]
  206b8a:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206b91:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
  206b95:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206b98:	48 89 10             	mov    QWORD PTR [rax],rdx
  206b9b:	e9 d3 00 00 00       	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206ba0:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206ba6:	48 63 d0             	movsxd rdx,eax
  206ba9:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206bb0:	8b 00                	mov    eax,DWORD PTR [rax]
  206bb2:	83 f8 2f             	cmp    eax,0x2f
  206bb5:	77 30                	ja     206be7 <vprintf(char const*, __va_list_tag*)+0x1676>
  206bb7:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206bbe:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
  206bc2:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206bc9:	8b 00                	mov    eax,DWORD PTR [rax]
  206bcb:	89 c0                	mov    eax,eax
  206bcd:	48 01 c8             	add    rax,rcx
  206bd0:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206bd7:	8b 09                	mov    ecx,DWORD PTR [rcx]
  206bd9:	8d 71 08             	lea    esi,[rcx+0x8]
  206bdc:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206be3:	89 31                	mov    DWORD PTR [rcx],esi
  206be5:	eb 1a                	jmp    206c01 <vprintf(char const*, __va_list_tag*)+0x1690>
  206be7:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206bee:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206bf2:	48 8d 70 08          	lea    rsi,[rax+0x8]
  206bf6:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206bfd:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
  206c01:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206c04:	48 89 10             	mov    QWORD PTR [rax],rdx
  206c07:	eb 6a                	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206c09:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206c0f:	48 63 d0             	movsxd rdx,eax
  206c12:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c19:	8b 00                	mov    eax,DWORD PTR [rax]
  206c1b:	83 f8 2f             	cmp    eax,0x2f
  206c1e:	77 30                	ja     206c50 <vprintf(char const*, __va_list_tag*)+0x16df>
  206c20:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c27:	48 8b 48 10          	mov    rcx,QWORD PTR [rax+0x10]
  206c2b:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c32:	8b 00                	mov    eax,DWORD PTR [rax]
  206c34:	89 c0                	mov    eax,eax
  206c36:	48 01 c8             	add    rax,rcx
  206c39:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206c40:	8b 09                	mov    ecx,DWORD PTR [rcx]
  206c42:	8d 71 08             	lea    esi,[rcx+0x8]
  206c45:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206c4c:	89 31                	mov    DWORD PTR [rcx],esi
  206c4e:	eb 1a                	jmp    206c6a <vprintf(char const*, __va_list_tag*)+0x16f9>
  206c50:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c57:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206c5b:	48 8d 70 08          	lea    rsi,[rax+0x8]
  206c5f:	48 8b 8d 40 fe ff ff 	mov    rcx,QWORD PTR [rbp-0x1c0]
  206c66:	48 89 71 08          	mov    QWORD PTR [rcx+0x8],rsi
  206c6a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  206c6d:	48 89 10             	mov    QWORD PTR [rax],rdx
  206c70:	eb 01                	jmp    206c73 <vprintf(char const*, __va_list_tag*)+0x1702>
  206c72:	90                   	nop
  206c73:	e9 38 02 00 00       	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  206c78:	c6 45 ea 01          	mov    BYTE PTR [rbp-0x16],0x1
  206c7c:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c83:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  206c86:	3d af 00 00 00       	cmp    eax,0xaf
  206c8b:	77 33                	ja     206cc0 <vprintf(char const*, __va_list_tag*)+0x174f>
  206c8d:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c94:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
  206c98:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206c9f:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  206ca2:	89 c0                	mov    eax,eax
  206ca4:	48 01 d0             	add    rax,rdx
  206ca7:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206cae:	8b 52 04             	mov    edx,DWORD PTR [rdx+0x4]
  206cb1:	8d 4a 10             	lea    ecx,[rdx+0x10]
  206cb4:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206cbb:	89 4a 04             	mov    DWORD PTR [rdx+0x4],ecx
  206cbe:	eb 1a                	jmp    206cda <vprintf(char const*, __va_list_tag*)+0x1769>
  206cc0:	48 8b 85 40 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1c0]
  206cc7:	48 8b 40 08          	mov    rax,QWORD PTR [rax+0x8]
  206ccb:	48 8d 48 08          	lea    rcx,[rax+0x8]
  206ccf:	48 8b 95 40 fe ff ff 	mov    rdx,QWORD PTR [rbp-0x1c0]
  206cd6:	48 89 4a 08          	mov    QWORD PTR [rdx+0x8],rcx
  206cda:	f2 0f 10 00          	movsd  xmm0,QWORD PTR [rax]
  206cde:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  206ce3:	0f b6 45 ea          	movzx  eax,BYTE PTR [rbp-0x16]
  206ce7:	83 f0 01             	xor    eax,0x1
  206cea:	84 c0                	test   al,al
  206cec:	75 33                	jne    206d21 <vprintf(char const*, __va_list_tag*)+0x17b0>
  206cee:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  206cf3:	66 0f 2f 05 65 3e 00 	comisd xmm0,QWORD PTR [rip+0x3e65]        # 20ab60 <BASE_GRAN+0xb38>
  206cfa:	00 
  206cfb:	0f 93 c0             	setae  al
  206cfe:	83 f0 01             	xor    eax,0x1
  206d01:	84 c0                	test   al,al
  206d03:	75 1c                	jne    206d21 <vprintf(char const*, __va_list_tag*)+0x17b0>
  206d05:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  206d0a:	f2 0f 10 0d 4e 3e 00 	movsd  xmm1,QWORD PTR [rip+0x3e4e]        # 20ab60 <BASE_GRAN+0xb38>
  206d11:	00 
  206d12:	f2 0f 5e c1          	divsd  xmm0,xmm1
  206d16:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  206d1b:	83 45 e4 01          	add    DWORD PTR [rbp-0x1c],0x1
  206d1f:	eb c2                	jmp    206ce3 <vprintf(char const*, __va_list_tag*)+0x1772>
  206d21:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  206d24:	2b 45 f0             	sub    eax,DWORD PTR [rbp-0x10]
  206d27:	2b 45 e4             	sub    eax,DWORD PTR [rbp-0x1c]
  206d2a:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
  206d2e:	75 06                	jne    206d36 <vprintf(char const*, __va_list_tag*)+0x17c5>
  206d30:	80 7d ec 00          	cmp    BYTE PTR [rbp-0x14],0x0
  206d34:	74 07                	je     206d3d <vprintf(char const*, __va_list_tag*)+0x17cc>
  206d36:	ba 01 00 00 00       	mov    edx,0x1
  206d3b:	eb 05                	jmp    206d42 <vprintf(char const*, __va_list_tag*)+0x17d1>
  206d3d:	ba 00 00 00 00       	mov    edx,0x0
  206d42:	29 d0                	sub    eax,edx
  206d44:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
  206d47:	80 7d ea 00          	cmp    BYTE PTR [rbp-0x16],0x0
  206d4b:	74 04                	je     206d51 <vprintf(char const*, __va_list_tag*)+0x17e0>
  206d4d:	83 6d cc 04          	sub    DWORD PTR [rbp-0x34],0x4
  206d51:	83 7d cc 00          	cmp    DWORD PTR [rbp-0x34],0x0
  206d55:	79 07                	jns    206d5e <vprintf(char const*, __va_list_tag*)+0x17ed>
  206d57:	c7 45 cc 00 00 00 00 	mov    DWORD PTR [rbp-0x34],0x0
  206d5e:	44 0f b6 45 ee       	movzx  r8d,BYTE PTR [rbp-0x12]
  206d63:	0f b6 7d ef          	movzx  edi,BYTE PTR [rbp-0x11]
  206d67:	44 0f b6 55 ed       	movzx  r10d,BYTE PTR [rbp-0x13]
  206d6c:	0f b6 4d eb          	movzx  ecx,BYTE PTR [rbp-0x15]
  206d70:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  206d75:	f2 48 0f 2c c0       	cvttsd2si rax,xmm0
  206d7a:	44 8b 4d cc          	mov    r9d,DWORD PTR [rbp-0x34]
  206d7e:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  206d81:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206d88:	41 50                	push   r8
  206d8a:	57                   	push   rdi
  206d8b:	45 89 d0             	mov    r8d,r10d
  206d8e:	48 89 c7             	mov    rdi,rax
  206d91:	e8 1c e3 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206d96:	48 83 c4 10          	add    rsp,0x10
  206d9a:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206da1:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206da8:	48 89 d6             	mov    rsi,rdx
  206dab:	48 89 c7             	mov    rdi,rax
  206dae:	e8 69 e7 ff ff       	call   20551c <displayString(char*, int*)>
  206db3:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  206db8:	f2 0f 2c c0          	cvttsd2si eax,xmm0
  206dbc:	66 0f ef c9          	pxor   xmm1,xmm1
  206dc0:	f2 0f 2a c8          	cvtsi2sd xmm1,eax
  206dc4:	f2 0f 10 45 d0       	movsd  xmm0,QWORD PTR [rbp-0x30]
  206dc9:	f2 0f 5c c1          	subsd  xmm0,xmm1
  206dcd:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  206dd2:	c7 45 c8 00 00 00 00 	mov    DWORD PTR [rbp-0x38],0x0
  206dd9:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
  206ddc:	3b 45 f0             	cmp    eax,DWORD PTR [rbp-0x10]
  206ddf:	7d 1c                	jge    206dfd <vprintf(char const*, __va_list_tag*)+0x188c>
  206de1:	f2 0f 10 4d d0       	movsd  xmm1,QWORD PTR [rbp-0x30]
  206de6:	f2 0f 10 05 72 3d 00 	movsd  xmm0,QWORD PTR [rip+0x3d72]        # 20ab60 <BASE_GRAN+0xb38>
  206ded:	00 
  206dee:	f2 0f 59 c1          	mulsd  xmm0,xmm1
  206df2:	f2 0f 11 45 d0       	movsd  QWORD PTR [rbp-0x30],xmm0
  206df7:	83 45 c8 01          	add    DWORD PTR [rbp-0x38],0x1
  206dfb:	eb dc                	jmp    206dd9 <vprintf(char const*, __va_list_tag*)+0x1868>
  206dfd:	f2 0f 10 4d d0       	movsd  xmm1,QWORD PTR [rbp-0x30]
  206e02:	f2 0f 10 05 5e 3d 00 	movsd  xmm0,QWORD PTR [rip+0x3d5e]        # 20ab68 <BASE_GRAN+0xb40>
  206e09:	00 
  206e0a:	f2 0f 58 c1          	addsd  xmm0,xmm1
  206e0e:	f2 48 0f 2c c0       	cvttsd2si rax,xmm0
  206e13:	48 89 85 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rax
  206e1a:	83 7d f0 00          	cmp    DWORD PTR [rbp-0x10],0x0
  206e1e:	74 70                	je     206e90 <vprintf(char const*, __va_list_tag*)+0x191f>
  206e20:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  206e27:	48 89 c6             	mov    rsi,rax
  206e2a:	bf 2e 00 00 00       	mov    edi,0x2e
  206e2f:	e8 b5 e6 ff ff       	call   2054e9 <displayCharacter(char, int*)>
  206e34:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206e3b:	48 8b 85 58 ff ff ff 	mov    rax,QWORD PTR [rbp-0xa8]
  206e42:	6a 00                	push   0x0
  206e44:	6a 00                	push   0x0
  206e46:	41 b9 00 00 00 00    	mov    r9d,0x0
  206e4c:	41 b8 00 00 00 00    	mov    r8d,0x0
  206e52:	b9 00 00 00 00       	mov    ecx,0x0
  206e57:	ba 0a 00 00 00       	mov    edx,0xa
  206e5c:	48 89 c7             	mov    rdi,rax
  206e5f:	e8 4e e2 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206e64:	48 83 c4 10          	add    rsp,0x10
  206e68:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
  206e6b:	48 98                	cdqe   
  206e6d:	c6 84 05 50 fe ff ff 	mov    BYTE PTR [rbp+rax*1-0x1b0],0x0
  206e74:	00 
  206e75:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206e7c:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206e83:	48 89 d6             	mov    rsi,rdx
  206e86:	48 89 c7             	mov    rdi,rax
  206e89:	e8 8e e6 ff ff       	call   20551c <displayString(char*, int*)>
  206e8e:	eb 1f                	jmp    206eaf <vprintf(char const*, __va_list_tag*)+0x193e>
  206e90:	80 7d ec 00          	cmp    BYTE PTR [rbp-0x14],0x0
  206e94:	74 19                	je     206eaf <vprintf(char const*, __va_list_tag*)+0x193e>
  206e96:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  206e9d:	48 89 c6             	mov    rsi,rax
  206ea0:	bf 2e 00 00 00       	mov    edi,0x2e
  206ea5:	e8 3f e6 ff ff       	call   2054e9 <displayCharacter(char, int*)>
  206eaa:	eb 03                	jmp    206eaf <vprintf(char const*, __va_list_tag*)+0x193e>
  206eac:	90                   	nop
  206ead:	eb 01                	jmp    206eb0 <vprintf(char const*, __va_list_tag*)+0x193f>
  206eaf:	90                   	nop
  206eb0:	80 7d fb 65          	cmp    BYTE PTR [rbp-0x5],0x65
  206eb4:	75 18                	jne    206ece <vprintf(char const*, __va_list_tag*)+0x195d>
  206eb6:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  206ebd:	48 89 c6             	mov    rsi,rax
  206ec0:	48 8d 3d 07 39 00 00 	lea    rdi,[rip+0x3907]        # 20a7ce <BASE_GRAN+0x7a6>
  206ec7:	e8 50 e6 ff ff       	call   20551c <displayString(char*, int*)>
  206ecc:	eb 1c                	jmp    206eea <vprintf(char const*, __va_list_tag*)+0x1979>
  206ece:	80 7d fb 45          	cmp    BYTE PTR [rbp-0x5],0x45
  206ed2:	75 16                	jne    206eea <vprintf(char const*, __va_list_tag*)+0x1979>
  206ed4:	48 8d 85 54 ff ff ff 	lea    rax,[rbp-0xac]
  206edb:	48 89 c6             	mov    rsi,rax
  206ede:	48 8d 3d ec 38 00 00 	lea    rdi,[rip+0x38ec]        # 20a7d1 <BASE_GRAN+0x7a9>
  206ee5:	e8 32 e6 ff ff       	call   20551c <displayString(char*, int*)>
  206eea:	80 7d fb 65          	cmp    BYTE PTR [rbp-0x5],0x65
  206eee:	74 06                	je     206ef6 <vprintf(char const*, __va_list_tag*)+0x1985>
  206ef0:	80 7d fb 45          	cmp    BYTE PTR [rbp-0x5],0x45
  206ef4:	75 74                	jne    206f6a <vprintf(char const*, __va_list_tag*)+0x19f9>
  206ef6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  206ef9:	48 98                	cdqe   
  206efb:	48 8d b5 50 fe ff ff 	lea    rsi,[rbp-0x1b0]
  206f02:	6a 01                	push   0x1
  206f04:	6a 00                	push   0x0
  206f06:	41 b9 02 00 00 00    	mov    r9d,0x2
  206f0c:	41 b8 00 00 00 00    	mov    r8d,0x0
  206f12:	b9 00 00 00 00       	mov    ecx,0x0
  206f17:	ba 0a 00 00 00       	mov    edx,0xa
  206f1c:	48 89 c7             	mov    rdi,rax
  206f1f:	e8 8e e1 ff ff       	call   2050b2 <__int_str(long, char*, int, bool, bool, int, bool, bool)>
  206f24:	48 83 c4 10          	add    rsp,0x10
  206f28:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206f2f:	48 8d 85 50 fe ff ff 	lea    rax,[rbp-0x1b0]
  206f36:	48 89 d6             	mov    rsi,rdx
  206f39:	48 89 c7             	mov    rdi,rax
  206f3c:	e8 db e5 ff ff       	call   20551c <displayString(char*, int*)>
  206f41:	eb 27                	jmp    206f6a <vprintf(char const*, __va_list_tag*)+0x19f9>
  206f43:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  206f46:	48 63 d0             	movsxd rdx,eax
  206f49:	48 8b 85 48 fe ff ff 	mov    rax,QWORD PTR [rbp-0x1b8]
  206f50:	48 01 d0             	add    rax,rdx
  206f53:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  206f56:	0f be c0             	movsx  eax,al
  206f59:	48 8d 95 54 ff ff ff 	lea    rdx,[rbp-0xac]
  206f60:	48 89 d6             	mov    rsi,rdx
  206f63:	89 c7                	mov    edi,eax
  206f65:	e8 7f e5 ff ff       	call   2054e9 <displayCharacter(char, int*)>
  206f6a:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  206f6e:	e9 88 e7 ff ff       	jmp    2056fb <vprintf(char const*, __va_list_tag*)+0x18a>
  206f73:	8b 85 54 ff ff ff    	mov    eax,DWORD PTR [rbp-0xac]
  206f79:	c9                   	leave  
  206f7a:	c3                   	ret    

0000000000206f7b <printf>:
  206f7b:	55                   	push   rbp
  206f7c:	48 89 e5             	mov    rbp,rsp
  206f7f:	48 81 ec e0 00 00 00 	sub    rsp,0xe0
  206f86:	48 89 bd 28 ff ff ff 	mov    QWORD PTR [rbp-0xd8],rdi
  206f8d:	48 89 b5 58 ff ff ff 	mov    QWORD PTR [rbp-0xa8],rsi
  206f94:	48 89 95 60 ff ff ff 	mov    QWORD PTR [rbp-0xa0],rdx
  206f9b:	48 89 8d 68 ff ff ff 	mov    QWORD PTR [rbp-0x98],rcx
  206fa2:	4c 89 85 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r8
  206fa9:	4c 89 8d 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],r9
  206fb0:	84 c0                	test   al,al
  206fb2:	74 20                	je     206fd4 <printf+0x59>
  206fb4:	0f 29 45 80          	movaps XMMWORD PTR [rbp-0x80],xmm0
  206fb8:	0f 29 4d 90          	movaps XMMWORD PTR [rbp-0x70],xmm1
  206fbc:	0f 29 55 a0          	movaps XMMWORD PTR [rbp-0x60],xmm2
  206fc0:	0f 29 5d b0          	movaps XMMWORD PTR [rbp-0x50],xmm3
  206fc4:	0f 29 65 c0          	movaps XMMWORD PTR [rbp-0x40],xmm4
  206fc8:	0f 29 6d d0          	movaps XMMWORD PTR [rbp-0x30],xmm5
  206fcc:	0f 29 75 e0          	movaps XMMWORD PTR [rbp-0x20],xmm6
  206fd0:	0f 29 7d f0          	movaps XMMWORD PTR [rbp-0x10],xmm7
  206fd4:	c7 85 30 ff ff ff 08 	mov    DWORD PTR [rbp-0xd0],0x8
  206fdb:	00 00 00 
  206fde:	c7 85 34 ff ff ff 30 	mov    DWORD PTR [rbp-0xcc],0x30
  206fe5:	00 00 00 
  206fe8:	48 8d 45 10          	lea    rax,[rbp+0x10]
  206fec:	48 89 85 38 ff ff ff 	mov    QWORD PTR [rbp-0xc8],rax
  206ff3:	48 8d 85 50 ff ff ff 	lea    rax,[rbp-0xb0]
  206ffa:	48 89 85 40 ff ff ff 	mov    QWORD PTR [rbp-0xc0],rax
  207001:	48 8d 95 30 ff ff ff 	lea    rdx,[rbp-0xd0]
  207008:	48 8b 85 28 ff ff ff 	mov    rax,QWORD PTR [rbp-0xd8]
  20700f:	48 89 d6             	mov    rsi,rdx
  207012:	48 89 c7             	mov    rdi,rax
  207015:	e8 57 e5 ff ff       	call   205571 <vprintf(char const*, __va_list_tag*)>
  20701a:	89 85 4c ff ff ff    	mov    DWORD PTR [rbp-0xb4],eax
  207020:	8b 85 4c ff ff ff    	mov    eax,DWORD PTR [rbp-0xb4]
  207026:	c9                   	leave  
  207027:	c3                   	ret    

0000000000207028 <gfx::screen::plot_pixel(gfx::shapes::s_pos_point, unsigned int)>:
  207028:	55                   	push   rbp
  207029:	48 89 e5             	mov    rbp,rsp
  20702c:	48 83 ec 10          	sub    rsp,0x10
  207030:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  207034:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
  207037:	0f b7 05 8c 91 00 00 	movzx  eax,WORD PTR [rip+0x918c]        # 2101ca <gfx::gop+0xa>
  20703e:	0f b7 d0             	movzx  edx,ax
  207041:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207044:	0f af d0             	imul   edx,eax
  207047:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  20704a:	01 d0                	add    eax,edx
  20704c:	89 c0                	mov    eax,eax
  20704e:	48 8d 14 85 00 00 00 	lea    rdx,[rax*4+0x0]
  207055:	00 
  207056:	48 8b 05 63 91 00 00 	mov    rax,QWORD PTR [rip+0x9163]        # 2101c0 <gfx::gop>
  20705d:	48 01 d0             	add    rax,rdx
  207060:	48 89 c2             	mov    rdx,rax
  207063:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  207066:	89 02                	mov    DWORD PTR [rdx],eax
  207068:	90                   	nop
  207069:	c9                   	leave  
  20706a:	c3                   	ret    

000000000020706b <gfx::shapes::pos(unsigned int, unsigned int)>:
  20706b:	55                   	push   rbp
  20706c:	48 89 e5             	mov    rbp,rsp
  20706f:	48 83 ec 18          	sub    rsp,0x18
  207073:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  207076:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
  207079:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20707c:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  20707f:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207082:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  207085:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207089:	c9                   	leave  
  20708a:	c3                   	ret    

000000000020708b <gfx::shapes::dims(unsigned int, unsigned int)>:
  20708b:	55                   	push   rbp
  20708c:	48 89 e5             	mov    rbp,rsp
  20708f:	48 83 ec 18          	sub    rsp,0x18
  207093:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  207096:	89 75 e8             	mov    DWORD PTR [rbp-0x18],esi
  207099:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20709c:	89 45 f8             	mov    DWORD PTR [rbp-0x8],eax
  20709f:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  2070a2:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  2070a5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2070a9:	c9                   	leave  
  2070aa:	c3                   	ret    

00000000002070ab <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)>:
  2070ab:	55                   	push   rbp
  2070ac:	48 89 e5             	mov    rbp,rsp
  2070af:	53                   	push   rbx
  2070b0:	48 83 ec 48          	sub    rsp,0x48
  2070b4:	48 89 7d c8          	mov    QWORD PTR [rbp-0x38],rdi
  2070b8:	48 89 75 c0          	mov    QWORD PTR [rbp-0x40],rsi
  2070bc:	89 55 bc             	mov    DWORD PTR [rbp-0x44],edx
  2070bf:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
  2070c2:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
  2070c5:	89 d6                	mov    esi,edx
  2070c7:	89 c7                	mov    edi,eax
  2070c9:	e8 9d ff ff ff       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  2070ce:	48 89 c3             	mov    rbx,rax
  2070d1:	be 00 00 00 00       	mov    esi,0x0
  2070d6:	bf 00 00 00 00       	mov    edi,0x0
  2070db:	e8 8b ff ff ff       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  2070e0:	48 89 de             	mov    rsi,rbx
  2070e3:	48 89 c7             	mov    rdi,rax
  2070e6:	e8 95 01 00 00       	call   207280 <gfx::shapes::rect_center(gfx::shapes::s_pos_point, gfx::shapes::s_pos_point)>
  2070eb:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  2070ef:	8b 45 c8             	mov    eax,DWORD PTR [rbp-0x38]
  2070f2:	8b 55 d8             	mov    edx,DWORD PTR [rbp-0x28]
  2070f5:	29 d0                	sub    eax,edx
  2070f7:	89 45 c8             	mov    DWORD PTR [rbp-0x38],eax
  2070fa:	8b 45 cc             	mov    eax,DWORD PTR [rbp-0x34]
  2070fd:	8b 55 dc             	mov    edx,DWORD PTR [rbp-0x24]
  207100:	29 d0                	sub    eax,edx
  207102:	89 45 cc             	mov    DWORD PTR [rbp-0x34],eax
  207105:	8b 55 cc             	mov    edx,DWORD PTR [rbp-0x34]
  207108:	8b 45 dc             	mov    eax,DWORD PTR [rbp-0x24]
  20710b:	01 c2                	add    edx,eax
  20710d:	8b 4d c8             	mov    ecx,DWORD PTR [rbp-0x38]
  207110:	8b 45 d8             	mov    eax,DWORD PTR [rbp-0x28]
  207113:	01 c8                	add    eax,ecx
  207115:	89 d6                	mov    esi,edx
  207117:	89 c7                	mov    edi,eax
  207119:	e8 4d ff ff ff       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  20711e:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  207122:	8b 45 d0             	mov    eax,DWORD PTR [rbp-0x30]
  207125:	8b 55 c0             	mov    edx,DWORD PTR [rbp-0x40]
  207128:	d1 ea                	shr    edx,1
  20712a:	29 d0                	sub    eax,edx
  20712c:	89 c0                	mov    eax,eax
  20712e:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  207132:	8b 55 d0             	mov    edx,DWORD PTR [rbp-0x30]
  207135:	8b 45 c0             	mov    eax,DWORD PTR [rbp-0x40]
  207138:	d1 e8                	shr    eax,1
  20713a:	01 d0                	add    eax,edx
  20713c:	89 c0                	mov    eax,eax
  20713e:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  207142:	77 76                	ja     2071ba <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0x10f>
  207144:	0f b7 05 7f 90 00 00 	movzx  eax,WORD PTR [rip+0x907f]        # 2101ca <gfx::gop+0xa>
  20714b:	0f b7 c0             	movzx  eax,ax
  20714e:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  207152:	73 66                	jae    2071ba <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0x10f>
  207154:	8b 45 d4             	mov    eax,DWORD PTR [rbp-0x2c]
  207157:	8b 55 c4             	mov    edx,DWORD PTR [rbp-0x3c]
  20715a:	d1 ea                	shr    edx,1
  20715c:	29 d0                	sub    eax,edx
  20715e:	89 c0                	mov    eax,eax
  207160:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  207164:	8b 55 d4             	mov    edx,DWORD PTR [rbp-0x2c]
  207167:	8b 45 c4             	mov    eax,DWORD PTR [rbp-0x3c]
  20716a:	d1 e8                	shr    eax,1
  20716c:	01 d0                	add    eax,edx
  20716e:	89 c0                	mov    eax,eax
  207170:	48 39 45 e0          	cmp    QWORD PTR [rbp-0x20],rax
  207174:	77 3a                	ja     2071b0 <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0x105>
  207176:	0f b7 05 4f 90 00 00 	movzx  eax,WORD PTR [rip+0x904f]        # 2101cc <gfx::gop+0xc>
  20717d:	0f b7 c0             	movzx  eax,ax
  207180:	48 39 45 e0          	cmp    QWORD PTR [rbp-0x20],rax
  207184:	73 2a                	jae    2071b0 <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0x105>
  207186:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  20718a:	89 c2                	mov    edx,eax
  20718c:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  207190:	89 d6                	mov    esi,edx
  207192:	89 c7                	mov    edi,eax
  207194:	e8 d2 fe ff ff       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  207199:	48 89 c2             	mov    rdx,rax
  20719c:	8b 45 bc             	mov    eax,DWORD PTR [rbp-0x44]
  20719f:	89 c6                	mov    esi,eax
  2071a1:	48 89 d7             	mov    rdi,rdx
  2071a4:	e8 7f fe ff ff       	call   207028 <gfx::screen::plot_pixel(gfx::shapes::s_pos_point, unsigned int)>
  2071a9:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  2071ae:	eb b4                	jmp    207164 <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0xb9>
  2071b0:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  2071b5:	e9 78 ff ff ff       	jmp    207132 <gfx::shapes::rect(gfx::shapes::s_pos_point, gfx::shapes::s_dimensions, unsigned int)+0x87>
  2071ba:	e8 07 00 00 00       	call   2071c6 <gfx::screen::buff()>
  2071bf:	90                   	nop
  2071c0:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  2071c4:	c9                   	leave  
  2071c5:	c3                   	ret    

00000000002071c6 <gfx::screen::buff()>:
  2071c6:	55                   	push   rbp
  2071c7:	48 89 e5             	mov    rbp,rsp
  2071ca:	0f b7 05 f9 8f 00 00 	movzx  eax,WORD PTR [rip+0x8ff9]        # 2101ca <gfx::gop+0xa>
  2071d1:	0f b7 d0             	movzx  edx,ax
  2071d4:	0f b7 05 f1 8f 00 00 	movzx  eax,WORD PTR [rip+0x8ff1]        # 2101cc <gfx::gop+0xc>
  2071db:	0f b7 c0             	movzx  eax,ax
  2071de:	0f af c2             	imul   eax,edx
  2071e1:	c1 e0 02             	shl    eax,0x2
  2071e4:	48 63 d0             	movsxd rdx,eax
  2071e7:	48 8b 05 e2 8f 00 00 	mov    rax,QWORD PTR [rip+0x8fe2]        # 2101d0 <gfx::buffer>
  2071ee:	48 8b 0d cb 8f 00 00 	mov    rcx,QWORD PTR [rip+0x8fcb]        # 2101c0 <gfx::gop>
  2071f5:	48 89 c6             	mov    rsi,rax
  2071f8:	48 89 cf             	mov    rdi,rcx
  2071fb:	e8 49 bd ff ff       	call   202f49 <memory::operations::memcpy(void*, void const*, unsigned long)>
  207200:	90                   	nop
  207201:	5d                   	pop    rbp
  207202:	c3                   	ret    

0000000000207203 <gfx::screen::save_screen()>:
  207203:	55                   	push   rbp
  207204:	48 89 e5             	mov    rbp,rsp
  207207:	0f b7 05 bc 8f 00 00 	movzx  eax,WORD PTR [rip+0x8fbc]        # 2101ca <gfx::gop+0xa>
  20720e:	0f b7 d0             	movzx  edx,ax
  207211:	0f b7 05 b4 8f 00 00 	movzx  eax,WORD PTR [rip+0x8fb4]        # 2101cc <gfx::gop+0xc>
  207218:	0f b7 c0             	movzx  eax,ax
  20721b:	0f af c2             	imul   eax,edx
  20721e:	c1 e0 02             	shl    eax,0x2
  207221:	48 63 d0             	movsxd rdx,eax
  207224:	48 8b 05 95 8f 00 00 	mov    rax,QWORD PTR [rip+0x8f95]        # 2101c0 <gfx::gop>
  20722b:	48 89 c1             	mov    rcx,rax
  20722e:	48 8b 05 9b 8f 00 00 	mov    rax,QWORD PTR [rip+0x8f9b]        # 2101d0 <gfx::buffer>
  207235:	48 89 ce             	mov    rsi,rcx
  207238:	48 89 c7             	mov    rdi,rax
  20723b:	e8 09 bd ff ff       	call   202f49 <memory::operations::memcpy(void*, void const*, unsigned long)>
  207240:	90                   	nop
  207241:	5d                   	pop    rbp
  207242:	c3                   	ret    

0000000000207243 <gfx::screen::restore_screen()>:
  207243:	55                   	push   rbp
  207244:	48 89 e5             	mov    rbp,rsp
  207247:	0f b7 05 7c 8f 00 00 	movzx  eax,WORD PTR [rip+0x8f7c]        # 2101ca <gfx::gop+0xa>
  20724e:	0f b7 d0             	movzx  edx,ax
  207251:	0f b7 05 74 8f 00 00 	movzx  eax,WORD PTR [rip+0x8f74]        # 2101cc <gfx::gop+0xc>
  207258:	0f b7 c0             	movzx  eax,ax
  20725b:	0f af c2             	imul   eax,edx
  20725e:	c1 e0 02             	shl    eax,0x2
  207261:	48 63 d0             	movsxd rdx,eax
  207264:	48 8b 05 65 8f 00 00 	mov    rax,QWORD PTR [rip+0x8f65]        # 2101d0 <gfx::buffer>
  20726b:	48 8b 0d 4e 8f 00 00 	mov    rcx,QWORD PTR [rip+0x8f4e]        # 2101c0 <gfx::gop>
  207272:	48 89 c6             	mov    rsi,rax
  207275:	48 89 cf             	mov    rdi,rcx
  207278:	e8 cc bc ff ff       	call   202f49 <memory::operations::memcpy(void*, void const*, unsigned long)>
  20727d:	90                   	nop
  20727e:	5d                   	pop    rbp
  20727f:	c3                   	ret    

0000000000207280 <gfx::shapes::rect_center(gfx::shapes::s_pos_point, gfx::shapes::s_pos_point)>:
  207280:	55                   	push   rbp
  207281:	48 89 e5             	mov    rbp,rsp
  207284:	48 83 ec 10          	sub    rsp,0x10
  207288:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20728c:	48 89 75 f0          	mov    QWORD PTR [rbp-0x10],rsi
  207290:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  207293:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  207296:	01 d0                	add    eax,edx
  207298:	d1 e8                	shr    eax,1
  20729a:	89 c2                	mov    edx,eax
  20729c:	8b 4d f8             	mov    ecx,DWORD PTR [rbp-0x8]
  20729f:	8b 45 f0             	mov    eax,DWORD PTR [rbp-0x10]
  2072a2:	01 c8                	add    eax,ecx
  2072a4:	d1 e8                	shr    eax,1
  2072a6:	89 d6                	mov    esi,edx
  2072a8:	89 c7                	mov    edi,eax
  2072aa:	e8 bc fd ff ff       	call   20706b <gfx::shapes::pos(unsigned int, unsigned int)>
  2072af:	c9                   	leave  
  2072b0:	c3                   	ret    

00000000002072b1 <gfx::fonts::get_character_font(char)>:
  2072b1:	55                   	push   rbp
  2072b2:	48 89 e5             	mov    rbp,rsp
  2072b5:	48 83 ec 08          	sub    rsp,0x8
  2072b9:	89 f8                	mov    eax,edi
  2072bb:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  2072be:	0f be 45 fc          	movsx  eax,BYTE PTR [rbp-0x4]
  2072c2:	48 98                	cdqe   
  2072c4:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2072cb:	00 
  2072cc:	48 8d 05 ad 38 00 00 	lea    rax,[rip+0x38ad]        # 20ab80 <kernel_font>
  2072d3:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  2072d7:	c9                   	leave  
  2072d8:	c3                   	ret    

00000000002072d9 <$find_command_slot(io::disk::ahci::hba_port*)>:
  2072d9:	55                   	push   rbp
  2072da:	48 89 e5             	mov    rbp,rsp
  2072dd:	48 83 ec 18          	sub    rsp,0x18
  2072e1:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2072e5:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2072e9:	8b 50 34             	mov    edx,DWORD PTR [rax+0x34]
  2072ec:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2072f0:	8b 40 38             	mov    eax,DWORD PTR [rax+0x38]
  2072f3:	09 d0                	or     eax,edx
  2072f5:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  2072f8:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
  2072ff:	83 7d f8 1f          	cmp    DWORD PTR [rbp-0x8],0x1f
  207303:	7f 18                	jg     20731d <$find_command_slot(io::disk::ahci::hba_port*)+0x44>
  207305:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207308:	83 e0 01             	and    eax,0x1
  20730b:	85 c0                	test   eax,eax
  20730d:	75 05                	jne    207314 <$find_command_slot(io::disk::ahci::hba_port*)+0x3b>
  20730f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  207312:	eb 0e                	jmp    207322 <$find_command_slot(io::disk::ahci::hba_port*)+0x49>
  207314:	d1 6d fc             	shr    DWORD PTR [rbp-0x4],1
  207317:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
  20731b:	eb e2                	jmp    2072ff <$find_command_slot(io::disk::ahci::hba_port*)+0x26>
  20731d:	b8 ff ff ff ff       	mov    eax,0xffffffff
  207322:	c9                   	leave  
  207323:	c3                   	ret    

0000000000207324 <io::disk::ahci::initialize(io::pci::device_header*)>:
  207324:	55                   	push   rbp
  207325:	48 89 e5             	mov    rbp,rsp
  207328:	48 83 ec 20          	sub    rsp,0x20
  20732c:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  207330:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  207334:	48 89 05 a5 8e 00 00 	mov    QWORD PTR [rip+0x8ea5],rax        # 2101e0 <io::disk::ahci::ahci_controller>
  20733b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20733f:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
  207342:	89 c0                	mov    eax,eax
  207344:	48 89 05 9d 8e 00 00 	mov    QWORD PTR [rip+0x8e9d],rax        # 2101e8 <io::disk::ahci::abar>
  20734b:	48 8b 0d 96 8e 00 00 	mov    rcx,QWORD PTR [rip+0x8e96]        # 2101e8 <io::disk::ahci::abar>
  207352:	48 8b 05 8f 8e 00 00 	mov    rax,QWORD PTR [rip+0x8e8f]        # 2101e8 <io::disk::ahci::abar>
  207359:	ba 00 00 00 00       	mov    edx,0x0
  20735e:	48 89 ce             	mov    rsi,rcx
  207361:	48 89 c7             	mov    rdi,rax
  207364:	e8 e5 bc ff ff       	call   20304e <memory::paging::map_memory(void*, void*, bool)>
  207369:	e8 c7 00 00 00       	call   207435 <io::disk::ahci::probe_ports()>
  20736e:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  207375:	0f b6 05 84 8f 00 00 	movzx  eax,BYTE PTR [rip+0x8f84]        # 210300 <io::disk::ahci::usable_ports>
  20737c:	0f b6 c0             	movzx  eax,al
  20737f:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
  207382:	7d 13                	jge    207397 <io::disk::ahci::initialize(io::pci::device_header*)+0x73>
  207384:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207387:	48 98                	cdqe   
  207389:	48 89 c7             	mov    rdi,rax
  20738c:	e8 bd 01 00 00       	call   20754e <io::disk::ahci::configure_port(unsigned long)>
  207391:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  207395:	eb de                	jmp    207375 <io::disk::ahci::initialize(io::pci::device_header*)+0x51>
  207397:	90                   	nop
  207398:	c9                   	leave  
  207399:	c3                   	ret    

000000000020739a <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)>:
  20739a:	55                   	push   rbp
  20739b:	48 89 e5             	mov    rbp,rsp
  20739e:	48 83 ec 18          	sub    rsp,0x18
  2073a2:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2073a6:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2073aa:	8b 40 28             	mov    eax,DWORD PTR [rax+0x28]
  2073ad:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  2073b0:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2073b3:	c1 e8 08             	shr    eax,0x8
  2073b6:	83 e0 07             	and    eax,0x7
  2073b9:	88 45 fb             	mov    BYTE PTR [rbp-0x5],al
  2073bc:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  2073bf:	83 e0 07             	and    eax,0x7
  2073c2:	88 45 fa             	mov    BYTE PTR [rbp-0x6],al
  2073c5:	80 7d fa 03          	cmp    BYTE PTR [rbp-0x6],0x3
  2073c9:	74 07                	je     2073d2 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x38>
  2073cb:	b8 00 00 00 00       	mov    eax,0x0
  2073d0:	eb 61                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  2073d2:	80 7d fb 01          	cmp    BYTE PTR [rbp-0x5],0x1
  2073d6:	74 07                	je     2073df <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x45>
  2073d8:	b8 00 00 00 00       	mov    eax,0x0
  2073dd:	eb 54                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  2073df:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2073e3:	8b 40 24             	mov    eax,DWORD PTR [rax+0x24]
  2073e6:	3d 01 01 14 eb       	cmp    eax,0xeb140101
  2073eb:	74 33                	je     207420 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x86>
  2073ed:	3d 01 01 14 eb       	cmp    eax,0xeb140101
  2073f2:	77 3a                	ja     20742e <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x94>
  2073f4:	3d 01 01 3c c3       	cmp    eax,0xc33c0101
  2073f9:	74 1e                	je     207419 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x7f>
  2073fb:	3d 01 01 3c c3       	cmp    eax,0xc33c0101
  207400:	77 2c                	ja     20742e <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x94>
  207402:	3d 01 01 00 00       	cmp    eax,0x101
  207407:	74 09                	je     207412 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x78>
  207409:	3d 01 01 69 96       	cmp    eax,0x96690101
  20740e:	74 17                	je     207427 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x8d>
  207410:	eb 1c                	jmp    20742e <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x94>
  207412:	b8 01 00 00 00       	mov    eax,0x1
  207417:	eb 1a                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  207419:	b8 02 00 00 00       	mov    eax,0x2
  20741e:	eb 13                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  207420:	b8 04 00 00 00       	mov    eax,0x4
  207425:	eb 0c                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  207427:	b8 03 00 00 00       	mov    eax,0x3
  20742c:	eb 05                	jmp    207433 <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)+0x99>
  20742e:	b8 00 00 00 00       	mov    eax,0x0
  207433:	c9                   	leave  
  207434:	c3                   	ret    

0000000000207435 <io::disk::ahci::probe_ports()>:
  207435:	55                   	push   rbp
  207436:	48 89 e5             	mov    rbp,rsp
  207439:	53                   	push   rbx
  20743a:	48 83 ec 18          	sub    rsp,0x18
  20743e:	48 8b 05 a3 8d 00 00 	mov    rax,QWORD PTR [rip+0x8da3]        # 2101e8 <io::disk::ahci::abar>
  207445:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
  207448:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  20744b:	c7 45 ec 00 00 00 00 	mov    DWORD PTR [rbp-0x14],0x0
  207452:	83 7d ec 1f          	cmp    DWORD PTR [rbp-0x14],0x1f
  207456:	0f 8f eb 00 00 00    	jg     207547 <io::disk::ahci::probe_ports()+0x112>
  20745c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20745f:	ba 01 00 00 00       	mov    edx,0x1
  207464:	89 c1                	mov    ecx,eax
  207466:	d3 e2                	shl    edx,cl
  207468:	89 d0                	mov    eax,edx
  20746a:	23 45 e8             	and    eax,DWORD PTR [rbp-0x18]
  20746d:	85 c0                	test   eax,eax
  20746f:	0f 84 c9 00 00 00    	je     20753e <io::disk::ahci::probe_ports()+0x109>
  207475:	48 8b 15 6c 8d 00 00 	mov    rdx,QWORD PTR [rip+0x8d6c]        # 2101e8 <io::disk::ahci::abar>
  20747c:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  20747f:	48 98                	cdqe   
  207481:	48 83 c0 02          	add    rax,0x2
  207485:	48 c1 e0 07          	shl    rax,0x7
  207489:	48 01 d0             	add    rax,rdx
  20748c:	48 89 c7             	mov    rdi,rax
  20748f:	e8 06 ff ff ff       	call   20739a <io::disk::ahci::get_port_type(io::disk::ahci::hba_port*)>
  207494:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
  207497:	83 7d e4 00          	cmp    DWORD PTR [rbp-0x1c],0x0
  20749b:	0f 84 9d 00 00 00    	je     20753e <io::disk::ahci::probe_ports()+0x109>
  2074a1:	0f b6 05 58 8e 00 00 	movzx  eax,BYTE PTR [rip+0x8e58]        # 210300 <io::disk::ahci::usable_ports>
  2074a8:	0f b6 d8             	movzx  ebx,al
  2074ab:	bf 20 00 00 00       	mov    edi,0x20
  2074b0:	e8 a0 af ff ff       	call   202455 <memory::heap::malloc(unsigned long)>
  2074b5:	48 63 d3             	movsxd rdx,ebx
  2074b8:	48 8d 0c d5 00 00 00 	lea    rcx,[rdx*8+0x0]
  2074bf:	00 
  2074c0:	48 8d 15 39 8d 00 00 	lea    rdx,[rip+0x8d39]        # 210200 <io::disk::ahci::ports>
  2074c7:	48 89 04 11          	mov    QWORD PTR [rcx+rdx*1],rax
  2074cb:	48 8b 0d 16 8d 00 00 	mov    rcx,QWORD PTR [rip+0x8d16]        # 2101e8 <io::disk::ahci::abar>
  2074d2:	0f b6 05 27 8e 00 00 	movzx  eax,BYTE PTR [rip+0x8e27]        # 210300 <io::disk::ahci::usable_ports>
  2074d9:	0f b6 c0             	movzx  eax,al
  2074dc:	48 98                	cdqe   
  2074de:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2074e5:	00 
  2074e6:	48 8d 05 13 8d 00 00 	lea    rax,[rip+0x8d13]        # 210200 <io::disk::ahci::ports>
  2074ed:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  2074f1:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
  2074f4:	48 63 d2             	movsxd rdx,edx
  2074f7:	48 83 c2 02          	add    rdx,0x2
  2074fb:	48 c1 e2 07          	shl    rdx,0x7
  2074ff:	48 01 ca             	add    rdx,rcx
  207502:	48 89 10             	mov    QWORD PTR [rax],rdx
  207505:	0f b6 05 f4 8d 00 00 	movzx  eax,BYTE PTR [rip+0x8df4]        # 210300 <io::disk::ahci::usable_ports>
  20750c:	0f b6 c0             	movzx  eax,al
  20750f:	48 98                	cdqe   
  207511:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207518:	00 
  207519:	48 8d 05 e0 8c 00 00 	lea    rax,[rip+0x8ce0]        # 210200 <io::disk::ahci::ports>
  207520:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  207524:	0f b6 15 d5 8d 00 00 	movzx  edx,BYTE PTR [rip+0x8dd5]        # 210300 <io::disk::ahci::usable_ports>
  20752b:	88 50 18             	mov    BYTE PTR [rax+0x18],dl
  20752e:	0f b6 05 cb 8d 00 00 	movzx  eax,BYTE PTR [rip+0x8dcb]        # 210300 <io::disk::ahci::usable_ports>
  207535:	83 c0 01             	add    eax,0x1
  207538:	88 05 c2 8d 00 00    	mov    BYTE PTR [rip+0x8dc2],al        # 210300 <io::disk::ahci::usable_ports>
  20753e:	83 45 ec 01          	add    DWORD PTR [rbp-0x14],0x1
  207542:	e9 0b ff ff ff       	jmp    207452 <io::disk::ahci::probe_ports()+0x1d>
  207547:	90                   	nop
  207548:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  20754c:	c9                   	leave  
  20754d:	c3                   	ret    

000000000020754e <io::disk::ahci::configure_port(unsigned long)>:
  20754e:	55                   	push   rbp
  20754f:	48 89 e5             	mov    rbp,rsp
  207552:	48 83 ec 50          	sub    rsp,0x50
  207556:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
  20755a:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  20755e:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207565:	00 
  207566:	48 8d 05 93 8c 00 00 	lea    rax,[rip+0x8c93]        # 210200 <io::disk::ahci::ports>
  20756d:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  207571:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  207575:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  207579:	48 89 c7             	mov    rdi,rax
  20757c:	e8 bb 01 00 00       	call   20773c <io::disk::ahci::command_stop(unsigned long)>
  207581:	e8 43 b7 ff ff       	call   202cc9 <request_page>
  207586:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20758a:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20758e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207592:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207595:	89 10                	mov    DWORD PTR [rax],edx
  207597:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20759b:	48 c1 e8 20          	shr    rax,0x20
  20759f:	48 89 c2             	mov    rdx,rax
  2075a2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2075a6:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2075a9:	89 50 04             	mov    DWORD PTR [rax+0x4],edx
  2075ac:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2075b0:	ba 00 04 00 00       	mov    edx,0x400
  2075b5:	be 00 00 00 00       	mov    esi,0x0
  2075ba:	48 89 c7             	mov    rdi,rax
  2075bd:	e8 c8 b9 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2075c2:	e8 02 b7 ff ff       	call   202cc9 <request_page>
  2075c7:	48 89 45 e0          	mov    QWORD PTR [rbp-0x20],rax
  2075cb:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
  2075cf:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2075d3:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2075d6:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  2075d9:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2075dd:	48 c1 e8 20          	shr    rax,0x20
  2075e1:	48 89 c2             	mov    rdx,rax
  2075e4:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2075e8:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2075eb:	89 50 0c             	mov    DWORD PTR [rax+0xc],edx
  2075ee:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  2075f2:	ba 00 01 00 00       	mov    edx,0x100
  2075f7:	be 00 00 00 00       	mov    esi,0x0
  2075fc:	48 89 c7             	mov    rdi,rax
  2075ff:	e8 86 b9 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  207604:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207608:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20760b:	8b 00                	mov    eax,DWORD PTR [rax]
  20760d:	89 c0                	mov    eax,eax
  20760f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  207613:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  20761a:	83 7d fc 1f          	cmp    DWORD PTR [rbp-0x4],0x1f
  20761e:	0f 8f 9c 00 00 00    	jg     2076c0 <io::disk::ahci::configure_port(unsigned long)+0x172>
  207624:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207627:	48 98                	cdqe   
  207629:	48 c1 e0 05          	shl    rax,0x5
  20762d:	48 89 c2             	mov    rdx,rax
  207630:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207634:	48 01 d0             	add    rax,rdx
  207637:	66 c7 40 02 08 00    	mov    WORD PTR [rax+0x2],0x8
  20763d:	e8 87 b6 ff ff       	call   202cc9 <request_page>
  207642:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  207646:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207649:	c1 e0 08             	shl    eax,0x8
  20764c:	48 63 d0             	movsxd rdx,eax
  20764f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207653:	48 01 d0             	add    rax,rdx
  207656:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  20765a:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  20765d:	48 98                	cdqe   
  20765f:	48 c1 e0 05          	shl    rax,0x5
  207663:	48 89 c2             	mov    rdx,rax
  207666:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20766a:	48 01 d0             	add    rax,rdx
  20766d:	48 8b 55 c8          	mov    rdx,QWORD PTR [rbp-0x38]
  207671:	89 50 08             	mov    DWORD PTR [rax+0x8],edx
  207674:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207677:	48 98                	cdqe   
  207679:	48 c1 e0 05          	shl    rax,0x5
  20767d:	48 89 c2             	mov    rdx,rax
  207680:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207684:	48 01 d0             	add    rax,rdx
  207687:	8b 55 fc             	mov    edx,DWORD PTR [rbp-0x4]
  20768a:	48 63 d2             	movsxd rdx,edx
  20768d:	48 89 d1             	mov    rcx,rdx
  207690:	48 c1 e1 05          	shl    rcx,0x5
  207694:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
  207698:	48 01 ca             	add    rdx,rcx
  20769b:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
  20769e:	89 42 0c             	mov    DWORD PTR [rdx+0xc],eax
  2076a1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2076a5:	ba 00 01 00 00       	mov    edx,0x100
  2076aa:	be 00 00 00 00       	mov    esi,0x0
  2076af:	48 89 c7             	mov    rdi,rax
  2076b2:	e8 d3 b8 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2076b7:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  2076bb:	e9 5a ff ff ff       	jmp    20761a <io::disk::ahci::configure_port(unsigned long)+0xcc>
  2076c0:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  2076c4:	48 89 c7             	mov    rdi,rax
  2076c7:	e8 03 00 00 00       	call   2076cf <io::disk::ahci::command_start(unsigned long)>
  2076cc:	90                   	nop
  2076cd:	c9                   	leave  
  2076ce:	c3                   	ret    

00000000002076cf <io::disk::ahci::command_start(unsigned long)>:
  2076cf:	55                   	push   rbp
  2076d0:	48 89 e5             	mov    rbp,rsp
  2076d3:	48 83 ec 18          	sub    rsp,0x18
  2076d7:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2076db:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2076df:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2076e6:	00 
  2076e7:	48 8d 05 12 8b 00 00 	lea    rax,[rip+0x8b12]        # 210200 <io::disk::ahci::ports>
  2076ee:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  2076f2:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2076f6:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2076fa:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2076fd:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
  207700:	25 00 80 00 00       	and    eax,0x8000
  207705:	85 c0                	test   eax,eax
  207707:	74 02                	je     20770b <io::disk::ahci::command_start(unsigned long)+0x3c>
  207709:	eb eb                	jmp    2076f6 <io::disk::ahci::command_start(unsigned long)+0x27>
  20770b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20770f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207712:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
  207715:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207719:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20771c:	83 ca 10             	or     edx,0x10
  20771f:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  207722:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207726:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207729:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
  20772c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207730:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207733:	83 ca 01             	or     edx,0x1
  207736:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  207739:	90                   	nop
  20773a:	c9                   	leave  
  20773b:	c3                   	ret    

000000000020773c <io::disk::ahci::command_stop(unsigned long)>:
  20773c:	55                   	push   rbp
  20773d:	48 89 e5             	mov    rbp,rsp
  207740:	48 83 ec 18          	sub    rsp,0x18
  207744:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  207748:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20774c:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207753:	00 
  207754:	48 8d 05 a5 8a 00 00 	lea    rax,[rip+0x8aa5]        # 210200 <io::disk::ahci::ports>
  20775b:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  20775f:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  207763:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207767:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20776a:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
  20776d:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207771:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207774:	83 e2 ef             	and    edx,0xffffffef
  207777:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  20777a:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20777e:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207781:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
  207784:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207788:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20778b:	83 e2 fe             	and    edx,0xfffffffe
  20778e:	89 50 18             	mov    DWORD PTR [rax+0x18],edx
  207791:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207795:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207798:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
  20779b:	25 00 40 00 00       	and    eax,0x4000
  2077a0:	85 c0                	test   eax,eax
  2077a2:	75 15                	jne    2077b9 <io::disk::ahci::command_stop(unsigned long)+0x7d>
  2077a4:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2077a8:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2077ab:	8b 40 18             	mov    eax,DWORD PTR [rax+0x18]
  2077ae:	25 00 80 00 00       	and    eax,0x8000
  2077b3:	85 c0                	test   eax,eax
  2077b5:	74 05                	je     2077bc <io::disk::ahci::command_stop(unsigned long)+0x80>
  2077b7:	eb 01                	jmp    2077ba <io::disk::ahci::command_stop(unsigned long)+0x7e>
  2077b9:	90                   	nop
  2077ba:	eb d5                	jmp    207791 <io::disk::ahci::command_stop(unsigned long)+0x55>
  2077bc:	90                   	nop
  2077bd:	90                   	nop
  2077be:	c9                   	leave  
  2077bf:	c3                   	ret    

00000000002077c0 <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)>:
  2077c0:	55                   	push   rbp
  2077c1:	48 89 e5             	mov    rbp,rsp
  2077c4:	48 83 ec 60          	sub    rsp,0x60
  2077c8:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
  2077cc:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
  2077d0:	89 d0                	mov    eax,edx
  2077d2:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
  2077d6:	66 89 45 ac          	mov    WORD PTR [rbp-0x54],ax
  2077da:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  2077de:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  2077e5:	00 
  2077e6:	48 8d 05 13 8a 00 00 	lea    rax,[rip+0x8a13]        # 210200 <io::disk::ahci::ports>
  2077ed:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  2077f1:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  2077f5:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2077f9:	48 8b 00             	mov    rax,QWORD PTR [rax]
  2077fc:	48 89 c7             	mov    rdi,rax
  2077ff:	e8 d5 fa ff ff       	call   2072d9 <$find_command_slot(io::disk::ahci::hba_port*)>
  207804:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  207807:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
  20780b:	79 0a                	jns    207817 <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x57>
  20780d:	b8 03 00 00 00       	mov    eax,0x3
  207812:	e9 84 02 00 00       	jmp    207a9b <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207817:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  20781b:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  20781e:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  207822:	48 c1 e8 20          	shr    rax,0x20
  207826:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
  207829:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20782d:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207830:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
  207837:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20783b:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20783e:	8b 00                	mov    eax,DWORD PTR [rax]
  207840:	89 c0                	mov    eax,eax
  207842:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  207846:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  20784a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  20784d:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  207850:	89 c0                	mov    eax,eax
  207852:	48 c1 e0 20          	shl    rax,0x20
  207856:	48 89 c2             	mov    rdx,rax
  207859:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20785d:	48 09 d0             	or     rax,rdx
  207860:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  207864:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207867:	48 98                	cdqe   
  207869:	48 c1 e0 05          	shl    rax,0x5
  20786d:	48 01 45 d8          	add    QWORD PTR [rbp-0x28],rax
  207871:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207875:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  207878:	83 e2 e0             	and    edx,0xffffffe0
  20787b:	83 ca 05             	or     edx,0x5
  20787e:	88 10                	mov    BYTE PTR [rax],dl
  207880:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207884:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  207887:	83 e2 bf             	and    edx,0xffffffbf
  20788a:	88 10                	mov    BYTE PTR [rax],dl
  20788c:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207890:	66 c7 40 02 01 00    	mov    WORD PTR [rax+0x2],0x1
  207896:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  20789a:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  20789d:	89 c0                	mov    eax,eax
  20789f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  2078a3:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  2078a7:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
  2078aa:	89 c0                	mov    eax,eax
  2078ac:	48 c1 e0 20          	shl    rax,0x20
  2078b0:	48 89 c2             	mov    rdx,rax
  2078b3:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  2078b7:	48 09 d0             	or     rax,rdx
  2078ba:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  2078be:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  2078c2:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  2078c6:	0f b7 c0             	movzx  eax,ax
  2078c9:	83 e8 01             	sub    eax,0x1
  2078cc:	48 98                	cdqe   
  2078ce:	48 83 c0 09          	add    rax,0x9
  2078d2:	48 c1 e0 04          	shl    rax,0x4
  2078d6:	48 89 c2             	mov    rdx,rax
  2078d9:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  2078dd:	be 00 00 00 00       	mov    esi,0x0
  2078e2:	48 89 c7             	mov    rdi,rax
  2078e5:	e8 a0 b6 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  2078ea:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  2078ee:	89 c2                	mov    edx,eax
  2078f0:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  2078f4:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
  2078fa:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  2078fe:	48 c1 e8 20          	shr    rax,0x20
  207902:	89 c2                	mov    edx,eax
  207904:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207908:	89 90 84 00 00 00    	mov    DWORD PTR [rax+0x84],edx
  20790e:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  207912:	c1 e0 09             	shl    eax,0x9
  207915:	83 e8 01             	sub    eax,0x1
  207918:	25 ff ff 3f 00       	and    eax,0x3fffff
  20791d:	89 c2                	mov    edx,eax
  20791f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207923:	89 d1                	mov    ecx,edx
  207925:	81 e1 ff ff 3f 00    	and    ecx,0x3fffff
  20792b:	8b 90 8c 00 00 00    	mov    edx,DWORD PTR [rax+0x8c]
  207931:	81 e2 00 00 c0 ff    	and    edx,0xffc00000
  207937:	09 ca                	or     edx,ecx
  207939:	89 90 8c 00 00 00    	mov    DWORD PTR [rax+0x8c],edx
  20793f:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207943:	0f b6 90 8f 00 00 00 	movzx  edx,BYTE PTR [rax+0x8f]
  20794a:	83 ca 80             	or     edx,0xffffff80
  20794d:	88 90 8f 00 00 00    	mov    BYTE PTR [rax+0x8f],dl
  207953:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207957:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  20795b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  20795f:	c6 00 27             	mov    BYTE PTR [rax],0x27
  207962:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207966:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
  20796a:	83 ca 80             	or     edx,0xffffff80
  20796d:	88 50 01             	mov    BYTE PTR [rax+0x1],dl
  207970:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207974:	c6 40 02 25          	mov    BYTE PTR [rax+0x2],0x25
  207978:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  20797b:	89 c2                	mov    edx,eax
  20797d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207981:	88 50 04             	mov    BYTE PTR [rax+0x4],dl
  207984:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207987:	0f b6 c0             	movzx  eax,al
  20798a:	c1 f8 08             	sar    eax,0x8
  20798d:	89 c2                	mov    edx,eax
  20798f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207993:	88 50 05             	mov    BYTE PTR [rax+0x5],dl
  207996:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207999:	0f b6 c0             	movzx  eax,al
  20799c:	c1 f8 10             	sar    eax,0x10
  20799f:	89 c2                	mov    edx,eax
  2079a1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079a5:	88 50 06             	mov    BYTE PTR [rax+0x6],dl
  2079a8:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  2079ab:	0f b6 c0             	movzx  eax,al
  2079ae:	c1 f8 18             	sar    eax,0x18
  2079b1:	89 c2                	mov    edx,eax
  2079b3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079b7:	88 50 08             	mov    BYTE PTR [rax+0x8],dl
  2079ba:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  2079bd:	89 c2                	mov    edx,eax
  2079bf:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079c3:	88 50 09             	mov    BYTE PTR [rax+0x9],dl
  2079c6:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  2079c9:	0f b6 c0             	movzx  eax,al
  2079cc:	c1 f8 08             	sar    eax,0x8
  2079cf:	89 c2                	mov    edx,eax
  2079d1:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079d5:	88 50 0a             	mov    BYTE PTR [rax+0xa],dl
  2079d8:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079dc:	c6 40 07 40          	mov    BYTE PTR [rax+0x7],0x40
  2079e0:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  2079e4:	89 c2                	mov    edx,eax
  2079e6:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079ea:	88 50 0c             	mov    BYTE PTR [rax+0xc],dl
  2079ed:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  2079f1:	66 c1 e8 08          	shr    ax,0x8
  2079f5:	89 c2                	mov    edx,eax
  2079f7:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  2079fb:	88 50 0d             	mov    BYTE PTR [rax+0xd],dl
  2079fe:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  207a05:	00 
  207a06:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207a0a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207a0d:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
  207a10:	25 88 00 00 00       	and    eax,0x88
  207a15:	85 c0                	test   eax,eax
  207a17:	74 11                	je     207a2a <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x26a>
  207a19:	48 81 7d f8 3f 42 0f 	cmp    QWORD PTR [rbp-0x8],0xf423f
  207a20:	00 
  207a21:	77 07                	ja     207a2a <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x26a>
  207a23:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  207a28:	eb dc                	jmp    207a06 <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x246>
  207a2a:	48 81 7d f8 3f 42 0f 	cmp    QWORD PTR [rbp-0x8],0xf423f
  207a31:	00 
  207a32:	76 07                	jbe    207a3b <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x27b>
  207a34:	b8 01 00 00 00       	mov    eax,0x1
  207a39:	eb 60                	jmp    207a9b <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207a3b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207a3f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207a42:	8b 50 38             	mov    edx,DWORD PTR [rax+0x38]
  207a45:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207a48:	be 01 00 00 00       	mov    esi,0x1
  207a4d:	89 c1                	mov    ecx,eax
  207a4f:	d3 e6                	shl    esi,cl
  207a51:	89 f0                	mov    eax,esi
  207a53:	89 c1                	mov    ecx,eax
  207a55:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207a59:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207a5c:	09 ca                	or     edx,ecx
  207a5e:	89 50 38             	mov    DWORD PTR [rax+0x38],edx
  207a61:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207a65:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207a68:	8b 50 38             	mov    edx,DWORD PTR [rax+0x38]
  207a6b:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207a6e:	89 c1                	mov    ecx,eax
  207a70:	d3 ea                	shr    edx,cl
  207a72:	89 d0                	mov    eax,edx
  207a74:	83 e0 01             	and    eax,0x1
  207a77:	85 c0                	test   eax,eax
  207a79:	74 1a                	je     207a95 <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x2d5>
  207a7b:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207a7f:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207a82:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  207a85:	25 00 00 00 40       	and    eax,0x40000000
  207a8a:	85 c0                	test   eax,eax
  207a8c:	74 d3                	je     207a61 <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x2a1>
  207a8e:	b8 02 00 00 00       	mov    eax,0x2
  207a93:	eb 06                	jmp    207a9b <io::disk::ahci::command_read(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207a95:	90                   	nop
  207a96:	b8 00 00 00 00       	mov    eax,0x0
  207a9b:	c9                   	leave  
  207a9c:	c3                   	ret    

0000000000207a9d <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)>:
  207a9d:	55                   	push   rbp
  207a9e:	48 89 e5             	mov    rbp,rsp
  207aa1:	48 83 ec 60          	sub    rsp,0x60
  207aa5:	48 89 7d b8          	mov    QWORD PTR [rbp-0x48],rdi
  207aa9:	48 89 75 b0          	mov    QWORD PTR [rbp-0x50],rsi
  207aad:	89 d0                	mov    eax,edx
  207aaf:	48 89 4d a0          	mov    QWORD PTR [rbp-0x60],rcx
  207ab3:	66 89 45 ac          	mov    WORD PTR [rbp-0x54],ax
  207ab7:	48 8b 45 b8          	mov    rax,QWORD PTR [rbp-0x48]
  207abb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207ac2:	00 
  207ac3:	48 8d 05 36 87 00 00 	lea    rax,[rip+0x8736]        # 210200 <io::disk::ahci::ports>
  207aca:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  207ace:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  207ad2:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207ad6:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207ad9:	48 89 c7             	mov    rdi,rax
  207adc:	e8 f8 f7 ff ff       	call   2072d9 <$find_command_slot(io::disk::ahci::hba_port*)>
  207ae1:	89 45 ec             	mov    DWORD PTR [rbp-0x14],eax
  207ae4:	83 7d ec 00          	cmp    DWORD PTR [rbp-0x14],0x0
  207ae8:	79 0a                	jns    207af4 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x57>
  207aea:	b8 03 00 00 00       	mov    eax,0x3
  207aef:	e9 84 02 00 00       	jmp    207d78 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207af4:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  207af8:	89 45 e8             	mov    DWORD PTR [rbp-0x18],eax
  207afb:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
  207aff:	48 c1 e8 20          	shr    rax,0x20
  207b03:	89 45 e4             	mov    DWORD PTR [rbp-0x1c],eax
  207b06:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207b0a:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207b0d:	c7 40 10 ff ff ff ff 	mov    DWORD PTR [rax+0x10],0xffffffff
  207b14:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207b18:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207b1b:	8b 00                	mov    eax,DWORD PTR [rax]
  207b1d:	89 c0                	mov    eax,eax
  207b1f:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  207b23:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207b27:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207b2a:	8b 40 04             	mov    eax,DWORD PTR [rax+0x4]
  207b2d:	89 c0                	mov    eax,eax
  207b2f:	48 c1 e0 20          	shl    rax,0x20
  207b33:	48 89 c2             	mov    rdx,rax
  207b36:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b3a:	48 09 d0             	or     rax,rdx
  207b3d:	48 89 45 d8          	mov    QWORD PTR [rbp-0x28],rax
  207b41:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207b44:	48 98                	cdqe   
  207b46:	48 c1 e0 05          	shl    rax,0x5
  207b4a:	48 01 45 d8          	add    QWORD PTR [rbp-0x28],rax
  207b4e:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b52:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  207b55:	83 e2 e0             	and    edx,0xffffffe0
  207b58:	83 ca 05             	or     edx,0x5
  207b5b:	88 10                	mov    BYTE PTR [rax],dl
  207b5d:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b61:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  207b64:	83 ca 40             	or     edx,0x40
  207b67:	88 10                	mov    BYTE PTR [rax],dl
  207b69:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b6d:	66 c7 40 02 01 00    	mov    WORD PTR [rax+0x2],0x1
  207b73:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b77:	8b 40 08             	mov    eax,DWORD PTR [rax+0x8]
  207b7a:	89 c0                	mov    eax,eax
  207b7c:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  207b80:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b84:	8b 40 0c             	mov    eax,DWORD PTR [rax+0xc]
  207b87:	89 c0                	mov    eax,eax
  207b89:	48 c1 e0 20          	shl    rax,0x20
  207b8d:	48 89 c2             	mov    rdx,rax
  207b90:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207b94:	48 09 d0             	or     rax,rdx
  207b97:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
  207b9b:	48 8b 45 d8          	mov    rax,QWORD PTR [rbp-0x28]
  207b9f:	0f b7 40 02          	movzx  eax,WORD PTR [rax+0x2]
  207ba3:	0f b7 c0             	movzx  eax,ax
  207ba6:	83 e8 01             	sub    eax,0x1
  207ba9:	48 98                	cdqe   
  207bab:	48 83 c0 09          	add    rax,0x9
  207baf:	48 c1 e0 04          	shl    rax,0x4
  207bb3:	48 89 c2             	mov    rdx,rax
  207bb6:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207bba:	be 00 00 00 00       	mov    esi,0x0
  207bbf:	48 89 c7             	mov    rdi,rax
  207bc2:	e8 c3 b3 ff ff       	call   202f8a <memory::operations::memset(void*, unsigned char, unsigned long)>
  207bc7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  207bcb:	89 c2                	mov    edx,eax
  207bcd:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207bd1:	89 90 80 00 00 00    	mov    DWORD PTR [rax+0x80],edx
  207bd7:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
  207bdb:	48 c1 e8 20          	shr    rax,0x20
  207bdf:	89 c2                	mov    edx,eax
  207be1:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207be5:	89 90 84 00 00 00    	mov    DWORD PTR [rax+0x84],edx
  207beb:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  207bef:	c1 e0 09             	shl    eax,0x9
  207bf2:	83 e8 01             	sub    eax,0x1
  207bf5:	25 ff ff 3f 00       	and    eax,0x3fffff
  207bfa:	89 c2                	mov    edx,eax
  207bfc:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207c00:	89 d1                	mov    ecx,edx
  207c02:	81 e1 ff ff 3f 00    	and    ecx,0x3fffff
  207c08:	8b 90 8c 00 00 00    	mov    edx,DWORD PTR [rax+0x8c]
  207c0e:	81 e2 00 00 c0 ff    	and    edx,0xffc00000
  207c14:	09 ca                	or     edx,ecx
  207c16:	89 90 8c 00 00 00    	mov    DWORD PTR [rax+0x8c],edx
  207c1c:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207c20:	0f b6 90 8f 00 00 00 	movzx  edx,BYTE PTR [rax+0x8f]
  207c27:	83 ca 80             	or     edx,0xffffff80
  207c2a:	88 90 8f 00 00 00    	mov    BYTE PTR [rax+0x8f],dl
  207c30:	48 8b 45 d0          	mov    rax,QWORD PTR [rbp-0x30]
  207c34:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
  207c38:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c3c:	c6 00 27             	mov    BYTE PTR [rax],0x27
  207c3f:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c43:	0f b6 50 01          	movzx  edx,BYTE PTR [rax+0x1]
  207c47:	83 ca 80             	or     edx,0xffffff80
  207c4a:	88 50 01             	mov    BYTE PTR [rax+0x1],dl
  207c4d:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c51:	c6 40 02 35          	mov    BYTE PTR [rax+0x2],0x35
  207c55:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207c58:	89 c2                	mov    edx,eax
  207c5a:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c5e:	88 50 04             	mov    BYTE PTR [rax+0x4],dl
  207c61:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207c64:	0f b6 c0             	movzx  eax,al
  207c67:	c1 f8 08             	sar    eax,0x8
  207c6a:	89 c2                	mov    edx,eax
  207c6c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c70:	88 50 05             	mov    BYTE PTR [rax+0x5],dl
  207c73:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207c76:	0f b6 c0             	movzx  eax,al
  207c79:	c1 f8 10             	sar    eax,0x10
  207c7c:	89 c2                	mov    edx,eax
  207c7e:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c82:	88 50 06             	mov    BYTE PTR [rax+0x6],dl
  207c85:	8b 45 e8             	mov    eax,DWORD PTR [rbp-0x18]
  207c88:	0f b6 c0             	movzx  eax,al
  207c8b:	c1 f8 18             	sar    eax,0x18
  207c8e:	89 c2                	mov    edx,eax
  207c90:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207c94:	88 50 08             	mov    BYTE PTR [rax+0x8],dl
  207c97:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  207c9a:	89 c2                	mov    edx,eax
  207c9c:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207ca0:	88 50 09             	mov    BYTE PTR [rax+0x9],dl
  207ca3:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  207ca6:	0f b6 c0             	movzx  eax,al
  207ca9:	c1 f8 08             	sar    eax,0x8
  207cac:	89 c2                	mov    edx,eax
  207cae:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207cb2:	88 50 0a             	mov    BYTE PTR [rax+0xa],dl
  207cb5:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207cb9:	c6 40 07 40          	mov    BYTE PTR [rax+0x7],0x40
  207cbd:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  207cc1:	89 c2                	mov    edx,eax
  207cc3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207cc7:	88 50 0c             	mov    BYTE PTR [rax+0xc],dl
  207cca:	0f b7 45 ac          	movzx  eax,WORD PTR [rbp-0x54]
  207cce:	66 c1 e8 08          	shr    ax,0x8
  207cd2:	89 c2                	mov    edx,eax
  207cd4:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
  207cd8:	88 50 0d             	mov    BYTE PTR [rax+0xd],dl
  207cdb:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  207ce2:	00 
  207ce3:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207ce7:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207cea:	8b 40 20             	mov    eax,DWORD PTR [rax+0x20]
  207ced:	25 88 00 00 00       	and    eax,0x88
  207cf2:	85 c0                	test   eax,eax
  207cf4:	74 11                	je     207d07 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x26a>
  207cf6:	48 81 7d f8 3f 42 0f 	cmp    QWORD PTR [rbp-0x8],0xf423f
  207cfd:	00 
  207cfe:	77 07                	ja     207d07 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x26a>
  207d00:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  207d05:	eb dc                	jmp    207ce3 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x246>
  207d07:	48 81 7d f8 3f 42 0f 	cmp    QWORD PTR [rbp-0x8],0xf423f
  207d0e:	00 
  207d0f:	76 07                	jbe    207d18 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x27b>
  207d11:	b8 01 00 00 00       	mov    eax,0x1
  207d16:	eb 60                	jmp    207d78 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207d18:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207d1c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207d1f:	8b 50 38             	mov    edx,DWORD PTR [rax+0x38]
  207d22:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207d25:	be 01 00 00 00       	mov    esi,0x1
  207d2a:	89 c1                	mov    ecx,eax
  207d2c:	d3 e6                	shl    esi,cl
  207d2e:	89 f0                	mov    eax,esi
  207d30:	89 c1                	mov    ecx,eax
  207d32:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207d36:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207d39:	09 ca                	or     edx,ecx
  207d3b:	89 50 38             	mov    DWORD PTR [rax+0x38],edx
  207d3e:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207d42:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207d45:	8b 50 38             	mov    edx,DWORD PTR [rax+0x38]
  207d48:	8b 45 ec             	mov    eax,DWORD PTR [rbp-0x14]
  207d4b:	89 c1                	mov    ecx,eax
  207d4d:	d3 ea                	shr    edx,cl
  207d4f:	89 d0                	mov    eax,edx
  207d51:	83 e0 01             	and    eax,0x1
  207d54:	85 c0                	test   eax,eax
  207d56:	74 1a                	je     207d72 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x2d5>
  207d58:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  207d5c:	48 8b 00             	mov    rax,QWORD PTR [rax]
  207d5f:	8b 40 10             	mov    eax,DWORD PTR [rax+0x10]
  207d62:	25 00 00 00 40       	and    eax,0x40000000
  207d67:	85 c0                	test   eax,eax
  207d69:	74 d3                	je     207d3e <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x2a1>
  207d6b:	b8 02 00 00 00       	mov    eax,0x2
  207d70:	eb 06                	jmp    207d78 <io::disk::ahci::command_write(unsigned long, unsigned long, unsigned short, void*)+0x2db>
  207d72:	90                   	nop
  207d73:	b8 00 00 00 00       	mov    eax,0x0
  207d78:	c9                   	leave  
  207d79:	c3                   	ret    

0000000000207d7a <io::inb(unsigned short)>:
  207d7a:	55                   	push   rbp
  207d7b:	48 89 e5             	mov    rbp,rsp
  207d7e:	48 83 ec 18          	sub    rsp,0x18
  207d82:	89 f8                	mov    eax,edi
  207d84:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
  207d88:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
  207d8c:	89 c2                	mov    edx,eax
  207d8e:	ec                   	in     al,dx
  207d8f:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  207d92:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  207d96:	c9                   	leave  
  207d97:	c3                   	ret    

0000000000207d98 <io::keyboard::keyboard_event_publisher(io::keyboard::keyboard_packet)>:
  207d98:	55                   	push   rbp
  207d99:	48 89 e5             	mov    rbp,rsp
  207d9c:	48 83 ec 20          	sub    rsp,0x20
  207da0:	66 89 7d ee          	mov    WORD PTR [rbp-0x12],di
  207da4:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  207dab:	8b 05 6f 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d6f]        # 210b20 <keyboard_subscribers>
  207db1:	39 45 fc             	cmp    DWORD PTR [rbp-0x4],eax
  207db4:	7d 26                	jge    207ddc <io::keyboard::keyboard_event_publisher(io::keyboard::keyboard_packet)+0x44>
  207db6:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207db9:	48 98                	cdqe   
  207dbb:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207dc2:	00 
  207dc3:	48 8d 05 56 85 00 00 	lea    rax,[rip+0x8556]        # 210320 <keyboard_event_subscriber>
  207dca:	48 8b 14 02          	mov    rdx,QWORD PTR [rdx+rax*1]
  207dce:	0f b7 45 ee          	movzx  eax,WORD PTR [rbp-0x12]
  207dd2:	89 c7                	mov    edi,eax
  207dd4:	ff d2                	call   rdx
  207dd6:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  207dda:	eb cf                	jmp    207dab <io::keyboard::keyboard_event_publisher(io::keyboard::keyboard_packet)+0x13>
  207ddc:	90                   	nop
  207ddd:	c9                   	leave  
  207dde:	c3                   	ret    

0000000000207ddf <io::keyboard::keyboard_event_subscribe(void (*)(io::keyboard::keyboard_packet))>:
  207ddf:	55                   	push   rbp
  207de0:	48 89 e5             	mov    rbp,rsp
  207de3:	48 83 ec 08          	sub    rsp,0x8
  207de7:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  207deb:	8b 05 2f 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d2f]        # 210b20 <keyboard_subscribers>
  207df1:	48 98                	cdqe   
  207df3:	48 8d 0c c5 00 00 00 	lea    rcx,[rax*8+0x0]
  207dfa:	00 
  207dfb:	48 8d 15 1e 85 00 00 	lea    rdx,[rip+0x851e]        # 210320 <keyboard_event_subscriber>
  207e02:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  207e06:	48 89 04 11          	mov    QWORD PTR [rcx+rdx*1],rax
  207e0a:	8b 05 10 8d 00 00    	mov    eax,DWORD PTR [rip+0x8d10]        # 210b20 <keyboard_subscribers>
  207e10:	83 c0 01             	add    eax,0x1
  207e13:	89 05 07 8d 00 00    	mov    DWORD PTR [rip+0x8d07],eax        # 210b20 <keyboard_subscribers>
  207e19:	90                   	nop
  207e1a:	c9                   	leave  
  207e1b:	c3                   	ret    

0000000000207e1c <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))>:
  207e1c:	55                   	push   rbp
  207e1d:	48 89 e5             	mov    rbp,rsp
  207e20:	48 83 ec 18          	sub    rsp,0x18
  207e24:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  207e28:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  207e2f:	c7 45 f8 00 00 00 00 	mov    DWORD PTR [rbp-0x8],0x0
  207e36:	8b 05 e4 8c 00 00    	mov    eax,DWORD PTR [rip+0x8ce4]        # 210b20 <keyboard_subscribers>
  207e3c:	39 45 f8             	cmp    DWORD PTR [rbp-0x8],eax
  207e3f:	7d 57                	jge    207e98 <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0x7c>
  207e41:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  207e44:	48 98                	cdqe   
  207e46:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207e4d:	00 
  207e4e:	48 8d 05 cb 84 00 00 	lea    rax,[rip+0x84cb]        # 210320 <keyboard_event_subscriber>
  207e55:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  207e59:	48 39 45 e8          	cmp    QWORD PTR [rbp-0x18],rax
  207e5d:	75 33                	jne    207e92 <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0x76>
  207e5f:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  207e62:	48 98                	cdqe   
  207e64:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207e6b:	00 
  207e6c:	48 8d 05 ad 84 00 00 	lea    rax,[rip+0x84ad]        # 210320 <keyboard_event_subscriber>
  207e73:	48 c7 04 02 00 00 00 	mov    QWORD PTR [rdx+rax*1],0x0
  207e7a:	00 
  207e7b:	8b 05 9f 8c 00 00    	mov    eax,DWORD PTR [rip+0x8c9f]        # 210b20 <keyboard_subscribers>
  207e81:	83 e8 01             	sub    eax,0x1
  207e84:	89 05 96 8c 00 00    	mov    DWORD PTR [rip+0x8c96],eax        # 210b20 <keyboard_subscribers>
  207e8a:	8b 45 f8             	mov    eax,DWORD PTR [rbp-0x8]
  207e8d:	89 45 fc             	mov    DWORD PTR [rbp-0x4],eax
  207e90:	eb 06                	jmp    207e98 <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0x7c>
  207e92:	83 45 f8 01          	add    DWORD PTR [rbp-0x8],0x1
  207e96:	eb 9e                	jmp    207e36 <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0x1a>
  207e98:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  207e9b:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  207e9e:	83 7d f4 3f          	cmp    DWORD PTR [rbp-0xc],0x3f
  207ea2:	7f 3a                	jg     207ede <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0xc2>
  207ea4:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  207ea7:	83 c0 01             	add    eax,0x1
  207eaa:	48 98                	cdqe   
  207eac:	48 8d 14 c5 00 00 00 	lea    rdx,[rax*8+0x0]
  207eb3:	00 
  207eb4:	48 8d 05 65 84 00 00 	lea    rax,[rip+0x8465]        # 210320 <keyboard_event_subscriber>
  207ebb:	48 8b 04 02          	mov    rax,QWORD PTR [rdx+rax*1]
  207ebf:	8b 55 f4             	mov    edx,DWORD PTR [rbp-0xc]
  207ec2:	48 63 d2             	movsxd rdx,edx
  207ec5:	48 8d 0c d5 00 00 00 	lea    rcx,[rdx*8+0x0]
  207ecc:	00 
  207ecd:	48 8d 15 4c 84 00 00 	lea    rdx,[rip+0x844c]        # 210320 <keyboard_event_subscriber>
  207ed4:	48 89 04 11          	mov    QWORD PTR [rcx+rdx*1],rax
  207ed8:	83 45 f4 01          	add    DWORD PTR [rbp-0xc],0x1
  207edc:	eb c0                	jmp    207e9e <io::keyboard::keyboard_event_unsubscribe(void (*)(io::keyboard::keyboard_packet))+0x82>
  207ede:	90                   	nop
  207edf:	c9                   	leave  
  207ee0:	c3                   	ret    

0000000000207ee1 <kbd_irq_handler>:
  207ee1:	55                   	push   rbp
  207ee2:	48 89 e5             	mov    rbp,rsp
  207ee5:	48 83 ec 10          	sub    rsp,0x10
  207ee9:	bf 60 00 00 00       	mov    edi,0x60
  207eee:	e8 87 fe ff ff       	call   207d7a <io::inb(unsigned short)>
  207ef3:	0f b6 c0             	movzx  eax,al
  207ef6:	66 89 45 fe          	mov    WORD PTR [rbp-0x2],ax
  207efa:	66 81 7d fe e0 00    	cmp    WORD PTR [rbp-0x2],0xe0
  207f00:	75 16                	jne    207f18 <kbd_irq_handler+0x37>
  207f02:	66 c1 65 fe 08       	shl    WORD PTR [rbp-0x2],0x8
  207f07:	bf 60 00 00 00       	mov    edi,0x60
  207f0c:	e8 69 fe ff ff       	call   207d7a <io::inb(unsigned short)>
  207f11:	0f b6 c0             	movzx  eax,al
  207f14:	66 09 45 fe          	or     WORD PTR [rbp-0x2],ax
  207f18:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  207f1c:	66 c1 e8 08          	shr    ax,0x8
  207f20:	66 3d e0 00          	cmp    ax,0xe0
  207f24:	75 3b                	jne    207f61 <kbd_irq_handler+0x80>
  207f26:	66 81 65 fe ff 00    	and    WORD PTR [rbp-0x2],0xff
  207f2c:	66 83 6d fe 10       	sub    WORD PTR [rbp-0x2],0x10
  207f31:	66 83 7d fe 7f       	cmp    WORD PTR [rbp-0x2],0x7f
  207f36:	77 0c                	ja     207f44 <kbd_irq_handler+0x63>
  207f38:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207f3c:	83 c8 01             	or     eax,0x1
  207f3f:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  207f42:	eb 0f                	jmp    207f53 <kbd_irq_handler+0x72>
  207f44:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207f48:	83 e0 fe             	and    eax,0xfffffffe
  207f4b:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  207f4e:	66 83 45 fe 80       	add    WORD PTR [rbp-0x2],0xff80
  207f53:	66 83 45 fe 60       	add    WORD PTR [rbp-0x2],0x60
  207f58:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  207f5c:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  207f5f:	eb 2e                	jmp    207f8f <kbd_irq_handler+0xae>
  207f61:	66 83 7d fe 7f       	cmp    WORD PTR [rbp-0x2],0x7f
  207f66:	77 13                	ja     207f7b <kbd_irq_handler+0x9a>
  207f68:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207f6c:	83 c8 01             	or     eax,0x1
  207f6f:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  207f72:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  207f76:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  207f79:	eb 14                	jmp    207f8f <kbd_irq_handler+0xae>
  207f7b:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207f7f:	83 e0 fe             	and    eax,0xfffffffe
  207f82:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  207f85:	0f b7 45 fe          	movzx  eax,WORD PTR [rbp-0x2]
  207f89:	83 c0 80             	add    eax,0xffffff80
  207f8c:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  207f8f:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207f93:	3c 1d                	cmp    al,0x1d
  207f95:	74 08                	je     207f9f <kbd_irq_handler+0xbe>
  207f97:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207f9b:	3c 8d                	cmp    al,0x8d
  207f9d:	75 0d                	jne    207fac <kbd_irq_handler+0xcb>
  207f9f:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207fa3:	83 e0 01             	and    eax,0x1
  207fa6:	88 05 79 8b 00 00    	mov    BYTE PTR [rip+0x8b79],al        # 210b25 <io::keyboard::ctrl_down>
  207fac:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207fb0:	3c 38                	cmp    al,0x38
  207fb2:	74 08                	je     207fbc <kbd_irq_handler+0xdb>
  207fb4:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207fb8:	3c a8                	cmp    al,0xa8
  207fba:	75 0d                	jne    207fc9 <kbd_irq_handler+0xe8>
  207fbc:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207fc0:	83 e0 01             	and    eax,0x1
  207fc3:	88 05 5d 8b 00 00    	mov    BYTE PTR [rip+0x8b5d],al        # 210b26 <io::keyboard::alt_down>
  207fc9:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207fcd:	3c 2a                	cmp    al,0x2a
  207fcf:	74 08                	je     207fd9 <kbd_irq_handler+0xf8>
  207fd1:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207fd5:	3c 36                	cmp    al,0x36
  207fd7:	75 0d                	jne    207fe6 <kbd_irq_handler+0x105>
  207fd9:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207fdd:	83 e0 01             	and    eax,0x1
  207fe0:	88 05 3e 8b 00 00    	mov    BYTE PTR [rip+0x8b3e],al        # 210b24 <io::keyboard::shifted>
  207fe6:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  207fea:	3c 3a                	cmp    al,0x3a
  207fec:	75 1b                	jne    208009 <kbd_irq_handler+0x128>
  207fee:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  207ff2:	83 e0 01             	and    eax,0x1
  207ff5:	84 c0                	test   al,al
  207ff7:	74 10                	je     208009 <kbd_irq_handler+0x128>
  207ff9:	0f b6 05 28 8b 00 00 	movzx  eax,BYTE PTR [rip+0x8b28]        # 210b28 <io::keyboard::caps_lock>
  208000:	83 f0 01             	xor    eax,0x1
  208003:	88 05 1f 8b 00 00    	mov    BYTE PTR [rip+0x8b1f],al        # 210b28 <io::keyboard::caps_lock>
  208009:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  20800d:	3c 45                	cmp    al,0x45
  20800f:	75 1b                	jne    20802c <kbd_irq_handler+0x14b>
  208011:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  208015:	83 e0 01             	and    eax,0x1
  208018:	84 c0                	test   al,al
  20801a:	74 10                	je     20802c <kbd_irq_handler+0x14b>
  20801c:	0f b6 05 07 8b 00 00 	movzx  eax,BYTE PTR [rip+0x8b07]        # 210b2a <io::keyboard::num_lock>
  208023:	83 f0 01             	xor    eax,0x1
  208026:	88 05 fe 8a 00 00    	mov    BYTE PTR [rip+0x8afe],al        # 210b2a <io::keyboard::num_lock>
  20802c:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  208030:	3c 46                	cmp    al,0x46
  208032:	75 1b                	jne    20804f <kbd_irq_handler+0x16e>
  208034:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  208038:	83 e0 01             	and    eax,0x1
  20803b:	84 c0                	test   al,al
  20803d:	74 10                	je     20804f <kbd_irq_handler+0x16e>
  20803f:	0f b6 05 e3 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8ae3]        # 210b29 <io::keyboard::scroll_lock>
  208046:	83 f0 01             	xor    eax,0x1
  208049:	88 05 da 8a 00 00    	mov    BYTE PTR [rip+0x8ada],al        # 210b29 <io::keyboard::scroll_lock>
  20804f:	0f b6 05 d0 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8ad0]        # 210b26 <io::keyboard::alt_down>
  208056:	83 e0 01             	and    eax,0x1
  208059:	8d 14 c5 00 00 00 00 	lea    edx,[rax*8+0x0]
  208060:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  208064:	83 e0 f7             	and    eax,0xfffffff7
  208067:	09 d0                	or     eax,edx
  208069:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  20806c:	0f b6 05 b2 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8ab2]        # 210b25 <io::keyboard::ctrl_down>
  208073:	83 e0 01             	and    eax,0x1
  208076:	8d 14 85 00 00 00 00 	lea    edx,[rax*4+0x0]
  20807d:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  208081:	83 e0 fb             	and    eax,0xfffffffb
  208084:	09 d0                	or     eax,edx
  208086:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  208089:	0f b6 05 97 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8a97]        # 210b27 <io::keyboard::fn_down>
  208090:	83 e0 01             	and    eax,0x1
  208093:	c1 e0 04             	shl    eax,0x4
  208096:	89 c2                	mov    edx,eax
  208098:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  20809c:	83 e0 ef             	and    eax,0xffffffef
  20809f:	09 d0                	or     eax,edx
  2080a1:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  2080a4:	0f b6 05 79 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8a79]        # 210b24 <io::keyboard::shifted>
  2080ab:	83 e0 01             	and    eax,0x1
  2080ae:	8d 14 00             	lea    edx,[rax+rax*1]
  2080b1:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  2080b5:	83 e0 fd             	and    eax,0xfffffffd
  2080b8:	09 d0                	or     eax,edx
  2080ba:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  2080bd:	0f b6 05 64 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8a64]        # 210b28 <io::keyboard::caps_lock>
  2080c4:	83 e0 01             	and    eax,0x1
  2080c7:	c1 e0 05             	shl    eax,0x5
  2080ca:	89 c2                	mov    edx,eax
  2080cc:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  2080d0:	83 e0 df             	and    eax,0xffffffdf
  2080d3:	09 d0                	or     eax,edx
  2080d5:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  2080d8:	0f b6 05 4b 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8a4b]        # 210b2a <io::keyboard::num_lock>
  2080df:	c1 e0 07             	shl    eax,0x7
  2080e2:	89 c2                	mov    edx,eax
  2080e4:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  2080e8:	83 e0 7f             	and    eax,0x7f
  2080eb:	09 d0                	or     eax,edx
  2080ed:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  2080f0:	0f b6 05 32 8a 00 00 	movzx  eax,BYTE PTR [rip+0x8a32]        # 210b29 <io::keyboard::scroll_lock>
  2080f7:	83 e0 01             	and    eax,0x1
  2080fa:	c1 e0 06             	shl    eax,0x6
  2080fd:	89 c2                	mov    edx,eax
  2080ff:	0f b6 45 fd          	movzx  eax,BYTE PTR [rbp-0x3]
  208103:	83 e0 bf             	and    eax,0xffffffbf
  208106:	09 d0                	or     eax,edx
  208108:	88 45 fd             	mov    BYTE PTR [rbp-0x3],al
  20810b:	0f b7 45 fc          	movzx  eax,WORD PTR [rbp-0x4]
  20810f:	89 c7                	mov    edi,eax
  208111:	e8 82 fc ff ff       	call   207d98 <io::keyboard::keyboard_event_publisher(io::keyboard::keyboard_packet)>
  208116:	90                   	nop
  208117:	c9                   	leave  
  208118:	c3                   	ret    

0000000000208119 <io::keyboard::init()>:
  208119:	55                   	push   rbp
  20811a:	48 89 e5             	mov    rbp,rsp
  20811d:	c6 05 06 8a 00 00 00 	mov    BYTE PTR [rip+0x8a06],0x0        # 210b2a <io::keyboard::num_lock>
  208124:	c6 05 fd 89 00 00 00 	mov    BYTE PTR [rip+0x89fd],0x0        # 210b28 <io::keyboard::caps_lock>
  20812b:	c6 05 f7 89 00 00 00 	mov    BYTE PTR [rip+0x89f7],0x0        # 210b29 <io::keyboard::scroll_lock>
  208132:	c6 05 ed 89 00 00 00 	mov    BYTE PTR [rip+0x89ed],0x0        # 210b26 <io::keyboard::alt_down>
  208139:	c6 05 e5 89 00 00 00 	mov    BYTE PTR [rip+0x89e5],0x0        # 210b25 <io::keyboard::ctrl_down>
  208140:	c6 05 e0 89 00 00 00 	mov    BYTE PTR [rip+0x89e0],0x0        # 210b27 <io::keyboard::fn_down>
  208147:	bf 01 00 00 00       	mov    edi,0x1
  20814c:	e8 fc bd ff ff       	call   203f4d <irq_unmask>
  208151:	90                   	nop
  208152:	5d                   	pop    rbp
  208153:	c3                   	ret    

0000000000208154 <io::outb(unsigned short, unsigned char)>:
  208154:	55                   	push   rbp
  208155:	48 89 e5             	mov    rbp,rsp
  208158:	48 83 ec 08          	sub    rsp,0x8
  20815c:	89 f8                	mov    eax,edi
  20815e:	89 f2                	mov    edx,esi
  208160:	66 89 45 fc          	mov    WORD PTR [rbp-0x4],ax
  208164:	89 d0                	mov    eax,edx
  208166:	88 45 f8             	mov    BYTE PTR [rbp-0x8],al
  208169:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  20816d:	0f b7 55 fc          	movzx  edx,WORD PTR [rbp-0x4]
  208171:	ee                   	out    dx,al
  208172:	90                   	nop
  208173:	c9                   	leave  
  208174:	c3                   	ret    

0000000000208175 <io::inb(unsigned short)>:
  208175:	55                   	push   rbp
  208176:	48 89 e5             	mov    rbp,rsp
  208179:	48 83 ec 18          	sub    rsp,0x18
  20817d:	89 f8                	mov    eax,edi
  20817f:	66 89 45 ec          	mov    WORD PTR [rbp-0x14],ax
  208183:	0f b7 45 ec          	movzx  eax,WORD PTR [rbp-0x14]
  208187:	89 c2                	mov    edx,eax
  208189:	ec                   	in     al,dx
  20818a:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  20818d:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  208191:	c9                   	leave  
  208192:	c3                   	ret    

0000000000208193 <io::serial::serial_byte(unsigned char)>:
  208193:	55                   	push   rbp
  208194:	48 89 e5             	mov    rbp,rsp
  208197:	48 83 ec 08          	sub    rsp,0x8
  20819b:	89 f8                	mov    eax,edi
  20819d:	88 45 fc             	mov    BYTE PTR [rbp-0x4],al
  2081a0:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  2081a4:	89 c6                	mov    esi,eax
  2081a6:	bf f8 03 00 00       	mov    edi,0x3f8
  2081ab:	e8 a4 ff ff ff       	call   208154 <io::outb(unsigned short, unsigned char)>
  2081b0:	90                   	nop
  2081b1:	c9                   	leave  
  2081b2:	c3                   	ret    

00000000002081b3 <read_command()>:
  2081b3:	55                   	push   rbp
  2081b4:	48 89 e5             	mov    rbp,rsp
  2081b7:	48 8d 35 c2 31 00 00 	lea    rsi,[rip+0x31c2]        # 20b380 <kernel_font+0x800>
  2081be:	48 8d 3d 7b 89 00 00 	lea    rdi,[rip+0x897b]        # 210b40 <serial_buffer>
  2081c5:	e8 2c b9 ff ff       	call   203af6 <util::strcomp(char const*, char const*)>
  2081ca:	84 c0                	test   al,al
  2081cc:	74 0c                	je     2081da <read_command()+0x27>
  2081ce:	48 8d 3d bb 31 00 00 	lea    rdi,[rip+0x31bb]        # 20b390 <kernel_font+0x810>
  2081d5:	e8 03 00 00 00       	call   2081dd <serial_msg>
  2081da:	90                   	nop
  2081db:	5d                   	pop    rbp
  2081dc:	c3                   	ret    

00000000002081dd <serial_msg>:
  2081dd:	55                   	push   rbp
  2081de:	48 89 e5             	mov    rbp,rsp
  2081e1:	48 83 ec 20          	sub    rsp,0x20
  2081e5:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2081e9:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  2081f0:	00 
  2081f1:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2081f5:	48 89 c7             	mov    rdi,rax
  2081f8:	e8 40 b9 ff ff       	call   203b3d <util::strlen(char const*)>
  2081fd:	48 39 45 f8          	cmp    QWORD PTR [rbp-0x8],rax
  208201:	0f 92 c0             	setb   al
  208204:	84 c0                	test   al,al
  208206:	74 1f                	je     208227 <serial_msg+0x4a>
  208208:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
  20820c:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  208210:	48 01 d0             	add    rax,rdx
  208213:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  208216:	0f b6 c0             	movzx  eax,al
  208219:	89 c7                	mov    edi,eax
  20821b:	e8 73 ff ff ff       	call   208193 <io::serial::serial_byte(unsigned char)>
  208220:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  208225:	eb ca                	jmp    2081f1 <serial_msg+0x14>
  208227:	90                   	nop
  208228:	c9                   	leave  
  208229:	c3                   	ret    

000000000020822a <prompt()>:
  20822a:	55                   	push   rbp
  20822b:	48 89 e5             	mov    rbp,rsp
  20822e:	48 8d 3d 83 31 00 00 	lea    rdi,[rip+0x3183]        # 20b3b8 <kernel_font+0x838>
  208235:	e8 a3 ff ff ff       	call   2081dd <serial_msg>
  20823a:	90                   	nop
  20823b:	5d                   	pop    rbp
  20823c:	c3                   	ret    

000000000020823d <clear_buffer()>:
  20823d:	55                   	push   rbp
  20823e:	48 89 e5             	mov    rbp,rsp
  208241:	48 83 ec 10          	sub    rsp,0x10
  208245:	c7 45 fc 00 00 00 00 	mov    DWORD PTR [rbp-0x4],0x0
  20824c:	81 7d fc ff 01 00 00 	cmp    DWORD PTR [rbp-0x4],0x1ff
  208253:	7f 16                	jg     20826b <clear_buffer()+0x2e>
  208255:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  208258:	48 98                	cdqe   
  20825a:	48 8d 15 df 88 00 00 	lea    rdx,[rip+0x88df]        # 210b40 <serial_buffer>
  208261:	c6 04 10 00          	mov    BYTE PTR [rax+rdx*1],0x0
  208265:	83 45 fc 01          	add    DWORD PTR [rbp-0x4],0x1
  208269:	eb e1                	jmp    20824c <clear_buffer()+0xf>
  20826b:	90                   	nop
  20826c:	c9                   	leave  
  20826d:	c3                   	ret    

000000000020826e <io::serial::console::init()>:
  20826e:	55                   	push   rbp
  20826f:	48 89 e5             	mov    rbp,rsp
  208272:	be 01 00 00 00       	mov    esi,0x1
  208277:	bf f9 03 00 00       	mov    edi,0x3f9
  20827c:	e8 d3 fe ff ff       	call   208154 <io::outb(unsigned short, unsigned char)>
  208281:	bf 04 00 00 00       	mov    edi,0x4
  208286:	e8 c2 bc ff ff       	call   203f4d <irq_unmask>
  20828b:	e8 ad ff ff ff       	call   20823d <clear_buffer()>
  208290:	e8 95 ff ff ff       	call   20822a <prompt()>
  208295:	90                   	nop
  208296:	5d                   	pop    rbp
  208297:	c3                   	ret    

0000000000208298 <io::serial::console::read_character()>:
  208298:	55                   	push   rbp
  208299:	48 89 e5             	mov    rbp,rsp
  20829c:	bf f8 03 00 00       	mov    edi,0x3f8
  2082a1:	e8 cf fe ff ff       	call   208175 <io::inb(unsigned short)>
  2082a6:	89 c2                	mov    edx,eax
  2082a8:	8b 05 92 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a92]        # 210d40 <buffer_index>
  2082ae:	89 d1                	mov    ecx,edx
  2082b0:	48 98                	cdqe   
  2082b2:	48 8d 15 87 88 00 00 	lea    rdx,[rip+0x8887]        # 210b40 <serial_buffer>
  2082b9:	88 0c 10             	mov    BYTE PTR [rax+rdx*1],cl
  2082bc:	8b 05 7e 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a7e]        # 210d40 <buffer_index>
  2082c2:	48 98                	cdqe   
  2082c4:	48 8d 15 75 88 00 00 	lea    rdx,[rip+0x8875]        # 210b40 <serial_buffer>
  2082cb:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  2082cf:	3c 0a                	cmp    al,0xa
  2082d1:	75 57                	jne    20832a <io::serial::console::read_character()+0x92>
  2082d3:	8b 05 67 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a67]        # 210d40 <buffer_index>
  2082d9:	48 98                	cdqe   
  2082db:	48 8d 15 5e 88 00 00 	lea    rdx,[rip+0x885e]        # 210b40 <serial_buffer>
  2082e2:	c6 04 10 00          	mov    BYTE PTR [rax+rdx*1],0x0
  2082e6:	48 8d 3d dd 30 00 00 	lea    rdi,[rip+0x30dd]        # 20b3ca <kernel_font+0x84a>
  2082ed:	e8 eb fe ff ff       	call   2081dd <serial_msg>
  2082f2:	e8 bc fe ff ff       	call   2081b3 <read_command()>
  2082f7:	e8 41 ff ff ff       	call   20823d <clear_buffer()>
  2082fc:	c7 05 3a 8a 00 00 00 	mov    DWORD PTR [rip+0x8a3a],0x0        # 210d40 <buffer_index>
  208303:	00 00 00 
  208306:	e8 1f ff ff ff       	call   20822a <prompt()>
  20830b:	8b 05 2f 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a2f]        # 210d40 <buffer_index>
  208311:	48 98                	cdqe   
  208313:	48 8d 15 26 88 00 00 	lea    rdx,[rip+0x8826]        # 210b40 <serial_buffer>
  20831a:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  20831e:	0f b6 c0             	movzx  eax,al
  208321:	89 c7                	mov    edi,eax
  208323:	e8 6b fe ff ff       	call   208193 <io::serial::serial_byte(unsigned char)>
  208328:	eb 2c                	jmp    208356 <io::serial::console::read_character()+0xbe>
  20832a:	8b 05 10 8a 00 00    	mov    eax,DWORD PTR [rip+0x8a10]        # 210d40 <buffer_index>
  208330:	48 98                	cdqe   
  208332:	48 8d 15 07 88 00 00 	lea    rdx,[rip+0x8807]        # 210b40 <serial_buffer>
  208339:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  20833d:	0f b6 c0             	movzx  eax,al
  208340:	89 c7                	mov    edi,eax
  208342:	e8 4c fe ff ff       	call   208193 <io::serial::serial_byte(unsigned char)>
  208347:	8b 05 f3 89 00 00    	mov    eax,DWORD PTR [rip+0x89f3]        # 210d40 <buffer_index>
  20834d:	83 c0 01             	add    eax,0x1
  208350:	89 05 ea 89 00 00    	mov    DWORD PTR [rip+0x89ea],eax        # 210d40 <buffer_index>
  208356:	90                   	nop
  208357:	5d                   	pop    rbp
  208358:	c3                   	ret    
  208359:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000208360 <mnkentry>:
  208360:	49 89 ff             	mov    r15,rdi
  208363:	48 8d 25 da 99 00 00 	lea    rsp,[rip+0x99da]        # 211d44 <stack.end>
  20836a:	48 31 ed             	xor    rbp,rbp
  20836d:	55                   	push   rbp
  20836e:	48 89 e5             	mov    rbp,rsp
  208371:	fa                   	cli    
  208372:	4c 8d 35 d1 92 ff ff 	lea    r14,[rip+0xffffffffffff92d1]        # 20164a <gdt_init>
  208379:	41 ff d6             	call   r14
  20837c:	4c 8d 35 26 bc ff ff 	lea    r14,[rip+0xffffffffffffbc26]        # 203fa9 <configure_pic>
  208383:	41 ff d6             	call   r14
  208386:	4c 89 ff             	mov    rdi,r15
  208389:	48 89 e6             	mov    rsi,rsp
  20838c:	4c 8d 35 6d 8c ff ff 	lea    r14,[rip+0xffffffffffff8c6d]        # 201000 <mnkmain>
  208393:	41 ff d6             	call   r14
  208396:	4c 8d 35 73 04 00 00 	lea    r14,[rip+0x473]        # 208810 <enter_userspace>
  20839d:	41 ff d6             	call   r14

00000000002083a0 <lidt>:
  2083a0:	0f 01 1f             	lidt   [rdi]
  2083a3:	c3                   	ret    

00000000002083a4 <isr0>:
  2083a4:	6a 00                	push   0x0
  2083a6:	6a 00                	push   0x0
  2083a8:	4c 8d 35 7d 02 00 00 	lea    r14,[rip+0x27d]        # 20862c <isr_common_stub>
  2083af:	41 ff e6             	jmp    r14

00000000002083b2 <isr1>:
  2083b2:	48 cf                	iretq  

00000000002083b4 <isr2>:
  2083b4:	6a 00                	push   0x0
  2083b6:	6a 02                	push   0x2
  2083b8:	4c 8d 35 6d 02 00 00 	lea    r14,[rip+0x26d]        # 20862c <isr_common_stub>
  2083bf:	41 ff e6             	jmp    r14

00000000002083c2 <isr3>:
  2083c2:	6a 00                	push   0x0
  2083c4:	6a 03                	push   0x3
  2083c6:	4c 8d 35 5f 02 00 00 	lea    r14,[rip+0x25f]        # 20862c <isr_common_stub>
  2083cd:	41 ff e6             	jmp    r14

00000000002083d0 <isr4>:
  2083d0:	6a 00                	push   0x0
  2083d2:	6a 04                	push   0x4
  2083d4:	4c 8d 35 51 02 00 00 	lea    r14,[rip+0x251]        # 20862c <isr_common_stub>
  2083db:	41 ff e6             	jmp    r14

00000000002083de <isr5>:
  2083de:	6a 00                	push   0x0
  2083e0:	6a 05                	push   0x5
  2083e2:	4c 8d 35 43 02 00 00 	lea    r14,[rip+0x243]        # 20862c <isr_common_stub>
  2083e9:	41 ff e6             	jmp    r14

00000000002083ec <isr6>:
  2083ec:	6a 00                	push   0x0
  2083ee:	6a 06                	push   0x6
  2083f0:	4c 8d 35 35 02 00 00 	lea    r14,[rip+0x235]        # 20862c <isr_common_stub>
  2083f7:	41 ff e6             	jmp    r14

00000000002083fa <isr7>:
  2083fa:	6a 00                	push   0x0
  2083fc:	6a 07                	push   0x7
  2083fe:	4c 8d 35 27 02 00 00 	lea    r14,[rip+0x227]        # 20862c <isr_common_stub>
  208405:	41 ff e6             	jmp    r14

0000000000208408 <isr8>:
  208408:	6a 08                	push   0x8
  20840a:	4c 8d 35 1b 02 00 00 	lea    r14,[rip+0x21b]        # 20862c <isr_common_stub>
  208411:	41 ff e6             	jmp    r14

0000000000208414 <isr9>:
  208414:	6a 00                	push   0x0
  208416:	6a 09                	push   0x9
  208418:	4c 8d 35 0d 02 00 00 	lea    r14,[rip+0x20d]        # 20862c <isr_common_stub>
  20841f:	41 ff e6             	jmp    r14

0000000000208422 <isr10>:
  208422:	6a 0a                	push   0xa
  208424:	4c 8d 35 01 02 00 00 	lea    r14,[rip+0x201]        # 20862c <isr_common_stub>
  20842b:	41 ff e6             	jmp    r14

000000000020842e <isr11>:
  20842e:	6a 0b                	push   0xb
  208430:	4c 8d 35 f5 01 00 00 	lea    r14,[rip+0x1f5]        # 20862c <isr_common_stub>
  208437:	41 ff e6             	jmp    r14

000000000020843a <isr12>:
  20843a:	6a 0c                	push   0xc
  20843c:	4c 8d 35 e9 01 00 00 	lea    r14,[rip+0x1e9]        # 20862c <isr_common_stub>
  208443:	41 ff e6             	jmp    r14

0000000000208446 <isr13>:
  208446:	6a 0d                	push   0xd
  208448:	4c 8d 35 dd 01 00 00 	lea    r14,[rip+0x1dd]        # 20862c <isr_common_stub>
  20844f:	41 ff e6             	jmp    r14

0000000000208452 <isr14>:
  208452:	6a 0e                	push   0xe
  208454:	4c 8d 35 d1 01 00 00 	lea    r14,[rip+0x1d1]        # 20862c <isr_common_stub>
  20845b:	41 ff e6             	jmp    r14

000000000020845e <isr15>:
  20845e:	6a 00                	push   0x0
  208460:	6a 0f                	push   0xf
  208462:	4c 8d 35 c3 01 00 00 	lea    r14,[rip+0x1c3]        # 20862c <isr_common_stub>
  208469:	41 ff e6             	jmp    r14

000000000020846c <isr16>:
  20846c:	6a 00                	push   0x0
  20846e:	6a 10                	push   0x10
  208470:	4c 8d 35 b5 01 00 00 	lea    r14,[rip+0x1b5]        # 20862c <isr_common_stub>
  208477:	41 ff e6             	jmp    r14

000000000020847a <isr17>:
  20847a:	6a 00                	push   0x0
  20847c:	6a 11                	push   0x11
  20847e:	4c 8d 35 a7 01 00 00 	lea    r14,[rip+0x1a7]        # 20862c <isr_common_stub>
  208485:	41 ff e6             	jmp    r14

0000000000208488 <isr18>:
  208488:	6a 00                	push   0x0
  20848a:	6a 12                	push   0x12
  20848c:	4c 8d 35 99 01 00 00 	lea    r14,[rip+0x199]        # 20862c <isr_common_stub>
  208493:	41 ff e6             	jmp    r14

0000000000208496 <isr19>:
  208496:	6a 00                	push   0x0
  208498:	6a 13                	push   0x13
  20849a:	4c 8d 35 8b 01 00 00 	lea    r14,[rip+0x18b]        # 20862c <isr_common_stub>
  2084a1:	41 ff e6             	jmp    r14

00000000002084a4 <isr20>:
  2084a4:	6a 00                	push   0x0
  2084a6:	6a 14                	push   0x14
  2084a8:	4c 8d 35 7d 01 00 00 	lea    r14,[rip+0x17d]        # 20862c <isr_common_stub>
  2084af:	41 ff e6             	jmp    r14

00000000002084b2 <isr21>:
  2084b2:	6a 00                	push   0x0
  2084b4:	6a 15                	push   0x15
  2084b6:	4c 8d 35 6f 01 00 00 	lea    r14,[rip+0x16f]        # 20862c <isr_common_stub>
  2084bd:	41 ff e6             	jmp    r14

00000000002084c0 <isr22>:
  2084c0:	6a 00                	push   0x0
  2084c2:	6a 16                	push   0x16
  2084c4:	4c 8d 35 61 01 00 00 	lea    r14,[rip+0x161]        # 20862c <isr_common_stub>
  2084cb:	41 ff e6             	jmp    r14

00000000002084ce <isr23>:
  2084ce:	6a 00                	push   0x0
  2084d0:	6a 17                	push   0x17
  2084d2:	4c 8d 35 53 01 00 00 	lea    r14,[rip+0x153]        # 20862c <isr_common_stub>
  2084d9:	41 ff e6             	jmp    r14

00000000002084dc <isr24>:
  2084dc:	6a 00                	push   0x0
  2084de:	6a 18                	push   0x18
  2084e0:	4c 8d 35 45 01 00 00 	lea    r14,[rip+0x145]        # 20862c <isr_common_stub>
  2084e7:	41 ff e6             	jmp    r14

00000000002084ea <isr25>:
  2084ea:	6a 00                	push   0x0
  2084ec:	6a 19                	push   0x19
  2084ee:	4c 8d 35 37 01 00 00 	lea    r14,[rip+0x137]        # 20862c <isr_common_stub>
  2084f5:	41 ff e6             	jmp    r14

00000000002084f8 <isr26>:
  2084f8:	6a 00                	push   0x0
  2084fa:	6a 1a                	push   0x1a
  2084fc:	4c 8d 35 29 01 00 00 	lea    r14,[rip+0x129]        # 20862c <isr_common_stub>
  208503:	41 ff e6             	jmp    r14

0000000000208506 <isr27>:
  208506:	6a 00                	push   0x0
  208508:	6a 1b                	push   0x1b
  20850a:	4c 8d 35 1b 01 00 00 	lea    r14,[rip+0x11b]        # 20862c <isr_common_stub>
  208511:	41 ff e6             	jmp    r14

0000000000208514 <isr28>:
  208514:	6a 00                	push   0x0
  208516:	6a 1c                	push   0x1c
  208518:	4c 8d 35 0d 01 00 00 	lea    r14,[rip+0x10d]        # 20862c <isr_common_stub>
  20851f:	41 ff e6             	jmp    r14

0000000000208522 <isr29>:
  208522:	6a 00                	push   0x0
  208524:	6a 1d                	push   0x1d
  208526:	4c 8d 35 ff 00 00 00 	lea    r14,[rip+0xff]        # 20862c <isr_common_stub>
  20852d:	41 ff e6             	jmp    r14

0000000000208530 <isr30>:
  208530:	6a 00                	push   0x0
  208532:	6a 1e                	push   0x1e
  208534:	4c 8d 35 f1 00 00 00 	lea    r14,[rip+0xf1]        # 20862c <isr_common_stub>
  20853b:	41 ff e6             	jmp    r14

000000000020853e <isr31>:
  20853e:	6a 00                	push   0x0
  208540:	6a 1f                	push   0x1f
  208542:	4c 8d 35 e3 00 00 00 	lea    r14,[rip+0xe3]        # 20862c <isr_common_stub>
  208549:	41 ff e6             	jmp    r14

000000000020854c <irq0>:
  20854c:	6a 00                	push   0x0
  20854e:	6a 20                	push   0x20
  208550:	4c 8d 35 1f 01 00 00 	lea    r14,[rip+0x11f]        # 208676 <irq_common_stub>
  208557:	41 ff e6             	jmp    r14

000000000020855a <irq1>:
  20855a:	6a 01                	push   0x1
  20855c:	6a 21                	push   0x21
  20855e:	4c 8d 35 11 01 00 00 	lea    r14,[rip+0x111]        # 208676 <irq_common_stub>
  208565:	41 ff e6             	jmp    r14

0000000000208568 <irq2>:
  208568:	6a 02                	push   0x2
  20856a:	6a 22                	push   0x22
  20856c:	4c 8d 35 03 01 00 00 	lea    r14,[rip+0x103]        # 208676 <irq_common_stub>
  208573:	41 ff e6             	jmp    r14

0000000000208576 <irq3>:
  208576:	6a 03                	push   0x3
  208578:	6a 23                	push   0x23
  20857a:	4c 8d 35 f5 00 00 00 	lea    r14,[rip+0xf5]        # 208676 <irq_common_stub>
  208581:	41 ff e6             	jmp    r14

0000000000208584 <irq4>:
  208584:	6a 04                	push   0x4
  208586:	6a 24                	push   0x24
  208588:	4c 8d 35 e7 00 00 00 	lea    r14,[rip+0xe7]        # 208676 <irq_common_stub>
  20858f:	41 ff e6             	jmp    r14

0000000000208592 <irq5>:
  208592:	6a 05                	push   0x5
  208594:	6a 25                	push   0x25
  208596:	4c 8d 35 d9 00 00 00 	lea    r14,[rip+0xd9]        # 208676 <irq_common_stub>
  20859d:	41 ff e6             	jmp    r14

00000000002085a0 <irq6>:
  2085a0:	6a 06                	push   0x6
  2085a2:	6a 26                	push   0x26
  2085a4:	4c 8d 35 cb 00 00 00 	lea    r14,[rip+0xcb]        # 208676 <irq_common_stub>
  2085ab:	41 ff e6             	jmp    r14

00000000002085ae <irq7>:
  2085ae:	6a 07                	push   0x7
  2085b0:	6a 27                	push   0x27
  2085b2:	4c 8d 35 bd 00 00 00 	lea    r14,[rip+0xbd]        # 208676 <irq_common_stub>
  2085b9:	41 ff e6             	jmp    r14

00000000002085bc <irq8>:
  2085bc:	6a 08                	push   0x8
  2085be:	6a 28                	push   0x28
  2085c0:	4c 8d 35 af 00 00 00 	lea    r14,[rip+0xaf]        # 208676 <irq_common_stub>
  2085c7:	41 ff e6             	jmp    r14

00000000002085ca <irq9>:
  2085ca:	6a 09                	push   0x9
  2085cc:	6a 29                	push   0x29
  2085ce:	4c 8d 35 a1 00 00 00 	lea    r14,[rip+0xa1]        # 208676 <irq_common_stub>
  2085d5:	41 ff e6             	jmp    r14

00000000002085d8 <irq10>:
  2085d8:	6a 0a                	push   0xa
  2085da:	6a 2a                	push   0x2a
  2085dc:	4c 8d 35 93 00 00 00 	lea    r14,[rip+0x93]        # 208676 <irq_common_stub>
  2085e3:	41 ff e6             	jmp    r14

00000000002085e6 <irq11>:
  2085e6:	6a 0b                	push   0xb
  2085e8:	6a 2b                	push   0x2b
  2085ea:	4c 8d 35 85 00 00 00 	lea    r14,[rip+0x85]        # 208676 <irq_common_stub>
  2085f1:	41 ff e6             	jmp    r14

00000000002085f4 <irq12>:
  2085f4:	6a 0c                	push   0xc
  2085f6:	6a 2c                	push   0x2c
  2085f8:	4c 8d 35 77 00 00 00 	lea    r14,[rip+0x77]        # 208676 <irq_common_stub>
  2085ff:	41 ff e6             	jmp    r14

0000000000208602 <irq13>:
  208602:	6a 0d                	push   0xd
  208604:	6a 2d                	push   0x2d
  208606:	4c 8d 35 69 00 00 00 	lea    r14,[rip+0x69]        # 208676 <irq_common_stub>
  20860d:	41 ff e6             	jmp    r14

0000000000208610 <irq14>:
  208610:	6a 0e                	push   0xe
  208612:	6a 2e                	push   0x2e
  208614:	4c 8d 35 5b 00 00 00 	lea    r14,[rip+0x5b]        # 208676 <irq_common_stub>
  20861b:	41 ff e6             	jmp    r14

000000000020861e <irq15>:
  20861e:	6a 0f                	push   0xf
  208620:	6a 2f                	push   0x2f
  208622:	4c 8d 35 4d 00 00 00 	lea    r14,[rip+0x4d]        # 208676 <irq_common_stub>
  208629:	41 ff e6             	jmp    r14

000000000020862c <isr_common_stub>:
  20862c:	50                   	push   rax
  20862d:	51                   	push   rcx
  20862e:	52                   	push   rdx
  20862f:	53                   	push   rbx
  208630:	55                   	push   rbp
  208631:	56                   	push   rsi
  208632:	57                   	push   rdi
  208633:	66 8c d8             	mov    ax,ds
  208636:	50                   	push   rax
  208637:	66 b8 10 00          	mov    ax,0x10
  20863b:	8e d8                	mov    ds,eax
  20863d:	8e c0                	mov    es,eax
  20863f:	8e e0                	mov    fs,eax
  208641:	8e e8                	mov    gs,eax
  208643:	0f 20 c0             	mov    rax,cr0
  208646:	50                   	push   rax
  208647:	0f 20 d0             	mov    rax,cr2
  20864a:	50                   	push   rax
  20864b:	0f 20 d8             	mov    rax,cr3
  20864e:	50                   	push   rax
  20864f:	0f 20 e0             	mov    rax,cr4
  208652:	50                   	push   rax
  208653:	48 89 e7             	mov    rdi,rsp
  208656:	fc                   	cld    
  208657:	e8 96 95 ff ff       	call   201bf2 <isr_handler>
  20865c:	5a                   	pop    rdx
  20865d:	5a                   	pop    rdx
  20865e:	5a                   	pop    rdx
  20865f:	5a                   	pop    rdx
  208660:	5b                   	pop    rbx
  208661:	8e db                	mov    ds,ebx
  208663:	8e c3                	mov    es,ebx
  208665:	8e e3                	mov    fs,ebx
  208667:	8e eb                	mov    gs,ebx
  208669:	5f                   	pop    rdi
  20866a:	5e                   	pop    rsi
  20866b:	5d                   	pop    rbp
  20866c:	5b                   	pop    rbx
  20866d:	5a                   	pop    rdx
  20866e:	59                   	pop    rcx
  20866f:	58                   	pop    rax
  208670:	48 83 c4 10          	add    rsp,0x10
  208674:	48 cf                	iretq  

0000000000208676 <irq_common_stub>:
  208676:	50                   	push   rax
  208677:	51                   	push   rcx
  208678:	52                   	push   rdx
  208679:	53                   	push   rbx
  20867a:	55                   	push   rbp
  20867b:	56                   	push   rsi
  20867c:	57                   	push   rdi
  20867d:	66 8c d8             	mov    ax,ds
  208680:	50                   	push   rax
  208681:	66 b8 10 00          	mov    ax,0x10
  208685:	8e d8                	mov    ds,eax
  208687:	8e c0                	mov    es,eax
  208689:	8e e0                	mov    fs,eax
  20868b:	8e e8                	mov    gs,eax
  20868d:	0f 20 c0             	mov    rax,cr0
  208690:	50                   	push   rax
  208691:	0f 20 d0             	mov    rax,cr2
  208694:	50                   	push   rax
  208695:	0f 20 d8             	mov    rax,cr3
  208698:	50                   	push   rax
  208699:	0f 20 e0             	mov    rax,cr4
  20869c:	50                   	push   rax
  20869d:	48 89 e7             	mov    rdi,rsp
  2086a0:	fc                   	cld    
  2086a1:	4c 8d 35 65 95 ff ff 	lea    r14,[rip+0xffffffffffff9565]        # 201c0d <irq_handler>
  2086a8:	41 ff d6             	call   r14
  2086ab:	5a                   	pop    rdx
  2086ac:	5a                   	pop    rdx
  2086ad:	5a                   	pop    rdx
  2086ae:	5a                   	pop    rdx
  2086af:	58                   	pop    rax
  2086b0:	8e d8                	mov    ds,eax
  2086b2:	8e c0                	mov    es,eax
  2086b4:	8e e0                	mov    fs,eax
  2086b6:	8e e8                	mov    gs,eax
  2086b8:	5f                   	pop    rdi
  2086b9:	5e                   	pop    rsi
  2086ba:	5d                   	pop    rbp
  2086bb:	5b                   	pop    rbx
  2086bc:	5a                   	pop    rdx
  2086bd:	59                   	pop    rcx
  2086be:	58                   	pop    rax
  2086bf:	48 83 c4 10          	add    rsp,0x10
  2086c3:	48 cf                	iretq  
  2086c5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2086cc:	00 00 00 
  2086cf:	90                   	nop

00000000002086d0 <load_gdt>:
  2086d0:	0f 01 17             	lgdt   [rdi]
  2086d3:	66 b8 10 00          	mov    ax,0x10
  2086d7:	8e d8                	mov    ds,eax
  2086d9:	8e c0                	mov    es,eax
  2086db:	8e e0                	mov    fs,eax
  2086dd:	8e e8                	mov    gs,eax
  2086df:	8e d0                	mov    ss,eax
  2086e1:	58                   	pop    rax
  2086e2:	6a 08                	push   0x8
  2086e4:	50                   	push   rax
  2086e5:	48 cb                	rex.W retf 

00000000002086e7 <load_tss>:
  2086e7:	0f 00 df             	ltr    di
  2086ea:	c3                   	ret    
  2086eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000002086f0 <configure_pat>:
  2086f0:	55                   	push   rbp
  2086f1:	48 89 e5             	mov    rbp,rsp
  2086f4:	48 31 c0             	xor    rax,rax
  2086f7:	b0 06                	mov    al,0x6
  2086f9:	b4 01                	mov    ah,0x1
  2086fb:	b3 00                	mov    bl,0x0
  2086fd:	c0 e3 10             	shl    bl,0x10
  208700:	09 d8                	or     eax,ebx
  208702:	66 b9 77 02          	mov    cx,0x277
  208706:	0f 30                	wrmsr  
  208708:	5d                   	pop    rbp
  208709:	c3                   	ret    

000000000020870a <configure_pat.end>:
  20870a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000208710 <sleep>:
  208710:	55                   	push   rbp
  208711:	48 89 e5             	mov    rbp,rsp
  208714:	50                   	push   rax
  208715:	b8 00 00 00 00       	mov    eax,0x0
  20871a:	48 89 05 07 7a 00 00 	mov    QWORD PTR [rip+0x7a07],rax        # 210128 <ms_clock>
  208721:	48 31 c0             	xor    rax,rax
  208724:	89 f8                	mov    eax,edi

0000000000208726 <sleep.loop>:
  208726:	fa                   	cli    
  208727:	48 8b 1d fa 79 00 00 	mov    rbx,QWORD PTR [rip+0x79fa]        # 210128 <ms_clock>
  20872e:	48 39 c3             	cmp    rbx,rax
  208731:	7f 0a                	jg     20873d <sleep.done>
  208733:	fb                   	sti    
  208734:	90                   	nop
  208735:	90                   	nop
  208736:	90                   	nop
  208737:	90                   	nop
  208738:	90                   	nop
  208739:	90                   	nop
  20873a:	90                   	nop
  20873b:	eb e9                	jmp    208726 <sleep.loop>

000000000020873d <sleep.done>:
  20873d:	fb                   	sti    
  20873e:	58                   	pop    rax
  20873f:	5d                   	pop    rbp
  208740:	c3                   	ret    
  208741:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208748:	00 00 00 
  20874b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000208750 <tss_rsp0>:
	...

0000000000208758 <setup_syscalls>:
  208758:	55                   	push   rbp
  208759:	48 89 e5             	mov    rbp,rsp
  20875c:	48 8d 05 4e 00 00 00 	lea    rax,[rip+0x4e]        # 2087b1 <syscall_handler>
  208763:	49 89 c0             	mov    r8,rax
  208766:	49 c1 e8 20          	shr    r8,0x20
  20876a:	4c 89 c2             	mov    rdx,r8
  20876d:	89 c0                	mov    eax,eax
  20876f:	89 d2                	mov    edx,edx
  208771:	b9 82 00 00 c0       	mov    ecx,0xc0000082
  208776:	0f 30                	wrmsr  
  208778:	b9 80 00 00 c0       	mov    ecx,0xc0000080
  20877d:	0f 32                	rdmsr  
  20877f:	83 c8 01             	or     eax,0x1
  208782:	0f 30                	wrmsr  
  208784:	b9 81 00 00 c0       	mov    ecx,0xc0000081
  208789:	0f 32                	rdmsr  
  20878b:	ba 08 00 10 00       	mov    edx,0x100008
  208790:	0f 30                	wrmsr  
  208792:	bf 00 00 00 00       	mov    edi,0x0
  208797:	4c 8d 15 74 8e ff ff 	lea    r10,[rip+0xffffffffffff8e74]        # 201612 <tss_get>
  20879e:	41 ff d2             	call   r10
  2087a1:	4c 8d 1d a8 ff ff ff 	lea    r11,[rip+0xffffffffffffffa8]        # 208750 <tss_rsp0>
  2087a8:	4c 8b 50 04          	mov    r10,QWORD PTR [rax+0x4]
  2087ac:	4d 89 13             	mov    QWORD PTR [r11],r10
  2087af:	5d                   	pop    rbp
  2087b0:	c3                   	ret    

00000000002087b1 <syscall_handler>:
  2087b1:	fa                   	cli    
  2087b2:	55                   	push   rbp
  2087b3:	48 89 e5             	mov    rbp,rsp
  2087b6:	49 89 e3             	mov    r11,rsp
  2087b9:	4c 8d 15 90 ff ff ff 	lea    r10,[rip+0xffffffffffffff90]        # 208750 <tss_rsp0>
  2087c0:	49 8b 22             	mov    rsp,QWORD PTR [r10]
  2087c3:	41 53                	push   r11
  2087c5:	51                   	push   rcx
  2087c6:	4c 8d 15 0c 00 00 00 	lea    r10,[rip+0xc]        # 2087d9 <syscall_table>
  2087cd:	49 8d 04 c2          	lea    rax,[r10+rax*8]
  2087d1:	ff 10                	call   QWORD PTR [rax]
  2087d3:	59                   	pop    rcx
  2087d4:	5c                   	pop    rsp
  2087d5:	5d                   	pop    rbp
  2087d6:	48 0f 07             	sysretq 

00000000002087d9 <syscall_table>:
  2087d9:	8b 38                	mov    edi,DWORD PTR [rax]
  2087db:	20 00                	and    BYTE PTR [rax],al
  2087dd:	00 00                	add    BYTE PTR [rax],al
  2087df:	00 00                	add    BYTE PTR [rax],al
  2087e1:	3f                   	(bad)  
  2087e2:	39 20                	cmp    DWORD PTR [rax],esp
  2087e4:	00 00                	add    BYTE PTR [rax],al
  2087e6:	00 00                	add    BYTE PTR [rax],al
  2087e8:	00 24 39             	add    BYTE PTR [rcx+rdi*1],ah
  2087eb:	20 00                	and    BYTE PTR [rax],al
  2087ed:	00 00                	add    BYTE PTR [rax],al
  2087ef:	00 00                	add    BYTE PTR [rax],al
  2087f1:	70 38                	jo     20882b <enter_userspace+0x1b>
  2087f3:	20 00                	and    BYTE PTR [rax],al
  2087f5:	00 00                	add    BYTE PTR [rax],al
  2087f7:	00 00                	add    BYTE PTR [rax],al
  2087f9:	e9 38 20 00 00       	jmp    20a836 <BASE_GRAN+0x80e>
  2087fe:	00 00                	add    BYTE PTR [rax],al
  208800:	00 66 2e             	add    BYTE PTR [rsi+0x2e],ah
  208803:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  20880a:	00 
  20880b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000208810 <enter_userspace>:
  208810:	55                   	push   rbp
  208811:	48 89 e5             	mov    rbp,rsp
  208814:	4c 8d 35 ae a4 ff ff 	lea    r14,[rip+0xffffffffffffa4ae]        # 202cc9 <request_page>
  20881b:	41 ff d6             	call   r14
  20881e:	48 89 c3             	mov    rbx,rax
  208821:	48 81 c3 00 10 00 00 	add    rbx,0x1000
  208828:	48 89 c7             	mov    rdi,rax
  20882b:	4c 8d 35 86 ac ff ff 	lea    r14,[rip+0xffffffffffffac86]        # 2034b8 <donate_to_userspace>
  208832:	41 ff d6             	call   r14
  208835:	4c 8d 35 1c ff ff ff 	lea    r14,[rip+0xffffffffffffff1c]        # 208758 <setup_syscalls>
  20883c:	41 ff d6             	call   r14
  20883f:	b8 1b 00 00 00       	mov    eax,0x1b
  208844:	8e d8                	mov    ds,eax
  208846:	8e c0                	mov    es,eax
  208848:	5d                   	pop    rbp
  208849:	50                   	push   rax
  20884a:	53                   	push   rbx
  20884b:	68 02 02 00 00       	push   0x202
  208850:	6a 23                	push   0x23
  208852:	4c 8d 35 15 0f 00 00 	lea    r14,[rip+0xf15]        # 20976e <$perform_command(char*)+0x85>
  208859:	41 56                	push   r14
  20885b:	48 cf                	iretq  
  20885d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208864:	00 00 00 
  208867:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20886e:	00 00 00 
  208871:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208878:	00 00 00 
  20887b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208882:	00 00 00 
  208885:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20888c:	00 00 00 
  20888f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208896:	00 00 00 
  208899:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088a0:	00 00 00 
  2088a3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088aa:	00 00 00 
  2088ad:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088b4:	00 00 00 
  2088b7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088be:	00 00 00 
  2088c1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088c8:	00 00 00 
  2088cb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088d2:	00 00 00 
  2088d5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088dc:	00 00 00 
  2088df:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088e6:	00 00 00 
  2088e9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088f0:	00 00 00 
  2088f3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2088fa:	00 00 00 
  2088fd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208904:	00 00 00 
  208907:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20890e:	00 00 00 
  208911:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208918:	00 00 00 
  20891b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208922:	00 00 00 
  208925:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20892c:	00 00 00 
  20892f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208936:	00 00 00 
  208939:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208940:	00 00 00 
  208943:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20894a:	00 00 00 
  20894d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208954:	00 00 00 
  208957:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20895e:	00 00 00 
  208961:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208968:	00 00 00 
  20896b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208972:	00 00 00 
  208975:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20897c:	00 00 00 
  20897f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208986:	00 00 00 
  208989:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208990:	00 00 00 
  208993:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20899a:	00 00 00 
  20899d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089a4:	00 00 00 
  2089a7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089ae:	00 00 00 
  2089b1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089b8:	00 00 00 
  2089bb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089c2:	00 00 00 
  2089c5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089cc:	00 00 00 
  2089cf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089d6:	00 00 00 
  2089d9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089e0:	00 00 00 
  2089e3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089ea:	00 00 00 
  2089ed:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089f4:	00 00 00 
  2089f7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  2089fe:	00 00 00 
  208a01:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a08:	00 00 00 
  208a0b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a12:	00 00 00 
  208a15:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a1c:	00 00 00 
  208a1f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a26:	00 00 00 
  208a29:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a30:	00 00 00 
  208a33:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a3a:	00 00 00 
  208a3d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a44:	00 00 00 
  208a47:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a4e:	00 00 00 
  208a51:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a58:	00 00 00 
  208a5b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a62:	00 00 00 
  208a65:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a6c:	00 00 00 
  208a6f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a76:	00 00 00 
  208a79:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a80:	00 00 00 
  208a83:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a8a:	00 00 00 
  208a8d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a94:	00 00 00 
  208a97:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208a9e:	00 00 00 
  208aa1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208aa8:	00 00 00 
  208aab:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ab2:	00 00 00 
  208ab5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208abc:	00 00 00 
  208abf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ac6:	00 00 00 
  208ac9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ad0:	00 00 00 
  208ad3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ada:	00 00 00 
  208add:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ae4:	00 00 00 
  208ae7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208aee:	00 00 00 
  208af1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208af8:	00 00 00 
  208afb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b02:	00 00 00 
  208b05:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b0c:	00 00 00 
  208b0f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b16:	00 00 00 
  208b19:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b20:	00 00 00 
  208b23:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b2a:	00 00 00 
  208b2d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b34:	00 00 00 
  208b37:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b3e:	00 00 00 
  208b41:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b48:	00 00 00 
  208b4b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b52:	00 00 00 
  208b55:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b5c:	00 00 00 
  208b5f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b66:	00 00 00 
  208b69:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b70:	00 00 00 
  208b73:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b7a:	00 00 00 
  208b7d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b84:	00 00 00 
  208b87:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b8e:	00 00 00 
  208b91:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208b98:	00 00 00 
  208b9b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ba2:	00 00 00 
  208ba5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bac:	00 00 00 
  208baf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bb6:	00 00 00 
  208bb9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bc0:	00 00 00 
  208bc3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bca:	00 00 00 
  208bcd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bd4:	00 00 00 
  208bd7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bde:	00 00 00 
  208be1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208be8:	00 00 00 
  208beb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bf2:	00 00 00 
  208bf5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208bfc:	00 00 00 
  208bff:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c06:	00 00 00 
  208c09:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c10:	00 00 00 
  208c13:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c1a:	00 00 00 
  208c1d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c24:	00 00 00 
  208c27:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c2e:	00 00 00 
  208c31:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c38:	00 00 00 
  208c3b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c42:	00 00 00 
  208c45:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c4c:	00 00 00 
  208c4f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c56:	00 00 00 
  208c59:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c60:	00 00 00 
  208c63:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c6a:	00 00 00 
  208c6d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c74:	00 00 00 
  208c77:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c7e:	00 00 00 
  208c81:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c88:	00 00 00 
  208c8b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c92:	00 00 00 
  208c95:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208c9c:	00 00 00 
  208c9f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ca6:	00 00 00 
  208ca9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cb0:	00 00 00 
  208cb3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cba:	00 00 00 
  208cbd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cc4:	00 00 00 
  208cc7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cce:	00 00 00 
  208cd1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cd8:	00 00 00 
  208cdb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ce2:	00 00 00 
  208ce5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cec:	00 00 00 
  208cef:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208cf6:	00 00 00 
  208cf9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d00:	00 00 00 
  208d03:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d0a:	00 00 00 
  208d0d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d14:	00 00 00 
  208d17:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d1e:	00 00 00 
  208d21:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d28:	00 00 00 
  208d2b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d32:	00 00 00 
  208d35:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d3c:	00 00 00 
  208d3f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d46:	00 00 00 
  208d49:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d50:	00 00 00 
  208d53:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d5a:	00 00 00 
  208d5d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d64:	00 00 00 
  208d67:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d6e:	00 00 00 
  208d71:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d78:	00 00 00 
  208d7b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d82:	00 00 00 
  208d85:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d8c:	00 00 00 
  208d8f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208d96:	00 00 00 
  208d99:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208da0:	00 00 00 
  208da3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208daa:	00 00 00 
  208dad:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208db4:	00 00 00 
  208db7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208dbe:	00 00 00 
  208dc1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208dc8:	00 00 00 
  208dcb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208dd2:	00 00 00 
  208dd5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ddc:	00 00 00 
  208ddf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208de6:	00 00 00 
  208de9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208df0:	00 00 00 
  208df3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208dfa:	00 00 00 
  208dfd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e04:	00 00 00 
  208e07:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e0e:	00 00 00 
  208e11:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e18:	00 00 00 
  208e1b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e22:	00 00 00 
  208e25:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e2c:	00 00 00 
  208e2f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e36:	00 00 00 
  208e39:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e40:	00 00 00 
  208e43:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e4a:	00 00 00 
  208e4d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e54:	00 00 00 
  208e57:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e5e:	00 00 00 
  208e61:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e68:	00 00 00 
  208e6b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e72:	00 00 00 
  208e75:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e7c:	00 00 00 
  208e7f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e86:	00 00 00 
  208e89:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e90:	00 00 00 
  208e93:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208e9a:	00 00 00 
  208e9d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ea4:	00 00 00 
  208ea7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208eae:	00 00 00 
  208eb1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208eb8:	00 00 00 
  208ebb:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ec2:	00 00 00 
  208ec5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ecc:	00 00 00 
  208ecf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ed6:	00 00 00 
  208ed9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ee0:	00 00 00 
  208ee3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208eea:	00 00 00 
  208eed:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ef4:	00 00 00 
  208ef7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208efe:	00 00 00 
  208f01:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f08:	00 00 00 
  208f0b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f12:	00 00 00 
  208f15:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f1c:	00 00 00 
  208f1f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f26:	00 00 00 
  208f29:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f30:	00 00 00 
  208f33:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f3a:	00 00 00 
  208f3d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f44:	00 00 00 
  208f47:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f4e:	00 00 00 
  208f51:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f58:	00 00 00 
  208f5b:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f62:	00 00 00 
  208f65:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f6c:	00 00 00 
  208f6f:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f76:	00 00 00 
  208f79:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f80:	00 00 00 
  208f83:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f8a:	00 00 00 
  208f8d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f94:	00 00 00 
  208f97:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208f9e:	00 00 00 
  208fa1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fa8:	00 00 00 
  208fab:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fb2:	00 00 00 
  208fb5:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fbc:	00 00 00 
  208fbf:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fc6:	00 00 00 
  208fc9:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fd0:	00 00 00 
  208fd3:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fda:	00 00 00 
  208fdd:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fe4:	00 00 00 
  208fe7:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208fee:	00 00 00 
  208ff1:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  208ff8:	00 00 00 
  208ffb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000209000 <kcascii(unsigned char, bool, bool)>:
  209000:	55                   	push   rbp
  209001:	48 89 e5             	mov    rbp,rsp
  209004:	48 83 ec 10          	sub    rsp,0x10
  209008:	89 f1                	mov    ecx,esi
  20900a:	89 d0                	mov    eax,edx
  20900c:	89 fa                	mov    edx,edi
  20900e:	88 55 fc             	mov    BYTE PTR [rbp-0x4],dl
  209011:	89 ca                	mov    edx,ecx
  209013:	88 55 f8             	mov    BYTE PTR [rbp-0x8],dl
  209016:	88 45 f4             	mov    BYTE PTR [rbp-0xc],al
  209019:	80 7d fc 53          	cmp    BYTE PTR [rbp-0x4],0x53
  20901d:	76 07                	jbe    209026 <kcascii(unsigned char, bool, bool)+0x26>
  20901f:	b8 00 00 00 00       	mov    eax,0x0
  209024:	eb 71                	jmp    209097 <kcascii(unsigned char, bool, bool)+0x97>
  209026:	0f b6 45 f8          	movzx  eax,BYTE PTR [rbp-0x8]
  20902a:	83 f0 01             	xor    eax,0x1
  20902d:	84 c0                	test   al,al
  20902f:	74 1e                	je     20904f <kcascii(unsigned char, bool, bool)+0x4f>
  209031:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  209035:	83 f0 01             	xor    eax,0x1
  209038:	84 c0                	test   al,al
  20903a:	74 13                	je     20904f <kcascii(unsigned char, bool, bool)+0x4f>
  20903c:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  209040:	48 98                	cdqe   
  209042:	48 8d 15 57 07 00 00 	lea    rdx,[rip+0x757]        # 2097a0 <kbdus>
  209049:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  20904d:	eb 48                	jmp    209097 <kcascii(unsigned char, bool, bool)+0x97>
  20904f:	80 7d f8 00          	cmp    BYTE PTR [rbp-0x8],0x0
  209053:	74 1e                	je     209073 <kcascii(unsigned char, bool, bool)+0x73>
  209055:	0f b6 45 f4          	movzx  eax,BYTE PTR [rbp-0xc]
  209059:	83 f0 01             	xor    eax,0x1
  20905c:	84 c0                	test   al,al
  20905e:	74 13                	je     209073 <kcascii(unsigned char, bool, bool)+0x73>
  209060:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  209064:	48 98                	cdqe   
  209066:	48 8d 15 f3 07 00 00 	lea    rdx,[rip+0x7f3]        # 209860 <kbdus_s>
  20906d:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  209071:	eb 24                	jmp    209097 <kcascii(unsigned char, bool, bool)+0x97>
  209073:	80 7d f8 00          	cmp    BYTE PTR [rbp-0x8],0x0
  209077:	74 19                	je     209092 <kcascii(unsigned char, bool, bool)+0x92>
  209079:	80 7d f4 00          	cmp    BYTE PTR [rbp-0xc],0x0
  20907d:	74 13                	je     209092 <kcascii(unsigned char, bool, bool)+0x92>
  20907f:	0f b6 45 fc          	movzx  eax,BYTE PTR [rbp-0x4]
  209083:	48 98                	cdqe   
  209085:	48 8d 15 34 08 00 00 	lea    rdx,[rip+0x834]        # 2098c0 <kbdus_sc>
  20908c:	0f b6 04 10          	movzx  eax,BYTE PTR [rax+rdx*1]
  209090:	eb 05                	jmp    209097 <kcascii(unsigned char, bool, bool)+0x97>
  209092:	b8 00 00 00 00       	mov    eax,0x0
  209097:	c9                   	leave  
  209098:	c3                   	ret    

0000000000209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>:
  209099:	55                   	push   rbp
  20909a:	48 89 e5             	mov    rbp,rsp
  20909d:	53                   	push   rbx
  20909e:	48 83 ec 18          	sub    rsp,0x18
  2090a2:	89 7d e4             	mov    DWORD PTR [rbp-0x1c],edi
  2090a5:	89 75 e0             	mov    DWORD PTR [rbp-0x20],esi
  2090a8:	b8 01 00 00 00       	mov    eax,0x1
  2090ad:	0f a2                	cpuid  
  2090af:	89 de                	mov    esi,ebx
  2090b1:	89 45 f4             	mov    DWORD PTR [rbp-0xc],eax
  2090b4:	89 75 f0             	mov    DWORD PTR [rbp-0x10],esi
  2090b7:	89 4d ec             	mov    DWORD PTR [rbp-0x14],ecx
  2090ba:	89 55 e8             	mov    DWORD PTR [rbp-0x18],edx
  2090bd:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  2090c0:	83 f8 02             	cmp    eax,0x2
  2090c3:	74 07                	je     2090cc <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)+0x33>
  2090c5:	83 f8 03             	cmp    eax,0x3
  2090c8:	74 0f                	je     2090d9 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)+0x40>
  2090ca:	eb 1a                	jmp    2090e6 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)+0x4d>
  2090cc:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
  2090cf:	23 45 ec             	and    eax,DWORD PTR [rbp-0x14]
  2090d2:	85 c0                	test   eax,eax
  2090d4:	0f 95 c0             	setne  al
  2090d7:	eb 12                	jmp    2090eb <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)+0x52>
  2090d9:	8b 45 e0             	mov    eax,DWORD PTR [rbp-0x20]
  2090dc:	23 45 e8             	and    eax,DWORD PTR [rbp-0x18]
  2090df:	85 c0                	test   eax,eax
  2090e1:	0f 95 c0             	setne  al
  2090e4:	eb 05                	jmp    2090eb <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)+0x52>
  2090e6:	b8 00 00 00 00       	mov    eax,0x0
  2090eb:	48 8b 5d f8          	mov    rbx,QWORD PTR [rbp-0x8]
  2090ef:	c9                   	leave  
  2090f0:	c3                   	ret    

00000000002090f1 <itoa(long, int)>:
  2090f1:	55                   	push   rbp
  2090f2:	48 89 e5             	mov    rbp,rsp
  2090f5:	48 83 ec 20          	sub    rsp,0x20
  2090f9:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  2090fd:	89 75 e4             	mov    DWORD PTR [rbp-0x1c],esi
  209100:	c7 45 fc 3c 00 00 00 	mov    DWORD PTR [rbp-0x4],0x3c
  209107:	48 83 7d e8 00       	cmp    QWORD PTR [rbp-0x18],0x0
  20910c:	74 48                	je     209156 <itoa(long, int)+0x65>
  20910e:	83 7d fc 00          	cmp    DWORD PTR [rbp-0x4],0x0
  209112:	74 42                	je     209156 <itoa(long, int)+0x65>
  209114:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  209117:	48 63 c8             	movsxd rcx,eax
  20911a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20911e:	48 99                	cqo    
  209120:	48 f7 f9             	idiv   rcx
  209123:	48 8d 05 56 08 00 00 	lea    rax,[rip+0x856]        # 209980 <itoa_characters>
  20912a:	0f b6 14 02          	movzx  edx,BYTE PTR [rdx+rax*1]
  20912e:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  209131:	48 98                	cdqe   
  209133:	48 8d 0d e6 07 00 00 	lea    rcx,[rip+0x7e6]        # 209920 <itoa_buf>
  20913a:	88 14 08             	mov    BYTE PTR [rax+rcx*1],dl
  20913d:	83 6d fc 01          	sub    DWORD PTR [rbp-0x4],0x1
  209141:	8b 45 e4             	mov    eax,DWORD PTR [rbp-0x1c]
  209144:	48 63 f0             	movsxd rsi,eax
  209147:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20914b:	48 99                	cqo    
  20914d:	48 f7 fe             	idiv   rsi
  209150:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  209154:	eb b1                	jmp    209107 <itoa(long, int)+0x16>
  209156:	8b 45 fc             	mov    eax,DWORD PTR [rbp-0x4]
  209159:	83 c0 01             	add    eax,0x1
  20915c:	48 98                	cdqe   
  20915e:	48 8d 15 bb 07 00 00 	lea    rdx,[rip+0x7bb]        # 209920 <itoa_buf>
  209165:	48 01 d0             	add    rax,rdx
  209168:	c9                   	leave  
  209169:	c3                   	ret    

000000000020916a <$strcmp(char const*, char const*)>:
  20916a:	55                   	push   rbp
  20916b:	48 89 e5             	mov    rbp,rsp
  20916e:	48 83 ec 20          	sub    rsp,0x20
  209172:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  209176:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  20917a:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20917e:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  209182:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  209186:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  209189:	84 c0                	test   al,al
  20918b:	74 25                	je     2091b2 <$strcmp(char const*, char const*)+0x48>
  20918d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  209191:	0f b6 10             	movzx  edx,BYTE PTR [rax]
  209194:	48 8b 45 e0          	mov    rax,QWORD PTR [rbp-0x20]
  209198:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  20919b:	38 c2                	cmp    dl,al
  20919d:	74 07                	je     2091a6 <$strcmp(char const*, char const*)+0x3c>
  20919f:	b8 00 00 00 00       	mov    eax,0x0
  2091a4:	eb 23                	jmp    2091c9 <$strcmp(char const*, char const*)+0x5f>
  2091a6:	48 83 45 e0 01       	add    QWORD PTR [rbp-0x20],0x1
  2091ab:	48 83 45 e8 01       	add    QWORD PTR [rbp-0x18],0x1
  2091b0:	eb d0                	jmp    209182 <$strcmp(char const*, char const*)+0x18>
  2091b2:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2091b6:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  2091b9:	84 c0                	test   al,al
  2091bb:	75 07                	jne    2091c4 <$strcmp(char const*, char const*)+0x5a>
  2091bd:	b8 00 00 00 00       	mov    eax,0x0
  2091c2:	eb 05                	jmp    2091c9 <$strcmp(char const*, char const*)+0x5f>
  2091c4:	b8 01 00 00 00       	mov    eax,0x1
  2091c9:	c9                   	leave  
  2091ca:	c3                   	ret    

00000000002091cb <$print(char const*)>:
  2091cb:	55                   	push   rbp
  2091cc:	48 89 e5             	mov    rbp,rsp
  2091cf:	48 83 ec 08          	sub    rsp,0x8
  2091d3:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  2091d7:	b8 02 00 00 00       	mov    eax,0x2
  2091dc:	0f 05                	syscall 
  2091de:	90                   	nop
  2091df:	c9                   	leave  
  2091e0:	c3                   	ret    

00000000002091e1 <$get_info(unsigned char)>:
  2091e1:	55                   	push   rbp
  2091e2:	48 89 e5             	mov    rbp,rsp
  2091e5:	48 83 ec 18          	sub    rsp,0x18
  2091e9:	89 f8                	mov    eax,edi
  2091eb:	88 45 ec             	mov    BYTE PTR [rbp-0x14],al
  2091ee:	b8 04 00 00 00       	mov    eax,0x4
  2091f3:	0f 05                	syscall 
  2091f5:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  2091f9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2091fd:	c9                   	leave  
  2091fe:	c3                   	ret    

00000000002091ff <$subscribe_keyboard_event(void (*)(keyboard_event_args))>:
  2091ff:	55                   	push   rbp
  209200:	48 89 e5             	mov    rbp,rsp
  209203:	48 83 ec 08          	sub    rsp,0x8
  209207:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  20920b:	b8 03 00 00 00       	mov    eax,0x3
  209210:	0f 05                	syscall 
  209212:	90                   	nop
  209213:	c9                   	leave  
  209214:	c3                   	ret    

0000000000209215 <$allocate_page()>:
  209215:	55                   	push   rbp
  209216:	48 89 e5             	mov    rbp,rsp
  209219:	48 83 ec 10          	sub    rsp,0x10
  20921d:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  209224:	00 
  209225:	b8 01 00 00 00       	mov    eax,0x1
  20922a:	0f 05                	syscall 
  20922c:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  209230:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  209234:	c9                   	leave  
  209235:	c3                   	ret    

0000000000209236 <$memset(void*, unsigned char, unsigned long)>:
  209236:	55                   	push   rbp
  209237:	48 89 e5             	mov    rbp,rsp
  20923a:	48 83 ec 28          	sub    rsp,0x28
  20923e:	48 89 7d e8          	mov    QWORD PTR [rbp-0x18],rdi
  209242:	89 f0                	mov    eax,esi
  209244:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
  209248:	88 45 e4             	mov    BYTE PTR [rbp-0x1c],al
  20924b:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  20924f:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  209253:	48 c7 45 f8 00 00 00 	mov    QWORD PTR [rbp-0x8],0x0
  20925a:	00 
  20925b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20925f:	48 3b 45 d8          	cmp    rax,QWORD PTR [rbp-0x28]
  209263:	73 18                	jae    20927d <$memset(void*, unsigned char, unsigned long)+0x47>
  209265:	48 8b 55 f0          	mov    rdx,QWORD PTR [rbp-0x10]
  209269:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  20926d:	48 01 c2             	add    rdx,rax
  209270:	0f b6 45 e4          	movzx  eax,BYTE PTR [rbp-0x1c]
  209274:	88 02                	mov    BYTE PTR [rdx],al
  209276:	48 83 45 f8 01       	add    QWORD PTR [rbp-0x8],0x1
  20927b:	eb de                	jmp    20925b <$memset(void*, unsigned char, unsigned long)+0x25>
  20927d:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  209281:	c9                   	leave  
  209282:	c3                   	ret    

0000000000209283 <keyboard_event(keyboard_event_args)>:
  209283:	55                   	push   rbp
  209284:	48 89 e5             	mov    rbp,rsp
  209287:	48 83 ec 20          	sub    rsp,0x20
  20928b:	66 89 7d ee          	mov    WORD PTR [rbp-0x12],di
  20928f:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  209293:	83 e0 01             	and    eax,0x1
  209296:	83 f0 01             	xor    eax,0x1
  209299:	84 c0                	test   al,al
  20929b:	0f 85 c9 00 00 00    	jne    20936a <keyboard_event(keyboard_event_args)+0xe7>
  2092a1:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  2092a5:	c0 e8 05             	shr    al,0x5
  2092a8:	83 e0 01             	and    eax,0x1
  2092ab:	0f b6 d0             	movzx  edx,al
  2092ae:	0f b6 45 ef          	movzx  eax,BYTE PTR [rbp-0x11]
  2092b2:	d0 e8                	shr    al,1
  2092b4:	83 e0 01             	and    eax,0x1
  2092b7:	0f b6 c8             	movzx  ecx,al
  2092ba:	0f b6 45 ee          	movzx  eax,BYTE PTR [rbp-0x12]
  2092be:	0f b6 c0             	movzx  eax,al
  2092c1:	89 ce                	mov    esi,ecx
  2092c3:	89 c7                	mov    edi,eax
  2092c5:	e8 36 fd ff ff       	call   209000 <kcascii(unsigned char, bool, bool)>
  2092ca:	88 45 ff             	mov    BYTE PTR [rbp-0x1],al
  2092cd:	80 7d ff 09          	cmp    BYTE PTR [rbp-0x1],0x9
  2092d1:	75 1f                	jne    2092f2 <keyboard_event(keyboard_event_args)+0x6f>
  2092d3:	8b 05 87 06 00 00    	mov    eax,DWORD PTR [rip+0x687]        # 209960 <command_buffer_index>
  2092d9:	8d 50 03             	lea    edx,[rax+0x3]
  2092dc:	85 c0                	test   eax,eax
  2092de:	0f 48 c2             	cmovs  eax,edx
  2092e1:	c1 f8 02             	sar    eax,0x2
  2092e4:	83 c0 01             	add    eax,0x1
  2092e7:	c1 e0 02             	shl    eax,0x2
  2092ea:	89 05 70 06 00 00    	mov    DWORD PTR [rip+0x670],eax        # 209960 <command_buffer_index>
  2092f0:	eb 7c                	jmp    20936e <keyboard_event(keyboard_event_args)+0xeb>
  2092f2:	80 7d ff 08          	cmp    BYTE PTR [rbp-0x1],0x8
  2092f6:	75 2d                	jne    209325 <keyboard_event(keyboard_event_args)+0xa2>
  2092f8:	8b 05 62 06 00 00    	mov    eax,DWORD PTR [rip+0x662]        # 209960 <command_buffer_index>
  2092fe:	83 e8 01             	sub    eax,0x1
  209301:	89 05 59 06 00 00    	mov    DWORD PTR [rip+0x659],eax        # 209960 <command_buffer_index>
  209307:	48 8b 15 5a 06 00 00 	mov    rdx,QWORD PTR [rip+0x65a]        # 209968 <$command_buffer>
  20930e:	8b 05 4c 06 00 00    	mov    eax,DWORD PTR [rip+0x64c]        # 209960 <command_buffer_index>
  209314:	48 98                	cdqe   
  209316:	48 01 d0             	add    rax,rdx
  209319:	c6 00 00             	mov    BYTE PTR [rax],0x0
  20931c:	c6 05 4f 06 00 00 01 	mov    BYTE PTR [rip+0x64f],0x1        # 209972 <unhandled_backspace>
  209323:	eb 49                	jmp    20936e <keyboard_event(keyboard_event_args)+0xeb>
  209325:	80 7d ff 0a          	cmp    BYTE PTR [rbp-0x1],0xa
  209329:	75 09                	jne    209334 <keyboard_event(keyboard_event_args)+0xb1>
  20932b:	c6 05 3e 06 00 00 00 	mov    BYTE PTR [rip+0x63e],0x0        # 209970 <prompt_waiting>
  209332:	eb 3a                	jmp    20936e <keyboard_event(keyboard_event_args)+0xeb>
  209334:	80 7d ff 00          	cmp    BYTE PTR [rbp-0x1],0x0
  209338:	74 33                	je     20936d <keyboard_event(keyboard_event_args)+0xea>
  20933a:	48 8b 15 27 06 00 00 	mov    rdx,QWORD PTR [rip+0x627]        # 209968 <$command_buffer>
  209341:	8b 05 19 06 00 00    	mov    eax,DWORD PTR [rip+0x619]        # 209960 <command_buffer_index>
  209347:	48 98                	cdqe   
  209349:	48 01 c2             	add    rdx,rax
  20934c:	0f b6 45 ff          	movzx  eax,BYTE PTR [rbp-0x1]
  209350:	88 02                	mov    BYTE PTR [rdx],al
  209352:	8b 05 08 06 00 00    	mov    eax,DWORD PTR [rip+0x608]        # 209960 <command_buffer_index>
  209358:	83 c0 01             	add    eax,0x1
  20935b:	89 05 ff 05 00 00    	mov    DWORD PTR [rip+0x5ff],eax        # 209960 <command_buffer_index>
  209361:	c6 05 09 06 00 00 01 	mov    BYTE PTR [rip+0x609],0x1        # 209971 <event_occured>
  209368:	eb 04                	jmp    20936e <keyboard_event(keyboard_event_args)+0xeb>
  20936a:	90                   	nop
  20936b:	eb 01                	jmp    20936e <keyboard_event(keyboard_event_args)+0xeb>
  20936d:	90                   	nop
  20936e:	c9                   	leave  
  20936f:	c3                   	ret    

0000000000209370 <$prompt()>:
  209370:	55                   	push   rbp
  209371:	48 89 e5             	mov    rbp,rsp
  209374:	48 8d 3d 85 10 00 00 	lea    rdi,[rip+0x1085]        # 20a400 <BASE_GRAN+0x3d8>
  20937b:	e8 4b fe ff ff       	call   2091cb <$print(char const*)>
  209380:	c6 05 e9 05 00 00 01 	mov    BYTE PTR [rip+0x5e9],0x1        # 209970 <prompt_waiting>
  209387:	0f b6 05 e2 05 00 00 	movzx  eax,BYTE PTR [rip+0x5e2]        # 209970 <prompt_waiting>
  20938e:	84 c0                	test   al,al
  209390:	74 50                	je     2093e2 <$prompt()+0x72>
  209392:	0f b6 05 d8 05 00 00 	movzx  eax,BYTE PTR [rip+0x5d8]        # 209971 <event_occured>
  209399:	84 c0                	test   al,al
  20939b:	74 25                	je     2093c2 <$prompt()+0x52>
  20939d:	48 8b 15 c4 05 00 00 	mov    rdx,QWORD PTR [rip+0x5c4]        # 209968 <$command_buffer>
  2093a4:	8b 05 b6 05 00 00    	mov    eax,DWORD PTR [rip+0x5b6]        # 209960 <command_buffer_index>
  2093aa:	48 98                	cdqe   
  2093ac:	48 83 e8 01          	sub    rax,0x1
  2093b0:	48 01 d0             	add    rax,rdx
  2093b3:	48 89 c7             	mov    rdi,rax
  2093b6:	e8 10 fe ff ff       	call   2091cb <$print(char const*)>
  2093bb:	c6 05 af 05 00 00 00 	mov    BYTE PTR [rip+0x5af],0x0        # 209971 <event_occured>
  2093c2:	0f b6 05 a9 05 00 00 	movzx  eax,BYTE PTR [rip+0x5a9]        # 209972 <unhandled_backspace>
  2093c9:	84 c0                	test   al,al
  2093cb:	74 ba                	je     209387 <$prompt()+0x17>
  2093cd:	48 8d 3d 52 10 00 00 	lea    rdi,[rip+0x1052]        # 20a426 <BASE_GRAN+0x3fe>
  2093d4:	e8 f2 fd ff ff       	call   2091cb <$print(char const*)>
  2093d9:	c6 05 92 05 00 00 00 	mov    BYTE PTR [rip+0x592],0x0        # 209972 <unhandled_backspace>
  2093e0:	eb a5                	jmp    209387 <$prompt()+0x17>
  2093e2:	48 8d 3d 3f 10 00 00 	lea    rdi,[rip+0x103f]        # 20a428 <BASE_GRAN+0x400>
  2093e9:	e8 dd fd ff ff       	call   2091cb <$print(char const*)>
  2093ee:	48 8b 05 73 05 00 00 	mov    rax,QWORD PTR [rip+0x573]        # 209968 <$command_buffer>
  2093f5:	48 89 c7             	mov    rdi,rax
  2093f8:	e8 ec 02 00 00       	call   2096e9 <$perform_command(char*)>
  2093fd:	48 8b 05 64 05 00 00 	mov    rax,QWORD PTR [rip+0x564]        # 209968 <$command_buffer>
  209404:	ba 00 10 00 00       	mov    edx,0x1000
  209409:	be 00 00 00 00       	mov    esi,0x0
  20940e:	48 89 c7             	mov    rdi,rax
  209411:	e8 20 fe ff ff       	call   209236 <$memset(void*, unsigned char, unsigned long)>
  209416:	c7 05 40 05 00 00 00 	mov    DWORD PTR [rip+0x540],0x0        # 209960 <command_buffer_index>
  20941d:	00 00 00 
  209420:	90                   	nop
  209421:	5d                   	pop    rbp
  209422:	c3                   	ret    

0000000000209423 <umain>:
  209423:	55                   	push   rbp
  209424:	48 89 e5             	mov    rbp,rsp
  209427:	48 8d 3d fc 0f 00 00 	lea    rdi,[rip+0xffc]        # 20a42a <BASE_GRAN+0x402>
  20942e:	e8 98 fd ff ff       	call   2091cb <$print(char const*)>
  209433:	48 8d 3d 49 fe ff ff 	lea    rdi,[rip+0xfffffffffffffe49]        # 209283 <keyboard_event(keyboard_event_args)>
  20943a:	e8 c0 fd ff ff       	call   2091ff <$subscribe_keyboard_event(void (*)(keyboard_event_args))>
  20943f:	e8 d1 fd ff ff       	call   209215 <$allocate_page()>
  209444:	48 89 05 1d 05 00 00 	mov    QWORD PTR [rip+0x51d],rax        # 209968 <$command_buffer>
  20944b:	48 8b 05 16 05 00 00 	mov    rax,QWORD PTR [rip+0x516]        # 209968 <$command_buffer>
  209452:	ba 00 10 00 00       	mov    edx,0x1000
  209457:	be 00 00 00 00       	mov    esi,0x0
  20945c:	48 89 c7             	mov    rdi,rax
  20945f:	e8 d2 fd ff ff       	call   209236 <$memset(void*, unsigned char, unsigned long)>
  209464:	e8 07 ff ff ff       	call   209370 <$prompt()>
  209469:	eb f9                	jmp    209464 <umain+0x41>

000000000020946b <$$meminfo()>:
  20946b:	55                   	push   rbp
  20946c:	48 89 e5             	mov    rbp,rsp
  20946f:	48 83 ec 20          	sub    rsp,0x20
  209473:	bf 00 00 00 00       	mov    edi,0x0
  209478:	e8 64 fd ff ff       	call   2091e1 <$get_info(unsigned char)>
  20947d:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
  209481:	bf 01 00 00 00       	mov    edi,0x1
  209486:	e8 56 fd ff ff       	call   2091e1 <$get_info(unsigned char)>
  20948b:	48 89 45 f0          	mov    QWORD PTR [rbp-0x10],rax
  20948f:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  209493:	48 2b 45 f0          	sub    rax,QWORD PTR [rbp-0x10]
  209497:	48 89 45 e8          	mov    QWORD PTR [rbp-0x18],rax
  20949b:	48 8d 3d a4 0f 00 00 	lea    rdi,[rip+0xfa4]        # 20a446 <BASE_GRAN+0x41e>
  2094a2:	e8 24 fd ff ff       	call   2091cb <$print(char const*)>
  2094a7:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2094ab:	48 c1 e8 14          	shr    rax,0x14
  2094af:	be 0a 00 00 00       	mov    esi,0xa
  2094b4:	48 89 c7             	mov    rdi,rax
  2094b7:	e8 35 fc ff ff       	call   2090f1 <itoa(long, int)>
  2094bc:	48 89 c7             	mov    rdi,rax
  2094bf:	e8 07 fd ff ff       	call   2091cb <$print(char const*)>
  2094c4:	48 8d 3d 95 0f 00 00 	lea    rdi,[rip+0xf95]        # 20a460 <BASE_GRAN+0x438>
  2094cb:	e8 fb fc ff ff       	call   2091cb <$print(char const*)>
  2094d0:	48 8b 45 f0          	mov    rax,QWORD PTR [rbp-0x10]
  2094d4:	48 c1 e8 14          	shr    rax,0x14
  2094d8:	be 0a 00 00 00       	mov    esi,0xa
  2094dd:	48 89 c7             	mov    rdi,rax
  2094e0:	e8 0c fc ff ff       	call   2090f1 <itoa(long, int)>
  2094e5:	48 89 c7             	mov    rdi,rax
  2094e8:	e8 de fc ff ff       	call   2091cb <$print(char const*)>
  2094ed:	48 8d 3d 86 0f 00 00 	lea    rdi,[rip+0xf86]        # 20a47a <BASE_GRAN+0x452>
  2094f4:	e8 d2 fc ff ff       	call   2091cb <$print(char const*)>
  2094f9:	48 8b 45 e8          	mov    rax,QWORD PTR [rbp-0x18]
  2094fd:	48 c1 e8 14          	shr    rax,0x14
  209501:	be 0a 00 00 00       	mov    esi,0xa
  209506:	48 89 c7             	mov    rdi,rax
  209509:	e8 e3 fb ff ff       	call   2090f1 <itoa(long, int)>
  20950e:	48 89 c7             	mov    rdi,rax
  209511:	e8 b5 fc ff ff       	call   2091cb <$print(char const*)>
  209516:	48 8d 3d 77 0f 00 00 	lea    rdi,[rip+0xf77]        # 20a494 <BASE_GRAN+0x46c>
  20951d:	e8 a9 fc ff ff       	call   2091cb <$print(char const*)>
  209522:	90                   	nop
  209523:	c9                   	leave  
  209524:	c3                   	ret    

0000000000209525 <$$cpu_info()>:
  209525:	55                   	push   rbp
  209526:	48 89 e5             	mov    rbp,rsp
  209529:	48 8d 3d 68 0f 00 00 	lea    rdi,[rip+0xf68]        # 20a498 <BASE_GRAN+0x470>
  209530:	e8 96 fc ff ff       	call   2091cb <$print(char const*)>
  209535:	48 8d 3d 78 0f 00 00 	lea    rdi,[rip+0xf78]        # 20a4b4 <BASE_GRAN+0x48c>
  20953c:	e8 8a fc ff ff       	call   2091cb <$print(char const*)>
  209541:	48 8d 3d 88 0f 00 00 	lea    rdi,[rip+0xf88]        # 20a4d0 <BASE_GRAN+0x4a8>
  209548:	e8 7e fc ff ff       	call   2091cb <$print(char const*)>
  20954d:	be 00 02 00 00       	mov    esi,0x200
  209552:	bf 02 00 00 00       	mov    edi,0x2
  209557:	e8 3d fb ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  20955c:	84 c0                	test   al,al
  20955e:	74 09                	je     209569 <$$cpu_info()+0x44>
  209560:	48 8d 05 7a 0f 00 00 	lea    rax,[rip+0xf7a]        # 20a4e1 <BASE_GRAN+0x4b9>
  209567:	eb 07                	jmp    209570 <$$cpu_info()+0x4b>
  209569:	48 8d 05 7d 0f 00 00 	lea    rax,[rip+0xf7d]        # 20a4ed <BASE_GRAN+0x4c5>
  209570:	48 89 c7             	mov    rdi,rax
  209573:	e8 53 fc ff ff       	call   2091cb <$print(char const*)>
  209578:	48 8d 3d 77 0f 00 00 	lea    rdi,[rip+0xf77]        # 20a4f6 <BASE_GRAN+0x4ce>
  20957f:	e8 47 fc ff ff       	call   2091cb <$print(char const*)>
  209584:	48 8d 3d 86 0f 00 00 	lea    rdi,[rip+0xf86]        # 20a511 <BASE_GRAN+0x4e9>
  20958b:	e8 3b fc ff ff       	call   2091cb <$print(char const*)>
  209590:	48 8d 3d 95 0f 00 00 	lea    rdi,[rip+0xf95]        # 20a52c <BASE_GRAN+0x504>
  209597:	e8 2f fc ff ff       	call   2091cb <$print(char const*)>
  20959c:	48 8d 3d a4 0f 00 00 	lea    rdi,[rip+0xfa4]        # 20a547 <BASE_GRAN+0x51f>
  2095a3:	e8 23 fc ff ff       	call   2091cb <$print(char const*)>
  2095a8:	48 8d 3d b4 0f 00 00 	lea    rdi,[rip+0xfb4]        # 20a563 <BASE_GRAN+0x53b>
  2095af:	e8 17 fc ff ff       	call   2091cb <$print(char const*)>
  2095b4:	be 01 00 00 00       	mov    esi,0x1
  2095b9:	bf 02 00 00 00       	mov    edi,0x2
  2095be:	e8 d6 fa ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  2095c3:	84 c0                	test   al,al
  2095c5:	74 09                	je     2095d0 <$$cpu_info()+0xab>
  2095c7:	48 8d 05 13 0f 00 00 	lea    rax,[rip+0xf13]        # 20a4e1 <BASE_GRAN+0x4b9>
  2095ce:	eb 07                	jmp    2095d7 <$$cpu_info()+0xb2>
  2095d0:	48 8d 05 16 0f 00 00 	lea    rax,[rip+0xf16]        # 20a4ed <BASE_GRAN+0x4c5>
  2095d7:	48 89 c7             	mov    rdi,rax
  2095da:	e8 ec fb ff ff       	call   2091cb <$print(char const*)>
  2095df:	48 8d 3d 8e 0f 00 00 	lea    rdi,[rip+0xf8e]        # 20a574 <BASE_GRAN+0x54c>
  2095e6:	e8 e0 fb ff ff       	call   2091cb <$print(char const*)>
  2095eb:	be 00 02 00 00       	mov    esi,0x200
  2095f0:	bf 02 00 00 00       	mov    edi,0x2
  2095f5:	e8 9f fa ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  2095fa:	84 c0                	test   al,al
  2095fc:	74 09                	je     209607 <$$cpu_info()+0xe2>
  2095fe:	48 8d 05 dc 0e 00 00 	lea    rax,[rip+0xedc]        # 20a4e1 <BASE_GRAN+0x4b9>
  209605:	eb 07                	jmp    20960e <$$cpu_info()+0xe9>
  209607:	48 8d 05 df 0e 00 00 	lea    rax,[rip+0xedf]        # 20a4ed <BASE_GRAN+0x4c5>
  20960e:	48 89 c7             	mov    rdi,rax
  209611:	e8 b5 fb ff ff       	call   2091cb <$print(char const*)>
  209616:	48 8d 3d 69 0f 00 00 	lea    rdi,[rip+0xf69]        # 20a586 <BASE_GRAN+0x55e>
  20961d:	e8 a9 fb ff ff       	call   2091cb <$print(char const*)>
  209622:	be 00 00 08 00       	mov    esi,0x80000
  209627:	bf 02 00 00 00       	mov    edi,0x2
  20962c:	e8 68 fa ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  209631:	84 c0                	test   al,al
  209633:	74 09                	je     20963e <$$cpu_info()+0x119>
  209635:	48 8d 05 a5 0e 00 00 	lea    rax,[rip+0xea5]        # 20a4e1 <BASE_GRAN+0x4b9>
  20963c:	eb 07                	jmp    209645 <$$cpu_info()+0x120>
  20963e:	48 8d 05 a8 0e 00 00 	lea    rax,[rip+0xea8]        # 20a4ed <BASE_GRAN+0x4c5>
  209645:	48 89 c7             	mov    rdi,rax
  209648:	e8 7e fb ff ff       	call   2091cb <$print(char const*)>
  20964d:	48 8d 3d 45 0f 00 00 	lea    rdi,[rip+0xf45]        # 20a599 <BASE_GRAN+0x571>
  209654:	e8 72 fb ff ff       	call   2091cb <$print(char const*)>
  209659:	be 00 00 10 00       	mov    esi,0x100000
  20965e:	bf 02 00 00 00       	mov    edi,0x2
  209663:	e8 31 fa ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  209668:	84 c0                	test   al,al
  20966a:	74 09                	je     209675 <$$cpu_info()+0x150>
  20966c:	48 8d 05 6e 0e 00 00 	lea    rax,[rip+0xe6e]        # 20a4e1 <BASE_GRAN+0x4b9>
  209673:	eb 07                	jmp    20967c <$$cpu_info()+0x157>
  209675:	48 8d 05 71 0e 00 00 	lea    rax,[rip+0xe71]        # 20a4ed <BASE_GRAN+0x4c5>
  20967c:	48 89 c7             	mov    rdi,rax
  20967f:	e8 47 fb ff ff       	call   2091cb <$print(char const*)>
  209684:	48 8d 3d 21 0f 00 00 	lea    rdi,[rip+0xf21]        # 20a5ac <BASE_GRAN+0x584>
  20968b:	e8 3b fb ff ff       	call   2091cb <$print(char const*)>
  209690:	be 00 00 00 10       	mov    esi,0x10000000
  209695:	bf 02 00 00 00       	mov    edi,0x2
  20969a:	e8 fa f9 ff ff       	call   209099 <cpuid_get_field(CPUID_REGISTER, CPUID_FIELD)>
  20969f:	84 c0                	test   al,al
  2096a1:	74 09                	je     2096ac <$$cpu_info()+0x187>
  2096a3:	48 8d 05 12 0f 00 00 	lea    rax,[rip+0xf12]        # 20a5bc <BASE_GRAN+0x594>
  2096aa:	eb 07                	jmp    2096b3 <$$cpu_info()+0x18e>
  2096ac:	48 8d 05 16 0f 00 00 	lea    rax,[rip+0xf16]        # 20a5c9 <BASE_GRAN+0x5a1>
  2096b3:	48 89 c7             	mov    rdi,rax
  2096b6:	e8 10 fb ff ff       	call   2091cb <$print(char const*)>
  2096bb:	90                   	nop
  2096bc:	5d                   	pop    rbp
  2096bd:	c3                   	ret    

00000000002096be <$$help()>:
  2096be:	55                   	push   rbp
  2096bf:	48 89 e5             	mov    rbp,rsp
  2096c2:	48 8d 3d 0f 0f 00 00 	lea    rdi,[rip+0xf0f]        # 20a5d8 <BASE_GRAN+0x5b0>
  2096c9:	e8 fd fa ff ff       	call   2091cb <$print(char const*)>
  2096ce:	48 8d 3d 3b 0f 00 00 	lea    rdi,[rip+0xf3b]        # 20a610 <BASE_GRAN+0x5e8>
  2096d5:	e8 f1 fa ff ff       	call   2091cb <$print(char const*)>
  2096da:	48 8d 3d 67 0f 00 00 	lea    rdi,[rip+0xf67]        # 20a648 <BASE_GRAN+0x620>
  2096e1:	e8 e5 fa ff ff       	call   2091cb <$print(char const*)>
  2096e6:	90                   	nop
  2096e7:	5d                   	pop    rbp
  2096e8:	c3                   	ret    

00000000002096e9 <$perform_command(char*)>:
  2096e9:	55                   	push   rbp
  2096ea:	48 89 e5             	mov    rbp,rsp
  2096ed:	48 83 ec 10          	sub    rsp,0x10
  2096f1:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  2096f5:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  2096f9:	48 8d 35 a0 02 00 00 	lea    rsi,[rip+0x2a0]        # 2099a0 <$cpuinfo>
  209700:	48 89 c7             	mov    rdi,rax
  209703:	e8 62 fa ff ff       	call   20916a <$strcmp(char const*, char const*)>
  209708:	84 c0                	test   al,al
  20970a:	74 07                	je     209713 <$perform_command(char*)+0x2a>
  20970c:	e8 14 fe ff ff       	call   209525 <$$cpu_info()>
  209711:	eb 59                	jmp    20976c <$perform_command(char*)+0x83>
  209713:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  209717:	48 8d 35 7a 02 00 00 	lea    rsi,[rip+0x27a]        # 209998 <$meminfo>
  20971e:	48 89 c7             	mov    rdi,rax
  209721:	e8 44 fa ff ff       	call   20916a <$strcmp(char const*, char const*)>
  209726:	84 c0                	test   al,al
  209728:	74 07                	je     209731 <$perform_command(char*)+0x48>
  20972a:	e8 3c fd ff ff       	call   20946b <$$meminfo()>
  20972f:	eb 3b                	jmp    20976c <$perform_command(char*)+0x83>
  209731:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  209735:	48 8d 35 6c 02 00 00 	lea    rsi,[rip+0x26c]        # 2099a8 <$help>
  20973c:	48 89 c7             	mov    rdi,rax
  20973f:	e8 26 fa ff ff       	call   20916a <$strcmp(char const*, char const*)>
  209744:	84 c0                	test   al,al
  209746:	74 07                	je     20974f <$perform_command(char*)+0x66>
  209748:	e8 71 ff ff ff       	call   2096be <$$help()>
  20974d:	eb 1d                	jmp    20976c <$perform_command(char*)+0x83>
  20974f:	48 8b 05 12 02 00 00 	mov    rax,QWORD PTR [rip+0x212]        # 209968 <$command_buffer>
  209756:	0f b6 00             	movzx  eax,BYTE PTR [rax]
  209759:	84 c0                	test   al,al
  20975b:	74 0e                	je     20976b <$perform_command(char*)+0x82>
  20975d:	48 8d 3d 24 0f 00 00 	lea    rdi,[rip+0xf24]        # 20a688 <BASE_GRAN+0x660>
  209764:	e8 62 fa ff ff       	call   2091cb <$print(char const*)>
  209769:	eb 01                	jmp    20976c <$perform_command(char*)+0x83>
  20976b:	90                   	nop
  20976c:	c9                   	leave  
  20976d:	c3                   	ret    
  20976e:	48 31 ed             	xor    rbp,rbp
  209771:	55                   	push   rbp
  209772:	48 89 e5             	mov    rbp,rsp
  209775:	4c 8d 35 a7 fc ff ff 	lea    r14,[rip+0xfffffffffffffca7]        # 209423 <umain>
  20977c:	e8 a2 fc ff ff       	call   209423 <umain>
  209781:	eb fe                	jmp    209781 <$perform_command(char*)+0x98>
  209783:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  20978a:	00 00 00 
  20978d:	66 2e 0f 1f 84 00 00 	nop    WORD PTR cs:[rax+rax*1+0x0]
  209794:	00 00 00 
  209797:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
  20979e:	00 00 

00000000002097a0 <kbdus>:
  2097a0:	00 00                	add    BYTE PTR [rax],al
  2097a2:	31 32                	xor    DWORD PTR [rdx],esi
  2097a4:	33 34 35 36 37 38 39 	xor    esi,DWORD PTR [rsi*1+0x39383736]
  2097ab:	30 2d 3d 08 09 71    	xor    BYTE PTR [rip+0x7109083d],ch        # 71299fee <__kernel_end+0x71087fee>
  2097b1:	77 65                	ja     209818 <kbdus_c+0x18>
  2097b3:	72 74                	jb     209829 <kbdus_c+0x29>
  2097b5:	79 75                	jns    20982c <kbdus_c+0x2c>
  2097b7:	69 6f 70 5b 5d 0a 00 	imul   ebp,DWORD PTR [rdi+0x70],0xa5d5b
  2097be:	61                   	(bad)  
  2097bf:	73 64                	jae    209825 <kbdus_c+0x25>
  2097c1:	66 67 68 6a 6b       	addr32 pushw 0x6b6a
  2097c6:	6c                   	ins    BYTE PTR es:[rdi],dx
  2097c7:	3b 27                	cmp    esp,DWORD PTR [rdi]
  2097c9:	60                   	(bad)  
  2097ca:	00 5c 7a 78          	add    BYTE PTR [rdx+rdi*2+0x78],bl
  2097ce:	63 76 62             	movsxd esi,DWORD PTR [rsi+0x62]
  2097d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  2097d2:	6d                   	ins    DWORD PTR es:[rdi],dx
  2097d3:	2c 2e                	sub    al,0x2e
  2097d5:	2f                   	(bad)  
  2097d6:	00 2a                	add    BYTE PTR [rdx],ch
  2097d8:	00 20                	add    BYTE PTR [rax],ah
	...
  2097e6:	00 37                	add    BYTE PTR [rdi],dh
  2097e8:	38 39                	cmp    BYTE PTR [rcx],bh
  2097ea:	2d 34 35 36 2b       	sub    eax,0x2b363534
  2097ef:	31 32                	xor    DWORD PTR [rdx],esi
  2097f1:	33 30                	xor    esi,DWORD PTR [rax]
  2097f3:	2e 00 00             	add    BYTE PTR cs:[rax],al
	...

0000000000209800 <kbdus_c>:
  209800:	00 00                	add    BYTE PTR [rax],al
  209802:	31 32                	xor    DWORD PTR [rdx],esi
  209804:	33 34 35 36 37 38 39 	xor    esi,DWORD PTR [rsi*1+0x39383736]
  20980b:	30 2d 3d 08 09 51    	xor    BYTE PTR [rip+0x5109083d],ch        # 5129a04e <__kernel_end+0x5108804e>
  209811:	57                   	push   rdi
  209812:	45 52                	rex.RB push r10
  209814:	54                   	push   rsp
  209815:	59                   	pop    rcx
  209816:	55                   	push   rbp
  209817:	49                   	rex.WB
  209818:	4f 50                	rex.WRXB push r8
  20981a:	5b                   	pop    rbx
  20981b:	5d                   	pop    rbp
  20981c:	0a 00                	or     al,BYTE PTR [rax]
  20981e:	41 53                	push   r11
  209820:	44                   	rex.R
  209821:	46                   	rex.RX
  209822:	47                   	rex.RXB
  209823:	48                   	rex.W
  209824:	4a                   	rex.WX
  209825:	4b                   	rex.WXB
  209826:	4c 3b 27             	cmp    r12,QWORD PTR [rdi]
  209829:	60                   	(bad)  
  20982a:	00 5c 5a 58          	add    BYTE PTR [rdx+rbx*2+0x58],bl
  20982e:	43 56                	rex.XB push r14
  209830:	42                   	rex.X
  209831:	4e                   	rex.WRX
  209832:	4d 2c 2e             	rex.WRB sub al,0x2e
  209835:	2f                   	(bad)  
  209836:	00 2a                	add    BYTE PTR [rdx],ch
  209838:	00 20                	add    BYTE PTR [rax],ah
	...
  209846:	00 37                	add    BYTE PTR [rdi],dh
  209848:	38 39                	cmp    BYTE PTR [rcx],bh
  20984a:	2d 34 35 36 2b       	sub    eax,0x2b363534
  20984f:	31 32                	xor    DWORD PTR [rdx],esi
  209851:	33 30                	xor    esi,DWORD PTR [rax]
  209853:	2e 00 00             	add    BYTE PTR cs:[rax],al
	...

0000000000209860 <kbdus_s>:
  209860:	00 00                	add    BYTE PTR [rax],al
  209862:	21 40 23             	and    DWORD PTR [rax+0x23],eax
  209865:	24 25                	and    al,0x25
  209867:	5e                   	pop    rsi
  209868:	26 2a 28             	sub    ch,BYTE PTR es:[rax]
  20986b:	29 5f 2b             	sub    DWORD PTR [rdi+0x2b],ebx
  20986e:	08 09                	or     BYTE PTR [rcx],cl
  209870:	51                   	push   rcx
  209871:	57                   	push   rdi
  209872:	45 52                	rex.RB push r10
  209874:	54                   	push   rsp
  209875:	59                   	pop    rcx
  209876:	55                   	push   rbp
  209877:	49                   	rex.WB
  209878:	4f 50                	rex.WRXB push r8
  20987a:	7b 7d                	jnp    2098f9 <kbdus_sc+0x39>
  20987c:	0a 00                	or     al,BYTE PTR [rax]
  20987e:	41 53                	push   r11
  209880:	44                   	rex.R
  209881:	46                   	rex.RX
  209882:	47                   	rex.RXB
  209883:	48                   	rex.W
  209884:	4a                   	rex.WX
  209885:	4b                   	rex.WXB
  209886:	4c 3b 27             	cmp    r12,QWORD PTR [rdi]
  209889:	7e 00                	jle    20988b <kbdus_s+0x2b>
  20988b:	7c 5a                	jl     2098e7 <kbdus_sc+0x27>
  20988d:	58                   	pop    rax
  20988e:	43 56                	rex.XB push r14
  209890:	42                   	rex.X
  209891:	4e                   	rex.WRX
  209892:	4d 3c 3e             	rex.WRB cmp al,0x3e
  209895:	3f                   	(bad)  
  209896:	00 2a                	add    BYTE PTR [rdx],ch
  209898:	00 20                	add    BYTE PTR [rax],ah
	...
  2098a6:	00 37                	add    BYTE PTR [rdi],dh
  2098a8:	38 39                	cmp    BYTE PTR [rcx],bh
  2098aa:	2d 34 35 36 2b       	sub    eax,0x2b363534
  2098af:	31 32                	xor    DWORD PTR [rdx],esi
  2098b1:	33 30                	xor    esi,DWORD PTR [rax]
  2098b3:	2e 00 00             	add    BYTE PTR cs:[rax],al
	...

00000000002098c0 <kbdus_sc>:
  2098c0:	00 00                	add    BYTE PTR [rax],al
  2098c2:	21 40 23             	and    DWORD PTR [rax+0x23],eax
  2098c5:	24 25                	and    al,0x25
  2098c7:	5e                   	pop    rsi
  2098c8:	26 2a 28             	sub    ch,BYTE PTR es:[rax]
  2098cb:	29 5f 2b             	sub    DWORD PTR [rdi+0x2b],ebx
  2098ce:	08 09                	or     BYTE PTR [rcx],cl
  2098d0:	71 77                	jno    209949 <itoa_buf+0x29>
  2098d2:	65 72 74             	gs jb  209949 <itoa_buf+0x29>
  2098d5:	79 75                	jns    20994c <itoa_buf+0x2c>
  2098d7:	69 6f 70 7b 7d 0a 00 	imul   ebp,DWORD PTR [rdi+0x70],0xa7d7b
  2098de:	61                   	(bad)  
  2098df:	73 64                	jae    209945 <itoa_buf+0x25>
  2098e1:	66 67 68 6a 6b       	addr32 pushw 0x6b6a
  2098e6:	6c                   	ins    BYTE PTR es:[rdi],dx
  2098e7:	3b 27                	cmp    esp,DWORD PTR [rdi]
  2098e9:	7e 00                	jle    2098eb <kbdus_sc+0x2b>
  2098eb:	7c 7a                	jl     209967 <command_buffer_index+0x7>
  2098ed:	78 63                	js     209952 <itoa_buf+0x32>
  2098ef:	76 62                	jbe    209953 <itoa_buf+0x33>
  2098f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  2098f2:	6d                   	ins    DWORD PTR es:[rdi],dx
  2098f3:	3c 3e                	cmp    al,0x3e
  2098f5:	3f                   	(bad)  
  2098f6:	00 2a                	add    BYTE PTR [rdx],ch
  2098f8:	00 20                	add    BYTE PTR [rax],ah
	...
  209906:	00 37                	add    BYTE PTR [rdi],dh
  209908:	38 39                	cmp    BYTE PTR [rcx],bh
  20990a:	2d 34 35 36 2b       	sub    eax,0x2b363534
  20990f:	31 32                	xor    DWORD PTR [rdx],esi
  209911:	33 30                	xor    esi,DWORD PTR [rax]
  209913:	2e 66 2e 0f 1f 84 00 	cs nop WORD PTR cs:[rax+rax*1+0x0]
  20991a:	00 00 00 00 
  20991e:	66 90                	xchg   ax,ax

0000000000209920 <itoa_buf>:
	...

0000000000209960 <command_buffer_index>:
	...

0000000000209968 <$command_buffer>:
	...

0000000000209970 <prompt_waiting>:
	...

0000000000209971 <event_occured>:
	...

0000000000209972 <unhandled_backspace>:
  209972:	00 66 2e             	add    BYTE PTR [rsi+0x2e],ah
  209975:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
  20997c:	00 
  20997d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000209980 <itoa_characters>:
  209980:	30 31                	xor    BYTE PTR [rcx],dh
  209982:	32 33                	xor    dh,BYTE PTR [rbx]
  209984:	34 35                	xor    al,0x35
  209986:	36 37                	ss (bad) 
  209988:	38 39                	cmp    BYTE PTR [rcx],bh
  20998a:	61                   	(bad)  
  20998b:	62 63 64 65 66       	(bad)
	...

0000000000209998 <$meminfo>:
  209998:	6d                   	ins    DWORD PTR es:[rdi],dx
  209999:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20999b:	69 6e 66 6f 00   	imul   ebp,DWORD PTR [rsi+0x66],0x7063006f

00000000002099a0 <$cpuinfo>:
  2099a0:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
  2099a3:	69 6e 66 6f 00   	imul   ebp,DWORD PTR [rsi+0x66],0x6568006f

00000000002099a8 <$help>:
  2099a8:	68 65 6c 70 00       	push   0x706c65

Disassembly of section .data:

000000000020a000 <cpu::gdt::GDT_MAX_DESCRIPTORS-0x5>:
  20a000:	4d                   	rex.WRB
  20a001:	43                   	rex.XB
  20a002:	46                   	rex.RX
  20a003:	47 00              	rex.RXB add BYTE PTR [r8],r10b

000000000020a005 <cpu::gdt::GDT_MAX_DESCRIPTORS>:
  20a005:	10                 	adc    BYTE PTR [rcx],al

000000000020a006 <cpu::gdt::GDT_DESC_ACCESS>:
  20a006:	01                 	add    DWORD PTR [rdx],eax

000000000020a007 <cpu::gdt::GDT_DESC_READWRITE>:
  20a007:	02               	add    al,BYTE PTR [rax+rcx*1]

000000000020a008 <cpu::gdt::GDT_DESC_DC>:
  20a008:	04                 	add    al,0x8

000000000020a009 <cpu::gdt::GDT_DESC_EXECUTABLE>:
  20a009:	08                 	or     BYTE PTR [rax],dl

000000000020a00a <cpu::gdt::GDT_DESC_CODEDATA>:
  20a00a:	10               	adc    BYTE PTR [rax-0x80],ah

000000000020a00b <cpu::gdt::GDT_DESC_DPL>:
  20a00b:	60                   	(bad)  

000000000020a00c <cpu::gdt::GDT_DESC_PRESENT>:
  20a00c:	80               	or     BYTE PTR [rdi],0x10

000000000020a00d <cpu::gdt::GDT_GRAN_LIMITHIMAST>:
  20a00d:	0f               	movups xmm4,XMMWORD PTR [rax]

000000000020a00e <cpu::gdt::GDT_GRAN_OS>:
  20a00e:	10                 	adc    BYTE PTR [rax],ah

000000000020a00f <cpu::gdt::GDT_GRAN_64BIT>:
  20a00f:	20               	and    BYTE PTR [rax-0x80],al

000000000020a010 <cpu::gdt::GDT_GRAN_32BIT>:
  20a010:	40             	rex or BYTE PTR [rax],0x10

000000000020a011 <cpu::gdt::GDT_GRAN_4K>:
  20a011:	80               	or     BYTE PTR [rax],0x10

000000000020a012 <cpu::gdt::GDT_SELECTOR_KERNEL_CODE>:
  20a012:	08                 	or     BYTE PTR [rax],dl

000000000020a013 <cpu::gdt::GDT_SELECTOR_KERNEL_DATA>:
  20a013:	10                 	adc    BYTE PTR [rax],bl

000000000020a014 <cpu::gdt::GDT_SELECTOR_USER_DATA>:
  20a014:	18                 	sbb    BYTE PTR [rax],ah

000000000020a015 <cpu::gdt::GDT_SELECTOR_USER_CODE>:
  20a015:	20                 	and    BYTE PTR [rax],dl

000000000020a016 <cpu::gdt::GDT_MAX_DESCRIPTORS>:
  20a016:	10                 	adc    BYTE PTR [rcx],al

000000000020a017 <cpu::gdt::GDT_DESC_ACCESS>:
  20a017:	01                 	add    DWORD PTR [rdx],eax

000000000020a018 <cpu::gdt::GDT_DESC_READWRITE>:
  20a018:	02               	add    al,BYTE PTR [rax+rcx*1]

000000000020a019 <cpu::gdt::GDT_DESC_DC>:
  20a019:	04                 	add    al,0x8

000000000020a01a <cpu::gdt::GDT_DESC_EXECUTABLE>:
  20a01a:	08                 	or     BYTE PTR [rax],dl

000000000020a01b <cpu::gdt::GDT_DESC_CODEDATA>:
  20a01b:	10               	adc    BYTE PTR [rax-0x80],ah

000000000020a01c <cpu::gdt::GDT_DESC_DPL>:
  20a01c:	60                   	(bad)  

000000000020a01d <cpu::gdt::GDT_DESC_PRESENT>:
  20a01d:	80               	or     BYTE PTR [rdi],0x10

000000000020a01e <cpu::gdt::GDT_GRAN_LIMITHIMAST>:
  20a01e:	0f               	movups xmm4,XMMWORD PTR [rax]

000000000020a01f <cpu::gdt::GDT_GRAN_OS>:
  20a01f:	10                 	adc    BYTE PTR [rax],ah

000000000020a020 <cpu::gdt::GDT_GRAN_64BIT>:
  20a020:	20               	and    BYTE PTR [rax-0x80],al

000000000020a021 <cpu::gdt::GDT_GRAN_32BIT>:
  20a021:	40             	rex or BYTE PTR [rax],0x10

000000000020a022 <cpu::gdt::GDT_GRAN_4K>:
  20a022:	80               	or     BYTE PTR [rax],0x10

000000000020a023 <cpu::gdt::GDT_SELECTOR_KERNEL_CODE>:
  20a023:	08                 	or     BYTE PTR [rax],dl

000000000020a024 <cpu::gdt::GDT_SELECTOR_KERNEL_DATA>:
  20a024:	10                 	adc    BYTE PTR [rax],bl

000000000020a025 <cpu::gdt::GDT_SELECTOR_USER_DATA>:
  20a025:	18                 	sbb    BYTE PTR [rax],ah

000000000020a026 <cpu::gdt::GDT_SELECTOR_USER_CODE>:
  20a026:	20         	and    BYTE PTR [rdx+0xa0],dl

000000000020a027 <BASE_DESC>:
  20a027:	92                   	xchg   edx,eax

000000000020a028 <BASE_GRAN>:
  20a028:	a0 00 00 00 00 00 00 	movabs al,ds:0x4400000000000000
  20a02f:	00 44 
  20a031:	69 76 69 73 69 6f 6e 	imul   esi,DWORD PTR [rsi+0x69],0x6e6f6973
  20a038:	20 62 79             	and    BYTE PTR [rdx+0x79],ah
  20a03b:	20 5a 65             	and    BYTE PTR [rdx+0x65],bl
  20a03e:	72 6f                	jb     20a0af <BASE_GRAN+0x87>
  20a040:	00 44 65 62          	add    BYTE PTR [rbp+riz*2+0x62],al
  20a044:	75 67                	jne    20a0ad <BASE_GRAN+0x85>
  20a046:	00 4e 6f             	add    BYTE PTR [rsi+0x6f],cl
  20a049:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a04a:	2d 6d 61 73 6b       	sub    eax,0x6b73616d
  20a04f:	61                   	(bad)  
  20a050:	62                   	(bad)  
  20a051:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a052:	65 20 69 6e          	and    BYTE PTR gs:[rcx+0x6e],ch
  20a056:	74 65                	je     20a0bd <BASE_GRAN+0x95>
  20a058:	72 72                	jb     20a0cc <BASE_GRAN+0xa4>
  20a05a:	75 70                	jne    20a0cc <BASE_GRAN+0xa4>
  20a05c:	74 00                	je     20a05e <BASE_GRAN+0x36>
  20a05e:	42 72 65             	rex.X jb 20a0c6 <BASE_GRAN+0x9e>
  20a061:	61                   	(bad)  
  20a062:	6b 70 6f 69          	imul   esi,DWORD PTR [rax+0x6f],0x69
  20a066:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a067:	74 00                	je     20a069 <BASE_GRAN+0x41>
  20a069:	4f 76 65             	rex.WRXB jbe 20a0d1 <BASE_GRAN+0xa9>
  20a06c:	72 66                	jb     20a0d4 <BASE_GRAN+0xac>
  20a06e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a06f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a070:	77 00                	ja     20a072 <BASE_GRAN+0x4a>
  20a072:	42 6f                	rex.X outs dx,DWORD PTR ds:[rsi]
  20a074:	75 6e                	jne    20a0e4 <BASE_GRAN+0xbc>
  20a076:	64 20 52 61          	and    BYTE PTR fs:[rdx+0x61],dl
  20a07a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a07b:	67 65 20 45 78       	and    BYTE PTR gs:[ebp+0x78],al
  20a080:	63 65 65             	movsxd esp,DWORD PTR [rbp+0x65]
  20a083:	64 65 64 00 49 6e    	fs gs add BYTE PTR fs:[rcx+0x6e],cl
  20a089:	76 61                	jbe    20a0ec <BASE_GRAN+0xc4>
  20a08b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a08c:	69 64 20 4f 70 63 6f 	imul   esp,DWORD PTR [rax+riz*1+0x4f],0x646f6370
  20a093:	64 
  20a094:	65 00 44 65 76       	add    BYTE PTR gs:[rbp+riz*2+0x76],al
  20a099:	69 63 65 20 4e 6f 74 	imul   esp,DWORD PTR [rbx+0x65],0x746f4e20
  20a0a0:	20 41 76             	and    BYTE PTR [rcx+0x76],al
  20a0a3:	61                   	(bad)  
  20a0a4:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x4400656c
  20a0ab:	44 
  20a0ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a0ad:	75 62                	jne    20a111 <BASE_GRAN+0xe9>
  20a0af:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a0b0:	65 20 46 61          	and    BYTE PTR gs:[rsi+0x61],al
  20a0b4:	75 6c                	jne    20a122 <BASE_GRAN+0xfa>
  20a0b6:	74 00                	je     20a0b8 <BASE_GRAN+0x90>
  20a0b8:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
  20a0ba:	70 72                	jo     20a12e <BASE_GRAN+0x106>
  20a0bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a0bd:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
  20a0c0:	73 6f                	jae    20a131 <BASE_GRAN+0x109>
  20a0c2:	72 20                	jb     20a0e4 <BASE_GRAN+0xbc>
  20a0c4:	53                   	push   rbx
  20a0c5:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
  20a0c8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a0ca:	74 20                	je     20a0ec <BASE_GRAN+0xc4>
  20a0cc:	4f 76 65             	rex.WRXB jbe 20a134 <BASE_GRAN+0x10c>
  20a0cf:	72 72                	jb     20a143 <BASE_GRAN+0x11b>
  20a0d1:	75 6e                	jne    20a141 <BASE_GRAN+0x119>
  20a0d3:	00 49 6e             	add    BYTE PTR [rcx+0x6e],cl
  20a0d6:	76 61                	jbe    20a139 <BASE_GRAN+0x111>
  20a0d8:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a0d9:	69 64 20 54 53 53 00 	imul   esp,DWORD PTR [rax+riz*1+0x54],0x53005353
  20a0e0:	53 
  20a0e1:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
  20a0e4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a0e6:	74 20                	je     20a108 <BASE_GRAN+0xe0>
  20a0e8:	4e 6f                	rex.WRX outs dx,DWORD PTR ds:[rsi]
  20a0ea:	74 20                	je     20a10c <BASE_GRAN+0xe4>
  20a0ec:	50                   	push   rax
  20a0ed:	72 65                	jb     20a154 <BASE_GRAN+0x12c>
  20a0ef:	73 65                	jae    20a156 <BASE_GRAN+0x12e>
  20a0f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a0f2:	74 00                	je     20a0f4 <BASE_GRAN+0xcc>
  20a0f4:	53                   	push   rbx
  20a0f5:	74 61                	je     20a158 <BASE_GRAN+0x130>
  20a0f7:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
  20a0fa:	53                   	push   rbx
  20a0fb:	65 67 6d             	gs ins DWORD PTR es:[edi],dx
  20a0fe:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a100:	74 20                	je     20a122 <BASE_GRAN+0xfa>
  20a102:	46 61                	rex.RX (bad) 
  20a104:	75 6c                	jne    20a172 <BASE_GRAN+0x14a>
  20a106:	74 00                	je     20a108 <BASE_GRAN+0xe0>
  20a108:	47                   	rex.RXB
  20a109:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a10b:	65 72 61             	gs jb  20a16f <BASE_GRAN+0x147>
  20a10e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a10f:	20 50 72             	and    BYTE PTR [rax+0x72],dl
  20a112:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a113:	74 65                	je     20a17a <BASE_GRAN+0x152>
  20a115:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  20a119:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a11a:	20 46 61             	and    BYTE PTR [rsi+0x61],al
  20a11d:	75 6c                	jne    20a18b <BASE_GRAN+0x163>
  20a11f:	74 00                	je     20a121 <BASE_GRAN+0xf9>
  20a121:	50                   	push   rax
  20a122:	61                   	(bad)  
  20a123:	67 65 20 46 61       	and    BYTE PTR gs:[esi+0x61],al
  20a128:	75 6c                	jne    20a196 <BASE_GRAN+0x16e>
  20a12a:	74 00                	je     20a12c <BASE_GRAN+0x104>
  20a12c:	52                   	push   rdx
  20a12d:	65 73 65             	gs jae 20a195 <BASE_GRAN+0x16d>
  20a130:	72 76                	jb     20a1a8 <BASE_GRAN+0x180>
  20a132:	65 64 00 78 38       	gs add BYTE PTR fs:[rax+0x38],bh
  20a137:	37                   	(bad)  
  20a138:	20 46 6c             	and    BYTE PTR [rsi+0x6c],al
  20a13b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a13c:	61                   	(bad)  
  20a13d:	74 69                	je     20a1a8 <BASE_GRAN+0x180>
  20a13f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a140:	67 2d 50 6f 69 6e    	addr32 sub eax,0x6e696f50
  20a146:	74 00                	je     20a148 <BASE_GRAN+0x120>
  20a148:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
  20a14a:	69 67 6e 6d 65 6e 74 	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
  20a151:	20 43 68             	and    BYTE PTR [rbx+0x68],al
  20a154:	65 63 6b 00          	movsxd ebp,DWORD PTR gs:[rbx+0x0]
  20a158:	4d 61                	rex.WRB (bad) 
  20a15a:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
  20a15d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a15e:	65 20 43 68          	and    BYTE PTR gs:[rbx+0x68],al
  20a162:	65 63 6b 00          	movsxd ebp,DWORD PTR gs:[rbx+0x0]
  20a166:	53                   	push   rbx
  20a167:	49                   	rex.WB
  20a168:	4d                   	rex.WRB
  20a169:	44 20 46 6c          	and    BYTE PTR [rsi+0x6c],r8b
  20a16d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a16e:	61                   	(bad)  
  20a16f:	74 69                	je     20a1da <BASE_GRAN+0x1b2>
  20a171:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a172:	67 2d 50 6f 69 6e    	addr32 sub eax,0x6e696f50
  20a178:	74 00                	je     20a17a <BASE_GRAN+0x152>
  20a17a:	56                   	push   rsi
  20a17b:	69 72 74 75 61 6c 69 	imul   esi,DWORD PTR [rdx+0x74],0x696c6175
  20a182:	7a 61                	jp     20a1e5 <BASE_GRAN+0x1bd>
  20a184:	74 69                	je     20a1ef <BASE_GRAN+0x1c7>
  20a186:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a188:	00 53 65             	add    BYTE PTR [rbx+0x65],dl
  20a18b:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
  20a18e:	69 74 79 00 3c 75 6e 	imul   esi,DWORD PTR [rcx+rdi*2+0x0],0x696e753c
  20a195:	69 
  20a196:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
  20a199:	74 69                	je     20a204 <BASE_GRAN+0x1dc>
  20a19b:	66 69 65 64 20 66    	imul   sp,WORD PTR [rbp+0x64],0x6620
  20a1a1:	75 6e                	jne    20a211 <BASE_GRAN+0x1e9>
  20a1a3:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  20a1a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a1a8:	3e 00 00             	add    BYTE PTR ds:[rax],al
  20a1ab:	00 00                	add    BYTE PTR [rax],al
  20a1ad:	00 00                	add    BYTE PTR [rax],al
  20a1af:	00 0a                	add    BYTE PTR [rdx],cl
  20a1b1:	09 46 41             	or     DWORD PTR [rsi+0x41],eax
  20a1b4:	54                   	push   rsp
  20a1b5:	41                   	rex.B
  20a1b6:	4c 20 45 52          	rex.WR and BYTE PTR [rbp+0x52],r8b
  20a1ba:	52                   	push   rdx
  20a1bb:	4f 52                	rex.WRXB push r10
  20a1bd:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a1bf:	43 50                	rex.XB push r8
  20a1c1:	55                   	push   rbp
  20a1c2:	20 45 78             	and    BYTE PTR [rbp+0x78],al
  20a1c5:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
  20a1c8:	74 69                	je     20a233 <BASE_GRAN+0x20b>
  20a1ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a1cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a1cc:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a1ce:	25 73 0a 0a 00       	and    eax,0xa0a73
  20a1d3:	09 45 52             	or     DWORD PTR [rbp+0x52],eax
  20a1d6:	52                   	push   rdx
  20a1d7:	4f 52                	rex.WRXB push r10
  20a1d9:	20 43 4f             	and    BYTE PTR [rbx+0x4f],al
  20a1dc:	44                   	rex.R
  20a1dd:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
  20a1e0:	25 78 0a 0a 0a       	and    eax,0xa0a0a78
  20a1e5:	00 00                	add    BYTE PTR [rax],al
  20a1e7:	00 09                	add    BYTE PTR [rcx],cl
  20a1e9:	09 20                	or     DWORD PTR [rax],esp
  20a1eb:	3e 3e 3e 20 50 61    	ds ds and BYTE PTR ds:[rax+0x61],dl
  20a1f1:	67 65 20 46 61       	and    BYTE PTR gs:[esi+0x61],al
  20a1f6:	75 6c                	jne    20a264 <BASE_GRAN+0x23c>
  20a1f8:	74 20                	je     20a21a <BASE_GRAN+0x1f2>
  20a1fa:	61                   	(bad)  
  20a1fb:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
  20a1fe:	73 73                	jae    20a273 <BASE_GRAN+0x24b>
  20a200:	69 6e 67 20 25 78 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa782520
  20a207:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  20a20a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a20b:	74 65                	je     20a272 <BASE_GRAN+0x24a>
  20a20d:	63 74 65 64          	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
  20a211:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
  20a214:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a215:	2d 70 72 65 73       	sub    eax,0x73657270
  20a21a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a21c:	74 00                	je     20a21e <BASE_GRAN+0x1f6>
  20a21e:	09 09                	or     DWORD PTR [rcx],ecx
  20a220:	09 20                	or     DWORD PTR [rax],esp
  20a222:	3e 3e 20 61 63       	ds and BYTE PTR ds:[rcx+0x63],ah
  20a227:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
  20a22a:	73 65                	jae    20a291 <BASE_GRAN+0x269>
  20a22c:	64 20 25 73 20 70 61 	and    BYTE PTR fs:[rip+0x61702073],ah        # 6190c2a6 <__kernel_end+0x616fa2a6>
  20a233:	67 65 0a 00          	or     al,BYTE PTR gs:[eax]
  20a237:	00 09                	add    BYTE PTR [rcx],cl
  20a239:	09 09                	or     DWORD PTR [rcx],ecx
  20a23b:	20 3e                	and    BYTE PTR [rsi],bh
  20a23d:	3e 20 65 78          	and    BYTE PTR ds:[rbp+0x78],ah
  20a241:	65 63 75 74          	movsxd esi,DWORD PTR gs:[rbp+0x74]
  20a245:	65 64 20 6e 6f       	gs and BYTE PTR fs:[rsi+0x6f],ch
  20a24a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a24b:	2d 65 78 65 63       	sub    eax,0x63657865
  20a250:	75 74                	jne    20a2c6 <BASE_GRAN+0x29e>
  20a252:	61                   	(bad)  
  20a253:	62                   	(bad)  
  20a254:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a255:	65 20 70 61          	and    BYTE PTR gs:[rax+0x61],dh
  20a259:	67 65 0a 00          	or     al,BYTE PTR gs:[eax]
  20a25d:	77 72                	ja     20a2d1 <BASE_GRAN+0x2a9>
  20a25f:	69 74 65 00 72 65 61 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x64616572
  20a266:	64 
  20a267:	00 09                	add    BYTE PTR [rcx],cl
  20a269:	09 09                	or     DWORD PTR [rcx],ecx
  20a26b:	20 3e                	and    BYTE PTR [rsi],bh
  20a26d:	3e 20 64 75 72       	and    BYTE PTR ds:[rbp+rsi*2+0x72],ah
  20a272:	69 6e 67 20 25 73 0a 	imul   ebp,DWORD PTR [rsi+0x67],0xa732520
  20a279:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
  20a27c:	65 72 73             	gs jb  20a2f2 <BASE_GRAN+0x2ca>
  20a27f:	70 61                	jo     20a2e2 <BASE_GRAN+0x2ba>
  20a281:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
  20a284:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
  20a288:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  20a28a:	00 09                	add    BYTE PTR [rcx],cl
  20a28c:	09 09                	or     DWORD PTR [rcx],ecx
  20a28e:	20 3e                	and    BYTE PTR [rsi],bh
  20a290:	3e 20 69 6e          	and    BYTE PTR ds:[rcx+0x6e],ch
  20a294:	73 69                	jae    20a2ff <BASE_GRAN+0x2d7>
  20a296:	64 65 20 25 73 0a 00 	fs and BYTE PTR gs:[rip+0xa73],ah        # 20ad11 <kernel_font+0x191>
  20a29d:	00 
  20a29e:	00 00                	add    BYTE PTR [rax],al
  20a2a0:	0a 09                	or     cl,BYTE PTR [rcx]
  20a2a2:	09 20                	or     DWORD PTR [rax],esp
  20a2a4:	3e 3e 3e 20 5b 64    	ds ds and BYTE PTR ds:[rbx+0x64],bl
  20a2aa:	65 2d 4b 41 53 4c    	gs sub eax,0x4c53414b
  20a2b0:	52                   	push   rdx
  20a2b1:	27                   	(bad)  
  20a2b2:	64 5d                	fs pop rbp
  20a2b4:	20 49 6e             	and    BYTE PTR [rcx+0x6e],cl
  20a2b7:	73 74                	jae    20a32d <BASE_GRAN+0x305>
  20a2b9:	72 75                	jb     20a330 <BASE_GRAN+0x308>
  20a2bb:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  20a2bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a2c0:	20 50 6f             	and    BYTE PTR [rax+0x6f],dl
  20a2c3:	69 6e 74 65 72 0a 00 	imul   ebp,DWORD PTR [rsi+0x74],0xa7265
  20a2ca:	09 09                	or     DWORD PTR [rcx],ecx
  20a2cc:	09 20                	or     DWORD PTR [rax],esp
  20a2ce:	3e 3e 20 25 78 20 0a 	ds and BYTE PTR ds:[rip+0xa2078],ah        # 2ac34e <__kernel_end+0x9a34e>
  20a2d5:	00 
  20a2d6:	0a 09                	or     cl,BYTE PTR [rcx]
  20a2d8:	09 20                	or     DWORD PTR [rax],esp
  20a2da:	3e 3e 3e 20 53 74    	ds ds and BYTE PTR ds:[rbx+0x74],dl
  20a2e0:	61                   	(bad)  
  20a2e1:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
  20a2e4:	72 61                	jb     20a347 <BASE_GRAN+0x31f>
  20a2e6:	63 65 0a             	movsxd esp,DWORD PTR [rbp+0xa]
  20a2e9:	00 09                	add    BYTE PTR [rcx],cl
  20a2eb:	09 09                	or     DWORD PTR [rcx],ecx
  20a2ed:	20 3e                	and    BYTE PTR [rsi],bh
  20a2ef:	3e 20 25 73 0a 00 00 	and    BYTE PTR ds:[rip+0xa73],ah        # 20ad69 <kernel_font+0x1e9>
  20a2f6:	00 00                	add    BYTE PTR [rax],al
  20a2f8:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
  20a2fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a2fb:	76 65                	jbe    20a362 <BASE_GRAN+0x33a>
  20a2fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a2fe:	74 69                	je     20a369 <BASE_GRAN+0x341>
  20a300:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a301:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a302:	61                   	(bad)  
  20a303:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a304:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  20a307:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a308:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a309:	72 79                	jb     20a384 <BASE_GRAN+0x35c>
  20a30b:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
  20a30e:	73 65                	jae    20a375 <BASE_GRAN+0x34d>
  20a310:	72 76                	jb     20a388 <BASE_GRAN+0x360>
  20a312:	65 64 20 6d 65       	gs and BYTE PTR fs:[rbp+0x65],ch
  20a317:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a318:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a319:	72 79                	jb     20a394 <BASE_GRAN+0x36c>
  20a31b:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
  20a31e:	63 6c 61 69          	movsxd ebp,DWORD PTR [rcx+riz*2+0x69]
  20a322:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a323:	61                   	(bad)  
  20a324:	62                   	(bad)  
  20a325:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a326:	65 20 41 43          	and    BYTE PTR gs:[rcx+0x43],al
  20a32a:	50                   	push   rax
  20a32b:	49 20 6d 65          	rex.WB and BYTE PTR [r13+0x65],bpl
  20a32f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a331:	72 79                	jb     20a3ac <BASE_GRAN+0x384>
  20a333:	00 41 43             	add    BYTE PTR [rcx+0x43],al
  20a336:	50                   	push   rax
  20a337:	49 20 4e 56          	rex.WB and BYTE PTR [r14+0x56],cl
  20a33b:	53                   	push   rbx
  20a33c:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  20a33f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a340:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a341:	72 79                	jb     20a3bc <BASE_GRAN+0x394>
  20a343:	00 46 61             	add    BYTE PTR [rsi+0x61],al
  20a346:	75 6c                	jne    20a3b4 <BASE_GRAN+0x38c>
  20a348:	74 79                	je     20a3c3 <BASE_GRAN+0x39b>
  20a34a:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  20a34d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a34e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a34f:	72 79                	jb     20a3ca <BASE_GRAN+0x3a2>
  20a351:	00 4b 65             	add    BYTE PTR [rbx+0x65],cl
  20a354:	72 6e                	jb     20a3c4 <BASE_GRAN+0x39c>
  20a356:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  20a358:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  20a35b:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a35c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a35d:	72 79                	jb     20a3d8 <BASE_GRAN+0x3b0>
  20a35f:	00 52 65             	add    BYTE PTR [rdx+0x65],dl
  20a362:	63 6c 61 69          	movsxd ebp,DWORD PTR [rcx+riz*2+0x69]
  20a366:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a367:	61                   	(bad)  
  20a368:	62                   	(bad)  
  20a369:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a36a:	65 20 62 6f          	and    BYTE PTR gs:[rdx+0x6f],ah
  20a36e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a36f:	74 6c                	je     20a3dd <BASE_GRAN+0x3b5>
  20a371:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a372:	61                   	(bad)  
  20a373:	64 65 72 20          	fs gs jb 20a397 <BASE_GRAN+0x36f>
  20a377:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a378:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20a37a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a37b:	72 79                	jb     20a3f6 <BASE_GRAN+0x3ce>
  20a37d:	00 55 6e             	add    BYTE PTR [rbp+0x6e],dl
  20a380:	69 64 65 6e 74 69 66 	imul   esp,DWORD PTR [rbp+riz*2+0x6e],0x69666974
  20a387:	69 
  20a388:	65 64 20 6d 65       	gs and BYTE PTR fs:[rbp+0x65],ch
  20a38d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a38e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a38f:	72 79                	jb     20a40a <BASE_GRAN+0x3e2>
  20a391:	00 00                	add    BYTE PTR [rax],al
  20a393:	00 ea                	add    dl,ch
  20a395:	83 ff ff             	cmp    edi,0xffffffff
  20a398:	ab                   	stos   DWORD PTR es:[rdi],eax
  20a399:	83 ff ff             	cmp    edi,0xffffffff
  20a39c:	b4 83                	mov    ah,0x83
  20a39e:	ff                   	(bad)  
  20a39f:	ff                   	(bad)  
  20a3a0:	bd 83 ff ff c6       	mov    ebp,0xc6ffff83
  20a3a5:	83 ff ff             	cmp    edi,0xffffffff
  20a3a8:	cf                   	iret   
  20a3a9:	83 ff ff             	cmp    edi,0xffffffff
  20a3ac:	ea                   	(bad)  
  20a3ad:	83 ff ff             	cmp    edi,0xffffffff
  20a3b0:	ea                   	(bad)  
  20a3b1:	83 ff ff             	cmp    edi,0xffffffff
  20a3b4:	ea                   	(bad)  
  20a3b5:	83 ff ff             	cmp    edi,0xffffffff
  20a3b8:	ea                   	(bad)  
  20a3b9:	83 ff ff             	cmp    edi,0xffffffff
  20a3bc:	d8 83 ff ff 40 20    	fadd   DWORD PTR [rbx+0x2040ffff]
  20a3c2:	30 78 00             	xor    BYTE PTR [rax+0x0],bh
  20a3c5:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a3c7:	00 2c 20             	add    BYTE PTR [rax+riz*1],ch
  20a3ca:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  20a3cc:	72 20                	jb     20a3ee <BASE_GRAN+0x3c6>
  20a3ce:	00 20                	add    BYTE PTR [rax],ah
  20a3d0:	70 61                	jo     20a433 <BASE_GRAN+0x40b>
  20a3d2:	67 65 73 0a          	addr32 gs jae 20a3e0 <BASE_GRAN+0x3b8>
  20a3d6:	00 4d 65             	add    BYTE PTR [rbp+0x65],cl
  20a3d9:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a3da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a3db:	72 79                	jb     20a456 <BASE_GRAN+0x42e>
  20a3dd:	20 73 69             	and    BYTE PTR [rbx+0x69],dh
  20a3e0:	7a 65                	jp     20a447 <BASE_GRAN+0x41f>
  20a3e2:	20 28                	and    BYTE PTR [rax],ch
  20a3e4:	4d 69 42 29 3a 20 00 	imul   r8,QWORD PTR [r10+0x29],0xa00203a
  20a3eb:	0a 
  20a3ec:	42 69 74 6d 61 70 20 	imul   esi,DWORD PTR [rbp+r13*2+0x61],0x69732070
  20a3f3:	73 69 
  20a3f5:	7a 65                	jp     20a45c <BASE_GRAN+0x434>
  20a3f7:	20 28                	and    BYTE PTR [rax],ch
  20a3f9:	42 29 3a             	rex.X sub DWORD PTR [rdx],edi
  20a3fc:	20 00                	and    BYTE PTR [rax],al
  20a3fe:	0a 00                	or     al,BYTE PTR [rax]
  20a400:	24 52                	and    al,0x52
  20a402:	45                   	rex.RB
  20a403:	44 21 3e             	and    DWORD PTR [rsi],r15d
  20a406:	20 24 4c             	and    BYTE PTR [rsp+rcx*2],ah
  20a409:	49                   	rex.WB
  20a40a:	47                   	rex.RXB
  20a40b:	48 54                	rex.W push rsp
  20a40d:	5f                   	pop    rdi
  20a40e:	42                   	rex.X
  20a40f:	4c 55                	rex.WR push rbp
  20a411:	45 21 69 6d          	and    DWORD PTR [r9+0x6d],r13d
  20a415:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a416:	75 73                	jne    20a48b <BASE_GRAN+0x463>
  20a418:	2d 63 6d 64 20       	sub    eax,0x20646d63
  20a41d:	24 52                	and    al,0x52
  20a41f:	45                   	rex.RB
  20a420:	44 21 3e             	and    DWORD PTR [rsi],r15d
  20a423:	3e 20 00             	and    BYTE PTR ds:[rax],al
  20a426:	08 00                	or     BYTE PTR [rax],al
  20a428:	0a 00                	or     al,BYTE PTR [rax]
  20a42a:	0a 09                	or     cl,BYTE PTR [rcx]
  20a42c:	24 43                	and    al,0x43
  20a42e:	59                   	pop    rcx
  20a42f:	41                   	rex.B
  20a430:	4e 21 69 6d          	rex.WRX and QWORD PTR [rcx+0x6d],r13
  20a434:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a435:	75 73                	jne    20a4aa <BASE_GRAN+0x482>
  20a437:	20 76 31             	and    BYTE PTR [rsi+0x31],dh
  20a43a:	2e 30 24 57          	xor    BYTE PTR cs:[rdi+rdx*2],ah
  20a43e:	48                   	rex.W
  20a43f:	49 54                	rex.WB push r12
  20a441:	45 21 0a             	and    DWORD PTR [r10],r9d
  20a444:	0a 00                	or     al,BYTE PTR [rax]
  20a446:	0a 09                	or     cl,BYTE PTR [rcx]
  20a448:	24 4c                	and    al,0x4c
  20a44a:	49                   	rex.WB
  20a44b:	47                   	rex.RXB
  20a44c:	48 54                	rex.W push rsp
  20a44e:	5f                   	pop    rdi
  20a44f:	47 52                	rex.RXB push r10
  20a451:	45 59                	rex.RB pop r9
  20a453:	21 74 6f 74          	and    DWORD PTR [rdi+rbp*2+0x74],esi
  20a457:	61                   	(bad)  
  20a458:	6c                   	ins    BYTE PTR es:[rdi],dx
  20a459:	20 72 61             	and    BYTE PTR [rdx+0x61],dh
  20a45c:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a45d:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a45f:	00 4d 0a             	add    BYTE PTR [rbp+0xa],cl
  20a462:	09 24 4c             	or     DWORD PTR [rsp+rcx*2],esp
  20a465:	49                   	rex.WB
  20a466:	47                   	rex.RXB
  20a467:	48 54                	rex.W push rsp
  20a469:	5f                   	pop    rdi
  20a46a:	47 52                	rex.RXB push r10
  20a46c:	45 59                	rex.RB pop r9
  20a46e:	21 66 72             	and    DWORD PTR [rsi+0x72],esp
  20a471:	65 65 20 72 61       	gs and BYTE PTR gs:[rdx+0x61],dh
  20a476:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a477:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a479:	00 4d 0a             	add    BYTE PTR [rbp+0xa],cl
  20a47c:	09 24 4c             	or     DWORD PTR [rsp+rcx*2],esp
  20a47f:	49                   	rex.WB
  20a480:	47                   	rex.RXB
  20a481:	48 54                	rex.W push rsp
  20a483:	5f                   	pop    rdi
  20a484:	47 52                	rex.RXB push r10
  20a486:	45 59                	rex.RB pop r9
  20a488:	21 75 73             	and    DWORD PTR [rbp+0x73],esi
  20a48b:	65 64 20 72 61       	gs and BYTE PTR fs:[rdx+0x61],dh
  20a490:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a491:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a493:	00 4d 0a             	add    BYTE PTR [rbp+0xa],cl
  20a496:	0a 00                	or     al,BYTE PTR [rax]
  20a498:	0a 09                	or     cl,BYTE PTR [rcx]
  20a49a:	73 75                	jae    20a511 <BASE_GRAN+0x4e9>
  20a49c:	70 70                	jo     20a50e <BASE_GRAN+0x4e6>
  20a49e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a49f:	72 74                	jb     20a515 <BASE_GRAN+0x4ed>
  20a4a1:	73 20                	jae    20a4c3 <BASE_GRAN+0x49b>
  20a4a3:	78 36                	js     20a4db <BASE_GRAN+0x4b3>
  20a4a5:	34 3a                	xor    al,0x3a
  20a4a7:	20 24 47             	and    BYTE PTR [rdi+rax*2],ah
  20a4aa:	52                   	push   rdx
  20a4ab:	45                   	rex.RB
  20a4ac:	45                   	rex.RB
  20a4ad:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a4b1:	73 0a                	jae    20a4bd <BASE_GRAN+0x495>
  20a4b3:	00 09                	add    BYTE PTR [rcx],cl
  20a4b5:	73 75                	jae    20a52c <BASE_GRAN+0x504>
  20a4b7:	70 70                	jo     20a529 <BASE_GRAN+0x501>
  20a4b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a4ba:	72 74                	jb     20a530 <BASE_GRAN+0x508>
  20a4bc:	73 20                	jae    20a4de <BASE_GRAN+0x4b6>
  20a4be:	61                   	(bad)  
  20a4bf:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
  20a4c2:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a4c4:	24 47                	and    al,0x47
  20a4c6:	52                   	push   rdx
  20a4c7:	45                   	rex.RB
  20a4c8:	45                   	rex.RB
  20a4c9:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a4cd:	73 0a                	jae    20a4d9 <BASE_GRAN+0x4b1>
  20a4cf:	00 09                	add    BYTE PTR [rcx],cl
  20a4d1:	73 75                	jae    20a548 <BASE_GRAN+0x520>
  20a4d3:	70 70                	jo     20a545 <BASE_GRAN+0x51d>
  20a4d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a4d6:	72 74                	jb     20a54c <BASE_GRAN+0x524>
  20a4d8:	73 20                	jae    20a4fa <BASE_GRAN+0x4d2>
  20a4da:	61                   	(bad)  
  20a4db:	70 69                	jo     20a546 <BASE_GRAN+0x51e>
  20a4dd:	63 3a                	movsxd edi,DWORD PTR [rdx]
  20a4df:	20 00                	and    BYTE PTR [rax],al
  20a4e1:	24 47                	and    al,0x47
  20a4e3:	52                   	push   rdx
  20a4e4:	45                   	rex.RB
  20a4e5:	45                   	rex.RB
  20a4e6:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a4ea:	73 0a                	jae    20a4f6 <BASE_GRAN+0x4ce>
  20a4ec:	00 24 52             	add    BYTE PTR [rdx+rdx*2],ah
  20a4ef:	45                   	rex.RB
  20a4f0:	44 21 6e 6f          	and    DWORD PTR [rsi+0x6f],r13d
  20a4f4:	0a 00                	or     al,BYTE PTR [rax]
  20a4f6:	09 73 75             	or     DWORD PTR [rbx+0x75],esi
  20a4f9:	70 70                	jo     20a56b <BASE_GRAN+0x543>
  20a4fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a4fc:	72 74                	jb     20a572 <BASE_GRAN+0x54a>
  20a4fe:	73 20                	jae    20a520 <BASE_GRAN+0x4f8>
  20a500:	70 61                	jo     20a563 <BASE_GRAN+0x53b>
  20a502:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  20a505:	24 47                	and    al,0x47
  20a507:	52                   	push   rdx
  20a508:	45                   	rex.RB
  20a509:	45                   	rex.RB
  20a50a:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a50e:	73 0a                	jae    20a51a <BASE_GRAN+0x4f2>
  20a510:	00 09                	add    BYTE PTR [rcx],cl
  20a512:	73 75                	jae    20a589 <BASE_GRAN+0x561>
  20a514:	70 70                	jo     20a586 <BASE_GRAN+0x55e>
  20a516:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a517:	72 74                	jb     20a58d <BASE_GRAN+0x565>
  20a519:	73 20                	jae    20a53b <BASE_GRAN+0x513>
  20a51b:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a51c:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a51d:	78 3a                	js     20a559 <BASE_GRAN+0x531>
  20a51f:	20 24 47             	and    BYTE PTR [rdi+rax*2],ah
  20a522:	52                   	push   rdx
  20a523:	45                   	rex.RB
  20a524:	45                   	rex.RB
  20a525:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a529:	73 0a                	jae    20a535 <BASE_GRAN+0x50d>
  20a52b:	00 09                	add    BYTE PTR [rcx],cl
  20a52d:	73 75                	jae    20a5a4 <BASE_GRAN+0x57c>
  20a52f:	70 70                	jo     20a5a1 <BASE_GRAN+0x579>
  20a531:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a532:	72 74                	jb     20a5a8 <BASE_GRAN+0x580>
  20a534:	73 20                	jae    20a556 <BASE_GRAN+0x52e>
  20a536:	73 73                	jae    20a5ab <BASE_GRAN+0x583>
  20a538:	65 3a 20             	cmp    ah,BYTE PTR gs:[rax]
  20a53b:	24 47                	and    al,0x47
  20a53d:	52                   	push   rdx
  20a53e:	45                   	rex.RB
  20a53f:	45                   	rex.RB
  20a540:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a544:	73 0a                	jae    20a550 <BASE_GRAN+0x528>
  20a546:	00 09                	add    BYTE PTR [rcx],cl
  20a548:	73 75                	jae    20a5bf <BASE_GRAN+0x597>
  20a54a:	70 70                	jo     20a5bc <BASE_GRAN+0x594>
  20a54c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a54d:	72 74                	jb     20a5c3 <BASE_GRAN+0x59b>
  20a54f:	73 20                	jae    20a571 <BASE_GRAN+0x549>
  20a551:	73 73                	jae    20a5c6 <BASE_GRAN+0x59e>
  20a553:	65 32 3a             	xor    bh,BYTE PTR gs:[rdx]
  20a556:	20 24 47             	and    BYTE PTR [rdi+rax*2],ah
  20a559:	52                   	push   rdx
  20a55a:	45                   	rex.RB
  20a55b:	45                   	rex.RB
  20a55c:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a560:	73 0a                	jae    20a56c <BASE_GRAN+0x544>
  20a562:	00 09                	add    BYTE PTR [rcx],cl
  20a564:	73 75                	jae    20a5db <BASE_GRAN+0x5b3>
  20a566:	70 70                	jo     20a5d8 <BASE_GRAN+0x5b0>
  20a568:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a569:	72 74                	jb     20a5df <BASE_GRAN+0x5b7>
  20a56b:	73 20                	jae    20a58d <BASE_GRAN+0x565>
  20a56d:	73 73                	jae    20a5e2 <BASE_GRAN+0x5ba>
  20a56f:	65 33 3a             	xor    edi,DWORD PTR gs:[rdx]
  20a572:	20 00                	and    BYTE PTR [rax],al
  20a574:	09 73 75             	or     DWORD PTR [rbx+0x75],esi
  20a577:	70 70                	jo     20a5e9 <BASE_GRAN+0x5c1>
  20a579:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a57a:	72 74                	jb     20a5f0 <BASE_GRAN+0x5c8>
  20a57c:	73 20                	jae    20a59e <BASE_GRAN+0x576>
  20a57e:	73 73                	jae    20a5f3 <BASE_GRAN+0x5cb>
  20a580:	73 65                	jae    20a5e7 <BASE_GRAN+0x5bf>
  20a582:	33 3a                	xor    edi,DWORD PTR [rdx]
  20a584:	20 00                	and    BYTE PTR [rax],al
  20a586:	09 73 75             	or     DWORD PTR [rbx+0x75],esi
  20a589:	70 70                	jo     20a5fb <BASE_GRAN+0x5d3>
  20a58b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a58c:	72 74                	jb     20a602 <BASE_GRAN+0x5da>
  20a58e:	73 20                	jae    20a5b0 <BASE_GRAN+0x588>
  20a590:	73 73                	jae    20a605 <BASE_GRAN+0x5dd>
  20a592:	65 34 2e             	gs xor al,0x2e
  20a595:	31 3a                	xor    DWORD PTR [rdx],edi
  20a597:	20 00                	and    BYTE PTR [rax],al
  20a599:	09 73 75             	or     DWORD PTR [rbx+0x75],esi
  20a59c:	70 70                	jo     20a60e <BASE_GRAN+0x5e6>
  20a59e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a59f:	72 74                	jb     20a615 <BASE_GRAN+0x5ed>
  20a5a1:	73 20                	jae    20a5c3 <BASE_GRAN+0x59b>
  20a5a3:	73 73                	jae    20a618 <BASE_GRAN+0x5f0>
  20a5a5:	65 34 2e             	gs xor al,0x2e
  20a5a8:	32 3a                	xor    bh,BYTE PTR [rdx]
  20a5aa:	20 00                	and    BYTE PTR [rax],al
  20a5ac:	09 73 75             	or     DWORD PTR [rbx+0x75],esi
  20a5af:	70 70                	jo     20a621 <BASE_GRAN+0x5f9>
  20a5b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a5b2:	72 74                	jb     20a628 <BASE_GRAN+0x600>
  20a5b4:	73 20                	jae    20a5d6 <BASE_GRAN+0x5ae>
  20a5b6:	61                   	(bad)  
  20a5b7:	76 78                	jbe    20a631 <BASE_GRAN+0x609>
  20a5b9:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a5bb:	00 24 47             	add    BYTE PTR [rdi+rax*2],ah
  20a5be:	52                   	push   rdx
  20a5bf:	45                   	rex.RB
  20a5c0:	45                   	rex.RB
  20a5c1:	4e 21 79 65          	rex.WRX and QWORD PTR [rcx+0x65],r15
  20a5c5:	73 0a                	jae    20a5d1 <BASE_GRAN+0x5a9>
  20a5c7:	0a 00                	or     al,BYTE PTR [rax]
  20a5c9:	24 52                	and    al,0x52
  20a5cb:	45                   	rex.RB
  20a5cc:	44 21 6e 6f          	and    DWORD PTR [rsi+0x6f],r13d
  20a5d0:	0a 0a                	or     cl,BYTE PTR [rdx]
  20a5d2:	00 00                	add    BYTE PTR [rax],al
  20a5d4:	00 00                	add    BYTE PTR [rax],al
  20a5d6:	00 00                	add    BYTE PTR [rax],al
  20a5d8:	0a 09                	or     cl,BYTE PTR [rcx]
  20a5da:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a5db:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20a5dd:	69 6e 66 6f 3a 20 20 	imul   ebp,DWORD PTR [rsi+0x66],0x20203a6f
  20a5e4:	20 20                	and    BYTE PTR [rax],ah
  20a5e6:	20 20                	and    BYTE PTR [rax],ah
  20a5e8:	20 20                	and    BYTE PTR [rax],ah
  20a5ea:	24 4c                	and    al,0x4c
  20a5ec:	49                   	rex.WB
  20a5ed:	47                   	rex.RXB
  20a5ee:	48 54                	rex.W push rsp
  20a5f0:	5f                   	pop    rdi
  20a5f1:	47 52                	rex.RXB push r10
  20a5f3:	45                   	rex.RB
  20a5f4:	45                   	rex.RB
  20a5f5:	4e 21 67 65          	rex.WRX and QWORD PTR [rdi+0x65],r12
  20a5f9:	74 20                	je     20a61b <BASE_GRAN+0x5f3>
  20a5fb:	69 6e 66 6f 20 61 62 	imul   ebp,DWORD PTR [rsi+0x66],0x6261206f
  20a602:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a603:	75 74                	jne    20a679 <BASE_GRAN+0x651>
  20a605:	20 6d 65             	and    BYTE PTR [rbp+0x65],ch
  20a608:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a609:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a60a:	72 79                	jb     20a685 <BASE_GRAN+0x65d>
  20a60c:	0a 00                	or     al,BYTE PTR [rax]
  20a60e:	00 00                	add    BYTE PTR [rax],al
  20a610:	09 63 70             	or     DWORD PTR [rbx+0x70],esp
  20a613:	75 69                	jne    20a67e <BASE_GRAN+0x656>
  20a615:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a616:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  20a618:	3a 20                	cmp    ah,BYTE PTR [rax]
  20a61a:	20 20                	and    BYTE PTR [rax],ah
  20a61c:	20 20                	and    BYTE PTR [rax],ah
  20a61e:	20 20                	and    BYTE PTR [rax],ah
  20a620:	20 20                	and    BYTE PTR [rax],ah
  20a622:	20 24 4c             	and    BYTE PTR [rsp+rcx*2],ah
  20a625:	49                   	rex.WB
  20a626:	47                   	rex.RXB
  20a627:	48 54                	rex.W push rsp
  20a629:	5f                   	pop    rdi
  20a62a:	47 52                	rex.RXB push r10
  20a62c:	45                   	rex.RB
  20a62d:	45                   	rex.RB
  20a62e:	4e 21 67 65          	rex.WRX and QWORD PTR [rdi+0x65],r12
  20a632:	74 20                	je     20a654 <BASE_GRAN+0x62c>
  20a634:	69 6e 66 6f 20 61 62 	imul   ebp,DWORD PTR [rsi+0x66],0x6261206f
  20a63b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20a63c:	75 74                	jne    20a6b2 <BASE_GRAN+0x68a>
  20a63e:	20 74 68 65          	and    BYTE PTR [rax+rbp*2+0x65],dh
  20a642:	20 63 70             	and    BYTE PTR [rbx+0x70],ah
  20a645:	75 0a                	jne    20a651 <BASE_GRAN+0x629>
  20a647:	00 09                	add    BYTE PTR [rcx],cl
  20a649:	68 65 6c 70 3a       	push   0x3a706c65
  20a64e:	20 20                	and    BYTE PTR [rax],ah
  20a650:	20 20                	and    BYTE PTR [rax],ah
  20a652:	20 20                	and    BYTE PTR [rax],ah
  20a654:	20 20                	and    BYTE PTR [rax],ah
  20a656:	20 20                	and    BYTE PTR [rax],ah
  20a658:	20 20                	and    BYTE PTR [rax],ah
  20a65a:	20 24 4c             	and    BYTE PTR [rsp+rcx*2],ah
  20a65d:	49                   	rex.WB
  20a65e:	47                   	rex.RXB
  20a65f:	48 54                	rex.W push rsp
  20a661:	5f                   	pop    rdi
  20a662:	47 52                	rex.RXB push r10
  20a664:	45                   	rex.RB
  20a665:	45                   	rex.RB
  20a666:	4e 21 64 69 73       	and    QWORD PTR [rcx+r13*2+0x73],r12
  20a66b:	70 6c                	jo     20a6d9 <BASE_GRAN+0x6b1>
  20a66d:	61                   	(bad)  
  20a66e:	79 20                	jns    20a690 <BASE_GRAN+0x668>
  20a670:	74 68                	je     20a6da <BASE_GRAN+0x6b2>
  20a672:	69 73 20 63 75 72 72 	imul   esi,DWORD PTR [rbx+0x20],0x72727563
  20a679:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a67b:	74 20                	je     20a69d <BASE_GRAN+0x675>
  20a67d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a67e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20a680:	75 0a                	jne    20a68c <BASE_GRAN+0x664>
  20a682:	0a 00                	or     al,BYTE PTR [rax]
  20a684:	00 00                	add    BYTE PTR [rax],al
  20a686:	00 00                	add    BYTE PTR [rax],al
  20a688:	24 52                	and    al,0x52
  20a68a:	45                   	rex.RB
  20a68b:	44 21 65 72          	and    DWORD PTR [rbp+0x72],r12d
  20a68f:	72 6f                	jb     20a700 <BASE_GRAN+0x6d8>
  20a691:	72 3a                	jb     20a6cd <BASE_GRAN+0x6a5>
  20a693:	20 24 57             	and    BYTE PTR [rdi+rdx*2],ah
  20a696:	48                   	rex.W
  20a697:	49 54                	rex.WB push r12
  20a699:	45 21 75 6e          	and    DWORD PTR [r13+0x6e],r14d
  20a69d:	6b 6e 6f 77          	imul   ebp,DWORD PTR [rsi+0x6f],0x77
  20a6a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a6a2:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
  20a6a5:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a6a6:	6d                   	ins    DWORD PTR es:[rdi],dx
  20a6a7:	61                   	(bad)  
  20a6a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20a6a9:	64 0a 00             	or     al,BYTE PTR fs:[rax]
  20a6ac:	30 31                	xor    BYTE PTR [rcx],dh
  20a6ae:	32 33                	xor    dh,BYTE PTR [rbx]
  20a6b0:	34 35                	xor    al,0x35
  20a6b2:	36 37                	ss (bad) 
  20a6b4:	38 39                	cmp    BYTE PTR [rcx],bh
  20a6b6:	61                   	(bad)  
  20a6b7:	62 63 64 65 66       	(bad)
  20a6bc:	00 00                	add    BYTE PTR [rax],al
  20a6be:	00 00                	add    BYTE PTR [rax],al
  20a6c0:	74 65                	je     20a727 <BASE_GRAN+0x6ff>
  20a6c2:	78 74                	js     20a738 <BASE_GRAN+0x710>
  20a6c4:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
  20a6c7:	66 66 65 72 20       	data16 data16 gs jb 20a6ec <BASE_GRAN+0x6c4>
  20a6cc:	61                   	(bad)  
  20a6cd:	74 20                	je     20a6ef <BASE_GRAN+0x6c7>
  20a6cf:	00 f5                	add    ch,dh
  20a6d1:	9f                   	lahf   
  20a6d2:	ff                   	(bad)  
  20a6d3:	ff 13                	call   QWORD PTR [rbx]
  20a6d5:	a0 ff ff 1c a0 ff ff 	movabs al,ds:0xa025ffffa01cffff
  20a6dc:	25 a0 
  20a6de:	ff                   	(bad)  
  20a6df:	ff 0a                	dec    DWORD PTR [rdx]
  20a6e1:	a0 ff ff 2e a0 ff ff 	movabs al,ds:0xa037ffffa02effff
  20a6e8:	37 a0 
  20a6ea:	ff                   	(bad)  
  20a6eb:	ff 40 a0             	inc    DWORD PTR [rax-0x60]
  20a6ee:	ff                   	(bad)  
  20a6ef:	ff 49 a0             	dec    DWORD PTR [rcx-0x60]
  20a6f2:	ff                   	(bad)  
  20a6f3:	ff 52 a0             	call   QWORD PTR [rdx-0x60]
  20a6f6:	ff                   	(bad)  
  20a6f7:	ff 5b a0             	call   FWORD PTR [rbx-0x60]
  20a6fa:	ff                   	(bad)  
  20a6fb:	ff 64 a0 ff          	jmp    QWORD PTR [rax+riz*4-0x1]
  20a6ff:	ff 6d a0             	jmp    FWORD PTR [rbp-0x60]
  20a702:	ff                   	(bad)  
  20a703:	ff 76 a0             	push   QWORD PTR [rsi-0x60]
  20a706:	ff                   	(bad)  
  20a707:	ff                   	(bad)  
  20a708:	7f a0                	jg     20a6aa <BASE_GRAN+0x682>
  20a70a:	ff                   	(bad)  
  20a70b:	ff 01                	inc    DWORD PTR [rcx]
  20a70d:	a0 ff ff 24 54 45 52 	movabs al,ds:0x5f4d52455424ffff
  20a714:	4d 5f 
  20a716:	4c                   	rex.WR
  20a717:	49                   	rex.WB
  20a718:	4e                   	rex.WRX
  20a719:	45 21 00             	and    DWORD PTR [r8],r8d
  20a71c:	00 42 4c             	add    BYTE PTR [rdx+0x4c],al
  20a71f:	41                   	rex.B
  20a720:	43                   	rex.XB
  20a721:	4b 00 42 4c          	rex.WXB add BYTE PTR [r10+0x4c],al
  20a725:	55                   	push   rbp
  20a726:	45 00 47 52          	add    BYTE PTR [r15+0x52],r8b
  20a72a:	45                   	rex.RB
  20a72b:	45                   	rex.RB
  20a72c:	4e 00 43 59          	rex.WRX add BYTE PTR [rbx+0x59],r8b
  20a730:	41                   	rex.B
  20a731:	4e 00 52 45          	rex.WRX add BYTE PTR [rdx+0x45],r10b
  20a735:	44 00 4d 41          	add    BYTE PTR [rbp+0x41],r9b
  20a739:	47                   	rex.RXB
  20a73a:	45                   	rex.RB
  20a73b:	4e 54                	rex.WRX push rsp
  20a73d:	41 00 42 52          	add    BYTE PTR [r10+0x52],al
  20a741:	4f 57                	rex.WRXB push r15
  20a743:	4e 00 4c 49 47       	rex.WRX add BYTE PTR [rcx+r9*2+0x47],r9b
  20a748:	48 54                	rex.W push rsp
  20a74a:	5f                   	pop    rdi
  20a74b:	47 52                	rex.RXB push r10
  20a74d:	45 59                	rex.RB pop r9
  20a74f:	00 44 41 52          	add    BYTE PTR [rcx+rax*2+0x52],al
  20a753:	4b 5f                	rex.WXB pop r15
  20a755:	47 52                	rex.RXB push r10
  20a757:	45 59                	rex.RB pop r9
  20a759:	00 4c 49 47          	add    BYTE PTR [rcx+rcx*2+0x47],cl
  20a75d:	48 54                	rex.W push rsp
  20a75f:	5f                   	pop    rdi
  20a760:	42                   	rex.X
  20a761:	4c 55                	rex.WR push rbp
  20a763:	45 00 4c 49 47       	add    BYTE PTR [r9+rcx*2+0x47],r9b
  20a768:	48 54                	rex.W push rsp
  20a76a:	5f                   	pop    rdi
  20a76b:	47 52                	rex.RXB push r10
  20a76d:	45                   	rex.RB
  20a76e:	45                   	rex.RB
  20a76f:	4e 00 4c 49 47       	rex.WRX add BYTE PTR [rcx+r9*2+0x47],r9b
  20a774:	48 54                	rex.W push rsp
  20a776:	5f                   	pop    rdi
  20a777:	43 59                	rex.XB pop r9
  20a779:	41                   	rex.B
  20a77a:	4e 00 4c 49 47       	rex.WRX add BYTE PTR [rcx+r9*2+0x47],r9b
  20a77f:	48 54                	rex.W push rsp
  20a781:	5f                   	pop    rdi
  20a782:	52                   	push   rdx
  20a783:	45                   	rex.RB
  20a784:	44 00 4c 49 47       	add    BYTE PTR [rcx+rcx*2+0x47],r9b
  20a789:	48 54                	rex.W push rsp
  20a78b:	5f                   	pop    rdi
  20a78c:	4d                   	rex.WRB
  20a78d:	41                   	rex.B
  20a78e:	47                   	rex.RXB
  20a78f:	45                   	rex.RB
  20a790:	4e 54                	rex.WRX push rsp
  20a792:	41 00 4c 49 47       	add    BYTE PTR [r9+rcx*2+0x47],cl
  20a797:	48 54                	rex.W push rsp
  20a799:	5f                   	pop    rdi
  20a79a:	42 52                	rex.X push rdx
  20a79c:	4f 57                	rex.WRXB push r15
  20a79e:	4e 00 57 48          	rex.WRX add BYTE PTR [rdi+0x48],r10b
  20a7a2:	49 54                	rex.WB push r12
  20a7a4:	45 00 0a             	add    BYTE PTR [r10],r9b
  20a7a7:	00 25 73 0a 00 00    	add    BYTE PTR [rip+0xa73],ah        # 20b220 <kernel_font+0x6a0>
  20a7ad:	00 00                	add    BYTE PTR [rax],al
  20a7af:	00 30                	add    BYTE PTR [rax],dh
  20a7b1:	31 32                	xor    DWORD PTR [rdx],esi
  20a7b3:	33 34 35 36 37 38 39 	xor    esi,DWORD PTR [rsi*1+0x39383736]
  20a7ba:	00 41 42             	add    BYTE PTR [rcx+0x42],al
  20a7bd:	43                   	rex.XB
  20a7be:	44                   	rex.R
  20a7bf:	45                   	rex.RB
  20a7c0:	46 00 61 62          	rex.RX add BYTE PTR [rcx+0x62],r12b
  20a7c4:	63 64 65 66          	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
  20a7c8:	00 30                	add    BYTE PTR [rax],dh
  20a7ca:	00 30                	add    BYTE PTR [rax],dh
  20a7cc:	78 00                	js     20a7ce <BASE_GRAN+0x7a6>
  20a7ce:	65 2b 00             	sub    eax,DWORD PTR gs:[rax]
  20a7d1:	45 2b 00             	sub    r8d,DWORD PTR [r8]
  20a7d4:	f8                   	clc    
  20a7d5:	af                   	scas   eax,DWORD PTR es:[rdi]
  20a7d6:	ff                   	(bad)  
  20a7d7:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7da:	ff                   	(bad)  
  20a7db:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7de:	ff                   	(bad)  
  20a7df:	ff                   	(bad)  
  20a7e0:	ee                   	out    dx,al
  20a7e1:	af                   	scas   eax,DWORD PTR es:[rdi]
  20a7e2:	ff                   	(bad)  
  20a7e3:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7e6:	ff                   	(bad)  
  20a7e7:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7ea:	ff                   	(bad)  
  20a7eb:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7ee:	ff                   	(bad)  
  20a7ef:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7f2:	ff                   	(bad)  
  20a7f3:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7f6:	ff                   	(bad)  
  20a7f7:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7fa:	ff                   	(bad)  
  20a7fb:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a7fe:	ff                   	(bad)  
  20a7ff:	ff e4                	jmp    rsp
  20a801:	af                   	scas   eax,DWORD PTR es:[rdi]
  20a802:	ff                   	(bad)  
  20a803:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a806:	ff                   	(bad)  
  20a807:	ff                   	(bad)  
  20a808:	da af ff ff 0c b0    	fisubr DWORD PTR [rdi-0x4ff30001]
  20a80e:	ff                   	(bad)  
  20a80f:	ff 0c b0             	dec    DWORD PTR [rax+rsi*4]
  20a812:	ff                   	(bad)  
  20a813:	ff 02                	inc    DWORD PTR [rdx]
  20a815:	b0 ff                	mov    al,0xff
  20a817:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a81e:	ff                   	(bad)  
  20a81f:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a826:	ff                   	(bad)  
  20a827:	ff 60 c4             	jmp    QWORD PTR [rax-0x3c]
  20a82a:	ff                   	(bad)  
  20a82b:	ff 64 c4 ff          	jmp    QWORD PTR [rsp+rax*8-0x1]
  20a82f:	ff 64 c4 ff          	jmp    QWORD PTR [rsp+rax*8-0x1]
  20a833:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a83a:	ff                   	(bad)  
  20a83b:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a842:	ff                   	(bad)  
  20a843:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a84a:	ff                   	(bad)  
  20a84b:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a852:	ff                   	(bad)  
  20a853:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a85a:	ff                   	(bad)  
  20a85b:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a862:	ff                   	(bad)  
  20a863:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a86a:	ff                   	(bad)  
  20a86b:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a872:	ff                   	(bad)  
  20a873:	ff 23                	jmp    QWORD PTR [rbx]
  20a875:	b3 ff                	mov    bl,0xff
  20a877:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a87e:	ff                   	(bad)  
  20a87f:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a886:	ff                   	(bad)  
  20a887:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a88e:	ff                   	(bad)  
  20a88f:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a896:	ff                   	(bad)  
  20a897:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a89e:	ff                   	(bad)  
  20a89f:	ff 4b bf             	dec    DWORD PTR [rbx-0x41]
  20a8a2:	ff                   	(bad)  
  20a8a3:	ff 62 b9             	jmp    QWORD PTR [rdx-0x47]
  20a8a6:	ff                   	(bad)  
  20a8a7:	ff 60 c4             	jmp    QWORD PTR [rax-0x3c]
  20a8aa:	ff                   	(bad)  
  20a8ab:	ff 64 c4 ff          	jmp    QWORD PTR [rsp+rax*8-0x1]
  20a8af:	ff 64 c4 ff          	jmp    QWORD PTR [rsp+rax*8-0x1]
  20a8b3:	ff 94 c6 ff ff 62 b9 	call   QWORD PTR [rsi+rax*8-0x469d0001]
  20a8ba:	ff                   	(bad)  
  20a8bb:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a8c2:	ff                   	(bad)  
  20a8c3:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a8ca:	ff                   	(bad)  
  20a8cb:	ff aa c0 ff ff 94    	jmp    FWORD PTR [rdx-0x6b000040]
  20a8d1:	c6                   	(bad)  
  20a8d2:	ff                   	(bad)  
  20a8d3:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a8da:	ff                   	(bad)  
  20a8db:	ff 94 c6 ff ff 38 c0 	call   QWORD PTR [rsi+rax*8-0x3fc70001]
  20a8e2:	ff                   	(bad)  
  20a8e3:	ff 94 c6 ff ff 59 b3 	call   QWORD PTR [rsi+rax*8-0x4ca60001]
  20a8ea:	ff                   	(bad)  
  20a8eb:	ff 94 c6 ff ff 94 c6 	call   QWORD PTR [rsi+rax*8-0x396b0001]
  20a8f2:	ff                   	(bad)  
  20a8f3:	ff 2a                	jmp    FWORD PTR [rdx]
  20a8f5:	b3 ff                	mov    bl,0xff
  20a8f7:	ff                   	(bad)  
  20a8f8:	7f b3                	jg     20a8ad <BASE_GRAN+0x885>
  20a8fa:	ff                   	(bad)  
  20a8fb:	ff                   	(bad)  
  20a8fc:	7c b8                	jl     20a8b6 <BASE_GRAN+0x88e>
  20a8fe:	ff                   	(bad)  
  20a8ff:	ff                   	(bad)  
  20a900:	7c b8                	jl     20a8ba <BASE_GRAN+0x892>
  20a902:	ff                   	(bad)  
  20a903:	ff                   	(bad)  
  20a904:	7c b8                	jl     20a8be <BASE_GRAN+0x896>
  20a906:	ff                   	(bad)  
  20a907:	ff                   	(bad)  
  20a908:	7c b8                	jl     20a8c2 <BASE_GRAN+0x89a>
  20a90a:	ff                   	(bad)  
  20a90b:	ff                   	(bad)  
  20a90c:	7c b8                	jl     20a8c6 <BASE_GRAN+0x89e>
  20a90e:	ff                   	(bad)  
  20a90f:	ff                   	(bad)  
  20a910:	7c b8                	jl     20a8ca <BASE_GRAN+0x8a2>
  20a912:	ff                   	(bad)  
  20a913:	ff                   	(bad)  
  20a914:	7c b8                	jl     20a8ce <BASE_GRAN+0x8a6>
  20a916:	ff                   	(bad)  
  20a917:	ff                   	(bad)  
  20a918:	7c b8                	jl     20a8d2 <BASE_GRAN+0x8aa>
  20a91a:	ff                   	(bad)  
  20a91b:	ff                   	(bad)  
  20a91c:	7c b8                	jl     20a8d6 <BASE_GRAN+0x8ae>
  20a91e:	ff                   	(bad)  
  20a91f:	ff                   	(bad)  
  20a920:	7c b8                	jl     20a8da <BASE_GRAN+0x8b2>
  20a922:	ff                   	(bad)  
  20a923:	ff                   	(bad)  
  20a924:	7c b8                	jl     20a8de <BASE_GRAN+0x8b6>
  20a926:	ff                   	(bad)  
  20a927:	ff                   	(bad)  
  20a928:	7c b8                	jl     20a8e2 <BASE_GRAN+0x8ba>
  20a92a:	ff                   	(bad)  
  20a92b:	ff                   	(bad)  
  20a92c:	7c b8                	jl     20a8e6 <BASE_GRAN+0x8be>
  20a92e:	ff                   	(bad)  
  20a92f:	ff                   	(bad)  
  20a930:	7c b8                	jl     20a8ea <BASE_GRAN+0x8c2>
  20a932:	ff                   	(bad)  
  20a933:	ff                   	(bad)  
  20a934:	7c b8                	jl     20a8ee <BASE_GRAN+0x8c6>
  20a936:	ff                   	(bad)  
  20a937:	ff                   	(bad)  
  20a938:	7c b8                	jl     20a8f2 <BASE_GRAN+0x8ca>
  20a93a:	ff                   	(bad)  
  20a93b:	ff                   	(bad)  
  20a93c:	7c b8                	jl     20a8f6 <BASE_GRAN+0x8ce>
  20a93e:	ff                   	(bad)  
  20a93f:	ff                   	(bad)  
  20a940:	7c b8                	jl     20a8fa <BASE_GRAN+0x8d2>
  20a942:	ff                   	(bad)  
  20a943:	ff                   	(bad)  
  20a944:	7c b8                	jl     20a8fe <BASE_GRAN+0x8d6>
  20a946:	ff                   	(bad)  
  20a947:	ff                   	(bad)  
  20a948:	7c b8                	jl     20a902 <BASE_GRAN+0x8da>
  20a94a:	ff                   	(bad)  
  20a94b:	ff                   	(bad)  
  20a94c:	7c b8                	jl     20a906 <BASE_GRAN+0x8de>
  20a94e:	ff                   	(bad)  
  20a94f:	ff                   	(bad)  
  20a950:	7c b8                	jl     20a90a <BASE_GRAN+0x8e2>
  20a952:	ff                   	(bad)  
  20a953:	ff                   	(bad)  
  20a954:	7c b8                	jl     20a90e <BASE_GRAN+0x8e6>
  20a956:	ff                   	(bad)  
  20a957:	ff                   	(bad)  
  20a958:	7c b8                	jl     20a912 <BASE_GRAN+0x8ea>
  20a95a:	ff                   	(bad)  
  20a95b:	ff                   	(bad)  
  20a95c:	7c b8                	jl     20a916 <BASE_GRAN+0x8ee>
  20a95e:	ff                   	(bad)  
  20a95f:	ff                   	(bad)  
  20a960:	7c b8                	jl     20a91a <BASE_GRAN+0x8f2>
  20a962:	ff                   	(bad)  
  20a963:	ff                   	(bad)  
  20a964:	7c b8                	jl     20a91e <BASE_GRAN+0x8f6>
  20a966:	ff                   	(bad)  
  20a967:	ff                   	(bad)  
  20a968:	7c b8                	jl     20a922 <BASE_GRAN+0x8fa>
  20a96a:	ff                   	(bad)  
  20a96b:	ff                   	(bad)  
  20a96c:	7c b8                	jl     20a926 <BASE_GRAN+0x8fe>
  20a96e:	ff                   	(bad)  
  20a96f:	ff                   	(bad)  
  20a970:	7c b8                	jl     20a92a <BASE_GRAN+0x902>
  20a972:	ff                   	(bad)  
  20a973:	ff                   	(bad)  
  20a974:	7c b8                	jl     20a92e <BASE_GRAN+0x906>
  20a976:	ff                   	(bad)  
  20a977:	ff 36                	push   QWORD PTR [rsi]
  20a979:	b4 ff                	mov    ah,0xff
  20a97b:	ff                   	(bad)  
  20a97c:	7c b8                	jl     20a936 <BASE_GRAN+0x90e>
  20a97e:	ff                   	(bad)  
  20a97f:	ff 60 b6             	jmp    QWORD PTR [rax-0x4a]
  20a982:	ff                   	(bad)  
  20a983:	ff                   	(bad)  
  20a984:	7c b8                	jl     20a93e <BASE_GRAN+0x916>
  20a986:	ff                   	(bad)  
  20a987:	ff                   	(bad)  
  20a988:	ee                   	out    dx,al
  20a989:	b4 ff                	mov    ah,0xff
  20a98b:	ff                   	(bad)  
  20a98c:	7c b8                	jl     20a946 <BASE_GRAN+0x91e>
  20a98e:	ff                   	(bad)  
  20a98f:	ff                   	(bad)  
  20a990:	7c b8                	jl     20a94a <BASE_GRAN+0x922>
  20a992:	ff                   	(bad)  
  20a993:	ff                   	(bad)  
  20a994:	7c b8                	jl     20a94e <BASE_GRAN+0x926>
  20a996:	ff                   	(bad)  
  20a997:	ff                   	(bad)  
  20a998:	7c b8                	jl     20a952 <BASE_GRAN+0x92a>
  20a99a:	ff                   	(bad)  
  20a99b:	ff a7 b5 ff ff 7c    	jmp    QWORD PTR [rdi+0x7cffffb5]
  20a9a1:	b8 ff ff 7c b8       	mov    eax,0xb87cffff
  20a9a6:	ff                   	(bad)  
  20a9a7:	ff cc                	dec    esp
  20a9a9:	b7 ff                	mov    bh,0xff
  20a9ab:	ff                   	(bad)  
  20a9ac:	7c b8                	jl     20a966 <BASE_GRAN+0x93e>
  20a9ae:	ff                   	(bad)  
  20a9af:	ff                   	(bad)  
  20a9b0:	7c b8                	jl     20a96a <BASE_GRAN+0x942>
  20a9b2:	ff                   	(bad)  
  20a9b3:	ff                   	(bad)  
  20a9b4:	7c b8                	jl     20a96e <BASE_GRAN+0x946>
  20a9b6:	ff                   	(bad)  
  20a9b7:	ff                   	(bad)  
  20a9b8:	7c b8                	jl     20a972 <BASE_GRAN+0x94a>
  20a9ba:	ff                   	(bad)  
  20a9bb:	ff                   	(bad)  
  20a9bc:	7c b8                	jl     20a976 <BASE_GRAN+0x94e>
  20a9be:	ff                   	(bad)  
  20a9bf:	ff 19                	call   FWORD PTR [rcx]
  20a9c1:	b7 ff                	mov    bh,0xff
  20a9c3:	ff                   	(bad)  
  20a9c4:	b8 b8 ff ff 99       	mov    eax,0x99ffffb8
  20a9c9:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20a9ce:	ff                   	(bad)  
  20a9cf:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20a9d5:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20a9da:	ff                   	(bad)  
  20a9db:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20a9e1:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20a9e6:	ff                   	(bad)  
  20a9e7:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20a9ed:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20a9f2:	ff                   	(bad)  
  20a9f3:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20a9f9:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20a9fe:	ff                   	(bad)  
  20a9ff:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa05:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa0a:	ff                   	(bad)  
  20aa0b:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa11:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa16:	ff                   	(bad)  
  20aa17:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa1d:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa22:	ff                   	(bad)  
  20aa23:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa29:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa2e:	ff                   	(bad)  
  20aa2f:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa35:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa3a:	ff                   	(bad)  
  20aa3b:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa41:	bd ff ff 6a b9       	mov    ebp,0xb96affff
  20aa46:	ff                   	(bad)  
  20aa47:	ff 99 bd ff ff 83    	call   FWORD PTR [rcx-0x7c000043]
  20aa4d:	bb ff ff 99 bd       	mov    ebx,0xbd99ffff
  20aa52:	ff                   	(bad)  
  20aa53:	ff 1d ba ff ff 99    	call   FWORD PTR [rip+0xffffffff99ffffba]        # ffffffff9a20aa13 <__kernel_end+0xffffffff99ff8a13>
  20aa59:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa5e:	ff                   	(bad)  
  20aa5f:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa65:	bd ff ff d0 ba       	mov    ebp,0xbad0ffff
  20aa6a:	ff                   	(bad)  
  20aa6b:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa71:	bd ff ff e9 bc       	mov    ebp,0xbce9ffff
  20aa76:	ff                   	(bad)  
  20aa77:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa7d:	bd ff ff 99 bd       	mov    ebp,0xbd99ffff
  20aa82:	ff                   	(bad)  
  20aa83:	ff 99 bd ff ff 99    	call   FWORD PTR [rcx-0x66000043]
  20aa89:	bd ff ff 36 bc       	mov    ebp,0xbc36ffff
  20aa8e:	ff                   	(bad)  
  20aa8f:	ff 86 be ff ff e2    	inc    DWORD PTR [rsi-0x1d000042]
  20aa95:	c1 ff ff             	sar    edi,0xff
  20aa98:	e2 c1                	loop   20aa5b <BASE_GRAN+0xa33>
  20aa9a:	ff                   	(bad)  
  20aa9b:	ff e2                	jmp    rdx
  20aa9d:	c1 ff ff             	sar    edi,0xff
  20aaa0:	e2 c1                	loop   20aa63 <BASE_GRAN+0xa3b>
  20aaa2:	ff                   	(bad)  
  20aaa3:	ff e2                	jmp    rdx
  20aaa5:	c1 ff ff             	sar    edi,0xff
  20aaa8:	e2 c1                	loop   20aa6b <BASE_GRAN+0xa43>
  20aaaa:	ff                   	(bad)  
  20aaab:	ff e2                	jmp    rdx
  20aaad:	c1 ff ff             	sar    edi,0xff
  20aab0:	e2 c1                	loop   20aa73 <BASE_GRAN+0xa4b>
  20aab2:	ff                   	(bad)  
  20aab3:	ff e2                	jmp    rdx
  20aab5:	c1 ff ff             	sar    edi,0xff
  20aab8:	e2 c1                	loop   20aa7b <BASE_GRAN+0xa53>
  20aaba:	ff                   	(bad)  
  20aabb:	ff e2                	jmp    rdx
  20aabd:	c1 ff ff             	sar    edi,0xff
  20aac0:	e2 c1                	loop   20aa83 <BASE_GRAN+0xa5b>
  20aac2:	ff                   	(bad)  
  20aac3:	ff e2                	jmp    rdx
  20aac5:	c1 ff ff             	sar    edi,0xff
  20aac8:	e2 c1                	loop   20aa8b <BASE_GRAN+0xa63>
  20aaca:	ff                   	(bad)  
  20aacb:	ff e2                	jmp    rdx
  20aacd:	c1 ff ff             	sar    edi,0xff
  20aad0:	e2 c1                	loop   20aa93 <BASE_GRAN+0xa6b>
  20aad2:	ff                   	(bad)  
  20aad3:	ff e2                	jmp    rdx
  20aad5:	c1 ff ff             	sar    edi,0xff
  20aad8:	e2 c1                	loop   20aa9b <BASE_GRAN+0xa73>
  20aada:	ff                   	(bad)  
  20aadb:	ff e2                	jmp    rdx
  20aadd:	c1 ff ff             	sar    edi,0xff
  20aae0:	e2 c1                	loop   20aaa3 <BASE_GRAN+0xa7b>
  20aae2:	ff                   	(bad)  
  20aae3:	ff e2                	jmp    rdx
  20aae5:	c1 ff ff             	sar    edi,0xff
  20aae8:	e2 c1                	loop   20aaab <BASE_GRAN+0xa83>
  20aaea:	ff                   	(bad)  
  20aaeb:	ff e2                	jmp    rdx
  20aaed:	c1 ff ff             	sar    edi,0xff
  20aaf0:	e2 c1                	loop   20aab3 <BASE_GRAN+0xa8b>
  20aaf2:	ff                   	(bad)  
  20aaf3:	ff e2                	jmp    rdx
  20aaf5:	c1 ff ff             	sar    edi,0xff
  20aaf8:	e2 c1                	loop   20aabb <BASE_GRAN+0xa93>
  20aafa:	ff                   	(bad)  
  20aafb:	ff e2                	jmp    rdx
  20aafd:	c1 ff ff             	sar    edi,0xff
  20ab00:	e2 c1                	loop   20aac3 <BASE_GRAN+0xa9b>
  20ab02:	ff                   	(bad)  
  20ab03:	ff e2                	jmp    rdx
  20ab05:	c1 ff ff             	sar    edi,0xff
  20ab08:	e2 c1                	loop   20aacb <BASE_GRAN+0xaa3>
  20ab0a:	ff                   	(bad)  
  20ab0b:	ff e2                	jmp    rdx
  20ab0d:	c1 ff ff             	sar    edi,0xff
  20ab10:	f1                   	icebp  
  20ab11:	be ff ff e2 c1       	mov    esi,0xc1e2ffff
  20ab16:	ff                   	(bad)  
  20ab17:	ff a4 c0 ff ff e2 c1 	jmp    QWORD PTR [rax+rax*8-0x3e1d0001]
  20ab1e:	ff                   	(bad)  
  20ab1f:	ff cc                	dec    esp
  20ab21:	bf ff ff e2 c1       	mov    edi,0xc1e2ffff
  20ab26:	ff                   	(bad)  
  20ab27:	ff e2                	jmp    rdx
  20ab29:	c1 ff ff             	sar    edi,0xff
  20ab2c:	e2 c1                	loop   20aaef <BASE_GRAN+0xac7>
  20ab2e:	ff                   	(bad)  
  20ab2f:	ff e2                	jmp    rdx
  20ab31:	c1 ff ff             	sar    edi,0xff
  20ab34:	38 c0                	cmp    al,al
  20ab36:	ff                   	(bad)  
  20ab37:	ff e2                	jmp    rdx
  20ab39:	c1 ff ff             	sar    edi,0xff
  20ab3c:	e2 c1                	loop   20aaff <BASE_GRAN+0xad7>
  20ab3e:	ff                   	(bad)  
  20ab3f:	ff                   	(bad)  
  20ab40:	79 c1                	jns    20ab03 <BASE_GRAN+0xadb>
  20ab42:	ff                   	(bad)  
  20ab43:	ff e2                	jmp    rdx
  20ab45:	c1 ff ff             	sar    edi,0xff
  20ab48:	e2 c1                	loop   20ab0b <BASE_GRAN+0xae3>
  20ab4a:	ff                   	(bad)  
  20ab4b:	ff e2                	jmp    rdx
  20ab4d:	c1 ff ff             	sar    edi,0xff
  20ab50:	e2 c1                	loop   20ab13 <BASE_GRAN+0xaeb>
  20ab52:	ff                   	(bad)  
  20ab53:	ff e2                	jmp    rdx
  20ab55:	c1 ff ff             	sar    edi,0xff
  20ab58:	10 c1                	adc    cl,al
  20ab5a:	ff                   	(bad)  
  20ab5b:	ff 00                	inc    DWORD PTR [rax]
	...
  20ab65:	00 24 40             	add    BYTE PTR [rax+rax*2],ah
  20ab68:	00 00                	add    BYTE PTR [rax],al
  20ab6a:	00 00                	add    BYTE PTR [rax],al
  20ab6c:	00 00                	add    BYTE PTR [rax],al
  20ab6e:	e0 3f                	loopne 20abaf <kernel_font+0x2f>
	...

000000000020ab80 <kernel_font>:
	...
  20ab94:	ff 00                	inc    DWORD PTR [rax]
  20ab96:	00 00                	add    BYTE PTR [rax],al
  20ab98:	00 00                	add    BYTE PTR [rax],al
  20ab9a:	ff 00                	inc    DWORD PTR [rax]
  20ab9c:	ff 00                	inc    DWORD PTR [rax]
  20ab9e:	00 00                	add    BYTE PTR [rax],al
  20aba0:	18 18                	sbb    BYTE PTR [rax],bl
  20aba2:	18 18                	sbb    BYTE PTR [rax],bl
  20aba4:	18 18                	sbb    BYTE PTR [rax],bl
  20aba6:	18 18                	sbb    BYTE PTR [rax],bl
  20aba8:	6c                   	ins    BYTE PTR es:[rdi],dx
  20aba9:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abaa:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abab:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abac:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abad:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abae:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abaf:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abb0:	00 00                	add    BYTE PTR [rax],al
  20abb2:	00 00                	add    BYTE PTR [rax],al
  20abb4:	f8                   	clc    
  20abb5:	18 18                	sbb    BYTE PTR [rax],bl
  20abb7:	18 00                	sbb    BYTE PTR [rax],al
  20abb9:	00 fc                	add    ah,bh
  20abbb:	0c ec                	or     al,0xec
  20abbd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abbe:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abbf:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abc0:	00 00                	add    BYTE PTR [rax],al
  20abc2:	00 00                	add    BYTE PTR [rax],al
  20abc4:	1f                   	(bad)  
  20abc5:	18 18                	sbb    BYTE PTR [rax],bl
  20abc7:	18 00                	sbb    BYTE PTR [rax],al
  20abc9:	00 7f 60             	add    BYTE PTR [rdi+0x60],bh
  20abcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20abcd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abce:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abcf:	6c                   	ins    BYTE PTR es:[rdi],dx
  20abd0:	18 18                	sbb    BYTE PTR [rax],bl
  20abd2:	18 18                	sbb    BYTE PTR [rax],bl
  20abd4:	f8                   	clc    
  20abd5:	00 00                	add    BYTE PTR [rax],al
  20abd7:	00 6c 6c ec          	add    BYTE PTR [rsp+rbp*2-0x14],ch
  20abdb:	0c fc                	or     al,0xfc
  20abdd:	00 00                	add    BYTE PTR [rax],al
  20abdf:	00 18                	add    BYTE PTR [rax],bl
  20abe1:	18 18                	sbb    BYTE PTR [rax],bl
  20abe3:	18 1f                	sbb    BYTE PTR [rdi],bl
  20abe5:	00 00                	add    BYTE PTR [rax],al
  20abe7:	00 6c 6c 6f          	add    BYTE PTR [rsp+rbp*2+0x6f],ch
  20abeb:	60                   	(bad)  
  20abec:	7f 00                	jg     20abee <kernel_font+0x6e>
  20abee:	00 00                	add    BYTE PTR [rax],al
  20abf0:	18 7e 7e             	sbb    BYTE PTR [rsi+0x7e],bh
  20abf3:	ff                   	(bad)  
  20abf4:	ff                   	(bad)  
  20abf5:	7e 7e                	jle    20ac75 <kernel_font+0xf5>
  20abf7:	18 00                	sbb    BYTE PTR [rax],al
  20abf9:	81 81 81 81 81 81 00 	add    DWORD PTR [rcx-0x7e7e7e7f],0x0
  20ac00:	00 00 00 
	...
  20ac7b:	00 00                	add    BYTE PTR [rax],al
  20ac7d:	00 08                	add    BYTE PTR [rax],cl
	...
  20ac87:	00 18                	add    BYTE PTR [rax],bl
  20ac89:	3c 3c                	cmp    al,0x3c
  20ac8b:	18 18                	sbb    BYTE PTR [rax],bl
  20ac8d:	00 18                	add    BYTE PTR [rax],bl
  20ac8f:	00 36                	add    BYTE PTR [rsi],dh
  20ac91:	12 12                	adc    dl,BYTE PTR [rdx]
  20ac93:	00 00                	add    BYTE PTR [rax],al
  20ac95:	00 00                	add    BYTE PTR [rax],al
  20ac97:	00 6c 6c fe          	add    BYTE PTR [rsp+rbp*2-0x2],ch
  20ac9b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20ac9c:	fe                   	(bad)  
  20ac9d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20ac9e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20ac9f:	00 30                	add    BYTE PTR [rax],dh
  20aca1:	fc                   	cld    
  20aca2:	16                   	(bad)  
  20aca3:	7c d0                	jl     20ac75 <kernel_font+0xf5>
  20aca5:	7e 18                	jle    20acbf <kernel_font+0x13f>
  20aca7:	00 06                	add    BYTE PTR [rsi],al
  20aca9:	66 30 18             	data16 xor BYTE PTR [rax],bl
  20acac:	0c 66                	or     al,0x66
  20acae:	60                   	(bad)  
  20acaf:	00 1c 36             	add    BYTE PTR [rsi+rsi*1],bl
  20acb2:	36 1c b6             	ss sbb al,0xb6
  20acb5:	66 dc 00             	data16 fadd QWORD PTR [rax]
  20acb8:	18 18                	sbb    BYTE PTR [rax],bl
  20acba:	18 00                	sbb    BYTE PTR [rax],al
  20acbc:	00 00                	add    BYTE PTR [rax],al
  20acbe:	00 00                	add    BYTE PTR [rax],al
  20acc0:	30 18                	xor    BYTE PTR [rax],bl
  20acc2:	0c 0c                	or     al,0xc
  20acc4:	0c 18                	or     al,0x18
  20acc6:	30 00                	xor    BYTE PTR [rax],al
  20acc8:	0c 18                	or     al,0x18
  20acca:	30 30                	xor    BYTE PTR [rax],dh
  20accc:	30 18                	xor    BYTE PTR [rax],bl
  20acce:	0c 00                	or     al,0x0
  20acd0:	00 18                	add    BYTE PTR [rax],bl
  20acd2:	7e 3c                	jle    20ad10 <kernel_font+0x190>
  20acd4:	7e 18                	jle    20acee <kernel_font+0x16e>
  20acd6:	00 00                	add    BYTE PTR [rax],al
  20acd8:	00 18                	add    BYTE PTR [rax],bl
  20acda:	18 7e 18             	sbb    BYTE PTR [rsi+0x18],bh
  20acdd:	18 00                	sbb    BYTE PTR [rax],al
  20acdf:	00 00                	add    BYTE PTR [rax],al
  20ace1:	00 00                	add    BYTE PTR [rax],al
  20ace3:	00 00                	add    BYTE PTR [rax],al
  20ace5:	18 18                	sbb    BYTE PTR [rax],bl
  20ace7:	0c 00                	or     al,0x0
  20ace9:	00 00                	add    BYTE PTR [rax],al
  20aceb:	7e 00                	jle    20aced <kernel_font+0x16d>
	...
  20acf5:	18 18                	sbb    BYTE PTR [rax],bl
  20acf7:	00 00                	add    BYTE PTR [rax],al
  20acf9:	60                   	(bad)  
  20acfa:	30 18                	xor    BYTE PTR [rax],bl
  20acfc:	0c 06                	or     al,0x6
  20acfe:	00 00                	add    BYTE PTR [rax],al
  20ad00:	3c 62                	cmp    al,0x62
  20ad02:	52                   	push   rdx
  20ad03:	4a                   	rex.WX
  20ad04:	46                   	rex.RX
  20ad05:	42 3c 00             	rex.X cmp al,0x0
  20ad08:	10 1c 10             	adc    BYTE PTR [rax+rdx*1],bl
  20ad0b:	10 10                	adc    BYTE PTR [rax],dl
  20ad0d:	10 7e 00             	adc    BYTE PTR [rsi+0x0],bh
  20ad10:	3c 42                	cmp    al,0x42
  20ad12:	20 10                	and    BYTE PTR [rax],dl
  20ad14:	08 04 7e             	or     BYTE PTR [rsi+rdi*2],al
  20ad17:	00 3c 42             	add    BYTE PTR [rdx+rax*2],bh
  20ad1a:	40 38 40 42          	cmp    BYTE PTR [rax+0x42],al
  20ad1e:	3c 00                	cmp    al,0x0
  20ad20:	30 28                	xor    BYTE PTR [rax],ch
  20ad22:	24 22                	and    al,0x22
  20ad24:	7e 20                	jle    20ad46 <kernel_font+0x1c6>
  20ad26:	20 00                	and    BYTE PTR [rax],al
  20ad28:	7e 02                	jle    20ad2c <kernel_font+0x1ac>
  20ad2a:	3e 40                	ds rex
  20ad2c:	40                   	rex
  20ad2d:	42 3c 00             	rex.X cmp al,0x0
  20ad30:	38 04 02             	cmp    BYTE PTR [rdx+rax*1],al
  20ad33:	3e 42                	ds rex.X
  20ad35:	42 3c 00             	rex.X cmp al,0x0
  20ad38:	7e 40                	jle    20ad7a <kernel_font+0x1fa>
  20ad3a:	20 10                	and    BYTE PTR [rax],dl
  20ad3c:	08 04 04             	or     BYTE PTR [rsp+rax*1],al
  20ad3f:	00 3c 42             	add    BYTE PTR [rdx+rax*2],bh
  20ad42:	42 3c 42             	rex.X cmp al,0x42
  20ad45:	42 3c 00             	rex.X cmp al,0x0
  20ad48:	3c 42                	cmp    al,0x42
  20ad4a:	42 7c 40             	rex.X jl 20ad8d <kernel_font+0x20d>
  20ad4d:	20 1c 00             	and    BYTE PTR [rax+rax*1],bl
  20ad50:	00 00                	add    BYTE PTR [rax],al
  20ad52:	18 18                	sbb    BYTE PTR [rax],bl
  20ad54:	00 18                	add    BYTE PTR [rax],bl
  20ad56:	18 00                	sbb    BYTE PTR [rax],al
  20ad58:	00 00                	add    BYTE PTR [rax],al
  20ad5a:	18 18                	sbb    BYTE PTR [rax],bl
  20ad5c:	00 18                	add    BYTE PTR [rax],bl
  20ad5e:	18 0c 30             	sbb    BYTE PTR [rax+rsi*1],cl
  20ad61:	18 0c 06             	sbb    BYTE PTR [rsi+rax*1],cl
  20ad64:	0c 18                	or     al,0x18
  20ad66:	30 00                	xor    BYTE PTR [rax],al
  20ad68:	00 00                	add    BYTE PTR [rax],al
  20ad6a:	7e 00                	jle    20ad6c <kernel_font+0x1ec>
  20ad6c:	7e 00                	jle    20ad6e <kernel_font+0x1ee>
  20ad6e:	00 00                	add    BYTE PTR [rax],al
  20ad70:	0c 18                	or     al,0x18
  20ad72:	30 60 30             	xor    BYTE PTR [rax+0x30],ah
  20ad75:	18 0c 00             	sbb    BYTE PTR [rax+rax*1],cl
  20ad78:	3c 66                	cmp    al,0x66
  20ad7a:	30 18                	xor    BYTE PTR [rax],bl
  20ad7c:	18 00                	sbb    BYTE PTR [rax],al
  20ad7e:	18 00                	sbb    BYTE PTR [rax],al
  20ad80:	3c 66                	cmp    al,0x66
  20ad82:	76 56                	jbe    20adda <kernel_font+0x25a>
  20ad84:	76 06                	jbe    20ad8c <kernel_font+0x20c>
  20ad86:	3c 00                	cmp    al,0x0
  20ad88:	18 24 42             	sbb    BYTE PTR [rdx+rax*2],ah
  20ad8b:	42 7e 42             	rex.X jle 20add0 <kernel_font+0x250>
  20ad8e:	42 00 3e             	rex.X add BYTE PTR [rsi],dil
  20ad91:	42                   	rex.X
  20ad92:	42                   	rex.X
  20ad93:	3e 42                	ds rex.X
  20ad95:	42                   	rex.X
  20ad96:	3e 00 3c 42          	add    BYTE PTR ds:[rdx+rax*2],bh
  20ad9a:	02 02                	add    al,BYTE PTR [rdx]
  20ad9c:	02 42 3c             	add    al,BYTE PTR [rdx+0x3c]
  20ad9f:	00 1e                	add    BYTE PTR [rsi],bl
  20ada1:	22 42 42             	and    al,BYTE PTR [rdx+0x42]
  20ada4:	42 22 1e             	rex.X and bl,BYTE PTR [rsi]
  20ada7:	00 7e 02             	add    BYTE PTR [rsi+0x2],bh
  20adaa:	02 3e                	add    bh,BYTE PTR [rsi]
  20adac:	02 02                	add    al,BYTE PTR [rdx]
  20adae:	7e 00                	jle    20adb0 <kernel_font+0x230>
  20adb0:	7e 02                	jle    20adb4 <kernel_font+0x234>
  20adb2:	02 3e                	add    bh,BYTE PTR [rsi]
  20adb4:	02 02                	add    al,BYTE PTR [rdx]
  20adb6:	02 00                	add    al,BYTE PTR [rax]
  20adb8:	3c 42                	cmp    al,0x42
  20adba:	02 72 42             	add    dh,BYTE PTR [rdx+0x42]
  20adbd:	42 3c 00             	rex.X cmp al,0x0
  20adc0:	42                   	rex.X
  20adc1:	42                   	rex.X
  20adc2:	42 7e 42             	rex.X jle 20ae07 <kernel_font+0x287>
  20adc5:	42                   	rex.X
  20adc6:	42 00 7c 10 10       	add    BYTE PTR [rax+r10*1+0x10],dil
  20adcb:	10 10                	adc    BYTE PTR [rax],dl
  20adcd:	10 7c 00 7e          	adc    BYTE PTR [rax+rax*1+0x7e],bh
  20add1:	20 20                	and    BYTE PTR [rax],ah
  20add3:	20 20                	and    BYTE PTR [rax],ah
  20add5:	22 1c 00             	and    bl,BYTE PTR [rax+rax*1]
  20add8:	22 12                	and    dl,BYTE PTR [rdx]
  20adda:	0a 0e                	or     cl,BYTE PTR [rsi]
  20addc:	12 22                	adc    ah,BYTE PTR [rdx]
  20adde:	42 00 02             	rex.X add BYTE PTR [rdx],al
  20ade1:	02 02                	add    al,BYTE PTR [rdx]
  20ade3:	02 02                	add    al,BYTE PTR [rdx]
  20ade5:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
  20ade8:	82                   	(bad)  
  20ade9:	c6                   	(bad)  
  20adea:	aa                   	stos   BYTE PTR es:[rdi],al
  20adeb:	92                   	xchg   edx,eax
  20adec:	82                   	(bad)  
  20aded:	82                   	(bad)  
  20adee:	82                   	(bad)  
  20adef:	00 42 46             	add    BYTE PTR [rdx+0x46],al
  20adf2:	4a 52                	rex.WX push rdx
  20adf4:	62 42                	(bad)  
  20adf6:	42 00 3c 42          	add    BYTE PTR [rdx+r8*2],dil
  20adfa:	42                   	rex.X
  20adfb:	42                   	rex.X
  20adfc:	42                   	rex.X
  20adfd:	42 3c 00             	rex.X cmp al,0x0
  20ae00:	3e 42                	ds rex.X
  20ae02:	42                   	rex.X
  20ae03:	3e 02 02             	add    al,BYTE PTR ds:[rdx]
  20ae06:	02 00                	add    al,BYTE PTR [rax]
  20ae08:	3c 42                	cmp    al,0x42
  20ae0a:	42                   	rex.X
  20ae0b:	42                   	rex.X
  20ae0c:	42 22 5c 00 3e       	and    bl,BYTE PTR [rax+r8*1+0x3e]
  20ae11:	42                   	rex.X
  20ae12:	42                   	rex.X
  20ae13:	3e 42                	ds rex.X
  20ae15:	42                   	rex.X
  20ae16:	42 00 3c 42          	add    BYTE PTR [rdx+r8*2],dil
  20ae1a:	02 3c 40             	add    bh,BYTE PTR [rax+rax*2]
  20ae1d:	42 3c 00             	rex.X cmp al,0x0
  20ae20:	7c 10                	jl     20ae32 <kernel_font+0x2b2>
  20ae22:	10 10                	adc    BYTE PTR [rax],dl
  20ae24:	10 10                	adc    BYTE PTR [rax],dl
  20ae26:	10 00                	adc    BYTE PTR [rax],al
  20ae28:	42                   	rex.X
  20ae29:	42                   	rex.X
  20ae2a:	42                   	rex.X
  20ae2b:	42                   	rex.X
  20ae2c:	42                   	rex.X
  20ae2d:	42 3c 00             	rex.X cmp al,0x0
  20ae30:	42                   	rex.X
  20ae31:	42                   	rex.X
  20ae32:	42                   	rex.X
  20ae33:	42                   	rex.X
  20ae34:	42 24 18             	rex.X and al,0x18
  20ae37:	00 82 82 82 92 aa    	add    BYTE PTR [rdx-0x556d7d7e],al
  20ae3d:	aa                   	stos   BYTE PTR es:[rdi],al
  20ae3e:	44 00 42 42          	add    BYTE PTR [rdx+0x42],r8b
  20ae42:	24 18                	and    al,0x18
  20ae44:	24 42                	and    al,0x42
  20ae46:	42 00 44 44 44       	add    BYTE PTR [rsp+r8*2+0x44],al
  20ae4b:	38 10                	cmp    BYTE PTR [rax],dl
  20ae4d:	10 10                	adc    BYTE PTR [rax],dl
  20ae4f:	00 7e 40             	add    BYTE PTR [rsi+0x40],bh
  20ae52:	20 10                	and    BYTE PTR [rax],dl
  20ae54:	08 04 7e             	or     BYTE PTR [rsi+rdi*2],al
  20ae57:	00 3e                	add    BYTE PTR [rsi],bh
  20ae59:	02 02                	add    al,BYTE PTR [rdx]
  20ae5b:	02 02                	add    al,BYTE PTR [rdx]
  20ae5d:	02 3e                	add    bh,BYTE PTR [rsi]
  20ae5f:	00 00                	add    BYTE PTR [rax],al
  20ae61:	06                   	(bad)  
  20ae62:	0c 18                	or     al,0x18
  20ae64:	30 60 00             	xor    BYTE PTR [rax+0x0],ah
  20ae67:	00 7c 40 40          	add    BYTE PTR [rax+rax*2+0x40],bh
  20ae6b:	40                   	rex
  20ae6c:	40                   	rex
  20ae6d:	40 7c 00             	rex jl 20ae70 <kernel_font+0x2f0>
  20ae70:	3c 66                	cmp    al,0x66
	...
  20ae7e:	00 ff                	add    bh,bh
  20ae80:	0c 18                	or     al,0x18
  20ae82:	30 00                	xor    BYTE PTR [rax],al
  20ae84:	00 00                	add    BYTE PTR [rax],al
  20ae86:	00 00                	add    BYTE PTR [rax],al
  20ae88:	00 00                	add    BYTE PTR [rax],al
  20ae8a:	3c 40                	cmp    al,0x40
  20ae8c:	7c 42                	jl     20aed0 <kernel_font+0x350>
  20ae8e:	7c 00                	jl     20ae90 <kernel_font+0x310>
  20ae90:	02 02                	add    al,BYTE PTR [rdx]
  20ae92:	3e 42                	ds rex.X
  20ae94:	42                   	rex.X
  20ae95:	42                   	rex.X
  20ae96:	3e 00 00             	add    BYTE PTR ds:[rax],al
  20ae99:	00 3c 42             	add    BYTE PTR [rdx+rax*2],bh
  20ae9c:	02 42 3c             	add    al,BYTE PTR [rdx+0x3c]
  20ae9f:	00 40 40             	add    BYTE PTR [rax+0x40],al
  20aea2:	7c 42                	jl     20aee6 <kernel_font+0x366>
  20aea4:	42                   	rex.X
  20aea5:	42 7c 00             	rex.X jl 20aea8 <kernel_font+0x328>
  20aea8:	00 00                	add    BYTE PTR [rax],al
  20aeaa:	3c 42                	cmp    al,0x42
  20aeac:	7e 02                	jle    20aeb0 <kernel_font+0x330>
  20aeae:	3c 00                	cmp    al,0x0
  20aeb0:	38 04 04             	cmp    BYTE PTR [rsp+rax*1],al
  20aeb3:	3e 04 04             	ds add al,0x4
  20aeb6:	04 00                	add    al,0x0
  20aeb8:	00 00                	add    BYTE PTR [rax],al
  20aeba:	7c 42                	jl     20aefe <kernel_font+0x37e>
  20aebc:	42 7c 40             	rex.X jl 20aeff <kernel_font+0x37f>
  20aebf:	3c 02                	cmp    al,0x2
  20aec1:	02 3e                	add    bh,BYTE PTR [rsi]
  20aec3:	42                   	rex.X
  20aec4:	42                   	rex.X
  20aec5:	42                   	rex.X
  20aec6:	42 00 18             	rex.X add BYTE PTR [rax],bl
  20aec9:	00 1c 10             	add    BYTE PTR [rax+rdx*1],bl
  20aecc:	10 10                	adc    BYTE PTR [rax],dl
  20aece:	3c 00                	cmp    al,0x0
  20aed0:	18 00                	sbb    BYTE PTR [rax],al
  20aed2:	1c 10                	sbb    al,0x10
  20aed4:	10 10                	adc    BYTE PTR [rax],dl
  20aed6:	10 0e                	adc    BYTE PTR [rsi],cl
  20aed8:	00 02                	add    BYTE PTR [rdx],al
  20aeda:	42 22 1e             	rex.X and bl,BYTE PTR [rsi]
  20aedd:	22 42 00             	and    al,BYTE PTR [rdx+0x0]
  20aee0:	18 10                	sbb    BYTE PTR [rax],dl
  20aee2:	10 10                	adc    BYTE PTR [rax],dl
  20aee4:	10 10                	adc    BYTE PTR [rax],dl
  20aee6:	3c 00                	cmp    al,0x0
  20aee8:	00 00                	add    BYTE PTR [rax],al
  20aeea:	44 aa                	rex.R stos BYTE PTR es:[rdi],al
  20aeec:	92                   	xchg   edx,eax
  20aeed:	92                   	xchg   edx,eax
  20aeee:	82                   	(bad)  
  20aeef:	00 00                	add    BYTE PTR [rax],al
  20aef1:	00 3e                	add    BYTE PTR [rsi],bh
  20aef3:	42                   	rex.X
  20aef4:	42                   	rex.X
  20aef5:	42                   	rex.X
  20aef6:	42 00 00             	rex.X add BYTE PTR [rax],al
  20aef9:	00 3c 42             	add    BYTE PTR [rdx+rax*2],bh
  20aefc:	42                   	rex.X
  20aefd:	42 3c 00             	rex.X cmp al,0x0
  20af00:	00 00                	add    BYTE PTR [rax],al
  20af02:	3e 42                	ds rex.X
  20af04:	42                   	rex.X
  20af05:	3e 02 02             	add    al,BYTE PTR ds:[rdx]
  20af08:	00 00                	add    BYTE PTR [rax],al
  20af0a:	7c 42                	jl     20af4e <kernel_font+0x3ce>
  20af0c:	42 7c 40             	rex.X jl 20af4f <kernel_font+0x3cf>
  20af0f:	c0 00 00             	rol    BYTE PTR [rax],0x0
  20af12:	3a 46 02             	cmp    al,BYTE PTR [rsi+0x2]
  20af15:	02 02                	add    al,BYTE PTR [rdx]
  20af17:	00 00                	add    BYTE PTR [rax],al
  20af19:	00 7c 02 3c          	add    BYTE PTR [rdx+rax*1+0x3c],bh
  20af1d:	40                   	rex
  20af1e:	3e 00 04 04          	add    BYTE PTR ds:[rsp+rax*1],al
  20af22:	3e 04 04             	ds add al,0x4
  20af25:	04 38                	add    al,0x38
  20af27:	00 00                	add    BYTE PTR [rax],al
  20af29:	00 42 42             	add    BYTE PTR [rdx+0x42],al
  20af2c:	42                   	rex.X
  20af2d:	42 3c 00             	rex.X cmp al,0x0
  20af30:	00 00                	add    BYTE PTR [rax],al
  20af32:	42                   	rex.X
  20af33:	42                   	rex.X
  20af34:	42 24 18             	rex.X and al,0x18
  20af37:	00 00                	add    BYTE PTR [rax],al
  20af39:	00 82 92 92 92 6c    	add    BYTE PTR [rdx+0x6c929292],al
  20af3f:	00 00                	add    BYTE PTR [rax],al
  20af41:	00 42 24             	add    BYTE PTR [rdx+0x24],al
  20af44:	18 24 42             	sbb    BYTE PTR [rdx+rax*2],ah
  20af47:	00 00                	add    BYTE PTR [rax],al
  20af49:	00 42 42             	add    BYTE PTR [rdx+0x42],al
  20af4c:	42 7c 40             	rex.X jl 20af8f <kernel_font+0x40f>
  20af4f:	3c 00                	cmp    al,0x0
  20af51:	00 7e 20             	add    BYTE PTR [rsi+0x20],bh
  20af54:	18 04 7e             	sbb    BYTE PTR [rsi+rdi*2],al
  20af57:	00 30                	add    BYTE PTR [rax],dh
  20af59:	18 18                	sbb    BYTE PTR [rax],bl
  20af5b:	0e                   	(bad)  
  20af5c:	18 18                	sbb    BYTE PTR [rax],bl
  20af5e:	30 00                	xor    BYTE PTR [rax],al
  20af60:	18 18                	sbb    BYTE PTR [rax],bl
  20af62:	18 18                	sbb    BYTE PTR [rax],bl
  20af64:	18 18                	sbb    BYTE PTR [rax],bl
  20af66:	18 00                	sbb    BYTE PTR [rax],al
  20af68:	0c 18                	or     al,0x18
  20af6a:	18 70 18             	sbb    BYTE PTR [rax+0x18],dh
  20af6d:	18 0c 00             	sbb    BYTE PTR [rax+rax*1],cl
  20af70:	8c d6                	mov    esi,ss
  20af72:	62                   	(bad)  
  20af73:	00 00                	add    BYTE PTR [rax],al
  20af75:	00 00                	add    BYTE PTR [rax],al
  20af77:	00 ff                	add    bh,bh
  20af79:	ff                   	(bad)  
  20af7a:	ff                   	(bad)  
  20af7b:	ff                   	(bad)  
  20af7c:	ff                   	(bad)  
  20af7d:	ff                   	(bad)  
  20af7e:	ff                   	(bad)  
  20af7f:	ff 1e                	call   FWORD PTR [rsi]
  20af81:	33 03                	xor    eax,DWORD PTR [rbx]
  20af83:	33 1e                	xor    ebx,DWORD PTR [rsi]
  20af85:	18 30                	sbb    BYTE PTR [rax],dh
  20af87:	1e                   	(bad)  
  20af88:	00 33                	add    BYTE PTR [rbx],dh
  20af8a:	00 33                	add    BYTE PTR [rbx],dh
  20af8c:	33 33                	xor    esi,DWORD PTR [rbx]
  20af8e:	7e 00                	jle    20af90 <kernel_font+0x410>
  20af90:	38 00                	cmp    BYTE PTR [rax],al
  20af92:	1e                   	(bad)  
  20af93:	33 3f                	xor    edi,DWORD PTR [rdi]
  20af95:	03 1e                	add    ebx,DWORD PTR [rsi]
  20af97:	00 7e c3             	add    BYTE PTR [rsi-0x3d],bh
  20af9a:	3c 60                	cmp    al,0x60
  20af9c:	7c 66                	jl     20b004 <kernel_font+0x484>
  20af9e:	fc                   	cld    
  20af9f:	00 33                	add    BYTE PTR [rbx],dh
  20afa1:	00 1e                	add    BYTE PTR [rsi],bl
  20afa3:	30 3e                	xor    BYTE PTR [rsi],bh
  20afa5:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20afa8:	07                   	(bad)  
  20afa9:	00 1e                	add    BYTE PTR [rsi],bl
  20afab:	30 3e                	xor    BYTE PTR [rsi],bh
  20afad:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20afb0:	0c 0c                	or     al,0xc
  20afb2:	1e                   	(bad)  
  20afb3:	30 3e                	xor    BYTE PTR [rsi],bh
  20afb5:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20afb8:	00 00                	add    BYTE PTR [rax],al
  20afba:	3e 03 03             	add    eax,DWORD PTR ds:[rbx]
  20afbd:	3e 60                	ds (bad) 
  20afbf:	3c 7e                	cmp    al,0x7e
  20afc1:	c3                   	ret    
  20afc2:	3c 66                	cmp    al,0x66
  20afc4:	7e 06                	jle    20afcc <kernel_font+0x44c>
  20afc6:	3c 00                	cmp    al,0x0
  20afc8:	33 00                	xor    eax,DWORD PTR [rax]
  20afca:	1e                   	(bad)  
  20afcb:	33 3f                	xor    edi,DWORD PTR [rdi]
  20afcd:	03 1e                	add    ebx,DWORD PTR [rsi]
  20afcf:	00 07                	add    BYTE PTR [rdi],al
  20afd1:	00 1e                	add    BYTE PTR [rsi],bl
  20afd3:	33 3f                	xor    edi,DWORD PTR [rdi]
  20afd5:	03 1e                	add    ebx,DWORD PTR [rsi]
  20afd7:	00 33                	add    BYTE PTR [rbx],dh
  20afd9:	00 0e                	add    BYTE PTR [rsi],cl
  20afdb:	0c 0c                	or     al,0xc
  20afdd:	0c 1e                	or     al,0x1e
  20afdf:	00 3e                	add    BYTE PTR [rsi],bh
  20afe1:	63 1c 18             	movsxd ebx,DWORD PTR [rax+rbx*1]
  20afe4:	18 18                	sbb    BYTE PTR [rax],bl
  20afe6:	3c 00                	cmp    al,0x0
  20afe8:	07                   	(bad)  
  20afe9:	00 0e                	add    BYTE PTR [rsi],cl
  20afeb:	0c 0c                	or     al,0xc
  20afed:	0c 1e                	or     al,0x1e
  20afef:	00 33                	add    BYTE PTR [rbx],dh
  20aff1:	0c 1e                	or     al,0x1e
  20aff3:	33 33                	xor    esi,DWORD PTR [rbx]
  20aff5:	3f                   	(bad)  
  20aff6:	33 00                	xor    eax,DWORD PTR [rax]
  20aff8:	0c 0c                	or     al,0xc
  20affa:	00 1e                	add    BYTE PTR [rsi],bl
  20affc:	33 3f                	xor    edi,DWORD PTR [rdi]
  20affe:	33 00                	xor    eax,DWORD PTR [rax]
  20b000:	38 00                	cmp    BYTE PTR [rax],al
  20b002:	3f                   	(bad)  
  20b003:	06                   	(bad)  
  20b004:	1e                   	(bad)  
  20b005:	06                   	(bad)  
  20b006:	3f                   	(bad)  
  20b007:	00 00                	add    BYTE PTR [rax],al
  20b009:	00 fe                	add    dh,bh
  20b00b:	30 fe                	xor    dh,bh
  20b00d:	33 fe                	xor    edi,esi
  20b00f:	00 7c 36 33          	add    BYTE PTR [rsi+rsi*1+0x33],bh
  20b013:	7f 33                	jg     20b048 <kernel_font+0x4c8>
  20b015:	33 73 00             	xor    esi,DWORD PTR [rbx+0x0]
  20b018:	1e                   	(bad)  
  20b019:	33 00                	xor    eax,DWORD PTR [rax]
  20b01b:	1e                   	(bad)  
  20b01c:	33 33                	xor    esi,DWORD PTR [rbx]
  20b01e:	1e                   	(bad)  
  20b01f:	00 00                	add    BYTE PTR [rax],al
  20b021:	33 00                	xor    eax,DWORD PTR [rax]
  20b023:	1e                   	(bad)  
  20b024:	33 33                	xor    esi,DWORD PTR [rbx]
  20b026:	1e                   	(bad)  
  20b027:	00 00                	add    BYTE PTR [rax],al
  20b029:	07                   	(bad)  
  20b02a:	00 1e                	add    BYTE PTR [rsi],bl
  20b02c:	33 33                	xor    esi,DWORD PTR [rbx]
  20b02e:	1e                   	(bad)  
  20b02f:	00 1e                	add    BYTE PTR [rsi],bl
  20b031:	33 00                	xor    eax,DWORD PTR [rax]
  20b033:	33 33                	xor    esi,DWORD PTR [rbx]
  20b035:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20b038:	00 07                	add    BYTE PTR [rdi],al
  20b03a:	00 33                	add    BYTE PTR [rbx],dh
  20b03c:	33 33                	xor    esi,DWORD PTR [rbx]
  20b03e:	7e 00                	jle    20b040 <kernel_font+0x4c0>
  20b040:	00 33                	add    BYTE PTR [rbx],dh
  20b042:	00 33                	add    BYTE PTR [rbx],dh
  20b044:	33 3f                	xor    edi,DWORD PTR [rdi]
  20b046:	30 1f                	xor    BYTE PTR [rdi],bl
  20b048:	63 1c 3e             	movsxd ebx,DWORD PTR [rsi+rdi*1]
  20b04b:	63 63 3e             	movsxd esp,DWORD PTR [rbx+0x3e]
  20b04e:	1c 00                	sbb    al,0x0
  20b050:	33 00                	xor    eax,DWORD PTR [rax]
  20b052:	33 33                	xor    esi,DWORD PTR [rbx]
  20b054:	33 33                	xor    esi,DWORD PTR [rbx]
  20b056:	1e                   	(bad)  
  20b057:	00 18                	add    BYTE PTR [rax],bl
  20b059:	18 7e 03             	sbb    BYTE PTR [rsi+0x3],bh
  20b05c:	03 7e 18             	add    edi,DWORD PTR [rsi+0x18]
  20b05f:	18 1c 36             	sbb    BYTE PTR [rsi+rsi*1],bl
  20b062:	26 0f 06             	es clts 
  20b065:	67 3f                	addr32 (bad) 
  20b067:	00 33                	add    BYTE PTR [rbx],dh
  20b069:	33 1e                	xor    ebx,DWORD PTR [rsi]
  20b06b:	3f                   	(bad)  
  20b06c:	0c 3f                	or     al,0x3f
  20b06e:	0c 00                	or     al,0x0
  20b070:	0f 1b 1b             	bndstx [rbx],bnd3
  20b073:	2f                   	(bad)  
  20b074:	33 7b 33             	xor    edi,DWORD PTR [rbx+0x33]
  20b077:	70 70                	jo     20b0e9 <kernel_font+0x569>
  20b079:	d8 18                	fcomp  DWORD PTR [rax]
  20b07b:	7e 18                	jle    20b095 <kernel_font+0x515>
  20b07d:	18 1b                	sbb    BYTE PTR [rbx],bl
  20b07f:	0e                   	(bad)  
  20b080:	38 00                	cmp    BYTE PTR [rax],al
  20b082:	1e                   	(bad)  
  20b083:	30 3e                	xor    BYTE PTR [rsi],bh
  20b085:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20b088:	1c 00                	sbb    al,0x0
  20b08a:	0e                   	(bad)  
  20b08b:	0c 0c                	or     al,0xc
  20b08d:	0c 1e                	or     al,0x1e
  20b08f:	00 00                	add    BYTE PTR [rax],al
  20b091:	38 00                	cmp    BYTE PTR [rax],al
  20b093:	1e                   	(bad)  
  20b094:	33 33                	xor    esi,DWORD PTR [rbx]
  20b096:	1e                   	(bad)  
  20b097:	00 00                	add    BYTE PTR [rax],al
  20b099:	38 00                	cmp    BYTE PTR [rax],al
  20b09b:	33 33                	xor    esi,DWORD PTR [rbx]
  20b09d:	33 7e 00             	xor    edi,DWORD PTR [rsi+0x0]
  20b0a0:	00 1f                	add    BYTE PTR [rdi],bl
  20b0a2:	00 1f                	add    BYTE PTR [rdi],bl
  20b0a4:	33 33                	xor    esi,DWORD PTR [rbx]
  20b0a6:	33 00                	xor    eax,DWORD PTR [rax]
  20b0a8:	3f                   	(bad)  
  20b0a9:	00 33                	add    BYTE PTR [rbx],dh
  20b0ab:	37                   	(bad)  
  20b0ac:	3f                   	(bad)  
  20b0ad:	3b 33                	cmp    esi,DWORD PTR [rbx]
  20b0af:	00 3c 36             	add    BYTE PTR [rsi+rsi*1],bh
  20b0b2:	36 7c 00             	ss jl  20b0b5 <kernel_font+0x535>
  20b0b5:	7e 00                	jle    20b0b7 <kernel_font+0x537>
  20b0b7:	00 3c 66             	add    BYTE PTR [rsi+riz*2],bh
  20b0ba:	66 3c 00             	data16 cmp al,0x0
  20b0bd:	7e 00                	jle    20b0bf <kernel_font+0x53f>
  20b0bf:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
  20b0c2:	0c 06                	or     al,0x6
  20b0c4:	03 33                	add    esi,DWORD PTR [rbx]
  20b0c6:	1e                   	(bad)  
  20b0c7:	00 00                	add    BYTE PTR [rax],al
  20b0c9:	00 00                	add    BYTE PTR [rax],al
  20b0cb:	3f                   	(bad)  
  20b0cc:	03 03                	add    eax,DWORD PTR [rbx]
  20b0ce:	00 00                	add    BYTE PTR [rax],al
  20b0d0:	00 00                	add    BYTE PTR [rax],al
  20b0d2:	00 3f                	add    BYTE PTR [rdi],bh
  20b0d4:	30 30                	xor    BYTE PTR [rax],dh
  20b0d6:	00 00                	add    BYTE PTR [rax],al
  20b0d8:	63 33                	movsxd esi,DWORD PTR [rbx]
  20b0da:	1b 7c c6 73          	sbb    edi,DWORD PTR [rsi+rax*8+0x73]
  20b0de:	19 f8                	sbb    eax,edi
  20b0e0:	63 33                	movsxd esi,DWORD PTR [rbx]
  20b0e2:	1b cf                	sbb    ecx,edi
  20b0e4:	e6 f3                	out    0xf3,al
  20b0e6:	f9                   	stc    
  20b0e7:	c0 00 18             	rol    BYTE PTR [rax],0x18
  20b0ea:	00 18                	add    BYTE PTR [rax],bl
  20b0ec:	18 3c 3c             	sbb    BYTE PTR [rsp+rdi*1],bh
  20b0ef:	18 00                	sbb    BYTE PTR [rax],al
  20b0f1:	cc                   	int3   
  20b0f2:	66 33 66 cc          	xor    sp,WORD PTR [rsi-0x34]
  20b0f6:	00 00                	add    BYTE PTR [rax],al
  20b0f8:	00 33                	add    BYTE PTR [rbx],dh
  20b0fa:	66 cc                	data16 int3 
  20b0fc:	66 33 00             	xor    ax,WORD PTR [rax]
  20b0ff:	00 44 11 44          	add    BYTE PTR [rcx+rdx*1+0x44],al
  20b103:	11 44 11 44          	adc    DWORD PTR [rcx+rdx*1+0x44],eax
  20b107:	11 aa 55 aa 55 aa    	adc    DWORD PTR [rdx-0x55aa55ab],ebp
  20b10d:	55                   	push   rbp
  20b10e:	aa                   	stos   BYTE PTR es:[rdi],al
  20b10f:	55                   	push   rbp
  20b110:	bb ee bb ee bb       	mov    ebx,0xbbeebbee
  20b115:	ee                   	out    dx,al
  20b116:	bb ee 18 18 18       	mov    ebx,0x181818ee
  20b11b:	18 18                	sbb    BYTE PTR [rax],bl
  20b11d:	18 18                	sbb    BYTE PTR [rax],bl
  20b11f:	18 18                	sbb    BYTE PTR [rax],bl
  20b121:	18 18                	sbb    BYTE PTR [rax],bl
  20b123:	18 1f                	sbb    BYTE PTR [rdi],bl
  20b125:	18 18                	sbb    BYTE PTR [rax],bl
  20b127:	18 18                	sbb    BYTE PTR [rax],bl
  20b129:	18 1f                	sbb    BYTE PTR [rdi],bl
  20b12b:	18 1f                	sbb    BYTE PTR [rdi],bl
  20b12d:	18 18                	sbb    BYTE PTR [rax],bl
  20b12f:	18 6c 6c 6c          	sbb    BYTE PTR [rsp+rbp*2+0x6c],ch
  20b133:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b134:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b135:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b136:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b137:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b138:	00 00                	add    BYTE PTR [rax],al
  20b13a:	00 00                	add    BYTE PTR [rax],al
  20b13c:	7f 6c                	jg     20b1aa <kernel_font+0x62a>
  20b13e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b13f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b140:	00 00                	add    BYTE PTR [rax],al
  20b142:	1f                   	(bad)  
  20b143:	18 1f                	sbb    BYTE PTR [rdi],bl
  20b145:	18 18                	sbb    BYTE PTR [rax],bl
  20b147:	18 6c 6c 6f          	sbb    BYTE PTR [rsp+rbp*2+0x6f],ch
  20b14b:	60                   	(bad)  
  20b14c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b14d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b14e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b14f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b150:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b151:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b152:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b153:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b154:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b155:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b156:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b157:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b158:	00 00                	add    BYTE PTR [rax],al
  20b15a:	7f 60                	jg     20b1bc <kernel_font+0x63c>
  20b15c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b15d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b15e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b15f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b160:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b161:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b163:	60                   	(bad)  
  20b164:	7f 00                	jg     20b166 <kernel_font+0x5e6>
  20b166:	00 00                	add    BYTE PTR [rax],al
  20b168:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b169:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b16a:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b16b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b16c:	7f 00                	jg     20b16e <kernel_font+0x5ee>
  20b16e:	00 00                	add    BYTE PTR [rax],al
  20b170:	18 18                	sbb    BYTE PTR [rax],bl
  20b172:	1f                   	(bad)  
  20b173:	18 1f                	sbb    BYTE PTR [rdi],bl
  20b175:	00 00                	add    BYTE PTR [rax],al
  20b177:	00 00                	add    BYTE PTR [rax],al
  20b179:	00 00                	add    BYTE PTR [rax],al
  20b17b:	00 1f                	add    BYTE PTR [rdi],bl
  20b17d:	18 18                	sbb    BYTE PTR [rax],bl
  20b17f:	18 18                	sbb    BYTE PTR [rax],bl
  20b181:	18 18                	sbb    BYTE PTR [rax],bl
  20b183:	18 f8                	sbb    al,bh
  20b185:	00 00                	add    BYTE PTR [rax],al
  20b187:	00 18                	add    BYTE PTR [rax],bl
  20b189:	18 18                	sbb    BYTE PTR [rax],bl
  20b18b:	18 ff                	sbb    bh,bh
  20b18d:	00 00                	add    BYTE PTR [rax],al
  20b18f:	00 00                	add    BYTE PTR [rax],al
  20b191:	00 00                	add    BYTE PTR [rax],al
  20b193:	00 ff                	add    bh,bh
  20b195:	18 18                	sbb    BYTE PTR [rax],bl
  20b197:	18 18                	sbb    BYTE PTR [rax],bl
  20b199:	18 18                	sbb    BYTE PTR [rax],bl
  20b19b:	18 f8                	sbb    al,bh
  20b19d:	18 18                	sbb    BYTE PTR [rax],bl
  20b19f:	18 00                	sbb    BYTE PTR [rax],al
  20b1a1:	00 00                	add    BYTE PTR [rax],al
  20b1a3:	00 ff                	add    bh,bh
  20b1a5:	00 00                	add    BYTE PTR [rax],al
  20b1a7:	00 18                	add    BYTE PTR [rax],bl
  20b1a9:	18 18                	sbb    BYTE PTR [rax],bl
  20b1ab:	18 ff                	sbb    bh,bh
  20b1ad:	18 18                	sbb    BYTE PTR [rax],bl
  20b1af:	18 18                	sbb    BYTE PTR [rax],bl
  20b1b1:	18 f8                	sbb    al,bh
  20b1b3:	18 f8                	sbb    al,bh
  20b1b5:	18 18                	sbb    BYTE PTR [rax],bl
  20b1b7:	18 6c 6c 6c          	sbb    BYTE PTR [rsp+rbp*2+0x6c],ch
  20b1bb:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1bc:	ec                   	in     al,dx
  20b1bd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1be:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1bf:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1c0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1c1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1c2:	ec                   	in     al,dx
  20b1c3:	0c fc                	or     al,0xfc
  20b1c5:	00 00                	add    BYTE PTR [rax],al
  20b1c7:	00 00                	add    BYTE PTR [rax],al
  20b1c9:	00 fc                	add    ah,bh
  20b1cb:	0c ec                	or     al,0xec
  20b1cd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1ce:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1cf:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1d0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1d1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1d2:	ef                   	out    dx,eax
  20b1d3:	00 ff                	add    bh,bh
  20b1d5:	00 00                	add    BYTE PTR [rax],al
  20b1d7:	00 00                	add    BYTE PTR [rax],al
  20b1d9:	00 ff                	add    bh,bh
  20b1db:	00 ef                	add    bh,ch
  20b1dd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1de:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1df:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e2:	ec                   	in     al,dx
  20b1e3:	0c ec                	or     al,0xec
  20b1e5:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e6:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e7:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1e8:	00 00                	add    BYTE PTR [rax],al
  20b1ea:	ff 00                	inc    DWORD PTR [rax]
  20b1ec:	ff 00                	inc    DWORD PTR [rax]
  20b1ee:	00 00                	add    BYTE PTR [rax],al
  20b1f0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1f2:	ef                   	out    dx,eax
  20b1f3:	00 ef                	add    bh,ch
  20b1f5:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1f6:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1f7:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b1f8:	18 18                	sbb    BYTE PTR [rax],bl
  20b1fa:	ff 00                	inc    DWORD PTR [rax]
  20b1fc:	ff 00                	inc    DWORD PTR [rax]
  20b1fe:	00 00                	add    BYTE PTR [rax],al
  20b200:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b201:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b202:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b203:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b204:	ff 00                	inc    DWORD PTR [rax]
  20b206:	00 00                	add    BYTE PTR [rax],al
  20b208:	00 00                	add    BYTE PTR [rax],al
  20b20a:	ff 00                	inc    DWORD PTR [rax]
  20b20c:	ff 18                	call   FWORD PTR [rax]
  20b20e:	18 18                	sbb    BYTE PTR [rax],bl
  20b210:	00 00                	add    BYTE PTR [rax],al
  20b212:	00 00                	add    BYTE PTR [rax],al
  20b214:	ff 6c 6c 6c          	jmp    FWORD PTR [rsp+rbp*2+0x6c]
  20b218:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b219:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b21a:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b21b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b21c:	fc                   	cld    
  20b21d:	00 00                	add    BYTE PTR [rax],al
  20b21f:	00 18                	add    BYTE PTR [rax],bl
  20b221:	18 f8                	sbb    al,bh
  20b223:	18 f8                	sbb    al,bh
  20b225:	00 00                	add    BYTE PTR [rax],al
  20b227:	00 00                	add    BYTE PTR [rax],al
  20b229:	00 f8                	add    al,bh
  20b22b:	18 f8                	sbb    al,bh
  20b22d:	18 18                	sbb    BYTE PTR [rax],bl
  20b22f:	18 00                	sbb    BYTE PTR [rax],al
  20b231:	00 00                	add    BYTE PTR [rax],al
  20b233:	00 fc                	add    ah,bh
  20b235:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b236:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b237:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b238:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b239:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b23a:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b23b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b23c:	ef                   	out    dx,eax
  20b23d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b23e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b23f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b240:	18 18                	sbb    BYTE PTR [rax],bl
  20b242:	ff 00                	inc    DWORD PTR [rax]
  20b244:	ff 18                	call   FWORD PTR [rax]
  20b246:	18 18                	sbb    BYTE PTR [rax],bl
  20b248:	18 18                	sbb    BYTE PTR [rax],bl
  20b24a:	18 18                	sbb    BYTE PTR [rax],bl
  20b24c:	1f                   	(bad)  
  20b24d:	00 00                	add    BYTE PTR [rax],al
  20b24f:	00 00                	add    BYTE PTR [rax],al
  20b251:	00 00                	add    BYTE PTR [rax],al
  20b253:	00 f8                	add    al,bh
  20b255:	18 18                	sbb    BYTE PTR [rax],bl
  20b257:	18 ff                	sbb    bh,bh
  20b259:	ff                   	(bad)  
  20b25a:	ff                   	(bad)  
  20b25b:	ff                   	(bad)  
  20b25c:	ff                   	(bad)  
  20b25d:	ff                   	(bad)  
  20b25e:	ff                   	(bad)  
  20b25f:	ff 00                	inc    DWORD PTR [rax]
  20b261:	00 00                	add    BYTE PTR [rax],al
  20b263:	00 ff                	add    bh,bh
  20b265:	ff                   	(bad)  
  20b266:	ff                   	(bad)  
  20b267:	ff 0f                	dec    DWORD PTR [rdi]
  20b269:	0f                   	(bad)  
  20b26a:	0f                   	(bad)  
  20b26b:	0f                   	(bad)  
  20b26c:	0f                   	(bad)  
  20b26d:	0f                   	(bad)  
  20b26e:	0f                   	(bad)  
  20b26f:	0f f0                	(bad)  
  20b271:	f0 f0 f0 f0 f0 f0 f0 	lock lock lock lock lock lock lock (bad) 
  20b278:	ff 
  20b279:	ff                   	(bad)  
  20b27a:	ff                   	(bad)  
  20b27b:	ff 00                	inc    DWORD PTR [rax]
  20b27d:	00 00                	add    BYTE PTR [rax],al
  20b27f:	00 00                	add    BYTE PTR [rax],al
  20b281:	00 6e 3b             	add    BYTE PTR [rsi+0x3b],ch
  20b284:	13 3b                	adc    edi,DWORD PTR [rbx]
  20b286:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b287:	00 00                	add    BYTE PTR [rax],al
  20b289:	1e                   	(bad)  
  20b28a:	33 1f                	xor    ebx,DWORD PTR [rdi]
  20b28c:	33 1f                	xor    ebx,DWORD PTR [rdi]
  20b28e:	03 03                	add    eax,DWORD PTR [rbx]
  20b290:	00 7f 63             	add    BYTE PTR [rdi+0x63],bh
  20b293:	03 03                	add    eax,DWORD PTR [rbx]
  20b295:	03 03                	add    eax,DWORD PTR [rbx]
  20b297:	00 00                	add    BYTE PTR [rax],al
  20b299:	7f 36                	jg     20b2d1 <kernel_font+0x751>
  20b29b:	36 36 36 36 00 7f 66 	ss ss ss add BYTE PTR ss:[rdi+0x66],bh
  20b2a2:	0c 18                	or     al,0x18
  20b2a4:	0c 66                	or     al,0x66
  20b2a6:	7f 00                	jg     20b2a8 <kernel_font+0x728>
  20b2a8:	00 00                	add    BYTE PTR [rax],al
  20b2aa:	7e 33                	jle    20b2df <kernel_font+0x75f>
  20b2ac:	33 33                	xor    esi,DWORD PTR [rbx]
  20b2ae:	1e                   	(bad)  
  20b2af:	00 00                	add    BYTE PTR [rax],al
  20b2b1:	66 66 66 66 3e 06    	data16 data16 data16 data16 ds (bad) 
  20b2b7:	03 00                	add    eax,DWORD PTR [rax]
  20b2b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b2ba:	3b 18                	cmp    ebx,DWORD PTR [rax]
  20b2bc:	18 18                	sbb    BYTE PTR [rax],bl
  20b2be:	18 00                	sbb    BYTE PTR [rax],al
  20b2c0:	3f                   	(bad)  
  20b2c1:	0c 1e                	or     al,0x1e
  20b2c3:	33 33                	xor    esi,DWORD PTR [rbx]
  20b2c5:	1e                   	(bad)  
  20b2c6:	0c 3f                	or     al,0x3f
  20b2c8:	1c 36                	sbb    al,0x36
  20b2ca:	63 7f 63             	movsxd edi,DWORD PTR [rdi+0x63]
  20b2cd:	36 1c 00             	ss sbb al,0x0
  20b2d0:	1c 36                	sbb    al,0x36
  20b2d2:	63 63 36             	movsxd esp,DWORD PTR [rbx+0x36]
  20b2d5:	36 77 00             	ss ja  20b2d8 <kernel_font+0x758>
  20b2d8:	38 0c 18             	cmp    BYTE PTR [rax+rbx*1],cl
  20b2db:	3e 33 33             	xor    esi,DWORD PTR ds:[rbx]
  20b2de:	1e                   	(bad)  
  20b2df:	00 00                	add    BYTE PTR [rax],al
  20b2e1:	00 7e db             	add    BYTE PTR [rsi-0x25],bh
  20b2e4:	db 7e 00             	fstp   TBYTE PTR [rsi+0x0]
  20b2e7:	00 60 30             	add    BYTE PTR [rax+0x30],ah
  20b2ea:	7e db                	jle    20b2c7 <kernel_font+0x747>
  20b2ec:	db 7e 06             	fstp   TBYTE PTR [rsi+0x6]
  20b2ef:	03 3c 06             	add    edi,DWORD PTR [rsi+rax*1]
  20b2f2:	03 3f                	add    edi,DWORD PTR [rdi]
  20b2f4:	03 06                	add    eax,DWORD PTR [rsi]
  20b2f6:	3c 00                	cmp    al,0x0
  20b2f8:	1e                   	(bad)  
  20b2f9:	33 33                	xor    esi,DWORD PTR [rbx]
  20b2fb:	33 33                	xor    esi,DWORD PTR [rbx]
  20b2fd:	33 33                	xor    esi,DWORD PTR [rbx]
  20b2ff:	00 00                	add    BYTE PTR [rax],al
  20b301:	3f                   	(bad)  
  20b302:	00 3f                	add    BYTE PTR [rdi],bh
  20b304:	00 3f                	add    BYTE PTR [rdi],bh
  20b306:	00 00                	add    BYTE PTR [rax],al
  20b308:	0c 0c                	or     al,0xc
  20b30a:	3f                   	(bad)  
  20b30b:	0c 0c                	or     al,0xc
  20b30d:	00 3f                	add    BYTE PTR [rdi],bh
  20b30f:	00 06                	add    BYTE PTR [rsi],al
  20b311:	0c 18                	or     al,0x18
  20b313:	0c 06                	or     al,0x6
  20b315:	00 3f                	add    BYTE PTR [rdi],bh
  20b317:	00 18                	add    BYTE PTR [rax],bl
  20b319:	0c 06                	or     al,0x6
  20b31b:	0c 18                	or     al,0x18
  20b31d:	00 3f                	add    BYTE PTR [rdi],bh
  20b31f:	00 70 d8             	add    BYTE PTR [rax-0x28],dh
  20b322:	d8 18                	fcomp  DWORD PTR [rax]
  20b324:	18 18                	sbb    BYTE PTR [rax],bl
  20b326:	18 18                	sbb    BYTE PTR [rax],bl
  20b328:	18 18                	sbb    BYTE PTR [rax],bl
  20b32a:	18 18                	sbb    BYTE PTR [rax],bl
  20b32c:	18 1b                	sbb    BYTE PTR [rbx],bl
  20b32e:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
  20b330:	0c 0c                	or     al,0xc
  20b332:	00 3f                	add    BYTE PTR [rdi],bh
  20b334:	00 0c 0c             	add    BYTE PTR [rsp+rcx*1],cl
  20b337:	00 00                	add    BYTE PTR [rax],al
  20b339:	4e 39 00             	rex.WRX cmp QWORD PTR [rax],r8
  20b33c:	4e 39 00             	rex.WRX cmp QWORD PTR [rax],r8
  20b33f:	00 1c 36             	add    BYTE PTR [rsi+rsi*1],bl
  20b342:	36 1c 00             	ss sbb al,0x0
  20b345:	00 00                	add    BYTE PTR [rax],al
  20b347:	00 00                	add    BYTE PTR [rax],al
  20b349:	00 00                	add    BYTE PTR [rax],al
  20b34b:	18 18                	sbb    BYTE PTR [rax],bl
  20b34d:	00 00                	add    BYTE PTR [rax],al
  20b34f:	00 00                	add    BYTE PTR [rax],al
  20b351:	00 00                	add    BYTE PTR [rax],al
  20b353:	00 18                	add    BYTE PTR [rax],bl
  20b355:	00 00                	add    BYTE PTR [rax],al
  20b357:	00 f0                	add    al,dh
  20b359:	30 30                	xor    BYTE PTR [rax],dh
  20b35b:	30 37                	xor    BYTE PTR [rdi],dh
  20b35d:	36 3c 38             	ss cmp al,0x38
  20b360:	1e                   	(bad)  
  20b361:	36 36 36 36 00 00    	ss ss ss add BYTE PTR ss:[rax],al
  20b367:	00 1e                	add    BYTE PTR [rsi],bl
  20b369:	30 1c 06             	xor    BYTE PTR [rsi+rax*1],bl
  20b36c:	3e 00 00             	add    BYTE PTR ds:[rax],al
  20b36f:	00 00                	add    BYTE PTR [rax],al
  20b371:	00 3c 3c             	add    BYTE PTR [rsp+rdi*1],bh
  20b374:	3c 3c                	cmp    al,0x3c
  20b376:	00 00                	add    BYTE PTR [rax],al
  20b378:	ff                   	(bad)  
  20b379:	ff                   	(bad)  
  20b37a:	ff                   	(bad)  
  20b37b:	ff                   	(bad)  
  20b37c:	ff                   	(bad)  
  20b37d:	ff                   	(bad)  
  20b37e:	ff                   	(bad)  
  20b37f:	ff 74 65 73          	push   QWORD PTR [rbp+riz*2+0x73]
  20b383:	74 2d                	je     20b3b2 <kernel_font+0x832>
  20b385:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20b388:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b389:	61                   	(bad)  
  20b38a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b38b:	64 73 00             	fs jae 20b38e <kernel_font+0x80e>
  20b38e:	00 00                	add    BYTE PTR [rax],al
  20b390:	57                   	push   rdi
  20b391:	65 20 72 65          	and    BYTE PTR gs:[rdx+0x65],dh
  20b395:	61                   	(bad)  
  20b396:	64 20 79 6f          	and    BYTE PTR fs:[rcx+0x6f],bh
  20b39a:	75 2c                	jne    20b3c8 <kernel_font+0x848>
  20b39c:	20 6c 6f 75          	and    BYTE PTR [rdi+rbp*2+0x75],ch
  20b3a0:	64 20 61 6e          	and    BYTE PTR fs:[rcx+0x6e],ah
  20b3a4:	64 20 63 6c          	and    BYTE PTR fs:[rbx+0x6c],ah
  20b3a8:	65 61                	gs (bad) 
  20b3aa:	72 2c                	jb     20b3d8 <kernel_font+0x858>
  20b3ac:	20 73 65             	and    BYTE PTR [rbx+0x65],dh
  20b3af:	72 67                	jb     20b418 <kernel_font+0x898>
  20b3b1:	65 61                	gs (bad) 
  20b3b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b3b4:	74 21                	je     20b3d7 <kernel_font+0x857>
  20b3b6:	0a 00                	or     al,BYTE PTR [rax]
  20b3b8:	0a 6b 65             	or     ch,BYTE PTR [rbx+0x65]
  20b3bb:	72 6e                	jb     20b42b <kernel_font+0x8ab>
  20b3bd:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  20b3bf:	2d 63 6f 6e 73       	sub    eax,0x736e6f63
  20b3c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b3c5:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b3c6:	65 3e 20 00          	gs and BYTE PTR ds:[rax],al
  20b3ca:	0d 0a 00 00 00       	or     eax,0xa
  20b3cf:	00 6d 6e             	add    BYTE PTR [rbp+0x6e],ch
  20b3d2:	6b 6d 61 69          	imul   ebp,DWORD PTR [rbp+0x61],0x69
  20b3d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b3d7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b3da:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b3de:	73 36                	jae    20b416 <kernel_font+0x896>
  20b3e0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b3e3:	66 69 67 31 32 73    	imul   sp,WORD PTR [rdi+0x31],0x7332
  20b3e9:	65 74 75             	gs je  20b461 <kernel_font+0x8e1>
  20b3ec:	70 5f                	jo     20b44d <kernel_font+0x8cd>
  20b3ee:	70 61                	jo     20b451 <kernel_font+0x8d1>
  20b3f0:	67 69 6e 67 45 50 31 	imul   ebp,DWORD PTR [esi+0x67],0x39315045
  20b3f7:	39 
  20b3f8:	73 74                	jae    20b46e <kernel_font+0x8ee>
  20b3fa:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
  20b401:	72 61                	jb     20b464 <kernel_font+0x8e4>
  20b403:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b404:	65 62                	gs (bad) 
  20b406:	75 66                	jne    20b46e <kernel_font+0x8ee>
  20b408:	66 65 72 00          	data16 gs jb 20b40c <kernel_font+0x88c>
  20b40c:	00 00                	add    BYTE PTR [rax],al
  20b40e:	00 00                	add    BYTE PTR [rax],al
  20b410:	5f                   	pop    rdi
  20b411:	5a                   	pop    rdx
  20b412:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b416:	73 36                	jae    20b44e <kernel_font+0x8ce>
  20b418:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b41b:	66 69 67 31 36 63    	imul   sp,WORD PTR [rdi+0x31],0x6336
  20b421:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b422:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b423:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20b429:	5f                   	pop    rdi
  20b42a:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b42b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b42d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b42e:	72 79                	jb     20b4a9 <kernel_font+0x929>
  20b430:	45 50                	rex.RB push r8
  20b432:	31 39                	xor    DWORD PTR [rcx],edi
  20b434:	73 74                	jae    20b4aa <kernel_font+0x92a>
  20b436:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
  20b43d:	72 61                	jb     20b4a0 <kernel_font+0x920>
  20b43f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b440:	65 62                	gs (bad) 
  20b442:	75 66                	jne    20b4aa <kernel_font+0x92a>
  20b444:	66 65 72 50          	data16 gs jb 20b498 <kernel_font+0x918>
  20b448:	31 38                	xor    DWORD PTR [rax],edi
  20b44a:	73 74                	jae    20b4c0 <kernel_font+0x940>
  20b44c:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
  20b453:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b455:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b456:	72 79                	jb     20b4d1 <kernel_font+0x951>
  20b458:	5f                   	pop    rdi
  20b459:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b45a:	61                   	(bad)  
  20b45b:	70 00                	jo     20b45d <kernel_font+0x8dd>
  20b45d:	00 00                	add    BYTE PTR [rax],al
  20b45f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b462:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b466:	73 36                	jae    20b49e <kernel_font+0x91e>
  20b468:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b46b:	66 69 67 31 38 63    	imul   sp,WORD PTR [rdi+0x31],0x6338
  20b471:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b472:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b473:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20b479:	5f                   	pop    rdi
  20b47a:	67 72 61             	addr32 jb 20b4de <kernel_font+0x95e>
  20b47d:	70 68                	jo     20b4e7 <kernel_font+0x967>
  20b47f:	69 63 73 45 50 31 39 	imul   esp,DWORD PTR [rbx+0x73],0x39315045
  20b486:	73 74                	jae    20b4fc <kernel_font+0x97c>
  20b488:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
  20b48f:	72 61                	jb     20b4f2 <kernel_font+0x972>
  20b491:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b492:	65 62                	gs (bad) 
  20b494:	75 66                	jne    20b4fc <kernel_font+0x97c>
  20b496:	66 65 72 00          	data16 gs jb 20b49a <kernel_font+0x91a>
  20b49a:	00 00                	add    BYTE PTR [rax],al
  20b49c:	00 00                	add    BYTE PTR [rax],al
  20b49e:	00 00                	add    BYTE PTR [rax],al
  20b4a0:	5f                   	pop    rdi
  20b4a1:	5a                   	pop    rdx
  20b4a2:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b4a6:	73 36                	jae    20b4de <kernel_font+0x95e>
  20b4a8:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b4ab:	66 69 67 31 33 63    	imul   sp,WORD PTR [rdi+0x31],0x6333
  20b4b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b4b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b4b3:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20b4b9:	5f                   	pop    rdi
  20b4ba:	70 63                	jo     20b51f <kernel_font+0x99f>
  20b4bc:	69 45 50 4e 53 5f 34 	imul   eax,DWORD PTR [rbp+0x50],0x345f534e
  20b4c3:	61                   	(bad)  
  20b4c4:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
  20b4c7:	35 72 73 64 70       	xor    eax,0x70647372
  20b4cc:	32 45 00             	xor    al,BYTE PTR [rbp+0x0]
  20b4cf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b4d2:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b4d6:	73 36                	jae    20b50e <kernel_font+0x98e>
  20b4d8:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b4db:	66 69 67 32 31 63    	imul   sp,WORD PTR [rdi+0x32],0x6331
  20b4e1:	61                   	(bad)  
  20b4e2:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b4e3:	63 75 6c             	movsxd esi,DWORD PTR [rbp+0x6c]
  20b4e6:	61                   	(bad)  
  20b4e7:	74 65                	je     20b54e <kernel_font+0x9ce>
  20b4e9:	5f                   	pop    rdi
  20b4ea:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
  20b4ee:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  20b4f0:	5f                   	pop    rdi
  20b4f1:	73 69                	jae    20b55c <kernel_font+0x9dc>
  20b4f3:	7a 65                	jp     20b55a <kernel_font+0x9da>
  20b4f5:	45 76 00             	rex.RB jbe 20b4f8 <kernel_font+0x978>
  20b4f8:	5f                   	pop    rdi
  20b4f9:	5a                   	pop    rdx
  20b4fa:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20b4fe:	73 36                	jae    20b536 <kernel_font+0x9b6>
  20b500:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20b503:	66 69 67 31 39 63    	imul   sp,WORD PTR [rdi+0x31],0x6339
  20b509:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b50a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b50b:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20b511:	5f                   	pop    rdi
  20b512:	75 73                	jne    20b587 <kernel_font+0xa07>
  20b514:	65 72 73             	gs jb  20b58a <kernel_font+0xa0a>
  20b517:	70 61                	jo     20b57a <kernel_font+0x9fa>
  20b519:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
  20b51c:	76 00                	jbe    20b51e <kernel_font+0x99e>
  20b51e:	5f                   	pop    rdi
  20b51f:	5a                   	pop    rdx
  20b520:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
  20b524:	75 33                	jne    20b559 <kernel_font+0x9d9>
  20b526:	74 73                	je     20b59b <kernel_font+0xa1b>
  20b528:	73 38                	jae    20b562 <kernel_font+0x9e2>
  20b52a:	74 73                	je     20b59f <kernel_font+0xa1f>
  20b52c:	73 5f                	jae    20b58d <kernel_font+0xa0d>
  20b52e:	69 6e 69 74 45 76 00 	imul   ebp,DWORD PTR [rsi+0x69],0x764574
  20b535:	74 73                	je     20b5aa <kernel_font+0xa2a>
  20b537:	73 5f                	jae    20b598 <kernel_font+0xa18>
  20b539:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  20b540:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b543:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
  20b547:	75 33                	jne    20b57c <kernel_font+0x9fc>
  20b549:	74 73                	je     20b5be <kernel_font+0xa3e>
  20b54b:	73 31                	jae    20b57e <kernel_font+0x9fe>
  20b54d:	32 74 73 73          	xor    dh,BYTE PTR [rbx+rsi*2+0x73]
  20b551:	5f                   	pop    rdi
  20b552:	73 65                	jae    20b5b9 <kernel_font+0xa39>
  20b554:	74 73                	je     20b5c9 <kernel_font+0xa49>
  20b556:	74 61                	je     20b5b9 <kernel_font+0xa39>
  20b558:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
  20b55b:	69 6d 00 74 73 73 5f 	imul   ebp,DWORD PTR [rbp+0x0],0x5f737374
  20b562:	67 65 74 00          	addr32 gs je 20b566 <kernel_font+0x9e6>
  20b566:	75 73                	jne    20b5db <kernel_font+0xa5b>
  20b568:	65 72 73             	gs jb  20b5de <kernel_font+0xa5e>
  20b56b:	70 61                	jo     20b5ce <kernel_font+0xa4e>
  20b56d:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
  20b570:	64 65 62             	fs gs (bad) 
  20b573:	75 67                	jne    20b5dc <kernel_font+0xa5c>
  20b575:	5f                   	pop    rdi
  20b576:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
  20b579:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
  20b57c:	67 64 74 5f          	addr32 fs je 20b5df <kernel_font+0xa5f>
  20b580:	69 6e 69 74 00 00 00 	imul   ebp,DWORD PTR [rsi+0x69],0x74
  20b587:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b58a:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
  20b58e:	75 33                	jne    20b5c3 <kernel_font+0xa43>
  20b590:	67 64 74 32          	addr32 fs je 20b5c6 <kernel_font+0xa46>
  20b594:	32 67 64             	xor    ah,BYTE PTR [rdi+0x64]
  20b597:	74 5f                	je     20b5f8 <kernel_font+0xa78>
  20b599:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  20b5a0:	5f                   	pop    rdi
  20b5a1:	64 65 73 63          	fs gs jae 20b608 <kernel_font+0xa88>
  20b5a5:	72 69                	jb     20b610 <kernel_font+0xa90>
  20b5a7:	70 74                	jo     20b61d <kernel_font+0xa9d>
  20b5a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b5aa:	72 45                	jb     20b5f1 <kernel_font+0xa71>
  20b5ac:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b5ad:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b5ae:	68 68 00 00 00       	push   0x68
  20b5b3:	00 00                	add    BYTE PTR [rax],al
  20b5b5:	00 00                	add    BYTE PTR [rax],al
  20b5b7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b5ba:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
  20b5be:	75 33                	jne    20b5f3 <kernel_font+0xa73>
  20b5c0:	67 64 74 31          	addr32 fs je 20b5f5 <kernel_font+0xa75>
  20b5c4:	35 67 64 74 5f       	xor    eax,0x5f746467
  20b5c9:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
  20b5d0:	5f                   	pop    rdi
  20b5d1:	74 73                	je     20b646 <kernel_font+0xac6>
  20b5d3:	73 45                	jae    20b61a <kernel_font+0xa9a>
  20b5d5:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b5d6:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b5d7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b5da:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20b5de:	4c 34 6f             	rex.WR xor al,0x6f
  20b5e1:	75 74                	jne    20b657 <kernel_font+0xad7>
  20b5e3:	62                   	(bad)  
  20b5e4:	45 74 68             	rex.RB je 20b64f <kernel_font+0xacf>
  20b5e7:	00 24 67             	add    BYTE PTR [rdi+riz*2],ah
  20b5ea:	65 74 5f             	gs je  20b64c <kernel_font+0xacc>
  20b5ed:	73 79                	jae    20b668 <kernel_font+0xae8>
  20b5ef:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b5f0:	62                   	(bad)  
  20b5f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b5f2:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b5f3:	5f                   	pop    rdi
  20b5f4:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b5f5:	61                   	(bad)  
  20b5f6:	62                   	(bad)  
  20b5f7:	65 6c                	gs ins BYTE PTR es:[rdi],dx
  20b5f9:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
  20b5fc:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
  20b5ff:	74 69                	je     20b66a <kernel_font+0xaea>
  20b601:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b602:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b603:	5f                   	pop    rdi
  20b604:	68 61 6e 64 6c       	push   0x6c646e61
  20b609:	65 72 00             	gs jb  20b60c <kernel_font+0xa8c>
  20b60c:	69 73 72 5f 68 61 6e 	imul   esi,DWORD PTR [rbx+0x72],0x6e61685f
  20b613:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  20b615:	65 72 00             	gs jb  20b618 <kernel_font+0xa98>
  20b618:	69 72 71 5f 68 61 6e 	imul   esi,DWORD PTR [rdx+0x71],0x6e61685f
  20b61f:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  20b621:	65 72 00             	gs jb  20b624 <kernel_font+0xaa4>
  20b624:	69 64 74 5f 73 65 74 	imul   esp,DWORD PTR [rsp+rsi*2+0x5f],0x746573
  20b62b:	00 
  20b62c:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b62d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b62e:	61                   	(bad)  
  20b62f:	64 5f                	fs pop rdi
  20b631:	69 64 74 00 00 00 00 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x5f000000
  20b638:	5f 
  20b639:	5a                   	pop    rdx
  20b63a:	4e                   	rex.WRX
  20b63b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b63d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b63f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b640:	72 79                	jb     20b6bb <kernel_font+0xb3b>
  20b642:	34 68                	xor    al,0x68
  20b644:	65 61                	gs (bad) 
  20b646:	70 31                	jo     20b679 <kernel_font+0xaf9>
  20b648:	35 69 6e 69 74       	xor    eax,0x74696e69
  20b64d:	69 61 6c 69 7a 65 5f 	imul   esp,DWORD PTR [rcx+0x6c],0x5f657a69
  20b654:	68 65 61 70 45       	push   0x45706165
  20b659:	50                   	push   rax
  20b65a:	76 6d                	jbe    20b6c9 <kernel_font+0xb49>
  20b65c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b65f:	4e                   	rex.WRX
  20b660:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b662:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b664:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b665:	72 79                	jb     20b6e0 <kernel_font+0xb60>
  20b667:	34 68                	xor    al,0x68
  20b669:	65 61                	gs (bad) 
  20b66b:	70 36                	jo     20b6a3 <kernel_font+0xb23>
  20b66d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b66e:	61                   	(bad)  
  20b66f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b670:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b671:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b672:	63 45 6d             	movsxd eax,DWORD PTR [rbp+0x6d]
  20b675:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b678:	4e                   	rex.WRX
  20b679:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b67b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b67d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b67e:	72 79                	jb     20b6f9 <kernel_font+0xb79>
  20b680:	34 68                	xor    al,0x68
  20b682:	65 61                	gs (bad) 
  20b684:	70 34                	jo     20b6ba <kernel_font+0xb3a>
  20b686:	66 72 65             	data16 jb 20b6ee <kernel_font+0xb6e>
  20b689:	65 45 50             	gs rex.RB push r8
  20b68c:	76 00                	jbe    20b68e <kernel_font+0xb0e>
  20b68e:	00 00                	add    BYTE PTR [rax],al
  20b690:	5f                   	pop    rdi
  20b691:	5a                   	pop    rdx
  20b692:	4e                   	rex.WRX
  20b693:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b695:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b697:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b698:	72 79                	jb     20b713 <kernel_font+0xb93>
  20b69a:	34 68                	xor    al,0x68
  20b69c:	65 61                	gs (bad) 
  20b69e:	70 31                	jo     20b6d1 <kernel_font+0xb51>
  20b6a0:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
  20b6a3:	61                   	(bad)  
  20b6a4:	70 5f                	jo     20b705 <kernel_font+0xb85>
  20b6a6:	73 65                	jae    20b70d <kernel_font+0xb8d>
  20b6a8:	67 6d                	ins    DWORD PTR es:[edi],dx
  20b6aa:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20b6ac:	74 5f                	je     20b70d <kernel_font+0xb8d>
  20b6ae:	68 65 61 64 65       	push   0x65646165
  20b6b3:	72 35                	jb     20b6ea <kernel_font+0xb6a>
  20b6b5:	73 70                	jae    20b727 <kernel_font+0xba7>
  20b6b7:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b6b8:	69 74 45 6d 00 00 00 	imul   esi,DWORD PTR [rbp+rax*2+0x6d],0x0
  20b6bf:	00 
  20b6c0:	5f                   	pop    rdi
  20b6c1:	5a                   	pop    rdx
  20b6c2:	4e                   	rex.WRX
  20b6c3:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b6c5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b6c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b6c8:	72 79                	jb     20b743 <kernel_font+0xbc3>
  20b6ca:	34 68                	xor    al,0x68
  20b6cc:	65 61                	gs (bad) 
  20b6ce:	70 31                	jo     20b701 <kernel_font+0xb81>
  20b6d0:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
  20b6d3:	61                   	(bad)  
  20b6d4:	70 5f                	jo     20b735 <kernel_font+0xbb5>
  20b6d6:	73 65                	jae    20b73d <kernel_font+0xbbd>
  20b6d8:	67 6d                	ins    DWORD PTR es:[edi],dx
  20b6da:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20b6dc:	74 5f                	je     20b73d <kernel_font+0xbbd>
  20b6de:	68 65 61 64 65       	push   0x65646165
  20b6e3:	72 31                	jb     20b716 <kernel_font+0xb96>
  20b6e5:	35 63 6f 6d 62       	xor    eax,0x626d6f63
  20b6ea:	69 6e 65 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x65],0x726f665f
  20b6f1:	77 61                	ja     20b754 <kernel_font+0xbd4>
  20b6f3:	72 64                	jb     20b759 <kernel_font+0xbd9>
  20b6f5:	45 76 00             	rex.RB jbe 20b6f8 <kernel_font+0xb78>
  20b6f8:	5f                   	pop    rdi
  20b6f9:	5a                   	pop    rdx
  20b6fa:	4e                   	rex.WRX
  20b6fb:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b6fd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b6ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b700:	72 79                	jb     20b77b <kernel_font+0xbfb>
  20b702:	34 68                	xor    al,0x68
  20b704:	65 61                	gs (bad) 
  20b706:	70 31                	jo     20b739 <kernel_font+0xbb9>
  20b708:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
  20b70b:	61                   	(bad)  
  20b70c:	70 5f                	jo     20b76d <kernel_font+0xbed>
  20b70e:	73 65                	jae    20b775 <kernel_font+0xbf5>
  20b710:	67 6d                	ins    DWORD PTR es:[edi],dx
  20b712:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20b714:	74 5f                	je     20b775 <kernel_font+0xbf5>
  20b716:	68 65 61 64 65       	push   0x65646165
  20b71b:	72 31                	jb     20b74e <kernel_font+0xbce>
  20b71d:	36 63 6f 6d          	movsxd ebp,DWORD PTR ss:[rdi+0x6d]
  20b721:	62                   	(bad)  
  20b722:	69 6e 65 5f 62 61 63 	imul   ebp,DWORD PTR [rsi+0x65],0x6361625f
  20b729:	6b 77 61 72          	imul   esi,DWORD PTR [rdi+0x61],0x72
  20b72d:	64 45 76 00          	fs rex.RB jbe 20b731 <kernel_font+0xbb1>
  20b731:	5f                   	pop    rdi
  20b732:	5a                   	pop    rdx
  20b733:	31 32                	xor    DWORD PTR [rdx],esi
  20b735:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b736:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b738:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b739:	72 79                	jb     20b7b4 <kernel_font+0xc34>
  20b73b:	5f                   	pop    rdi
  20b73c:	74 79                	je     20b7b7 <kernel_font+0xc37>
  20b73e:	70 65                	jo     20b7a5 <kernel_font+0xc25>
  20b740:	73 74                	jae    20b7b6 <kernel_font+0xc36>
  20b742:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b745:	31 31                	xor    DWORD PTR [rcx],esi
  20b747:	69 6e 69 74 5f 62 69 	imul   ebp,DWORD PTR [rsi+0x69],0x69625f74
  20b74e:	74 6d                	je     20b7bd <kernel_font+0xc3d>
  20b750:	61                   	(bad)  
  20b751:	70 6d                	jo     20b7c0 <kernel_font+0xc40>
  20b753:	50                   	push   rax
  20b754:	76 00                	jbe    20b756 <kernel_font+0xbd6>
  20b756:	00 00                	add    BYTE PTR [rax],al
  20b758:	5f                   	pop    rdi
  20b759:	5a                   	pop    rdx
  20b75a:	4e                   	rex.WRX
  20b75b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b75d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b75f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b760:	72 79                	jb     20b7db <kernel_font+0xc5b>
  20b762:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
  20b765:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b766:	32 31                	xor    dh,BYTE PTR [rcx]
  20b768:	67 65 74 5f          	addr32 gs je 20b7cb <kernel_font+0xc4b>
  20b76c:	74 6f                	je     20b7dd <kernel_font+0xc5d>
  20b76e:	74 61                	je     20b7d1 <kernel_font+0xc51>
  20b770:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b771:	5f                   	pop    rdi
  20b772:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b773:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b775:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b776:	72 79                	jb     20b7f1 <kernel_font+0xc71>
  20b778:	5f                   	pop    rdi
  20b779:	73 69                	jae    20b7e4 <kernel_font+0xc64>
  20b77b:	7a 65                	jp     20b7e2 <kernel_font+0xc62>
  20b77d:	45 50                	rex.RB push r8
  20b77f:	31 38                	xor    DWORD PTR [rax],edi
  20b781:	73 74                	jae    20b7f7 <kernel_font+0xc77>
  20b783:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
  20b78a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b78c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b78d:	72 79                	jb     20b808 <kernel_font+0xc88>
  20b78f:	5f                   	pop    rdi
  20b790:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b791:	61                   	(bad)  
  20b792:	70 6d                	jo     20b801 <kernel_font+0xc81>
  20b794:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b795:	00 00                	add    BYTE PTR [rax],al
  20b797:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b79a:	4e                   	rex.WRX
  20b79b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b79d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b79f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b7a0:	72 79                	jb     20b81b <kernel_font+0xc9b>
  20b7a2:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
  20b7a5:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b7a6:	31 30                	xor    DWORD PTR [rax],esi
  20b7a8:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  20b7af:	69 7a 65 45 50 31 38 	imul   edi,DWORD PTR [rdx+0x65],0x38315045
  20b7b6:	73 74                	jae    20b82c <kernel_font+0xcac>
  20b7b8:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
  20b7bf:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b7c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b7c2:	72 79                	jb     20b83d <kernel_font+0xcbd>
  20b7c4:	5f                   	pop    rdi
  20b7c5:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b7c6:	61                   	(bad)  
  20b7c7:	70 6d                	jo     20b836 <kernel_font+0xcb6>
  20b7c9:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b7ca:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b7cd:	31 34 75 6e 72 65 73 	xor    DWORD PTR [rsi*2+0x7365726e],esi
  20b7d4:	65 72 76             	gs jb  20b84d <kernel_font+0xccd>
  20b7d7:	65 5f                	gs pop rdi
  20b7d9:	70 61                	jo     20b83c <kernel_font+0xcbc>
  20b7db:	67 65 50             	addr32 gs push rax
  20b7de:	76 00                	jbe    20b7e0 <kernel_font+0xc60>
  20b7e0:	5f                   	pop    rdi
  20b7e1:	5a                   	pop    rdx
  20b7e2:	31 35 75 6e 72 65    	xor    DWORD PTR [rip+0x65726e75],esi        # 6593265d <__kernel_end+0x6572065d>
  20b7e8:	73 65                	jae    20b84f <kernel_font+0xccf>
  20b7ea:	72 76                	jb     20b862 <kernel_font+0xce2>
  20b7ec:	65 5f                	gs pop rdi
  20b7ee:	70 61                	jo     20b851 <kernel_font+0xcd1>
  20b7f0:	67 65 73 50          	addr32 gs jae 20b844 <kernel_font+0xcc4>
  20b7f4:	76 6d                	jbe    20b863 <kernel_font+0xce3>
  20b7f6:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  20b7f9:	73 65                	jae    20b860 <kernel_font+0xce0>
  20b7fb:	72 76                	jb     20b873 <kernel_font+0xcf3>
  20b7fd:	65 5f                	gs pop rdi
  20b7ff:	70 61                	jo     20b862 <kernel_font+0xce2>
  20b801:	67 65 00 72 65       	add    BYTE PTR gs:[edx+0x65],dh
  20b806:	73 65                	jae    20b86d <kernel_font+0xced>
  20b808:	72 76                	jb     20b880 <kernel_font+0xd00>
  20b80a:	65 5f                	gs pop rdi
  20b80c:	70 61                	jo     20b86f <kernel_font+0xcef>
  20b80e:	67 65 73 00          	addr32 gs jae 20b812 <kernel_font+0xc92>
  20b812:	72 65                	jb     20b879 <kernel_font+0xcf9>
  20b814:	71 75                	jno    20b88b <kernel_font+0xd0b>
  20b816:	65 73 74             	gs jae 20b88d <kernel_font+0xd0d>
  20b819:	5f                   	pop    rdi
  20b81a:	70 61                	jo     20b87d <kernel_font+0xcfd>
  20b81c:	67 65 00 72 65       	add    BYTE PTR gs:[edx+0x65],dh
  20b821:	71 75                	jno    20b898 <kernel_font+0xd18>
  20b823:	65 73 74             	gs jae 20b89a <kernel_font+0xd1a>
  20b826:	5f                   	pop    rdi
  20b827:	70 61                	jo     20b88a <kernel_font+0xd0a>
  20b829:	67 65 73 00          	addr32 gs jae 20b82d <kernel_font+0xcad>
  20b82d:	66 72 65             	data16 jb 20b895 <kernel_font+0xd15>
  20b830:	65 5f                	gs pop rdi
  20b832:	70 61                	jo     20b895 <kernel_font+0xd15>
  20b834:	67 65 00 66 72       	add    BYTE PTR gs:[esi+0x72],ah
  20b839:	65 65 5f             	gs gs pop rdi
  20b83c:	70 61                	jo     20b89f <kernel_font+0xd1f>
  20b83e:	67 65 73 00          	addr32 gs jae 20b842 <kernel_font+0xcc2>
  20b842:	6c                   	ins    BYTE PTR es:[rdi],dx
  20b843:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b844:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
  20b847:	70 61                	jo     20b8aa <kernel_font+0xd2a>
  20b849:	67 65 00 6c 6f 63    	add    BYTE PTR gs:[edi+ebp*2+0x63],ch
  20b84f:	6b 5f 70 61          	imul   ebx,DWORD PTR [rdi+0x70],0x61
  20b853:	67 65 73 00          	addr32 gs jae 20b857 <kernel_font+0xcd7>
  20b857:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b85a:	4e                   	rex.WRX
  20b85b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b85d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b85f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b860:	72 79                	jb     20b8db <kernel_font+0xd5b>
  20b862:	31 30                	xor    DWORD PTR [rax],esi
  20b864:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b865:	70 65                	jo     20b8cc <kernel_font+0xd4c>
  20b867:	72 61                	jb     20b8ca <kernel_font+0xd4a>
  20b869:	74 69                	je     20b8d4 <kernel_font+0xd54>
  20b86b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b86c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b86d:	73 36                	jae    20b8a5 <kernel_font+0xd25>
  20b86f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b870:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b872:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
  20b875:	45 50                	rex.RB push r8
  20b877:	76 50                	jbe    20b8c9 <kernel_font+0xd49>
  20b879:	4b 76 6d             	rex.WXB jbe 20b8e9 <kernel_font+0xd69>
  20b87c:	00 00                	add    BYTE PTR [rax],al
  20b87e:	00 00                	add    BYTE PTR [rax],al
  20b880:	5f                   	pop    rdi
  20b881:	5a                   	pop    rdx
  20b882:	4e                   	rex.WRX
  20b883:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b885:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b887:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b888:	72 79                	jb     20b903 <kernel_font+0xd83>
  20b88a:	31 30                	xor    DWORD PTR [rax],esi
  20b88c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b88d:	70 65                	jo     20b8f4 <kernel_font+0xd74>
  20b88f:	72 61                	jb     20b8f2 <kernel_font+0xd72>
  20b891:	74 69                	je     20b8fc <kernel_font+0xd7c>
  20b893:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b894:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b895:	73 36                	jae    20b8cd <kernel_font+0xd4d>
  20b897:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b898:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b89a:	73 65                	jae    20b901 <kernel_font+0xd81>
  20b89c:	74 45                	je     20b8e3 <kernel_font+0xd63>
  20b89e:	50                   	push   rax
  20b89f:	76 68                	jbe    20b909 <kernel_font+0xd89>
  20b8a1:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b8a2:	00 00                	add    BYTE PTR [rax],al
  20b8a4:	00 00                	add    BYTE PTR [rax],al
  20b8a6:	00 00                	add    BYTE PTR [rax],al
  20b8a8:	5f                   	pop    rdi
  20b8a9:	5a                   	pop    rdx
  20b8aa:	4e                   	rex.WRX
  20b8ab:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b8ad:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b8af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b8b0:	72 79                	jb     20b92b <kernel_font+0xdab>
  20b8b2:	36 70 61             	ss jo  20b916 <kernel_font+0xd96>
  20b8b5:	67 69 6e 67 31 36 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703631
  20b8bc:	61 
  20b8bd:	67 65 5f             	addr32 gs pop rdi
  20b8c0:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b8c1:	61                   	(bad)  
  20b8c2:	70 5f                	jo     20b923 <kernel_font+0xda3>
  20b8c4:	69 6e 64 65 78 65 72 	imul   ebp,DWORD PTR [rsi+0x64],0x72657865
  20b8cb:	43 31 45 6d          	rex.XB xor DWORD PTR [r13+0x6d],eax
  20b8cf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b8d2:	4e                   	rex.WRX
  20b8d3:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b8d5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b8d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b8d8:	72 79                	jb     20b953 <kernel_font+0xdd3>
  20b8da:	36 70 61             	ss jo  20b93e <kernel_font+0xdbe>
  20b8dd:	67 69 6e 67 31 36 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703631
  20b8e4:	61 
  20b8e5:	67 65 5f             	addr32 gs pop rdi
  20b8e8:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b8e9:	61                   	(bad)  
  20b8ea:	70 5f                	jo     20b94b <kernel_font+0xdcb>
  20b8ec:	69 6e 64 65 78 65 72 	imul   ebp,DWORD PTR [rsi+0x64],0x72657865
  20b8f3:	43 32 45 6d          	rex.XB xor al,BYTE PTR [r13+0x6d]
  20b8f7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b8fa:	4e                   	rex.WRX
  20b8fb:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b8fd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b8ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b900:	72 79                	jb     20b97b <kernel_font+0xdfb>
  20b902:	36 70 61             	ss jo  20b966 <kernel_font+0xde6>
  20b905:	67 69 6e 67 31 30 6d 	imul   ebp,DWORD PTR [esi+0x67],0x616d3031
  20b90c:	61 
  20b90d:	70 5f                	jo     20b96e <kernel_font+0xdee>
  20b90f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20b910:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b912:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b913:	72 79                	jb     20b98e <kernel_font+0xe0e>
  20b915:	45 50                	rex.RB push r8
  20b917:	76 53                	jbe    20b96c <kernel_font+0xdec>
  20b919:	31 5f 62             	xor    DWORD PTR [rdi+0x62],ebx
  20b91c:	00 00                	add    BYTE PTR [rax],al
  20b91e:	00 00                	add    BYTE PTR [rax],al
  20b920:	5f                   	pop    rdi
  20b921:	5a                   	pop    rdx
  20b922:	4e                   	rex.WRX
  20b923:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b925:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b927:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b928:	72 79                	jb     20b9a3 <kernel_font+0xe23>
  20b92a:	36 70 61             	ss jo  20b98e <kernel_font+0xe0e>
  20b92d:	67 69 6e 67 32 30 67 	imul   ebp,DWORD PTR [esi+0x67],0x65673032
  20b934:	65 
  20b935:	74 5f                	je     20b996 <kernel_font+0xe16>
  20b937:	70 68                	jo     20b9a1 <kernel_font+0xe21>
  20b939:	79 73                	jns    20b9ae <kernel_font+0xe2e>
  20b93b:	69 63 61 6c 5f 61 64 	imul   esp,DWORD PTR [rbx+0x61],0x64615f6c
  20b942:	64 72 65             	fs jb  20b9aa <kernel_font+0xe2a>
  20b945:	73 73                	jae    20b9ba <kernel_font+0xe3a>
  20b947:	45 50                	rex.RB push r8
  20b949:	76 00                	jbe    20b94b <kernel_font+0xdcb>
  20b94b:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  20b94d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20b94e:	61                   	(bad)  
  20b94f:	74 65                	je     20b9b6 <kernel_font+0xe36>
  20b951:	5f                   	pop    rdi
  20b952:	74 6f                	je     20b9c3 <kernel_font+0xe43>
  20b954:	5f                   	pop    rdi
  20b955:	75 73                	jne    20b9ca <kernel_font+0xe4a>
  20b957:	65 72 73             	gs jb  20b9cd <kernel_font+0xe4d>
  20b95a:	70 61                	jo     20b9bd <kernel_font+0xe3d>
  20b95c:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
  20b95f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b962:	4e                   	rex.WRX
  20b963:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b965:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b967:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b968:	72 79                	jb     20b9e3 <kernel_font+0xe63>
  20b96a:	36 70 61             	ss jo  20b9ce <kernel_font+0xe4e>
  20b96d:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
  20b974:	61 
  20b975:	67 65 5f             	addr32 gs pop rdi
  20b978:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  20b97f:	72 
  20b980:	79 5f                	jns    20b9e1 <kernel_font+0xe61>
  20b982:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20b984:	74 72                	je     20b9f8 <kernel_font+0xe78>
  20b986:	79 38                	jns    20b9c0 <kernel_font+0xe40>
  20b988:	73 65                	jae    20b9ef <kernel_font+0xe6f>
  20b98a:	74 5f                	je     20b9eb <kernel_font+0xe6b>
  20b98c:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  20b98e:	61                   	(bad)  
  20b98f:	67 45                	addr32 rex.RB
  20b991:	4e 53                	rex.WRX push rbx
  20b993:	30 5f 37             	xor    BYTE PTR [rdi+0x37],bl
  20b996:	70 74                	jo     20ba0c <kernel_font+0xe8c>
  20b998:	5f                   	pop    rdi
  20b999:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  20b99b:	61                   	(bad)  
  20b99c:	67 45 62             	addr32 rex.RB (bad) 
  20b99f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20b9a2:	4e                   	rex.WRX
  20b9a3:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b9a5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b9a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b9a8:	72 79                	jb     20ba23 <kernel_font+0xea3>
  20b9aa:	36 70 61             	ss jo  20ba0e <kernel_font+0xe8e>
  20b9ad:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
  20b9b4:	61 
  20b9b5:	67 65 5f             	addr32 gs pop rdi
  20b9b8:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  20b9bf:	72 
  20b9c0:	79 5f                	jns    20ba21 <kernel_font+0xea1>
  20b9c2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20b9c4:	74 72                	je     20ba38 <kernel_font+0xeb8>
  20b9c6:	79 38                	jns    20ba00 <kernel_font+0xe80>
  20b9c8:	67 65 74 5f          	addr32 gs je 20ba2b <kernel_font+0xeab>
  20b9cc:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  20b9ce:	61                   	(bad)  
  20b9cf:	67 45                	addr32 rex.RB
  20b9d1:	4e 53                	rex.WRX push rbx
  20b9d3:	30 5f 37             	xor    BYTE PTR [rdi+0x37],bl
  20b9d6:	70 74                	jo     20ba4c <kernel_font+0xecc>
  20b9d8:	5f                   	pop    rdi
  20b9d9:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
  20b9db:	61                   	(bad)  
  20b9dc:	67 45 00 00          	add    BYTE PTR [r8d],r8b
  20b9e0:	5f                   	pop    rdi
  20b9e1:	5a                   	pop    rdx
  20b9e2:	4e                   	rex.WRX
  20b9e3:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20b9e5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20b9e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20b9e8:	72 79                	jb     20ba63 <kernel_font+0xee3>
  20b9ea:	36 70 61             	ss jo  20ba4e <kernel_font+0xece>
  20b9ed:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
  20b9f4:	61 
  20b9f5:	67 65 5f             	addr32 gs pop rdi
  20b9f8:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  20b9ff:	72 
  20ba00:	79 5f                	jns    20ba61 <kernel_font+0xee1>
  20ba02:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20ba04:	74 72                	je     20ba78 <kernel_font+0xef8>
  20ba06:	79 31                	jns    20ba39 <kernel_font+0xeb9>
  20ba08:	31 67 65             	xor    DWORD PTR [rdi+0x65],esp
  20ba0b:	74 5f                	je     20ba6c <kernel_font+0xeec>
  20ba0d:	61                   	(bad)  
  20ba0e:	64 64 72 65          	fs fs jb 20ba77 <kernel_font+0xef7>
  20ba12:	73 73                	jae    20ba87 <kernel_font+0xf07>
  20ba14:	45 76 00             	rex.RB jbe 20ba17 <kernel_font+0xe97>
  20ba17:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20ba1a:	4e                   	rex.WRX
  20ba1b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20ba1d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20ba1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20ba20:	72 79                	jb     20ba9b <kernel_font+0xf1b>
  20ba22:	36 70 61             	ss jo  20ba86 <kernel_font+0xf06>
  20ba25:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
  20ba2c:	61 
  20ba2d:	67 65 5f             	addr32 gs pop rdi
  20ba30:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  20ba37:	72 
  20ba38:	79 5f                	jns    20ba99 <kernel_font+0xf19>
  20ba3a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20ba3c:	74 72                	je     20bab0 <kernel_font+0xf30>
  20ba3e:	79 31                	jns    20ba71 <kernel_font+0xef1>
  20ba40:	31 73 65             	xor    DWORD PTR [rbx+0x65],esi
  20ba43:	74 5f                	je     20baa4 <kernel_font+0xf24>
  20ba45:	61                   	(bad)  
  20ba46:	64 64 72 65          	fs fs jb 20baaf <kernel_font+0xf2f>
  20ba4a:	73 73                	jae    20babf <kernel_font+0xf3f>
  20ba4c:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
  20ba4e:	00 00                	add    BYTE PTR [rax],al
  20ba50:	5f                   	pop    rdi
  20ba51:	5a                   	pop    rdx
  20ba52:	4e                   	rex.WRX
  20ba53:	36 6d                	ss ins DWORD PTR es:[rdi],dx
  20ba55:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20ba57:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20ba58:	72 79                	jb     20bad3 <kernel_font+0xf53>
  20ba5a:	36 70 61             	ss jo  20babe <kernel_font+0xf3e>
  20ba5d:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
  20ba64:	61 
  20ba65:	67 65 5f             	addr32 gs pop rdi
  20ba68:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
  20ba6f:	72 
  20ba70:	79 5f                	jns    20bad1 <kernel_font+0xf51>
  20ba72:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20ba74:	74 72                	je     20bae8 <kernel_font+0xf68>
  20ba76:	79 37                	jns    20baaf <kernel_font+0xf2f>
  20ba78:	73 65                	jae    20badf <kernel_font+0xf5f>
  20ba7a:	74 5f                	je     20badb <kernel_font+0xf5b>
  20ba7c:	70 61                	jo     20badf <kernel_font+0xf5f>
  20ba7e:	74 45                	je     20bac5 <kernel_font+0xf45>
  20ba80:	68 00 5f 5a 4e       	push   0x4e5a5f00
  20ba85:	32 69 6f             	xor    ch,BYTE PTR [rcx+0x6f]
  20ba88:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
  20ba8b:	74 38                	je     20bac5 <kernel_font+0xf45>
  20ba8d:	70 69                	jo     20baf8 <kernel_font+0xf78>
  20ba8f:	74 5f                	je     20baf0 <kernel_font+0xf70>
  20ba91:	69 6e 69 74 45 76 00 	imul   ebp,DWORD PTR [rsi+0x69],0x764574
  20ba98:	5f                   	pop    rdi
  20ba99:	5a                   	pop    rdx
  20ba9a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20ba9e:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
  20baa1:	74 31                	je     20bad4 <kernel_font+0xf54>
  20baa3:	36 73 65             	ss jae 20bb0b <kernel_font+0xf8b>
  20baa6:	74 5f                	je     20bb07 <kernel_font+0xf87>
  20baa8:	63 30                	movsxd esi,DWORD PTR [rax]
  20baaa:	5f                   	pop    rdi
  20baab:	66 72 65             	data16 jb 20bb13 <kernel_font+0xf93>
  20baae:	71 75                	jno    20bb25 <kernel_font+0xfa5>
  20bab0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bab2:	63 79 45             	movsxd edi,DWORD PTR [rcx+0x45]
  20bab5:	6a 00                	push   0x0
  20bab7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20baba:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20babe:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
  20bac1:	74 31                	je     20baf4 <kernel_font+0xf74>
  20bac3:	36 73 65             	ss jae 20bb2b <kernel_font+0xfab>
  20bac6:	74 5f                	je     20bb27 <kernel_font+0xfa7>
  20bac8:	63 32                	movsxd esi,DWORD PTR [rdx]
  20baca:	5f                   	pop    rdi
  20bacb:	66 72 65             	data16 jb 20bb33 <kernel_font+0xfb3>
  20bace:	71 75                	jno    20bb45 <kernel_font+0xfc5>
  20bad0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bad2:	63 79 45             	movsxd edi,DWORD PTR [rcx+0x45]
  20bad5:	6a 00                	push   0x0
  20bad7:	73 79                	jae    20bb52 <kernel_font+0xfd2>
  20bad9:	73 5f                	jae    20bb3a <kernel_font+0xfba>
  20badb:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
  20badf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bae0:	61                   	(bad)  
  20bae1:	72 64                	jb     20bb47 <kernel_font+0xfc7>
  20bae3:	5f                   	pop    rdi
  20bae4:	65 76 65             	gs jbe 20bb4c <kernel_font+0xfcc>
  20bae7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20bae8:	74 5f                	je     20bb49 <kernel_font+0xfc9>
  20baea:	73 75                	jae    20bb61 <kernel_font+0xfe1>
  20baec:	62 73                	(bad)  
  20baee:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
  20baf1:	62                   	(bad)  
  20baf2:	65 00 73 79          	add    BYTE PTR gs:[rbx+0x79],dh
  20baf6:	73 5f                	jae    20bb57 <kernel_font+0xfd7>
  20baf8:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
  20bafb:	79 5f                	jns    20bb5c <kernel_font+0xfdc>
  20bafd:	66 72 61             	data16 jb 20bb61 <kernel_font+0xfe1>
  20bb00:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bb01:	65 62                	gs (bad) 
  20bb03:	75 66                	jne    20bb6b <kernel_font+0xfeb>
  20bb05:	66 65 72 00          	data16 gs jb 20bb09 <kernel_font+0xf89>
  20bb09:	73 79                	jae    20bb84 <kernel_font+0x1004>
  20bb0b:	73 5f                	jae    20bb6c <kernel_font+0xfec>
  20bb0d:	67 65 74 5f          	addr32 gs je 20bb70 <kernel_font+0xff0>
  20bb11:	69 6e 66 6f 00 73 79 	imul   ebp,DWORD PTR [rsi+0x66],0x7973006f
  20bb18:	73 5f                	jae    20bb79 <kernel_font+0xff9>
  20bb1a:	74 74                	je     20bb90 <kernel_font+0x1010>
  20bb1c:	79 5f                	jns    20bb7d <kernel_font+0xffd>
  20bb1e:	70 72                	jo     20bb92 <kernel_font+0x1012>
  20bb20:	69 6e 74 00 73 79 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73797300
  20bb27:	5f                   	pop    rdi
  20bb28:	61                   	(bad)  
  20bb29:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb2a:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bb2c:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
  20bb2f:	65 5f                	gs pop rdi
  20bb31:	70 61                	jo     20bb94 <kernel_font+0x1014>
  20bb33:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
  20bb38:	4e 34 75             	rex.WRX xor al,0x75
  20bb3b:	74 69                	je     20bba6 <kernel_font+0x1026>
  20bb3d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb3e:	36 62                	ss (bad) 
  20bb40:	69 74 6d 61 70 69 78 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x45786970
  20bb47:	45 
  20bb48:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bb49:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bb4c:	4e 34 75             	rex.WRX xor al,0x75
  20bb4f:	74 69                	je     20bbba <kernel_font+0x103a>
  20bb51:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb52:	36 62                	ss (bad) 
  20bb54:	69 74 6d 61 70 33 67 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x65673370
  20bb5b:	65 
  20bb5c:	74 45                	je     20bba3 <kernel_font+0x1023>
  20bb5e:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bb5f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bb62:	4e 34 75             	rex.WRX xor al,0x75
  20bb65:	74 69                	je     20bbd0 <kernel_font+0x1050>
  20bb67:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb68:	36 62                	ss (bad) 
  20bb6a:	69 74 6d 61 70 33 73 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x65733370
  20bb71:	65 
  20bb72:	74 45                	je     20bbb9 <kernel_font+0x1039>
  20bb74:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bb75:	62                   	(bad)  
  20bb76:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bb79:	4e 34 75             	rex.WRX xor al,0x75
  20bb7c:	74 69                	je     20bbe7 <kernel_font+0x1067>
  20bb7e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bb7f:	34 69                	xor    al,0x69
  20bb81:	74 6f                	je     20bbf2 <kernel_font+0x1072>
  20bb83:	61                   	(bad)  
  20bb84:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
  20bb86:	69 00 5f 5a 4e 34    	imul   eax,DWORD PTR [rax],0x344e5a5f
  20bb8c:	75 74                	jne    20bc02 <kernel_font+0x1082>
  20bb8e:	69 6c 37 73 74 72 63 	imul   ebp,DWORD PTR [rdi+rsi*1+0x73],0x6f637274
  20bb95:	6f 
  20bb96:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bb97:	70 45                	jo     20bbde <kernel_font+0x105e>
  20bb99:	50                   	push   rax
  20bb9a:	4b 63 53 31          	rex.WXB movsxd rdx,DWORD PTR [r11+0x31]
  20bb9e:	5f                   	pop    rdi
  20bb9f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bba2:	4e 34 75             	rex.WRX xor al,0x75
  20bba5:	74 69                	je     20bc10 <kernel_font+0x1090>
  20bba7:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bba8:	36 73 74             	ss jae 20bc1f <kernel_font+0x109f>
  20bbab:	72 6c                	jb     20bc19 <kernel_font+0x1099>
  20bbad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bbaf:	45 50                	rex.RB push r8
  20bbb1:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  20bbb4:	5f                   	pop    rdi
  20bbb5:	5a                   	pop    rdx
  20bbb6:	4e 34 75             	rex.WRX xor al,0x75
  20bbb9:	74 69                	je     20bc24 <kernel_font+0x10a4>
  20bbbb:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bbbc:	36 73 74             	ss jae 20bc33 <kernel_font+0x10b3>
  20bbbf:	72 63                	jb     20bc24 <kernel_font+0x10a4>
  20bbc1:	61                   	(bad)  
  20bbc2:	74 45                	je     20bc09 <kernel_font+0x1089>
  20bbc4:	50                   	push   rax
  20bbc5:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
  20bbc8:	63 00                	movsxd eax,DWORD PTR [rax]
  20bbca:	5f                   	pop    rdi
  20bbcb:	5a                   	pop    rdx
  20bbcc:	4e 34 75             	rex.WRX xor al,0x75
  20bbcf:	74 69                	je     20bc3a <kernel_font+0x10ba>
  20bbd1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bbd2:	36 73 74             	ss jae 20bc49 <kernel_font+0x10c9>
  20bbd5:	72 63                	jb     20bc3a <kernel_font+0x10ba>
  20bbd7:	70 79                	jo     20bc52 <kernel_font+0x10d2>
  20bbd9:	45 50                	rex.RB push r8
  20bbdb:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
  20bbde:	63 00                	movsxd eax,DWORD PTR [rax]
  20bbe0:	5f                   	pop    rdi
  20bbe1:	5a                   	pop    rdx
  20bbe2:	4e 34 75             	rex.WRX xor al,0x75
  20bbe5:	74 69                	je     20bc50 <kernel_font+0x10d0>
  20bbe7:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bbe8:	37                   	(bad)  
  20bbe9:	69 73 64 69 67 69 74 	imul   esi,DWORD PTR [rbx+0x64],0x74696769
  20bbf0:	45 63 00             	movsxd r8d,DWORD PTR [r8]
  20bbf3:	5f                   	pop    rdi
  20bbf4:	5a                   	pop    rdx
  20bbf5:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bbf9:	4c 33 69 6e          	xor    r13,QWORD PTR [rcx+0x6e]
  20bbfd:	62                   	(bad)  
  20bbfe:	45 74 00             	rex.RB je 20bc01 <kernel_font+0x1081>
  20bc01:	5f                   	pop    rdi
  20bc02:	5a                   	pop    rdx
  20bc03:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20bc07:	73 35                	jae    20bc3e <kernel_font+0x10be>
  20bc09:	61                   	(bad)  
  20bc0a:	75 64                	jne    20bc70 <kernel_font+0x10f0>
  20bc0c:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
  20bc13:	6b 34 69 6e          	imul   esi,DWORD PTR [rcx+rbp*2],0x6e
  20bc17:	69 74 45 76 00 00 00 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x0
  20bc1e:	00 
  20bc1f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bc22:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20bc26:	73 35                	jae    20bc5d <kernel_font+0x10dd>
  20bc28:	61                   	(bad)  
  20bc29:	75 64                	jne    20bc8f <kernel_font+0x110f>
  20bc2b:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
  20bc32:	6b 31 30             	imul   esi,DWORD PTR [rcx],0x30
  20bc35:	70 6c                	jo     20bca3 <kernel_font+0x1123>
  20bc37:	61                   	(bad)  
  20bc38:	79 5f                	jns    20bc99 <kernel_font+0x1119>
  20bc3a:	73 6f                	jae    20bcab <kernel_font+0x112b>
  20bc3c:	75 6e                	jne    20bcac <kernel_font+0x112c>
  20bc3e:	64 45 6a 00          	fs rex.RB push 0x0
  20bc42:	00 00                	add    BYTE PTR [rax],al
  20bc44:	00 00                	add    BYTE PTR [rax],al
  20bc46:	00 00                	add    BYTE PTR [rax],al
  20bc48:	5f                   	pop    rdi
  20bc49:	5a                   	pop    rdx
  20bc4a:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20bc4e:	73 35                	jae    20bc85 <kernel_font+0x1105>
  20bc50:	61                   	(bad)  
  20bc51:	75 64                	jne    20bcb7 <kernel_font+0x1137>
  20bc53:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
  20bc5a:	6b 31 30             	imul   esi,DWORD PTR [rcx],0x30
  20bc5d:	73 74                	jae    20bcd3 <kernel_font+0x1153>
  20bc5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bc60:	70 5f                	jo     20bcc1 <kernel_font+0x1141>
  20bc62:	73 6f                	jae    20bcd3 <kernel_font+0x1153>
  20bc64:	75 6e                	jne    20bcd4 <kernel_font+0x1154>
  20bc66:	64 45 76 00          	fs rex.RB jbe 20bc6a <kernel_font+0x10ea>
  20bc6a:	5f                   	pop    rdi
  20bc6b:	5a                   	pop    rdx
  20bc6c:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20bc70:	73 35                	jae    20bca7 <kernel_font+0x1127>
  20bc72:	61                   	(bad)  
  20bc73:	75 64                	jne    20bcd9 <kernel_font+0x1159>
  20bc75:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
  20bc7c:	6b 34 62 65          	imul   esi,DWORD PTR [rdx+riz*2],0x65
  20bc80:	65 70 45             	gs jo  20bcc8 <kernel_font+0x1148>
  20bc83:	76 00                	jbe    20bc85 <kernel_font+0x1105>
  20bc85:	5f                   	pop    rdi
  20bc86:	5a                   	pop    rdx
  20bc87:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
  20bc8b:	73 35                	jae    20bcc2 <kernel_font+0x1142>
  20bc8d:	61                   	(bad)  
  20bc8e:	75 64                	jne    20bcf4 <kernel_font+0x1174>
  20bc90:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
  20bc97:	6b 34 62 65          	imul   esi,DWORD PTR [rdx+riz*2],0x65
  20bc9b:	65 70 45             	gs jo  20bce3 <kernel_font+0x1163>
  20bc9e:	6a 6a                	push   0x6a
  20bca0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bca3:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bca7:	4c 37                	rex.WR (bad) 
  20bca9:	69 6f 5f 77 61 69 74 	imul   ebp,DWORD PTR [rdi+0x5f],0x74696177
  20bcb0:	45 76 00             	rex.RB jbe 20bcb3 <kernel_font+0x1133>
  20bcb3:	70 69                	jo     20bd1e <kernel_font+0x119e>
  20bcb5:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
  20bcb8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bcba:	64 5f                	fs pop rdi
  20bcbc:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
  20bcbe:	69 00 70 69 63 5f    	imul   eax,DWORD PTR [rax],0x5f636970
  20bcc4:	72 65                	jb     20bd2b <kernel_font+0x11ab>
  20bcc6:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bcc7:	61                   	(bad)  
  20bcc8:	70 00                	jo     20bcca <kernel_font+0x114a>
  20bcca:	69 72 71 5f 6d 61 73 	imul   esi,DWORD PTR [rdx+0x71],0x73616d5f
  20bcd1:	6b 00 69             	imul   eax,DWORD PTR [rax],0x69
  20bcd4:	72 71                	jb     20bd47 <kernel_font+0x11c7>
  20bcd6:	5f                   	pop    rdi
  20bcd7:	75 6e                	jne    20bd47 <kernel_font+0x11c7>
  20bcd9:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bcda:	61                   	(bad)  
  20bcdb:	73 6b                	jae    20bd48 <kernel_font+0x11c8>
  20bcdd:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
  20bce0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20bce1:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20bce7:	5f                   	pop    rdi
  20bce8:	70 69                	jo     20bd53 <kernel_font+0x11d3>
  20bcea:	63 00                	movsxd eax,DWORD PTR [rax]
  20bcec:	5f                   	pop    rdi
  20bced:	5a                   	pop    rdx
  20bcee:	31 38                	xor    DWORD PTR [rax],edi
  20bcf0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bcf2:	75 6d                	jne    20bd61 <kernel_font+0x11e1>
  20bcf4:	65 72 61             	gs jb  20bd58 <kernel_font+0x11d8>
  20bcf7:	74 65                	je     20bd5e <kernel_font+0x11de>
  20bcf9:	5f                   	pop    rdi
  20bcfa:	66 75 6e             	data16 jne 20bd6b <kernel_font+0x11eb>
  20bcfd:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  20bd01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20bd02:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd03:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd04:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bd07:	31 36                	xor    DWORD PTR [rsi],esi
  20bd09:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bd0b:	75 6d                	jne    20bd7a <kernel_font+0x11fa>
  20bd0d:	65 72 61             	gs jb  20bd71 <kernel_font+0x11f1>
  20bd10:	74 65                	je     20bd77 <kernel_font+0x11f7>
  20bd12:	5f                   	pop    rdi
  20bd13:	64 65 76 69          	fs gs jbe 20bd80 <kernel_font+0x1200>
  20bd17:	63 65 6d             	movsxd esp,DWORD PTR [rbp+0x6d]
  20bd1a:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd1b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bd1e:	31 33                	xor    DWORD PTR [rbx],esi
  20bd20:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bd22:	75 6d                	jne    20bd91 <kernel_font+0x1211>
  20bd24:	65 72 61             	gs jb  20bd88 <kernel_font+0x1208>
  20bd27:	74 65                	je     20bd8e <kernel_font+0x120e>
  20bd29:	5f                   	pop    rdi
  20bd2a:	62                   	(bad)  
  20bd2b:	75 73                	jne    20bda0 <kernel_font+0x1220>
  20bd2d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd2e:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd2f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bd32:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bd36:	33 70 63             	xor    esi,DWORD PTR [rax+0x63]
  20bd39:	69 31 33 65 6e 75    	imul   esi,DWORD PTR [rcx],0x756e6533
  20bd3f:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bd40:	65 72 61             	gs jb  20bda4 <kernel_font+0x1224>
  20bd43:	74 65                	je     20bdaa <kernel_font+0x122a>
  20bd45:	5f                   	pop    rdi
  20bd46:	70 63                	jo     20bdab <kernel_font+0x122b>
  20bd48:	69 45 76 00 73 68 75 	imul   eax,DWORD PTR [rbp+0x76],0x75687300
  20bd4f:	74 64                	je     20bdb5 <kernel_font+0x1235>
  20bd51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bd52:	77 6e                	ja     20bdc2 <kernel_font+0x1242>
  20bd54:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  20bd57:	73 74                	jae    20bdcd <kernel_font+0x124d>
  20bd59:	61                   	(bad)  
  20bd5a:	72 74                	jb     20bdd0 <kernel_font+0x1250>
  20bd5c:	5f                   	pop    rdi
  20bd5d:	77 61                	ja     20bdc0 <kernel_font+0x1240>
  20bd5f:	72 6d                	jb     20bdce <kernel_font+0x124e>
  20bd61:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
  20bd64:	73 74                	jae    20bdda <kernel_font+0x125a>
  20bd66:	61                   	(bad)  
  20bd67:	72 74                	jb     20bddd <kernel_font+0x125d>
  20bd69:	5f                   	pop    rdi
  20bd6a:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
  20bd6d:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
  20bd71:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bd75:	36 73 65             	ss jae 20bddd <kernel_font+0x125d>
  20bd78:	72 69                	jb     20bde3 <kernel_font+0x1263>
  20bd7a:	61                   	(bad)  
  20bd7b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bd7c:	4c 31 31             	xor    QWORD PTR [rcx],r14
  20bd7f:	73 65                	jae    20bde6 <kernel_font+0x1266>
  20bd81:	72 69                	jb     20bdec <kernel_font+0x126c>
  20bd83:	61                   	(bad)  
  20bd84:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bd85:	5f                   	pop    rdi
  20bd86:	62                   	(bad)  
  20bd87:	79 74                	jns    20bdfd <kernel_font+0x127d>
  20bd89:	65 45 68 00 5f 5a 4e 	gs rex.RB push 0x4e5a5f00
  20bd90:	33 73 79             	xor    esi,DWORD PTR [rbx+0x79]
  20bd93:	73 34                	jae    20bdc9 <kernel_font+0x1249>
  20bd95:	61                   	(bad)  
  20bd96:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
  20bd99:	39 67 65             	cmp    DWORD PTR [rdi+0x65],esp
  20bd9c:	74 5f                	je     20bdfd <kernel_font+0x127d>
  20bd9e:	74 61                	je     20be01 <kernel_font+0x1281>
  20bda0:	62                   	(bad)  
  20bda1:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bda2:	65 45 50             	gs rex.RB push r8
  20bda5:	63 00                	movsxd eax,DWORD PTR [rax]
  20bda7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bdaa:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20bdae:	78 36                	js     20bde6 <kernel_font+0x1266>
  20bdb0:	73 63                	jae    20be15 <kernel_font+0x1295>
  20bdb2:	72 65                	jb     20be19 <kernel_font+0x1299>
  20bdb4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bdb6:	4c 31 30             	xor    QWORD PTR [rax],r14
  20bdb9:	70 6c                	jo     20be27 <kernel_font+0x12a7>
  20bdbb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bdbc:	74 5f                	je     20be1d <kernel_font+0x129d>
  20bdbe:	70 69                	jo     20be29 <kernel_font+0x12a9>
  20bdc0:	78 65                	js     20be27 <kernel_font+0x12a7>
  20bdc2:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bdc3:	45                   	rex.RB
  20bdc4:	4e 53                	rex.WRX push rbx
  20bdc6:	5f                   	pop    rdi
  20bdc7:	36 73 68             	ss jae 20be32 <kernel_font+0x12b2>
  20bdca:	61                   	(bad)  
  20bdcb:	70 65                	jo     20be32 <kernel_font+0x12b2>
  20bdcd:	73 31                	jae    20be00 <kernel_font+0x1280>
  20bdcf:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
  20bdd2:	70 6f                	jo     20be43 <kernel_font+0x12c3>
  20bdd4:	73 5f                	jae    20be35 <kernel_font+0x12b5>
  20bdd6:	70 6f                	jo     20be47 <kernel_font+0x12c7>
  20bdd8:	69 6e 74 45 6a 00 00 	imul   ebp,DWORD PTR [rsi+0x74],0x6a45
  20bddf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bde2:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20bde6:	78 36                	js     20be1e <kernel_font+0x129e>
  20bde8:	73 63                	jae    20be4d <kernel_font+0x12cd>
  20bdea:	72 65                	jb     20be51 <kernel_font+0x12d1>
  20bdec:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bdee:	4c 31 37             	xor    QWORD PTR [rdi],r14
  20bdf1:	70 6c                	jo     20be5f <kernel_font+0x12df>
  20bdf3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bdf4:	74 5f                	je     20be55 <kernel_font+0x12d5>
  20bdf6:	70 69                	jo     20be61 <kernel_font+0x12e1>
  20bdf8:	78 65                	js     20be5f <kernel_font+0x12df>
  20bdfa:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bdfb:	5f                   	pop    rdi
  20bdfc:	62                   	(bad)  
  20bdfd:	75 66                	jne    20be65 <kernel_font+0x12e5>
  20bdff:	66 65 72 45          	data16 gs jb 20be48 <kernel_font+0x12c8>
  20be03:	4e 53                	rex.WRX push rbx
  20be05:	5f                   	pop    rdi
  20be06:	36 73 68             	ss jae 20be71 <kernel_font+0x12f1>
  20be09:	61                   	(bad)  
  20be0a:	70 65                	jo     20be71 <kernel_font+0x12f1>
  20be0c:	73 31                	jae    20be3f <kernel_font+0x12bf>
  20be0e:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
  20be11:	70 6f                	jo     20be82 <kernel_font+0x1302>
  20be13:	73 5f                	jae    20be74 <kernel_font+0x12f4>
  20be15:	70 6f                	jo     20be86 <kernel_font+0x1306>
  20be17:	69 6e 74 45 6a 00 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f006a45
  20be1e:	5a                   	pop    rdx
  20be1f:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20be23:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20be27:	4c 39 76 67          	cmp    QWORD PTR [rsi+0x67],r14
  20be2b:	61                   	(bad)  
  20be2c:	5f                   	pop    rdi
  20be2d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20be2f:	74 72                	je     20bea3 <kernel_font+0x1323>
  20be31:	79 45                	jns    20be78 <kernel_font+0x12f8>
  20be33:	68 68 00 5f 5a       	push   0x5a5f0068
  20be38:	4e 34 75             	rex.WRX xor al,0x75
  20be3b:	74 69                	je     20bea6 <kernel_font+0x1326>
  20be3d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20be3e:	4c 37                	rex.WR (bad) 
  20be40:	67 65 74 5f          	addr32 gs je 20bea3 <kernel_font+0x1323>
  20be44:	62                   	(bad)  
  20be45:	69 74 45 6d 68 00 5f 	imul   esi,DWORD PTR [rbp+rax*2+0x6d],0x5a5f0068
  20be4c:	5a 
  20be4d:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20be51:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20be55:	31 30                	xor    DWORD PTR [rax],esi
  20be57:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
  20be5e:	69 7a 65 45 76 00 5f 	imul   edi,DWORD PTR [rdx+0x65],0x5f007645
  20be65:	5a                   	pop    rdx
  20be66:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20be6a:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20be6e:	35 63 6c 65 61       	xor    eax,0x61656c63
  20be73:	72 45                	jb     20beba <kernel_font+0x133a>
  20be75:	76 00                	jbe    20be77 <kernel_font+0x12f7>
  20be77:	5f                   	pop    rdi
  20be78:	5a                   	pop    rdx
  20be79:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20be7d:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20be81:	31 32                	xor    DWORD PTR [rdx],esi
  20be83:	70 75                	jo     20befa <kernel_font+0x137a>
  20be85:	74 5f                	je     20bee6 <kernel_font+0x1366>
  20be87:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20be89:	74 72                	je     20befd <kernel_font+0x137d>
  20be8b:	79 5f                	jns    20beec <kernel_font+0x136c>
  20be8d:	61                   	(bad)  
  20be8e:	74 45                	je     20bed5 <kernel_font+0x1355>
  20be90:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
  20be93:	6d                   	ins    DWORD PTR es:[rdi],dx
  20be94:	00 00                	add    BYTE PTR [rax],al
  20be96:	00 00                	add    BYTE PTR [rax],al
  20be98:	5f                   	pop    rdi
  20be99:	5a                   	pop    rdx
  20be9a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20be9e:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bea2:	31 38                	xor    DWORD PTR [rax],edi
  20bea4:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20bea7:	76 65                	jbe    20bf0e <kernel_font+0x138e>
  20bea9:	72 74                	jb     20bf1f <kernel_font+0x139f>
  20beab:	5f                   	pop    rdi
  20beac:	76 67                	jbe    20bf15 <kernel_font+0x1395>
  20beae:	61                   	(bad)  
  20beaf:	5f                   	pop    rdi
  20beb0:	74 6f                	je     20bf21 <kernel_font+0x13a1>
  20beb2:	5f                   	pop    rdi
  20beb3:	70 69                	jo     20bf1e <kernel_font+0x139e>
  20beb5:	78 45                	js     20befc <kernel_font+0x137c>
  20beb7:	68 00 00 00 00       	push   0x0
  20bebc:	00 00                	add    BYTE PTR [rax],al
  20bebe:	00 00                	add    BYTE PTR [rax],al
  20bec0:	5f                   	pop    rdi
  20bec1:	5a                   	pop    rdx
  20bec2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bec6:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20beca:	31 35 72 65 6e 64    	xor    DWORD PTR [rip+0x646e6572],esi        # 648f2442 <__kernel_end+0x646e0442>
  20bed0:	65 72 5f             	gs jb  20bf32 <kernel_font+0x13b2>
  20bed3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bed5:	74 72                	je     20bf49 <kernel_font+0x13c9>
  20bed7:	79 5f                	jns    20bf38 <kernel_font+0x13b8>
  20bed9:	61                   	(bad)  
  20beda:	74 45                	je     20bf21 <kernel_font+0x13a1>
  20bedc:	74 74                	je     20bf52 <kernel_font+0x13d2>
  20bede:	00 00                	add    BYTE PTR [rax],al
  20bee0:	5f                   	pop    rdi
  20bee1:	5a                   	pop    rdx
  20bee2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bee6:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20beea:	32 32                	xor    dh,BYTE PTR [rdx]
  20beec:	72 65                	jb     20bf53 <kernel_font+0x13d3>
  20beee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20beef:	64 65 72 5f          	fs gs jb 20bf52 <kernel_font+0x13d2>
  20bef3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20bef5:	74 72                	je     20bf69 <kernel_font+0x13e9>
  20bef7:	79 5f                	jns    20bf58 <kernel_font+0x13d8>
  20bef9:	61                   	(bad)  
  20befa:	74 5f                	je     20bf5b <kernel_font+0x13db>
  20befc:	62                   	(bad)  
  20befd:	75 66                	jne    20bf65 <kernel_font+0x13e5>
  20beff:	66 65 72 45          	data16 gs jb 20bf48 <kernel_font+0x13c8>
  20bf03:	74 74                	je     20bf79 <kernel_font+0x13f9>
  20bf05:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bf08:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf0c:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf10:	31 33                	xor    DWORD PTR [rbx],esi
  20bf12:	72 65                	jb     20bf79 <kernel_font+0x13f9>
  20bf14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20bf15:	64 65 72 5f          	fs gs jb 20bf78 <kernel_font+0x13f8>
  20bf19:	62                   	(bad)  
  20bf1a:	75 66                	jne    20bf82 <kernel_font+0x1402>
  20bf1c:	66 65 72 45          	data16 gs jb 20bf65 <kernel_font+0x13e5>
  20bf20:	76 00                	jbe    20bf22 <kernel_font+0x13a2>
  20bf22:	5f                   	pop    rdi
  20bf23:	5a                   	pop    rdx
  20bf24:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf28:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf2c:	35 73 68 69 66       	xor    eax,0x66696873
  20bf31:	74 45                	je     20bf78 <kernel_font+0x13f8>
  20bf33:	76 00                	jbe    20bf35 <kernel_font+0x13b5>
  20bf35:	5f                   	pop    rdi
  20bf36:	5a                   	pop    rdx
  20bf37:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf3b:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf3f:	38 70 75             	cmp    BYTE PTR [rax+0x75],dh
  20bf42:	74 5f                	je     20bfa3 <kernel_font+0x1423>
  20bf44:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  20bf47:	72 45                	jb     20bf8e <kernel_font+0x140e>
  20bf49:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
  20bf4c:	5f                   	pop    rdi
  20bf4d:	5a                   	pop    rdx
  20bf4e:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf52:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf56:	35 77 72 69 74       	xor    eax,0x74697277
  20bf5b:	65 45 50             	gs rex.RB push r8
  20bf5e:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  20bf61:	5f                   	pop    rdi
  20bf62:	5a                   	pop    rdx
  20bf63:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf67:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf6b:	31 30                	xor    DWORD PTR [rax],esi
  20bf6d:	73 65                	jae    20bfd4 <kernel_font+0x1454>
  20bf6f:	74 5f                	je     20bfd0 <kernel_font+0x1450>
  20bf71:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
  20bf74:	73 6f                	jae    20bfe5 <kernel_font+0x1465>
  20bf76:	72 45                	jb     20bfbd <kernel_font+0x143d>
  20bf78:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bf79:	6d                   	ins    DWORD PTR es:[rdi],dx
  20bf7a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bf7d:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf81:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bf85:	31 30                	xor    DWORD PTR [rax],esi
  20bf87:	77 72                	ja     20bffb <kernel_font+0x147b>
  20bf89:	69 74 65 5f 6c 69 6e 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x656e696c
  20bf90:	65 
  20bf91:	45 50                	rex.RB push r8
  20bf93:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  20bf96:	00 00                	add    BYTE PTR [rax],al
  20bf98:	5f                   	pop    rdi
  20bf99:	5a                   	pop    rdx
  20bf9a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20bf9e:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
  20bfa2:	31 36                	xor    DWORD PTR [rsi],esi
  20bfa4:	67 65 74 5f          	addr32 gs je 20c007 <kernel_font+0x1487>
  20bfa8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20bfa9:	70 74                	jo     20c01f <kernel_font+0x149f>
  20bfab:	69 6d 61 6c 5f 73 69 	imul   ebp,DWORD PTR [rbp+0x61],0x69735f6c
  20bfb2:	7a 65                	jp     20c019 <kernel_font+0x1499>
  20bfb4:	45                   	rex.RB
  20bfb5:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20bfb9:	78 36                	js     20bff1 <kernel_font+0x1471>
  20bfbb:	73 68                	jae    20c025 <kernel_font+0x14a5>
  20bfbd:	61                   	(bad)  
  20bfbe:	70 65                	jo     20c025 <kernel_font+0x14a5>
  20bfc0:	73 31                	jae    20bff3 <kernel_font+0x1473>
  20bfc2:	32 73 5f             	xor    dh,BYTE PTR [rbx+0x5f]
  20bfc5:	64 69 6d 65 6e 73 69 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  20bfcc:	6f 
  20bfcd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20bfce:	73 45                	jae    20c015 <kernel_font+0x1495>
  20bfd0:	00 70 75             	add    BYTE PTR [rax+0x75],dh
  20bfd3:	74 73                	je     20c048 <kernel_font+0x14c8>
  20bfd5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20bfd8:	39 5f 5f             	cmp    DWORD PTR [rdi+0x5f],ebx
  20bfdb:	69 6e 74 5f 73 74 72 	imul   ebp,DWORD PTR [rsi+0x74],0x7274735f
  20bfe2:	6c                   	ins    BYTE PTR es:[rdi],dx
  20bfe3:	50                   	push   rax
  20bfe4:	63 69 62             	movsxd ebp,DWORD PTR [rcx+0x62]
  20bfe7:	62                   	(bad)  
  20bfe8:	69 62 62 00 5f 5a 31 	imul   esp,DWORD PTR [rdx+0x62],0x315a5f00
  20bfef:	36 64 69 73 70 6c 61 	ss imul esi,DWORD PTR fs:[rbx+0x70],0x4379616c
  20bff6:	79 43 
  20bff8:	68 61 72 61 63       	push   0x63617261
  20bffd:	74 65                	je     20c064 <kernel_font+0x14e4>
  20bfff:	72 63                	jb     20c064 <kernel_font+0x14e4>
  20c001:	50                   	push   rax
  20c002:	69 00 5f 5a 31 33    	imul   eax,DWORD PTR [rax],0x33315a5f
  20c008:	64 69 73 70 6c 61 79 	imul   esi,DWORD PTR fs:[rbx+0x70],0x5379616c
  20c00f:	53 
  20c010:	74 72                	je     20c084 <kernel_font+0x1504>
  20c012:	69 6e 67 50 63 50 69 	imul   ebp,DWORD PTR [rsi+0x67],0x69506350
  20c019:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c01c:	37                   	(bad)  
  20c01d:	76 70                	jbe    20c08f <kernel_font+0x150f>
  20c01f:	72 69                	jb     20c08a <kernel_font+0x150a>
  20c021:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c022:	74 66                	je     20c08a <kernel_font+0x150a>
  20c024:	50                   	push   rax
  20c025:	4b 63 50 31          	rex.WXB movsxd rdx,DWORD PTR [r8+0x31]
  20c029:	33 5f 5f             	xor    ebx,DWORD PTR [rdi+0x5f]
  20c02c:	76 61                	jbe    20c08f <kernel_font+0x150f>
  20c02e:	5f                   	pop    rdi
  20c02f:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c030:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
  20c037:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  20c03a:	69 6e 74 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x74],0x5a5f0066
  20c041:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c045:	78 36                	js     20c07d <kernel_font+0x14fd>
  20c047:	73 68                	jae    20c0b1 <kernel_font+0x1531>
  20c049:	61                   	(bad)  
  20c04a:	70 65                	jo     20c0b1 <kernel_font+0x1531>
  20c04c:	73 33                	jae    20c081 <kernel_font+0x1501>
  20c04e:	70 6f                	jo     20c0bf <kernel_font+0x153f>
  20c050:	73 45                	jae    20c097 <kernel_font+0x1517>
  20c052:	6a 6a                	push   0x6a
  20c054:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c057:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c05b:	78 36                	js     20c093 <kernel_font+0x1513>
  20c05d:	73 68                	jae    20c0c7 <kernel_font+0x1547>
  20c05f:	61                   	(bad)  
  20c060:	70 65                	jo     20c0c7 <kernel_font+0x1547>
  20c062:	73 34                	jae    20c098 <kernel_font+0x1518>
  20c064:	64 69 6d 73 45 6a 6a 	imul   ebp,DWORD PTR fs:[rbp+0x73],0x6a6a45
  20c06b:	00 
  20c06c:	00 00                	add    BYTE PTR [rax],al
  20c06e:	00 00                	add    BYTE PTR [rax],al
  20c070:	5f                   	pop    rdi
  20c071:	5a                   	pop    rdx
  20c072:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c076:	78 36                	js     20c0ae <kernel_font+0x152e>
  20c078:	73 68                	jae    20c0e2 <kernel_font+0x1562>
  20c07a:	61                   	(bad)  
  20c07b:	70 65                	jo     20c0e2 <kernel_font+0x1562>
  20c07d:	73 34                	jae    20c0b3 <kernel_font+0x1533>
  20c07f:	72 65                	jb     20c0e6 <kernel_font+0x1566>
  20c081:	63 74 45 4e          	movsxd esi,DWORD PTR [rbp+rax*2+0x4e]
  20c085:	53                   	push   rbx
  20c086:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
  20c089:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
  20c08c:	70 6f                	jo     20c0fd <kernel_font+0x157d>
  20c08e:	73 5f                	jae    20c0ef <kernel_font+0x156f>
  20c090:	70 6f                	jo     20c101 <kernel_font+0x1581>
  20c092:	69 6e 74 45 4e 53 30 	imul   ebp,DWORD PTR [rsi+0x74],0x30534e45
  20c099:	5f                   	pop    rdi
  20c09a:	31 32                	xor    DWORD PTR [rdx],esi
  20c09c:	73 5f                	jae    20c0fd <kernel_font+0x157d>
  20c09e:	64 69 6d 65 6e 73 69 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
  20c0a5:	6f 
  20c0a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c0a7:	73 45                	jae    20c0ee <kernel_font+0x156e>
  20c0a9:	6a 00                	push   0x0
  20c0ab:	5f                   	pop    rdi
  20c0ac:	5a                   	pop    rdx
  20c0ad:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c0b1:	78 36                	js     20c0e9 <kernel_font+0x1569>
  20c0b3:	73 63                	jae    20c118 <kernel_font+0x1598>
  20c0b5:	72 65                	jb     20c11c <kernel_font+0x159c>
  20c0b7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c0b9:	34 62                	xor    al,0x62
  20c0bb:	75 66                	jne    20c123 <kernel_font+0x15a3>
  20c0bd:	66 45 76 00          	data16 rex.RB jbe 20c0c1 <kernel_font+0x1541>
  20c0c1:	5f                   	pop    rdi
  20c0c2:	5a                   	pop    rdx
  20c0c3:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c0c7:	78 36                	js     20c0ff <kernel_font+0x157f>
  20c0c9:	73 63                	jae    20c12e <kernel_font+0x15ae>
  20c0cb:	72 65                	jb     20c132 <kernel_font+0x15b2>
  20c0cd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c0cf:	31 31                	xor    DWORD PTR [rcx],esi
  20c0d1:	73 61                	jae    20c134 <kernel_font+0x15b4>
  20c0d3:	76 65                	jbe    20c13a <kernel_font+0x15ba>
  20c0d5:	5f                   	pop    rdi
  20c0d6:	73 63                	jae    20c13b <kernel_font+0x15bb>
  20c0d8:	72 65                	jb     20c13f <kernel_font+0x15bf>
  20c0da:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c0dc:	45 76 00             	rex.RB jbe 20c0df <kernel_font+0x155f>
  20c0df:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c0e2:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c0e6:	78 36                	js     20c11e <kernel_font+0x159e>
  20c0e8:	73 63                	jae    20c14d <kernel_font+0x15cd>
  20c0ea:	72 65                	jb     20c151 <kernel_font+0x15d1>
  20c0ec:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c0ee:	31 34 72             	xor    DWORD PTR [rdx+rsi*2],esi
  20c0f1:	65 73 74             	gs jae 20c168 <kernel_font+0x15e8>
  20c0f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c0f5:	72 65                	jb     20c15c <kernel_font+0x15dc>
  20c0f7:	5f                   	pop    rdi
  20c0f8:	73 63                	jae    20c15d <kernel_font+0x15dd>
  20c0fa:	72 65                	jb     20c161 <kernel_font+0x15e1>
  20c0fc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c0fe:	45 76 00             	rex.RB jbe 20c101 <kernel_font+0x1581>
  20c101:	00 00                	add    BYTE PTR [rax],al
  20c103:	00 00                	add    BYTE PTR [rax],al
  20c105:	00 00                	add    BYTE PTR [rax],al
  20c107:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c10a:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c10e:	78 36                	js     20c146 <kernel_font+0x15c6>
  20c110:	73 68                	jae    20c17a <kernel_font+0x15fa>
  20c112:	61                   	(bad)  
  20c113:	70 65                	jo     20c17a <kernel_font+0x15fa>
  20c115:	73 31                	jae    20c148 <kernel_font+0x15c8>
  20c117:	31 72 65             	xor    DWORD PTR [rdx+0x65],esi
  20c11a:	63 74 5f 63          	movsxd esi,DWORD PTR [rdi+rbx*2+0x63]
  20c11e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c120:	74 65                	je     20c187 <kernel_font+0x1607>
  20c122:	72 45                	jb     20c169 <kernel_font+0x15e9>
  20c124:	4e 53                	rex.WRX push rbx
  20c126:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
  20c129:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
  20c12c:	70 6f                	jo     20c19d <kernel_font+0x161d>
  20c12e:	73 5f                	jae    20c18f <kernel_font+0x160f>
  20c130:	70 6f                	jo     20c1a1 <kernel_font+0x1621>
  20c132:	69 6e 74 45 53 31 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f315345
  20c139:	00 00                	add    BYTE PTR [rax],al
  20c13b:	00 00                	add    BYTE PTR [rax],al
  20c13d:	00 00                	add    BYTE PTR [rax],al
  20c13f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c142:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
  20c146:	78 35                	js     20c17d <kernel_font+0x15fd>
  20c148:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  20c14a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c14b:	74 73                	je     20c1c0 <kernel_font+0x1640>
  20c14d:	31 38                	xor    DWORD PTR [rax],edi
  20c14f:	67 65 74 5f          	addr32 gs je 20c1b2 <kernel_font+0x1632>
  20c153:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  20c156:	72 61                	jb     20c1b9 <kernel_font+0x1639>
  20c158:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  20c15c:	5f                   	pop    rdi
  20c15d:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  20c15f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c160:	74 45                	je     20c1a7 <kernel_font+0x1627>
  20c162:	63 00                	movsxd eax,DWORD PTR [rax]
  20c164:	00 00                	add    BYTE PTR [rax],al
  20c166:	00 00                	add    BYTE PTR [rax],al
  20c168:	5f                   	pop    rdi
  20c169:	5a                   	pop    rdx
  20c16a:	31 38                	xor    DWORD PTR [rax],edi
  20c16c:	24 66                	and    al,0x66
  20c16e:	69 6e 64 5f 63 6f 6d 	imul   ebp,DWORD PTR [rsi+0x64],0x6d6f635f
  20c175:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c176:	61                   	(bad)  
  20c177:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c178:	64 5f                	fs pop rdi
  20c17a:	73 6c                	jae    20c1e8 <kernel_font+0x1668>
  20c17c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c17d:	74 50                	je     20c1cf <kernel_font+0x164f>
  20c17f:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c183:	34 64                	xor    al,0x64
  20c185:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c18c:	69 38 68 62 61 5f    	imul   edi,DWORD PTR [rax],0x5f616268
  20c192:	70 6f                	jo     20c203 <kernel_font+0x1683>
  20c194:	72 74                	jb     20c20a <kernel_font+0x168a>
  20c196:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
  20c19a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c19e:	34 64                	xor    al,0x64
  20c1a0:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c1a7:	69 31 30 69 6e 69    	imul   esi,DWORD PTR [rcx],0x696e6930
  20c1ad:	74 69                	je     20c218 <kernel_font+0x1698>
  20c1af:	61                   	(bad)  
  20c1b0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c1b1:	69 7a 65 45 50 4e 53 	imul   edi,DWORD PTR [rdx+0x65],0x534e5045
  20c1b8:	5f                   	pop    rdi
  20c1b9:	33 70 63             	xor    esi,DWORD PTR [rax+0x63]
  20c1bc:	69 31 33 64 65 76    	imul   esi,DWORD PTR [rcx],0x76656433
  20c1c2:	69 63 65 5f 68 65 61 	imul   esp,DWORD PTR [rbx+0x65],0x6165685f
  20c1c9:	64 65 72 45          	fs gs jb 20c212 <kernel_font+0x1692>
  20c1cd:	00 00                	add    BYTE PTR [rax],al
  20c1cf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c1d2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c1d6:	34 64                	xor    al,0x64
  20c1d8:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c1df:	69 31 33 67 65 74    	imul   esi,DWORD PTR [rcx],0x74656733
  20c1e5:	5f                   	pop    rdi
  20c1e6:	70 6f                	jo     20c257 <kernel_font+0x16d7>
  20c1e8:	72 74                	jb     20c25e <kernel_font+0x16de>
  20c1ea:	5f                   	pop    rdi
  20c1eb:	74 79                	je     20c266 <kernel_font+0x16e6>
  20c1ed:	70 65                	jo     20c254 <kernel_font+0x16d4>
  20c1ef:	45 50                	rex.RB push r8
  20c1f1:	4e 53                	rex.WRX push rbx
  20c1f3:	31 5f 38             	xor    DWORD PTR [rdi+0x38],ebx
  20c1f6:	68 62 61 5f 70       	push   0x705f6162
  20c1fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c1fc:	72 74                	jb     20c272 <kernel_font+0x16f2>
  20c1fe:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
  20c202:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c206:	34 64                	xor    al,0x64
  20c208:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c20f:	69 31 31 70 72 6f    	imul   esi,DWORD PTR [rcx],0x6f727031
  20c215:	62                   	(bad)  
  20c216:	65 5f                	gs pop rdi
  20c218:	70 6f                	jo     20c289 <kernel_font+0x1709>
  20c21a:	72 74                	jb     20c290 <kernel_font+0x1710>
  20c21c:	73 45                	jae    20c263 <kernel_font+0x16e3>
  20c21e:	76 00                	jbe    20c220 <kernel_font+0x16a0>
  20c220:	5f                   	pop    rdi
  20c221:	5a                   	pop    rdx
  20c222:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c226:	34 64                	xor    al,0x64
  20c228:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c22f:	69 31 34 63 6f 6e    	imul   esi,DWORD PTR [rcx],0x6e6f6334
  20c235:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20c23b:	5f                   	pop    rdi
  20c23c:	70 6f                	jo     20c2ad <kernel_font+0x172d>
  20c23e:	72 74                	jb     20c2b4 <kernel_font+0x1734>
  20c240:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
  20c242:	00 00                	add    BYTE PTR [rax],al
  20c244:	00 00                	add    BYTE PTR [rax],al
  20c246:	00 00                	add    BYTE PTR [rax],al
  20c248:	5f                   	pop    rdi
  20c249:	5a                   	pop    rdx
  20c24a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c24e:	34 64                	xor    al,0x64
  20c250:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c257:	69 31 33 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6333
  20c25d:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c25e:	61                   	(bad)  
  20c25f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c260:	64 5f                	fs pop rdi
  20c262:	73 74                	jae    20c2d8 <kernel_font+0x1758>
  20c264:	61                   	(bad)  
  20c265:	72 74                	jb     20c2db <kernel_font+0x175b>
  20c267:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
  20c269:	00 00                	add    BYTE PTR [rax],al
  20c26b:	00 00                	add    BYTE PTR [rax],al
  20c26d:	00 00                	add    BYTE PTR [rax],al
  20c26f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c272:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c276:	34 64                	xor    al,0x64
  20c278:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c27f:	69 31 32 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6332
  20c285:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c286:	61                   	(bad)  
  20c287:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c288:	64 5f                	fs pop rdi
  20c28a:	73 74                	jae    20c300 <kernel_font+0x1780>
  20c28c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c28d:	70 45                	jo     20c2d4 <kernel_font+0x1754>
  20c28f:	6d                   	ins    DWORD PTR es:[rdi],dx
	...
  20c298:	5f                   	pop    rdi
  20c299:	5a                   	pop    rdx
  20c29a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c29e:	34 64                	xor    al,0x64
  20c2a0:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c2a7:	69 31 32 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6332
  20c2ad:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c2ae:	61                   	(bad)  
  20c2af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c2b0:	64 5f                	fs pop rdi
  20c2b2:	72 65                	jb     20c319 <kernel_font+0x1799>
  20c2b4:	61                   	(bad)  
  20c2b5:	64 45 6d             	fs rex.RB ins DWORD PTR es:[rdi],dx
  20c2b8:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c2b9:	74 50                	je     20c30b <kernel_font+0x178b>
  20c2bb:	76 00                	jbe    20c2bd <kernel_font+0x173d>
  20c2bd:	00 00                	add    BYTE PTR [rax],al
  20c2bf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c2c2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c2c6:	34 64                	xor    al,0x64
  20c2c8:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
  20c2cf:	69 31 33 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6333
  20c2d5:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c2d6:	61                   	(bad)  
  20c2d7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c2d8:	64 5f                	fs pop rdi
  20c2da:	77 72                	ja     20c34e <kernel_font+0x17ce>
  20c2dc:	69 74 65 45 6d 6d 74 	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x50746d6d
  20c2e3:	50 
  20c2e4:	76 00                	jbe    20c2e6 <kernel_font+0x1766>
  20c2e6:	00 00                	add    BYTE PTR [rax],al
  20c2e8:	5f                   	pop    rdi
  20c2e9:	5a                   	pop    rdx
  20c2ea:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c2ee:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
  20c2f1:	79 62                	jns    20c355 <kernel_font+0x17d5>
  20c2f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c2f4:	61                   	(bad)  
  20c2f5:	72 64                	jb     20c35b <kernel_font+0x17db>
  20c2f7:	32 34 6b             	xor    dh,BYTE PTR [rbx+rbp*2]
  20c2fa:	65 79 62             	gs jns 20c35f <kernel_font+0x17df>
  20c2fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c2fe:	61                   	(bad)  
  20c2ff:	72 64                	jb     20c365 <kernel_font+0x17e5>
  20c301:	5f                   	pop    rdi
  20c302:	65 76 65             	gs jbe 20c36a <kernel_font+0x17ea>
  20c305:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c306:	74 5f                	je     20c367 <kernel_font+0x17e7>
  20c308:	70 75                	jo     20c37f <kernel_font+0x17ff>
  20c30a:	62                   	(bad)  
  20c30b:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c30c:	69 73 68 65 72 45 4e 	imul   esi,DWORD PTR [rbx+0x68],0x4e457265
  20c313:	53                   	push   rbx
  20c314:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
  20c317:	35 6b 65 79 62       	xor    eax,0x6279656b
  20c31c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c31d:	61                   	(bad)  
  20c31e:	72 64                	jb     20c384 <kernel_font+0x1804>
  20c320:	5f                   	pop    rdi
  20c321:	70 61                	jo     20c384 <kernel_font+0x1804>
  20c323:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  20c326:	74 45                	je     20c36d <kernel_font+0x17ed>
	...
  20c330:	5f                   	pop    rdi
  20c331:	5a                   	pop    rdx
  20c332:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c336:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
  20c339:	79 62                	jns    20c39d <kernel_font+0x181d>
  20c33b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c33c:	61                   	(bad)  
  20c33d:	72 64                	jb     20c3a3 <kernel_font+0x1823>
  20c33f:	32 34 6b             	xor    dh,BYTE PTR [rbx+rbp*2]
  20c342:	65 79 62             	gs jns 20c3a7 <kernel_font+0x1827>
  20c345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c346:	61                   	(bad)  
  20c347:	72 64                	jb     20c3ad <kernel_font+0x182d>
  20c349:	5f                   	pop    rdi
  20c34a:	65 76 65             	gs jbe 20c3b2 <kernel_font+0x1832>
  20c34d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c34e:	74 5f                	je     20c3af <kernel_font+0x182f>
  20c350:	73 75                	jae    20c3c7 <kernel_font+0x1847>
  20c352:	62 73                	(bad)  
  20c354:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
  20c357:	62                   	(bad)  
  20c358:	65 45 50             	gs rex.RB push r8
  20c35b:	46 76 4e             	rex.RX jbe 20c3ac <kernel_font+0x182c>
  20c35e:	53                   	push   rbx
  20c35f:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
  20c362:	35 6b 65 79 62       	xor    eax,0x6279656b
  20c367:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c368:	61                   	(bad)  
  20c369:	72 64                	jb     20c3cf <kernel_font+0x184f>
  20c36b:	5f                   	pop    rdi
  20c36c:	70 61                	jo     20c3cf <kernel_font+0x184f>
  20c36e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  20c371:	74 45                	je     20c3b8 <kernel_font+0x1838>
  20c373:	45 00 00             	add    BYTE PTR [r8],r8b
  20c376:	00 00                	add    BYTE PTR [rax],al
  20c378:	5f                   	pop    rdi
  20c379:	5a                   	pop    rdx
  20c37a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c37e:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
  20c381:	79 62                	jns    20c3e5 <kernel_font+0x1865>
  20c383:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c384:	61                   	(bad)  
  20c385:	72 64                	jb     20c3eb <kernel_font+0x186b>
  20c387:	32 36                	xor    dh,BYTE PTR [rsi]
  20c389:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
  20c38d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c38e:	61                   	(bad)  
  20c38f:	72 64                	jb     20c3f5 <kernel_font+0x1875>
  20c391:	5f                   	pop    rdi
  20c392:	65 76 65             	gs jbe 20c3fa <kernel_font+0x187a>
  20c395:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c396:	74 5f                	je     20c3f7 <kernel_font+0x1877>
  20c398:	75 6e                	jne    20c408 <kernel_font+0x1888>
  20c39a:	73 75                	jae    20c411 <kernel_font+0x1891>
  20c39c:	62 73                	(bad)  
  20c39e:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
  20c3a1:	62                   	(bad)  
  20c3a2:	65 45 50             	gs rex.RB push r8
  20c3a5:	46 76 4e             	rex.RX jbe 20c3f6 <kernel_font+0x1876>
  20c3a8:	53                   	push   rbx
  20c3a9:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
  20c3ac:	35 6b 65 79 62       	xor    eax,0x6279656b
  20c3b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c3b2:	61                   	(bad)  
  20c3b3:	72 64                	jb     20c419 <kernel_font+0x1899>
  20c3b5:	5f                   	pop    rdi
  20c3b6:	70 61                	jo     20c419 <kernel_font+0x1899>
  20c3b8:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  20c3bb:	74 45                	je     20c402 <kernel_font+0x1882>
  20c3bd:	45 00 6b 62          	add    BYTE PTR [r11+0x62],r13b
  20c3c1:	64 5f                	fs pop rdi
  20c3c3:	69 72 71 5f 68 61 6e 	imul   esi,DWORD PTR [rdx+0x71],0x6e61685f
  20c3ca:	64 6c                	fs ins BYTE PTR es:[rdi],dx
  20c3cc:	65 72 00             	gs jb  20c3cf <kernel_font+0x184f>
  20c3cf:	5f                   	pop    rdi
  20c3d0:	5a                   	pop    rdx
  20c3d1:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c3d5:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
  20c3d8:	79 62                	jns    20c43c <kernel_font+0x18bc>
  20c3da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c3db:	61                   	(bad)  
  20c3dc:	72 64                	jb     20c442 <kernel_font+0x18c2>
  20c3de:	34 69                	xor    al,0x69
  20c3e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c3e1:	69 74 45 76 00 5f 5a 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x315a5f00
  20c3e8:	31 
  20c3e9:	32 72 65             	xor    dh,BYTE PTR [rdx+0x65]
  20c3ec:	61                   	(bad)  
  20c3ed:	64 5f                	fs pop rdi
  20c3ef:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20c3f2:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c3f3:	61                   	(bad)  
  20c3f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c3f5:	64 76 00             	fs jbe 20c3f8 <kernel_font+0x1878>
  20c3f8:	73 65                	jae    20c45f <kernel_font+0x18df>
  20c3fa:	72 69                	jb     20c465 <kernel_font+0x18e5>
  20c3fc:	61                   	(bad)  
  20c3fd:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c3fe:	5f                   	pop    rdi
  20c3ff:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c400:	73 67                	jae    20c469 <kernel_font+0x18e9>
  20c402:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c405:	36 70 72             	ss jo  20c47a <kernel_font+0x18fa>
  20c408:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c409:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c40a:	70 74                	jo     20c480 <kernel_font+0x1900>
  20c40c:	76 00                	jbe    20c40e <kernel_font+0x188e>
  20c40e:	5f                   	pop    rdi
  20c40f:	5a                   	pop    rdx
  20c410:	31 32                	xor    DWORD PTR [rdx],esi
  20c412:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
  20c416:	72 5f                	jb     20c477 <kernel_font+0x18f7>
  20c418:	62                   	(bad)  
  20c419:	75 66                	jne    20c481 <kernel_font+0x1901>
  20c41b:	66 65 72 76          	data16 gs jb 20c495 <kernel_font+0x1915>
  20c41f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c422:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c426:	36 73 65             	ss jae 20c48e <kernel_font+0x190e>
  20c429:	72 69                	jb     20c494 <kernel_font+0x1914>
  20c42b:	61                   	(bad)  
  20c42c:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c42d:	37                   	(bad)  
  20c42e:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20c431:	73 6f                	jae    20c4a2 <kernel_font+0x1922>
  20c433:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c434:	65 34 69             	gs xor al,0x69
  20c437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c438:	69 74 45 76 00 00 00 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x0
  20c43f:	00 
  20c440:	5f                   	pop    rdi
  20c441:	5a                   	pop    rdx
  20c442:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
  20c446:	36 73 65             	ss jae 20c4ae <kernel_font+0x192e>
  20c449:	72 69                	jb     20c4b4 <kernel_font+0x1934>
  20c44b:	61                   	(bad)  
  20c44c:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c44d:	37                   	(bad)  
  20c44e:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20c451:	73 6f                	jae    20c4c2 <kernel_font+0x1942>
  20c453:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c454:	65 31 34 72          	xor    DWORD PTR gs:[rdx+rsi*2],esi
  20c458:	65 61                	gs (bad) 
  20c45a:	64 5f                	fs pop rdi
  20c45c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  20c45f:	72 61                	jb     20c4c2 <kernel_font+0x1942>
  20c461:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  20c465:	45 76 00             	rex.RB jbe 20c468 <kernel_font+0x18e8>
  20c468:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c469:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c46a:	6b 65 6e 74          	imul   esp,DWORD PTR [rbp+0x6e],0x74
  20c46e:	72 79                	jb     20c4e9 <kernel_font+0x1969>
  20c470:	00 6c 69 64          	add    BYTE PTR [rcx+rbp*2+0x64],ch
  20c474:	74 00                	je     20c476 <kernel_font+0x18f6>
  20c476:	69 73 72 30 00 69 73 	imul   esi,DWORD PTR [rbx+0x72],0x73690030
  20c47d:	72 31                	jb     20c4b0 <kernel_font+0x1930>
  20c47f:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c482:	72 32                	jb     20c4b6 <kernel_font+0x1936>
  20c484:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c487:	72 33                	jb     20c4bc <kernel_font+0x193c>
  20c489:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c48c:	72 34                	jb     20c4c2 <kernel_font+0x1942>
  20c48e:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c491:	72 35                	jb     20c4c8 <kernel_font+0x1948>
  20c493:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c496:	72 36                	jb     20c4ce <kernel_font+0x194e>
  20c498:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c49b:	72 37                	jb     20c4d4 <kernel_font+0x1954>
  20c49d:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4a0:	72 38                	jb     20c4da <kernel_font+0x195a>
  20c4a2:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4a5:	72 39                	jb     20c4e0 <kernel_font+0x1960>
  20c4a7:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4aa:	72 31                	jb     20c4dd <kernel_font+0x195d>
  20c4ac:	30 00                	xor    BYTE PTR [rax],al
  20c4ae:	69 73 72 31 31 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003131
  20c4b5:	73 72                	jae    20c529 <kernel_font+0x19a9>
  20c4b7:	31 32                	xor    DWORD PTR [rdx],esi
  20c4b9:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4bc:	72 31                	jb     20c4ef <kernel_font+0x196f>
  20c4be:	33 00                	xor    eax,DWORD PTR [rax]
  20c4c0:	69 73 72 31 34 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003431
  20c4c7:	73 72                	jae    20c53b <kernel_font+0x19bb>
  20c4c9:	31 35 00 69 73 72    	xor    DWORD PTR [rip+0x72736900],esi        # 72942dcf <__kernel_end+0x72730dcf>
  20c4cf:	31 36                	xor    DWORD PTR [rsi],esi
  20c4d1:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4d4:	72 31                	jb     20c507 <kernel_font+0x1987>
  20c4d6:	37                   	(bad)  
  20c4d7:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4da:	72 31                	jb     20c50d <kernel_font+0x198d>
  20c4dc:	38 00                	cmp    BYTE PTR [rax],al
  20c4de:	69 73 72 31 39 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003931
  20c4e5:	73 72                	jae    20c559 <kernel_font+0x19d9>
  20c4e7:	32 30                	xor    dh,BYTE PTR [rax]
  20c4e9:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4ec:	72 32                	jb     20c520 <kernel_font+0x19a0>
  20c4ee:	31 00                	xor    DWORD PTR [rax],eax
  20c4f0:	69 73 72 32 32 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003232
  20c4f7:	73 72                	jae    20c56b <kernel_font+0x19eb>
  20c4f9:	32 33                	xor    dh,BYTE PTR [rbx]
  20c4fb:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c4fe:	72 32                	jb     20c532 <kernel_font+0x19b2>
  20c500:	34 00                	xor    al,0x0
  20c502:	69 73 72 32 35 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003532
  20c509:	73 72                	jae    20c57d <kernel_font+0x19fd>
  20c50b:	32 36                	xor    dh,BYTE PTR [rsi]
  20c50d:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c510:	72 32                	jb     20c544 <kernel_font+0x19c4>
  20c512:	37                   	(bad)  
  20c513:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c516:	72 32                	jb     20c54a <kernel_font+0x19ca>
  20c518:	38 00                	cmp    BYTE PTR [rax],al
  20c51a:	69 73 72 32 39 00 69 	imul   esi,DWORD PTR [rbx+0x72],0x69003932
  20c521:	73 72                	jae    20c595 <kernel_font+0x1a15>
  20c523:	33 30                	xor    esi,DWORD PTR [rax]
  20c525:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
  20c528:	72 33                	jb     20c55d <kernel_font+0x19dd>
  20c52a:	31 00                	xor    DWORD PTR [rax],eax
  20c52c:	69 72 71 30 00 69 72 	imul   esi,DWORD PTR [rdx+0x71],0x72690030
  20c533:	71 31                	jno    20c566 <kernel_font+0x19e6>
  20c535:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c538:	71 32                	jno    20c56c <kernel_font+0x19ec>
  20c53a:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c53d:	71 33                	jno    20c572 <kernel_font+0x19f2>
  20c53f:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c542:	71 34                	jno    20c578 <kernel_font+0x19f8>
  20c544:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c547:	71 35                	jno    20c57e <kernel_font+0x19fe>
  20c549:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c54c:	71 36                	jno    20c584 <kernel_font+0x1a04>
  20c54e:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c551:	71 37                	jno    20c58a <kernel_font+0x1a0a>
  20c553:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c556:	71 38                	jno    20c590 <kernel_font+0x1a10>
  20c558:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c55b:	71 39                	jno    20c596 <kernel_font+0x1a16>
  20c55d:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c560:	71 31                	jno    20c593 <kernel_font+0x1a13>
  20c562:	30 00                	xor    BYTE PTR [rax],al
  20c564:	69 72 71 31 31 00 69 	imul   esi,DWORD PTR [rdx+0x71],0x69003131
  20c56b:	72 71                	jb     20c5de <kernel_font+0x1a5e>
  20c56d:	31 32                	xor    DWORD PTR [rdx],esi
  20c56f:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c572:	71 31                	jno    20c5a5 <kernel_font+0x1a25>
  20c574:	33 00                	xor    eax,DWORD PTR [rax]
  20c576:	69 72 71 31 34 00 69 	imul   esi,DWORD PTR [rdx+0x71],0x69003431
  20c57d:	72 71                	jb     20c5f0 <kernel_font+0x1a70>
  20c57f:	31 35 00 69 73 72    	xor    DWORD PTR [rip+0x72736900],esi        # 72942e85 <__kernel_end+0x72730e85>
  20c585:	5f                   	pop    rdi
  20c586:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20c589:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c58a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c58b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c58c:	5f                   	pop    rdi
  20c58d:	73 74                	jae    20c603 <kernel_font+0x1a83>
  20c58f:	75 62                	jne    20c5f3 <kernel_font+0x1a73>
  20c591:	00 69 72             	add    BYTE PTR [rcx+0x72],ch
  20c594:	71 5f                	jno    20c5f5 <kernel_font+0x1a75>
  20c596:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20c599:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c59a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c59b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c59c:	5f                   	pop    rdi
  20c59d:	73 74                	jae    20c613 <kernel_font+0x1a93>
  20c59f:	75 62                	jne    20c603 <kernel_font+0x1a83>
  20c5a1:	00 6c 6f 61          	add    BYTE PTR [rdi+rbp*2+0x61],ch
  20c5a5:	64 5f                	fs pop rdi
  20c5a7:	67 64 74 00          	addr32 fs je 20c5ab <kernel_font+0x1a2b>
  20c5ab:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c5ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c5ad:	61                   	(bad)  
  20c5ae:	64 5f                	fs pop rdi
  20c5b0:	74 73                	je     20c625 <kernel_font+0x1aa5>
  20c5b2:	73 00                	jae    20c5b4 <kernel_font+0x1a34>
  20c5b4:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20c5b7:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20c5bd:	5f                   	pop    rdi
  20c5be:	70 61                	jo     20c621 <kernel_font+0x1aa1>
  20c5c0:	74 00                	je     20c5c2 <kernel_font+0x1a42>
  20c5c2:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
  20c5c5:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
  20c5cb:	5f                   	pop    rdi
  20c5cc:	70 61                	jo     20c62f <kernel_font+0x1aaf>
  20c5ce:	74 2e                	je     20c5fe <kernel_font+0x1a7e>
  20c5d0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c5d2:	64 00 73 6c          	add    BYTE PTR fs:[rbx+0x6c],dh
  20c5d6:	65 65 70 00          	gs gs jo 20c5da <kernel_font+0x1a5a>
  20c5da:	73 6c                	jae    20c648 <kernel_font+0x1ac8>
  20c5dc:	65 65 70 2e          	gs gs jo 20c60e <kernel_font+0x1a8e>
  20c5e0:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c5e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c5e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c5e3:	70 00                	jo     20c5e5 <kernel_font+0x1a65>
  20c5e5:	73 6c                	jae    20c653 <kernel_font+0x1ad3>
  20c5e7:	65 65 70 2e          	gs gs jo 20c619 <kernel_font+0x1a99>
  20c5eb:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
  20c5ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c5ee:	65 00 74 73 73       	add    BYTE PTR gs:[rbx+rsi*2+0x73],dh
  20c5f3:	5f                   	pop    rdi
  20c5f4:	72 73                	jb     20c669 <kernel_font+0x1ae9>
  20c5f6:	70 30                	jo     20c628 <kernel_font+0x1aa8>
  20c5f8:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
  20c5fb:	74 75                	je     20c672 <kernel_font+0x1af2>
  20c5fd:	70 5f                	jo     20c65e <kernel_font+0x1ade>
  20c5ff:	73 79                	jae    20c67a <kernel_font+0x1afa>
  20c601:	73 63                	jae    20c666 <kernel_font+0x1ae6>
  20c603:	61                   	(bad)  
  20c604:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c605:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c606:	73 00                	jae    20c608 <kernel_font+0x1a88>
  20c608:	73 79                	jae    20c683 <kernel_font+0x1b03>
  20c60a:	73 63                	jae    20c66f <kernel_font+0x1aef>
  20c60c:	61                   	(bad)  
  20c60d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c60e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c60f:	5f                   	pop    rdi
  20c610:	68 61 6e 64 6c       	push   0x6c646e61
  20c615:	65 72 00             	gs jb  20c618 <kernel_font+0x1a98>
  20c618:	73 79                	jae    20c693 <kernel_font+0x1b13>
  20c61a:	73 63                	jae    20c67f <kernel_font+0x1aff>
  20c61c:	61                   	(bad)  
  20c61d:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c61e:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c61f:	5f                   	pop    rdi
  20c620:	74 61                	je     20c683 <kernel_font+0x1b03>
  20c622:	62                   	(bad)  
  20c623:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c624:	65 00 65 6e          	add    BYTE PTR gs:[rbp+0x6e],ah
  20c628:	74 65                	je     20c68f <kernel_font+0x1b0f>
  20c62a:	72 5f                	jb     20c68b <kernel_font+0x1b0b>
  20c62c:	75 73                	jne    20c6a1 <kernel_font+0x1b21>
  20c62e:	65 72 73             	gs jb  20c6a4 <kernel_font+0x1b24>
  20c631:	70 61                	jo     20c694 <kernel_font+0x1b14>
  20c633:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
  20c636:	5f                   	pop    rdi
  20c637:	5a                   	pop    rdx
  20c638:	37                   	(bad)  
  20c639:	6b 63 61 73          	imul   esp,DWORD PTR [rbx+0x61],0x73
  20c63d:	63 69 69             	movsxd ebp,DWORD PTR [rcx+0x69]
  20c640:	68 62 62 00 75       	push   0x75006262
  20c645:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c647:	74 72                	je     20c6bb <kernel_font+0x1b3b>
  20c649:	79 00                	jns    20c64b <kernel_font+0x1acb>
  20c64b:	00 00                	add    BYTE PTR [rax],al
  20c64d:	00 00                	add    BYTE PTR [rax],al
  20c64f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c652:	31 35 63 70 75 69    	xor    DWORD PTR [rip+0x69757063],esi        # 699636bb <__kernel_end+0x697516bb>
  20c658:	64 5f                	fs pop rdi
  20c65a:	67 65 74 5f          	addr32 gs je 20c6bd <kernel_font+0x1b3d>
  20c65e:	66 69 65 6c 64 31    	imul   sp,WORD PTR [rbp+0x6c],0x3164
  20c664:	34 43                	xor    al,0x43
  20c666:	50                   	push   rax
  20c667:	55                   	push   rbp
  20c668:	49                   	rex.WB
  20c669:	44 5f                	rex.R pop rdi
  20c66b:	52                   	push   rdx
  20c66c:	45                   	rex.RB
  20c66d:	47                   	rex.RXB
  20c66e:	49 53                	rex.WB push r11
  20c670:	54                   	push   rsp
  20c671:	45 52                	rex.RB push r10
  20c673:	31 31                	xor    DWORD PTR [rcx],esi
  20c675:	43 50                	rex.XB push r8
  20c677:	55                   	push   rbp
  20c678:	49                   	rex.WB
  20c679:	44 5f                	rex.R pop rdi
  20c67b:	46                   	rex.RX
  20c67c:	49                   	rex.WB
  20c67d:	45                   	rex.RB
  20c67e:	4c                   	rex.WR
  20c67f:	44 00 5f 5a          	add    BYTE PTR [rdi+0x5a],r11b
  20c683:	34 69                	xor    al,0x69
  20c685:	74 6f                	je     20c6f6 <kernel_font+0x1b76>
  20c687:	61                   	(bad)  
  20c688:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c689:	69 00 5f 5a 37 24    	imul   eax,DWORD PTR [rax],0x24375a5f
  20c68f:	73 74                	jae    20c705 <kernel_font+0x1b85>
  20c691:	72 63                	jb     20c6f6 <kernel_font+0x1b76>
  20c693:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c694:	70 50                	jo     20c6e6 <kernel_font+0x1b66>
  20c696:	4b 63 53 30          	rex.WXB movsxd rdx,DWORD PTR [r11+0x30]
  20c69a:	5f                   	pop    rdi
  20c69b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c69e:	36 24 70             	ss and al,0x70
  20c6a1:	72 69                	jb     20c70c <kernel_font+0x1b8c>
  20c6a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c6a4:	74 50                	je     20c6f6 <kernel_font+0x1b76>
  20c6a6:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
  20c6a9:	5f                   	pop    rdi
  20c6aa:	5a                   	pop    rdx
  20c6ab:	39 24 67             	cmp    DWORD PTR [rdi+riz*2],esp
  20c6ae:	65 74 5f             	gs je  20c710 <kernel_font+0x1b90>
  20c6b1:	69 6e 66 6f 68 00 00 	imul   ebp,DWORD PTR [rsi+0x66],0x686f
  20c6b8:	5f                   	pop    rdi
  20c6b9:	5a                   	pop    rdx
  20c6ba:	32 35 24 73 75 62    	xor    dh,BYTE PTR [rip+0x62757324]        # 629639e4 <__kernel_end+0x627519e4>
  20c6c0:	73 63                	jae    20c725 <kernel_font+0x1ba5>
  20c6c2:	72 69                	jb     20c72d <kernel_font+0x1bad>
  20c6c4:	62                   	(bad)  
  20c6c5:	65 5f                	gs pop rdi
  20c6c7:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
  20c6cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c6cc:	61                   	(bad)  
  20c6cd:	72 64                	jb     20c733 <kernel_font+0x1bb3>
  20c6cf:	5f                   	pop    rdi
  20c6d0:	65 76 65             	gs jbe 20c738 <kernel_font+0x1bb8>
  20c6d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c6d4:	74 50                	je     20c726 <kernel_font+0x1ba6>
  20c6d6:	46 76 31             	rex.RX jbe 20c70a <kernel_font+0x1b8a>
  20c6d9:	39 6b 65             	cmp    DWORD PTR [rbx+0x65],ebp
  20c6dc:	79 62                	jns    20c740 <kernel_font+0x1bc0>
  20c6de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c6df:	61                   	(bad)  
  20c6e0:	72 64                	jb     20c746 <kernel_font+0x1bc6>
  20c6e2:	5f                   	pop    rdi
  20c6e3:	65 76 65             	gs jbe 20c74b <kernel_font+0x1bcb>
  20c6e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c6e7:	74 5f                	je     20c748 <kernel_font+0x1bc8>
  20c6e9:	61                   	(bad)  
  20c6ea:	72 67                	jb     20c753 <kernel_font+0x1bd3>
  20c6ec:	73 45                	jae    20c733 <kernel_font+0x1bb3>
  20c6ee:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c6f1:	31 34 24             	xor    DWORD PTR [rsp],esi
  20c6f4:	61                   	(bad)  
  20c6f5:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c6f6:	6c                   	ins    BYTE PTR es:[rdi],dx
  20c6f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c6f8:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
  20c6fb:	65 5f                	gs pop rdi
  20c6fd:	70 61                	jo     20c760 <kernel_font+0x1be0>
  20c6ff:	67 65 76 00          	addr32 gs jbe 20c703 <kernel_font+0x1b83>
  20c703:	5f                   	pop    rdi
  20c704:	5a                   	pop    rdx
  20c705:	37                   	(bad)  
  20c706:	24 6d                	and    al,0x6d
  20c708:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20c70a:	73 65                	jae    20c771 <kernel_font+0x1bf1>
  20c70c:	74 50                	je     20c75e <kernel_font+0x1bde>
  20c70e:	76 68                	jbe    20c778 <kernel_font+0x1bf8>
  20c710:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c711:	00 00                	add    BYTE PTR [rax],al
  20c713:	00 00                	add    BYTE PTR [rax],al
  20c715:	00 00                	add    BYTE PTR [rax],al
  20c717:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c71a:	31 34 6b             	xor    DWORD PTR [rbx+rbp*2],esi
  20c71d:	65 79 62             	gs jns 20c782 <kernel_font+0x1c02>
  20c720:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c721:	61                   	(bad)  
  20c722:	72 64                	jb     20c788 <kernel_font+0x1c08>
  20c724:	5f                   	pop    rdi
  20c725:	65 76 65             	gs jbe 20c78d <kernel_font+0x1c0d>
  20c728:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c729:	74 31                	je     20c75c <kernel_font+0x1bdc>
  20c72b:	39 6b 65             	cmp    DWORD PTR [rbx+0x65],ebp
  20c72e:	79 62                	jns    20c792 <kernel_font+0x1c12>
  20c730:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c731:	61                   	(bad)  
  20c732:	72 64                	jb     20c798 <kernel_font+0x1c18>
  20c734:	5f                   	pop    rdi
  20c735:	65 76 65             	gs jbe 20c79d <kernel_font+0x1c1d>
  20c738:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c739:	74 5f                	je     20c79a <kernel_font+0x1c1a>
  20c73b:	61                   	(bad)  
  20c73c:	72 67                	jb     20c7a5 <kernel_font+0x1c25>
  20c73e:	73 00                	jae    20c740 <kernel_font+0x1bc0>
  20c740:	5f                   	pop    rdi
  20c741:	5a                   	pop    rdx
  20c742:	37                   	(bad)  
  20c743:	24 70                	and    al,0x70
  20c745:	72 6f                	jb     20c7b6 <kernel_font+0x1c36>
  20c747:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c748:	70 74                	jo     20c7be <kernel_font+0x1c3e>
  20c74a:	76 00                	jbe    20c74c <kernel_font+0x1bcc>
  20c74c:	75 6d                	jne    20c7bb <kernel_font+0x1c3b>
  20c74e:	61                   	(bad)  
  20c74f:	69 6e 00 5f 5a 39 24 	imul   ebp,DWORD PTR [rsi+0x0],0x24395a5f
  20c756:	24 6d                	and    al,0x6d
  20c758:	65 6d                	gs ins DWORD PTR es:[rdi],dx
  20c75a:	69 6e 66 6f 76 00 5f 	imul   ebp,DWORD PTR [rsi+0x66],0x5f00766f
  20c761:	5a                   	pop    rdx
  20c762:	31 30                	xor    DWORD PTR [rax],esi
  20c764:	24 24                	and    al,0x24
  20c766:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
  20c769:	5f                   	pop    rdi
  20c76a:	69 6e 66 6f 76 00 5f 	imul   ebp,DWORD PTR [rsi+0x66],0x5f00766f
  20c771:	5a                   	pop    rdx
  20c772:	36 24 24             	ss and al,0x24
  20c775:	68 65 6c 70 76       	push   0x76706c65
  20c77a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c77d:	31 36                	xor    DWORD PTR [rsi],esi
  20c77f:	24 70                	and    al,0x70
  20c781:	65 72 66             	gs jb  20c7ea <kernel_font+0x1c6a>
  20c784:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c785:	72 6d                	jb     20c7f4 <kernel_font+0x1c74>
  20c787:	5f                   	pop    rdi
  20c788:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20c78b:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c78c:	61                   	(bad)  
  20c78d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c78e:	64 50                	fs push rax
  20c790:	63 00                	movsxd eax,DWORD PTR [rax]
  20c792:	5f                   	pop    rdi
  20c793:	5a                   	pop    rdx
  20c794:	4c 35 6b 62 64 75    	rex.WR xor rax,0x7564626b
  20c79a:	73 00                	jae    20c79c <kernel_font+0x1c1c>
  20c79c:	5f                   	pop    rdi
  20c79d:	5a                   	pop    rdx
  20c79e:	4c 37                	rex.WR (bad) 
  20c7a0:	6b 62 64 75          	imul   esp,DWORD PTR [rdx+0x64],0x75
  20c7a4:	73 5f                	jae    20c805 <kernel_font+0x1c85>
  20c7a6:	63 00                	movsxd eax,DWORD PTR [rax]
  20c7a8:	5f                   	pop    rdi
  20c7a9:	5a                   	pop    rdx
  20c7aa:	4c 37                	rex.WR (bad) 
  20c7ac:	6b 62 64 75          	imul   esp,DWORD PTR [rdx+0x64],0x75
  20c7b0:	73 5f                	jae    20c811 <kernel_font+0x1c91>
  20c7b2:	73 00                	jae    20c7b4 <kernel_font+0x1c34>
  20c7b4:	5f                   	pop    rdi
  20c7b5:	5a                   	pop    rdx
  20c7b6:	4c 38 6b 62          	rex.WR cmp BYTE PTR [rbx+0x62],r13b
  20c7ba:	64 75 73             	fs jne 20c830 <kernel_font+0x1cb0>
  20c7bd:	5f                   	pop    rdi
  20c7be:	73 63                	jae    20c823 <kernel_font+0x1ca3>
  20c7c0:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
  20c7c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c7c4:	61                   	(bad)  
  20c7c5:	5f                   	pop    rdi
  20c7c6:	62                   	(bad)  
  20c7c7:	75 66                	jne    20c82f <kernel_font+0x1caf>
  20c7c9:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
  20c7cc:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c7cd:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c7ce:	61                   	(bad)  
  20c7cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c7d0:	64 5f                	fs pop rdi
  20c7d2:	62                   	(bad)  
  20c7d3:	75 66                	jne    20c83b <kernel_font+0x1cbb>
  20c7d5:	66 65 72 5f          	data16 gs jb 20c838 <kernel_font+0x1cb8>
  20c7d9:	69 6e 64 65 78 00 24 	imul   ebp,DWORD PTR [rsi+0x64],0x24007865
  20c7e0:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
  20c7e3:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c7e4:	61                   	(bad)  
  20c7e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20c7e6:	64 5f                	fs pop rdi
  20c7e8:	62                   	(bad)  
  20c7e9:	75 66                	jne    20c851 <kernel_font+0x1cd1>
  20c7eb:	66 65 72 00          	data16 gs jb 20c7ef <kernel_font+0x1c6f>
  20c7ef:	70 72                	jo     20c863 <__kernel_symtab+0x3>
  20c7f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c7f2:	6d                   	ins    DWORD PTR es:[rdi],dx
  20c7f3:	70 74                	jo     20c869 <__kernel_symtab+0x9>
  20c7f5:	5f                   	pop    rdi
  20c7f6:	77 61                	ja     20c859 <kernel_font+0x1cd9>
  20c7f8:	69 74 69 6e 67 00 65 	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x76650067
  20c7ff:	76 
  20c800:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
  20c802:	74 5f                	je     20c863 <__kernel_symtab+0x3>
  20c804:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20c805:	63 63 75             	movsxd esp,DWORD PTR [rbx+0x75]
  20c808:	72 65                	jb     20c86f <__kernel_symtab+0xf>
  20c80a:	64 00 75 6e          	add    BYTE PTR fs:[rbp+0x6e],dh
  20c80e:	68 61 6e 64 6c       	push   0x6c646e61
  20c813:	65 64 5f             	gs fs pop rdi
  20c816:	62 61                	(bad)  
  20c818:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
  20c81b:	70 61                	jo     20c87e <__kernel_symtab+0x1e>
  20c81d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
  20c820:	5f                   	pop    rdi
  20c821:	5a                   	pop    rdx
  20c822:	4c 31 35 69 74 6f 61 	xor    QWORD PTR [rip+0x616f7469],r14        # 61903c92 <__kernel_end+0x616f1c92>
  20c829:	5f                   	pop    rdi
  20c82a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
  20c82d:	72 61                	jb     20c890 <__kernel_symtab+0x30>
  20c82f:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
  20c833:	73 00                	jae    20c835 <kernel_font+0x1cb5>
  20c835:	5f                   	pop    rdi
  20c836:	5a                   	pop    rdx
  20c837:	4c 38 24 6d 65 6d 69 	rex.WR cmp BYTE PTR [rbp*2+0x6e696d65],r12b
  20c83e:	6e 
  20c83f:	66 6f                	outs   dx,WORD PTR ds:[rsi]
  20c841:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
  20c844:	4c 38 24 63          	rex.WR cmp BYTE PTR [rbx+riz*2],r12b
  20c848:	70 75                	jo     20c8bf <__kernel_symtab+0x5f>
  20c84a:	69 6e 66 6f 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f006f
  20c851:	4c 35 24 68 65 6c    	rex.WR xor rax,0x6c656824
  20c857:	70 00                	jo     20c859 <kernel_font+0x1cd9>
  20c859:	00 00                	add    BYTE PTR [rax],al
  20c85b:	00 00                	add    BYTE PTR [rax],al
  20c85d:	00 00                	add    BYTE PTR [rax],al
	...

000000000020c860 <__kernel_symtab>:
  20c860:	00 10                	add    BYTE PTR [rax],dl
  20c862:	20 00                	and    BYTE PTR [rax],al
  20c864:	00 00                	add    BYTE PTR [rax],al
  20c866:	00 00                	add    BYTE PTR [rax],al
  20c868:	d0 b3 20 00 00 00    	shl    BYTE PTR [rbx+0x20],1
  20c86e:	00 00                	add    BYTE PTR [rax],al
  20c870:	88 10                	mov    BYTE PTR [rax],dl
  20c872:	20 00                	and    BYTE PTR [rax],al
  20c874:	00 00                	add    BYTE PTR [rax],al
  20c876:	00 00                	add    BYTE PTR [rax],al
  20c878:	d8 b3 20 00 00 00    	fdiv   DWORD PTR [rbx+0x20]
  20c87e:	00 00                	add    BYTE PTR [rax],al
  20c880:	be 11 20 00 00       	mov    esi,0x2011
  20c885:	00 00                	add    BYTE PTR [rax],al
  20c887:	00 10                	add    BYTE PTR [rax],dl
  20c889:	b4 20                	mov    ah,0x20
  20c88b:	00 00                	add    BYTE PTR [rax],al
  20c88d:	00 00                	add    BYTE PTR [rax],al
  20c88f:	00 84 12 20 00 00 00 	add    BYTE PTR [rdx+rdx*1+0x20],al
  20c896:	00 00                	add    BYTE PTR [rax],al
  20c898:	60                   	(bad)  
  20c899:	b4 20                	mov    ah,0x20
  20c89b:	00 00                	add    BYTE PTR [rax],al
  20c89d:	00 00                	add    BYTE PTR [rax],al
  20c89f:	00 0a                	add    BYTE PTR [rdx],cl
  20c8a1:	13 20                	adc    esp,DWORD PTR [rax]
  20c8a3:	00 00                	add    BYTE PTR [rax],al
  20c8a5:	00 00                	add    BYTE PTR [rax],al
  20c8a7:	00 a0 b4 20 00 00    	add    BYTE PTR [rax+0x20b4],ah
  20c8ad:	00 00                	add    BYTE PTR [rax],al
  20c8af:	00 4a 13             	add    BYTE PTR [rdx+0x13],cl
  20c8b2:	20 00                	and    BYTE PTR [rax],al
  20c8b4:	00 00                	add    BYTE PTR [rax],al
  20c8b6:	00 00                	add    BYTE PTR [rax],al
  20c8b8:	d0 b4 20 00 00 00 00 	shl    BYTE PTR [rax+riz*1+0x0],1
  20c8bf:	00 88 13 20 00 00    	add    BYTE PTR [rax+0x2013],cl
  20c8c5:	00 00                	add    BYTE PTR [rax],al
  20c8c7:	00 f8                	add    al,bh
  20c8c9:	b4 20                	mov    ah,0x20
  20c8cb:	00 00                	add    BYTE PTR [rax],al
  20c8cd:	00 00                	add    BYTE PTR [rax],al
  20c8cf:	00 9e 13 20 00 00    	add    BYTE PTR [rsi+0x2013],bl
  20c8d5:	00 00                	add    BYTE PTR [rax],al
  20c8d7:	00 1e                	add    BYTE PTR [rsi],bl
  20c8d9:	b5 20                	mov    ch,0x20
  20c8db:	00 00                	add    BYTE PTR [rax],al
  20c8dd:	00 00                	add    BYTE PTR [rax],al
  20c8df:	00 bb 13 20 00 00    	add    BYTE PTR [rbx+0x2013],bh
  20c8e5:	00 00                	add    BYTE PTR [rax],al
  20c8e7:	00 35 b5 20 00 00    	add    BYTE PTR [rip+0x20b5],dh        # 20e9a2 <sgi_stack+0x90a>
  20c8ed:	00 00                	add    BYTE PTR [rax],al
  20c8ef:	00 d3                	add    bl,dl
  20c8f1:	15 20 00 00 00       	adc    eax,0x20
  20c8f6:	00 00                	add    BYTE PTR [rax],al
  20c8f8:	41 b5 20             	mov    r13b,0x20
  20c8fb:	00 00                	add    BYTE PTR [rax],al
  20c8fd:	00 00                	add    BYTE PTR [rax],al
  20c8ff:	00 12                	add    BYTE PTR [rdx],dl
  20c901:	16                   	(bad)  
  20c902:	20 00                	and    BYTE PTR [rax],al
  20c904:	00 00                	add    BYTE PTR [rax],al
  20c906:	00 00                	add    BYTE PTR [rax],al
  20c908:	5e                   	pop    rsi
  20c909:	b5 20                	mov    ch,0x20
  20c90b:	00 00                	add    BYTE PTR [rax],al
  20c90d:	00 00                	add    BYTE PTR [rax],al
  20c90f:	00 43 16             	add    BYTE PTR [rbx+0x16],al
  20c912:	20 00                	and    BYTE PTR [rax],al
  20c914:	00 00                	add    BYTE PTR [rax],al
  20c916:	00 00                	add    BYTE PTR [rax],al
  20c918:	66 b5 20             	data16 mov ch,0x20
  20c91b:	00 00                	add    BYTE PTR [rax],al
  20c91d:	00 00                	add    BYTE PTR [rax],al
  20c91f:	00 4a 16             	add    BYTE PTR [rdx+0x16],cl
  20c922:	20 00                	and    BYTE PTR [rax],al
  20c924:	00 00                	add    BYTE PTR [rax],al
  20c926:	00 00                	add    BYTE PTR [rax],al
  20c928:	7c b5                	jl     20c8df <__kernel_symtab+0x7f>
  20c92a:	20 00                	and    BYTE PTR [rax],al
  20c92c:	00 00                	add    BYTE PTR [rax],al
  20c92e:	00 00                	add    BYTE PTR [rax],al
  20c930:	f1                   	icebp  
  20c931:	16                   	(bad)  
  20c932:	20 00                	and    BYTE PTR [rax],al
  20c934:	00 00                	add    BYTE PTR [rax],al
  20c936:	00 00                	add    BYTE PTR [rax],al
  20c938:	88 b5 20 00 00 00    	mov    BYTE PTR [rbp+0x20],dh
  20c93e:	00 00                	add    BYTE PTR [rax],al
  20c940:	43 18 20             	rex.XB sbb BYTE PTR [r8],spl
  20c943:	00 00                	add    BYTE PTR [rax],al
  20c945:	00 00                	add    BYTE PTR [rax],al
  20c947:	00 b8 b5 20 00 00    	add    BYTE PTR [rax+0x20b5],bh
  20c94d:	00 00                	add    BYTE PTR [rax],al
  20c94f:	00 14 19             	add    BYTE PTR [rcx+rbx*1],dl
  20c952:	20 00                	and    BYTE PTR [rax],al
  20c954:	00 00                	add    BYTE PTR [rax],al
  20c956:	00 00                	add    BYTE PTR [rax],al
  20c958:	d8 b5 20 00 00 00    	fdiv   DWORD PTR [rbp+0x20]
  20c95e:	00 00                	add    BYTE PTR [rax],al
  20c960:	35 19 20 00 00       	xor    eax,0x2019
  20c965:	00 00                	add    BYTE PTR [rax],al
  20c967:	00 e8                	add    al,ch
  20c969:	b5 20                	mov    ch,0x20
  20c96b:	00 00                	add    BYTE PTR [rax],al
  20c96d:	00 00                	add    BYTE PTR [rax],al
  20c96f:	00 da                	add    dl,bl
  20c971:	19 20                	sbb    DWORD PTR [rax],esp
  20c973:	00 00                	add    BYTE PTR [rax],al
  20c975:	00 00                	add    BYTE PTR [rax],al
  20c977:	00 fa                	add    dl,bh
  20c979:	b5 20                	mov    ch,0x20
  20c97b:	00 00                	add    BYTE PTR [rax],al
  20c97d:	00 00                	add    BYTE PTR [rax],al
  20c97f:	00 f2                	add    dl,dh
  20c981:	1b 20                	sbb    esp,DWORD PTR [rax]
  20c983:	00 00                	add    BYTE PTR [rax],al
  20c985:	00 00                	add    BYTE PTR [rax],al
  20c987:	00 0c b6             	add    BYTE PTR [rsi+rsi*4],cl
  20c98a:	20 00                	and    BYTE PTR [rax],al
  20c98c:	00 00                	add    BYTE PTR [rax],al
  20c98e:	00 00                	add    BYTE PTR [rax],al
  20c990:	0d 1c 20 00 00       	or     eax,0x201c
  20c995:	00 00                	add    BYTE PTR [rax],al
  20c997:	00 18                	add    BYTE PTR [rax],bl
  20c999:	b6 20                	mov    dh,0x20
  20c99b:	00 00                	add    BYTE PTR [rax],al
  20c99d:	00 00                	add    BYTE PTR [rax],al
  20c99f:	00 d2                	add    dl,dl
  20c9a1:	1c 20                	sbb    al,0x20
  20c9a3:	00 00                	add    BYTE PTR [rax],al
  20c9a5:	00 00                	add    BYTE PTR [rax],al
  20c9a7:	00 24 b6             	add    BYTE PTR [rsi+rsi*4],ah
  20c9aa:	20 00                	and    BYTE PTR [rax],al
  20c9ac:	00 00                	add    BYTE PTR [rax],al
  20c9ae:	00 00                	add    BYTE PTR [rax],al
  20c9b0:	04 1e                	add    al,0x1e
  20c9b2:	20 00                	and    BYTE PTR [rax],al
  20c9b4:	00 00                	add    BYTE PTR [rax],al
  20c9b6:	00 00                	add    BYTE PTR [rax],al
  20c9b8:	2c b6                	sub    al,0xb6
  20c9ba:	20 00                	and    BYTE PTR [rax],al
  20c9bc:	00 00                	add    BYTE PTR [rax],al
  20c9be:	00 00                	add    BYTE PTR [rax],al
  20c9c0:	e8 23 20 00 00       	call   20e9e8 <sgi_stack+0x950>
  20c9c5:	00 00                	add    BYTE PTR [rax],al
  20c9c7:	00 38                	add    BYTE PTR [rax],bh
  20c9c9:	b6 20                	mov    dh,0x20
  20c9cb:	00 00                	add    BYTE PTR [rax],al
  20c9cd:	00 00                	add    BYTE PTR [rax],al
  20c9cf:	00 55 24             	add    BYTE PTR [rbp+0x24],dl
  20c9d2:	20 00                	and    BYTE PTR [rax],al
  20c9d4:	00 00                	add    BYTE PTR [rax],al
  20c9d6:	00 00                	add    BYTE PTR [rax],al
  20c9d8:	5d                   	pop    rbp
  20c9d9:	b6 20                	mov    dh,0x20
  20c9db:	00 00                	add    BYTE PTR [rax],al
  20c9dd:	00 00                	add    BYTE PTR [rax],al
  20c9df:	00 10                	add    BYTE PTR [rax],dl
  20c9e1:	25 20 00 00 00       	and    eax,0x20
  20c9e6:	00 00                	add    BYTE PTR [rax],al
  20c9e8:	76 b6                	jbe    20c9a0 <__kernel_symtab+0x140>
  20c9ea:	20 00                	and    BYTE PTR [rax],al
  20c9ec:	00 00                	add    BYTE PTR [rax],al
  20c9ee:	00 00                	add    BYTE PTR [rax],al
  20c9f0:	82                   	(bad)  
  20c9f1:	25 20 00 00 00       	and    eax,0x20
  20c9f6:	00 00                	add    BYTE PTR [rax],al
  20c9f8:	90                   	nop
  20c9f9:	b6 20                	mov    dh,0x20
  20c9fb:	00 00                	add    BYTE PTR [rax],al
  20c9fd:	00 00                	add    BYTE PTR [rax],al
  20c9ff:	00 3a                	add    BYTE PTR [rdx],bh
  20ca01:	26 20 00             	and    BYTE PTR es:[rax],al
  20ca04:	00 00                	add    BYTE PTR [rax],al
  20ca06:	00 00                	add    BYTE PTR [rax],al
  20ca08:	c0 b6 20 00 00 00 00 	shl    BYTE PTR [rsi+0x20],0x0
  20ca0f:	00 c8                	add    al,cl
  20ca11:	26 20 00             	and    BYTE PTR es:[rax],al
  20ca14:	00 00                	add    BYTE PTR [rax],al
  20ca16:	00 00                	add    BYTE PTR [rax],al
  20ca18:	f8                   	clc    
  20ca19:	b6 20                	mov    dh,0x20
  20ca1b:	00 00                	add    BYTE PTR [rax],al
  20ca1d:	00 00                	add    BYTE PTR [rax],al
  20ca1f:	00 f4                	add    ah,dh
  20ca21:	26 20 00             	and    BYTE PTR es:[rax],al
  20ca24:	00 00                	add    BYTE PTR [rax],al
  20ca26:	00 00                	add    BYTE PTR [rax],al
  20ca28:	31 b7 20 00 00 00    	xor    DWORD PTR [rdi+0x20],esi
  20ca2e:	00 00                	add    BYTE PTR [rax],al
  20ca30:	87 27                	xchg   DWORD PTR [rdi],esp
  20ca32:	20 00                	and    BYTE PTR [rax],al
  20ca34:	00 00                	add    BYTE PTR [rax],al
  20ca36:	00 00                	add    BYTE PTR [rax],al
  20ca38:	43 b7 20             	rex.XB mov r15b,0x20
  20ca3b:	00 00                	add    BYTE PTR [rax],al
  20ca3d:	00 00                	add    BYTE PTR [rax],al
  20ca3f:	00 da                	add    dl,bl
  20ca41:	27                   	(bad)  
  20ca42:	20 00                	and    BYTE PTR [rax],al
  20ca44:	00 00                	add    BYTE PTR [rax],al
  20ca46:	00 00                	add    BYTE PTR [rax],al
  20ca48:	58                   	pop    rax
  20ca49:	b7 20                	mov    bh,0x20
  20ca4b:	00 00                	add    BYTE PTR [rax],al
  20ca4d:	00 00                	add    BYTE PTR [rax],al
  20ca4f:	00 99 28 20 00 00    	add    BYTE PTR [rcx+0x2028],bl
  20ca55:	00 00                	add    BYTE PTR [rax],al
  20ca57:	00 98 b7 20 00 00    	add    BYTE PTR [rax+0x20b7],bl
  20ca5d:	00 00                	add    BYTE PTR [rax],al
  20ca5f:	00 44 2b 20          	add    BYTE PTR [rbx+rbp*1+0x20],al
  20ca63:	00 00                	add    BYTE PTR [rax],al
  20ca65:	00 00                	add    BYTE PTR [rax],al
  20ca67:	00 cb                	add    bl,cl
  20ca69:	b7 20                	mov    bh,0x20
  20ca6b:	00 00                	add    BYTE PTR [rax],al
  20ca6d:	00 00                	add    BYTE PTR [rax],al
  20ca6f:	00 c0                	add    al,al
  20ca71:	2b 20                	sub    esp,DWORD PTR [rax]
  20ca73:	00 00                	add    BYTE PTR [rax],al
  20ca75:	00 00                	add    BYTE PTR [rax],al
  20ca77:	00 e0                	add    al,ah
  20ca79:	b7 20                	mov    bh,0x20
  20ca7b:	00 00                	add    BYTE PTR [rax],al
  20ca7d:	00 00                	add    BYTE PTR [rax],al
  20ca7f:	00 06                	add    BYTE PTR [rsi],al
  20ca81:	2c 20                	sub    al,0x20
  20ca83:	00 00                	add    BYTE PTR [rax],al
  20ca85:	00 00                	add    BYTE PTR [rax],al
  20ca87:	00 f7                	add    bh,dh
  20ca89:	b7 20                	mov    bh,0x20
  20ca8b:	00 00                	add    BYTE PTR [rax],al
  20ca8d:	00 00                	add    BYTE PTR [rax],al
  20ca8f:	00 83 2c 20 00 00    	add    BYTE PTR [rbx+0x202c],al
  20ca95:	00 00                	add    BYTE PTR [rax],al
  20ca97:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
  20ca9a:	20 00                	and    BYTE PTR [rax],al
  20ca9c:	00 00                	add    BYTE PTR [rax],al
  20ca9e:	00 00                	add    BYTE PTR [rax],al
  20caa0:	c9                   	leave  
  20caa1:	2c 20                	sub    al,0x20
  20caa3:	00 00                	add    BYTE PTR [rax],al
  20caa5:	00 00                	add    BYTE PTR [rax],al
  20caa7:	00 12                	add    BYTE PTR [rdx],dl
  20caa9:	b8 20 00 00 00       	mov    eax,0x20
  20caae:	00 00                	add    BYTE PTR [rax],al
  20cab0:	33 2d 20 00 00 00    	xor    ebp,DWORD PTR [rip+0x20]        # 20cad6 <__kernel_symtab+0x276>
  20cab6:	00 00                	add    BYTE PTR [rax],al
  20cab8:	1f                   	(bad)  
  20cab9:	b8 20 00 00 00       	mov    eax,0x20
  20cabe:	00 00                	add    BYTE PTR [rax],al
  20cac0:	c4                   	(bad)  
  20cac1:	2d 20 00 00 00       	sub    eax,0x20
  20cac6:	00 00                	add    BYTE PTR [rax],al
  20cac8:	2d b8 20 00 00       	sub    eax,0x20b8
  20cacd:	00 00                	add    BYTE PTR [rax],al
  20cacf:	00 40 2e             	add    BYTE PTR [rax+0x2e],al
  20cad2:	20 00                	and    BYTE PTR [rax],al
  20cad4:	00 00                	add    BYTE PTR [rax],al
  20cad6:	00 00                	add    BYTE PTR [rax],al
  20cad8:	37                   	(bad)  
  20cad9:	b8 20 00 00 00       	mov    eax,0x20
  20cade:	00 00                	add    BYTE PTR [rax],al
  20cae0:	86 2e                	xchg   BYTE PTR [rsi],ch
  20cae2:	20 00                	and    BYTE PTR [rax],al
  20cae4:	00 00                	add    BYTE PTR [rax],al
  20cae6:	00 00                	add    BYTE PTR [rax],al
  20cae8:	42 b8 20 00 00 00    	rex.X mov eax,0x20
  20caee:	00 00                	add    BYTE PTR [rax],al
  20caf0:	03 2f                	add    ebp,DWORD PTR [rdi]
  20caf2:	20 00                	and    BYTE PTR [rax],al
  20caf4:	00 00                	add    BYTE PTR [rax],al
  20caf6:	00 00                	add    BYTE PTR [rax],al
  20caf8:	4c b8 20 00 00 00 00 	rex.WR movabs rax,0x2f49000000000020
  20caff:	00 49 2f 
  20cb02:	20 00                	and    BYTE PTR [rax],al
  20cb04:	00 00                	add    BYTE PTR [rax],al
  20cb06:	00 00                	add    BYTE PTR [rax],al
  20cb08:	58                   	pop    rax
  20cb09:	b8 20 00 00 00       	mov    eax,0x20
  20cb0e:	00 00                	add    BYTE PTR [rax],al
  20cb10:	8a 2f                	mov    ch,BYTE PTR [rdi]
  20cb12:	20 00                	and    BYTE PTR [rax],al
  20cb14:	00 00                	add    BYTE PTR [rax],al
  20cb16:	00 00                	add    BYTE PTR [rax],al
  20cb18:	80 b8 20 00 00 00 00 	cmp    BYTE PTR [rax+0x20],0x0
  20cb1f:	00 d8                	add    al,bl
  20cb21:	2f                   	(bad)  
  20cb22:	20 00                	and    BYTE PTR [rax],al
  20cb24:	00 00                	add    BYTE PTR [rax],al
  20cb26:	00 00                	add    BYTE PTR [rax],al
  20cb28:	a8 b8                	test   al,0xb8
  20cb2a:	20 00                	and    BYTE PTR [rax],al
  20cb2c:	00 00                	add    BYTE PTR [rax],al
  20cb2e:	00 00                	add    BYTE PTR [rax],al
  20cb30:	d8 2f                	fsubr  DWORD PTR [rdi]
  20cb32:	20 00                	and    BYTE PTR [rax],al
  20cb34:	00 00                	add    BYTE PTR [rax],al
  20cb36:	00 00                	add    BYTE PTR [rax],al
  20cb38:	d0 b8 20 00 00 00    	sar    BYTE PTR [rax+0x20],1
  20cb3e:	00 00                	add    BYTE PTR [rax],al
  20cb40:	4e 30 20             	rex.WRX xor BYTE PTR [rax],r12b
  20cb43:	00 00                	add    BYTE PTR [rax],al
  20cb45:	00 00                	add    BYTE PTR [rax],al
  20cb47:	00 f8                	add    al,bh
  20cb49:	b8 20 00 00 00       	mov    eax,0x20
  20cb4e:	00 00                	add    BYTE PTR [rax],al
  20cb50:	64 33 20             	xor    esp,DWORD PTR fs:[rax]
  20cb53:	00 00                	add    BYTE PTR [rax],al
  20cb55:	00 00                	add    BYTE PTR [rax],al
  20cb57:	00 20                	add    BYTE PTR [rax],ah
  20cb59:	b9 20 00 00 00       	mov    ecx,0x20
  20cb5e:	00 00                	add    BYTE PTR [rax],al
  20cb60:	b8 34 20 00 00       	mov    eax,0x2034
  20cb65:	00 00                	add    BYTE PTR [rax],al
  20cb67:	00 4b b9             	add    BYTE PTR [rbx-0x47],cl
  20cb6a:	20 00                	and    BYTE PTR [rax],al
  20cb6c:	00 00                	add    BYTE PTR [rax],al
  20cb6e:	00 00                	add    BYTE PTR [rax],al
  20cb70:	dc 35 20 00 00 00    	fdiv   QWORD PTR [rip+0x20]        # 20cb96 <__kernel_symtab+0x336>
  20cb76:	00 00                	add    BYTE PTR [rax],al
  20cb78:	60                   	(bad)  
  20cb79:	b9 20 00 00 00       	mov    ecx,0x20
  20cb7e:	00 00                	add    BYTE PTR [rax],al
  20cb80:	3a 36                	cmp    dh,BYTE PTR [rsi]
  20cb82:	20 00                	and    BYTE PTR [rax],al
  20cb84:	00 00                	add    BYTE PTR [rax],al
  20cb86:	00 00                	add    BYTE PTR [rax],al
  20cb88:	a0 b9 20 00 00 00 00 	movabs al,ds:0x70000000000020b9
  20cb8f:	00 70 
  20cb91:	36 20 00             	and    BYTE PTR ss:[rax],al
  20cb94:	00 00                	add    BYTE PTR [rax],al
  20cb96:	00 00                	add    BYTE PTR [rax],al
  20cb98:	e0 b9                	loopne 20cb53 <__kernel_symtab+0x2f3>
  20cb9a:	20 00                	and    BYTE PTR [rax],al
  20cb9c:	00 00                	add    BYTE PTR [rax],al
  20cb9e:	00 00                	add    BYTE PTR [rax],al
  20cba0:	92                   	xchg   edx,eax
  20cba1:	36 20 00             	and    BYTE PTR ss:[rax],al
  20cba4:	00 00                	add    BYTE PTR [rax],al
  20cba6:	00 00                	add    BYTE PTR [rax],al
  20cba8:	18 ba 20 00 00 00    	sbb    BYTE PTR [rdx+0x20],bh
  20cbae:	00 00                	add    BYTE PTR [rax],al
  20cbb0:	e8 36 20 00 00       	call   20ebeb <sgi_stack+0xb53>
  20cbb5:	00 00                	add    BYTE PTR [rax],al
  20cbb7:	00 50 ba             	add    BYTE PTR [rax-0x46],dl
  20cbba:	20 00                	and    BYTE PTR [rax],al
  20cbbc:	00 00                	add    BYTE PTR [rax],al
  20cbbe:	00 00                	add    BYTE PTR [rax],al
  20cbc0:	66 37                	data16 (bad) 
  20cbc2:	20 00                	and    BYTE PTR [rax],al
  20cbc4:	00 00                	add    BYTE PTR [rax],al
  20cbc6:	00 00                	add    BYTE PTR [rax],al
  20cbc8:	d8 b5 20 00 00 00    	fdiv   DWORD PTR [rbp+0x20]
  20cbce:	00 00                	add    BYTE PTR [rax],al
  20cbd0:	87 37                	xchg   DWORD PTR [rdi],esi
  20cbd2:	20 00                	and    BYTE PTR [rax],al
  20cbd4:	00 00                	add    BYTE PTR [rax],al
  20cbd6:	00 00                	add    BYTE PTR [rax],al
  20cbd8:	82                   	(bad)  
  20cbd9:	ba 20 00 00 00       	mov    edx,0x20
  20cbde:	00 00                	add    BYTE PTR [rax],al
  20cbe0:	98                   	cwde   
  20cbe1:	37                   	(bad)  
  20cbe2:	20 00                	and    BYTE PTR [rax],al
  20cbe4:	00 00                	add    BYTE PTR [rax],al
  20cbe6:	00 00                	add    BYTE PTR [rax],al
  20cbe8:	98                   	cwde   
  20cbe9:	ba 20 00 00 00       	mov    edx,0x20
  20cbee:	00 00                	add    BYTE PTR [rax],al
  20cbf0:	04 38                	add    al,0x38
  20cbf2:	20 00                	and    BYTE PTR [rax],al
  20cbf4:	00 00                	add    BYTE PTR [rax],al
  20cbf6:	00 00                	add    BYTE PTR [rax],al
  20cbf8:	b8 ba 20 00 00       	mov    eax,0x20ba
  20cbfd:	00 00                	add    BYTE PTR [rax],al
  20cbff:	00 70 38             	add    BYTE PTR [rax+0x38],dh
  20cc02:	20 00                	and    BYTE PTR [rax],al
  20cc04:	00 00                	add    BYTE PTR [rax],al
  20cc06:	00 00                	add    BYTE PTR [rax],al
  20cc08:	d7                   	xlat   BYTE PTR ds:[rbx]
  20cc09:	ba 20 00 00 00       	mov    edx,0x20
  20cc0e:	00 00                	add    BYTE PTR [rax],al
  20cc10:	8b 38                	mov    edi,DWORD PTR [rax]
  20cc12:	20 00                	and    BYTE PTR [rax],al
  20cc14:	00 00                	add    BYTE PTR [rax],al
  20cc16:	00 00                	add    BYTE PTR [rax],al
  20cc18:	f4                   	hlt    
  20cc19:	ba 20 00 00 00       	mov    edx,0x20
  20cc1e:	00 00                	add    BYTE PTR [rax],al
  20cc20:	e9 38 20 00 00       	jmp    20ec5d <sgi_stack+0xbc5>
  20cc25:	00 00                	add    BYTE PTR [rax],al
  20cc27:	00 09                	add    BYTE PTR [rcx],cl
  20cc29:	bb 20 00 00 00       	mov    ebx,0x20
  20cc2e:	00 00                	add    BYTE PTR [rax],al
  20cc30:	24 39                	and    al,0x39
  20cc32:	20 00                	and    BYTE PTR [rax],al
  20cc34:	00 00                	add    BYTE PTR [rax],al
  20cc36:	00 00                	add    BYTE PTR [rax],al
  20cc38:	16                   	(bad)  
  20cc39:	bb 20 00 00 00       	mov    ebx,0x20
  20cc3e:	00 00                	add    BYTE PTR [rax],al
  20cc40:	3f                   	(bad)  
  20cc41:	39 20                	cmp    DWORD PTR [rax],esp
  20cc43:	00 00                	add    BYTE PTR [rax],al
  20cc45:	00 00                	add    BYTE PTR [rax],al
  20cc47:	00 24 bb             	add    BYTE PTR [rbx+rdi*4],ah
  20cc4a:	20 00                	and    BYTE PTR [rax],al
  20cc4c:	00 00                	add    BYTE PTR [rax],al
  20cc4e:	00 00                	add    BYTE PTR [rax],al
  20cc50:	62                   	(bad)  
  20cc51:	39 20                	cmp    DWORD PTR [rax],esp
  20cc53:	00 00                	add    BYTE PTR [rax],al
  20cc55:	00 00                	add    BYTE PTR [rax],al
  20cc57:	00 36                	add    BYTE PTR [rsi],dh
  20cc59:	bb 20 00 00 00       	mov    ebx,0x20
  20cc5e:	00 00                	add    BYTE PTR [rax],al
  20cc60:	88 39                	mov    BYTE PTR [rcx],bh
  20cc62:	20 00                	and    BYTE PTR [rax],al
  20cc64:	00 00                	add    BYTE PTR [rax],al
  20cc66:	00 00                	add    BYTE PTR [rax],al
  20cc68:	4a bb 20 00 00 00 00 	rex.WX movabs rbx,0x39dc000000000020
  20cc6f:	00 dc 39 
  20cc72:	20 00                	and    BYTE PTR [rax],al
  20cc74:	00 00                	add    BYTE PTR [rax],al
  20cc76:	00 00                	add    BYTE PTR [rax],al
  20cc78:	60                   	(bad)  
  20cc79:	bb 20 00 00 00       	mov    ebx,0x20
  20cc7e:	00 00                	add    BYTE PTR [rax],al
  20cc80:	79 3a                	jns    20ccbc <__kernel_symtab+0x45c>
  20cc82:	20 00                	and    BYTE PTR [rax],al
  20cc84:	00 00                	add    BYTE PTR [rax],al
  20cc86:	00 00                	add    BYTE PTR [rax],al
  20cc88:	77 bb                	ja     20cc45 <__kernel_symtab+0x3e5>
  20cc8a:	20 00                	and    BYTE PTR [rax],al
  20cc8c:	00 00                	add    BYTE PTR [rax],al
  20cc8e:	00 00                	add    BYTE PTR [rax],al
  20cc90:	f6 3a                	idiv   BYTE PTR [rdx]
  20cc92:	20 00                	and    BYTE PTR [rax],al
  20cc94:	00 00                	add    BYTE PTR [rax],al
  20cc96:	00 00                	add    BYTE PTR [rax],al
  20cc98:	88 bb 20 00 00 00    	mov    BYTE PTR [rbx+0x20],bh
  20cc9e:	00 00                	add    BYTE PTR [rax],al
  20cca0:	3d 3b 20 00 00       	cmp    eax,0x203b
  20cca5:	00 00                	add    BYTE PTR [rax],al
  20cca7:	00 a0 bb 20 00 00    	add    BYTE PTR [rax+0x20bb],ah
  20ccad:	00 00                	add    BYTE PTR [rax],al
  20ccaf:	00 82 3b 20 00 00    	add    BYTE PTR [rdx+0x203b],al
  20ccb5:	00 00                	add    BYTE PTR [rax],al
  20ccb7:	00 b4 bb 20 00 00 00 	add    BYTE PTR [rbx+rdi*4+0x20],dh
  20ccbe:	00 00                	add    BYTE PTR [rax],al
  20ccc0:	dd 3b                	fnstsw WORD PTR [rbx]
  20ccc2:	20 00                	and    BYTE PTR [rax],al
  20ccc4:	00 00                	add    BYTE PTR [rax],al
  20ccc6:	00 00                	add    BYTE PTR [rax],al
  20ccc8:	ca bb 20             	retf   0x20bb
  20cccb:	00 00                	add    BYTE PTR [rax],al
  20cccd:	00 00                	add    BYTE PTR [rax],al
  20cccf:	00 24 3c             	add    BYTE PTR [rsp+rdi*1],ah
  20ccd2:	20 00                	and    BYTE PTR [rax],al
  20ccd4:	00 00                	add    BYTE PTR [rax],al
  20ccd6:	00 00                	add    BYTE PTR [rax],al
  20ccd8:	e0 bb                	loopne 20cc95 <__kernel_symtab+0x435>
  20ccda:	20 00                	and    BYTE PTR [rax],al
  20ccdc:	00 00                	add    BYTE PTR [rax],al
  20ccde:	00 00                	add    BYTE PTR [rax],al
  20cce0:	4e 3c 20             	rex.WRX cmp al,0x20
  20cce3:	00 00                	add    BYTE PTR [rax],al
  20cce5:	00 00                	add    BYTE PTR [rax],al
  20cce7:	00 d8                	add    al,bl
  20cce9:	b5 20                	mov    ch,0x20
  20cceb:	00 00                	add    BYTE PTR [rax],al
  20cced:	00 00                	add    BYTE PTR [rax],al
  20ccef:	00 6f 3c             	add    BYTE PTR [rdi+0x3c],ch
  20ccf2:	20 00                	and    BYTE PTR [rax],al
  20ccf4:	00 00                	add    BYTE PTR [rax],al
  20ccf6:	00 00                	add    BYTE PTR [rax],al
  20ccf8:	f3 bb 20 00 00 00    	repz mov ebx,0x20
  20ccfe:	00 00                	add    BYTE PTR [rax],al
  20cd00:	8d 3c 20             	lea    edi,[rax+riz*1]
  20cd03:	00 00                	add    BYTE PTR [rax],al
  20cd05:	00 00                	add    BYTE PTR [rax],al
  20cd07:	00 01                	add    BYTE PTR [rcx],al
  20cd09:	bc 20 00 00 00       	mov    esp,0x20
  20cd0e:	00 00                	add    BYTE PTR [rax],al
  20cd10:	b0 3c                	mov    al,0x3c
  20cd12:	20 00                	and    BYTE PTR [rax],al
  20cd14:	00 00                	add    BYTE PTR [rax],al
  20cd16:	00 00                	add    BYTE PTR [rax],al
  20cd18:	20 bc 20 00 00 00 00 	and    BYTE PTR [rax+riz*1+0x0],bh
  20cd1f:	00 f7                	add    bh,dh
  20cd21:	3c 20                	cmp    al,0x20
  20cd23:	00 00                	add    BYTE PTR [rax],al
  20cd25:	00 00                	add    BYTE PTR [rax],al
  20cd27:	00 48 bc             	add    BYTE PTR [rax-0x44],cl
  20cd2a:	20 00                	and    BYTE PTR [rax],al
  20cd2c:	00 00                	add    BYTE PTR [rax],al
  20cd2e:	00 00                	add    BYTE PTR [rax],al
  20cd30:	22 3d 20 00 00 00    	and    bh,BYTE PTR [rip+0x20]        # 20cd56 <__kernel_symtab+0x4f6>
  20cd36:	00 00                	add    BYTE PTR [rax],al
  20cd38:	6a bc                	push   0xffffffffffffffbc
  20cd3a:	20 00                	and    BYTE PTR [rax],al
  20cd3c:	00 00                	add    BYTE PTR [rax],al
  20cd3e:	00 00                	add    BYTE PTR [rax],al
  20cd40:	4c 3d 20 00 00 00    	rex.WR cmp rax,0x20
  20cd46:	00 00                	add    BYTE PTR [rax],al
  20cd48:	85 bc 20 00 00 00 00 	test   DWORD PTR [rax+riz*1+0x0],edi
  20cd4f:	00 81 3d 20 00 00    	add    BYTE PTR [rcx+0x203d],al
  20cd55:	00 00                	add    BYTE PTR [rax],al
  20cd57:	00 d8                	add    al,bl
  20cd59:	b5 20                	mov    ch,0x20
  20cd5b:	00 00                	add    BYTE PTR [rax],al
  20cd5d:	00 00                	add    BYTE PTR [rax],al
  20cd5f:	00 a2 3d 20 00 00    	add    BYTE PTR [rdx+0x203d],ah
  20cd65:	00 00                	add    BYTE PTR [rax],al
  20cd67:	00 f3                	add    bl,dh
  20cd69:	bb 20 00 00 00       	mov    ebx,0x20
  20cd6e:	00 00                	add    BYTE PTR [rax],al
  20cd70:	c0 3d 20 00 00 00 00 	sar    BYTE PTR [rip+0x20],0x0        # 20cd97 <__kernel_symtab+0x537>
  20cd77:	00 a1 bc 20 00 00    	add    BYTE PTR [rcx+0x20bc],ah
  20cd7d:	00 00                	add    BYTE PTR [rax],al
  20cd7f:	00 ce                	add    dh,cl
  20cd81:	3d 20 00 00 00       	cmp    eax,0x20
  20cd86:	00 00                	add    BYTE PTR [rax],al
  20cd88:	b3 bc                	mov    bl,0xbc
  20cd8a:	20 00                	and    BYTE PTR [rax],al
  20cd8c:	00 00                	add    BYTE PTR [rax],al
  20cd8e:	00 00                	add    BYTE PTR [rax],al
  20cd90:	02 3e                	add    bh,BYTE PTR [rsi]
  20cd92:	20 00                	and    BYTE PTR [rax],al
  20cd94:	00 00                	add    BYTE PTR [rax],al
  20cd96:	00 00                	add    BYTE PTR [rax],al
  20cd98:	c0 bc 20 00 00 00 00 	sar    BYTE PTR [rax+riz*1+0x0],0x0
  20cd9f:	00 
  20cda0:	f3 3e 20 00          	repz and BYTE PTR ds:[rax],al
  20cda4:	00 00                	add    BYTE PTR [rax],al
  20cda6:	00 00                	add    BYTE PTR [rax],al
  20cda8:	ca bc 20             	retf   0x20bc
  20cdab:	00 00                	add    BYTE PTR [rax],al
  20cdad:	00 00                	add    BYTE PTR [rax],al
  20cdaf:	00 4d 3f             	add    BYTE PTR [rbp+0x3f],cl
  20cdb2:	20 00                	and    BYTE PTR [rax],al
  20cdb4:	00 00                	add    BYTE PTR [rax],al
  20cdb6:	00 00                	add    BYTE PTR [rax],al
  20cdb8:	d3 bc 20 00 00 00 00 	sar    DWORD PTR [rax+riz*1+0x0],cl
  20cdbf:	00 a9 3f 20 00 00    	add    BYTE PTR [rcx+0x203f],ch
  20cdc5:	00 00                	add    BYTE PTR [rax],al
  20cdc7:	00 de                	add    dh,bl
  20cdc9:	bc 20 00 00 00       	mov    esp,0x20
  20cdce:	00 00                	add    BYTE PTR [rax],al
  20cdd0:	bf 3f 20 00 00       	mov    edi,0x203f
  20cdd5:	00 00                	add    BYTE PTR [rax],al
  20cdd7:	00 ec                	add    ah,ch
  20cdd9:	bc 20 00 00 00       	mov    esp,0x20
  20cdde:	00 00                	add    BYTE PTR [rax],al
  20cde0:	69 40 20 00 00 00 00 	imul   eax,DWORD PTR [rax+0x20],0x0
  20cde7:	00 05 bd 20 00 00    	add    BYTE PTR [rip+0x20bd],al        # 20eeaa <sgi_stack+0xe12>
  20cded:	00 00                	add    BYTE PTR [rax],al
  20cdef:	00 fd                	add    ch,bh
  20cdf1:	40 20 00             	and    BYTE PTR [rax],al
  20cdf4:	00 00                	add    BYTE PTR [rax],al
  20cdf6:	00 00                	add    BYTE PTR [rax],al
  20cdf8:	1c bd                	sbb    al,0xbd
  20cdfa:	20 00                	and    BYTE PTR [rax],al
  20cdfc:	00 00                	add    BYTE PTR [rax],al
  20cdfe:	00 00                	add    BYTE PTR [rax],al
  20ce00:	91                   	xchg   ecx,eax
  20ce01:	41 20 00             	and    BYTE PTR [r8],al
  20ce04:	00 00                	add    BYTE PTR [rax],al
  20ce06:	00 00                	add    BYTE PTR [rax],al
  20ce08:	30 bd 20 00 00 00    	xor    BYTE PTR [rbp+0x20],bh
  20ce0e:	00 00                	add    BYTE PTR [rax],al
  20ce10:	23 42 20             	and    eax,DWORD PTR [rdx+0x20]
  20ce13:	00 00                	add    BYTE PTR [rax],al
  20ce15:	00 00                	add    BYTE PTR [rax],al
  20ce17:	00 4c bd 20          	add    BYTE PTR [rbp+rdi*4+0x20],cl
  20ce1b:	00 00                	add    BYTE PTR [rax],al
  20ce1d:	00 00                	add    BYTE PTR [rax],al
  20ce1f:	00 31                	add    BYTE PTR [rcx],dh
  20ce21:	42 20 00             	rex.X and BYTE PTR [rax],al
  20ce24:	00 00                	add    BYTE PTR [rax],al
  20ce26:	00 00                	add    BYTE PTR [rax],al
  20ce28:	55                   	push   rbp
  20ce29:	bd 20 00 00 00       	mov    ebp,0x20
  20ce2e:	00 00                	add    BYTE PTR [rax],al
  20ce30:	3d 42 20 00 00       	cmp    eax,0x2042
  20ce35:	00 00                	add    BYTE PTR [rax],al
  20ce37:	00 62 bd             	add    BYTE PTR [rdx-0x43],ah
  20ce3a:	20 00                	and    BYTE PTR [rax],al
  20ce3c:	00 00                	add    BYTE PTR [rax],al
  20ce3e:	00 00                	add    BYTE PTR [rax],al
  20ce40:	49                   	rex.WB
  20ce41:	42 20 00             	rex.X and BYTE PTR [rax],al
  20ce44:	00 00                	add    BYTE PTR [rax],al
  20ce46:	00 00                	add    BYTE PTR [rax],al
  20ce48:	d8 b5 20 00 00 00    	fdiv   DWORD PTR [rbp+0x20]
  20ce4e:	00 00                	add    BYTE PTR [rax],al
  20ce50:	6a 42                	push   0x42
  20ce52:	20 00                	and    BYTE PTR [rax],al
  20ce54:	00 00                	add    BYTE PTR [rax],al
  20ce56:	00 00                	add    BYTE PTR [rax],al
  20ce58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  20ce59:	bd 20 00 00 00       	mov    ebp,0x20
  20ce5e:	00 00                	add    BYTE PTR [rax],al
  20ce60:	8a 42 20             	mov    al,BYTE PTR [rdx+0x20]
  20ce63:	00 00                	add    BYTE PTR [rax],al
  20ce65:	00 00                	add    BYTE PTR [rax],al
  20ce67:	00 8d bd 20 00 00    	add    BYTE PTR [rbp+0x20bd],cl
  20ce6d:	00 00                	add    BYTE PTR [rax],al
  20ce6f:	00 47 43             	add    BYTE PTR [rdi+0x43],al
  20ce72:	20 00                	and    BYTE PTR [rax],al
  20ce74:	00 00                	add    BYTE PTR [rax],al
  20ce76:	00 00                	add    BYTE PTR [rax],al
  20ce78:	a8 bd                	test   al,0xbd
  20ce7a:	20 00                	and    BYTE PTR [rax],al
  20ce7c:	00 00                	add    BYTE PTR [rax],al
  20ce7e:	00 00                	add    BYTE PTR [rax],al
  20ce80:	91                   	xchg   ecx,eax
  20ce81:	43 20 00             	rex.XB and BYTE PTR [r8],al
  20ce84:	00 00                	add    BYTE PTR [rax],al
  20ce86:	00 00                	add    BYTE PTR [rax],al
  20ce88:	e0 bd                	loopne 20ce47 <__kernel_symtab+0x5e7>
  20ce8a:	20 00                	and    BYTE PTR [rax],al
  20ce8c:	00 00                	add    BYTE PTR [rax],al
  20ce8e:	00 00                	add    BYTE PTR [rax],al
  20ce90:	db 43 20             	fild   DWORD PTR [rbx+0x20]
  20ce93:	00 00                	add    BYTE PTR [rax],al
  20ce95:	00 00                	add    BYTE PTR [rax],al
  20ce97:	00 1d be 20 00 00    	add    BYTE PTR [rip+0x20be],bl        # 20ef5b <sgi_stack+0xec3>
  20ce9d:	00 00                	add    BYTE PTR [rax],al
  20ce9f:	00 fc                	add    ah,bh
  20cea1:	43 20 00             	rex.XB and BYTE PTR [r8],al
  20cea4:	00 00                	add    BYTE PTR [rax],al
  20cea6:	00 00                	add    BYTE PTR [rax],al
  20cea8:	36 be 20 00 00 00    	ss mov esi,0x20
  20ceae:	00 00                	add    BYTE PTR [rax],al
  20ceb0:	22 44 20 00          	and    al,BYTE PTR [rax+riz*1+0x0]
  20ceb4:	00 00                	add    BYTE PTR [rax],al
  20ceb6:	00 00                	add    BYTE PTR [rax],al
  20ceb8:	4b be 20 00 00 00 00 	rex.WXB movabs r14,0x4582000000000020
  20cebf:	00 82 45 
  20cec2:	20 00                	and    BYTE PTR [rax],al
  20cec4:	00 00                	add    BYTE PTR [rax],al
  20cec6:	00 00                	add    BYTE PTR [rax],al
  20cec8:	64 be 20 00 00 00    	fs mov esi,0x20
  20cece:	00 00                	add    BYTE PTR [rax],al
  20ced0:	ef                   	out    dx,eax
  20ced1:	45 20 00             	and    BYTE PTR [r8],r8b
  20ced4:	00 00                	add    BYTE PTR [rax],al
  20ced6:	00 00                	add    BYTE PTR [rax],al
  20ced8:	77 be                	ja     20ce98 <__kernel_symtab+0x638>
  20ceda:	20 00                	and    BYTE PTR [rax],al
  20cedc:	00 00                	add    BYTE PTR [rax],al
  20cede:	00 00                	add    BYTE PTR [rax],al
  20cee0:	82                   	(bad)  
  20cee1:	46 20 00             	rex.RX and BYTE PTR [rax],r8b
  20cee4:	00 00                	add    BYTE PTR [rax],al
  20cee6:	00 00                	add    BYTE PTR [rax],al
  20cee8:	98                   	cwde   
  20cee9:	be 20 00 00 00       	mov    esi,0x20
  20ceee:	00 00                	add    BYTE PTR [rax],al
  20cef0:	5c                   	pop    rsp
  20cef1:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
  20cef4:	00 00                	add    BYTE PTR [rax],al
  20cef6:	00 00                	add    BYTE PTR [rax],al
  20cef8:	c0 be 20 00 00 00 00 	sar    BYTE PTR [rsi+0x20],0x0
  20ceff:	00 fd                	add    ch,bh
  20cf01:	48 20 00             	rex.W and BYTE PTR [rax],al
  20cf04:	00 00                	add    BYTE PTR [rax],al
  20cf06:	00 00                	add    BYTE PTR [rax],al
  20cf08:	e0 be                	loopne 20cec8 <__kernel_symtab+0x668>
  20cf0a:	20 00                	and    BYTE PTR [rax],al
  20cf0c:	00 00                	add    BYTE PTR [rax],al
  20cf0e:	00 00                	add    BYTE PTR [rax],al
  20cf10:	9e                   	sahf   
  20cf11:	4a 20 00             	rex.WX and BYTE PTR [rax],al
  20cf14:	00 00                	add    BYTE PTR [rax],al
  20cf16:	00 00                	add    BYTE PTR [rax],al
  20cf18:	06                   	(bad)  
  20cf19:	bf 20 00 00 00       	mov    edi,0x20
  20cf1e:	00 00                	add    BYTE PTR [rax],al
  20cf20:	00 4b 20             	add    BYTE PTR [rbx+0x20],cl
  20cf23:	00 00                	add    BYTE PTR [rax],al
  20cf25:	00 00                	add    BYTE PTR [rax],al
  20cf27:	00 22                	add    BYTE PTR [rdx],ah
  20cf29:	bf 20 00 00 00       	mov    edi,0x20
  20cf2e:	00 00                	add    BYTE PTR [rax],al
  20cf30:	d6                   	(bad)  
  20cf31:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
  20cf34:	00 00                	add    BYTE PTR [rax],al
  20cf36:	00 00                	add    BYTE PTR [rax],al
  20cf38:	35 bf 20 00 00       	xor    eax,0x20bf
  20cf3d:	00 00                	add    BYTE PTR [rax],al
  20cf3f:	00 61 4d             	add    BYTE PTR [rcx+0x4d],ah
  20cf42:	20 00                	and    BYTE PTR [rax],al
  20cf44:	00 00                	add    BYTE PTR [rax],al
  20cf46:	00 00                	add    BYTE PTR [rax],al
  20cf48:	4c bf 20 00 00 00 00 	rex.WR movabs rdi,0x500b000000000020
  20cf4f:	00 0b 50 
  20cf52:	20 00                	and    BYTE PTR [rax],al
  20cf54:	00 00                	add    BYTE PTR [rax],al
  20cf56:	00 00                	add    BYTE PTR [rax],al
  20cf58:	61                   	(bad)  
  20cf59:	bf 20 00 00 00       	mov    edi,0x20
  20cf5e:	00 00                	add    BYTE PTR [rax],al
  20cf60:	34 50                	xor    al,0x50
  20cf62:	20 00                	and    BYTE PTR [rax],al
  20cf64:	00 00                	add    BYTE PTR [rax],al
  20cf66:	00 00                	add    BYTE PTR [rax],al
  20cf68:	7b bf                	jnp    20cf29 <__kernel_symtab+0x6c9>
  20cf6a:	20 00                	and    BYTE PTR [rax],al
  20cf6c:	00 00                	add    BYTE PTR [rax],al
  20cf6e:	00 00                	add    BYTE PTR [rax],al
  20cf70:	5b                   	pop    rbx
  20cf71:	50                   	push   rax
  20cf72:	20 00                	and    BYTE PTR [rax],al
  20cf74:	00 00                	add    BYTE PTR [rax],al
  20cf76:	00 00                	add    BYTE PTR [rax],al
  20cf78:	98                   	cwde   
  20cf79:	bf 20 00 00 00       	mov    edi,0x20
  20cf7e:	00 00                	add    BYTE PTR [rax],al
  20cf80:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
  20cf83:	00 00                	add    BYTE PTR [rax],al
  20cf85:	00 00                	add    BYTE PTR [rax],al
  20cf87:	00 d1                	add    cl,dl
  20cf89:	bf 20 00 00 00       	mov    edi,0x20
  20cf8e:	00 00                	add    BYTE PTR [rax],al
  20cf90:	b2 50                	mov    dl,0x50
  20cf92:	20 00                	and    BYTE PTR [rax],al
  20cf94:	00 00                	add    BYTE PTR [rax],al
  20cf96:	00 00                	add    BYTE PTR [rax],al
  20cf98:	d6                   	(bad)  
  20cf99:	bf 20 00 00 00       	mov    edi,0x20
  20cf9e:	00 00                	add    BYTE PTR [rax],al
  20cfa0:	e9 54 20 00 00       	jmp    20eff9 <sgi_stack+0xf61>
  20cfa5:	00 00                	add    BYTE PTR [rax],al
  20cfa7:	00 ec                	add    ah,ch
  20cfa9:	bf 20 00 00 00       	mov    edi,0x20
  20cfae:	00 00                	add    BYTE PTR [rax],al
  20cfb0:	1c 55                	sbb    al,0x55
  20cfb2:	20 00                	and    BYTE PTR [rax],al
  20cfb4:	00 00                	add    BYTE PTR [rax],al
  20cfb6:	00 00                	add    BYTE PTR [rax],al
  20cfb8:	04 c0                	add    al,0xc0
  20cfba:	20 00                	and    BYTE PTR [rax],al
  20cfbc:	00 00                	add    BYTE PTR [rax],al
  20cfbe:	00 00                	add    BYTE PTR [rax],al
  20cfc0:	71 55                	jno    20d017 <__kernel_symtab+0x7b7>
  20cfc2:	20 00                	and    BYTE PTR [rax],al
  20cfc4:	00 00                	add    BYTE PTR [rax],al
  20cfc6:	00 00                	add    BYTE PTR [rax],al
  20cfc8:	1a c0                	sbb    al,al
  20cfca:	20 00                	and    BYTE PTR [rax],al
  20cfcc:	00 00                	add    BYTE PTR [rax],al
  20cfce:	00 00                	add    BYTE PTR [rax],al
  20cfd0:	7b 6f                	jnp    20d041 <__kernel_symtab+0x7e1>
  20cfd2:	20 00                	and    BYTE PTR [rax],al
  20cfd4:	00 00                	add    BYTE PTR [rax],al
  20cfd6:	00 00                	add    BYTE PTR [rax],al
  20cfd8:	38 c0                	cmp    al,al
  20cfda:	20 00                	and    BYTE PTR [rax],al
  20cfdc:	00 00                	add    BYTE PTR [rax],al
  20cfde:	00 00                	add    BYTE PTR [rax],al
  20cfe0:	28 70 20             	sub    BYTE PTR [rax+0x20],dh
  20cfe3:	00 00                	add    BYTE PTR [rax],al
  20cfe5:	00 00                	add    BYTE PTR [rax],al
  20cfe7:	00 a8 bd 20 00 00    	add    BYTE PTR [rax+0x20bd],ch
  20cfed:	00 00                	add    BYTE PTR [rax],al
  20cfef:	00 6b 70             	add    BYTE PTR [rbx+0x70],ch
  20cff2:	20 00                	and    BYTE PTR [rax],al
  20cff4:	00 00                	add    BYTE PTR [rax],al
  20cff6:	00 00                	add    BYTE PTR [rax],al
  20cff8:	3f                   	(bad)  
  20cff9:	c0 20 00             	shl    BYTE PTR [rax],0x0
  20cffc:	00 00                	add    BYTE PTR [rax],al
  20cffe:	00 00                	add    BYTE PTR [rax],al
  20d000:	8b 70 20             	mov    esi,DWORD PTR [rax+0x20]
  20d003:	00 00                	add    BYTE PTR [rax],al
  20d005:	00 00                	add    BYTE PTR [rax],al
  20d007:	00 55 c0             	add    BYTE PTR [rbp-0x40],dl
  20d00a:	20 00                	and    BYTE PTR [rax],al
  20d00c:	00 00                	add    BYTE PTR [rax],al
  20d00e:	00 00                	add    BYTE PTR [rax],al
  20d010:	ab                   	stos   DWORD PTR es:[rdi],eax
  20d011:	70 20                	jo     20d033 <__kernel_symtab+0x7d3>
  20d013:	00 00                	add    BYTE PTR [rax],al
  20d015:	00 00                	add    BYTE PTR [rax],al
  20d017:	00 70 c0             	add    BYTE PTR [rax-0x40],dh
  20d01a:	20 00                	and    BYTE PTR [rax],al
  20d01c:	00 00                	add    BYTE PTR [rax],al
  20d01e:	00 00                	add    BYTE PTR [rax],al
  20d020:	c6                   	(bad)  
  20d021:	71 20                	jno    20d043 <__kernel_symtab+0x7e3>
  20d023:	00 00                	add    BYTE PTR [rax],al
  20d025:	00 00                	add    BYTE PTR [rax],al
  20d027:	00 ab c0 20 00 00    	add    BYTE PTR [rbx+0x20c0],ch
  20d02d:	00 00                	add    BYTE PTR [rax],al
  20d02f:	00 03                	add    BYTE PTR [rbx],al
  20d031:	72 20                	jb     20d053 <__kernel_symtab+0x7f3>
  20d033:	00 00                	add    BYTE PTR [rax],al
  20d035:	00 00                	add    BYTE PTR [rax],al
  20d037:	00 c1                	add    cl,al
  20d039:	c0 20 00             	shl    BYTE PTR [rax],0x0
  20d03c:	00 00                	add    BYTE PTR [rax],al
  20d03e:	00 00                	add    BYTE PTR [rax],al
  20d040:	43 72 20             	rex.XB jb 20d063 <__kernel_symtab+0x803>
  20d043:	00 00                	add    BYTE PTR [rax],al
  20d045:	00 00                	add    BYTE PTR [rax],al
  20d047:	00 e0                	add    al,ah
  20d049:	c0 20 00             	shl    BYTE PTR [rax],0x0
  20d04c:	00 00                	add    BYTE PTR [rax],al
  20d04e:	00 00                	add    BYTE PTR [rax],al
  20d050:	80 72 20 00          	xor    BYTE PTR [rdx+0x20],0x0
  20d054:	00 00                	add    BYTE PTR [rax],al
  20d056:	00 00                	add    BYTE PTR [rax],al
  20d058:	08 c1                	or     cl,al
  20d05a:	20 00                	and    BYTE PTR [rax],al
  20d05c:	00 00                	add    BYTE PTR [rax],al
  20d05e:	00 00                	add    BYTE PTR [rax],al
  20d060:	b1 72                	mov    cl,0x72
  20d062:	20 00                	and    BYTE PTR [rax],al
  20d064:	00 00                	add    BYTE PTR [rax],al
  20d066:	00 00                	add    BYTE PTR [rax],al
  20d068:	40 c1 20 00          	rex shl DWORD PTR [rax],0x0
  20d06c:	00 00                	add    BYTE PTR [rax],al
  20d06e:	00 00                	add    BYTE PTR [rax],al
  20d070:	d9 72 20             	fnstenv [rdx+0x20]
  20d073:	00 00                	add    BYTE PTR [rax],al
  20d075:	00 00                	add    BYTE PTR [rax],al
  20d077:	00 68 c1             	add    BYTE PTR [rax-0x3f],ch
  20d07a:	20 00                	and    BYTE PTR [rax],al
  20d07c:	00 00                	add    BYTE PTR [rax],al
  20d07e:	00 00                	add    BYTE PTR [rax],al
  20d080:	24 73                	and    al,0x73
  20d082:	20 00                	and    BYTE PTR [rax],al
  20d084:	00 00                	add    BYTE PTR [rax],al
  20d086:	00 00                	add    BYTE PTR [rax],al
  20d088:	98                   	cwde   
  20d089:	c1 20 00             	shl    DWORD PTR [rax],0x0
  20d08c:	00 00                	add    BYTE PTR [rax],al
  20d08e:	00 00                	add    BYTE PTR [rax],al
  20d090:	9a                   	(bad)  
  20d091:	73 20                	jae    20d0b3 <__kernel_symtab+0x853>
  20d093:	00 00                	add    BYTE PTR [rax],al
  20d095:	00 00                	add    BYTE PTR [rax],al
  20d097:	00 d0                	add    al,dl
  20d099:	c1 20 00             	shl    DWORD PTR [rax],0x0
  20d09c:	00 00                	add    BYTE PTR [rax],al
  20d09e:	00 00                	add    BYTE PTR [rax],al
  20d0a0:	35 74 20 00 00       	xor    eax,0x2074
  20d0a5:	00 00                	add    BYTE PTR [rax],al
  20d0a7:	00 00                	add    BYTE PTR [rax],al
  20d0a9:	c2 20 00             	ret    0x20
  20d0ac:	00 00                	add    BYTE PTR [rax],al
  20d0ae:	00 00                	add    BYTE PTR [rax],al
  20d0b0:	4e 75 20             	rex.WRX jne 20d0d3 <__kernel_symtab+0x873>
  20d0b3:	00 00                	add    BYTE PTR [rax],al
  20d0b5:	00 00                	add    BYTE PTR [rax],al
  20d0b7:	00 20                	add    BYTE PTR [rax],ah
  20d0b9:	c2 20 00             	ret    0x20
  20d0bc:	00 00                	add    BYTE PTR [rax],al
  20d0be:	00 00                	add    BYTE PTR [rax],al
  20d0c0:	cf                   	iret   
  20d0c1:	76 20                	jbe    20d0e3 <__kernel_symtab+0x883>
  20d0c3:	00 00                	add    BYTE PTR [rax],al
  20d0c5:	00 00                	add    BYTE PTR [rax],al
  20d0c7:	00 48 c2             	add    BYTE PTR [rax-0x3e],cl
  20d0ca:	20 00                	and    BYTE PTR [rax],al
  20d0cc:	00 00                	add    BYTE PTR [rax],al
  20d0ce:	00 00                	add    BYTE PTR [rax],al
  20d0d0:	3c 77                	cmp    al,0x77
  20d0d2:	20 00                	and    BYTE PTR [rax],al
  20d0d4:	00 00                	add    BYTE PTR [rax],al
  20d0d6:	00 00                	add    BYTE PTR [rax],al
  20d0d8:	70 c2                	jo     20d09c <__kernel_symtab+0x83c>
  20d0da:	20 00                	and    BYTE PTR [rax],al
  20d0dc:	00 00                	add    BYTE PTR [rax],al
  20d0de:	00 00                	add    BYTE PTR [rax],al
  20d0e0:	c0 77 20 00          	shl    BYTE PTR [rdi+0x20],0x0
  20d0e4:	00 00                	add    BYTE PTR [rax],al
  20d0e6:	00 00                	add    BYTE PTR [rax],al
  20d0e8:	98                   	cwde   
  20d0e9:	c2 20 00             	ret    0x20
  20d0ec:	00 00                	add    BYTE PTR [rax],al
  20d0ee:	00 00                	add    BYTE PTR [rax],al
  20d0f0:	9d                   	popf   
  20d0f1:	7a 20                	jp     20d113 <__kernel_symtab+0x8b3>
  20d0f3:	00 00                	add    BYTE PTR [rax],al
  20d0f5:	00 00                	add    BYTE PTR [rax],al
  20d0f7:	00 c0                	add    al,al
  20d0f9:	c2 20 00             	ret    0x20
  20d0fc:	00 00                	add    BYTE PTR [rax],al
  20d0fe:	00 00                	add    BYTE PTR [rax],al
  20d100:	7a 7d                	jp     20d17f <__kernel_symtab+0x91f>
  20d102:	20 00                	and    BYTE PTR [rax],al
  20d104:	00 00                	add    BYTE PTR [rax],al
  20d106:	00 00                	add    BYTE PTR [rax],al
  20d108:	f3 bb 20 00 00 00    	repz mov ebx,0x20
  20d10e:	00 00                	add    BYTE PTR [rax],al
  20d110:	98                   	cwde   
  20d111:	7d 20                	jge    20d133 <__kernel_symtab+0x8d3>
  20d113:	00 00                	add    BYTE PTR [rax],al
  20d115:	00 00                	add    BYTE PTR [rax],al
  20d117:	00 e8                	add    al,ch
  20d119:	c2 20 00             	ret    0x20
  20d11c:	00 00                	add    BYTE PTR [rax],al
  20d11e:	00 00                	add    BYTE PTR [rax],al
  20d120:	df 7d 20             	fistp  QWORD PTR [rbp+0x20]
  20d123:	00 00                	add    BYTE PTR [rax],al
  20d125:	00 00                	add    BYTE PTR [rax],al
  20d127:	00 30                	add    BYTE PTR [rax],dh
  20d129:	c3                   	ret    
  20d12a:	20 00                	and    BYTE PTR [rax],al
  20d12c:	00 00                	add    BYTE PTR [rax],al
  20d12e:	00 00                	add    BYTE PTR [rax],al
  20d130:	1c 7e                	sbb    al,0x7e
  20d132:	20 00                	and    BYTE PTR [rax],al
  20d134:	00 00                	add    BYTE PTR [rax],al
  20d136:	00 00                	add    BYTE PTR [rax],al
  20d138:	78 c3                	js     20d0fd <__kernel_symtab+0x89d>
  20d13a:	20 00                	and    BYTE PTR [rax],al
  20d13c:	00 00                	add    BYTE PTR [rax],al
  20d13e:	00 00                	add    BYTE PTR [rax],al
  20d140:	e1 7e                	loope  20d1c0 <__kernel_symtab+0x960>
  20d142:	20 00                	and    BYTE PTR [rax],al
  20d144:	00 00                	add    BYTE PTR [rax],al
  20d146:	00 00                	add    BYTE PTR [rax],al
  20d148:	bf c3 20 00 00       	mov    edi,0x20c3
  20d14d:	00 00                	add    BYTE PTR [rax],al
  20d14f:	00 19                	add    BYTE PTR [rcx],bl
  20d151:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
  20d157:	00 cf                	add    bh,cl
  20d159:	c3                   	ret    
  20d15a:	20 00                	and    BYTE PTR [rax],al
  20d15c:	00 00                	add    BYTE PTR [rax],al
  20d15e:	00 00                	add    BYTE PTR [rax],al
  20d160:	54                   	push   rsp
  20d161:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
  20d167:	00 d8                	add    al,bl
  20d169:	b5 20                	mov    ch,0x20
  20d16b:	00 00                	add    BYTE PTR [rax],al
  20d16d:	00 00                	add    BYTE PTR [rax],al
  20d16f:	00 75 81             	add    BYTE PTR [rbp-0x7f],dh
  20d172:	20 00                	and    BYTE PTR [rax],al
  20d174:	00 00                	add    BYTE PTR [rax],al
  20d176:	00 00                	add    BYTE PTR [rax],al
  20d178:	f3 bb 20 00 00 00    	repz mov ebx,0x20
  20d17e:	00 00                	add    BYTE PTR [rax],al
  20d180:	93                   	xchg   ebx,eax
  20d181:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
  20d187:	00 6f bd             	add    BYTE PTR [rdi-0x43],ch
  20d18a:	20 00                	and    BYTE PTR [rax],al
  20d18c:	00 00                	add    BYTE PTR [rax],al
  20d18e:	00 00                	add    BYTE PTR [rax],al
  20d190:	b3 81                	mov    bl,0x81
  20d192:	20 00                	and    BYTE PTR [rax],al
  20d194:	00 00                	add    BYTE PTR [rax],al
  20d196:	00 00                	add    BYTE PTR [rax],al
  20d198:	e6 c3                	out    0xc3,al
  20d19a:	20 00                	and    BYTE PTR [rax],al
  20d19c:	00 00                	add    BYTE PTR [rax],al
  20d19e:	00 00                	add    BYTE PTR [rax],al
  20d1a0:	dd 81 20 00 00 00    	fld    QWORD PTR [rcx+0x20]
  20d1a6:	00 00                	add    BYTE PTR [rax],al
  20d1a8:	f8                   	clc    
  20d1a9:	c3                   	ret    
  20d1aa:	20 00                	and    BYTE PTR [rax],al
  20d1ac:	00 00                	add    BYTE PTR [rax],al
  20d1ae:	00 00                	add    BYTE PTR [rax],al
  20d1b0:	2a 82 20 00 00 00    	sub    al,BYTE PTR [rdx+0x20]
  20d1b6:	00 00                	add    BYTE PTR [rax],al
  20d1b8:	03 c4                	add    eax,esp
  20d1ba:	20 00                	and    BYTE PTR [rax],al
  20d1bc:	00 00                	add    BYTE PTR [rax],al
  20d1be:	00 00                	add    BYTE PTR [rax],al
  20d1c0:	3d 82 20 00 00       	cmp    eax,0x2082
  20d1c5:	00 00                	add    BYTE PTR [rax],al
  20d1c7:	00 0e                	add    BYTE PTR [rsi],cl
  20d1c9:	c4                   	(bad)  
  20d1ca:	20 00                	and    BYTE PTR [rax],al
  20d1cc:	00 00                	add    BYTE PTR [rax],al
  20d1ce:	00 00                	add    BYTE PTR [rax],al
  20d1d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20d1d1:	82                   	(bad)  
  20d1d2:	20 00                	and    BYTE PTR [rax],al
  20d1d4:	00 00                	add    BYTE PTR [rax],al
  20d1d6:	00 00                	add    BYTE PTR [rax],al
  20d1d8:	20 c4                	and    ah,al
  20d1da:	20 00                	and    BYTE PTR [rax],al
  20d1dc:	00 00                	add    BYTE PTR [rax],al
  20d1de:	00 00                	add    BYTE PTR [rax],al
  20d1e0:	98                   	cwde   
  20d1e1:	82                   	(bad)  
  20d1e2:	20 00                	and    BYTE PTR [rax],al
  20d1e4:	00 00                	add    BYTE PTR [rax],al
  20d1e6:	00 00                	add    BYTE PTR [rax],al
  20d1e8:	40 c4                	rex (bad) 
  20d1ea:	20 00                	and    BYTE PTR [rax],al
  20d1ec:	00 00                	add    BYTE PTR [rax],al
  20d1ee:	00 00                	add    BYTE PTR [rax],al
  20d1f0:	60                   	(bad)  
  20d1f1:	83 20 00             	and    DWORD PTR [rax],0x0
  20d1f4:	00 00                	add    BYTE PTR [rax],al
  20d1f6:	00 00                	add    BYTE PTR [rax],al
  20d1f8:	68 c4 20 00 00       	push   0x20c4
  20d1fd:	00 00                	add    BYTE PTR [rax],al
  20d1ff:	00 a0 83 20 00 00    	add    BYTE PTR [rax+0x2083],ah
  20d205:	00 00                	add    BYTE PTR [rax],al
  20d207:	00 71 c4             	add    BYTE PTR [rcx-0x3c],dh
  20d20a:	20 00                	and    BYTE PTR [rax],al
  20d20c:	00 00                	add    BYTE PTR [rax],al
  20d20e:	00 00                	add    BYTE PTR [rax],al
  20d210:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  20d211:	83 20 00             	and    DWORD PTR [rax],0x0
  20d214:	00 00                	add    BYTE PTR [rax],al
  20d216:	00 00                	add    BYTE PTR [rax],al
  20d218:	76 c4                	jbe    20d1de <__kernel_symtab+0x97e>
  20d21a:	20 00                	and    BYTE PTR [rax],al
  20d21c:	00 00                	add    BYTE PTR [rax],al
  20d21e:	00 00                	add    BYTE PTR [rax],al
  20d220:	b2 83                	mov    dl,0x83
  20d222:	20 00                	and    BYTE PTR [rax],al
  20d224:	00 00                	add    BYTE PTR [rax],al
  20d226:	00 00                	add    BYTE PTR [rax],al
  20d228:	7b c4                	jnp    20d1ee <__kernel_symtab+0x98e>
  20d22a:	20 00                	and    BYTE PTR [rax],al
  20d22c:	00 00                	add    BYTE PTR [rax],al
  20d22e:	00 00                	add    BYTE PTR [rax],al
  20d230:	b4 83                	mov    ah,0x83
  20d232:	20 00                	and    BYTE PTR [rax],al
  20d234:	00 00                	add    BYTE PTR [rax],al
  20d236:	00 00                	add    BYTE PTR [rax],al
  20d238:	80 c4 20             	add    ah,0x20
  20d23b:	00 00                	add    BYTE PTR [rax],al
  20d23d:	00 00                	add    BYTE PTR [rax],al
  20d23f:	00 c2                	add    dl,al
  20d241:	83 20 00             	and    DWORD PTR [rax],0x0
  20d244:	00 00                	add    BYTE PTR [rax],al
  20d246:	00 00                	add    BYTE PTR [rax],al
  20d248:	85 c4                	test   esp,eax
  20d24a:	20 00                	and    BYTE PTR [rax],al
  20d24c:	00 00                	add    BYTE PTR [rax],al
  20d24e:	00 00                	add    BYTE PTR [rax],al
  20d250:	d0 83 20 00 00 00    	rol    BYTE PTR [rbx+0x20],1
  20d256:	00 00                	add    BYTE PTR [rax],al
  20d258:	8a c4                	mov    al,ah
  20d25a:	20 00                	and    BYTE PTR [rax],al
  20d25c:	00 00                	add    BYTE PTR [rax],al
  20d25e:	00 00                	add    BYTE PTR [rax],al
  20d260:	de 83 20 00 00 00    	fiadd  WORD PTR [rbx+0x20]
  20d266:	00 00                	add    BYTE PTR [rax],al
  20d268:	8f c4                	pop    rsp
  20d26a:	20 00                	and    BYTE PTR [rax],al
  20d26c:	00 00                	add    BYTE PTR [rax],al
  20d26e:	00 00                	add    BYTE PTR [rax],al
  20d270:	ec                   	in     al,dx
  20d271:	83 20 00             	and    DWORD PTR [rax],0x0
  20d274:	00 00                	add    BYTE PTR [rax],al
  20d276:	00 00                	add    BYTE PTR [rax],al
  20d278:	94                   	xchg   esp,eax
  20d279:	c4                   	(bad)  
  20d27a:	20 00                	and    BYTE PTR [rax],al
  20d27c:	00 00                	add    BYTE PTR [rax],al
  20d27e:	00 00                	add    BYTE PTR [rax],al
  20d280:	fa                   	cli    
  20d281:	83 20 00             	and    DWORD PTR [rax],0x0
  20d284:	00 00                	add    BYTE PTR [rax],al
  20d286:	00 00                	add    BYTE PTR [rax],al
  20d288:	99                   	cdq    
  20d289:	c4                   	(bad)  
  20d28a:	20 00                	and    BYTE PTR [rax],al
  20d28c:	00 00                	add    BYTE PTR [rax],al
  20d28e:	00 00                	add    BYTE PTR [rax],al
  20d290:	08 84 20 00 00 00 00 	or     BYTE PTR [rax+riz*1+0x0],al
  20d297:	00 9e c4 20 00 00    	add    BYTE PTR [rsi+0x20c4],bl
  20d29d:	00 00                	add    BYTE PTR [rax],al
  20d29f:	00 14 84             	add    BYTE PTR [rsp+rax*4],dl
  20d2a2:	20 00                	and    BYTE PTR [rax],al
  20d2a4:	00 00                	add    BYTE PTR [rax],al
  20d2a6:	00 00                	add    BYTE PTR [rax],al
  20d2a8:	a3 c4 20 00 00 00 00 	movabs ds:0x22000000000020c4,eax
  20d2af:	00 22 
  20d2b1:	84 20                	test   BYTE PTR [rax],ah
  20d2b3:	00 00                	add    BYTE PTR [rax],al
  20d2b5:	00 00                	add    BYTE PTR [rax],al
  20d2b7:	00 a8 c4 20 00 00    	add    BYTE PTR [rax+0x20c4],ch
  20d2bd:	00 00                	add    BYTE PTR [rax],al
  20d2bf:	00 2e                	add    BYTE PTR [rsi],ch
  20d2c1:	84 20                	test   BYTE PTR [rax],ah
  20d2c3:	00 00                	add    BYTE PTR [rax],al
  20d2c5:	00 00                	add    BYTE PTR [rax],al
  20d2c7:	00 ae c4 20 00 00    	add    BYTE PTR [rsi+0x20c4],ch
  20d2cd:	00 00                	add    BYTE PTR [rax],al
  20d2cf:	00 3a                	add    BYTE PTR [rdx],bh
  20d2d1:	84 20                	test   BYTE PTR [rax],ah
  20d2d3:	00 00                	add    BYTE PTR [rax],al
  20d2d5:	00 00                	add    BYTE PTR [rax],al
  20d2d7:	00 b4 c4 20 00 00 00 	add    BYTE PTR [rsp+rax*8+0x20],dh
  20d2de:	00 00                	add    BYTE PTR [rax],al
  20d2e0:	46 84 20             	rex.RX test BYTE PTR [rax],r12b
  20d2e3:	00 00                	add    BYTE PTR [rax],al
  20d2e5:	00 00                	add    BYTE PTR [rax],al
  20d2e7:	00 ba c4 20 00 00    	add    BYTE PTR [rdx+0x20c4],bh
  20d2ed:	00 00                	add    BYTE PTR [rax],al
  20d2ef:	00 52 84             	add    BYTE PTR [rdx-0x7c],dl
  20d2f2:	20 00                	and    BYTE PTR [rax],al
  20d2f4:	00 00                	add    BYTE PTR [rax],al
  20d2f6:	00 00                	add    BYTE PTR [rax],al
  20d2f8:	c0 c4 20             	rol    ah,0x20
  20d2fb:	00 00                	add    BYTE PTR [rax],al
  20d2fd:	00 00                	add    BYTE PTR [rax],al
  20d2ff:	00 5e 84             	add    BYTE PTR [rsi-0x7c],bl
  20d302:	20 00                	and    BYTE PTR [rax],al
  20d304:	00 00                	add    BYTE PTR [rax],al
  20d306:	00 00                	add    BYTE PTR [rax],al
  20d308:	c6 c4 20             	mov    ah,0x20
  20d30b:	00 00                	add    BYTE PTR [rax],al
  20d30d:	00 00                	add    BYTE PTR [rax],al
  20d30f:	00 6c 84 20          	add    BYTE PTR [rsp+rax*4+0x20],ch
  20d313:	00 00                	add    BYTE PTR [rax],al
  20d315:	00 00                	add    BYTE PTR [rax],al
  20d317:	00 cc                	add    ah,cl
  20d319:	c4                   	(bad)  
  20d31a:	20 00                	and    BYTE PTR [rax],al
  20d31c:	00 00                	add    BYTE PTR [rax],al
  20d31e:	00 00                	add    BYTE PTR [rax],al
  20d320:	7a 84                	jp     20d2a6 <__kernel_symtab+0xa46>
  20d322:	20 00                	and    BYTE PTR [rax],al
  20d324:	00 00                	add    BYTE PTR [rax],al
  20d326:	00 00                	add    BYTE PTR [rax],al
  20d328:	d2 c4                	rol    ah,cl
  20d32a:	20 00                	and    BYTE PTR [rax],al
  20d32c:	00 00                	add    BYTE PTR [rax],al
  20d32e:	00 00                	add    BYTE PTR [rax],al
  20d330:	88 84 20 00 00 00 00 	mov    BYTE PTR [rax+riz*1+0x0],al
  20d337:	00 d8                	add    al,bl
  20d339:	c4                   	(bad)  
  20d33a:	20 00                	and    BYTE PTR [rax],al
  20d33c:	00 00                	add    BYTE PTR [rax],al
  20d33e:	00 00                	add    BYTE PTR [rax],al
  20d340:	96                   	xchg   esi,eax
  20d341:	84 20                	test   BYTE PTR [rax],ah
  20d343:	00 00                	add    BYTE PTR [rax],al
  20d345:	00 00                	add    BYTE PTR [rax],al
  20d347:	00 de                	add    dh,bl
  20d349:	c4                   	(bad)  
  20d34a:	20 00                	and    BYTE PTR [rax],al
  20d34c:	00 00                	add    BYTE PTR [rax],al
  20d34e:	00 00                	add    BYTE PTR [rax],al
  20d350:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  20d351:	84 20                	test   BYTE PTR [rax],ah
  20d353:	00 00                	add    BYTE PTR [rax],al
  20d355:	00 00                	add    BYTE PTR [rax],al
  20d357:	00 e4                	add    ah,ah
  20d359:	c4                   	(bad)  
  20d35a:	20 00                	and    BYTE PTR [rax],al
  20d35c:	00 00                	add    BYTE PTR [rax],al
  20d35e:	00 00                	add    BYTE PTR [rax],al
  20d360:	b2 84                	mov    dl,0x84
  20d362:	20 00                	and    BYTE PTR [rax],al
  20d364:	00 00                	add    BYTE PTR [rax],al
  20d366:	00 00                	add    BYTE PTR [rax],al
  20d368:	ea                   	(bad)  
  20d369:	c4                   	(bad)  
  20d36a:	20 00                	and    BYTE PTR [rax],al
  20d36c:	00 00                	add    BYTE PTR [rax],al
  20d36e:	00 00                	add    BYTE PTR [rax],al
  20d370:	c0 84 20 00 00 00 00 	rol    BYTE PTR [rax+riz*1+0x0],0x0
  20d377:	00 
  20d378:	f0 c4                	lock (bad) 
  20d37a:	20 00                	and    BYTE PTR [rax],al
  20d37c:	00 00                	add    BYTE PTR [rax],al
  20d37e:	00 00                	add    BYTE PTR [rax],al
  20d380:	ce                   	(bad)  
  20d381:	84 20                	test   BYTE PTR [rax],ah
  20d383:	00 00                	add    BYTE PTR [rax],al
  20d385:	00 00                	add    BYTE PTR [rax],al
  20d387:	00 f6                	add    dh,dh
  20d389:	c4                   	(bad)  
  20d38a:	20 00                	and    BYTE PTR [rax],al
  20d38c:	00 00                	add    BYTE PTR [rax],al
  20d38e:	00 00                	add    BYTE PTR [rax],al
  20d390:	dc 84 20 00 00 00 00 	fadd   QWORD PTR [rax+riz*1+0x0]
  20d397:	00 fc                	add    ah,bh
  20d399:	c4                   	(bad)  
  20d39a:	20 00                	and    BYTE PTR [rax],al
  20d39c:	00 00                	add    BYTE PTR [rax],al
  20d39e:	00 00                	add    BYTE PTR [rax],al
  20d3a0:	ea                   	(bad)  
  20d3a1:	84 20                	test   BYTE PTR [rax],ah
  20d3a3:	00 00                	add    BYTE PTR [rax],al
  20d3a5:	00 00                	add    BYTE PTR [rax],al
  20d3a7:	00 02                	add    BYTE PTR [rdx],al
  20d3a9:	c5 20 00             	(bad)
  20d3ac:	00 00                	add    BYTE PTR [rax],al
  20d3ae:	00 00                	add    BYTE PTR [rax],al
  20d3b0:	f8                   	clc    
  20d3b1:	84 20                	test   BYTE PTR [rax],ah
  20d3b3:	00 00                	add    BYTE PTR [rax],al
  20d3b5:	00 00                	add    BYTE PTR [rax],al
  20d3b7:	00 08                	add    BYTE PTR [rax],cl
  20d3b9:	c5 20 00             	(bad)
  20d3bc:	00 00                	add    BYTE PTR [rax],al
  20d3be:	00 00                	add    BYTE PTR [rax],al
  20d3c0:	06                   	(bad)  
  20d3c1:	85 20                	test   DWORD PTR [rax],esp
  20d3c3:	00 00                	add    BYTE PTR [rax],al
  20d3c5:	00 00                	add    BYTE PTR [rax],al
  20d3c7:	00 0e                	add    BYTE PTR [rsi],cl
  20d3c9:	c5 20 00             	(bad)
  20d3cc:	00 00                	add    BYTE PTR [rax],al
  20d3ce:	00 00                	add    BYTE PTR [rax],al
  20d3d0:	14 85                	adc    al,0x85
  20d3d2:	20 00                	and    BYTE PTR [rax],al
  20d3d4:	00 00                	add    BYTE PTR [rax],al
  20d3d6:	00 00                	add    BYTE PTR [rax],al
  20d3d8:	14 c5                	adc    al,0xc5
  20d3da:	20 00                	and    BYTE PTR [rax],al
  20d3dc:	00 00                	add    BYTE PTR [rax],al
  20d3de:	00 00                	add    BYTE PTR [rax],al
  20d3e0:	22 85 20 00 00 00    	and    al,BYTE PTR [rbp+0x20]
  20d3e6:	00 00                	add    BYTE PTR [rax],al
  20d3e8:	1a c5                	sbb    al,ch
  20d3ea:	20 00                	and    BYTE PTR [rax],al
  20d3ec:	00 00                	add    BYTE PTR [rax],al
  20d3ee:	00 00                	add    BYTE PTR [rax],al
  20d3f0:	30 85 20 00 00 00    	xor    BYTE PTR [rbp+0x20],al
  20d3f6:	00 00                	add    BYTE PTR [rax],al
  20d3f8:	20 c5                	and    ch,al
  20d3fa:	20 00                	and    BYTE PTR [rax],al
  20d3fc:	00 00                	add    BYTE PTR [rax],al
  20d3fe:	00 00                	add    BYTE PTR [rax],al
  20d400:	3e 85 20             	test   DWORD PTR ds:[rax],esp
  20d403:	00 00                	add    BYTE PTR [rax],al
  20d405:	00 00                	add    BYTE PTR [rax],al
  20d407:	00 26                	add    BYTE PTR [rsi],ah
  20d409:	c5 20 00             	(bad)
  20d40c:	00 00                	add    BYTE PTR [rax],al
  20d40e:	00 00                	add    BYTE PTR [rax],al
  20d410:	4c 85 20             	test   QWORD PTR [rax],r12
  20d413:	00 00                	add    BYTE PTR [rax],al
  20d415:	00 00                	add    BYTE PTR [rax],al
  20d417:	00 2c c5 20 00 00 00 	add    BYTE PTR [rax*8+0x20],ch
  20d41e:	00 00                	add    BYTE PTR [rax],al
  20d420:	5a                   	pop    rdx
  20d421:	85 20                	test   DWORD PTR [rax],esp
  20d423:	00 00                	add    BYTE PTR [rax],al
  20d425:	00 00                	add    BYTE PTR [rax],al
  20d427:	00 31                	add    BYTE PTR [rcx],dh
  20d429:	c5 20 00             	(bad)
  20d42c:	00 00                	add    BYTE PTR [rax],al
  20d42e:	00 00                	add    BYTE PTR [rax],al
  20d430:	68 85 20 00 00       	push   0x2085
  20d435:	00 00                	add    BYTE PTR [rax],al
  20d437:	00 36                	add    BYTE PTR [rsi],dh
  20d439:	c5 20 00             	(bad)
  20d43c:	00 00                	add    BYTE PTR [rax],al
  20d43e:	00 00                	add    BYTE PTR [rax],al
  20d440:	76 85                	jbe    20d3c7 <__kernel_symtab+0xb67>
  20d442:	20 00                	and    BYTE PTR [rax],al
  20d444:	00 00                	add    BYTE PTR [rax],al
  20d446:	00 00                	add    BYTE PTR [rax],al
  20d448:	3b c5                	cmp    eax,ebp
  20d44a:	20 00                	and    BYTE PTR [rax],al
  20d44c:	00 00                	add    BYTE PTR [rax],al
  20d44e:	00 00                	add    BYTE PTR [rax],al
  20d450:	84 85 20 00 00 00    	test   BYTE PTR [rbp+0x20],al
  20d456:	00 00                	add    BYTE PTR [rax],al
  20d458:	40 c5 20 00          	(bad)
  20d45c:	00 00                	add    BYTE PTR [rax],al
  20d45e:	00 00                	add    BYTE PTR [rax],al
  20d460:	92                   	xchg   edx,eax
  20d461:	85 20                	test   DWORD PTR [rax],esp
  20d463:	00 00                	add    BYTE PTR [rax],al
  20d465:	00 00                	add    BYTE PTR [rax],al
  20d467:	00 45 c5             	add    BYTE PTR [rbp-0x3b],al
  20d46a:	20 00                	and    BYTE PTR [rax],al
  20d46c:	00 00                	add    BYTE PTR [rax],al
  20d46e:	00 00                	add    BYTE PTR [rax],al
  20d470:	a0 85 20 00 00 00 00 	movabs al,ds:0x4a00000000002085
  20d477:	00 4a 
  20d479:	c5 20 00             	(bad)
  20d47c:	00 00                	add    BYTE PTR [rax],al
  20d47e:	00 00                	add    BYTE PTR [rax],al
  20d480:	ae                   	scas   al,BYTE PTR es:[rdi]
  20d481:	85 20                	test   DWORD PTR [rax],esp
  20d483:	00 00                	add    BYTE PTR [rax],al
  20d485:	00 00                	add    BYTE PTR [rax],al
  20d487:	00 4f c5             	add    BYTE PTR [rdi-0x3b],cl
  20d48a:	20 00                	and    BYTE PTR [rax],al
  20d48c:	00 00                	add    BYTE PTR [rax],al
  20d48e:	00 00                	add    BYTE PTR [rax],al
  20d490:	bc 85 20 00 00       	mov    esp,0x2085
  20d495:	00 00                	add    BYTE PTR [rax],al
  20d497:	00 54 c5 20          	add    BYTE PTR [rbp+rax*8+0x20],dl
  20d49b:	00 00                	add    BYTE PTR [rax],al
  20d49d:	00 00                	add    BYTE PTR [rax],al
  20d49f:	00 ca                	add    dl,cl
  20d4a1:	85 20                	test   DWORD PTR [rax],esp
  20d4a3:	00 00                	add    BYTE PTR [rax],al
  20d4a5:	00 00                	add    BYTE PTR [rax],al
  20d4a7:	00 59 c5             	add    BYTE PTR [rcx-0x3b],bl
  20d4aa:	20 00                	and    BYTE PTR [rax],al
  20d4ac:	00 00                	add    BYTE PTR [rax],al
  20d4ae:	00 00                	add    BYTE PTR [rax],al
  20d4b0:	d8 85 20 00 00 00    	fadd   DWORD PTR [rbp+0x20]
  20d4b6:	00 00                	add    BYTE PTR [rax],al
  20d4b8:	5e                   	pop    rsi
  20d4b9:	c5 20 00             	(bad)
  20d4bc:	00 00                	add    BYTE PTR [rax],al
  20d4be:	00 00                	add    BYTE PTR [rax],al
  20d4c0:	e6 85                	out    0x85,al
  20d4c2:	20 00                	and    BYTE PTR [rax],al
  20d4c4:	00 00                	add    BYTE PTR [rax],al
  20d4c6:	00 00                	add    BYTE PTR [rax],al
  20d4c8:	64 c5 20 00          	(bad)
  20d4cc:	00 00                	add    BYTE PTR [rax],al
  20d4ce:	00 00                	add    BYTE PTR [rax],al
  20d4d0:	f4                   	hlt    
  20d4d1:	85 20                	test   DWORD PTR [rax],esp
  20d4d3:	00 00                	add    BYTE PTR [rax],al
  20d4d5:	00 00                	add    BYTE PTR [rax],al
  20d4d7:	00 6a c5             	add    BYTE PTR [rdx-0x3b],ch
  20d4da:	20 00                	and    BYTE PTR [rax],al
  20d4dc:	00 00                	add    BYTE PTR [rax],al
  20d4de:	00 00                	add    BYTE PTR [rax],al
  20d4e0:	02 86 20 00 00 00    	add    al,BYTE PTR [rsi+0x20]
  20d4e6:	00 00                	add    BYTE PTR [rax],al
  20d4e8:	70 c5                	jo     20d4af <__kernel_symtab+0xc4f>
  20d4ea:	20 00                	and    BYTE PTR [rax],al
  20d4ec:	00 00                	add    BYTE PTR [rax],al
  20d4ee:	00 00                	add    BYTE PTR [rax],al
  20d4f0:	10 86 20 00 00 00    	adc    BYTE PTR [rsi+0x20],al
  20d4f6:	00 00                	add    BYTE PTR [rax],al
  20d4f8:	76 c5                	jbe    20d4bf <__kernel_symtab+0xc5f>
  20d4fa:	20 00                	and    BYTE PTR [rax],al
  20d4fc:	00 00                	add    BYTE PTR [rax],al
  20d4fe:	00 00                	add    BYTE PTR [rax],al
  20d500:	1e                   	(bad)  
  20d501:	86 20                	xchg   BYTE PTR [rax],ah
  20d503:	00 00                	add    BYTE PTR [rax],al
  20d505:	00 00                	add    BYTE PTR [rax],al
  20d507:	00 7c c5 20          	add    BYTE PTR [rbp+rax*8+0x20],bh
  20d50b:	00 00                	add    BYTE PTR [rax],al
  20d50d:	00 00                	add    BYTE PTR [rax],al
  20d50f:	00 2c 86             	add    BYTE PTR [rsi+rax*4],ch
  20d512:	20 00                	and    BYTE PTR [rax],al
  20d514:	00 00                	add    BYTE PTR [rax],al
  20d516:	00 00                	add    BYTE PTR [rax],al
  20d518:	82                   	(bad)  
  20d519:	c5 20 00             	(bad)
  20d51c:	00 00                	add    BYTE PTR [rax],al
  20d51e:	00 00                	add    BYTE PTR [rax],al
  20d520:	76 86                	jbe    20d4a8 <__kernel_symtab+0xc48>
  20d522:	20 00                	and    BYTE PTR [rax],al
  20d524:	00 00                	add    BYTE PTR [rax],al
  20d526:	00 00                	add    BYTE PTR [rax],al
  20d528:	92                   	xchg   edx,eax
  20d529:	c5 20 00             	(bad)
  20d52c:	00 00                	add    BYTE PTR [rax],al
  20d52e:	00 00                	add    BYTE PTR [rax],al
  20d530:	d0 86 20 00 00 00    	rol    BYTE PTR [rsi+0x20],1
  20d536:	00 00                	add    BYTE PTR [rax],al
  20d538:	a2 c5 20 00 00 00 00 	movabs ds:0xe7000000000020c5,al
  20d53f:	00 e7 
  20d541:	86 20                	xchg   BYTE PTR [rax],ah
  20d543:	00 00                	add    BYTE PTR [rax],al
  20d545:	00 00                	add    BYTE PTR [rax],al
  20d547:	00 ab c5 20 00 00    	add    BYTE PTR [rbx+0x20c5],ch
  20d54d:	00 00                	add    BYTE PTR [rax],al
  20d54f:	00 f0                	add    al,dh
  20d551:	86 20                	xchg   BYTE PTR [rax],ah
  20d553:	00 00                	add    BYTE PTR [rax],al
  20d555:	00 00                	add    BYTE PTR [rax],al
  20d557:	00 b4 c5 20 00 00 00 	add    BYTE PTR [rbp+rax*8+0x20],dh
  20d55e:	00 00                	add    BYTE PTR [rax],al
  20d560:	0a 87 20 00 00 00    	or     al,BYTE PTR [rdi+0x20]
  20d566:	00 00                	add    BYTE PTR [rax],al
  20d568:	c2 c5 20             	ret    0x20c5
  20d56b:	00 00                	add    BYTE PTR [rax],al
  20d56d:	00 00                	add    BYTE PTR [rax],al
  20d56f:	00 10                	add    BYTE PTR [rax],dl
  20d571:	87 20                	xchg   DWORD PTR [rax],esp
  20d573:	00 00                	add    BYTE PTR [rax],al
  20d575:	00 00                	add    BYTE PTR [rax],al
  20d577:	00 d4                	add    ah,dl
  20d579:	c5 20 00             	(bad)
  20d57c:	00 00                	add    BYTE PTR [rax],al
  20d57e:	00 00                	add    BYTE PTR [rax],al
  20d580:	26 87 20             	xchg   DWORD PTR es:[rax],esp
  20d583:	00 00                	add    BYTE PTR [rax],al
  20d585:	00 00                	add    BYTE PTR [rax],al
  20d587:	00 da                	add    dl,bl
  20d589:	c5 20 00             	(bad)
  20d58c:	00 00                	add    BYTE PTR [rax],al
  20d58e:	00 00                	add    BYTE PTR [rax],al
  20d590:	3d 87 20 00 00       	cmp    eax,0x2087
  20d595:	00 00                	add    BYTE PTR [rax],al
  20d597:	00 e5                	add    ch,ah
  20d599:	c5 20 00             	(bad)
  20d59c:	00 00                	add    BYTE PTR [rax],al
  20d59e:	00 00                	add    BYTE PTR [rax],al
  20d5a0:	50                   	push   rax
  20d5a1:	87 20                	xchg   DWORD PTR [rax],esp
  20d5a3:	00 00                	add    BYTE PTR [rax],al
  20d5a5:	00 00                	add    BYTE PTR [rax],al
  20d5a7:	00 f0                	add    al,dh
  20d5a9:	c5 20 00             	(bad)
  20d5ac:	00 00                	add    BYTE PTR [rax],al
  20d5ae:	00 00                	add    BYTE PTR [rax],al
  20d5b0:	58                   	pop    rax
  20d5b1:	87 20                	xchg   DWORD PTR [rax],esp
  20d5b3:	00 00                	add    BYTE PTR [rax],al
  20d5b5:	00 00                	add    BYTE PTR [rax],al
  20d5b7:	00 f9                	add    cl,bh
  20d5b9:	c5 20 00             	(bad)
  20d5bc:	00 00                	add    BYTE PTR [rax],al
  20d5be:	00 00                	add    BYTE PTR [rax],al
  20d5c0:	b1 87                	mov    cl,0x87
  20d5c2:	20 00                	and    BYTE PTR [rax],al
  20d5c4:	00 00                	add    BYTE PTR [rax],al
  20d5c6:	00 00                	add    BYTE PTR [rax],al
  20d5c8:	08 c6                	or     dh,al
  20d5ca:	20 00                	and    BYTE PTR [rax],al
  20d5cc:	00 00                	add    BYTE PTR [rax],al
  20d5ce:	00 00                	add    BYTE PTR [rax],al
  20d5d0:	d9 87 20 00 00 00    	fld    DWORD PTR [rdi+0x20]
  20d5d6:	00 00                	add    BYTE PTR [rax],al
  20d5d8:	18 c6                	sbb    dh,al
  20d5da:	20 00                	and    BYTE PTR [rax],al
  20d5dc:	00 00                	add    BYTE PTR [rax],al
  20d5de:	00 00                	add    BYTE PTR [rax],al
  20d5e0:	10 88 20 00 00 00    	adc    BYTE PTR [rax+0x20],cl
  20d5e6:	00 00                	add    BYTE PTR [rax],al
  20d5e8:	26 c6                	es (bad) 
  20d5ea:	20 00                	and    BYTE PTR [rax],al
  20d5ec:	00 00                	add    BYTE PTR [rax],al
  20d5ee:	00 00                	add    BYTE PTR [rax],al
  20d5f0:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
  20d5f6:	00 00                	add    BYTE PTR [rax],al
  20d5f8:	36 c6                	ss (bad) 
  20d5fa:	20 00                	and    BYTE PTR [rax],al
  20d5fc:	00 00                	add    BYTE PTR [rax],al
  20d5fe:	00 00                	add    BYTE PTR [rax],al
  20d600:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
  20d606:	00 00                	add    BYTE PTR [rax],al
  20d608:	44 c6                	rex.R (bad) 
  20d60a:	20 00                	and    BYTE PTR [rax],al
  20d60c:	00 00                	add    BYTE PTR [rax],al
  20d60e:	00 00                	add    BYTE PTR [rax],al
  20d610:	99                   	cdq    
  20d611:	90                   	nop
  20d612:	20 00                	and    BYTE PTR [rax],al
  20d614:	00 00                	add    BYTE PTR [rax],al
  20d616:	00 00                	add    BYTE PTR [rax],al
  20d618:	50                   	push   rax
  20d619:	c6                   	(bad)  
  20d61a:	20 00                	and    BYTE PTR [rax],al
  20d61c:	00 00                	add    BYTE PTR [rax],al
  20d61e:	00 00                	add    BYTE PTR [rax],al
  20d620:	f1                   	icebp  
  20d621:	90                   	nop
  20d622:	20 00                	and    BYTE PTR [rax],al
  20d624:	00 00                	add    BYTE PTR [rax],al
  20d626:	00 00                	add    BYTE PTR [rax],al
  20d628:	81 c6 20 00 00 00    	add    esi,0x20
  20d62e:	00 00                	add    BYTE PTR [rax],al
  20d630:	6a 91                	push   0xffffffffffffff91
  20d632:	20 00                	and    BYTE PTR [rax],al
  20d634:	00 00                	add    BYTE PTR [rax],al
  20d636:	00 00                	add    BYTE PTR [rax],al
  20d638:	8b c6                	mov    eax,esi
  20d63a:	20 00                	and    BYTE PTR [rax],al
  20d63c:	00 00                	add    BYTE PTR [rax],al
  20d63e:	00 00                	add    BYTE PTR [rax],al
  20d640:	cb                   	retf   
  20d641:	91                   	xchg   ecx,eax
  20d642:	20 00                	and    BYTE PTR [rax],al
  20d644:	00 00                	add    BYTE PTR [rax],al
  20d646:	00 00                	add    BYTE PTR [rax],al
  20d648:	9c                   	pushf  
  20d649:	c6                   	(bad)  
  20d64a:	20 00                	and    BYTE PTR [rax],al
  20d64c:	00 00                	add    BYTE PTR [rax],al
  20d64e:	00 00                	add    BYTE PTR [rax],al
  20d650:	e1 91                	loope  20d5e3 <__kernel_symtab+0xd83>
  20d652:	20 00                	and    BYTE PTR [rax],al
  20d654:	00 00                	add    BYTE PTR [rax],al
  20d656:	00 00                	add    BYTE PTR [rax],al
  20d658:	a9 c6 20 00 00       	test   eax,0x20c6
  20d65d:	00 00                	add    BYTE PTR [rax],al
  20d65f:	00 ff                	add    bh,bh
  20d661:	91                   	xchg   ecx,eax
  20d662:	20 00                	and    BYTE PTR [rax],al
  20d664:	00 00                	add    BYTE PTR [rax],al
  20d666:	00 00                	add    BYTE PTR [rax],al
  20d668:	b8 c6 20 00 00       	mov    eax,0x20c6
  20d66d:	00 00                	add    BYTE PTR [rax],al
  20d66f:	00 15 92 20 00 00    	add    BYTE PTR [rip+0x2092],dl        # 20f707 <idt_s+0x667>
  20d675:	00 00                	add    BYTE PTR [rax],al
  20d677:	00 ef                	add    bh,ch
  20d679:	c6                   	(bad)  
  20d67a:	20 00                	and    BYTE PTR [rax],al
  20d67c:	00 00                	add    BYTE PTR [rax],al
  20d67e:	00 00                	add    BYTE PTR [rax],al
  20d680:	36 92                	ss xchg edx,eax
  20d682:	20 00                	and    BYTE PTR [rax],al
  20d684:	00 00                	add    BYTE PTR [rax],al
  20d686:	00 00                	add    BYTE PTR [rax],al
  20d688:	03 c7                	add    eax,edi
  20d68a:	20 00                	and    BYTE PTR [rax],al
  20d68c:	00 00                	add    BYTE PTR [rax],al
  20d68e:	00 00                	add    BYTE PTR [rax],al
  20d690:	83 92 20 00 00 00 00 	adc    DWORD PTR [rdx+0x20],0x0
  20d697:	00 18                	add    BYTE PTR [rax],bl
  20d699:	c7                   	(bad)  
  20d69a:	20 00                	and    BYTE PTR [rax],al
  20d69c:	00 00                	add    BYTE PTR [rax],al
  20d69e:	00 00                	add    BYTE PTR [rax],al
  20d6a0:	70 93                	jo     20d635 <__kernel_symtab+0xdd5>
  20d6a2:	20 00                	and    BYTE PTR [rax],al
  20d6a4:	00 00                	add    BYTE PTR [rax],al
  20d6a6:	00 00                	add    BYTE PTR [rax],al
  20d6a8:	40 c7                	rex (bad) 
  20d6aa:	20 00                	and    BYTE PTR [rax],al
  20d6ac:	00 00                	add    BYTE PTR [rax],al
  20d6ae:	00 00                	add    BYTE PTR [rax],al
  20d6b0:	23 94 20 00 00 00 00 	and    edx,DWORD PTR [rax+riz*1+0x0]
  20d6b7:	00 4c c7 20          	add    BYTE PTR [rdi+rax*8+0x20],cl
  20d6bb:	00 00                	add    BYTE PTR [rax],al
  20d6bd:	00 00                	add    BYTE PTR [rax],al
  20d6bf:	00 6b 94             	add    BYTE PTR [rbx-0x6c],ch
  20d6c2:	20 00                	and    BYTE PTR [rax],al
  20d6c4:	00 00                	add    BYTE PTR [rax],al
  20d6c6:	00 00                	add    BYTE PTR [rax],al
  20d6c8:	52                   	push   rdx
  20d6c9:	c7                   	(bad)  
  20d6ca:	20 00                	and    BYTE PTR [rax],al
  20d6cc:	00 00                	add    BYTE PTR [rax],al
  20d6ce:	00 00                	add    BYTE PTR [rax],al
  20d6d0:	25 95 20 00 00       	and    eax,0x2095
  20d6d5:	00 00                	add    BYTE PTR [rax],al
  20d6d7:	00 60 c7             	add    BYTE PTR [rax-0x39],ah
  20d6da:	20 00                	and    BYTE PTR [rax],al
  20d6dc:	00 00                	add    BYTE PTR [rax],al
  20d6de:	00 00                	add    BYTE PTR [rax],al
  20d6e0:	be 96 20 00 00       	mov    esi,0x2096
  20d6e5:	00 00                	add    BYTE PTR [rax],al
  20d6e7:	00 70 c7             	add    BYTE PTR [rax-0x39],dh
  20d6ea:	20 00                	and    BYTE PTR [rax],al
  20d6ec:	00 00                	add    BYTE PTR [rax],al
  20d6ee:	00 00                	add    BYTE PTR [rax],al
  20d6f0:	e9 96 20 00 00       	jmp    20f78b <idt_s+0x6eb>
  20d6f5:	00 00                	add    BYTE PTR [rax],al
  20d6f7:	00 7b c7             	add    BYTE PTR [rbx-0x39],bh
  20d6fa:	20 00                	and    BYTE PTR [rax],al
  20d6fc:	00 00                	add    BYTE PTR [rax],al
  20d6fe:	00 00                	add    BYTE PTR [rax],al
  20d700:	a0 97 20 00 00 00 00 	movabs al,ds:0x9200000000002097
  20d707:	00 92 
  20d709:	c7                   	(bad)  
  20d70a:	20 00                	and    BYTE PTR [rax],al
  20d70c:	00 00                	add    BYTE PTR [rax],al
  20d70e:	00 00                	add    BYTE PTR [rax],al
  20d710:	00 98 20 00 00 00    	add    BYTE PTR [rax+0x20],bl
  20d716:	00 00                	add    BYTE PTR [rax],al
  20d718:	9c                   	pushf  
  20d719:	c7                   	(bad)  
  20d71a:	20 00                	and    BYTE PTR [rax],al
  20d71c:	00 00                	add    BYTE PTR [rax],al
  20d71e:	00 00                	add    BYTE PTR [rax],al
  20d720:	60                   	(bad)  
  20d721:	98                   	cwde   
  20d722:	20 00                	and    BYTE PTR [rax],al
  20d724:	00 00                	add    BYTE PTR [rax],al
  20d726:	00 00                	add    BYTE PTR [rax],al
  20d728:	a8 c7                	test   al,0xc7
  20d72a:	20 00                	and    BYTE PTR [rax],al
  20d72c:	00 00                	add    BYTE PTR [rax],al
  20d72e:	00 00                	add    BYTE PTR [rax],al
  20d730:	c0 98 20 00 00 00 00 	rcr    BYTE PTR [rax+0x20],0x0
  20d737:	00 b4 c7 20 00 00 00 	add    BYTE PTR [rdi+rax*8+0x20],dh
  20d73e:	00 00                	add    BYTE PTR [rax],al
  20d740:	20 99 20 00 00 00    	and    BYTE PTR [rcx+0x20],bl
  20d746:	00 00                	add    BYTE PTR [rax],al
  20d748:	c1 c7 20             	rol    edi,0x20
  20d74b:	00 00                	add    BYTE PTR [rax],al
  20d74d:	00 00                	add    BYTE PTR [rax],al
  20d74f:	00 60 99             	add    BYTE PTR [rax-0x67],ah
  20d752:	20 00                	and    BYTE PTR [rax],al
  20d754:	00 00                	add    BYTE PTR [rax],al
  20d756:	00 00                	add    BYTE PTR [rax],al
  20d758:	ca c7 20             	retf   0x20c7
  20d75b:	00 00                	add    BYTE PTR [rax],al
  20d75d:	00 00                	add    BYTE PTR [rax],al
  20d75f:	00 68 99             	add    BYTE PTR [rax-0x67],ch
  20d762:	20 00                	and    BYTE PTR [rax],al
  20d764:	00 00                	add    BYTE PTR [rax],al
  20d766:	00 00                	add    BYTE PTR [rax],al
  20d768:	df c7                	ffreep st(7)
  20d76a:	20 00                	and    BYTE PTR [rax],al
  20d76c:	00 00                	add    BYTE PTR [rax],al
  20d76e:	00 00                	add    BYTE PTR [rax],al
  20d770:	70 99                	jo     20d70b <__kernel_symtab+0xeab>
  20d772:	20 00                	and    BYTE PTR [rax],al
  20d774:	00 00                	add    BYTE PTR [rax],al
  20d776:	00 00                	add    BYTE PTR [rax],al
  20d778:	ef                   	out    dx,eax
  20d779:	c7                   	(bad)  
  20d77a:	20 00                	and    BYTE PTR [rax],al
  20d77c:	00 00                	add    BYTE PTR [rax],al
  20d77e:	00 00                	add    BYTE PTR [rax],al
  20d780:	71 99                	jno    20d71b <__kernel_symtab+0xebb>
  20d782:	20 00                	and    BYTE PTR [rax],al
  20d784:	00 00                	add    BYTE PTR [rax],al
  20d786:	00 00                	add    BYTE PTR [rax],al
  20d788:	fe c7                	inc    bh
  20d78a:	20 00                	and    BYTE PTR [rax],al
  20d78c:	00 00                	add    BYTE PTR [rax],al
  20d78e:	00 00                	add    BYTE PTR [rax],al
  20d790:	72 99                	jb     20d72b <__kernel_symtab+0xecb>
  20d792:	20 00                	and    BYTE PTR [rax],al
  20d794:	00 00                	add    BYTE PTR [rax],al
  20d796:	00 00                	add    BYTE PTR [rax],al
  20d798:	0c c8                	or     al,0xc8
  20d79a:	20 00                	and    BYTE PTR [rax],al
  20d79c:	00 00                	add    BYTE PTR [rax],al
  20d79e:	00 00                	add    BYTE PTR [rax],al
  20d7a0:	80 99 20 00 00 00 00 	sbb    BYTE PTR [rcx+0x20],0x0
  20d7a7:	00 20                	add    BYTE PTR [rax],ah
  20d7a9:	c8 20 00 00          	enter  0x20,0x0
  20d7ad:	00 00                	add    BYTE PTR [rax],al
  20d7af:	00 98 99 20 00 00    	add    BYTE PTR [rax+0x2099],bl
  20d7b5:	00 00                	add    BYTE PTR [rax],al
  20d7b7:	00 35 c8 20 00 00    	add    BYTE PTR [rip+0x20c8],dh        # 20f885 <idt_s+0x7e5>
  20d7bd:	00 00                	add    BYTE PTR [rax],al
  20d7bf:	00 a0 99 20 00 00    	add    BYTE PTR [rax+0x2099],ah
  20d7c5:	00 00                	add    BYTE PTR [rax],al
  20d7c7:	00 42 c8             	add    BYTE PTR [rdx-0x38],al
  20d7ca:	20 00                	and    BYTE PTR [rax],al
  20d7cc:	00 00                	add    BYTE PTR [rax],al
  20d7ce:	00 00                	add    BYTE PTR [rax],al
  20d7d0:	a8 99                	test   al,0x99
  20d7d2:	20 00                	and    BYTE PTR [rax],al
  20d7d4:	00 00                	add    BYTE PTR [rax],al
  20d7d6:	00 00                	add    BYTE PTR [rax],al
  20d7d8:	4f c8 20 00 00       	rex.WRXB enter 0x20,0x0
  20d7dd:	00 00                	add    BYTE PTR [rax],al
  20d7df:	00 ff                	add    bh,bh
  20d7e1:	ff                   	(bad)  
  20d7e2:	ff                   	(bad)  
  20d7e3:	ff                   	(bad)  
  20d7e4:	ff                   	(bad)  
  20d7e5:	ff                   	(bad)  
  20d7e6:	ff                   	(bad)  
  20d7e7:	ff 59 c8             	call   FWORD PTR [rcx-0x38]
  20d7ea:	20 00                	and    BYTE PTR [rax],al
	...

000000000020d800 <exception_messages>:
  20d800:	30 a0 20 00 00 00    	xor    BYTE PTR [rax+0x20],ah
  20d806:	00 00                	add    BYTE PTR [rax],al
  20d808:	41 a0 20 00 00 00 00 	rex.B movabs al,ds:0xa047000000000020
  20d80f:	00 47 a0 
  20d812:	20 00                	and    BYTE PTR [rax],al
  20d814:	00 00                	add    BYTE PTR [rax],al
  20d816:	00 00                	add    BYTE PTR [rax],al
  20d818:	5e                   	pop    rsi
  20d819:	a0 20 00 00 00 00 00 	movabs al,ds:0xa069000000000020
  20d820:	69 a0 
  20d822:	20 00                	and    BYTE PTR [rax],al
  20d824:	00 00                	add    BYTE PTR [rax],al
  20d826:	00 00                	add    BYTE PTR [rax],al
  20d828:	72 a0                	jb     20d7ca <__kernel_symtab+0xf6a>
  20d82a:	20 00                	and    BYTE PTR [rax],al
  20d82c:	00 00                	add    BYTE PTR [rax],al
  20d82e:	00 00                	add    BYTE PTR [rax],al
  20d830:	87 a0 20 00 00 00    	xchg   DWORD PTR [rax+0x20],esp
  20d836:	00 00                	add    BYTE PTR [rax],al
  20d838:	96                   	xchg   esi,eax
  20d839:	a0 20 00 00 00 00 00 	movabs al,ds:0xa0ab000000000020
  20d840:	ab a0 
  20d842:	20 00                	and    BYTE PTR [rax],al
  20d844:	00 00                	add    BYTE PTR [rax],al
  20d846:	00 00                	add    BYTE PTR [rax],al
  20d848:	b8 a0 20 00 00       	mov    eax,0x20a0
  20d84d:	00 00                	add    BYTE PTR [rax],al
  20d84f:	00 d4                	add    ah,dl
  20d851:	a0 20 00 00 00 00 00 	movabs al,ds:0xa0e0000000000020
  20d858:	e0 a0 
  20d85a:	20 00                	and    BYTE PTR [rax],al
  20d85c:	00 00                	add    BYTE PTR [rax],al
  20d85e:	00 00                	add    BYTE PTR [rax],al
  20d860:	f4                   	hlt    
  20d861:	a0 20 00 00 00 00 00 	movabs al,ds:0xa108000000000020
  20d868:	08 a1 
  20d86a:	20 00                	and    BYTE PTR [rax],al
  20d86c:	00 00                	add    BYTE PTR [rax],al
  20d86e:	00 00                	add    BYTE PTR [rax],al
  20d870:	21 a1 20 00 00 00    	and    DWORD PTR [rcx+0x20],esp
  20d876:	00 00                	add    BYTE PTR [rax],al
  20d878:	2c a1                	sub    al,0xa1
  20d87a:	20 00                	and    BYTE PTR [rax],al
  20d87c:	00 00                	add    BYTE PTR [rax],al
  20d87e:	00 00                	add    BYTE PTR [rax],al
  20d880:	35 a1 20 00 00       	xor    eax,0x20a1
  20d885:	00 00                	add    BYTE PTR [rax],al
  20d887:	00 48 a1             	add    BYTE PTR [rax-0x5f],cl
  20d88a:	20 00                	and    BYTE PTR [rax],al
  20d88c:	00 00                	add    BYTE PTR [rax],al
  20d88e:	00 00                	add    BYTE PTR [rax],al
  20d890:	58                   	pop    rax
  20d891:	a1 20 00 00 00 00 00 	movabs eax,ds:0xa166000000000020
  20d898:	66 a1 
  20d89a:	20 00                	and    BYTE PTR [rax],al
  20d89c:	00 00                	add    BYTE PTR [rax],al
  20d89e:	00 00                	add    BYTE PTR [rax],al
  20d8a0:	7a a1                	jp     20d843 <exception_messages+0x43>
  20d8a2:	20 00                	and    BYTE PTR [rax],al
  20d8a4:	00 00                	add    BYTE PTR [rax],al
  20d8a6:	00 00                	add    BYTE PTR [rax],al
  20d8a8:	2c a1                	sub    al,0xa1
  20d8aa:	20 00                	and    BYTE PTR [rax],al
  20d8ac:	00 00                	add    BYTE PTR [rax],al
  20d8ae:	00 00                	add    BYTE PTR [rax],al
  20d8b0:	2c a1                	sub    al,0xa1
  20d8b2:	20 00                	and    BYTE PTR [rax],al
  20d8b4:	00 00                	add    BYTE PTR [rax],al
  20d8b6:	00 00                	add    BYTE PTR [rax],al
  20d8b8:	2c a1                	sub    al,0xa1
  20d8ba:	20 00                	and    BYTE PTR [rax],al
  20d8bc:	00 00                	add    BYTE PTR [rax],al
  20d8be:	00 00                	add    BYTE PTR [rax],al
  20d8c0:	2c a1                	sub    al,0xa1
  20d8c2:	20 00                	and    BYTE PTR [rax],al
  20d8c4:	00 00                	add    BYTE PTR [rax],al
  20d8c6:	00 00                	add    BYTE PTR [rax],al
  20d8c8:	2c a1                	sub    al,0xa1
  20d8ca:	20 00                	and    BYTE PTR [rax],al
  20d8cc:	00 00                	add    BYTE PTR [rax],al
  20d8ce:	00 00                	add    BYTE PTR [rax],al
  20d8d0:	2c a1                	sub    al,0xa1
  20d8d2:	20 00                	and    BYTE PTR [rax],al
  20d8d4:	00 00                	add    BYTE PTR [rax],al
  20d8d6:	00 00                	add    BYTE PTR [rax],al
  20d8d8:	2c a1                	sub    al,0xa1
  20d8da:	20 00                	and    BYTE PTR [rax],al
  20d8dc:	00 00                	add    BYTE PTR [rax],al
  20d8de:	00 00                	add    BYTE PTR [rax],al
  20d8e0:	2c a1                	sub    al,0xa1
  20d8e2:	20 00                	and    BYTE PTR [rax],al
  20d8e4:	00 00                	add    BYTE PTR [rax],al
  20d8e6:	00 00                	add    BYTE PTR [rax],al
  20d8e8:	2c a1                	sub    al,0xa1
  20d8ea:	20 00                	and    BYTE PTR [rax],al
  20d8ec:	00 00                	add    BYTE PTR [rax],al
  20d8ee:	00 00                	add    BYTE PTR [rax],al
  20d8f0:	89 a1 20 00 00 00    	mov    DWORD PTR [rcx+0x20],esp
  20d8f6:	00 00                	add    BYTE PTR [rax],al
  20d8f8:	2c a1                	sub    al,0xa1
  20d8fa:	20 00                	and    BYTE PTR [rax],al
  20d8fc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .bss:

000000000020e000 <sys::config::__kernel_pages>:
	...

000000000020e008 <sys::config::__kernel_size>:
	...

000000000020e020 <s_tss_descriptors>:
	...

000000000020e088 <isr_stack>:
	...

000000000020e090 <irq_stack>:
	...

000000000020e098 <sgi_stack>:
	...

000000000020f000 <s_gdt_descriptors>:
	...

000000000020f080 <s_gdt>:
	...

000000000020f08c <s_gdt_index>:
	...

000000000020f0a0 <idt_s>:
	...

00000000002100a0 <idtPointer>:
	...

00000000002100ac <milliseconds>:
  2100ac:	00 00                	add    BYTE PTR [rax],al
	...

00000000002100b0 <seconds>:
	...

00000000002100b8 <heap_start>:
	...

00000000002100c0 <heap_end>:
	...

00000000002100d0 <memory::pmm::free_memory_size>:
	...

00000000002100d8 <memory::pmm::used_memory_size>:
	...

00000000002100e0 <memory::pmm::total_memory_size>:
	...

00000000002100e8 <memory::pmm::reserved_memory_size>:
	...

00000000002100f0 <page_bitmap_map>:
	...

0000000000210100 <initialized>:
	...

0000000000210108 <memory::pmm::get_total_memory_size(stivale_memory_map*, unsigned long, unsigned long)::memory_size_bytes>:
	...

0000000000210110 <memory::paging::pml_4>:
	...

0000000000210118 <io::pit::divisor>:
  210118:	00 00                	add    BYTE PTR [rax],al
	...

000000000021011c <io::pit::frequency_hz>:
  21011c:	00 00                	add    BYTE PTR [rax],al
	...

0000000000210120 <io::pit::c2_divisor>:
  210120:	00 00                	add    BYTE PTR [rax],al
	...

0000000000210124 <io::pit::c2_frequency_hz>:
  210124:	00 00                	add    BYTE PTR [rax],al
	...

0000000000210128 <ms_clock>:
	...

0000000000210140 <util::itoa(long, int)::buf>:
	...

0000000000210180 <io::pci::mcfg>:
	...

0000000000210188 <sys::acpi::rsdp>:
	...

0000000000210190 <io::tty::vga_width>:
	...

0000000000210198 <io::tty::vga_height>:
	...

00000000002101a0 <io::tty::row>:
	...

00000000002101a8 <io::tty::column>:
	...

00000000002101b0 <io::tty::text_buffer>:
	...

00000000002101c0 <gfx::gop>:
	...

00000000002101d0 <gfx::buffer>:
	...

00000000002101e0 <io::disk::ahci::ahci_controller>:
	...

00000000002101e8 <io::disk::ahci::abar>:
	...

0000000000210200 <io::disk::ahci::ports>:
	...

0000000000210300 <io::disk::ahci::usable_ports>:
	...

0000000000210320 <keyboard_event_subscriber>:
	...

0000000000210b20 <keyboard_subscribers>:
  210b20:	00 00                	add    BYTE PTR [rax],al
	...

0000000000210b24 <io::keyboard::shifted>:
	...

0000000000210b25 <io::keyboard::ctrl_down>:
	...

0000000000210b26 <io::keyboard::alt_down>:
	...

0000000000210b27 <io::keyboard::fn_down>:
	...

0000000000210b28 <io::keyboard::caps_lock>:
	...

0000000000210b29 <io::keyboard::scroll_lock>:
	...

0000000000210b2a <io::keyboard::num_lock>:
	...

0000000000210b40 <serial_buffer>:
	...

0000000000210d40 <buffer_index>:
  210d40:	00 00                	add    BYTE PTR [rax],al
	...

0000000000210d44 <stack>:
	...

Disassembly of section .eh_frame:

0000000000212000 <__kernel_end>:
  212000:	14 00                	adc    al,0x0
  212002:	00 00                	add    BYTE PTR [rax],al
  212004:	00 00                	add    BYTE PTR [rax],al
  212006:	00 00                	add    BYTE PTR [rax],al
  212008:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  21200b:	00 01                	add    BYTE PTR [rcx],al
  21200d:	78 10                	js     21201f <__kernel_end+0x1f>
  21200f:	01 1b                	add    DWORD PTR [rbx],ebx
  212011:	0c 07                	or     al,0x7
  212013:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  212019:	00 00                	add    BYTE PTR [rax],al
  21201b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21201e:	00 00                	add    BYTE PTR [rax],al
  212020:	e0 ef                	loopne 212011 <__kernel_end+0x11>
  212022:	fe                   	(bad)  
  212023:	ff 88 00 00 00 00    	dec    DWORD PTR [rax+0x0]
  212029:	41 0e                	rex.B (bad) 
  21202b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212031:	02 83 c6 0c 07 08    	add    al,BYTE PTR [rbx+0x8070cc6]
  212037:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21203a:	00 00                	add    BYTE PTR [rax],al
  21203c:	3c 00                	cmp    al,0x0
  21203e:	00 00                	add    BYTE PTR [rax],al
  212040:	48                   	rex.W
  212041:	f0 fe                	lock (bad) 
  212043:	ff 36                	push   QWORD PTR [rsi]
  212045:	01 00                	add    DWORD PTR [rax],eax
  212047:	00 00                	add    BYTE PTR [rax],al
  212049:	41 0e                	rex.B (bad) 
  21204b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212051:	03 31                	add    esi,DWORD PTR [rcx]
  212053:	01 c6                	add    esi,eax
  212055:	0c 07                	or     al,0x7
  212057:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21205a:	00 00                	add    BYTE PTR [rax],al
  21205c:	5c                   	pop    rsp
  21205d:	00 00                	add    BYTE PTR [rax],al
  21205f:	00 5e f1             	add    BYTE PTR [rsi-0xf],bl
  212062:	fe                   	(bad)  
  212063:	ff c6                	inc    esi
  212065:	00 00                	add    BYTE PTR [rax],al
  212067:	00 00                	add    BYTE PTR [rax],al
  212069:	41 0e                	rex.B (bad) 
  21206b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212071:	02 c1                	add    al,cl
  212073:	c6                   	(bad)  
  212074:	0c 07                	or     al,0x7
  212076:	08 00                	or     BYTE PTR [rax],al
  212078:	1c 00                	sbb    al,0x0
  21207a:	00 00                	add    BYTE PTR [rax],al
  21207c:	7c 00                	jl     21207e <__kernel_end+0x7e>
  21207e:	00 00                	add    BYTE PTR [rax],al
  212080:	04 f2                	add    al,0xf2
  212082:	fe                   	(bad)  
  212083:	ff 86 00 00 00 00    	inc    DWORD PTR [rsi+0x0]
  212089:	41 0e                	rex.B (bad) 
  21208b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212091:	02 81 c6 0c 07 08    	add    al,BYTE PTR [rcx+0x8070cc6]
  212097:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21209a:	00 00                	add    BYTE PTR [rax],al
  21209c:	9c                   	pushf  
  21209d:	00 00                	add    BYTE PTR [rax],al
  21209f:	00 6a f2             	add    BYTE PTR [rdx-0xe],ch
  2120a2:	fe                   	(bad)  
  2120a3:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  2120a6:	00 00                	add    BYTE PTR [rax],al
  2120a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2120ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2120b1:	7b c6                	jnp    212079 <__kernel_end+0x79>
  2120b3:	0c 07                	or     al,0x7
  2120b5:	08 00                	or     BYTE PTR [rax],al
  2120b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2120ba:	00 00                	add    BYTE PTR [rax],al
  2120bc:	bc 00 00 00 8a       	mov    esp,0x8a000000
  2120c1:	f2 fe                	repnz (bad) 
  2120c3:	ff                   	(bad)  
  2120c4:	3e 00 00             	add    BYTE PTR ds:[rax],al
  2120c7:	00 00                	add    BYTE PTR [rax],al
  2120c9:	41 0e                	rex.B (bad) 
  2120cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2120d1:	79 c6                	jns    212099 <__kernel_end+0x99>
  2120d3:	0c 07                	or     al,0x7
  2120d5:	08 00                	or     BYTE PTR [rax],al
  2120d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2120da:	00 00                	add    BYTE PTR [rax],al
  2120dc:	dc 00                	fadd   QWORD PTR [rax]
  2120de:	00 00                	add    BYTE PTR [rax],al
  2120e0:	a8 f2                	test   al,0xf2
  2120e2:	fe                   	(bad)  
  2120e3:	ff 16                	call   QWORD PTR [rsi]
  2120e5:	00 00                	add    BYTE PTR [rax],al
  2120e7:	00 00                	add    BYTE PTR [rax],al
  2120e9:	41 0e                	rex.B (bad) 
  2120eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2120f1:	51                   	push   rcx
  2120f2:	c6                   	(bad)  
  2120f3:	0c 07                	or     al,0x7
  2120f5:	08 00                	or     BYTE PTR [rax],al
  2120f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2120fa:	00 00                	add    BYTE PTR [rax],al
  2120fc:	fc                   	cld    
  2120fd:	00 00                	add    BYTE PTR [rax],al
  2120ff:	00 9e f2 fe ff 1d    	add    BYTE PTR [rsi+0x1dfffef2],bl
  212105:	00 00                	add    BYTE PTR [rax],al
  212107:	00 00                	add    BYTE PTR [rax],al
  212109:	41 0e                	rex.B (bad) 
  21210b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212111:	58                   	pop    rax
  212112:	c6                   	(bad)  
  212113:	0c 07                	or     al,0x7
  212115:	08 00                	or     BYTE PTR [rax],al
  212117:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21211a:	00 00                	add    BYTE PTR [rax],al
  21211c:	1c 01                	sbb    al,0x1
  21211e:	00 00                	add    BYTE PTR [rax],al
  212120:	9b                   	fwait
  212121:	f2 fe                	repnz (bad) 
  212123:	ff 18                	call   FWORD PTR [rax]
  212125:	02 00                	add    al,BYTE PTR [rax]
  212127:	00 00                	add    BYTE PTR [rax],al
  212129:	41 0e                	rex.B (bad) 
  21212b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212131:	03 13                	add    edx,DWORD PTR [rbx]
  212133:	02 c6                	add    al,dh
  212135:	0c 07                	or     al,0x7
  212137:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21213a:	00 00                	add    BYTE PTR [rax],al
  21213c:	3c 01                	cmp    al,0x1
  21213e:	00 00                	add    BYTE PTR [rax],al
  212140:	93                   	xchg   ebx,eax
  212141:	f4                   	hlt    
  212142:	fe                   	(bad)  
  212143:	ff                   	(bad)  
  212144:	3f                   	(bad)  
  212145:	00 00                	add    BYTE PTR [rax],al
  212147:	00 00                	add    BYTE PTR [rax],al
  212149:	41 0e                	rex.B (bad) 
  21214b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212151:	7a c6                	jp     212119 <__kernel_end+0x119>
  212153:	0c 07                	or     al,0x7
  212155:	08 00                	or     BYTE PTR [rax],al
  212157:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21215a:	00 00                	add    BYTE PTR [rax],al
  21215c:	5c                   	pop    rsp
  21215d:	01 00                	add    DWORD PTR [rax],eax
  21215f:	00 b2 f4 fe ff 31    	add    BYTE PTR [rdx+0x31fffef4],dh
  212165:	00 00                	add    BYTE PTR [rax],al
  212167:	00 00                	add    BYTE PTR [rax],al
  212169:	41 0e                	rex.B (bad) 
  21216b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212171:	6c                   	ins    BYTE PTR es:[rdi],dx
  212172:	c6                   	(bad)  
  212173:	0c 07                	or     al,0x7
  212175:	08 00                	or     BYTE PTR [rax],al
  212177:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21217a:	00 00                	add    BYTE PTR [rax],al
  21217c:	7c 01                	jl     21217f <__kernel_end+0x17f>
  21217e:	00 00                	add    BYTE PTR [rax],al
  212180:	c3                   	ret    
  212181:	f4                   	hlt    
  212182:	fe                   	(bad)  
  212183:	ff 07                	inc    DWORD PTR [rdi]
  212185:	00 00                	add    BYTE PTR [rax],al
  212187:	00 00                	add    BYTE PTR [rax],al
  212189:	41 0e                	rex.B (bad) 
  21218b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212191:	42 c6                	rex.X (bad) 
  212193:	0c 07                	or     al,0x7
  212195:	08 00                	or     BYTE PTR [rax],al
  212197:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21219a:	00 00                	add    BYTE PTR [rax],al
  21219c:	9c                   	pushf  
  21219d:	01 00                	add    DWORD PTR [rax],eax
  21219f:	00 aa f4 fe ff a7    	add    BYTE PTR [rdx-0x5800010c],ch
  2121a5:	00 00                	add    BYTE PTR [rax],al
  2121a7:	00 00                	add    BYTE PTR [rax],al
  2121a9:	41 0e                	rex.B (bad) 
  2121ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2121b1:	02 a2 c6 0c 07 08    	add    ah,BYTE PTR [rdx+0x8070cc6]
  2121b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2121ba:	00 00                	add    BYTE PTR [rax],al
  2121bc:	bc 01 00 00 31       	mov    esp,0x31000001
  2121c1:	f5                   	cmc    
  2121c2:	fe                   	(bad)  
  2121c3:	ff 52 01             	call   QWORD PTR [rdx+0x1]
  2121c6:	00 00                	add    BYTE PTR [rax],al
  2121c8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2121cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2121d1:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
  2121d4:	c6                   	(bad)  
  2121d5:	0c 07                	or     al,0x7
  2121d7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2121da:	00 00                	add    BYTE PTR [rax],al
  2121dc:	dc 01                	fadd   QWORD PTR [rcx]
  2121de:	00 00                	add    BYTE PTR [rax],al
  2121e0:	63 f6                	movsxd esi,esi
  2121e2:	fe                   	(bad)  
  2121e3:	ff d1                	call   rcx
  2121e5:	00 00                	add    BYTE PTR [rax],al
  2121e7:	00 00                	add    BYTE PTR [rax],al
  2121e9:	41 0e                	rex.B (bad) 
  2121eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2121f1:	02 cc                	add    cl,ah
  2121f3:	c6                   	(bad)  
  2121f4:	0c 07                	or     al,0x7
  2121f6:	08 00                	or     BYTE PTR [rax],al
  2121f8:	1c 00                	sbb    al,0x0
  2121fa:	00 00                	add    BYTE PTR [rax],al
  2121fc:	fc                   	cld    
  2121fd:	01 00                	add    DWORD PTR [rax],eax
  2121ff:	00 14 f7             	add    BYTE PTR [rdi+rsi*8],dl
  212202:	fe                   	(bad)  
  212203:	ff 21                	jmp    QWORD PTR [rcx]
  212205:	00 00                	add    BYTE PTR [rax],al
  212207:	00 00                	add    BYTE PTR [rax],al
  212209:	41 0e                	rex.B (bad) 
  21220b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212211:	5c                   	pop    rsp
  212212:	c6                   	(bad)  
  212213:	0c 07                	or     al,0x7
  212215:	08 00                	or     BYTE PTR [rax],al
  212217:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21221a:	00 00                	add    BYTE PTR [rax],al
  21221c:	1c 02                	sbb    al,0x2
  21221e:	00 00                	add    BYTE PTR [rax],al
  212220:	15 f7 fe ff a5       	adc    eax,0xa5fffef7
  212225:	00 00                	add    BYTE PTR [rax],al
  212227:	00 00                	add    BYTE PTR [rax],al
  212229:	41 0e                	rex.B (bad) 
  21222b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212231:	02 a0 c6 0c 07 08    	add    ah,BYTE PTR [rax+0x8070cc6]
  212237:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21223a:	00 00                	add    BYTE PTR [rax],al
  21223c:	3c 02                	cmp    al,0x2
  21223e:	00 00                	add    BYTE PTR [rax],al
  212240:	9a                   	(bad)  
  212241:	f7 fe                	idiv   esi
  212243:	ff 18                	call   FWORD PTR [rax]
  212245:	02 00                	add    al,BYTE PTR [rax]
  212247:	00 00                	add    BYTE PTR [rax],al
  212249:	41 0e                	rex.B (bad) 
  21224b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212251:	03 13                	add    edx,DWORD PTR [rbx]
  212253:	02 c6                	add    al,dh
  212255:	0c 07                	or     al,0x7
  212257:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21225a:	00 00                	add    BYTE PTR [rax],al
  21225c:	5c                   	pop    rsp
  21225d:	02 00                	add    al,BYTE PTR [rax]
  21225f:	00 92 f9 fe ff 1b    	add    BYTE PTR [rdx+0x1bfffef9],dl
  212265:	00 00                	add    BYTE PTR [rax],al
  212267:	00 00                	add    BYTE PTR [rax],al
  212269:	41 0e                	rex.B (bad) 
  21226b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212271:	56                   	push   rsi
  212272:	c6                   	(bad)  
  212273:	0c 07                	or     al,0x7
  212275:	08 00                	or     BYTE PTR [rax],al
  212277:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21227a:	00 00                	add    BYTE PTR [rax],al
  21227c:	7c 02                	jl     212280 <__kernel_end+0x280>
  21227e:	00 00                	add    BYTE PTR [rax],al
  212280:	8d                   	(bad)  
  212281:	f9                   	stc    
  212282:	fe                   	(bad)  
  212283:	ff c5                	inc    ebp
  212285:	00 00                	add    BYTE PTR [rax],al
  212287:	00 00                	add    BYTE PTR [rax],al
  212289:	41 0e                	rex.B (bad) 
  21228b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212291:	02 c0                	add    al,al
  212293:	c6                   	(bad)  
  212294:	0c 07                	or     al,0x7
  212296:	08 00                	or     BYTE PTR [rax],al
  212298:	1c 00                	sbb    al,0x0
  21229a:	00 00                	add    BYTE PTR [rax],al
  21229c:	9c                   	pushf  
  21229d:	02 00                	add    al,BYTE PTR [rax]
  21229f:	00 32                	add    BYTE PTR [rdx],dh
  2122a1:	fa                   	cli    
  2122a2:	fe                   	(bad)  
  2122a3:	ff 32                	push   QWORD PTR [rdx]
  2122a5:	01 00                	add    DWORD PTR [rax],eax
  2122a7:	00 00                	add    BYTE PTR [rax],al
  2122a9:	41 0e                	rex.B (bad) 
  2122ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2122b1:	03 2d 01 c6 0c 07    	add    ebp,DWORD PTR [rip+0x70cc601]        # 72de8b8 <__kernel_end+0x70cc8b8>
  2122b7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2122ba:	00 00                	add    BYTE PTR [rax],al
  2122bc:	bc 02 00 00 44       	mov    esp,0x44000002
  2122c1:	fb                   	sti    
  2122c2:	fe                   	(bad)  
  2122c3:	ff e3                	jmp    rbx
  2122c5:	05 00 00 00 41       	add    eax,0x41000000
  2122ca:	0e                   	(bad)  
  2122cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2122d1:	03 de                	add    ebx,esi
  2122d3:	05 c6 0c 07 08       	add    eax,0x8070cc6
  2122d8:	1c 00                	sbb    al,0x0
  2122da:	00 00                	add    BYTE PTR [rax],al
  2122dc:	dc 02                	fadd   QWORD PTR [rdx]
  2122de:	00 00                	add    BYTE PTR [rax],al
  2122e0:	08 01                	or     BYTE PTR [rcx],al
  2122e2:	ff                   	(bad)  
  2122e3:	ff 6d 00             	jmp    FWORD PTR [rbp+0x0]
  2122e6:	00 00                	add    BYTE PTR [rax],al
  2122e8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2122eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2122f1:	02 68 c6             	add    ch,BYTE PTR [rax-0x3a]
  2122f4:	0c 07                	or     al,0x7
  2122f6:	08 00                	or     BYTE PTR [rax],al
  2122f8:	1c 00                	sbb    al,0x0
  2122fa:	00 00                	add    BYTE PTR [rax],al
  2122fc:	fc                   	cld    
  2122fd:	02 00                	add    al,BYTE PTR [rax]
  2122ff:	00 55 01             	add    BYTE PTR [rbp+0x1],dl
  212302:	ff                   	(bad)  
  212303:	ff                   	(bad)  
  212304:	bb 00 00 00 00       	mov    ebx,0x0
  212309:	41 0e                	rex.B (bad) 
  21230b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212311:	02 b6 c6 0c 07 08    	add    dh,BYTE PTR [rsi+0x8070cc6]
  212317:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21231a:	00 00                	add    BYTE PTR [rax],al
  21231c:	1c 03                	sbb    al,0x3
  21231e:	00 00                	add    BYTE PTR [rax],al
  212320:	f0 01 ff             	lock add edi,edi
  212323:	ff 71 00             	push   QWORD PTR [rcx+0x0]
  212326:	00 00                	add    BYTE PTR [rax],al
  212328:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21232b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212331:	02 6c c6 0c          	add    ch,BYTE PTR [rsi+rax*8+0xc]
  212335:	07                   	(bad)  
  212336:	08 00                	or     BYTE PTR [rax],al
  212338:	1c 00                	sbb    al,0x0
  21233a:	00 00                	add    BYTE PTR [rax],al
  21233c:	3c 03                	cmp    al,0x3
  21233e:	00 00                	add    BYTE PTR [rax],al
  212340:	42 02 ff             	rex.X add dil,dil
  212343:	ff                   	(bad)  
  212344:	b8 00 00 00 00       	mov    eax,0x0
  212349:	41 0e                	rex.B (bad) 
  21234b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212351:	02 b3 c6 0c 07 08    	add    dh,BYTE PTR [rbx+0x8070cc6]
  212357:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21235a:	00 00                	add    BYTE PTR [rax],al
  21235c:	5c                   	pop    rsp
  21235d:	03 00                	add    eax,DWORD PTR [rax]
  21235f:	00 da                	add    dl,bl
  212361:	02 ff                	add    bh,bh
  212363:	ff 8d 00 00 00 00    	dec    DWORD PTR [rbp+0x0]
  212369:	41 0e                	rex.B (bad) 
  21236b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212371:	02 88 c6 0c 07 08    	add    cl,BYTE PTR [rax+0x8070cc6]
  212377:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21237a:	00 00                	add    BYTE PTR [rax],al
  21237c:	7c 03                	jl     212381 <__kernel_end+0x381>
  21237e:	00 00                	add    BYTE PTR [rax],al
  212380:	48 03 ff             	add    rdi,rdi
  212383:	ff 2c 00             	jmp    FWORD PTR [rax+rax*1]
  212386:	00 00                	add    BYTE PTR [rax],al
  212388:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21238b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212391:	67 c6                	addr32 (bad) 
  212393:	0c 07                	or     al,0x7
  212395:	08 00                	or     BYTE PTR [rax],al
  212397:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21239a:	00 00                	add    BYTE PTR [rax],al
  21239c:	9c                   	pushf  
  21239d:	03 00                	add    eax,DWORD PTR [rax]
  21239f:	00 54 03 ff          	add    BYTE PTR [rbx+rax*1-0x1],dl
  2123a3:	ff 93 00 00 00 00    	call   QWORD PTR [rbx+0x0]
  2123a9:	41 0e                	rex.B (bad) 
  2123ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2123b1:	02 8e c6 0c 07 08    	add    cl,BYTE PTR [rsi+0x8070cc6]
  2123b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2123ba:	00 00                	add    BYTE PTR [rax],al
  2123bc:	bc 03 00 00 c7       	mov    esp,0xc7000003
  2123c1:	03 ff                	add    edi,edi
  2123c3:	ff 53 00             	call   QWORD PTR [rbx+0x0]
  2123c6:	00 00                	add    BYTE PTR [rax],al
  2123c8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2123cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2123d1:	02 4e c6             	add    cl,BYTE PTR [rsi-0x3a]
  2123d4:	0c 07                	or     al,0x7
  2123d6:	08 00                	or     BYTE PTR [rax],al
  2123d8:	1c 00                	sbb    al,0x0
  2123da:	00 00                	add    BYTE PTR [rax],al
  2123dc:	dc 03                	fadd   QWORD PTR [rbx]
  2123de:	00 00                	add    BYTE PTR [rax],al
  2123e0:	fa                   	cli    
  2123e1:	03 ff                	add    edi,edi
  2123e3:	ff                   	(bad)  
  2123e4:	bf 00 00 00 00       	mov    edi,0x0
  2123e9:	41 0e                	rex.B (bad) 
  2123eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2123f1:	02 ba c6 0c 07 08    	add    bh,BYTE PTR [rdx+0x8070cc6]
  2123f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2123fa:	00 00                	add    BYTE PTR [rax],al
  2123fc:	fc                   	cld    
  2123fd:	03 00                	add    eax,DWORD PTR [rax]
  2123ff:	00 99 04 ff ff ab    	add    BYTE PTR [rcx-0x540000fc],bl
  212405:	02 00                	add    al,BYTE PTR [rax]
  212407:	00 00                	add    BYTE PTR [rax],al
  212409:	41 0e                	rex.B (bad) 
  21240b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212411:	03 a6 02 c6 0c 07    	add    esp,DWORD PTR [rsi+0x70cc602]
  212417:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21241a:	00 00                	add    BYTE PTR [rax],al
  21241c:	1c 04                	sbb    al,0x4
  21241e:	00 00                	add    BYTE PTR [rax],al
  212420:	24 07                	and    al,0x7
  212422:	ff                   	(bad)  
  212423:	ff                   	(bad)  
  212424:	7c 00                	jl     212426 <__kernel_end+0x426>
  212426:	00 00                	add    BYTE PTR [rax],al
  212428:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21242b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212431:	02 77 c6             	add    dh,BYTE PTR [rdi-0x3a]
  212434:	0c 07                	or     al,0x7
  212436:	08 00                	or     BYTE PTR [rax],al
  212438:	1c 00                	sbb    al,0x0
  21243a:	00 00                	add    BYTE PTR [rax],al
  21243c:	3c 04                	cmp    al,0x4
  21243e:	00 00                	add    BYTE PTR [rax],al
  212440:	80 07 ff             	add    BYTE PTR [rdi],0xff
  212443:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
  212446:	00 00                	add    BYTE PTR [rax],al
  212448:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21244b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212451:	02 41 c6             	add    al,BYTE PTR [rcx-0x3a]
  212454:	0c 07                	or     al,0x7
  212456:	08 00                	or     BYTE PTR [rax],al
  212458:	1c 00                	sbb    al,0x0
  21245a:	00 00                	add    BYTE PTR [rax],al
  21245c:	5c                   	pop    rsp
  21245d:	04 00                	add    al,0x0
  21245f:	00 a6 07 ff ff 7d    	add    BYTE PTR [rsi+0x7dffff07],ah
  212465:	00 00                	add    BYTE PTR [rax],al
  212467:	00 00                	add    BYTE PTR [rax],al
  212469:	41 0e                	rex.B (bad) 
  21246b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212471:	02 78 c6             	add    bh,BYTE PTR [rax-0x3a]
  212474:	0c 07                	or     al,0x7
  212476:	08 00                	or     BYTE PTR [rax],al
  212478:	1c 00                	sbb    al,0x0
  21247a:	00 00                	add    BYTE PTR [rax],al
  21247c:	7c 04                	jl     212482 <__kernel_end+0x482>
  21247e:	00 00                	add    BYTE PTR [rax],al
  212480:	03 08                	add    ecx,DWORD PTR [rax]
  212482:	ff                   	(bad)  
  212483:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
  212486:	00 00                	add    BYTE PTR [rax],al
  212488:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21248b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212491:	02 41 c6             	add    al,BYTE PTR [rcx-0x3a]
  212494:	0c 07                	or     al,0x7
  212496:	08 00                	or     BYTE PTR [rax],al
  212498:	1c 00                	sbb    al,0x0
  21249a:	00 00                	add    BYTE PTR [rax],al
  21249c:	9c                   	pushf  
  21249d:	04 00                	add    al,0x0
  21249f:	00 29                	add    BYTE PTR [rcx],ch
  2124a1:	08 ff                	or     bh,bh
  2124a3:	ff 6a 00             	jmp    FWORD PTR [rdx+0x0]
  2124a6:	00 00                	add    BYTE PTR [rax],al
  2124a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2124ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2124b1:	02 65 c6             	add    ah,BYTE PTR [rbp-0x3a]
  2124b4:	0c 07                	or     al,0x7
  2124b6:	08 00                	or     BYTE PTR [rax],al
  2124b8:	1c 00                	sbb    al,0x0
  2124ba:	00 00                	add    BYTE PTR [rax],al
  2124bc:	bc 04 00 00 73       	mov    esp,0x73000004
  2124c1:	08 ff                	or     bh,bh
  2124c3:	ff 91 00 00 00 00    	call   QWORD PTR [rcx+0x0]
  2124c9:	41 0e                	rex.B (bad) 
  2124cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2124d1:	02 8c c6 0c 07 08 00 	add    cl,BYTE PTR [rsi+rax*8+0x8070c]
  2124d8:	1c 00                	sbb    al,0x0
  2124da:	00 00                	add    BYTE PTR [rax],al
  2124dc:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
  2124df:	00 e4                	add    ah,ah
  2124e1:	08 ff                	or     bh,bh
  2124e3:	ff                   	(bad)  
  2124e4:	7c 00                	jl     2124e6 <__kernel_end+0x4e6>
  2124e6:	00 00                	add    BYTE PTR [rax],al
  2124e8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2124eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2124f1:	02 77 c6             	add    dh,BYTE PTR [rdi-0x3a]
  2124f4:	0c 07                	or     al,0x7
  2124f6:	08 00                	or     BYTE PTR [rax],al
  2124f8:	1c 00                	sbb    al,0x0
  2124fa:	00 00                	add    BYTE PTR [rax],al
  2124fc:	fc                   	cld    
  2124fd:	04 00                	add    al,0x0
  2124ff:	00 40 09             	add    BYTE PTR [rax+0x9],al
  212502:	ff                   	(bad)  
  212503:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
  212506:	00 00                	add    BYTE PTR [rax],al
  212508:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21250b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212511:	02 41 c6             	add    al,BYTE PTR [rcx-0x3a]
  212514:	0c 07                	or     al,0x7
  212516:	08 00                	or     BYTE PTR [rax],al
  212518:	1c 00                	sbb    al,0x0
  21251a:	00 00                	add    BYTE PTR [rax],al
  21251c:	1c 05                	sbb    al,0x5
  21251e:	00 00                	add    BYTE PTR [rax],al
  212520:	66 09 ff             	or     di,di
  212523:	ff                   	(bad)  
  212524:	7d 00                	jge    212526 <__kernel_end+0x526>
  212526:	00 00                	add    BYTE PTR [rax],al
  212528:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21252b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212531:	02 78 c6             	add    bh,BYTE PTR [rax-0x3a]
  212534:	0c 07                	or     al,0x7
  212536:	08 00                	or     BYTE PTR [rax],al
  212538:	1c 00                	sbb    al,0x0
  21253a:	00 00                	add    BYTE PTR [rax],al
  21253c:	3c 05                	cmp    al,0x5
  21253e:	00 00                	add    BYTE PTR [rax],al
  212540:	c3                   	ret    
  212541:	09 ff                	or     edi,edi
  212543:	ff 46 00             	inc    DWORD PTR [rsi+0x0]
  212546:	00 00                	add    BYTE PTR [rax],al
  212548:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21254b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212551:	02 41 c6             	add    al,BYTE PTR [rcx-0x3a]
  212554:	0c 07                	or     al,0x7
  212556:	08 00                	or     BYTE PTR [rax],al
  212558:	1c 00                	sbb    al,0x0
  21255a:	00 00                	add    BYTE PTR [rax],al
  21255c:	5c                   	pop    rsp
  21255d:	05 00 00 e9 09       	add    eax,0x9e90000
  212562:	ff                   	(bad)  
  212563:	ff 41 00             	inc    DWORD PTR [rcx+0x0]
  212566:	00 00                	add    BYTE PTR [rax],al
  212568:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21256b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212571:	7c c6                	jl     212539 <__kernel_end+0x539>
  212573:	0c 07                	or     al,0x7
  212575:	08 00                	or     BYTE PTR [rax],al
  212577:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21257a:	00 00                	add    BYTE PTR [rax],al
  21257c:	7c 05                	jl     212583 <__kernel_end+0x583>
  21257e:	00 00                	add    BYTE PTR [rax],al
  212580:	0a 0a                	or     cl,BYTE PTR [rdx]
  212582:	ff                   	(bad)  
  212583:	ff 4d 00             	dec    DWORD PTR [rbp+0x0]
  212586:	00 00                	add    BYTE PTR [rax],al
  212588:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21258b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212591:	02 48 c6             	add    cl,BYTE PTR [rax-0x3a]
  212594:	0c 07                	or     al,0x7
  212596:	08 00                	or     BYTE PTR [rax],al
  212598:	1c 00                	sbb    al,0x0
  21259a:	00 00                	add    BYTE PTR [rax],al
  21259c:	9c                   	pushf  
  21259d:	05 00 00 38 0a       	add    eax,0xa380000
  2125a2:	ff                   	(bad)  
  2125a3:	ff 76 00             	push   QWORD PTR [rsi+0x0]
  2125a6:	00 00                	add    BYTE PTR [rax],al
  2125a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2125ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2125b1:	02 71 c6             	add    dh,BYTE PTR [rcx-0x3a]
  2125b4:	0c 07                	or     al,0x7
  2125b6:	08 00                	or     BYTE PTR [rax],al
  2125b8:	1c 00                	sbb    al,0x0
  2125ba:	00 00                	add    BYTE PTR [rax],al
  2125bc:	bc 05 00 00 8e       	mov    esp,0x8e000005
  2125c1:	0a ff                	or     bh,bh
  2125c3:	ff 16                	call   QWORD PTR [rsi]
  2125c5:	03 00                	add    eax,DWORD PTR [rax]
  2125c7:	00 00                	add    BYTE PTR [rax],al
  2125c9:	41 0e                	rex.B (bad) 
  2125cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2125d1:	03 11                	add    edx,DWORD PTR [rcx]
  2125d3:	03 c6                	add    eax,esi
  2125d5:	0c 07                	or     al,0x7
  2125d7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2125da:	00 00                	add    BYTE PTR [rax],al
  2125dc:	dc 05 00 00 84 0d    	fadd   QWORD PTR [rip+0xd840000]        # da525e2 <__kernel_end+0xd8405e2>
  2125e2:	ff                   	(bad)  
  2125e3:	ff 54 01 00          	call   QWORD PTR [rcx+rax*1+0x0]
  2125e7:	00 00                	add    BYTE PTR [rax],al
  2125e9:	41 0e                	rex.B (bad) 
  2125eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2125f1:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
  2125f4:	c6                   	(bad)  
  2125f5:	0c 07                	or     al,0x7
  2125f7:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2125fa:	00 00                	add    BYTE PTR [rax],al
  2125fc:	fc                   	cld    
  2125fd:	05 00 00 b8 0e       	add    eax,0xeb80000
  212602:	ff                   	(bad)  
  212603:	ff 24 01             	jmp    QWORD PTR [rcx+rax*1]
  212606:	00 00                	add    BYTE PTR [rax],al
  212608:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21260b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212611:	03 1f                	add    ebx,DWORD PTR [rdi]
  212613:	01 c6                	add    esi,eax
  212615:	0c 07                	or     al,0x7
  212617:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21261a:	00 00                	add    BYTE PTR [rax],al
  21261c:	1c 06                	sbb    al,0x6
  21261e:	00 00                	add    BYTE PTR [rax],al
  212620:	bc 0f ff ff 5e       	mov    esp,0x5effff0f
  212625:	00 00                	add    BYTE PTR [rax],al
  212627:	00 00                	add    BYTE PTR [rax],al
  212629:	41 0e                	rex.B (bad) 
  21262b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212631:	02 59 c6             	add    bl,BYTE PTR [rcx-0x3a]
  212634:	0c 07                	or     al,0x7
  212636:	08 00                	or     BYTE PTR [rax],al
  212638:	1c 00                	sbb    al,0x0
  21263a:	00 00                	add    BYTE PTR [rax],al
  21263c:	3c 06                	cmp    al,0x6
  21263e:	00 00                	add    BYTE PTR [rax],al
  212640:	fa                   	cli    
  212641:	0f ff ff             	ud0    edi,edi
  212644:	36 00 00             	add    BYTE PTR ss:[rax],al
  212647:	00 00                	add    BYTE PTR [rax],al
  212649:	41 0e                	rex.B (bad) 
  21264b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212651:	71 c6                	jno    212619 <__kernel_end+0x619>
  212653:	0c 07                	or     al,0x7
  212655:	08 00                	or     BYTE PTR [rax],al
  212657:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21265a:	00 00                	add    BYTE PTR [rax],al
  21265c:	5c                   	pop    rsp
  21265d:	06                   	(bad)  
  21265e:	00 00                	add    BYTE PTR [rax],al
  212660:	10 10                	adc    BYTE PTR [rax],dl
  212662:	ff                   	(bad)  
  212663:	ff 22                	jmp    QWORD PTR [rdx]
  212665:	00 00                	add    BYTE PTR [rax],al
  212667:	00 00                	add    BYTE PTR [rax],al
  212669:	41 0e                	rex.B (bad) 
  21266b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212671:	5d                   	pop    rbp
  212672:	c6                   	(bad)  
  212673:	0c 07                	or     al,0x7
  212675:	08 00                	or     BYTE PTR [rax],al
  212677:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21267a:	00 00                	add    BYTE PTR [rax],al
  21267c:	7c 06                	jl     212684 <__kernel_end+0x684>
  21267e:	00 00                	add    BYTE PTR [rax],al
  212680:	12 10                	adc    dl,BYTE PTR [rax]
  212682:	ff                   	(bad)  
  212683:	ff 55 00             	call   QWORD PTR [rbp+0x0]
  212686:	00 00                	add    BYTE PTR [rax],al
  212688:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21268b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212691:	02 50 c6             	add    dl,BYTE PTR [rax-0x3a]
  212694:	0c 07                	or     al,0x7
  212696:	08 00                	or     BYTE PTR [rax],al
  212698:	1c 00                	sbb    al,0x0
  21269a:	00 00                	add    BYTE PTR [rax],al
  21269c:	9c                   	pushf  
  21269d:	06                   	(bad)  
  21269e:	00 00                	add    BYTE PTR [rax],al
  2126a0:	48 10 ff             	rex.W adc dil,dil
  2126a3:	ff                   	(bad)  
  2126a4:	7e 00                	jle    2126a6 <__kernel_end+0x6a6>
  2126a6:	00 00                	add    BYTE PTR [rax],al
  2126a8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2126ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2126b1:	02 79 c6             	add    bh,BYTE PTR [rcx-0x3a]
  2126b4:	0c 07                	or     al,0x7
  2126b6:	08 00                	or     BYTE PTR [rax],al
  2126b8:	1c 00                	sbb    al,0x0
  2126ba:	00 00                	add    BYTE PTR [rax],al
  2126bc:	bc 06 00 00 a6       	mov    esp,0xa6000006
  2126c1:	10 ff                	adc    bh,bh
  2126c3:	ff 21                	jmp    QWORD PTR [rcx]
  2126c5:	00 00                	add    BYTE PTR [rax],al
  2126c7:	00 00                	add    BYTE PTR [rax],al
  2126c9:	41 0e                	rex.B (bad) 
  2126cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2126d1:	5c                   	pop    rsp
  2126d2:	c6                   	(bad)  
  2126d3:	0c 07                	or     al,0x7
  2126d5:	08 00                	or     BYTE PTR [rax],al
  2126d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2126da:	00 00                	add    BYTE PTR [rax],al
  2126dc:	dc 06                	fadd   QWORD PTR [rsi]
  2126de:	00 00                	add    BYTE PTR [rax],al
  2126e0:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
  2126e1:	10 ff                	adc    bh,bh
  2126e3:	ff 11                	call   QWORD PTR [rcx]
  2126e5:	00 00                	add    BYTE PTR [rax],al
  2126e7:	00 00                	add    BYTE PTR [rax],al
  2126e9:	41 0e                	rex.B (bad) 
  2126eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2126f1:	4c c6                	rex.WR (bad) 
  2126f3:	0c 07                	or     al,0x7
  2126f5:	08 00                	or     BYTE PTR [rax],al
  2126f7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2126fa:	00 00                	add    BYTE PTR [rax],al
  2126fc:	fc                   	cld    
  2126fd:	06                   	(bad)  
  2126fe:	00 00                	add    BYTE PTR [rax],al
  212700:	98                   	cwde   
  212701:	10 ff                	adc    bh,bh
  212703:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
  212707:	00 00                	add    BYTE PTR [rax],al
  212709:	41 0e                	rex.B (bad) 
  21270b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212711:	02 67 c6             	add    ah,BYTE PTR [rdi-0x3a]
  212714:	0c 07                	or     al,0x7
  212716:	08 00                	or     BYTE PTR [rax],al
  212718:	1c 00                	sbb    al,0x0
  21271a:	00 00                	add    BYTE PTR [rax],al
  21271c:	1c 07                	sbb    al,0x7
  21271e:	00 00                	add    BYTE PTR [rax],al
  212720:	e4 10                	in     al,0x10
  212722:	ff                   	(bad)  
  212723:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
  212727:	00 00                	add    BYTE PTR [rax],al
  212729:	41 0e                	rex.B (bad) 
  21272b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212731:	02 67 c6             	add    ah,BYTE PTR [rdi-0x3a]
  212734:	0c 07                	or     al,0x7
  212736:	08 00                	or     BYTE PTR [rax],al
  212738:	1c 00                	sbb    al,0x0
  21273a:	00 00                	add    BYTE PTR [rax],al
  21273c:	3c 07                	cmp    al,0x7
  21273e:	00 00                	add    BYTE PTR [rax],al
  212740:	30 11                	xor    BYTE PTR [rcx],dl
  212742:	ff                   	(bad)  
  212743:	ff 1b                	call   FWORD PTR [rbx]
  212745:	00 00                	add    BYTE PTR [rax],al
  212747:	00 00                	add    BYTE PTR [rax],al
  212749:	41 0e                	rex.B (bad) 
  21274b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212751:	56                   	push   rsi
  212752:	c6                   	(bad)  
  212753:	0c 07                	or     al,0x7
  212755:	08 00                	or     BYTE PTR [rax],al
  212757:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21275a:	00 00                	add    BYTE PTR [rax],al
  21275c:	5c                   	pop    rsp
  21275d:	07                   	(bad)  
  21275e:	00 00                	add    BYTE PTR [rax],al
  212760:	2b 11                	sub    edx,DWORD PTR [rcx]
  212762:	ff                   	(bad)  
  212763:	ff 5e 00             	call   FWORD PTR [rsi+0x0]
  212766:	00 00                	add    BYTE PTR [rax],al
  212768:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21276b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212771:	02 59 c6             	add    bl,BYTE PTR [rcx-0x3a]
  212774:	0c 07                	or     al,0x7
  212776:	08 00                	or     BYTE PTR [rax],al
  212778:	1c 00                	sbb    al,0x0
  21277a:	00 00                	add    BYTE PTR [rax],al
  21277c:	7c 07                	jl     212785 <__kernel_end+0x785>
  21277e:	00 00                	add    BYTE PTR [rax],al
  212780:	69 11 ff ff 3b 00    	imul   edx,DWORD PTR [rcx],0x3bffff
  212786:	00 00                	add    BYTE PTR [rax],al
  212788:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21278b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212791:	76 c6                	jbe    212759 <__kernel_end+0x759>
  212793:	0c 07                	or     al,0x7
  212795:	08 00                	or     BYTE PTR [rax],al
  212797:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21279a:	00 00                	add    BYTE PTR [rax],al
  21279c:	9c                   	pushf  
  21279d:	07                   	(bad)  
  21279e:	00 00                	add    BYTE PTR [rax],al
  2127a0:	84 11                	test   BYTE PTR [rcx],dl
  2127a2:	ff                   	(bad)  
  2127a3:	ff 1b                	call   FWORD PTR [rbx]
  2127a5:	00 00                	add    BYTE PTR [rax],al
  2127a7:	00 00                	add    BYTE PTR [rax],al
  2127a9:	41 0e                	rex.B (bad) 
  2127ab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2127b1:	56                   	push   rsi
  2127b2:	c6                   	(bad)  
  2127b3:	0c 07                	or     al,0x7
  2127b5:	08 00                	or     BYTE PTR [rax],al
  2127b7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2127ba:	00 00                	add    BYTE PTR [rax],al
  2127bc:	bc 07 00 00 7f       	mov    esp,0x7f000007
  2127c1:	11 ff                	adc    edi,edi
  2127c3:	ff 23                	jmp    QWORD PTR [rbx]
  2127c5:	00 00                	add    BYTE PTR [rax],al
  2127c7:	00 00                	add    BYTE PTR [rax],al
  2127c9:	41 0e                	rex.B (bad) 
  2127cb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2127d1:	5e                   	pop    rsi
  2127d2:	c6                   	(bad)  
  2127d3:	0c 07                	or     al,0x7
  2127d5:	08 00                	or     BYTE PTR [rax],al
  2127d7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2127da:	00 00                	add    BYTE PTR [rax],al
  2127dc:	dc 07                	fadd   QWORD PTR [rdi]
  2127de:	00 00                	add    BYTE PTR [rax],al
  2127e0:	20 68 ff             	and    BYTE PTR [rax-0x1],ch
  2127e3:	ff 99 00 00 00 00    	call   FWORD PTR [rcx+0x0]
  2127e9:	41 0e                	rex.B (bad) 
  2127eb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2127f1:	02 94 c6 0c 07 08 00 	add    dl,BYTE PTR [rsi+rax*8+0x8070c]
  2127f8:	24 00                	and    al,0x0
  2127fa:	00 00                	add    BYTE PTR [rax],al
  2127fc:	fc                   	cld    
  2127fd:	07                   	(bad)  
  2127fe:	00 00                	add    BYTE PTR [rax],al
  212800:	99                   	cdq    
  212801:	68 ff ff 58 00       	push   0x58ffff
  212806:	00 00                	add    BYTE PTR [rax],al
  212808:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21280b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212811:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  212815:	4e c6 c3 0c          	rex.WRX mov bl,0xc
  212819:	07                   	(bad)  
  21281a:	08 00                	or     BYTE PTR [rax],al
  21281c:	00 00                	add    BYTE PTR [rax],al
  21281e:	00 00                	add    BYTE PTR [rax],al
  212820:	1c 00                	sbb    al,0x0
  212822:	00 00                	add    BYTE PTR [rax],al
  212824:	24 08                	and    al,0x8
  212826:	00 00                	add    BYTE PTR [rax],al
  212828:	c9                   	leave  
  212829:	68 ff ff 79 00       	push   0x79ffff
  21282e:	00 00                	add    BYTE PTR [rax],al
  212830:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212833:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212839:	02 74 c6 0c          	add    dh,BYTE PTR [rsi+rax*8+0xc]
  21283d:	07                   	(bad)  
  21283e:	08 00                	or     BYTE PTR [rax],al
  212840:	1c 00                	sbb    al,0x0
  212842:	00 00                	add    BYTE PTR [rax],al
  212844:	44 08 00             	or     BYTE PTR [rax],r8b
  212847:	00 22                	add    BYTE PTR [rdx],ah
  212849:	69 ff ff 61 00 00    	imul   edi,edi,0x61ff
  21284f:	00 00                	add    BYTE PTR [rax],al
  212851:	41 0e                	rex.B (bad) 
  212853:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212859:	02 5c c6 0c          	add    bl,BYTE PTR [rsi+rax*8+0xc]
  21285d:	07                   	(bad)  
  21285e:	08 00                	or     BYTE PTR [rax],al
  212860:	1c 00                	sbb    al,0x0
  212862:	00 00                	add    BYTE PTR [rax],al
  212864:	64 08 00             	or     BYTE PTR fs:[rax],al
  212867:	00 63 69             	add    BYTE PTR [rbx+0x69],ah
  21286a:	ff                   	(bad)  
  21286b:	ff 16                	call   QWORD PTR [rsi]
  21286d:	00 00                	add    BYTE PTR [rax],al
  21286f:	00 00                	add    BYTE PTR [rax],al
  212871:	41 0e                	rex.B (bad) 
  212873:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212879:	51                   	push   rcx
  21287a:	c6                   	(bad)  
  21287b:	0c 07                	or     al,0x7
  21287d:	08 00                	or     BYTE PTR [rax],al
  21287f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212882:	00 00                	add    BYTE PTR [rax],al
  212884:	84 08                	test   BYTE PTR [rax],cl
  212886:	00 00                	add    BYTE PTR [rax],al
  212888:	59                   	pop    rcx
  212889:	69 ff ff 1e 00 00    	imul   edi,edi,0x1eff
  21288f:	00 00                	add    BYTE PTR [rax],al
  212891:	41 0e                	rex.B (bad) 
  212893:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212899:	59                   	pop    rcx
  21289a:	c6                   	(bad)  
  21289b:	0c 07                	or     al,0x7
  21289d:	08 00                	or     BYTE PTR [rax],al
  21289f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2128a2:	00 00                	add    BYTE PTR [rax],al
  2128a4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  2128a5:	08 00                	or     BYTE PTR [rax],al
  2128a7:	00 57 69             	add    BYTE PTR [rdi+0x69],dl
  2128aa:	ff                   	(bad)  
  2128ab:	ff 16                	call   QWORD PTR [rsi]
  2128ad:	00 00                	add    BYTE PTR [rax],al
  2128af:	00 00                	add    BYTE PTR [rax],al
  2128b1:	41 0e                	rex.B (bad) 
  2128b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2128b9:	51                   	push   rcx
  2128ba:	c6                   	(bad)  
  2128bb:	0c 07                	or     al,0x7
  2128bd:	08 00                	or     BYTE PTR [rax],al
  2128bf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2128c2:	00 00                	add    BYTE PTR [rax],al
  2128c4:	c4                   	(bad)  
  2128c5:	08 00                	or     BYTE PTR [rax],al
  2128c7:	00 4d 69             	add    BYTE PTR [rbp+0x69],cl
  2128ca:	ff                   	(bad)  
  2128cb:	ff 21                	jmp    QWORD PTR [rcx]
  2128cd:	00 00                	add    BYTE PTR [rax],al
  2128cf:	00 00                	add    BYTE PTR [rax],al
  2128d1:	41 0e                	rex.B (bad) 
  2128d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2128d9:	5c                   	pop    rsp
  2128da:	c6                   	(bad)  
  2128db:	0c 07                	or     al,0x7
  2128dd:	08 00                	or     BYTE PTR [rax],al
  2128df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2128e2:	00 00                	add    BYTE PTR [rax],al
  2128e4:	e4 08                	in     al,0x8
  2128e6:	00 00                	add    BYTE PTR [rax],al
  2128e8:	4e 69 ff ff 4d 00 00 	rex.WRX imul r15,rdi,0x4dff
  2128ef:	00 00                	add    BYTE PTR [rax],al
  2128f1:	41 0e                	rex.B (bad) 
  2128f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2128f9:	02 48 c6             	add    cl,BYTE PTR [rax-0x3a]
  2128fc:	0c 07                	or     al,0x7
  2128fe:	08 00                	or     BYTE PTR [rax],al
  212900:	1c 00                	sbb    al,0x0
  212902:	00 00                	add    BYTE PTR [rax],al
  212904:	04 09                	add    al,0x9
  212906:	00 00                	add    BYTE PTR [rax],al
  212908:	7b 69                	jnp    212973 <__kernel_end+0x973>
  21290a:	ff                   	(bad)  
  21290b:	ff                   	(bad)  
  21290c:	ed                   	in     eax,dx
  21290d:	00 00                	add    BYTE PTR [rax],al
  21290f:	00 00                	add    BYTE PTR [rax],al
  212911:	41 0e                	rex.B (bad) 
  212913:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212919:	02 e8                	add    ch,al
  21291b:	c6                   	(bad)  
  21291c:	0c 07                	or     al,0x7
  21291e:	08 00                	or     BYTE PTR [rax],al
  212920:	1c 00                	sbb    al,0x0
  212922:	00 00                	add    BYTE PTR [rax],al
  212924:	24 09                	and    al,0x9
  212926:	00 00                	add    BYTE PTR [rax],al
  212928:	48 6a ff             	rex.W push 0xffffffffffffffff
  21292b:	ff b3 00 00 00 00    	push   QWORD PTR [rbx+0x0]
  212931:	41 0e                	rex.B (bad) 
  212933:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212939:	02 ae c6 0c 07 08    	add    ch,BYTE PTR [rsi+0x8070cc6]
  21293f:	00 18                	add    BYTE PTR [rax],bl
  212941:	00 00                	add    BYTE PTR [rax],al
  212943:	00 44 09 00          	add    BYTE PTR [rcx+rcx*1+0x0],al
  212947:	00 db                	add    bl,bl
  212949:	6a ff                	push   0xffffffffffffffff
  21294b:	ff 48 00             	dec    DWORD PTR [rax+0x0]
  21294e:	00 00                	add    BYTE PTR [rax],al
  212950:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212953:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212959:	00 00                	add    BYTE PTR [rax],al
  21295b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21295e:	00 00                	add    BYTE PTR [rax],al
  212960:	60                   	(bad)  
  212961:	09 00                	or     DWORD PTR [rax],eax
  212963:	00 07                	add    BYTE PTR [rdi],al
  212965:	6b ff ff             	imul   edi,edi,0xffffffff
  212968:	ba 00 00 00 00       	mov    edx,0x0
  21296d:	41 0e                	rex.B (bad) 
  21296f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212975:	02 b5 c6 0c 07 08    	add    dh,BYTE PTR [rbp+0x8070cc6]
  21297b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21297e:	00 00                	add    BYTE PTR [rax],al
  212980:	80 09 00             	or     BYTE PTR [rcx],0x0
  212983:	00 a1 6b ff ff 99    	add    BYTE PTR [rcx-0x66000095],ah
  212989:	01 00                	add    DWORD PTR [rax],eax
  21298b:	00 00                	add    BYTE PTR [rax],al
  21298d:	41 0e                	rex.B (bad) 
  21298f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212995:	03 94 01 c6 0c 07 08 	add    edx,DWORD PTR [rcx+rax*1+0x8070cc6]
  21299c:	1c 00                	sbb    al,0x0
  21299e:	00 00                	add    BYTE PTR [rax],al
  2129a0:	a0 09 00 00 1a 6d ff 	movabs al,ds:0x2bffff6d1a000009
  2129a7:	ff 2b 
  2129a9:	00 00                	add    BYTE PTR [rax],al
  2129ab:	00 00                	add    BYTE PTR [rax],al
  2129ad:	41 0e                	rex.B (bad) 
  2129af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2129b5:	66 c6                	data16 (bad) 
  2129b7:	0c 07                	or     al,0x7
  2129b9:	08 00                	or     BYTE PTR [rax],al
  2129bb:	00 20                	add    BYTE PTR [rax],ah
  2129bd:	00 00                	add    BYTE PTR [rax],al
  2129bf:	00 c0                	add    al,al
  2129c1:	09 00                	or     DWORD PTR [rax],eax
  2129c3:	00 25 6d ff ff 85    	add    BYTE PTR [rip+0xffffffff85ffff6d],ah        # ffffffff86212936 <__kernel_end+0xffffffff86000936>
  2129c9:	00 00                	add    BYTE PTR [rax],al
  2129cb:	00 00                	add    BYTE PTR [rax],al
  2129cd:	41 0e                	rex.B (bad) 
  2129cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2129d5:	02 80 c6 0c 07 08    	add    al,BYTE PTR [rax+0x8070cc6]
  2129db:	00 00                	add    BYTE PTR [rax],al
  2129dd:	00 00                	add    BYTE PTR [rax],al
  2129df:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2129e2:	00 00                	add    BYTE PTR [rax],al
  2129e4:	e4 09                	in     al,0x9
  2129e6:	00 00                	add    BYTE PTR [rax],al
  2129e8:	7a 0f                	jp     2129f9 <__kernel_end+0x9f9>
  2129ea:	ff                   	(bad)  
  2129eb:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 2129f1 <__kernel_end+0x9f1>
  2129f1:	41 0e                	rex.B (bad) 
  2129f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2129f9:	60                   	(bad)  
  2129fa:	c6                   	(bad)  
  2129fb:	0c 07                	or     al,0x7
  2129fd:	08 00                	or     BYTE PTR [rax],al
  2129ff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212a02:	00 00                	add    BYTE PTR [rax],al
  212a04:	04 0a                	add    al,0xa
  212a06:	00 00                	add    BYTE PTR [rax],al
  212a08:	80 0f ff             	or     BYTE PTR [rdi],0xff
  212a0b:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
  212a0f:	00 00                	add    BYTE PTR [rax],al
  212a11:	41 0e                	rex.B (bad) 
  212a13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212a19:	02 4f c6             	add    cl,BYTE PTR [rdi-0x3a]
  212a1c:	0c 07                	or     al,0x7
  212a1e:	08 00                	or     BYTE PTR [rax],al
  212a20:	1c 00                	sbb    al,0x0
  212a22:	00 00                	add    BYTE PTR [rax],al
  212a24:	24 0a                	and    al,0xa
  212a26:	00 00                	add    BYTE PTR [rax],al
  212a28:	b4 0f                	mov    ah,0xf
  212a2a:	ff                   	(bad)  
  212a2b:	ff 9d 00 00 00 00    	call   FWORD PTR [rbp+0x0]
  212a31:	41 0e                	rex.B (bad) 
  212a33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212a39:	02 98 c6 0c 07 08    	add    bl,BYTE PTR [rax+0x8070cc6]
  212a3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212a42:	00 00                	add    BYTE PTR [rax],al
  212a44:	44 0a 00             	or     r8b,BYTE PTR [rax]
  212a47:	00 31                	add    BYTE PTR [rcx],dh
  212a49:	10 ff                	adc    bh,bh
  212a4b:	ff                   	(bad)  
  212a4c:	7d 00                	jge    212a4e <__kernel_end+0xa4e>
  212a4e:	00 00                	add    BYTE PTR [rax],al
  212a50:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212a53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212a59:	02 78 c6             	add    bh,BYTE PTR [rax-0x3a]
  212a5c:	0c 07                	or     al,0x7
  212a5e:	08 00                	or     BYTE PTR [rax],al
  212a60:	1c 00                	sbb    al,0x0
  212a62:	00 00                	add    BYTE PTR [rax],al
  212a64:	64 0a 00             	or     al,BYTE PTR fs:[rax]
  212a67:	00 8e 10 ff ff 47    	add    BYTE PTR [rsi+0x47ffff10],cl
  212a6d:	00 00                	add    BYTE PTR [rax],al
  212a6f:	00 00                	add    BYTE PTR [rax],al
  212a71:	41 0e                	rex.B (bad) 
  212a73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212a79:	02 42 c6             	add    al,BYTE PTR [rdx-0x3a]
  212a7c:	0c 07                	or     al,0x7
  212a7e:	08 00                	or     BYTE PTR [rax],al
  212a80:	1c 00                	sbb    al,0x0
  212a82:	00 00                	add    BYTE PTR [rax],al
  212a84:	84 0a                	test   BYTE PTR [rdx],cl
  212a86:	00 00                	add    BYTE PTR [rax],al
  212a88:	b5 10                	mov    ch,0x10
  212a8a:	ff                   	(bad)  
  212a8b:	ff 45 00             	inc    DWORD PTR [rbp+0x0]
  212a8e:	00 00                	add    BYTE PTR [rax],al
  212a90:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212a93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212a99:	02 40 c6             	add    al,BYTE PTR [rax-0x3a]
  212a9c:	0c 07                	or     al,0x7
  212a9e:	08 00                	or     BYTE PTR [rax],al
  212aa0:	1c 00                	sbb    al,0x0
  212aa2:	00 00                	add    BYTE PTR [rax],al
  212aa4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  212aa5:	0a 00                	or     al,BYTE PTR [rax]
  212aa7:	00 da                	add    dl,bl
  212aa9:	10 ff                	adc    bh,bh
  212aab:	ff 5b 00             	call   FWORD PTR [rbx+0x0]
  212aae:	00 00                	add    BYTE PTR [rax],al
  212ab0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212ab3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212ab9:	02 56 c6             	add    dl,BYTE PTR [rsi-0x3a]
  212abc:	0c 07                	or     al,0x7
  212abe:	08 00                	or     BYTE PTR [rax],al
  212ac0:	1c 00                	sbb    al,0x0
  212ac2:	00 00                	add    BYTE PTR [rax],al
  212ac4:	c4                   	(bad)  
  212ac5:	0a 00                	or     al,BYTE PTR [rax]
  212ac7:	00 15 11 ff ff 47    	add    BYTE PTR [rip+0x47ffff11],dl        # 482129de <__kernel_end+0x480009de>
  212acd:	00 00                	add    BYTE PTR [rax],al
  212acf:	00 00                	add    BYTE PTR [rax],al
  212ad1:	41 0e                	rex.B (bad) 
  212ad3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212ad9:	02 42 c6             	add    al,BYTE PTR [rdx-0x3a]
  212adc:	0c 07                	or     al,0x7
  212ade:	08 00                	or     BYTE PTR [rax],al
  212ae0:	1c 00                	sbb    al,0x0
  212ae2:	00 00                	add    BYTE PTR [rax],al
  212ae4:	e4 0a                	in     al,0xa
  212ae6:	00 00                	add    BYTE PTR [rax],al
  212ae8:	3c 11                	cmp    al,0x11
  212aea:	ff                   	(bad)  
  212aeb:	ff 2a                	jmp    FWORD PTR [rdx]
  212aed:	00 00                	add    BYTE PTR [rax],al
  212aef:	00 00                	add    BYTE PTR [rax],al
  212af1:	41 0e                	rex.B (bad) 
  212af3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212af9:	65 c6                	gs (bad) 
  212afb:	0c 07                	or     al,0x7
  212afd:	08 00                	or     BYTE PTR [rax],al
  212aff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212b02:	00 00                	add    BYTE PTR [rax],al
  212b04:	04 0b                	add    al,0xb
  212b06:	00 00                	add    BYTE PTR [rax],al
  212b08:	46 11 ff             	rex.RX adc edi,r15d
  212b0b:	ff 21                	jmp    QWORD PTR [rcx]
  212b0d:	00 00                	add    BYTE PTR [rax],al
  212b0f:	00 00                	add    BYTE PTR [rax],al
  212b11:	41 0e                	rex.B (bad) 
  212b13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212b19:	5c                   	pop    rsp
  212b1a:	c6                   	(bad)  
  212b1b:	0c 07                	or     al,0x7
  212b1d:	08 00                	or     BYTE PTR [rax],al
  212b1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212b22:	00 00                	add    BYTE PTR [rax],al
  212b24:	24 0b                	and    al,0xb
  212b26:	00 00                	add    BYTE PTR [rax],al
  212b28:	47 11 ff             	rex.RXB adc r15d,r15d
  212b2b:	ff 1e                	call   FWORD PTR [rsi]
  212b2d:	00 00                	add    BYTE PTR [rax],al
  212b2f:	00 00                	add    BYTE PTR [rax],al
  212b31:	41 0e                	rex.B (bad) 
  212b33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212b39:	59                   	pop    rcx
  212b3a:	c6                   	(bad)  
  212b3b:	0c 07                	or     al,0x7
  212b3d:	08 00                	or     BYTE PTR [rax],al
  212b3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212b42:	00 00                	add    BYTE PTR [rax],al
  212b44:	44 0b 00             	or     r8d,DWORD PTR [rax]
  212b47:	00 45 11             	add    BYTE PTR [rbp+0x11],al
  212b4a:	ff                   	(bad)  
  212b4b:	ff 23                	jmp    QWORD PTR [rbx]
  212b4d:	00 00                	add    BYTE PTR [rax],al
  212b4f:	00 00                	add    BYTE PTR [rax],al
  212b51:	41 0e                	rex.B (bad) 
  212b53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212b59:	5e                   	pop    rsi
  212b5a:	c6                   	(bad)  
  212b5b:	0c 07                	or     al,0x7
  212b5d:	08 00                	or     BYTE PTR [rax],al
  212b5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212b62:	00 00                	add    BYTE PTR [rax],al
  212b64:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
  212b67:	00 48 11             	add    BYTE PTR [rax+0x11],cl
  212b6a:	ff                   	(bad)  
  212b6b:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
  212b6e:	00 00                	add    BYTE PTR [rax],al
  212b70:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212b73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212b79:	02 42 c6             	add    al,BYTE PTR [rdx-0x3a]
  212b7c:	0c 07                	or     al,0x7
  212b7e:	08 00                	or     BYTE PTR [rax],al
  212b80:	1c 00                	sbb    al,0x0
  212b82:	00 00                	add    BYTE PTR [rax],al
  212b84:	84 0b                	test   BYTE PTR [rbx],cl
  212b86:	00 00                	add    BYTE PTR [rax],al
  212b88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  212b89:	11 ff                	adc    edi,edi
  212b8b:	ff 2b                	jmp    FWORD PTR [rbx]
  212b8d:	00 00                	add    BYTE PTR [rax],al
  212b8f:	00 00                	add    BYTE PTR [rax],al
  212b91:	41 0e                	rex.B (bad) 
  212b93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212b99:	66 c6                	data16 (bad) 
  212b9b:	0c 07                	or     al,0x7
  212b9d:	08 00                	or     BYTE PTR [rax],al
  212b9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212ba2:	00 00                	add    BYTE PTR [rax],al
  212ba4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  212ba5:	0b 00                	or     eax,DWORD PTR [rax]
  212ba7:	00 7a 11             	add    BYTE PTR [rdx+0x11],bh
  212baa:	ff                   	(bad)  
  212bab:	ff 2a                	jmp    FWORD PTR [rdx]
  212bad:	00 00                	add    BYTE PTR [rax],al
  212baf:	00 00                	add    BYTE PTR [rax],al
  212bb1:	41 0e                	rex.B (bad) 
  212bb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212bb9:	65 c6                	gs (bad) 
  212bbb:	0c 07                	or     al,0x7
  212bbd:	08 00                	or     BYTE PTR [rax],al
  212bbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212bc2:	00 00                	add    BYTE PTR [rax],al
  212bc4:	c4                   	(bad)  
  212bc5:	0b 00                	or     eax,DWORD PTR [rax]
  212bc7:	00 84 11 ff ff 35 00 	add    BYTE PTR [rcx+rdx*1+0x35ffff],al
  212bce:	00 00                	add    BYTE PTR [rax],al
  212bd0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212bd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212bd9:	70 c6                	jo     212ba1 <__kernel_end+0xba1>
  212bdb:	0c 07                	or     al,0x7
  212bdd:	08 00                	or     BYTE PTR [rax],al
  212bdf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212be2:	00 00                	add    BYTE PTR [rax],al
  212be4:	e4 0b                	in     al,0xb
  212be6:	00 00                	add    BYTE PTR [rax],al
  212be8:	99                   	cdq    
  212be9:	11 ff                	adc    edi,edi
  212beb:	ff 21                	jmp    QWORD PTR [rcx]
  212bed:	00 00                	add    BYTE PTR [rax],al
  212bef:	00 00                	add    BYTE PTR [rax],al
  212bf1:	41 0e                	rex.B (bad) 
  212bf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212bf9:	5c                   	pop    rsp
  212bfa:	c6                   	(bad)  
  212bfb:	0c 07                	or     al,0x7
  212bfd:	08 00                	or     BYTE PTR [rax],al
  212bff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212c02:	00 00                	add    BYTE PTR [rax],al
  212c04:	04 0c                	add    al,0xc
  212c06:	00 00                	add    BYTE PTR [rax],al
  212c08:	9a                   	(bad)  
  212c09:	11 ff                	adc    edi,edi
  212c0b:	ff 1e                	call   FWORD PTR [rsi]
  212c0d:	00 00                	add    BYTE PTR [rax],al
  212c0f:	00 00                	add    BYTE PTR [rax],al
  212c11:	41 0e                	rex.B (bad) 
  212c13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212c19:	59                   	pop    rcx
  212c1a:	c6                   	(bad)  
  212c1b:	0c 07                	or     al,0x7
  212c1d:	08 00                	or     BYTE PTR [rax],al
  212c1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212c22:	00 00                	add    BYTE PTR [rax],al
  212c24:	24 0c                	and    al,0xc
  212c26:	00 00                	add    BYTE PTR [rax],al
  212c28:	98                   	cwde   
  212c29:	11 ff                	adc    edi,edi
  212c2b:	ff 0e                	dec    DWORD PTR [rsi]
  212c2d:	00 00                	add    BYTE PTR [rax],al
  212c2f:	00 00                	add    BYTE PTR [rax],al
  212c31:	41 0e                	rex.B (bad) 
  212c33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212c39:	49 c6                	rex.WB (bad) 
  212c3b:	0c 07                	or     al,0x7
  212c3d:	08 00                	or     BYTE PTR [rax],al
  212c3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212c42:	00 00                	add    BYTE PTR [rax],al
  212c44:	44 0c 00             	rex.R or al,0x0
  212c47:	00 86 11 ff ff 34    	add    BYTE PTR [rsi+0x34ffff11],al
  212c4d:	00 00                	add    BYTE PTR [rax],al
  212c4f:	00 00                	add    BYTE PTR [rax],al
  212c51:	41 0e                	rex.B (bad) 
  212c53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212c59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  212c5a:	c6                   	(bad)  
  212c5b:	0c 07                	or     al,0x7
  212c5d:	08 00                	or     BYTE PTR [rax],al
  212c5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212c62:	00 00                	add    BYTE PTR [rax],al
  212c64:	64 0c 00             	fs or  al,0x0
  212c67:	00 9a 11 ff ff f1    	add    BYTE PTR [rdx-0xe0000ef],bl
  212c6d:	00 00                	add    BYTE PTR [rax],al
  212c6f:	00 00                	add    BYTE PTR [rax],al
  212c71:	41 0e                	rex.B (bad) 
  212c73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212c79:	02 ec                	add    ch,ah
  212c7b:	c6                   	(bad)  
  212c7c:	0c 07                	or     al,0x7
  212c7e:	08 00                	or     BYTE PTR [rax],al
  212c80:	1c 00                	sbb    al,0x0
  212c82:	00 00                	add    BYTE PTR [rax],al
  212c84:	84 0c 00             	test   BYTE PTR [rax+rax*1],cl
  212c87:	00 6b 12             	add    BYTE PTR [rbx+0x12],ch
  212c8a:	ff                   	(bad)  
  212c8b:	ff 5a 00             	call   FWORD PTR [rdx+0x0]
  212c8e:	00 00                	add    BYTE PTR [rax],al
  212c90:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212c93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212c99:	02 55 c6             	add    dl,BYTE PTR [rbp-0x3a]
  212c9c:	0c 07                	or     al,0x7
  212c9e:	08 00                	or     BYTE PTR [rax],al
  212ca0:	1c 00                	sbb    al,0x0
  212ca2:	00 00                	add    BYTE PTR [rax],al
  212ca4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  212ca5:	0c 00                	or     al,0x0
  212ca7:	00 a5 12 ff ff 5c    	add    BYTE PTR [rbp+0x5cffff12],ah
  212cad:	00 00                	add    BYTE PTR [rax],al
  212caf:	00 00                	add    BYTE PTR [rax],al
  212cb1:	41 0e                	rex.B (bad) 
  212cb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212cb9:	02 57 c6             	add    dl,BYTE PTR [rdi-0x3a]
  212cbc:	0c 07                	or     al,0x7
  212cbe:	08 00                	or     BYTE PTR [rax],al
  212cc0:	1c 00                	sbb    al,0x0
  212cc2:	00 00                	add    BYTE PTR [rax],al
  212cc4:	c4                   	(bad)  
  212cc5:	0c 00                	or     al,0x0
  212cc7:	00 e1                	add    cl,ah
  212cc9:	12 ff                	adc    bh,bh
  212ccb:	ff 16                	call   QWORD PTR [rsi]
  212ccd:	00 00                	add    BYTE PTR [rax],al
  212ccf:	00 00                	add    BYTE PTR [rax],al
  212cd1:	41 0e                	rex.B (bad) 
  212cd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212cd9:	51                   	push   rcx
  212cda:	c6                   	(bad)  
  212cdb:	0c 07                	or     al,0x7
  212cdd:	08 00                	or     BYTE PTR [rax],al
  212cdf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212ce2:	00 00                	add    BYTE PTR [rax],al
  212ce4:	e4 0c                	in     al,0xc
  212ce6:	00 00                	add    BYTE PTR [rax],al
  212ce8:	d7                   	xlat   BYTE PTR ds:[rbx]
  212ce9:	12 ff                	adc    bh,bh
  212ceb:	ff aa 00 00 00 00    	jmp    FWORD PTR [rdx+0x0]
  212cf1:	41 0e                	rex.B (bad) 
  212cf3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212cf9:	02 a5 c6 0c 07 08    	add    ah,BYTE PTR [rbp+0x8070cc6]
  212cff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212d02:	00 00                	add    BYTE PTR [rax],al
  212d04:	04 0d                	add    al,0xd
  212d06:	00 00                	add    BYTE PTR [rax],al
  212d08:	61                   	(bad)  
  212d09:	13 ff                	adc    edi,edi
  212d0b:	ff 94 00 00 00 00 41 	call   QWORD PTR [rax+rax*1+0x41000000]
  212d12:	0e                   	(bad)  
  212d13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212d19:	02 8f c6 0c 07 08    	add    cl,BYTE PTR [rdi+0x8070cc6]
  212d1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212d22:	00 00                	add    BYTE PTR [rax],al
  212d24:	24 0d                	and    al,0xd
  212d26:	00 00                	add    BYTE PTR [rax],al
  212d28:	d5                   	(bad)  
  212d29:	13 ff                	adc    edi,edi
  212d2b:	ff 94 00 00 00 00 41 	call   QWORD PTR [rax+rax*1+0x41000000]
  212d32:	0e                   	(bad)  
  212d33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212d39:	02 8f c6 0c 07 08    	add    cl,BYTE PTR [rdi+0x8070cc6]
  212d3f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212d42:	00 00                	add    BYTE PTR [rax],al
  212d44:	44 0d 00 00 49 14    	rex.R or eax,0x14490000
  212d4a:	ff                   	(bad)  
  212d4b:	ff 92 00 00 00 00    	call   QWORD PTR [rdx+0x0]
  212d51:	41 0e                	rex.B (bad) 
  212d53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212d59:	02 8d c6 0c 07 08    	add    cl,BYTE PTR [rbp+0x8070cc6]
  212d5f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212d62:	00 00                	add    BYTE PTR [rax],al
  212d64:	64 0d 00 00 bb 14    	fs or  eax,0x14bb0000
  212d6a:	ff                   	(bad)  
  212d6b:	ff 0e                	dec    DWORD PTR [rsi]
  212d6d:	00 00                	add    BYTE PTR [rax],al
  212d6f:	00 00                	add    BYTE PTR [rax],al
  212d71:	41 0e                	rex.B (bad) 
  212d73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212d79:	49 c6                	rex.WB (bad) 
  212d7b:	0c 07                	or     al,0x7
  212d7d:	08 00                	or     BYTE PTR [rax],al
  212d7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212d82:	00 00                	add    BYTE PTR [rax],al
  212d84:	84 0d 00 00 a9 14    	test   BYTE PTR [rip+0x14a90000],cl        # 14ca2d8a <__kernel_end+0x14a90d8a>
  212d8a:	ff                   	(bad)  
  212d8b:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
  212d8e:	00 00                	add    BYTE PTR [rax],al
  212d90:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212d93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212d99:	47 c6                	rex.RXB (bad) 
  212d9b:	0c 07                	or     al,0x7
  212d9d:	08 00                	or     BYTE PTR [rax],al
  212d9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212da2:	00 00                	add    BYTE PTR [rax],al
  212da4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  212da5:	0d 00 00 95 14       	or     eax,0x14950000
  212daa:	ff                   	(bad)  
  212dab:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
  212dae:	00 00                	add    BYTE PTR [rax],al
  212db0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212db3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212db9:	47 c6                	rex.RXB (bad) 
  212dbb:	0c 07                	or     al,0x7
  212dbd:	08 00                	or     BYTE PTR [rax],al
  212dbf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212dc2:	00 00                	add    BYTE PTR [rax],al
  212dc4:	c4                   	(bad)  
  212dc5:	0d 00 00 81 14       	or     eax,0x14810000
  212dca:	ff                   	(bad)  
  212dcb:	ff 21                	jmp    QWORD PTR [rcx]
  212dcd:	00 00                	add    BYTE PTR [rax],al
  212dcf:	00 00                	add    BYTE PTR [rax],al
  212dd1:	41 0e                	rex.B (bad) 
  212dd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212dd9:	5c                   	pop    rsp
  212dda:	c6                   	(bad)  
  212ddb:	0c 07                	or     al,0x7
  212ddd:	08 00                	or     BYTE PTR [rax],al
  212ddf:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212de2:	00 00                	add    BYTE PTR [rax],al
  212de4:	e4 0d                	in     al,0xd
  212de6:	00 00                	add    BYTE PTR [rax],al
  212de8:	82                   	(bad)  
  212de9:	14 ff                	adc    al,0xff
  212deb:	ff 20                	jmp    QWORD PTR [rax]
  212ded:	00 00                	add    BYTE PTR [rax],al
  212def:	00 00                	add    BYTE PTR [rax],al
  212df1:	41 0e                	rex.B (bad) 
  212df3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212df9:	5b                   	pop    rbx
  212dfa:	c6                   	(bad)  
  212dfb:	0c 07                	or     al,0x7
  212dfd:	08 00                	or     BYTE PTR [rax],al
  212dff:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212e02:	00 00                	add    BYTE PTR [rax],al
  212e04:	04 0e                	add    al,0xe
  212e06:	00 00                	add    BYTE PTR [rax],al
  212e08:	82                   	(bad)  
  212e09:	14 ff                	adc    al,0xff
  212e0b:	ff                   	(bad)  
  212e0c:	bd 00 00 00 00       	mov    ebp,0x0
  212e11:	41 0e                	rex.B (bad) 
  212e13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212e19:	02 b8 c6 0c 07 08    	add    bh,BYTE PTR [rax+0x8070cc6]
  212e1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212e22:	00 00                	add    BYTE PTR [rax],al
  212e24:	24 0e                	and    al,0xe
  212e26:	00 00                	add    BYTE PTR [rax],al
  212e28:	1f                   	(bad)  
  212e29:	15 ff ff 4a 00       	adc    eax,0x4affff
  212e2e:	00 00                	add    BYTE PTR [rax],al
  212e30:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212e33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212e39:	02 45 c6             	add    al,BYTE PTR [rbp-0x3a]
  212e3c:	0c 07                	or     al,0x7
  212e3e:	08 00                	or     BYTE PTR [rax],al
  212e40:	1c 00                	sbb    al,0x0
  212e42:	00 00                	add    BYTE PTR [rax],al
  212e44:	44 0e                	rex.R (bad) 
  212e46:	00 00                	add    BYTE PTR [rax],al
  212e48:	49 15 ff ff 4a 00    	rex.WB adc rax,0x4affff
  212e4e:	00 00                	add    BYTE PTR [rax],al
  212e50:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212e53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212e59:	02 45 c6             	add    al,BYTE PTR [rbp-0x3a]
  212e5c:	0c 07                	or     al,0x7
  212e5e:	08 00                	or     BYTE PTR [rax],al
  212e60:	1c 00                	sbb    al,0x0
  212e62:	00 00                	add    BYTE PTR [rax],al
  212e64:	64 0e                	fs (bad) 
  212e66:	00 00                	add    BYTE PTR [rax],al
  212e68:	73 15                	jae    212e7f <__kernel_end+0xe7f>
  212e6a:	ff                   	(bad)  
  212e6b:	ff 21                	jmp    QWORD PTR [rcx]
  212e6d:	00 00                	add    BYTE PTR [rax],al
  212e6f:	00 00                	add    BYTE PTR [rax],al
  212e71:	41 0e                	rex.B (bad) 
  212e73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212e79:	5c                   	pop    rsp
  212e7a:	c6                   	(bad)  
  212e7b:	0c 07                	or     al,0x7
  212e7d:	08 00                	or     BYTE PTR [rax],al
  212e7f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212e82:	00 00                	add    BYTE PTR [rax],al
  212e84:	84 0e                	test   BYTE PTR [rsi],cl
  212e86:	00 00                	add    BYTE PTR [rax],al
  212e88:	74 15                	je     212e9f <__kernel_end+0xe9f>
  212e8a:	ff                   	(bad)  
  212e8b:	ff 26                	jmp    QWORD PTR [rsi]
  212e8d:	00 00                	add    BYTE PTR [rax],al
  212e8f:	00 00                	add    BYTE PTR [rax],al
  212e91:	41 0e                	rex.B (bad) 
  212e93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212e99:	61                   	(bad)  
  212e9a:	c6                   	(bad)  
  212e9b:	0c 07                	or     al,0x7
  212e9d:	08 00                	or     BYTE PTR [rax],al
  212e9f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  212ea2:	00 00                	add    BYTE PTR [rax],al
  212ea4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
  212ea5:	0e                   	(bad)  
  212ea6:	00 00                	add    BYTE PTR [rax],al
  212ea8:	7a 15                	jp     212ebf <__kernel_end+0xebf>
  212eaa:	ff                   	(bad)  
  212eab:	ff 60 01             	jmp    QWORD PTR [rax+0x1]
  212eae:	00 00                	add    BYTE PTR [rax],al
  212eb0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212eb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212eb9:	03 5b 01             	add    ebx,DWORD PTR [rbx+0x1]
  212ebc:	c6                   	(bad)  
  212ebd:	0c 07                	or     al,0x7
  212ebf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  212ec2:	00 00                	add    BYTE PTR [rax],al
  212ec4:	c4                   	(bad)  
  212ec5:	0e                   	(bad)  
  212ec6:	00 00                	add    BYTE PTR [rax],al
  212ec8:	ba 16 ff ff 6d       	mov    edx,0x6dffff16
  212ecd:	00 00                	add    BYTE PTR [rax],al
  212ecf:	00 00                	add    BYTE PTR [rax],al
  212ed1:	41 0e                	rex.B (bad) 
  212ed3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212ed9:	02 68 c6             	add    ch,BYTE PTR [rax-0x3a]
  212edc:	0c 07                	or     al,0x7
  212ede:	08 00                	or     BYTE PTR [rax],al
  212ee0:	20 00                	and    BYTE PTR [rax],al
  212ee2:	00 00                	add    BYTE PTR [rax],al
  212ee4:	e4 0e                	in     al,0xe
  212ee6:	00 00                	add    BYTE PTR [rax],al
  212ee8:	07                   	(bad)  
  212ee9:	17                   	(bad)  
  212eea:	ff                   	(bad)  
  212eeb:	ff 93 00 00 00 00    	call   QWORD PTR [rbx+0x0]
  212ef1:	41 0e                	rex.B (bad) 
  212ef3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212ef9:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  212efd:	89 c6                	mov    esi,eax
  212eff:	c3                   	ret    
  212f00:	0c 07                	or     al,0x7
  212f02:	08 00                	or     BYTE PTR [rax],al
  212f04:	1c 00                	sbb    al,0x0
  212f06:	00 00                	add    BYTE PTR [rax],al
  212f08:	08 0f                	or     BYTE PTR [rdi],cl
  212f0a:	00 00                	add    BYTE PTR [rax],al
  212f0c:	76 17                	jbe    212f25 <__kernel_end+0xf25>
  212f0e:	ff                   	(bad)  
  212f0f:	ff                   	(bad)  
  212f10:	da 00                	fiadd  DWORD PTR [rax]
  212f12:	00 00                	add    BYTE PTR [rax],al
  212f14:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212f17:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212f1d:	02 d5                	add    dl,ch
  212f1f:	c6                   	(bad)  
  212f20:	0c 07                	or     al,0x7
  212f22:	08 00                	or     BYTE PTR [rax],al
  212f24:	20 00                	and    BYTE PTR [rax],al
  212f26:	00 00                	add    BYTE PTR [rax],al
  212f28:	28 0f                	sub    BYTE PTR [rdi],cl
  212f2a:	00 00                	add    BYTE PTR [rax],al
  212f2c:	30 18                	xor    BYTE PTR [rax],bl
  212f2e:	ff                   	(bad)  
  212f2f:	ff a1 01 00 00 00    	jmp    QWORD PTR [rcx+0x1]
  212f35:	41 0e                	rex.B (bad) 
  212f37:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212f3d:	48 83 03 03          	add    QWORD PTR [rbx],0x3
  212f41:	94                   	xchg   esp,eax
  212f42:	01 c6                	add    esi,eax
  212f44:	c3                   	ret    
  212f45:	0c 07                	or     al,0x7
  212f47:	08 20                	or     BYTE PTR [rax],ah
  212f49:	00 00                	add    BYTE PTR [rax],al
  212f4b:	00 4c 0f 00          	add    BYTE PTR [rdi+rcx*1+0x0],cl
  212f4f:	00 ad 19 ff ff a1    	add    BYTE PTR [rbp-0x5e0000e7],ch
  212f55:	01 00                	add    DWORD PTR [rax],eax
  212f57:	00 00                	add    BYTE PTR [rax],al
  212f59:	41 0e                	rex.B (bad) 
  212f5b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212f61:	48 83 03 03          	add    QWORD PTR [rbx],0x3
  212f65:	94                   	xchg   esp,eax
  212f66:	01 c6                	add    esi,eax
  212f68:	c3                   	ret    
  212f69:	0c 07                	or     al,0x7
  212f6b:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  212f6e:	00 00                	add    BYTE PTR [rax],al
  212f70:	70 0f                	jo     212f81 <__kernel_end+0xf81>
  212f72:	00 00                	add    BYTE PTR [rax],al
  212f74:	2a 1b                	sub    bl,BYTE PTR [rbx]
  212f76:	ff                   	(bad)  
  212f77:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
  212f7a:	00 00                	add    BYTE PTR [rax],al
  212f7c:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212f7f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212f85:	02 5d c6             	add    bl,BYTE PTR [rbp-0x3a]
  212f88:	0c 07                	or     al,0x7
  212f8a:	08 00                	or     BYTE PTR [rax],al
  212f8c:	20 00                	and    BYTE PTR [rax],al
  212f8e:	00 00                	add    BYTE PTR [rax],al
  212f90:	90                   	nop
  212f91:	0f 00 00             	sldt   WORD PTR [rax]
  212f94:	6c                   	ins    BYTE PTR es:[rdi],dx
  212f95:	1b ff                	sbb    edi,edi
  212f97:	ff d6                	call   rsi
  212f99:	00 00                	add    BYTE PTR [rax],al
  212f9b:	00 00                	add    BYTE PTR [rax],al
  212f9d:	41 0e                	rex.B (bad) 
  212f9f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212fa5:	45 83 03 02          	rex.RB add DWORD PTR [r11],0x2
  212fa9:	cc                   	int3   
  212faa:	c6 c3 0c             	mov    bl,0xc
  212fad:	07                   	(bad)  
  212fae:	08 00                	or     BYTE PTR [rax],al
  212fb0:	1c 00                	sbb    al,0x0
  212fb2:	00 00                	add    BYTE PTR [rax],al
  212fb4:	b4 0f                	mov    ah,0xf
  212fb6:	00 00                	add    BYTE PTR [rax],al
  212fb8:	1e                   	(bad)  
  212fb9:	1c ff                	sbb    al,0xff
  212fbb:	ff 8b 01 00 00 00    	dec    DWORD PTR [rbx+0x1]
  212fc1:	41 0e                	rex.B (bad) 
  212fc3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212fc9:	03 86 01 c6 0c 07    	add    eax,DWORD PTR [rsi+0x70cc601]
  212fcf:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  212fd2:	00 00                	add    BYTE PTR [rax],al
  212fd4:	d4                   	(bad)  
  212fd5:	0f 00 00             	sldt   WORD PTR [rax]
  212fd8:	89 1d ff ff aa 02    	mov    DWORD PTR [rip+0x2aaffff],ebx        # 2cc2fdd <__kernel_end+0x2ab0fdd>
  212fde:	00 00                	add    BYTE PTR [rax],al
  212fe0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  212fe3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  212fe9:	03 a5 02 c6 0c 07    	add    esp,DWORD PTR [rbp+0x70cc602]
  212fef:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  212ff2:	00 00                	add    BYTE PTR [rax],al
  212ff4:	f4                   	hlt    
  212ff5:	0f 00 00             	sldt   WORD PTR [rax]
  212ff8:	13 20                	adc    esp,DWORD PTR [rax]
  212ffa:	ff                   	(bad)  
  212ffb:	ff 29                	jmp    FWORD PTR [rcx]
  212ffd:	00 00                	add    BYTE PTR [rax],al
  212fff:	00 00                	add    BYTE PTR [rax],al
  213001:	41 0e                	rex.B (bad) 
  213003:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213009:	64 c6                	fs (bad) 
  21300b:	0c 07                	or     al,0x7
  21300d:	08 00                	or     BYTE PTR [rax],al
  21300f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  213012:	00 00                	add    BYTE PTR [rax],al
  213014:	14 10                	adc    al,0x10
  213016:	00 00                	add    BYTE PTR [rax],al
  213018:	1c 20                	sbb    al,0x20
  21301a:	ff                   	(bad)  
  21301b:	ff 27                	jmp    QWORD PTR [rdi]
  21301d:	00 00                	add    BYTE PTR [rax],al
  21301f:	00 00                	add    BYTE PTR [rax],al
  213021:	41 0e                	rex.B (bad) 
  213023:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213029:	62                   	(bad)  
  21302a:	c6                   	(bad)  
  21302b:	0c 07                	or     al,0x7
  21302d:	08 00                	or     BYTE PTR [rax],al
  21302f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  213032:	00 00                	add    BYTE PTR [rax],al
  213034:	34 10                	xor    al,0x10
  213036:	00 00                	add    BYTE PTR [rax],al
  213038:	23 20                	and    esp,DWORD PTR [rax]
  21303a:	ff                   	(bad)  
  21303b:	ff 30                	push   QWORD PTR [rax]
  21303d:	00 00                	add    BYTE PTR [rax],al
  21303f:	00 00                	add    BYTE PTR [rax],al
  213041:	41 0e                	rex.B (bad) 
  213043:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213049:	6b c6 0c             	imul   eax,esi,0xc
  21304c:	07                   	(bad)  
  21304d:	08 00                	or     BYTE PTR [rax],al
  21304f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  213052:	00 00                	add    BYTE PTR [rax],al
  213054:	54                   	push   rsp
  213055:	10 00                	adc    BYTE PTR [rax],al
  213057:	00 33                	add    BYTE PTR [rbx],dh
  213059:	20 ff                	and    bh,bh
  21305b:	ff 27                	jmp    QWORD PTR [rdi]
  21305d:	00 00                	add    BYTE PTR [rax],al
  21305f:	00 00                	add    BYTE PTR [rax],al
  213061:	41 0e                	rex.B (bad) 
  213063:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213069:	62                   	(bad)  
  21306a:	c6                   	(bad)  
  21306b:	0c 07                	or     al,0x7
  21306d:	08 00                	or     BYTE PTR [rax],al
  21306f:	00 20                	add    BYTE PTR [rax],ah
  213071:	00 00                	add    BYTE PTR [rax],al
  213073:	00 74 10 00          	add    BYTE PTR [rax+rdx*1+0x0],dh
  213077:	00 3a                	add    BYTE PTR [rdx],bh
  213079:	20 ff                	and    bh,bh
  21307b:	ff 37                	push   QWORD PTR [rdi]
  21307d:	04 00                	add    al,0x0
  21307f:	00 00                	add    BYTE PTR [rax],al
  213081:	41 0e                	rex.B (bad) 
  213083:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213089:	48 83 03 03          	add    QWORD PTR [rbx],0x3
  21308d:	2a 04 c6             	sub    al,BYTE PTR [rsi+rax*8]
  213090:	c3                   	ret    
  213091:	0c 07                	or     al,0x7
  213093:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  213096:	00 00                	add    BYTE PTR [rax],al
  213098:	98                   	cwde   
  213099:	10 00                	adc    BYTE PTR [rax],al
  21309b:	00 4d 24             	add    BYTE PTR [rbp+0x24],cl
  21309e:	ff                   	(bad)  
  21309f:	ff 33                	push   QWORD PTR [rbx]
  2130a1:	00 00                	add    BYTE PTR [rax],al
  2130a3:	00 00                	add    BYTE PTR [rax],al
  2130a5:	41 0e                	rex.B (bad) 
  2130a7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2130ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  2130ae:	c6                   	(bad)  
  2130af:	0c 07                	or     al,0x7
  2130b1:	08 00                	or     BYTE PTR [rax],al
  2130b3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2130b6:	00 00                	add    BYTE PTR [rax],al
  2130b8:	b8 10 00 00 60       	mov    eax,0x60000010
  2130bd:	24 ff                	and    al,0xff
  2130bf:	ff 55 00             	call   QWORD PTR [rbp+0x0]
  2130c2:	00 00                	add    BYTE PTR [rax],al
  2130c4:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2130c7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2130cd:	02 50 c6             	add    dl,BYTE PTR [rax-0x3a]
  2130d0:	0c 07                	or     al,0x7
  2130d2:	08 00                	or     BYTE PTR [rax],al
  2130d4:	1c 00                	sbb    al,0x0
  2130d6:	00 00                	add    BYTE PTR [rax],al
  2130d8:	d8 10                	fcom   DWORD PTR [rax]
  2130da:	00 00                	add    BYTE PTR [rax],al
  2130dc:	95                   	xchg   ebp,eax
  2130dd:	24 ff                	and    al,0xff
  2130df:	ff 0a                	dec    DWORD PTR [rdx]
  2130e1:	1a 00                	sbb    al,BYTE PTR [rax]
  2130e3:	00 00                	add    BYTE PTR [rax],al
  2130e5:	41 0e                	rex.B (bad) 
  2130e7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2130ed:	03 05 1a c6 0c 07    	add    eax,DWORD PTR [rip+0x70cc61a]        # 72df70d <__kernel_end+0x70cd70d>
  2130f3:	08 20                	or     BYTE PTR [rax],ah
  2130f5:	00 00                	add    BYTE PTR [rax],al
  2130f7:	00 f8                	add    al,bh
  2130f9:	10 00                	adc    BYTE PTR [rax],al
  2130fb:	00 7f 3e             	add    BYTE PTR [rdi+0x3e],bh
  2130fe:	ff                   	(bad)  
  2130ff:	ff ad 00 00 00 00    	jmp    FWORD PTR [rbp+0x0]
  213105:	41 0e                	rex.B (bad) 
  213107:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  21310d:	02 a8 c6 0c 07 08    	add    ch,BYTE PTR [rax+0x8070cc6]
  213113:	00 00                	add    BYTE PTR [rax],al
  213115:	00 00                	add    BYTE PTR [rax],al
  213117:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21311a:	00 00                	add    BYTE PTR [rax],al
  21311c:	1c 11                	sbb    al,0x11
  21311e:	00 00                	add    BYTE PTR [rax],al
  213120:	08 3f                	or     BYTE PTR [rdi],bh
  213122:	ff                   	(bad)  
  213123:	ff 43 00             	inc    DWORD PTR [rbx+0x0]
  213126:	00 00                	add    BYTE PTR [rax],al
  213128:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21312b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213131:	7e c6                	jle    2130f9 <__kernel_end+0x10f9>
  213133:	0c 07                	or     al,0x7
  213135:	08 00                	or     BYTE PTR [rax],al
  213137:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21313a:	00 00                	add    BYTE PTR [rax],al
  21313c:	3c 11                	cmp    al,0x11
  21313e:	00 00                	add    BYTE PTR [rax],al
  213140:	2b 3f                	sub    edi,DWORD PTR [rdi]
  213142:	ff                   	(bad)  
  213143:	ff 20                	jmp    QWORD PTR [rax]
  213145:	00 00                	add    BYTE PTR [rax],al
  213147:	00 00                	add    BYTE PTR [rax],al
  213149:	41 0e                	rex.B (bad) 
  21314b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213151:	5b                   	pop    rbx
  213152:	c6                   	(bad)  
  213153:	0c 07                	or     al,0x7
  213155:	08 00                	or     BYTE PTR [rax],al
  213157:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21315a:	00 00                	add    BYTE PTR [rax],al
  21315c:	5c                   	pop    rsp
  21315d:	11 00                	adc    DWORD PTR [rax],eax
  21315f:	00 2b                	add    BYTE PTR [rbx],ch
  213161:	3f                   	(bad)  
  213162:	ff                   	(bad)  
  213163:	ff 20                	jmp    QWORD PTR [rax]
  213165:	00 00                	add    BYTE PTR [rax],al
  213167:	00 00                	add    BYTE PTR [rax],al
  213169:	41 0e                	rex.B (bad) 
  21316b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213171:	5b                   	pop    rbx
  213172:	c6                   	(bad)  
  213173:	0c 07                	or     al,0x7
  213175:	08 00                	or     BYTE PTR [rax],al
  213177:	00 20                	add    BYTE PTR [rax],ah
  213179:	00 00                	add    BYTE PTR [rax],al
  21317b:	00 7c 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],bh
  21317f:	00 2b                	add    BYTE PTR [rbx],ch
  213181:	3f                   	(bad)  
  213182:	ff                   	(bad)  
  213183:	ff 1b                	call   FWORD PTR [rbx]
  213185:	01 00                	add    DWORD PTR [rax],eax
  213187:	00 00                	add    BYTE PTR [rax],al
  213189:	41 0e                	rex.B (bad) 
  21318b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213191:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
  213195:	11 01                	adc    DWORD PTR [rcx],eax
  213197:	c6 c3 0c             	mov    bl,0xc
  21319a:	07                   	(bad)  
  21319b:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21319e:	00 00                	add    BYTE PTR [rax],al
  2131a0:	a0 11 00 00 22 40 ff 	movabs al,ds:0x3dffff4022000011
  2131a7:	ff 3d 
  2131a9:	00 00                	add    BYTE PTR [rax],al
  2131ab:	00 00                	add    BYTE PTR [rax],al
  2131ad:	41 0e                	rex.B (bad) 
  2131af:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2131b5:	78 c6                	js     21317d <__kernel_end+0x117d>
  2131b7:	0c 07                	or     al,0x7
  2131b9:	08 00                	or     BYTE PTR [rax],al
  2131bb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2131be:	00 00                	add    BYTE PTR [rax],al
  2131c0:	c0 11 00             	rcl    BYTE PTR [rcx],0x0
  2131c3:	00 3f                	add    BYTE PTR [rdi],bh
  2131c5:	40 ff                	rex (bad) 
  2131c7:	ff 40 00             	inc    DWORD PTR [rax+0x0]
  2131ca:	00 00                	add    BYTE PTR [rax],al
  2131cc:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2131cf:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2131d5:	7b c6                	jnp    21319d <__kernel_end+0x119d>
  2131d7:	0c 07                	or     al,0x7
  2131d9:	08 00                	or     BYTE PTR [rax],al
  2131db:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2131de:	00 00                	add    BYTE PTR [rax],al
  2131e0:	e0 11                	loopne 2131f3 <__kernel_end+0x11f3>
  2131e2:	00 00                	add    BYTE PTR [rax],al
  2131e4:	5f                   	pop    rdi
  2131e5:	40 ff                	rex (bad) 
  2131e7:	ff                   	(bad)  
  2131e8:	3d 00 00 00 00       	cmp    eax,0x0
  2131ed:	41 0e                	rex.B (bad) 
  2131ef:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2131f5:	78 c6                	js     2131bd <__kernel_end+0x11bd>
  2131f7:	0c 07                	or     al,0x7
  2131f9:	08 00                	or     BYTE PTR [rax],al
  2131fb:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2131fe:	00 00                	add    BYTE PTR [rax],al
  213200:	00 12                	add    BYTE PTR [rdx],dl
  213202:	00 00                	add    BYTE PTR [rax],al
  213204:	7c 40                	jl     213246 <__kernel_end+0x1246>
  213206:	ff                   	(bad)  
  213207:	ff 31                	push   QWORD PTR [rcx]
  213209:	00 00                	add    BYTE PTR [rax],al
  21320b:	00 00                	add    BYTE PTR [rax],al
  21320d:	41 0e                	rex.B (bad) 
  21320f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213215:	6c                   	ins    BYTE PTR es:[rdi],dx
  213216:	c6                   	(bad)  
  213217:	0c 07                	or     al,0x7
  213219:	08 00                	or     BYTE PTR [rax],al
  21321b:	00 20                	add    BYTE PTR [rax],ah
  21321d:	00 00                	add    BYTE PTR [rax],al
  21321f:	00 20                	add    BYTE PTR [rax],ah
  213221:	12 00                	adc    al,BYTE PTR [rax]
  213223:	00 8d 40 ff ff 28    	add    BYTE PTR [rbp+0x28ffff40],cl
  213229:	00 00                	add    BYTE PTR [rax],al
  21322b:	00 00                	add    BYTE PTR [rax],al
  21322d:	41 0e                	rex.B (bad) 
  21322f:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213235:	63 c6                	movsxd eax,esi
  213237:	0c 07                	or     al,0x7
  213239:	08 00                	or     BYTE PTR [rax],al
  21323b:	00 00                	add    BYTE PTR [rax],al
  21323d:	00 00                	add    BYTE PTR [rax],al
  21323f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  213242:	00 00                	add    BYTE PTR [rax],al
  213244:	44 12 00             	adc    r8b,BYTE PTR [rax]
  213247:	00 91 40 ff ff 4b    	add    BYTE PTR [rcx+0x4bffff40],dl
  21324d:	00 00                	add    BYTE PTR [rax],al
  21324f:	00 00                	add    BYTE PTR [rax],al
  213251:	41 0e                	rex.B (bad) 
  213253:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213259:	02 46 c6             	add    al,BYTE PTR [rsi-0x3a]
  21325c:	0c 07                	or     al,0x7
  21325e:	08 00                	or     BYTE PTR [rax],al
  213260:	1c 00                	sbb    al,0x0
  213262:	00 00                	add    BYTE PTR [rax],al
  213264:	64 12 00             	adc    al,BYTE PTR fs:[rax]
  213267:	00 bc 40 ff ff 76 00 	add    BYTE PTR [rax+rax*2+0x76ffff],bh
  21326e:	00 00                	add    BYTE PTR [rax],al
  213270:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  213273:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213279:	02 71 c6             	add    dh,BYTE PTR [rcx-0x3a]
  21327c:	0c 07                	or     al,0x7
  21327e:	08 00                	or     BYTE PTR [rax],al
  213280:	1c 00                	sbb    al,0x0
  213282:	00 00                	add    BYTE PTR [rax],al
  213284:	84 12                	test   BYTE PTR [rdx],dl
  213286:	00 00                	add    BYTE PTR [rax],al
  213288:	12 41 ff             	adc    al,BYTE PTR [rcx-0x1]
  21328b:	ff 9b 00 00 00 00    	call   FWORD PTR [rbx+0x0]
  213291:	41 0e                	rex.B (bad) 
  213293:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213299:	02 96 c6 0c 07 08    	add    dl,BYTE PTR [rsi+0x8070cc6]
  21329f:	00 20                	add    BYTE PTR [rax],ah
  2132a1:	00 00                	add    BYTE PTR [rax],al
  2132a3:	00 a4 12 00 00 8d 41 	add    BYTE PTR [rdx+rdx*1+0x418d0000],ah
  2132aa:	ff                   	(bad)  
  2132ab:	ff 19                	call   FWORD PTR [rcx]
  2132ad:	01 00                	add    DWORD PTR [rax],eax
  2132af:	00 00                	add    BYTE PTR [rax],al
  2132b1:	41 0e                	rex.B (bad) 
  2132b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2132b9:	45 83 03 03          	rex.RB add DWORD PTR [r11],0x3
  2132bd:	0f 01                	(bad)  
  2132bf:	c6 c3 0c             	mov    bl,0xc
  2132c2:	07                   	(bad)  
  2132c3:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2132c6:	00 00                	add    BYTE PTR [rax],al
  2132c8:	c8 12 00 00          	enter  0x12,0x0
  2132cc:	82                   	(bad)  
  2132cd:	42 ff                	rex.X (bad) 
  2132cf:	ff 81 01 00 00 00    	inc    DWORD PTR [rcx+0x1]
  2132d5:	41 0e                	rex.B (bad) 
  2132d7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2132dd:	03 7c 01 c6          	add    edi,DWORD PTR [rcx+rax*1-0x3a]
  2132e1:	0c 07                	or     al,0x7
  2132e3:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  2132e6:	00 00                	add    BYTE PTR [rax],al
  2132e8:	e8 12 00 00 e3       	call   ffffffffe32132ff <__kernel_end+0xffffffffe30012ff>
  2132ed:	43 ff                	rex.XB (bad) 
  2132ef:	ff 6d 00             	jmp    FWORD PTR [rbp+0x0]
  2132f2:	00 00                	add    BYTE PTR [rax],al
  2132f4:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2132f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2132fd:	02 68 c6             	add    ch,BYTE PTR [rax-0x3a]
  213300:	0c 07                	or     al,0x7
  213302:	08 00                	or     BYTE PTR [rax],al
  213304:	1c 00                	sbb    al,0x0
  213306:	00 00                	add    BYTE PTR [rax],al
  213308:	08 13                	or     BYTE PTR [rbx],dl
  21330a:	00 00                	add    BYTE PTR [rax],al
  21330c:	30 44 ff ff          	xor    BYTE PTR [rdi+rdi*8-0x1],al
  213310:	84 00                	test   BYTE PTR [rax],al
  213312:	00 00                	add    BYTE PTR [rax],al
  213314:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  213317:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  21331d:	02 7f c6             	add    bh,BYTE PTR [rdi-0x3a]
  213320:	0c 07                	or     al,0x7
  213322:	08 00                	or     BYTE PTR [rax],al
  213324:	1c 00                	sbb    al,0x0
  213326:	00 00                	add    BYTE PTR [rax],al
  213328:	28 13                	sub    BYTE PTR [rbx],dl
  21332a:	00 00                	add    BYTE PTR [rax],al
  21332c:	94                   	xchg   esp,eax
  21332d:	44 ff                	rex.R (bad) 
  21332f:	ff                   	(bad)  
  213330:	dd 02                	fld    QWORD PTR [rdx]
  213332:	00 00                	add    BYTE PTR [rax],al
  213334:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  213337:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  21333d:	03 d8                	add    ebx,eax
  21333f:	02 c6                	add    al,dh
  213341:	0c 07                	or     al,0x7
  213343:	08 20                	or     BYTE PTR [rax],ah
  213345:	00 00                	add    BYTE PTR [rax],al
  213347:	00 48 13             	add    BYTE PTR [rax+0x13],cl
  21334a:	00 00                	add    BYTE PTR [rax],al
  21334c:	51                   	push   rcx
  21334d:	47 ff                	rex.RXB (bad) 
  21334f:	ff                   	(bad)  
  213350:	dd 02                	fld    QWORD PTR [rdx]
  213352:	00 00                	add    BYTE PTR [rax],al
  213354:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  213357:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  21335d:	03 d8                	add    ebx,eax
  21335f:	02 c6                	add    al,dh
  213361:	0c 07                	or     al,0x7
  213363:	08 00                	or     BYTE PTR [rax],al
  213365:	00 00                	add    BYTE PTR [rax],al
  213367:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21336a:	00 00                	add    BYTE PTR [rax],al
  21336c:	6c                   	ins    BYTE PTR es:[rdi],dx
  21336d:	13 00                	adc    eax,DWORD PTR [rax]
  21336f:	00 0a                	add    BYTE PTR [rdx],cl
  213371:	4a ff                	rex.WX (bad) 
  213373:	ff 1e                	call   FWORD PTR [rsi]
  213375:	00 00                	add    BYTE PTR [rax],al
  213377:	00 00                	add    BYTE PTR [rax],al
  213379:	41 0e                	rex.B (bad) 
  21337b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213381:	59                   	pop    rcx
  213382:	c6                   	(bad)  
  213383:	0c 07                	or     al,0x7
  213385:	08 00                	or     BYTE PTR [rax],al
  213387:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21338a:	00 00                	add    BYTE PTR [rax],al
  21338c:	8c 13                	mov    WORD PTR [rbx],ss
  21338e:	00 00                	add    BYTE PTR [rax],al
  213390:	08 4a ff             	or     BYTE PTR [rdx-0x1],cl
  213393:	ff 47 00             	inc    DWORD PTR [rdi+0x0]
  213396:	00 00                	add    BYTE PTR [rax],al
  213398:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21339b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2133a1:	02 42 c6             	add    al,BYTE PTR [rdx-0x3a]
  2133a4:	0c 07                	or     al,0x7
  2133a6:	08 00                	or     BYTE PTR [rax],al
  2133a8:	1c 00                	sbb    al,0x0
  2133aa:	00 00                	add    BYTE PTR [rax],al
  2133ac:	ac                   	lods   al,BYTE PTR ds:[rsi]
  2133ad:	13 00                	adc    eax,DWORD PTR [rax]
  2133af:	00 2f                	add    BYTE PTR [rdi],ch
  2133b1:	4a ff                	rex.WX (bad) 
  2133b3:	ff                   	(bad)  
  2133b4:	3d 00 00 00 00       	cmp    eax,0x0
  2133b9:	41 0e                	rex.B (bad) 
  2133bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2133c1:	78 c6                	js     213389 <__kernel_end+0x1389>
  2133c3:	0c 07                	or     al,0x7
  2133c5:	08 00                	or     BYTE PTR [rax],al
  2133c7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2133ca:	00 00                	add    BYTE PTR [rax],al
  2133cc:	cc                   	int3   
  2133cd:	13 00                	adc    eax,DWORD PTR [rax]
  2133cf:	00 4c 4a ff          	add    BYTE PTR [rdx+rcx*2-0x1],cl
  2133d3:	ff c5                	inc    ebp
  2133d5:	00 00                	add    BYTE PTR [rax],al
  2133d7:	00 00                	add    BYTE PTR [rax],al
  2133d9:	41 0e                	rex.B (bad) 
  2133db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2133e1:	02 c0                	add    al,al
  2133e3:	c6                   	(bad)  
  2133e4:	0c 07                	or     al,0x7
  2133e6:	08 00                	or     BYTE PTR [rax],al
  2133e8:	1c 00                	sbb    al,0x0
  2133ea:	00 00                	add    BYTE PTR [rax],al
  2133ec:	ec                   	in     al,dx
  2133ed:	13 00                	adc    eax,DWORD PTR [rax]
  2133ef:	00 f1                	add    cl,dh
  2133f1:	4a ff                	rex.WX (bad) 
  2133f3:	ff                   	(bad)  
  2133f4:	38 02                	cmp    BYTE PTR [rdx],al
  2133f6:	00 00                	add    BYTE PTR [rax],al
  2133f8:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  2133fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213401:	03 33                	add    esi,DWORD PTR [rbx]
  213403:	02 c6                	add    al,dh
  213405:	0c 07                	or     al,0x7
  213407:	08 1c 00             	or     BYTE PTR [rax+rax*1],bl
  21340a:	00 00                	add    BYTE PTR [rax],al
  21340c:	0c 14                	or     al,0x14
  21340e:	00 00                	add    BYTE PTR [rax],al
  213410:	09 4d ff             	or     DWORD PTR [rbp-0x1],ecx
  213413:	ff                   	(bad)  
  213414:	3b 00                	cmp    eax,DWORD PTR [rax]
  213416:	00 00                	add    BYTE PTR [rax],al
  213418:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  21341b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213421:	76 c6                	jbe    2133e9 <__kernel_end+0x13e9>
  213423:	0c 07                	or     al,0x7
  213425:	08 00                	or     BYTE PTR [rax],al
  213427:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21342a:	00 00                	add    BYTE PTR [rax],al
  21342c:	2c 14                	sub    al,0x14
  21342e:	00 00                	add    BYTE PTR [rax],al
  213430:	24 4d                	and    al,0x4d
  213432:	ff                   	(bad)  
  213433:	ff 21                	jmp    QWORD PTR [rcx]
  213435:	00 00                	add    BYTE PTR [rax],al
  213437:	00 00                	add    BYTE PTR [rax],al
  213439:	41 0e                	rex.B (bad) 
  21343b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213441:	5c                   	pop    rsp
  213442:	c6                   	(bad)  
  213443:	0c 07                	or     al,0x7
  213445:	08 00                	or     BYTE PTR [rax],al
  213447:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21344a:	00 00                	add    BYTE PTR [rax],al
  21344c:	4c 14 00             	rex.WR adc al,0x0
  21344f:	00 25 4d ff ff 1e    	add    BYTE PTR [rip+0x1effff4d],ah        # 1f2133a2 <__kernel_end+0x1f0013a2>
  213455:	00 00                	add    BYTE PTR [rax],al
  213457:	00 00                	add    BYTE PTR [rax],al
  213459:	41 0e                	rex.B (bad) 
  21345b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213461:	59                   	pop    rcx
  213462:	c6                   	(bad)  
  213463:	0c 07                	or     al,0x7
  213465:	08 00                	or     BYTE PTR [rax],al
  213467:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21346a:	00 00                	add    BYTE PTR [rax],al
  21346c:	6c                   	ins    BYTE PTR es:[rdi],dx
  21346d:	14 00                	adc    al,0x0
  21346f:	00 23                	add    BYTE PTR [rbx],ah
  213471:	4d ff                	rex.WRB (bad) 
  213473:	ff 20                	jmp    QWORD PTR [rax]
  213475:	00 00                	add    BYTE PTR [rax],al
  213477:	00 00                	add    BYTE PTR [rax],al
  213479:	41 0e                	rex.B (bad) 
  21347b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213481:	5b                   	pop    rbx
  213482:	c6                   	(bad)  
  213483:	0c 07                	or     al,0x7
  213485:	08 00                	or     BYTE PTR [rax],al
  213487:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21348a:	00 00                	add    BYTE PTR [rax],al
  21348c:	8c 14 00             	mov    WORD PTR [rax+rax*1],ss
  21348f:	00 23                	add    BYTE PTR [rbx],ah
  213491:	4d ff                	rex.WRB (bad) 
  213493:	ff 2a                	jmp    FWORD PTR [rdx]
  213495:	00 00                	add    BYTE PTR [rax],al
  213497:	00 00                	add    BYTE PTR [rax],al
  213499:	41 0e                	rex.B (bad) 
  21349b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2134a1:	65 c6                	gs (bad) 
  2134a3:	0c 07                	or     al,0x7
  2134a5:	08 00                	or     BYTE PTR [rax],al
  2134a7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2134aa:	00 00                	add    BYTE PTR [rax],al
  2134ac:	ac                   	lods   al,BYTE PTR ds:[rsi]
  2134ad:	14 00                	adc    al,0x0
  2134af:	00 2d 4d ff ff 4d    	add    BYTE PTR [rip+0x4dffff4d],ch        # 4e213402 <__kernel_end+0x4e001402>
  2134b5:	00 00                	add    BYTE PTR [rax],al
  2134b7:	00 00                	add    BYTE PTR [rax],al
  2134b9:	41 0e                	rex.B (bad) 
  2134bb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2134c1:	02 48 c6             	add    cl,BYTE PTR [rax-0x3a]
  2134c4:	0c 07                	or     al,0x7
  2134c6:	08 00                	or     BYTE PTR [rax],al
  2134c8:	1c 00                	sbb    al,0x0
  2134ca:	00 00                	add    BYTE PTR [rax],al
  2134cc:	cc                   	int3   
  2134cd:	14 00                	adc    al,0x0
  2134cf:	00 5a 4d             	add    BYTE PTR [rdx+0x4d],bl
  2134d2:	ff                   	(bad)  
  2134d3:	ff 13                	call   QWORD PTR [rbx]
  2134d5:	00 00                	add    BYTE PTR [rax],al
  2134d7:	00 00                	add    BYTE PTR [rax],al
  2134d9:	41 0e                	rex.B (bad) 
  2134db:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  2134e1:	4e c6                	rex.WRX (bad) 
  2134e3:	0c 07                	or     al,0x7
  2134e5:	08 00                	or     BYTE PTR [rax],al
  2134e7:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  2134ea:	00 00                	add    BYTE PTR [rax],al
  2134ec:	ec                   	in     al,dx
  2134ed:	14 00                	adc    al,0x0
  2134ef:	00 4d 4d             	add    BYTE PTR [rbp+0x4d],cl
  2134f2:	ff                   	(bad)  
  2134f3:	ff 31                	push   QWORD PTR [rcx]
  2134f5:	00 00                	add    BYTE PTR [rax],al
  2134f7:	00 00                	add    BYTE PTR [rax],al
  2134f9:	41 0e                	rex.B (bad) 
  2134fb:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213501:	6c                   	ins    BYTE PTR es:[rdi],dx
  213502:	c6                   	(bad)  
  213503:	0c 07                	or     al,0x7
  213505:	08 00                	or     BYTE PTR [rax],al
  213507:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21350a:	00 00                	add    BYTE PTR [rax],al
  21350c:	0c 15                	or     al,0x15
  21350e:	00 00                	add    BYTE PTR [rax],al
  213510:	5e                   	pop    rsi
  213511:	4d ff                	rex.WRB (bad) 
  213513:	ff 2a                	jmp    FWORD PTR [rdx]
  213515:	00 00                	add    BYTE PTR [rax],al
  213517:	00 00                	add    BYTE PTR [rax],al
  213519:	41 0e                	rex.B (bad) 
  21351b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213521:	65 c6                	gs (bad) 
  213523:	0c 07                	or     al,0x7
  213525:	08 00                	or     BYTE PTR [rax],al
  213527:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  21352a:	00 00                	add    BYTE PTR [rax],al
  21352c:	2c 15                	sub    al,0x15
  21352e:	00 00                	add    BYTE PTR [rax],al
  213530:	68 4d ff ff c1       	push   0xffffffffc1ffff4d
  213535:	00 00                	add    BYTE PTR [rax],al
  213537:	00 00                	add    BYTE PTR [rax],al
  213539:	41 0e                	rex.B (bad) 
  21353b:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  213541:	02 bc c6 0c 07 08 00 	add    bh,BYTE PTR [rsi+rax*8+0x8070c]

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	31 01                	xor    DWORD PTR [rcx],eax
       2:	00 00                	add    BYTE PTR [rax],al
       4:	04 00                	add    al,0x0
       6:	00 00                	add    BYTE PTR [rax],al
       8:	00 00                	add    BYTE PTR [rax],al
       a:	08 01                	or     BYTE PTR [rcx],al
       c:	7c 00                	jl     e <stivale_hdr-0x1ffff2>
       e:	00 00                	add    BYTE PTR [rax],al
      10:	04 7d                	add    al,0x7d
      12:	01 00                	add    DWORD PTR [rax],eax
      14:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
      17:	00 00                	add    BYTE PTR [rax],al
      19:	00 00                	add    BYTE PTR [rax],al
      1b:	00 00                	add    BYTE PTR [rax],al
      1d:	02 08                	add    cl,BYTE PTR [rax]
      1f:	05 6a 01 00 00       	add    eax,0x16a
      24:	02 08                	add    cl,BYTE PTR [rax]
      26:	07                   	(bad)  
      27:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
      2a:	00 02                	add    BYTE PTR [rdx],al
      2c:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 197 <stivale_hdr-0x1ffe69>
      32:	02 10                	add    dl,BYTE PTR [rax]
      34:	04 8f                	add    al,0x8f
      36:	01 00                	add    DWORD PTR [rax],eax
      38:	00 03                	add    BYTE PTR [rbx],al
      3a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
      3d:	00 02                	add    BYTE PTR [rdx],al
      3f:	01 08                	add    DWORD PTR [rax],ecx
      41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      42:	00 00                	add    BYTE PTR [rax],al
      44:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
      47:	08 00                	or     BYTE PTR [rax],al
      49:	00 01                	add    BYTE PTR [rcx],al
      4b:	05 1d 51 00 00       	add    eax,0x511d
      50:	00 02                	add    BYTE PTR [rdx],al
      52:	02 07                	add    al,BYTE PTR [rdi]
      54:	9b                   	fwait
      55:	01 00                	add    DWORD PTR [rax],eax
      57:	00 02                	add    BYTE PTR [rdx],al
      59:	04 07                	add    al,0x7
      5b:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
      5e:	00 02                	add    BYTE PTR [rdx],al
      60:	10 07                	adc    BYTE PTR [rdi],al
      62:	00 00                	add    BYTE PTR [rax],al
      64:	00 00                	add    BYTE PTR [rax],al
      66:	04 4c                	add    al,0x4c
      68:	01 00                	add    DWORD PTR [rax],eax
      6a:	00 01                	add    BYTE PTR [rcx],al
      6c:	0b 1d 51 00 00 00    	or     ebx,DWORD PTR [rip+0x51]        # c3 <stivale_hdr-0x1fff3d>
      72:	04 25                	add    al,0x25
      74:	00 00                	add    BYTE PTR [rax],al
      76:	00 01                	add    BYTE PTR [rcx],al
      78:	0d 1d 24 00 00       	or     eax,0x241d
      7d:	00 02                	add    BYTE PTR [rdx],al
      7f:	01 06                	add    DWORD PTR [rsi],eax
      81:	70 00                	jo     83 <stivale_hdr-0x1fff7d>
      83:	00 00                	add    BYTE PTR [rax],al
      85:	02 02                	add    al,BYTE PTR [rdx]
      87:	05 73 01 00 00       	add    eax,0x173
      8c:	05 04 05 69 6e       	add    eax,0x6e690504
      91:	74 00                	je     93 <stivale_hdr-0x1fff6d>
      93:	02 10                	add    dl,BYTE PTR [rax]
      95:	05 1b 01 00 00       	add    eax,0x11b
      9a:	04 8f                	add    al,0x8f
      9c:	22 00                	and    al,BYTE PTR [rax]
      9e:	00 01                	add    BYTE PTR [rcx],al
      a0:	19 1d 72 00 00 00    	sbb    DWORD PTR [rip+0x72],ebx        # 118 <stivale_hdr-0x1ffee8>
      a6:	06                   	(bad)  
      a7:	73 79                	jae    122 <stivale_hdr-0x1ffede>
      a9:	73 00                	jae    ab <stivale_hdr-0x1fff55>
      ab:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
      ae:	bb 00 00 00 07       	mov    ebx,0x7000000
      b3:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
      b9:	0f 00 08             	str    WORD PTR [rax]
      bc:	2c 00                	sub    al,0x0
      be:	00 00                	add    BYTE PTR [rax],al
      c0:	18 02                	sbb    BYTE PTR [rdx],al
      c2:	0b 08                	or     ecx,DWORD PTR [rax]
      c4:	17                   	(bad)  
      c5:	01 00                	add    DWORD PTR [rax],eax
      c7:	00 09                	add    BYTE PTR [rcx],cl
      c9:	5e                   	pop    rsi
      ca:	09 00                	or     DWORD PTR [rax],eax
      cc:	00 02                	add    BYTE PTR [rdx],al
      ce:	0c 0d                	or     al,0xd
      d0:	9a                   	(bad)  
      d1:	00 00                	add    BYTE PTR [rax],al
      d3:	00 00                	add    BYTE PTR [rax],al
      d5:	09 33                	or     DWORD PTR [rbx],esi
      d7:	0c 00                	or     al,0x0
      d9:	00 02                	add    BYTE PTR [rdx],al
      db:	0d 0a 45 00 00       	or     eax,0x450a
      e0:	00 08                	add    BYTE PTR [rax],cl
      e2:	09 53 01             	or     DWORD PTR [rbx+0x1],edx
      e5:	00 00                	add    BYTE PTR [rax],al
      e7:	02 0e                	add    cl,BYTE PTR [rsi]
      e9:	0c 66                	or     al,0x66
      eb:	00 00                	add    BYTE PTR [rax],al
      ed:	00 0a                	add    BYTE PTR [rdx],cl
      ef:	09 12                	or     DWORD PTR [rdx],edx
      f1:	00 00                	add    BYTE PTR [rax],al
      f3:	00 02                	add    BYTE PTR [rdx],al
      f5:	0f 0c                	(bad)  
      f7:	66 00 00             	data16 add BYTE PTR [rax],al
      fa:	00 0c 09             	add    BYTE PTR [rcx+rcx*1],cl
      fd:	59                   	pop    rcx
      fe:	00 00                	add    BYTE PTR [rax],al
     100:	00 02                	add    BYTE PTR [rdx],al
     102:	10 0c 66             	adc    BYTE PTR [rsi+riz*2],cl
     105:	00 00                	add    BYTE PTR [rax],al
     107:	00 0e                	add    BYTE PTR [rsi],cl
     109:	09 3b                	or     DWORD PTR [rbx],edi
     10b:	00 00                	add    BYTE PTR [rax],al
     10d:	00 02                	add    BYTE PTR [rdx],al
     10f:	11 0d 9a 00 00 00    	adc    DWORD PTR [rip+0x9a],ecx        # 1af <stivale_hdr-0x1ffe51>
     115:	10 00                	adc    BYTE PTR [rax],al
     117:	02 01                	add    al,BYTE PTR [rcx]
     119:	06                   	(bad)  
     11a:	77 00                	ja     11c <stivale_hdr-0x1ffee4>
     11c:	00 00                	add    BYTE PTR [rax],al
     11e:	0a 40 01             	or     al,BYTE PTR [rax+0x1]
     121:	00 00                	add    BYTE PTR [rax],al
     123:	04 0c                	add    al,0xc
     125:	17                   	(bad)  
     126:	bb 00 00 00 09       	mov    ebx,0x9000000
     12b:	03 00                	add    eax,DWORD PTR [rax]
     12d:	00 20                	add    BYTE PTR [rax],ah
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 00                	add    BYTE PTR [rax],al
     133:	00 00                	add    BYTE PTR [rax],al
     135:	4f 04 00             	rex.WRXB add al,0x0
     138:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     13b:	8d 00                	lea    eax,[rax]
     13d:	00 00                	add    BYTE PTR [rax],al
     13f:	08 01                	or     BYTE PTR [rcx],al
     141:	7c 00                	jl     143 <stivale_hdr-0x1ffebd>
     143:	00 00                	add    BYTE PTR [rax],al
     145:	04 66                	add    al,0x66
     147:	02 00                	add    al,BYTE PTR [rax]
     149:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
     14c:	00 00                	add    BYTE PTR [rax],al
     14e:	00 10                	add    BYTE PTR [rax],dl
     150:	20 00                	and    BYTE PTR [rax],al
     152:	00 00                	add    BYTE PTR [rax],al
     154:	00 00                	add    BYTE PTR [rax],al
     156:	88 00                	mov    BYTE PTR [rax],al
     158:	00 00                	add    BYTE PTR [rax],al
     15a:	00 00                	add    BYTE PTR [rax],al
     15c:	00 00                	add    BYTE PTR [rax],al
     15e:	66 00 00             	data16 add BYTE PTR [rax],al
     161:	00 02                	add    BYTE PTR [rdx],al
     163:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 2d3 <stivale_hdr-0x1ffd2d>
     169:	02 08                	add    cl,BYTE PTR [rax]
     16b:	07                   	(bad)  
     16c:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
     16f:	00 02                	add    BYTE PTR [rdx],al
     171:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 2dc <stivale_hdr-0x1ffd24>
     177:	02 10                	add    dl,BYTE PTR [rax]
     179:	04 8f                	add    al,0x8f
     17b:	01 00                	add    DWORD PTR [rax],eax
     17d:	00 03                	add    BYTE PTR [rbx],al
     17f:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     182:	00 02                	add    BYTE PTR [rdx],al
     184:	01 08                	add    DWORD PTR [rax],ecx
     186:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     187:	00 00                	add    BYTE PTR [rax],al
     189:	00 02                	add    BYTE PTR [rdx],al
     18b:	02 07                	add    al,BYTE PTR [rdi]
     18d:	9b                   	fwait
     18e:	01 00                	add    DWORD PTR [rax],eax
     190:	00 02                	add    BYTE PTR [rdx],al
     192:	04 07                	add    al,0x7
     194:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
     197:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
     19a:	01 00                	add    DWORD PTR [rax],eax
     19c:	00 02                	add    BYTE PTR [rdx],al
     19e:	07                   	(bad)  
     19f:	1d 34 00 00 00       	sbb    eax,0x34
     1a4:	02 10                	add    dl,BYTE PTR [rax]
     1a6:	07                   	(bad)  
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	00 00                	add    BYTE PTR [rax],al
     1ab:	04 5f                	add    al,0x5f
     1ad:	03 00                	add    eax,DWORD PTR [rax]
     1af:	00 02                	add    BYTE PTR [rdx],al
     1b1:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 205 <stivale_hdr-0x1ffdfb>
     1b7:	04 4c                	add    al,0x4c
     1b9:	01 00                	add    DWORD PTR [rax],eax
     1bb:	00 02                	add    BYTE PTR [rdx],al
     1bd:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 218 <stivale_hdr-0x1ffde8>
     1c3:	04 e5                	add    al,0xe5
     1c5:	02 00                	add    al,BYTE PTR [rax]
     1c7:	00 02                	add    BYTE PTR [rdx],al
     1c9:	0c 1d                	or     al,0x1d
     1cb:	5c                   	pop    rsp
     1cc:	00 00                	add    BYTE PTR [rax],al
     1ce:	00 04 25 00 00 00 02 	add    BYTE PTR ds:0x2000000,al
     1d5:	0d 1d 34 00 00       	or     eax,0x341d
     1da:	00 02                	add    BYTE PTR [rdx],al
     1dc:	01 06                	add    DWORD PTR [rsi],eax
     1de:	70 00                	jo     1e0 <stivale_hdr-0x1ffe20>
     1e0:	00 00                	add    BYTE PTR [rax],al
     1e2:	02 02                	add    al,BYTE PTR [rdx]
     1e4:	05 73 01 00 00       	add    eax,0x173
     1e9:	05 04 05 69 6e       	add    eax,0x6e690504
     1ee:	74 00                	je     1f0 <stivale_hdr-0x1ffe10>
     1f0:	02 10                	add    dl,BYTE PTR [rax]
     1f2:	05 1b 01 00 00       	add    eax,0x11b
     1f7:	04 3b                	add    al,0x3b
     1f9:	02 00                	add    al,BYTE PTR [rax]
     1fb:	00 02                	add    BYTE PTR [rdx],al
     1fd:	17                   	(bad)  
     1fe:	1d 9a 00 00 00       	sbb    eax,0x9a
     203:	04 8f                	add    al,0x8f
     205:	22 00                	and    al,BYTE PTR [rax]
     207:	00 02                	add    BYTE PTR [rdx],al
     209:	19 1d 9a 00 00 00    	sbb    DWORD PTR [rip+0x9a],ebx        # 2a9 <stivale_hdr-0x1ffd57>
     20f:	06                   	(bad)  
     210:	69 6f 00 05 08 0b 0f 	imul   ebp,DWORD PTR [rdi+0x0],0xf0b0805
     217:	01 00                	add    DWORD PTR [rax],eax
     219:	00 07                	add    BYTE PTR [rdi],al
     21b:	16                   	(bad)  
     21c:	03 00                	add    eax,DWORD PTR [rax]
     21e:	00 05 09 0c 08 70    	add    BYTE PTR [rip+0x70080c09],al        # 70080e2d <__kernel_end+0x6fe6ee2d>
     224:	69 74 00 03 06 0f 08 	imul   esi,DWORD PTR [rax+rax*1+0x3],0x70080f06
     22b:	70 
     22c:	63 69 00             	movsxd ebp,DWORD PTR [rcx+0x0]
     22f:	04 07                	add    al,0x7
     231:	0f 09                	wbinvd 
     233:	91                   	xchg   ecx,eax
     234:	02 00                	add    al,BYTE PTR [rax]
     236:	00 06                	add    BYTE PTR [rsi],al
     238:	06                   	(bad)  
     239:	0f 07                	sysret 
     23b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     23c:	02 00                	add    al,BYTE PTR [rax]
     23e:	00 06                	add    BYTE PTR [rsi],al
     240:	07                   	(bad)  
     241:	13 00                	adc    eax,DWORD PTR [rax]
     243:	00 02                	add    BYTE PTR [rdx],al
     245:	01 02                	add    DWORD PTR [rdx],eax
     247:	61                   	(bad)  
     248:	02 00                	add    al,BYTE PTR [rax]
     24a:	00 06                	add    BYTE PTR [rsi],al
     24c:	73 79                	jae    2c7 <stivale_hdr-0x1ffd39>
     24e:	73 00                	jae    250 <stivale_hdr-0x1ffdb0>
     250:	07                   	(bad)  
     251:	04 0b                	add    al,0xb
     253:	42 02 00             	rex.X add al,BYTE PTR [rax]
     256:	00 0a                	add    BYTE PTR [rdx],cl
     258:	69 00 00 00 07 05    	imul   eax,DWORD PTR [rax],0x5070000
     25e:	0f 31                	rdtsc  
     260:	02 00                	add    al,BYTE PTR [rax]
     262:	00 0b                	add    BYTE PTR [rbx],cl
     264:	0a 24 00             	or     ah,BYTE PTR [rax+rax*1]
     267:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
     26a:	06                   	(bad)  
     26b:	10 b1 01 00 00 0c    	adc    BYTE PTR [rcx+0xc000001],dh
     271:	ac                   	lods   al,BYTE PTR ds:[rsi]
     272:	34 00                	xor    al,0x0
     274:	00 07                	add    BYTE PTR [rdi],al
     276:	07                   	(bad)  
     277:	14 42                	adc    al,0x42
     279:	02 00                	add    al,BYTE PTR [rax]
     27b:	00 00                	add    BYTE PTR [rax],al
     27d:	0c 4f                	or     al,0x4f
     27f:	0e                   	(bad)  
     280:	00 00                	add    BYTE PTR [rax],al
     282:	07                   	(bad)  
     283:	08 14 8e             	or     BYTE PTR [rsi+rcx*4],dl
     286:	00 00                	add    BYTE PTR [rax],al
     288:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
     28b:	01 02                	add    DWORD PTR [rdx],eax
     28d:	00 00                	add    BYTE PTR [rax],al
     28f:	07                   	(bad)  
     290:	09 14 76             	or     DWORD PTR [rsi+rsi*2],edx
     293:	00 00                	add    BYTE PTR [rax],al
     295:	00 08                	add    BYTE PTR [rax],cl
     297:	0c fa                	or     al,0xfa
     299:	02 00                	add    al,BYTE PTR [rax]
     29b:	00 07                	add    BYTE PTR [rdi],al
     29d:	0a 14 76             	or     dl,BYTE PTR [rsi+rsi*2]
     2a0:	00 00                	add    BYTE PTR [rax],al
     2a2:	00 09                	add    BYTE PTR [rcx],cl
     2a4:	0c c9                	or     al,0xc9
     2a6:	2d 00 00 07 0b       	sub    eax,0xb070000
     2ab:	14 52                	adc    al,0x52
     2ad:	02 00                	add    al,BYTE PTR [rax]
     2af:	00 0a                	add    BYTE PTR [rdx],cl
     2b1:	0c d5                	or     al,0xd5
     2b3:	02 00                	add    al,BYTE PTR [rax]
     2b5:	00 07                	add    BYTE PTR [rdi],al
     2b7:	0c 14                	or     al,0x14
     2b9:	62 02                	(bad)  
     2bb:	00 00                	add    BYTE PTR [rax],al
     2bd:	10 0c fa             	adc    BYTE PTR [rdx+rdi*8],cl
     2c0:	01 00                	add    DWORD PTR [rax],eax
     2c2:	00 07                	add    BYTE PTR [rdi],al
     2c4:	0d 14 8e 00 00       	or     eax,0x8e14
     2c9:	00 18                	add    BYTE PTR [rax],bl
     2cb:	0c ba                	or     al,0xba
     2cd:	01 00                	add    DWORD PTR [rax],eax
     2cf:	00 07                	add    BYTE PTR [rdi],al
     2d1:	0e                   	(bad)  
     2d2:	14 8e                	adc    al,0x8e
     2d4:	00 00                	add    BYTE PTR [rax],al
     2d6:	00 1c 0c             	add    BYTE PTR [rsp+rcx*1],bl
     2d9:	3c 03                	cmp    al,0x3
     2db:	00 00                	add    BYTE PTR [rax],al
     2dd:	07                   	(bad)  
     2de:	0f 14 8e 00 00 00 20 	unpcklps xmm1,XMMWORD PTR [rsi+0x20000000]
     2e5:	00 0d 1f 03 00 00    	add    BYTE PTR [rip+0x31f],cl        # 60a <stivale_hdr-0x1ff9f6>
     2eb:	24 07                	and    al,0x7
     2ed:	12 10                	adc    dl,BYTE PTR [rax]
     2ef:	0c ac                	or     al,0xac
     2f1:	34 00                	xor    al,0x0
     2f3:	00 07                	add    BYTE PTR [rdi],al
     2f5:	13 14 62             	adc    edx,DWORD PTR [rdx+riz*2]
     2f8:	02 00                	add    al,BYTE PTR [rax]
     2fa:	00 00                	add    BYTE PTR [rax],al
     2fc:	0c fa                	or     al,0xfa
     2fe:	02 00                	add    al,BYTE PTR [rax]
     300:	00 07                	add    BYTE PTR [rdi],al
     302:	14 14                	adc    al,0x14
     304:	76 00                	jbe    306 <stivale_hdr-0x1ffcfa>
     306:	00 00                	add    BYTE PTR [rax],al
     308:	08 0c c9             	or     BYTE PTR [rcx+rcx*8],cl
     30b:	2d 00 00 07 15       	sub    eax,0x15070000
     310:	14 52                	adc    al,0x52
     312:	02 00                	add    al,BYTE PTR [rax]
     314:	00 09                	add    BYTE PTR [rcx],cl
     316:	0c 01                	or     al,0x1
     318:	02 00                	add    al,BYTE PTR [rax]
     31a:	00 07                	add    BYTE PTR [rdi],al
     31c:	16                   	(bad)  
     31d:	14 76                	adc    al,0x76
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 0f                	add    BYTE PTR [rdi],cl
     323:	0c d6                	or     al,0xd6
     325:	01 00                	add    DWORD PTR [rax],eax
     327:	00 07                	add    BYTE PTR [rdi],al
     329:	17                   	(bad)  
     32a:	14 8e                	adc    al,0x8e
     32c:	00 00                	add    BYTE PTR [rax],al
     32e:	00 10                	add    BYTE PTR [rax],dl
     330:	0c 4f                	or     al,0x4f
     332:	0e                   	(bad)  
     333:	00 00                	add    BYTE PTR [rax],al
     335:	07                   	(bad)  
     336:	18 14 8e             	sbb    BYTE PTR [rsi+rcx*4],dl
     339:	00 00                	add    BYTE PTR [rax],al
     33b:	00 14 0c             	add    BYTE PTR [rsp+rcx*1],dl
     33e:	0a 02                	or     al,BYTE PTR [rdx]
     340:	00 00                	add    BYTE PTR [rax],al
     342:	07                   	(bad)  
     343:	19 19                	sbb    DWORD PTR [rcx],ebx
     345:	72 02                	jb     349 <stivale_hdr-0x1ffcb7>
     347:	00 00                	add    BYTE PTR [rax],al
     349:	18 0c f9             	sbb    BYTE PTR [rcx+rdi*8],cl
     34c:	02 00                	add    al,BYTE PTR [rax]
     34e:	00 07                	add    BYTE PTR [rdi],al
     350:	1a 14 76             	sbb    dl,BYTE PTR [rsi+rsi*2]
     353:	00 00                	add    BYTE PTR [rax],al
     355:	00 20                	add    BYTE PTR [rax],ah
     357:	0e                   	(bad)  
     358:	70 61                	jo     3bb <stivale_hdr-0x1ffc45>
     35a:	64 00 07             	add    BYTE PTR fs:[rdi],al
     35d:	1b 14 78             	sbb    edx,DWORD PTR [rax+rdi*2]
     360:	02 00                	add    al,BYTE PTR [rax]
     362:	00 21                	add    BYTE PTR [rcx],ah
     364:	00 00                	add    BYTE PTR [rax],al
     366:	07                   	(bad)  
     367:	f3 01 00             	repz add DWORD PTR [rax],eax
     36a:	00 03                	add    BYTE PTR [rbx],al
     36c:	12 0f                	adc    cl,BYTE PTR [rdi]
     36e:	07                   	(bad)  
     36f:	48 02 00             	rex.W add al,BYTE PTR [rax]
     372:	00 08                	add    BYTE PTR [rax],cl
     374:	09 0f                	or     DWORD PTR [rdi],ecx
     376:	00 0f                	add    BYTE PTR [rdi],cl
     378:	76 00                	jbe    37a <stivale_hdr-0x1ffc86>
     37a:	00 00                	add    BYTE PTR [rax],al
     37c:	52                   	push   rdx
     37d:	02 00                	add    al,BYTE PTR [rax]
     37f:	00 10                	add    BYTE PTR [rax],dl
     381:	34 00                	xor    al,0x0
     383:	00 00                	add    BYTE PTR [rax],al
     385:	03 00                	add    eax,DWORD PTR [rax]
     387:	0f 76 00             	pcmpeqd mm0,QWORD PTR [rax]
     38a:	00 00                	add    BYTE PTR [rax],al
     38c:	62 02                	(bad)  
     38e:	00 00                	add    BYTE PTR [rax],al
     390:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     393:	00 00                	add    BYTE PTR [rax],al
     395:	05 00 0f 76 00       	add    eax,0x760f00
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	72 02                	jb     3a0 <stivale_hdr-0x1ffc60>
     39e:	00 00                	add    BYTE PTR [rax],al
     3a0:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     3a3:	00 00                	add    BYTE PTR [rax],al
     3a5:	07                   	(bad)  
     3a6:	00 11                	add    BYTE PTR [rcx],dl
     3a8:	08 2e                	or     BYTE PTR [rsi],ch
     3aa:	01 00                	add    DWORD PTR [rax],eax
     3ac:	00 0f                	add    BYTE PTR [rdi],cl
     3ae:	76 00                	jbe    3b0 <stivale_hdr-0x1ffc50>
     3b0:	00 00                	add    BYTE PTR [rax],al
     3b2:	88 02                	mov    BYTE PTR [rdx],al
     3b4:	00 00                	add    BYTE PTR [rax],al
     3b6:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     3b9:	00 00                	add    BYTE PTR [rax],al
     3bb:	02 00                	add    al,BYTE PTR [rax]
     3bd:	11 08                	adc    DWORD PTR [rax],ecx
     3bf:	b1 01                	mov    cl,0x1
     3c1:	00 00                	add    BYTE PTR [rax],al
     3c3:	02 01                	add    al,BYTE PTR [rcx]
     3c5:	06                   	(bad)  
     3c6:	77 00                	ja     3c8 <stivale_hdr-0x1ffc38>
     3c8:	00 00                	add    BYTE PTR [rax],al
     3ca:	0b 4d 06             	or     ecx,DWORD PTR [rbp+0x6]
     3cd:	00 00                	add    BYTE PTR [rax],al
     3cf:	10 09                	adc    BYTE PTR [rcx],cl
     3d1:	2d 08 e4 02 00       	sub    eax,0x2e408
     3d6:	00 0c c5 01 00 00 09 	add    BYTE PTR [rax*8+0x9000001],cl
     3dd:	2e 0d ce 00 00 00    	cs or  eax,0xce
     3e3:	00 0c c3             	add    BYTE PTR [rbx+rax*8],cl
     3e6:	02 00                	add    al,BYTE PTR [rax]
     3e8:	00 09                	add    BYTE PTR [rcx],cl
     3ea:	2f                   	(bad)  
     3eb:	0d 82 00 00 00       	or     eax,0x82
     3f0:	08 0c 53             	or     BYTE PTR [rbx+rdx*2],cl
     3f3:	01 00                	add    DWORD PTR [rax],eax
     3f5:	00 09                	add    BYTE PTR [rcx],cl
     3f7:	30 0d 82 00 00 00    	xor    BYTE PTR [rip+0x82],cl        # 47f <stivale_hdr-0x1ffb81>
     3fd:	0a 0c 12             	or     cl,BYTE PTR [rdx+rdx*1]
     400:	00 00                	add    BYTE PTR [rax],al
     402:	00 09                	add    BYTE PTR [rcx],cl
     404:	31 0d 82 00 00 00    	xor    DWORD PTR [rip+0x82],ecx        # 48c <stivale_hdr-0x1ffb74>
     40a:	0c 0c                	or     al,0xc
     40c:	59                   	pop    rcx
     40d:	00 00                	add    BYTE PTR [rax],al
     40f:	00 09                	add    BYTE PTR [rcx],cl
     411:	32 0d 82 00 00 00    	xor    cl,BYTE PTR [rip+0x82]        # 499 <stivale_hdr-0x1ffb67>
     417:	0e                   	(bad)  
     418:	00 0b                	add    BYTE PTR [rbx],cl
     41a:	d4                   	(bad)  
     41b:	07                   	(bad)  
     41c:	00 00                	add    BYTE PTR [rax],al
     41e:	10 09                	adc    BYTE PTR [rcx],cl
     420:	35 08 0c 03 00       	xor    eax,0x30c08
     425:	00 0c 96             	add    BYTE PTR [rsi+rdx*4],cl
     428:	02 00                	add    al,BYTE PTR [rax]
     42a:	00 09                	add    BYTE PTR [rcx],cl
     42c:	36 0d ce 00 00 00    	ss or  eax,0xce
     432:	00 0c 79             	add    BYTE PTR [rcx+rdi*2],cl
     435:	02 00                	add    al,BYTE PTR [rax]
     437:	00 09                	add    BYTE PTR [rcx],cl
     439:	37                   	(bad)  
     43a:	0d 9a 00 00 00       	or     eax,0x9a
     43f:	08 00                	or     BYTE PTR [rax],al
     441:	0b 25 03 00 00 57    	or     esp,DWORD PTR [rip+0x57000003]        # 5700044a <__kernel_end+0x56dee44a>
     447:	09 3c 08             	or     DWORD PTR [rax+rcx*1],edi
     44a:	dd 03                	fld    QWORD PTR [rbx]
     44c:	00 00                	add    BYTE PTR [rax],al
     44e:	0c 0f                	or     al,0xf
     450:	02 00                	add    al,BYTE PTR [rax]
     452:	00 09                	add    BYTE PTR [rcx],cl
     454:	3d 0d ce 00 00       	cmp    eax,0xce0d
     459:	00 00                	add    BYTE PTR [rax],al
     45b:	0c dc                	or     al,0xdc
     45d:	07                   	(bad)  
     45e:	00 00                	add    BYTE PTR [rax],al
     460:	09 3e                	or     DWORD PTR [rsi],edi
     462:	19 e4                	sbb    esp,esp
     464:	02 00                	add    al,BYTE PTR [rax]
     466:	00 08                	add    BYTE PTR [rax],cl
     468:	0c 55                	or     al,0x55
     46a:	06                   	(bad)  
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	09 3f                	or     DWORD PTR [rdi],edi
     46f:	19 95 02 00 00 18    	sbb    DWORD PTR [rbp+0x18000002],edx
     475:	0c 8c                	or     al,0x8c
     477:	02 00                	add    al,BYTE PTR [rax]
     479:	00 09                	add    BYTE PTR [rcx],cl
     47b:	40 1b 88 02 00 00 28 	rex sbb ecx,DWORD PTR [rax+0x28000002]
     482:	0c ec                	or     al,0xec
     484:	02 00                	add    al,BYTE PTR [rax]
     486:	00 09                	add    BYTE PTR [rcx],cl
     488:	41 0d 9a 00 00 00    	rex.B or eax,0x9a
     48e:	30 0c 40             	xor    BYTE PTR [rax+rax*2],cl
     491:	02 00                	add    al,BYTE PTR [rax]
     493:	00 09                	add    BYTE PTR [rcx],cl
     495:	42 0d ce 00 00 00    	rex.X or eax,0xce
     49b:	38 0c b4             	cmp    BYTE PTR [rsp+rsi*4],cl
     49e:	01 00                	add    DWORD PTR [rax],eax
     4a0:	00 09                	add    BYTE PTR [rcx],cl
     4a2:	43 0d 9a 00 00 00    	rex.XB or eax,0x9a
     4a8:	40 0c 33             	or     al,0x33
     4ab:	0c 00                	or     al,0x0
     4ad:	00 09                	add    BYTE PTR [rcx],cl
     4af:	44 0d 63 00 00 00    	rex.R or eax,0x63
     4b5:	48 0c e3             	rex.W or al,0xe3
     4b8:	01 00                	add    DWORD PTR [rax],eax
     4ba:	00 09                	add    BYTE PTR [rcx],cl
     4bc:	46 0d 76 00 00 00    	rex.RX or eax,0x76
     4c2:	50                   	push   rax
     4c3:	0c b2                	or     al,0xb2
     4c5:	02 00                	add    al,BYTE PTR [rax]
     4c7:	00 09                	add    BYTE PTR [rcx],cl
     4c9:	47 0d 76 00 00 00    	rex.RXB or eax,0x76
     4cf:	51                   	push   rcx
     4d0:	0c 4f                	or     al,0x4f
     4d2:	02 00                	add    al,BYTE PTR [rax]
     4d4:	00 09                	add    BYTE PTR [rcx],cl
     4d6:	48 0d 76 00 00 00    	or     rax,0x76
     4dc:	52                   	push   rdx
     4dd:	0c 66                	or     al,0x66
     4df:	03 00                	add    eax,DWORD PTR [rax]
     4e1:	00 09                	add    BYTE PTR [rcx],cl
     4e3:	49 0d 76 00 00 00    	rex.WB or rax,0x76
     4e9:	53                   	push   rbx
     4ea:	0c 17                	or     al,0x17
     4ec:	02 00                	add    al,BYTE PTR [rax]
     4ee:	00 09                	add    BYTE PTR [rcx],cl
     4f0:	4a 0d 76 00 00 00    	rex.WX or rax,0x76
     4f6:	54                   	push   rsp
     4f7:	0c 4d                	or     al,0x4d
     4f9:	03 00                	add    eax,DWORD PTR [rax]
     4fb:	00 09                	add    BYTE PTR [rcx],cl
     4fd:	4b 0d 76 00 00 00    	rex.WXB or rax,0x76
     503:	55                   	push   rbp
     504:	0c 03                	or     al,0x3
     506:	03 00                	add    eax,DWORD PTR [rax]
     508:	00 09                	add    BYTE PTR [rcx],cl
     50a:	4c 0d 76 00 00 00    	rex.WR or rax,0x76
     510:	56                   	push   rsi
     511:	00 06                	add    BYTE PTR [rsi],al
     513:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     516:	00 0a                	add    BYTE PTR [rdx],cl
     518:	07                   	(bad)  
     519:	0b fa                	or     edi,edx
     51b:	03 00                	add    eax,DWORD PTR [rax]
     51d:	00 08                	add    BYTE PTR [rax],cl
     51f:	69 64 74 00 0a 08 0c 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x80c080a
     526:	08 
     527:	74 73                	je     59c <stivale_hdr-0x1ffa64>
     529:	73 00                	jae    52b <stivale_hdr-0x1ffad5>
     52b:	0b 08                	or     ecx,DWORD PTR [rax]
     52d:	0f 00 06             	sldt   WORD PTR [rsi]
     530:	67 66 78 00          	addr32 data16 js 534 <stivale_hdr-0x1ffacc>
     534:	0c 08                	or     al,0x8
     536:	0b 0f                	or     ecx,DWORD PTR [rdi]
     538:	04 00                	add    al,0x0
     53a:	00 07                	add    BYTE PTR [rdi],al
     53c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     53d:	02 00                	add    al,BYTE PTR [rax]
     53f:	00 0c 10             	add    BYTE PTR [rax+rdx*1],cl
     542:	0c 00                	or     al,0x0
     544:	12 34 03             	adc    dh,BYTE PTR [rbx+rax*1]
     547:	00 00                	add    BYTE PTR [rax],al
     549:	01 13                	add    DWORD PTR [rbx],edx
     54b:	11 00                	adc    DWORD PTR [rax],eax
     54d:	10 20                	adc    BYTE PTR [rax],ah
     54f:	00 00                	add    BYTE PTR [rax],al
     551:	00 00                	add    BYTE PTR [rax],al
     553:	00 88 00 00 00 00    	add    BYTE PTR [rax+0x0],cl
     559:	00 00                	add    BYTE PTR [rax],al
     55b:	00 01                	add    BYTE PTR [rcx],al
     55d:	9c                   	pushf  
     55e:	4c 04 00             	rex.WR add al,0x0
     561:	00 13                	add    BYTE PTR [rbx],dl
     563:	2b 02                	sub    eax,DWORD PTR [rdx]
     565:	00 00                	add    BYTE PTR [rax],al
     567:	01 13                	add    DWORD PTR [rbx],edx
     569:	29 4c 04 00          	sub    DWORD PTR [rsp+rax*1+0x0],ecx
     56d:	00 02                	add    BYTE PTR [rdx],al
     56f:	91                   	xchg   ecx,eax
     570:	68 13 5e 09 00       	push   0x95e13
     575:	00 01                	add    BYTE PTR [rcx],al
     577:	13 3f                	adc    edi,DWORD PTR [rdi]
     579:	c2 00 00             	ret    0x0
     57c:	00 02                	add    BYTE PTR [rdx],al
     57e:	91                   	xchg   ecx,eax
     57f:	60                   	(bad)  
     580:	00 11                	add    BYTE PTR [rcx],dl
     582:	08 0c 03             	or     BYTE PTR [rbx+rax*1],cl
     585:	00 00                	add    BYTE PTR [rax],al
     587:	00 5c 07 00          	add    BYTE PTR [rdi+rax*1+0x0],bl
     58b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     58e:	9a                   	(bad)  
     58f:	01 00                	add    DWORD PTR [rax],eax
     591:	00 08                	add    BYTE PTR [rax],cl
     593:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
     597:	00 04 61             	add    BYTE PTR [rcx+riz*2],al
     59a:	06                   	(bad)  
     59b:	00 00                	add    BYTE PTR [rax],al
     59d:	24 01                	and    al,0x1
     59f:	00 00                	add    BYTE PTR [rax],al
     5a1:	88 10                	mov    BYTE PTR [rax],dl
     5a3:	20 00                	and    BYTE PTR [rax],al
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	00 00                	add    BYTE PTR [rax],al
     5a9:	16                   	(bad)  
     5aa:	03 00                	add    eax,DWORD PTR [rax]
     5ac:	00 00                	add    BYTE PTR [rax],al
     5ae:	00 00                	add    BYTE PTR [rax],al
     5b0:	00 b0 01 00 00 02    	add    BYTE PTR [rax+0x2000001],dh
     5b6:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 726 <stivale_hdr-0x1ff8da>
     5bc:	02 08                	add    cl,BYTE PTR [rax]
     5be:	07                   	(bad)  
     5bf:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
     5c2:	00 02                	add    BYTE PTR [rdx],al
     5c4:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 72f <stivale_hdr-0x1ff8d1>
     5ca:	02 10                	add    dl,BYTE PTR [rax]
     5cc:	04 8f                	add    al,0x8f
     5ce:	01 00                	add    DWORD PTR [rax],eax
     5d0:	00 03                	add    BYTE PTR [rbx],al
     5d2:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     5d5:	00 02                	add    BYTE PTR [rdx],al
     5d7:	01 08                	add    DWORD PTR [rax],ecx
     5d9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5da:	00 00                	add    BYTE PTR [rax],al
     5dc:	00 02                	add    BYTE PTR [rdx],al
     5de:	02 07                	add    al,BYTE PTR [rdi]
     5e0:	9b                   	fwait
     5e1:	01 00                	add    DWORD PTR [rax],eax
     5e3:	00 02                	add    BYTE PTR [rdx],al
     5e5:	04 07                	add    al,0x7
     5e7:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
     5ea:	00 02                	add    BYTE PTR [rdx],al
     5ec:	10 07                	adc    BYTE PTR [rdi],al
     5ee:	00 00                	add    BYTE PTR [rax],al
     5f0:	00 00                	add    BYTE PTR [rax],al
     5f2:	04 5f                	add    al,0x5f
     5f4:	03 00                	add    eax,DWORD PTR [rax]
     5f6:	00 02                	add    BYTE PTR [rdx],al
     5f8:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 64c <stivale_hdr-0x1ff9b4>
     5fe:	04 4c                	add    al,0x4c
     600:	01 00                	add    DWORD PTR [rax],eax
     602:	00 02                	add    BYTE PTR [rdx],al
     604:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 65f <stivale_hdr-0x1ff9a1>
     60a:	04 e5                	add    al,0xe5
     60c:	02 00                	add    al,BYTE PTR [rax]
     60e:	00 02                	add    BYTE PTR [rdx],al
     610:	0c 1d                	or     al,0x1d
     612:	5c                   	pop    rsp
     613:	00 00                	add    BYTE PTR [rax],al
     615:	00 04 25 00 00 00 02 	add    BYTE PTR ds:0x2000000,al
     61c:	0d 1d 34 00 00       	or     eax,0x341d
     621:	00 02                	add    BYTE PTR [rdx],al
     623:	01 06                	add    DWORD PTR [rsi],eax
     625:	70 00                	jo     627 <stivale_hdr-0x1ff9d9>
     627:	00 00                	add    BYTE PTR [rax],al
     629:	02 02                	add    al,BYTE PTR [rdx]
     62b:	05 73 01 00 00       	add    eax,0x173
     630:	05 04 05 69 6e       	add    eax,0x6e690504
     635:	74 00                	je     637 <stivale_hdr-0x1ff9c9>
     637:	02 10                	add    dl,BYTE PTR [rax]
     639:	05 1b 01 00 00       	add    eax,0x11b
     63e:	04 8f                	add    al,0x8f
     640:	22 00                	and    al,BYTE PTR [rax]
     642:	00 02                	add    BYTE PTR [rdx],al
     644:	19 1d 8e 00 00 00    	sbb    DWORD PTR [rip+0x8e],ebx        # 6d8 <stivale_hdr-0x1ff928>
     64a:	02 01                	add    al,BYTE PTR [rcx]
     64c:	06                   	(bad)  
     64d:	77 00                	ja     64f <stivale_hdr-0x1ff9b1>
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	06                   	(bad)  
     652:	73 79                	jae    6cd <stivale_hdr-0x1ff933>
     654:	73 00                	jae    656 <stivale_hdr-0x1ff9aa>
     656:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
     659:	d3 02                	rol    DWORD PTR [rdx],cl
     65b:	00 00                	add    BYTE PTR [rax],al
     65d:	07                   	(bad)  
     65e:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
     664:	0f 20 02             	mov    rdx,cr0
     667:	00 00                	add    BYTE PTR [rax],al
     669:	08 0a                	or     BYTE PTR [rdx],cl
     66b:	24 00                	and    al,0x0
     66d:	00 24 03             	add    BYTE PTR [rbx+rax*1],ah
     670:	06                   	(bad)  
     671:	10 64 01 00          	adc    BYTE PTR [rcx+rax*1+0x0],ah
     675:	00 09                	add    BYTE PTR [rcx],cl
     677:	ac                   	lods   al,BYTE PTR ds:[rsi]
     678:	34 00                	xor    al,0x0
     67a:	00 03                	add    BYTE PTR [rbx],al
     67c:	07                   	(bad)  
     67d:	14 d3                	adc    al,0xd3
     67f:	02 00                	add    al,BYTE PTR [rax]
     681:	00 00                	add    BYTE PTR [rax],al
     683:	09 4f 0e             	or     DWORD PTR [rdi+0xe],ecx
     686:	00 00                	add    BYTE PTR [rax],al
     688:	03 08                	add    ecx,DWORD PTR [rax]
     68a:	14 82                	adc    al,0x82
     68c:	00 00                	add    BYTE PTR [rax],al
     68e:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
     691:	01 02                	add    DWORD PTR [rdx],eax
     693:	00 00                	add    BYTE PTR [rax],al
     695:	03 09                	add    ecx,DWORD PTR [rcx]
     697:	14 6a                	adc    al,0x6a
     699:	00 00                	add    BYTE PTR [rax],al
     69b:	00 08                	add    BYTE PTR [rax],cl
     69d:	09 fa                	or     edx,edi
     69f:	02 00                	add    al,BYTE PTR [rax]
     6a1:	00 03                	add    BYTE PTR [rbx],al
     6a3:	0a 14 6a             	or     dl,BYTE PTR [rdx+rbp*2]
     6a6:	00 00                	add    BYTE PTR [rax],al
     6a8:	00 09                	add    BYTE PTR [rcx],cl
     6aa:	09 c9                	or     ecx,ecx
     6ac:	2d 00 00 03 0b       	sub    eax,0xb030000
     6b1:	14 e3                	adc    al,0xe3
     6b3:	02 00                	add    al,BYTE PTR [rax]
     6b5:	00 0a                	add    BYTE PTR [rdx],cl
     6b7:	09 d5                	or     ebp,edx
     6b9:	02 00                	add    al,BYTE PTR [rax]
     6bb:	00 03                	add    BYTE PTR [rbx],al
     6bd:	0c 14                	or     al,0x14
     6bf:	f3 02 00             	repz add al,BYTE PTR [rax]
     6c2:	00 10                	add    BYTE PTR [rax],dl
     6c4:	09 fa                	or     edx,edi
     6c6:	01 00                	add    DWORD PTR [rax],eax
     6c8:	00 03                	add    BYTE PTR [rbx],al
     6ca:	0d 14 82 00 00       	or     eax,0x8214
     6cf:	00 18                	add    BYTE PTR [rax],bl
     6d1:	09 ba 01 00 00 03    	or     DWORD PTR [rdx+0x3000001],edi
     6d7:	0e                   	(bad)  
     6d8:	14 82                	adc    al,0x82
     6da:	00 00                	add    BYTE PTR [rax],al
     6dc:	00 1c 09             	add    BYTE PTR [rcx+rcx*1],bl
     6df:	3c 03                	cmp    al,0x3
     6e1:	00 00                	add    BYTE PTR [rax],al
     6e3:	03 0f                	add    ecx,DWORD PTR [rdi]
     6e5:	14 82                	adc    al,0x82
     6e7:	00 00                	add    BYTE PTR [rax],al
     6e9:	00 20                	add    BYTE PTR [rax],ah
     6eb:	00 08                	add    BYTE PTR [rax],cl
     6ed:	1f                   	(bad)  
     6ee:	03 00                	add    eax,DWORD PTR [rax]
     6f0:	00 24 03             	add    BYTE PTR [rbx+rax*1],ah
     6f3:	12 10                	adc    dl,BYTE PTR [rax]
     6f5:	e7 01                	out    0x1,eax
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	09 ac 34 00 00 03 13 	or     DWORD PTR [rsp+rsi*1+0x13030000],ebp
     700:	14 f3                	adc    al,0xf3
     702:	02 00                	add    al,BYTE PTR [rax]
     704:	00 00                	add    BYTE PTR [rax],al
     706:	09 fa                	or     edx,edi
     708:	02 00                	add    al,BYTE PTR [rax]
     70a:	00 03                	add    BYTE PTR [rbx],al
     70c:	14 14                	adc    al,0x14
     70e:	6a 00                	push   0x0
     710:	00 00                	add    BYTE PTR [rax],al
     712:	08 09                	or     BYTE PTR [rcx],cl
     714:	c9                   	leave  
     715:	2d 00 00 03 15       	sub    eax,0x15030000
     71a:	14 e3                	adc    al,0xe3
     71c:	02 00                	add    al,BYTE PTR [rax]
     71e:	00 09                	add    BYTE PTR [rcx],cl
     720:	09 01                	or     DWORD PTR [rcx],eax
     722:	02 00                	add    al,BYTE PTR [rax]
     724:	00 03                	add    BYTE PTR [rbx],al
     726:	16                   	(bad)  
     727:	14 6a                	adc    al,0x6a
     729:	00 00                	add    BYTE PTR [rax],al
     72b:	00 0f                	add    BYTE PTR [rdi],cl
     72d:	09 d6                	or     esi,edx
     72f:	01 00                	add    DWORD PTR [rax],eax
     731:	00 03                	add    BYTE PTR [rbx],al
     733:	17                   	(bad)  
     734:	14 82                	adc    al,0x82
     736:	00 00                	add    BYTE PTR [rax],al
     738:	00 10                	add    BYTE PTR [rax],dl
     73a:	09 4f 0e             	or     DWORD PTR [rdi+0xe],ecx
     73d:	00 00                	add    BYTE PTR [rax],al
     73f:	03 18                	add    ebx,DWORD PTR [rax]
     741:	14 82                	adc    al,0x82
     743:	00 00                	add    BYTE PTR [rax],al
     745:	00 14 09             	add    BYTE PTR [rcx+rcx*1],dl
     748:	0a 02                	or     al,BYTE PTR [rdx]
     74a:	00 00                	add    BYTE PTR [rax],al
     74c:	03 19                	add    ebx,DWORD PTR [rcx]
     74e:	19 03                	sbb    DWORD PTR [rbx],eax
     750:	03 00                	add    eax,DWORD PTR [rax]
     752:	00 18                	add    BYTE PTR [rax],bl
     754:	09 f9                	or     ecx,edi
     756:	02 00                	add    al,BYTE PTR [rax]
     758:	00 03                	add    BYTE PTR [rbx],al
     75a:	1a 14 6a             	sbb    dl,BYTE PTR [rdx+rbp*2]
     75d:	00 00                	add    BYTE PTR [rax],al
     75f:	00 20                	add    BYTE PTR [rax],ah
     761:	0a 70 61             	or     dh,BYTE PTR [rax+0x61]
     764:	64 00 03             	add    BYTE PTR fs:[rbx],al
     767:	1b 14 09             	sbb    edx,DWORD PTR [rcx+rcx*1]
     76a:	03 00                	add    eax,DWORD PTR [rax]
     76c:	00 21                	add    BYTE PTR [rcx],ah
     76e:	00 08                	add    BYTE PTR [rax],cl
     770:	35 05 00 00 2c       	xor    eax,0x2c000005
     775:	03 1e                	add    ebx,DWORD PTR [rsi]
     777:	10 0f                	adc    BYTE PTR [rdi],cl
     779:	02 00                	add    al,BYTE PTR [rax]
     77b:	00 09                	add    BYTE PTR [rcx],cl
     77d:	9c                   	pushf  
     77e:	35 00 00 03 1f       	xor    eax,0x1f030000
     783:	18 e1                	sbb    cl,ah
     785:	00 00                	add    BYTE PTR [rax],al
     787:	00 00                	add    BYTE PTR [rax],al
     789:	0a 70 61             	or     dh,BYTE PTR [rax+0x61]
     78c:	64 00 03             	add    BYTE PTR fs:[rbx],al
     78f:	20 14 f3             	and    BYTE PTR [rbx+rsi*8],dl
     792:	02 00                	add    al,BYTE PTR [rax]
     794:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
     797:	0b 8c 02 00 00 03 23 	or     ecx,DWORD PTR [rdx+rax*1+0x23030000]
     79e:	17                   	(bad)  
     79f:	b7 03                	mov    bh,0x3
     7a1:	00 00                	add    BYTE PTR [rax],al
     7a3:	19 03                	sbb    DWORD PTR [rbx],eax
     7a5:	00 00                	add    BYTE PTR [rax],al
     7a7:	00 0c 48             	add    BYTE PTR [rax+rcx*2],cl
     7aa:	02 00                	add    al,BYTE PTR [rax]
     7ac:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
     7af:	0f 0d 1f             	prefetch BYTE PTR [rdi]
     7b2:	04 00                	add    al,0x0
     7b4:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     7b7:	1b 8e 00 00 00 0d    	sbb    ecx,DWORD PTR [rsi+0xd000000]
     7bd:	79 03                	jns    7c2 <stivale_hdr-0x1ff83e>
     7bf:	00 00                	add    BYTE PTR [rax],al
     7c1:	04 0b                	add    al,0xb
     7c3:	1b 8e 00 00 00 0b    	sbb    ecx,DWORD PTR [rsi+0xb000000]
     7c9:	ed                   	in     eax,dx
     7ca:	05 00 00 04 0d       	add    eax,0xd040000
     7cf:	17                   	(bad)  
     7d0:	9c                   	pushf  
     7d1:	05 00 00 8e 00       	add    eax,0x8e0000
     7d6:	00 00                	add    BYTE PTR [rax],al
     7d8:	0b 1e                	or     ebx,DWORD PTR [rsi]
     7da:	06                   	(bad)  
     7db:	00 00                	add    BYTE PTR [rax],al
     7dd:	04 0e                	add    al,0xe
     7df:	17                   	(bad)  
     7e0:	31 07                	xor    DWORD PTR [rdi],eax
     7e2:	00 00                	add    BYTE PTR [rax],al
     7e4:	8e 00                	mov    es,WORD PTR [rax]
     7e6:	00 00                	add    BYTE PTR [rax],al
     7e8:	0e                   	(bad)  
     7e9:	80 06 00             	add    BYTE PTR [rsi],0x0
     7ec:	00 01                	add    BYTE PTR [rcx],al
     7ee:	53                   	push   rbx
     7ef:	06                   	(bad)  
     7f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7f1:	07                   	(bad)  
     7f2:	00 00                	add    BYTE PTR [rax],al
     7f4:	0e                   	(bad)  
     7f5:	ca 03 00             	retf   0x3
     7f8:	00 01                	add    BYTE PTR [rcx],al
     7fa:	4c 06                	rex.WR (bad) 
     7fc:	0d 05 00 00 0f       	or     eax,0xf000005
     801:	68 05 00 00 01       	push   0x1000005
     806:	44 06                	rex.R (bad) 
     808:	e7 07                	out    0x7,eax
     80a:	00 00                	add    BYTE PTR [rax],al
     80c:	8e 02                	mov    es,WORD PTR [rdx]
     80e:	00 00                	add    BYTE PTR [rax],al
     810:	10 19                	adc    BYTE PTR [rcx],bl
     812:	03 00                	add    eax,DWORD PTR [rax]
     814:	00 00                	add    BYTE PTR [rax],al
     816:	0f 76 05 00 00 01 3b 	pcmpeqd mm0,QWORD PTR [rip+0x3b010000]        # 3b01081d <__kernel_end+0x3adfe81d>
     81d:	06                   	(bad)  
     81e:	8e 04 00             	mov    es,WORD PTR [rax+rax*1]
     821:	00 a4 02 00 00 10 25 	add    BYTE PTR [rdx+rax*1+0x25100000],ah
     828:	06                   	(bad)  
     829:	00 00                	add    BYTE PTR [rax],al
     82b:	00 0f                	add    BYTE PTR [rdi],cl
     82d:	95                   	xchg   ebp,eax
     82e:	03 00                	add    eax,DWORD PTR [rax]
     830:	00 01                	add    BYTE PTR [rcx],al
     832:	2b 06                	sub    eax,DWORD PTR [rsi]
     834:	9a                   	(bad)  
     835:	07                   	(bad)  
     836:	00 00                	add    BYTE PTR [rax],al
     838:	bf 02 00 00 10       	mov    edi,0x10000002
     83d:	25 06 00 00 10       	and    eax,0x10000006
     842:	56                   	push   rsi
     843:	06                   	(bad)  
     844:	00 00                	add    BYTE PTR [rax],al
     846:	00 11                	add    BYTE PTR [rcx],dl
     848:	e5 06                	in     eax,0x6
     84a:	00 00                	add    BYTE PTR [rax],al
     84c:	01 15 06 2d 06 00    	add    DWORD PTR [rip+0x62d06],edx        # 63558 <stivale_hdr-0x19caa8>
     852:	00 10                	add    BYTE PTR [rax],dl
     854:	25 06 00 00 00       	and    eax,0x6
     859:	00 00                	add    BYTE PTR [rax],al
     85b:	12 6a 00             	adc    ch,BYTE PTR [rdx+0x0]
     85e:	00 00                	add    BYTE PTR [rax],al
     860:	e3 02                	jrcxz  864 <stivale_hdr-0x1ff79c>
     862:	00 00                	add    BYTE PTR [rax],al
     864:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     867:	00 00                	add    BYTE PTR [rax],al
     869:	03 00                	add    eax,DWORD PTR [rax]
     86b:	12 6a 00             	adc    ch,BYTE PTR [rdx+0x0]
     86e:	00 00                	add    BYTE PTR [rax],al
     870:	f3 02 00             	repz add al,BYTE PTR [rax]
     873:	00 13                	add    BYTE PTR [rbx],dl
     875:	34 00                	xor    al,0x0
     877:	00 00                	add    BYTE PTR [rax],al
     879:	05 00 12 6a 00       	add    eax,0x6a1200
     87e:	00 00                	add    BYTE PTR [rax],al
     880:	03 03                	add    eax,DWORD PTR [rbx]
     882:	00 00                	add    BYTE PTR [rax],al
     884:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     887:	00 00                	add    BYTE PTR [rax],al
     889:	07                   	(bad)  
     88a:	00 14 08             	add    BYTE PTR [rax+rcx*1],dl
     88d:	e1 00                	loope  88f <stivale_hdr-0x1ff771>
     88f:	00 00                	add    BYTE PTR [rax],al
     891:	12 6a 00             	adc    ch,BYTE PTR [rdx+0x0]
     894:	00 00                	add    BYTE PTR [rax],al
     896:	19 03                	sbb    DWORD PTR [rbx],eax
     898:	00 00                	add    BYTE PTR [rax],al
     89a:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
     89d:	00 00                	add    BYTE PTR [rax],al
     89f:	02 00                	add    al,BYTE PTR [rax]
     8a1:	14 08                	adc    al,0x8
     8a3:	64 01 00             	add    DWORD PTR fs:[rax],eax
     8a6:	00 08                	add    BYTE PTR [rax],cl
     8a8:	4d 06                	rex.WRB (bad) 
     8aa:	00 00                	add    BYTE PTR [rax],al
     8ac:	10 05 2d 08 6e 03    	adc    BYTE PTR [rip+0x36e082d],al        # 36e10df <__kernel_end+0x34cf0df>
     8b2:	00 00                	add    BYTE PTR [rax],al
     8b4:	09 c5                	or     ebp,eax
     8b6:	01 00                	add    DWORD PTR [rax],eax
     8b8:	00 05 2e 0d b6 00    	add    BYTE PTR [rip+0xb60d2e],al        # b615ec <__kernel_end+0x94f5ec>
     8be:	00 00                	add    BYTE PTR [rax],al
     8c0:	00 09                	add    BYTE PTR [rcx],cl
     8c2:	c3                   	ret    
     8c3:	02 00                	add    al,BYTE PTR [rax]
     8c5:	00 05 2f 0d 76 00    	add    BYTE PTR [rip+0x760d2f],al        # 7615fa <__kernel_end+0x54f5fa>
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	08 09                	or     BYTE PTR [rcx],cl
     8cf:	53                   	push   rbx
     8d0:	01 00                	add    DWORD PTR [rax],eax
     8d2:	00 05 30 0d 76 00    	add    BYTE PTR [rip+0x760d30],al        # 761608 <__kernel_end+0x54f608>
     8d8:	00 00                	add    BYTE PTR [rax],al
     8da:	0a 09                	or     cl,BYTE PTR [rcx]
     8dc:	12 00                	adc    al,BYTE PTR [rax]
     8de:	00 00                	add    BYTE PTR [rax],al
     8e0:	05 31 0d 76 00       	add    eax,0x760d31
     8e5:	00 00                	add    BYTE PTR [rax],al
     8e7:	0c 09                	or     al,0x9
     8e9:	59                   	pop    rcx
     8ea:	00 00                	add    BYTE PTR [rax],al
     8ec:	00 05 32 0d 76 00    	add    BYTE PTR [rip+0x760d32],al        # 761624 <__kernel_end+0x54f624>
     8f2:	00 00                	add    BYTE PTR [rax],al
     8f4:	0e                   	(bad)  
     8f5:	00 08                	add    BYTE PTR [rax],cl
     8f7:	d4                   	(bad)  
     8f8:	07                   	(bad)  
     8f9:	00 00                	add    BYTE PTR [rax],al
     8fb:	10 05 35 08 96 03    	adc    BYTE PTR [rip+0x3960835],al        # 3961136 <__kernel_end+0x374f136>
     901:	00 00                	add    BYTE PTR [rax],al
     903:	09 96 02 00 00 05    	or     DWORD PTR [rsi+0x5000002],edx
     909:	36 0d b6 00 00 00    	ss or  eax,0xb6
     90f:	00 09                	add    BYTE PTR [rcx],cl
     911:	79 02                	jns    915 <stivale_hdr-0x1ff6eb>
     913:	00 00                	add    BYTE PTR [rax],al
     915:	05 37 0d 8e 00       	add    eax,0x8e0d37
     91a:	00 00                	add    BYTE PTR [rax],al
     91c:	08 00                	or     BYTE PTR [rax],al
     91e:	06                   	(bad)  
     91f:	69 6f 00 06 04 0b c7 	imul   ebp,DWORD PTR [rdi+0x0],0xc70b0406
     926:	03 00                	add    eax,DWORD PTR [rax]
     928:	00 06                	add    BYTE PTR [rsi],al
     92a:	70 63                	jo     98f <stivale_hdr-0x1ff671>
     92c:	69 00 07 07 0f be    	imul   eax,DWORD PTR [rax],0xbe0f0707
     932:	03 00                	add    eax,DWORD PTR [rax]
     934:	00 0b                	add    BYTE PTR [rbx],cl
     936:	2e 04 00             	cs add al,0x0
     939:	00 07                	add    BYTE PTR [rdi],al
     93b:	33 28                	xor    ebp,DWORD PTR [rax]
     93d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     93e:	03 00                	add    eax,DWORD PTR [rax]
     940:	00 c7                	add    bh,al
     942:	03 00                	add    eax,DWORD PTR [rax]
     944:	00 00                	add    BYTE PTR [rax],al
     946:	15 74 74 79 00       	adc    eax,0x797474
     94b:	09 0e                	or     DWORD PTR [rsi],ecx
     94d:	0f 00 14 08          	lldt   WORD PTR [rax+rcx*1]
     951:	e7 01                	out    0x1,eax
     953:	00 00                	add    BYTE PTR [rax],al
     955:	07                   	(bad)  
     956:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
     959:	00 08                	add    BYTE PTR [rax],cl
     95b:	08 0b                	or     BYTE PTR [rbx],cl
     95d:	33 05 00 00 07 eb    	xor    eax,DWORD PTR [rip+0xffffffffeb070000]        # ffffffffeb070963 <__kernel_end+0xffffffffeae5e963>
     963:	06                   	(bad)  
     964:	00 00                	add    BYTE PTR [rax],al
     966:	08 09                	or     BYTE PTR [rcx],cl
     968:	0c 22                	or     al,0x22
     96a:	05 00 00 16 fb       	add    eax,0xfb160000
     96f:	05 00 00 07 04       	add    eax,0x4070000
     974:	5c                   	pop    rsp
     975:	00 00                	add    BYTE PTR [rax],al
     977:	00 08                	add    BYTE PTR [rax],cl
     979:	0a 08                	or     cl,BYTE PTR [rax]
     97b:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
     97e:	00 17                	add    BYTE PTR [rdi],dl
     980:	89 05 00 00 00 17    	mov    DWORD PTR [rip+0x17000000],eax        # 17000986 <__kernel_end+0x16dee986>
     986:	64 07                	fs (bad) 
     988:	00 00                	add    BYTE PTR [rax],al
     98a:	01 17                	add    DWORD PTR [rdi],edx
     98c:	6a 04                	push   0x4
     98e:	00 00                	add    BYTE PTR [rax],al
     990:	02 17                	add    dl,BYTE PTR [rdi]
     992:	41 05 00 00 03 17    	rex.B add eax,0x17030000
     998:	86 03                	xchg   BYTE PTR [rbx],al
     99a:	00 00                	add    BYTE PTR [rax],al
     99c:	04 17                	add    al,0x17
     99e:	9c                   	pushf  
     99f:	06                   	(bad)  
     9a0:	00 00                	add    BYTE PTR [rax],al
     9a2:	05 17 33 04 00       	add    eax,0x43317
     9a7:	00 07                	add    BYTE PTR [rdi],al
     9a9:	17                   	(bad)  
     9aa:	03 06                	add    eax,DWORD PTR [rsi]
     9ac:	00 00                	add    BYTE PTR [rax],al
     9ae:	09 17                	or     DWORD PTR [rdi],edx
     9b0:	0c 06                	or     al,0x6
     9b2:	00 00                	add    BYTE PTR [rax],al
     9b4:	0a 17                	or     dl,BYTE PTR [rdi]
     9b6:	15 06 00 00 0b       	adc    eax,0xb000006
     9bb:	18 6e 78             	sbb    BYTE PTR [rsi+0x78],ch
     9be:	00 3f                	add    BYTE PTR [rdi],bh
     9c0:	00 08                	add    BYTE PTR [rax],cl
     9c2:	40 04 00             	add    al,0x0
     9c5:	00 08                	add    BYTE PTR [rax],cl
     9c7:	08 17                	or     BYTE PTR [rdi],dl
     9c9:	0a f3                	or     dh,bl
     9cb:	04 00                	add    al,0x0
     9cd:	00 09                	add    BYTE PTR [rcx],cl
     9cf:	07                   	(bad)  
     9d0:	05 00 00 08 18       	add    eax,0x18080000
     9d5:	0b 8e 00 00 00 00    	or     ecx,DWORD PTR [rsi+0x0]
     9db:	19 55 04             	sbb    DWORD PTR [rbp+0x4],edx
     9de:	00 00                	add    BYTE PTR [rax],al
     9e0:	08 19                	or     BYTE PTR [rcx],bl
     9e2:	09 a5 06 00 00 67    	or     DWORD PTR [rbp+0x67000006],esp
     9e8:	04 00                	add    al,0x0
     9ea:	00 77 04             	add    BYTE PTR [rdi+0x4],dh
     9ed:	00 00                	add    BYTE PTR [rax],al
     9ef:	1a 33                	sbb    dh,BYTE PTR [rbx]
     9f1:	05 00 00 10 e5       	add    eax,0xe5100000
     9f6:	03 00                	add    eax,DWORD PTR [rax]
     9f8:	00 10                	add    BYTE PTR [rax],dl
     9fa:	39 05 00 00 00 1b    	cmp    DWORD PTR [rip+0x1b000000],eax        # 1b000a00 <__kernel_end+0x1adeea00>
     a00:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
     a03:	00 08                	add    BYTE PTR [rax],cl
     a05:	1a 09                	sbb    cl,BYTE PTR [rcx]
     a07:	f2 06                	repnz (bad) 
     a09:	00 00                	add    BYTE PTR [rax],al
     a0b:	39 05 00 00 8f 04    	cmp    DWORD PTR [rip+0x48f0000],eax        # 48f0a11 <__kernel_end+0x46dea11>
     a11:	00 00                	add    BYTE PTR [rax],al
     a13:	9a                   	(bad)  
     a14:	04 00                	add    al,0x0
     a16:	00 1a                	add    BYTE PTR [rdx],bl
     a18:	33 05 00 00 10 e5    	xor    eax,DWORD PTR [rip+0xffffffffe5100000]        # ffffffffe5100a1e <__kernel_end+0xffffffffe4eeea1e>
     a1e:	03 00                	add    eax,DWORD PTR [rax]
     a20:	00 00                	add    BYTE PTR [rax],al
     a22:	19 ff                	sbb    edi,edi
     a24:	04 00                	add    al,0x0
     a26:	00 08                	add    BYTE PTR [rax],cl
     a28:	1b 09                	sbb    ecx,DWORD PTR [rcx]
     a2a:	bb 05 00 00 ae       	mov    ebx,0xae000005
     a2f:	04 00                	add    al,0x0
     a31:	00 b9 04 00 00 1a    	add    BYTE PTR [rcx+0x1a000004],bh
     a37:	33 05 00 00 10 6a    	xor    eax,DWORD PTR [rip+0x6a100000]        # 6a100a3d <__kernel_end+0x69eeea3d>
     a3d:	00 00                	add    BYTE PTR [rax],al
     a3f:	00 00                	add    BYTE PTR [rax],al
     a41:	19 5e 04             	sbb    DWORD PTR [rsi+0x4],ebx
     a44:	00 00                	add    BYTE PTR [rax],al
     a46:	08 1c 09             	or     BYTE PTR [rcx+rcx*1],bl
     a49:	c8 04 00 00          	enter  0x4,0x0
     a4d:	cd 04                	int    0x4
     a4f:	00 00                	add    BYTE PTR [rax],al
     a51:	d8 04 00             	fadd   DWORD PTR [rax+rax*1]
     a54:	00 1a                	add    BYTE PTR [rdx],bl
     a56:	33 05 00 00 10 8e    	xor    eax,DWORD PTR [rip+0xffffffff8e100000]        # ffffffff8e100a5c <__kernel_end+0xffffffff8deeea5c>
     a5c:	00 00                	add    BYTE PTR [rax],al
     a5e:	00 00                	add    BYTE PTR [rax],al
     a60:	1c 74                	sbb    al,0x74
     a62:	06                   	(bad)  
     a63:	00 00                	add    BYTE PTR [rax],al
     a65:	08 1d 0b e0 03 00    	or     BYTE PTR [rip+0x3e00b],bl        # 3ea76 <stivale_hdr-0x1c158a>
     a6b:	00 8e 00 00 00 ec    	add    BYTE PTR [rsi-0x14000000],cl
     a71:	04 00                	add    al,0x0
     a73:	00 1a                	add    BYTE PTR [rdx],bl
     a75:	33 05 00 00 00 00    	xor    eax,DWORD PTR [rip+0x0]        # a7b <stivale_hdr-0x1ff585>
     a7b:	1d 91 05 00 00       	sbb    eax,0x591
     a80:	00 10                	add    BYTE PTR [rax],dl
     a82:	00 10                	add    BYTE PTR [rax],dl
     a84:	08 20                	or     BYTE PTR [rax],ah
     a86:	0a 11                	or     dl,BYTE PTR [rcx]
     a88:	05 00 00 09 e8       	add    eax,0xe8090000
     a8d:	21 00                	and    DWORD PTR [rax],eax
     a8f:	00 08                	add    BYTE PTR [rax],cl
     a91:	21 19                	and    DWORD PTR [rcx],ebx
     a93:	40 05 00 00 00 00    	rex add eax,0x0
     a99:	0b 5e 07             	or     ebx,DWORD PTR [rsi+0x7]
     a9c:	00 00                	add    BYTE PTR [rax],al
     a9e:	08 2d 16 4f 05 00    	or     BYTE PTR [rip+0x54f16],ch        # 559ba <stivale_hdr-0x1aa646>
     aa4:	00 51 05             	add    BYTE PTR [rcx+0x5],dl
     aa7:	00 00                	add    BYTE PTR [rax],al
     aa9:	00 15 70 6d 6d 00    	add    BYTE PTR [rip+0x6d6d70],dl        # 6d781f <__kernel_end+0x4c581f>
     aaf:	0a 05 0c 1e 22 0e    	or     al,BYTE PTR [rip+0xe221e0c]        # e2228c1 <__kernel_end+0xe0108c1>
     ab5:	00 00                	add    BYTE PTR [rax],al
     ab7:	0c 05                	or     al,0x5
     ab9:	0c 00                	or     al,0x0
     abb:	14 08                	adc    al,0x8
     abd:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
     ac0:	00 02                	add    BYTE PTR [rdx],al
     ac2:	01 02                	add    DWORD PTR [rdx],eax
     ac4:	61                   	(bad)  
     ac5:	02 00                	add    al,BYTE PTR [rax]
     ac7:	00 12                	add    BYTE PTR [rdx],dl
     ac9:	39 04 00             	cmp    DWORD PTR [rax+rax*1],eax
     acc:	00 51 05             	add    BYTE PTR [rcx+0x5],dl
     acf:	00 00                	add    BYTE PTR [rax],al
     ad1:	1f                   	(bad)  
     ad2:	34 00                	xor    al,0x0
     ad4:	00 00                	add    BYTE PTR [rax],al
     ad6:	ff 01                	inc    DWORD PTR [rcx]
     ad8:	00 14 08             	add    BYTE PTR [rax+rcx*1],dl
     adb:	f3 04 00             	repz add al,0x0
     ade:	00 06                	add    BYTE PTR [rsi],al
     ae0:	67 66 78 00          	addr32 data16 js ae4 <stivale_hdr-0x1ff51c>
     ae4:	0b 08                	or     ecx,DWORD PTR [rax]
     ae6:	0b 8c 05 00 00 0b 08 	or     ecx,DWORD PTR [rbp+rax*1+0x80b0000]
     aed:	2d 00 00 0b 0a       	sub    eax,0xa0b0000
     af2:	18 75 04             	sbb    BYTE PTR [rbp+0x4],dh
     af5:	00 00                	add    BYTE PTR [rax],al
     af7:	8c 05 00 00 20 67    	mov    WORD PTR [rip+0x67200000],es        # 67200afd <__kernel_end+0x66feeafd>
     afd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     afe:	70 00                	jo     b00 <stivale_hdr-0x1ff500>
     b00:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b02:	22 51 07             	and    dl,BYTE PTR [rcx+0x7]
     b05:	00 00                	add    BYTE PTR [rax],al
     b07:	1f                   	(bad)  
     b08:	03 00                	add    eax,DWORD PTR [rax]
     b0a:	00 1e                	add    BYTE PTR [rsi],bl
     b0c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     b0d:	02 00                	add    al,BYTE PTR [rax]
     b0f:	00 0b                	add    BYTE PTR [rbx],cl
     b11:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
     b14:	14 08                	adc    al,0x8
     b16:	82                   	(bad)  
     b17:	00 00                	add    BYTE PTR [rax],al
     b19:	00 1e                	add    BYTE PTR [rsi],bl
     b1b:	95                   	xchg   ebp,eax
     b1c:	07                   	(bad)  
     b1d:	00 00                	add    BYTE PTR [rax],al
     b1f:	0d 04 0b 21 50       	or     eax,0x50210b04
     b24:	02 00                	add    al,BYTE PTR [rax]
     b26:	00 01                	add    BYTE PTR [rcx],al
     b28:	08 09                	or     BYTE PTR [rcx],cl
     b2a:	03 00                	add    eax,DWORD PTR [rax]
     b2c:	e0 20                	loopne b4e <stivale_hdr-0x1ff4b2>
     b2e:	00 00                	add    BYTE PTR [rax],al
     b30:	00 00                	add    BYTE PTR [rax],al
     b32:	00 22                	add    BYTE PTR [rdx],ah
     b34:	40 02 00             	add    al,BYTE PTR [rax]
     b37:	00 01                	add    BYTE PTR [rcx],al
     b39:	0f 08                	invd   
     b3b:	09 03                	or     DWORD PTR [rbx],eax
     b3d:	08 e0                	or     al,ah
     b3f:	20 00                	and    BYTE PTR [rax],al
     b41:	00 00                	add    BYTE PTR [rax],al
     b43:	00 00                	add    BYTE PTR [rax],al
     b45:	23 60 02             	and    esp,DWORD PTR [rax+0x2]
     b48:	00 00                	add    BYTE PTR [rax],al
     b4a:	88 13                	mov    BYTE PTR [rbx],dl
     b4c:	20 00                	and    BYTE PTR [rax],al
     b4e:	00 00                	add    BYTE PTR [rax],al
     b50:	00 00                	add    BYTE PTR [rax],al
     b52:	16                   	(bad)  
     b53:	00 00                	add    BYTE PTR [rax],al
     b55:	00 00                	add    BYTE PTR [rax],al
     b57:	00 00                	add    BYTE PTR [rax],al
     b59:	00 01                	add    BYTE PTR [rcx],al
     b5b:	9c                   	pushf  
     b5c:	24 6c                	and    al,0x6c
     b5e:	02 00                	add    al,BYTE PTR [rax]
     b60:	00 4a 13             	add    BYTE PTR [rdx+0x13],cl
     b63:	20 00                	and    BYTE PTR [rax],al
     b65:	00 00                	add    BYTE PTR [rax],al
     b67:	00 00                	add    BYTE PTR [rax],al
     b69:	3e 00 00             	add    BYTE PTR ds:[rax],al
     b6c:	00 00                	add    BYTE PTR [rax],al
     b6e:	00 00                	add    BYTE PTR [rax],al
     b70:	00 01                	add    BYTE PTR [rcx],al
     b72:	9c                   	pushf  
     b73:	25 78 02 00 00       	and    eax,0x278
     b78:	0a 13                	or     dl,BYTE PTR [rbx]
     b7a:	20 00                	and    BYTE PTR [rax],al
     b7c:	00 00                	add    BYTE PTR [rax],al
     b7e:	00 00                	add    BYTE PTR [rax],al
     b80:	40 00 00             	add    BYTE PTR [rax],al
     b83:	00 00                	add    BYTE PTR [rax],al
     b85:	00 00                	add    BYTE PTR [rax],al
     b87:	00 01                	add    BYTE PTR [rcx],al
     b89:	9c                   	pushf  
     b8a:	25 06 00 00 26       	and    eax,0x26000006
     b8f:	8c 02                	mov    WORD PTR [rdx],es
     b91:	00 00                	add    BYTE PTR [rax],al
     b93:	01 44 33 19          	add    DWORD PTR [rbx+rsi*1+0x19],eax
     b97:	03 00                	add    eax,DWORD PTR [rax]
     b99:	00 02                	add    BYTE PTR [rdx],al
     b9b:	91                   	xchg   ecx,eax
     b9c:	58                   	pop    rax
     b9d:	27                   	(bad)  
     b9e:	2e 04 00             	cs add al,0x0
     ba1:	00 01                	add    BYTE PTR [rcx],al
     ba3:	47 1d c7 03 00 00    	rex.RXB sbb eax,0x3c7
     ba9:	02 91 68 00 14 08    	add    dl,BYTE PTR [rcx+0x8140068]
     baf:	1f                   	(bad)  
     bb0:	03 00                	add    eax,DWORD PTR [rax]
     bb2:	00 25 8e 02 00 00    	add    BYTE PTR [rip+0x28e],ah        # e46 <stivale_hdr-0x1ff1ba>
     bb8:	84 12                	test   BYTE PTR [rdx],dl
     bba:	20 00                	and    BYTE PTR [rax],al
     bbc:	00 00                	add    BYTE PTR [rax],al
     bbe:	00 00                	add    BYTE PTR [rax],al
     bc0:	86 00                	xchg   BYTE PTR [rax],al
     bc2:	00 00                	add    BYTE PTR [rax],al
     bc4:	00 00                	add    BYTE PTR [rax],al
     bc6:	00 00                	add    BYTE PTR [rax],al
     bc8:	01 9c 56 06 00 00 26 	add    DWORD PTR [rsi+rdx*2+0x26000006],ebx
     bcf:	55                   	push   rbp
     bd0:	06                   	(bad)  
     bd1:	00 00                	add    BYTE PTR [rax],al
     bd3:	01 3b                	add    DWORD PTR [rbx],edi
     bd5:	3b 25 06 00 00 02    	cmp    esp,DWORD PTR [rip+0x2000006]        # 2000be1 <__kernel_end+0x1deebe1>
     bdb:	91                   	xchg   ecx,eax
     bdc:	68 00 14 08 6e       	push   0x6e081400
     be1:	03 00                	add    eax,DWORD PTR [rax]
     be3:	00 25 a4 02 00 00    	add    BYTE PTR [rip+0x2a4],ah        # e8d <stivale_hdr-0x1ff173>
     be9:	be 11 20 00 00       	mov    esi,0x2011
     bee:	00 00                	add    BYTE PTR [rax],al
     bf0:	00 c6                	add    dh,al
     bf2:	00 00                	add    BYTE PTR [rax],al
     bf4:	00 00                	add    BYTE PTR [rax],al
     bf6:	00 00                	add    BYTE PTR [rax],al
     bf8:	00 01                	add    BYTE PTR [rcx],al
     bfa:	9c                   	pushf  
     bfb:	d6                   	(bad)  
     bfc:	06                   	(bad)  
     bfd:	00 00                	add    BYTE PTR [rax],al
     bff:	26 55                	es push rbp
     c01:	06                   	(bad)  
     c02:	00 00                	add    BYTE PTR [rax],al
     c04:	01 2b                	add    DWORD PTR [rbx],ebp
     c06:	39 25 06 00 00 02    	cmp    DWORD PTR [rip+0x2000006],esp        # 2000c12 <__kernel_end+0x1deec12>
     c0c:	91                   	xchg   ecx,eax
     c0d:	58                   	pop    rax
     c0e:	26 dc 07             	fadd   QWORD PTR es:[rdi]
     c11:	00 00                	add    BYTE PTR [rax],al
     c13:	01 2b                	add    DWORD PTR [rbx],ebp
     c15:	5a                   	pop    rdx
     c16:	56                   	push   rsi
     c17:	06                   	(bad)  
     c18:	00 00                	add    BYTE PTR [rax],al
     c1a:	02 91 50 28 1f 12    	add    dl,BYTE PTR [rcx+0x121f2850]
     c20:	20 00                	and    BYTE PTR [rax],al
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	00 00                	add    BYTE PTR [rax],al
     c26:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     c29:	00 00                	add    BYTE PTR [rax],al
     c2b:	00 00                	add    BYTE PTR [rax],al
     c2d:	00 29                	add    BYTE PTR [rcx],ch
     c2f:	74 00                	je     c31 <stivale_hdr-0x1ff3cf>
     c31:	01 32                	add    DWORD PTR [rdx],esi
     c33:	0e                   	(bad)  
     c34:	a8 00                	test   al,0x0
     c36:	00 00                	add    BYTE PTR [rax],al
     c38:	02 91 6c 28 2f 12    	add    dl,BYTE PTR [rcx+0x122f286c]
     c3e:	20 00                	and    BYTE PTR [rax],al
     c40:	00 00                	add    BYTE PTR [rax],al
     c42:	00 00                	add    BYTE PTR [rax],al
     c44:	38 00                	cmp    BYTE PTR [rax],al
     c46:	00 00                	add    BYTE PTR [rax],al
     c48:	00 00                	add    BYTE PTR [rax],al
     c4a:	00 00                	add    BYTE PTR [rax],al
     c4c:	29 70 6f             	sub    DWORD PTR [rax+0x6f],esi
     c4f:	73 00                	jae    c51 <stivale_hdr-0x1ff3af>
     c51:	01 33                	add    DWORD PTR [rbx],esi
     c53:	0f d6                	(bad)  
     c55:	06                   	(bad)  
     c56:	00 00                	add    BYTE PTR [rax],al
     c58:	02 91 60 00 00 00    	add    dl,BYTE PTR [rcx+0x60]
     c5e:	2a 08                	sub    cl,BYTE PTR [rax]
     c60:	2b bf 02 00 00 88    	sub    edi,DWORD PTR [rdi-0x77fffffe]
     c66:	10 20                	adc    BYTE PTR [rax],ah
     c68:	00 00                	add    BYTE PTR [rax],al
     c6a:	00 00                	add    BYTE PTR [rax],al
     c6c:	00 36                	add    BYTE PTR [rsi],dh
     c6e:	01 00                	add    DWORD PTR [rax],eax
     c70:	00 00                	add    BYTE PTR [rax],al
     c72:	00 00                	add    BYTE PTR [rax],al
     c74:	00 01                	add    BYTE PTR [rcx],al
     c76:	9c                   	pushf  
     c77:	26 55                	es push rbp
     c79:	06                   	(bad)  
     c7a:	00 00                	add    BYTE PTR [rax],al
     c7c:	01 15 35 25 06 00    	add    DWORD PTR [rip+0x62535],edx        # 631b7 <stivale_hdr-0x19ce49>
     c82:	00 02                	add    BYTE PTR [rdx],al
     c84:	91                   	xchg   ecx,eax
     c85:	48 27                	rex.W (bad) 
     c87:	17                   	(bad)  
     c88:	04 00                	add    al,0x0
     c8a:	00 01                	add    BYTE PTR [rcx],al
     c8c:	22 0a                	and    cl,BYTE PTR [rdx]
     c8e:	b6 00                	mov    dh,0x0
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	02 91 58 27 94 06    	add    dl,BYTE PTR [rcx+0x6942758]
     c98:	00 00                	add    BYTE PTR [rax],al
     c9a:	01 23                	add    DWORD PTR [rbx],esp
     c9c:	0c 8e                	or     al,0x8e
     c9e:	00 00                	add    BYTE PTR [rax],al
     ca0:	00 02                	add    BYTE PTR [rdx],al
     ca2:	91                   	xchg   ecx,eax
     ca3:	50                   	push   rax
     ca4:	2c e8                	sub    al,0xe8
     ca6:	10 20                	adc    BYTE PTR [rax],ah
     ca8:	00 00                	add    BYTE PTR [rax],al
     caa:	00 00                	add    BYTE PTR [rax],al
     cac:	00 49 00             	add    BYTE PTR [rcx+0x0],cl
     caf:	00 00                	add    BYTE PTR [rax],al
     cb1:	00 00                	add    BYTE PTR [rax],al
     cb3:	00 00                	add    BYTE PTR [rax],al
     cb5:	3f                   	(bad)  
     cb6:	07                   	(bad)  
     cb7:	00 00                	add    BYTE PTR [rax],al
     cb9:	29 74 00 01          	sub    DWORD PTR [rax+rax*1+0x1],esi
     cbd:	1f                   	(bad)  
     cbe:	0f b6 00             	movzx  eax,BYTE PTR [rax]
     cc1:	00 00                	add    BYTE PTR [rax],al
     cc3:	02 91 68 00 28 73    	add    dl,BYTE PTR [rcx+0x73280068]
     cc9:	11 20                	adc    DWORD PTR [rax],esp
     ccb:	00 00                	add    BYTE PTR [rax],al
     ccd:	00 00                	add    BYTE PTR [rax],al
     ccf:	00 3b                	add    BYTE PTR [rbx],bh
     cd1:	00 00                	add    BYTE PTR [rax],al
     cd3:	00 00                	add    BYTE PTR [rax],al
     cd5:	00 00                	add    BYTE PTR [rax],al
     cd7:	00 29                	add    BYTE PTR [rcx],ch
     cd9:	74 00                	je     cdb <stivale_hdr-0x1ff325>
     cdb:	01 25 11 8e 00 00    	add    DWORD PTR [rip+0x8e11],esp        # 9af2 <stivale_hdr-0x1f650e>
     ce1:	00 02                	add    BYTE PTR [rdx],al
     ce3:	91                   	xchg   ecx,eax
     ce4:	60                   	(bad)  
     ce5:	00 00                	add    BYTE PTR [rax],al
     ce7:	00 8e 04 00 00 04    	add    BYTE PTR [rsi+0x4000004],cl
     ced:	00 2c 04             	add    BYTE PTR [rsp+rax*1],ch
     cf0:	00 00                	add    BYTE PTR [rax],al
     cf2:	08 01                	or     BYTE PTR [rcx],al
     cf4:	7c 00                	jl     cf6 <stivale_hdr-0x1ff30a>
     cf6:	00 00                	add    BYTE PTR [rax],al
     cf8:	04 fd                	add    al,0xfd
     cfa:	08 00                	or     BYTE PTR [rax],al
     cfc:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
     cff:	00 00                	add    BYTE PTR [rax],al
     d01:	9e                   	sahf   
     d02:	13 20                	adc    esp,DWORD PTR [rax]
     d04:	00 00                	add    BYTE PTR [rax],al
     d06:	00 00                	add    BYTE PTR [rax],al
     d08:	00 ac 02 00 00 00 00 	add    BYTE PTR [rdx+rax*1+0x0],ch
     d0f:	00 00                	add    BYTE PTR [rax],al
     d11:	e8 03 00 00 02       	call   2000d19 <__kernel_end+0x1deed19>
     d16:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # e86 <stivale_hdr-0x1ff17a>
     d1c:	02 08                	add    cl,BYTE PTR [rax]
     d1e:	07                   	(bad)  
     d1f:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
     d22:	00 02                	add    BYTE PTR [rdx],al
     d24:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # e8f <stivale_hdr-0x1ff171>
     d2a:	02 10                	add    dl,BYTE PTR [rax]
     d2c:	04 8f                	add    al,0x8f
     d2e:	01 00                	add    DWORD PTR [rax],eax
     d30:	00 03                	add    BYTE PTR [rbx],al
     d32:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     d35:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     d38:	23 00                	and    eax,DWORD PTR [rax]
     d3a:	00 02                	add    BYTE PTR [rdx],al
     d3c:	04 1d                	add    al,0x1d
     d3e:	5f                   	pop    rdi
     d3f:	00 00                	add    BYTE PTR [rax],al
     d41:	00 05 4e 00 00 00    	add    BYTE PTR [rip+0x4e],al        # d95 <stivale_hdr-0x1ff26b>
     d47:	02 01                	add    al,BYTE PTR [rcx]
     d49:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
     d4c:	00 00                	add    BYTE PTR [rax],al
     d4e:	04 eb                	add    al,0xeb
     d50:	08 00                	or     BYTE PTR [rax],al
     d52:	00 02                	add    BYTE PTR [rdx],al
     d54:	05 1d 72 00 00       	add    eax,0x721d
     d59:	00 02                	add    BYTE PTR [rdx],al
     d5b:	02 07                	add    al,BYTE PTR [rdi]
     d5d:	9b                   	fwait
     d5e:	01 00                	add    DWORD PTR [rax],eax
     d60:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
     d63:	08 00                	or     BYTE PTR [rax],al
     d65:	00 02                	add    BYTE PTR [rdx],al
     d67:	06                   	(bad)  
     d68:	1d 85 00 00 00       	sbb    eax,0x85
     d6d:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
     d70:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
     d73:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
     d76:	01 00                	add    DWORD PTR [rax],eax
     d78:	00 02                	add    BYTE PTR [rdx],al
     d7a:	07                   	(bad)  
     d7b:	1d 34 00 00 00       	sbb    eax,0x34
     d80:	02 10                	add    dl,BYTE PTR [rax]
     d82:	07                   	(bad)  
     d83:	00 00                	add    BYTE PTR [rax],al
     d85:	00 00                	add    BYTE PTR [rax],al
     d87:	04 25                	add    al,0x25
     d89:	00 00                	add    BYTE PTR [rax],al
     d8b:	00 02                	add    BYTE PTR [rdx],al
     d8d:	0d 1d 34 00 00       	or     eax,0x341d
     d92:	00 02                	add    BYTE PTR [rdx],al
     d94:	01 06                	add    DWORD PTR [rsi],eax
     d96:	70 00                	jo     d98 <stivale_hdr-0x1ff268>
     d98:	00 00                	add    BYTE PTR [rax],al
     d9a:	02 02                	add    al,BYTE PTR [rdx]
     d9c:	05 73 01 00 00       	add    eax,0x173
     da1:	06                   	(bad)  
     da2:	04 05                	add    al,0x5
     da4:	69 6e 74 00 02 10 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5100200
     dab:	1b 01                	sbb    eax,DWORD PTR [rcx]
     dad:	00 00                	add    BYTE PTR [rax],al
     daf:	04 8f                	add    al,0x8f
     db1:	22 00                	and    al,BYTE PTR [rax]
     db3:	00 02                	add    BYTE PTR [rdx],al
     db5:	19 1d 9f 00 00 00    	sbb    DWORD PTR [rip+0x9f],ebx        # e5a <stivale_hdr-0x1ff1a6>
     dbb:	07                   	(bad)  
     dbc:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     dbf:	00 03                	add    BYTE PTR [rbx],al
     dc1:	07                   	(bad)  
     dc2:	0b 86 02 00 00 07    	or     eax,DWORD PTR [rsi+0x7000002]
     dc8:	74 73                	je     e3d <stivale_hdr-0x1ff1c3>
     dca:	73 00                	jae    dcc <stivale_hdr-0x1ff234>
     dcc:	03 08                	add    ecx,DWORD PTR [rax]
     dce:	0f 9f 01             	setg   BYTE PTR [rcx]
     dd1:	00 00                	add    BYTE PTR [rax],al
     dd3:	08 74 73 73          	or     BYTE PTR [rbx+rsi*2+0x73],dh
     dd7:	00 68 03             	add    BYTE PTR [rax+0x3],ch
     dda:	09 18                	or     DWORD PTR [rax],ebx
     ddc:	54                   	push   rsp
     ddd:	01 00                	add    DWORD PTR [rax],eax
     ddf:	00 09                	add    BYTE PTR [rcx],cl
     de1:	70 61                	jo     e44 <stivale_hdr-0x1ff1bc>
     de3:	64 00 03             	add    BYTE PTR fs:[rbx],al
     de6:	0a 15 79 00 00 00    	or     dl,BYTE PTR [rip+0x79]        # e65 <stivale_hdr-0x1ff19b>
     dec:	00 09                	add    BYTE PTR [rcx],cl
     dee:	72 73                	jb     e63 <stivale_hdr-0x1ff19d>
     df0:	70 00                	jo     df2 <stivale_hdr-0x1ff20e>
     df2:	03 0b                	add    ecx,DWORD PTR [rbx]
     df4:	15 86 02 00 00       	adc    eax,0x286
     df9:	04 0a                	add    al,0xa
     dfb:	64 09 00             	or     DWORD PTR fs:[rax],eax
     dfe:	00 03                	add    BYTE PTR [rbx],al
     e00:	0c 15                	or     al,0x15
     e02:	8c 00                	mov    WORD PTR [rax],es
     e04:	00 00                	add    BYTE PTR [rax],al
     e06:	1c 09                	sbb    al,0x9
     e08:	69 73 74 00 03 0d 15 	imul   esi,DWORD PTR [rbx+0x74],0x150d0300
     e0f:	96                   	xchg   esi,eax
     e10:	02 00                	add    al,BYTE PTR [rax]
     e12:	00 24 0a             	add    BYTE PTR [rdx+rcx*1],ah
     e15:	6d                   	ins    DWORD PTR es:[rdi],dx
     e16:	08 00                	or     BYTE PTR [rax],al
     e18:	00 03                	add    BYTE PTR [rbx],al
     e1a:	0e                   	(bad)  
     e1b:	15 8c 00 00 00       	adc    eax,0x8c
     e20:	5c                   	pop    rsp
     e21:	0a bd 09 00 00 03    	or     bh,BYTE PTR [rbp+0x3000009]
     e27:	0f 15 66 00          	unpckhps xmm4,XMMWORD PTR [rsi+0x0]
     e2b:	00 00                	add    BYTE PTR [rax],al
     e2d:	64 0a 0d 09 00 00 03 	or     cl,BYTE PTR fs:[rip+0x3000009]        # 3000e3d <__kernel_end+0x2deee3d>
     e34:	10 15 66 00 00 00    	adc    BYTE PTR [rip+0x66],dl        # ea0 <stivale_hdr-0x1ff160>
     e3a:	66 00 04 11          	data16 add BYTE PTR [rcx+rdx*1],al
     e3e:	0a 00                	or     al,BYTE PTR [rax]
     e40:	00 03                	add    BYTE PTR [rbx],al
     e42:	11 23                	adc    DWORD PTR [rbx],esp
     e44:	eb 00                	jmp    e46 <stivale_hdr-0x1ff1ba>
     e46:	00 00                	add    BYTE PTR [rax],al
     e48:	0b f8                	or     edi,eax
     e4a:	09 00                	or     DWORD PTR [rax],eax
     e4c:	00 01                	add    BYTE PTR [rcx],al
     e4e:	28 06                	sub    BYTE PTR [rsi],al
     e50:	2f                   	(bad)  
     e51:	08 00                	or     BYTE PTR [rax],al
     e53:	00 7b 01             	add    BYTE PTR [rbx+0x1],bh
     e56:	00 00                	add    BYTE PTR [rax],al
     e58:	0c b9                	or     al,0xb9
     e5a:	00 00                	add    BYTE PTR [rax],al
     e5c:	00 0c c7             	add    BYTE PTR [rdi+rax*8],cl
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	00 00                	add    BYTE PTR [rax],al
     e63:	0d ec 09 00 00       	or     eax,0x9ec
     e68:	01 11                	add    DWORD PTR [rcx],edx
     e6a:	06                   	(bad)  
     e6b:	92                   	xchg   edx,eax
     e6c:	01 00                	add    DWORD PTR [rax],eax
     e6e:	00 0c b9             	add    BYTE PTR [rcx+rdi*4],cl
     e71:	00 00                	add    BYTE PTR [rax],al
     e73:	00 0c c7             	add    BYTE PTR [rdi+rax*8],cl
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	00 00                	add    BYTE PTR [rax],al
     e7a:	0e                   	(bad)  
     e7b:	9d                   	popf   
     e7c:	09 00                	or     DWORD PTR [rax],eax
     e7e:	00 01                	add    BYTE PTR [rcx],al
     e80:	0d 06 86 09 00       	or     eax,0x98606
     e85:	00 00                	add    BYTE PTR [rax],al
     e87:	0f 67 64 74 00       	packuswb mm4,QWORD PTR [rsp+rsi*2+0x0]
     e8c:	04 10                	add    al,0x10
     e8e:	0f 10 77 08          	movups xmm6,XMMWORD PTR [rdi+0x8]
     e92:	00 00                	add    BYTE PTR [rax],al
     e94:	04 12                	add    al,0x12
     e96:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     e99:	00 00                	add    BYTE PTR [rax],al
     e9b:	10 10                	adc    BYTE PTR [rax],dl
     e9d:	54                   	push   rsp
     e9e:	08 00                	or     BYTE PTR [rax],al
     ea0:	00 04 13             	add    BYTE PTR [rbx+rdx*1],al
     ea3:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     ea6:	00 00                	add    BYTE PTR [rax],al
     ea8:	01 10                	add    DWORD PTR [rax],edx
     eaa:	ca 09 00             	retf   0x9
     ead:	00 04 14             	add    BYTE PTR [rsp+rdx*1],al
     eb0:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     eb3:	00 00                	add    BYTE PTR [rax],al
     eb5:	02 10                	add    dl,BYTE PTR [rax]
     eb7:	c0 08 00             	ror    BYTE PTR [rax],0x0
     eba:	00 04 15 18 5a 00 00 	add    BYTE PTR [rdx*1+0x5a18],al
     ec1:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
     ec4:	1e                   	(bad)  
     ec5:	09 00                	or     DWORD PTR [rax],eax
     ec7:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
     eca:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     ecd:	00 00                	add    BYTE PTR [rax],al
     ecf:	08 10                	or     BYTE PTR [rax],dl
     ed1:	d8 08                	fmul   DWORD PTR [rax]
     ed3:	00 00                	add    BYTE PTR [rax],al
     ed5:	04 17                	add    al,0x17
     ed7:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     eda:	00 00                	add    BYTE PTR [rax],al
     edc:	10 10                	adc    BYTE PTR [rax],dl
     ede:	f0 08 00             	lock or BYTE PTR [rax],al
     ee1:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
     ee4:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     ee7:	00 00                	add    BYTE PTR [rax],al
     ee9:	60                   	(bad)  
     eea:	10 6b 09             	adc    BYTE PTR [rbx+0x9],ch
     eed:	00 00                	add    BYTE PTR [rax],al
     eef:	04 19                	add    al,0x19
     ef1:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     ef4:	00 00                	add    BYTE PTR [rax],al
     ef6:	80 10 29             	adc    BYTE PTR [rax],0x29
     ef9:	0a 00                	or     al,BYTE PTR [rax]
     efb:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
     efe:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f01:	00 00                	add    BYTE PTR [rax],al
     f03:	0f 10 05 0a 00 00 04 	movups xmm0,XMMWORD PTR [rip+0x400000a]        # 4000f14 <__kernel_end+0x3deef14>
     f0a:	1b 18                	sbb    ebx,DWORD PTR [rax]
     f0c:	5a                   	pop    rdx
     f0d:	00 00                	add    BYTE PTR [rax],al
     f0f:	00 10                	add    BYTE PTR [rax],dl
     f11:	10 32                	adc    BYTE PTR [rdx],dh
     f13:	09 00                	or     DWORD PTR [rax],eax
     f15:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
     f18:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f1b:	00 00                	add    BYTE PTR [rax],al
     f1d:	20 10                	and    BYTE PTR [rax],dl
     f1f:	dd 09                	fisttp QWORD PTR [rcx]
     f21:	00 00                	add    BYTE PTR [rax],al
     f23:	04 1d                	add    al,0x1d
     f25:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f28:	00 00                	add    BYTE PTR [rax],al
     f2a:	40 10 cc             	adc    spl,cl
     f2d:	08 00                	or     BYTE PTR [rax],al
     f2f:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
     f32:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f35:	00 00                	add    BYTE PTR [rax],al
     f37:	80 10 41             	adc    BYTE PTR [rax],0x41
     f3a:	09 00                	or     DWORD PTR [rax],eax
     f3c:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     f3f:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	08 10                	or     BYTE PTR [rax],dl
     f46:	16                   	(bad)  
     f47:	08 00                	or     BYTE PTR [rax],al
     f49:	00 04 22             	add    BYTE PTR [rdx+riz*1],al
     f4c:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f4f:	00 00                	add    BYTE PTR [rax],al
     f51:	10 10                	adc    BYTE PTR [rax],dl
     f53:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     f54:	09 00                	or     DWORD PTR [rax],eax
     f56:	00 04 23             	add    BYTE PTR [rbx+riz*1],al
     f59:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
     f5c:	00 00                	add    BYTE PTR [rax],al
     f5e:	18 10                	sbb    BYTE PTR [rax],dl
     f60:	a9 08 00 00 04       	test   eax,0x4000008
     f65:	24 18                	and    al,0x18
     f67:	5a                   	pop    rdx
     f68:	00 00                	add    BYTE PTR [rax],al
     f6a:	00 20                	add    BYTE PTR [rax],ah
     f6c:	00 00                	add    BYTE PTR [rax],al
     f6e:	11 c7                	adc    edi,eax
     f70:	00 00                	add    BYTE PTR [rax],al
     f72:	00 96 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],dl
     f78:	34 00                	xor    al,0x0
     f7a:	00 00                	add    BYTE PTR [rax],al
     f7c:	02 00                	add    al,BYTE PTR [rax]
     f7e:	11 c7                	adc    edi,eax
     f80:	00 00                	add    BYTE PTR [rax],al
     f82:	00 a6 02 00 00 12    	add    BYTE PTR [rsi+0x12000002],ah
     f88:	34 00                	xor    al,0x0
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	06                   	(bad)  
     f8d:	00 13                	add    BYTE PTR [rbx],dl
     f8f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     f90:	01 00                	add    DWORD PTR [rax],eax
     f92:	00 13                	add    BYTE PTR [rbx],dl
     f94:	b4 01                	mov    ah,0x1
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	13 c1                	adc    eax,ecx
     f9a:	01 00                	add    DWORD PTR [rax],eax
     f9c:	00 13                	add    BYTE PTR [rbx],dl
     f9e:	ce                   	(bad)  
     f9f:	01 00                	add    DWORD PTR [rax],eax
     fa1:	00 13                	add    BYTE PTR [rbx],dl
     fa3:	db 01                	fild   DWORD PTR [rcx]
     fa5:	00 00                	add    BYTE PTR [rax],al
     fa7:	13 e8                	adc    ebp,eax
     fa9:	01 00                	add    DWORD PTR [rax],eax
     fab:	00 13                	add    BYTE PTR [rbx],dl
     fad:	f5                   	cmc    
     fae:	01 00                	add    DWORD PTR [rax],eax
     fb0:	00 13                	add    BYTE PTR [rbx],dl
     fb2:	02 02                	add    al,BYTE PTR [rdx]
     fb4:	00 00                	add    BYTE PTR [rax],al
     fb6:	13 0f                	adc    ecx,DWORD PTR [rdi]
     fb8:	02 00                	add    al,BYTE PTR [rax]
     fba:	00 13                	add    BYTE PTR [rbx],dl
     fbc:	1c 02                	sbb    al,0x2
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	13 29                	adc    ebp,DWORD PTR [rcx]
     fc2:	02 00                	add    al,BYTE PTR [rax]
     fc4:	00 13                	add    BYTE PTR [rbx],dl
     fc6:	36 02 00             	add    al,BYTE PTR ss:[rax]
     fc9:	00 13                	add    BYTE PTR [rbx],dl
     fcb:	43 02 00             	rex.XB add al,BYTE PTR [r8]
     fce:	00 13                	add    BYTE PTR [rbx],dl
     fd0:	50                   	push   rax
     fd1:	02 00                	add    al,BYTE PTR [rax]
     fd3:	00 13                	add    BYTE PTR [rbx],dl
     fd5:	5d                   	pop    rbp
     fd6:	02 00                	add    al,BYTE PTR [rax]
     fd8:	00 13                	add    BYTE PTR [rbx],dl
     fda:	6a 02                	push   0x2
     fdc:	00 00                	add    BYTE PTR [rax],al
     fde:	13 77 02             	adc    esi,DWORD PTR [rdi+0x2]
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	07                   	(bad)  
     fe4:	73 79                	jae    105f <stivale_hdr-0x1fefa1>
     fe6:	73 00                	jae    fe8 <stivale_hdr-0x1ff018>
     fe8:	05 04 0b 10 03       	add    eax,0x3100b04
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	14 69                	adc    al,0x69
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	00 05 05 0f 00 02    	add    BYTE PTR [rip+0x2000f05],al        # 2001efe <__kernel_end+0x1defefe>
     ff9:	01 06                	add    DWORD PTR [rsi],eax
     ffb:	77 00                	ja     ffd <stivale_hdr-0x1ff003>
     ffd:	00 00                	add    BYTE PTR [rax],al
     fff:	15 2e 32 00 00       	adc    eax,0x322e
    1004:	06                   	(bad)  
    1005:	08 0b                	or     BYTE PTR [rbx],cl
    1007:	34 03                	xor    al,0x3
    1009:	00 00                	add    BYTE PTR [rax],al
    100b:	14 eb                	adc    al,0xeb
    100d:	06                   	(bad)  
    100e:	00 00                	add    BYTE PTR [rax],al
    1010:	06                   	(bad)  
    1011:	09 0c 16             	or     DWORD PTR [rsi+rdx*1],ecx
    1014:	70 6d                	jo     1083 <stivale_hdr-0x1fef7d>
    1016:	6d                   	ins    DWORD PTR es:[rdi],dx
    1017:	00 07                	add    BYTE PTR [rdi],al
    1019:	05 0c 00 02 01       	add    eax,0x102000c
    101e:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	11 54 01 00          	adc    DWORD PTR [rcx+rax*1+0x0],edx
    1027:	00 4b 03             	add    BYTE PTR [rbx+0x3],cl
    102a:	00 00                	add    BYTE PTR [rax],al
    102c:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
    102f:	00 00                	add    BYTE PTR [rax],al
    1031:	00 00                	add    BYTE PTR [rax],al
    1033:	17                   	(bad)  
    1034:	17                   	(bad)  
    1035:	0a 00                	or     al,BYTE PTR [rax]
    1037:	00 01                	add    BYTE PTR [rcx],al
    1039:	07                   	(bad)  
    103a:	18 3b                	sbb    BYTE PTR [rbx],bh
    103c:	03 00                	add    eax,DWORD PTR [rax]
    103e:	00 09                	add    BYTE PTR [rcx],cl
    1040:	03 20                	add    esp,DWORD PTR [rax]
    1042:	e0 20                	loopne 1064 <stivale_hdr-0x1fef9c>
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	00 00                	add    BYTE PTR [rax],al
    1048:	00 17                	add    BYTE PTR [rdi],dl
    104a:	7c 09                	jl     1055 <stivale_hdr-0x1fefab>
    104c:	00 00                	add    BYTE PTR [rax],al
    104e:	01 09                	add    DWORD PTR [rcx],ecx
    1050:	0e                   	(bad)  
    1051:	77 03                	ja     1056 <stivale_hdr-0x1fefaa>
    1053:	00 00                	add    BYTE PTR [rax],al
    1055:	09 03                	or     DWORD PTR [rbx],eax
    1057:	88 e0                	mov    al,ah
    1059:	20 00                	and    BYTE PTR [rax],al
    105b:	00 00                	add    BYTE PTR [rax],al
    105d:	00 00                	add    BYTE PTR [rax],al
    105f:	18 08                	sbb    BYTE PTR [rax],cl
    1061:	17                   	(bad)  
    1062:	14 09                	adc    al,0x9
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	01 0a                	add    DWORD PTR [rdx],ecx
    1068:	0e                   	(bad)  
    1069:	77 03                	ja     106e <stivale_hdr-0x1fef92>
    106b:	00 00                	add    BYTE PTR [rax],al
    106d:	09 03                	or     DWORD PTR [rbx],eax
    106f:	90                   	nop
    1070:	e0 20                	loopne 1092 <stivale_hdr-0x1fef6e>
    1072:	00 00                	add    BYTE PTR [rax],al
    1074:	00 00                	add    BYTE PTR [rax],al
    1076:	00 17                	add    BYTE PTR [rdi],dl
    1078:	5a                   	pop    rdx
    1079:	09 00                	or     DWORD PTR [rax],eax
    107b:	00 01                	add    BYTE PTR [rcx],al
    107d:	0b 0e                	or     ecx,DWORD PTR [rsi]
    107f:	77 03                	ja     1084 <stivale_hdr-0x1fef7c>
    1081:	00 00                	add    BYTE PTR [rax],al
    1083:	09 03                	or     DWORD PTR [rbx],eax
    1085:	98                   	cwde   
    1086:	e0 20                	loopne 10a8 <stivale_hdr-0x1fef58>
    1088:	00 00                	add    BYTE PTR [rax],al
    108a:	00 00                	add    BYTE PTR [rax],al
    108c:	00 19                	add    BYTE PTR [rcx],bl
    108e:	93                   	xchg   ebx,eax
    108f:	08 00                	or     BYTE PTR [rax],al
    1091:	00 01                	add    BYTE PTR [rcx],al
    1093:	30 11                	xor    BYTE PTR [rcx],dl
    1095:	43 16                	rex.XB (bad) 
    1097:	20 00                	and    BYTE PTR [rax],al
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	00 00                	add    BYTE PTR [rax],al
    109d:	07                   	(bad)  
    109e:	00 00                	add    BYTE PTR [rax],al
    10a0:	00 00                	add    BYTE PTR [rax],al
    10a2:	00 00                	add    BYTE PTR [rax],al
    10a4:	00 01                	add    BYTE PTR [rcx],al
    10a6:	9c                   	pushf  
    10a7:	1a 8b 08 00 00 01    	sbb    cl,BYTE PTR [rbx+0x1000008]
    10ad:	2c 1d                	sub    al,0x1d
    10af:	f1                   	icebp  
    10b0:	03 00                	add    eax,DWORD PTR [rax]
    10b2:	00 12                	add    BYTE PTR [rdx],dl
    10b4:	16                   	(bad)  
    10b5:	20 00                	and    BYTE PTR [rax],al
    10b7:	00 00                	add    BYTE PTR [rax],al
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	31 00                	xor    DWORD PTR [rax],eax
    10bd:	00 00                	add    BYTE PTR [rax],al
    10bf:	00 00                	add    BYTE PTR [rax],al
    10c1:	00 00                	add    BYTE PTR [rax],al
    10c3:	01 9c f1 03 00 00 1b 	add    DWORD PTR [rcx+rsi*8+0x1b000003],ebx
    10ca:	4c 08 00             	rex.WR or BYTE PTR [rax],r8b
    10cd:	00 01                	add    BYTE PTR [rcx],al
    10cf:	2c 29                	sub    al,0x29
    10d1:	b9 00 00 00 02       	mov    ecx,0x2000000
    10d6:	91                   	xchg   ecx,eax
    10d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d8:	00 1c 08             	add    BYTE PTR [rax+rcx*1],bl
    10db:	54                   	push   rsp
    10dc:	01 00                	add    DWORD PTR [rax],eax
    10de:	00 1d 60 01 00 00    	add    BYTE PTR [rip+0x160],bl        # 1244 <stivale_hdr-0x1fedbc>
    10e4:	d3 15 20 00 00 00    	rcl    DWORD PTR [rip+0x20],cl        # 110a <stivale_hdr-0x1feef6>
    10ea:	00 00                	add    BYTE PTR [rax],al
    10ec:	3f                   	(bad)  
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	00 00                	add    BYTE PTR [rax],al
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	00 01                	add    BYTE PTR [rcx],al
    10f5:	9c                   	pushf  
    10f6:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
    10f9:	00 1b                	add    BYTE PTR [rbx],bl
    10fb:	4c 08 00             	rex.WR or BYTE PTR [rax],r8b
    10fe:	00 01                	add    BYTE PTR [rcx],al
    1100:	28 21                	sub    BYTE PTR [rcx],ah
    1102:	b9 00 00 00 02       	mov    ecx,0x2000000
    1107:	91                   	xchg   ecx,eax
    1108:	6c                   	ins    BYTE PTR es:[rdi],dx
    1109:	1b 5e 09             	sbb    ebx,DWORD PTR [rsi+0x9]
    110c:	00 00                	add    BYTE PTR [rax],al
    110e:	01 28                	add    DWORD PTR [rax],ebp
    1110:	32 c7                	xor    al,bh
    1112:	00 00                	add    BYTE PTR [rax],al
    1114:	00 02                	add    BYTE PTR [rdx],al
    1116:	91                   	xchg   ecx,eax
    1117:	60                   	(bad)  
    1118:	00 1e                	add    BYTE PTR [rsi],bl
    111a:	7b 01                	jnp    111d <stivale_hdr-0x1feee3>
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	bb 13 20 00 00       	mov    ebx,0x2013
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	00 18                	add    BYTE PTR [rax],bl
    1127:	02 00                	add    al,BYTE PTR [rax]
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	00 00                	add    BYTE PTR [rax],al
    112d:	00 01                	add    BYTE PTR [rcx],al
    112f:	9c                   	pushf  
    1130:	7a 04                	jp     1136 <stivale_hdr-0x1feeca>
    1132:	00 00                	add    BYTE PTR [rax],al
    1134:	1b 4c 08 00          	sbb    ecx,DWORD PTR [rax+rcx*1+0x0]
    1138:	00 01                	add    BYTE PTR [rcx],al
    113a:	11 20                	adc    DWORD PTR [rax],esp
    113c:	b9 00 00 00 02       	mov    ecx,0x2000000
    1141:	91                   	xchg   ecx,eax
    1142:	5c                   	pop    rsp
    1143:	1b 5e 09             	sbb    ebx,DWORD PTR [rsi+0x9]
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	01 11                	add    DWORD PTR [rcx],edx
    114a:	31 c7                	xor    edi,eax
    114c:	00 00                	add    BYTE PTR [rax],al
    114e:	00 02                	add    BYTE PTR [rdx],al
    1150:	91                   	xchg   ecx,eax
    1151:	50                   	push   rax
    1152:	17                   	(bad)  
    1153:	64 08 00             	or     BYTE PTR fs:[rax],al
    1156:	00 01                	add    BYTE PTR [rcx],al
    1158:	1a 0d c7 00 00 00    	sbb    cl,BYTE PTR [rip+0xc7]        # 1225 <stivale_hdr-0x1feddb>
    115e:	02 91 68 00 1f 92    	add    dl,BYTE PTR [rcx-0x6de0ff98]
    1164:	01 00                	add    DWORD PTR [rax],eax
    1166:	00 9e 13 20 00 00    	add    BYTE PTR [rsi+0x2013],bl
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 1174 <stivale_hdr-0x1fee8c>
    1174:	00 00                	add    BYTE PTR [rax],al
    1176:	00 01                	add    BYTE PTR [rcx],al
    1178:	9c                   	pushf  
    1179:	00 dc                	add    ah,bl
    117b:	04 00                	add    al,0x0
    117d:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1180:	f5                   	cmc    
    1181:	05 00 00 08 01       	add    eax,0x1080000
    1186:	7c 00                	jl     1188 <stivale_hdr-0x1fee78>
    1188:	00 00                	add    BYTE PTR [rax],al
    118a:	04 a2                	add    al,0xa2
    118c:	0a 00                	or     al,BYTE PTR [rax]
    118e:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	4a 16                	rex.WX (bad) 
    1195:	20 00                	and    BYTE PTR [rax],al
    1197:	00 00                	add    BYTE PTR [rax],al
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	ca 02 00             	retf   0x2
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	00 00                	add    BYTE PTR [rax],al
    11a2:	00 16                	add    BYTE PTR [rsi],dl
    11a4:	05 00 00 02 08       	add    eax,0x8020000
    11a9:	05 6a 01 00 00       	add    eax,0x16a
    11ae:	02 08                	add    cl,BYTE PTR [rax]
    11b0:	07                   	(bad)  
    11b1:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    11b4:	00 02                	add    BYTE PTR [rdx],al
    11b6:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 1321 <stivale_hdr-0x1fecdf>
    11bc:	02 10                	add    dl,BYTE PTR [rax]
    11be:	04 8f                	add    al,0x8f
    11c0:	01 00                	add    DWORD PTR [rax],eax
    11c2:	00 03                	add    BYTE PTR [rbx],al
    11c4:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    11c7:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    11ca:	23 00                	and    eax,DWORD PTR [rax]
    11cc:	00 02                	add    BYTE PTR [rdx],al
    11ce:	04 1d                	add    al,0x1d
    11d0:	5f                   	pop    rdi
    11d1:	00 00                	add    BYTE PTR [rax],al
    11d3:	00 05 4e 00 00 00    	add    BYTE PTR [rip+0x4e],al        # 1227 <stivale_hdr-0x1fedd9>
    11d9:	02 01                	add    al,BYTE PTR [rcx]
    11db:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    11de:	00 00                	add    BYTE PTR [rax],al
    11e0:	04 eb                	add    al,0xeb
    11e2:	08 00                	or     BYTE PTR [rax],al
    11e4:	00 02                	add    BYTE PTR [rdx],al
    11e6:	05 1d 72 00 00       	add    eax,0x721d
    11eb:	00 02                	add    BYTE PTR [rdx],al
    11ed:	02 07                	add    al,BYTE PTR [rdi]
    11ef:	9b                   	fwait
    11f0:	01 00                	add    DWORD PTR [rax],eax
    11f2:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
    11f5:	08 00                	or     BYTE PTR [rax],al
    11f7:	00 02                	add    BYTE PTR [rdx],al
    11f9:	06                   	(bad)  
    11fa:	1d 85 00 00 00       	sbb    eax,0x85
    11ff:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1202:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    1205:	00 02                	add    BYTE PTR [rdx],al
    1207:	10 07                	adc    BYTE PTR [rdi],al
    1209:	00 00                	add    BYTE PTR [rax],al
    120b:	00 00                	add    BYTE PTR [rax],al
    120d:	04 5f                	add    al,0x5f
    120f:	03 00                	add    eax,DWORD PTR [rax]
    1211:	00 02                	add    BYTE PTR [rdx],al
    1213:	0a 1d 5f 00 00 00    	or     bl,BYTE PTR [rip+0x5f]        # 1278 <stivale_hdr-0x1fed88>
    1219:	05 93 00 00 00       	add    eax,0x93
    121e:	04 e5                	add    al,0xe5
    1220:	02 00                	add    al,BYTE PTR [rax]
    1222:	00 02                	add    BYTE PTR [rdx],al
    1224:	0c 1d                	or     al,0x1d
    1226:	85 00                	test   DWORD PTR [rax],eax
    1228:	00 00                	add    BYTE PTR [rax],al
    122a:	04 25                	add    al,0x25
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	00 02                	add    BYTE PTR [rdx],al
    1230:	0d 1d 34 00 00       	or     eax,0x341d
    1235:	00 02                	add    BYTE PTR [rdx],al
    1237:	01 06                	add    DWORD PTR [rsi],eax
    1239:	70 00                	jo     123b <stivale_hdr-0x1fedc5>
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	02 02                	add    al,BYTE PTR [rdx]
    123f:	05 73 01 00 00       	add    eax,0x173
    1244:	06                   	(bad)  
    1245:	04 05                	add    al,0x5
    1247:	69 6e 74 00 02 10 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5100200
    124e:	1b 01                	sbb    eax,DWORD PTR [rcx]
    1250:	00 00                	add    BYTE PTR [rax],al
    1252:	04 8f                	add    al,0x8f
    1254:	22 00                	and    al,BYTE PTR [rax]
    1256:	00 02                	add    BYTE PTR [rdx],al
    1258:	19 1d b0 00 00 00    	sbb    DWORD PTR [rip+0xb0],ebx        # 130e <stivale_hdr-0x1fecf2>
    125e:	07                   	(bad)  
    125f:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1262:	00 03                	add    BYTE PTR [rbx],al
    1264:	0e                   	(bad)  
    1265:	0b 3d 03 00 00 08    	or     edi,DWORD PTR [rip+0x8000003]        # 800126e <__kernel_end+0x7def26e>
    126b:	67 64 74 00          	addr32 fs je 126f <stivale_hdr-0x1fed91>
    126f:	03 10                	add    edx,DWORD PTR [rax]
    1271:	0f 09                	wbinvd 
    1273:	77 08                	ja     127d <stivale_hdr-0x1fed83>
    1275:	00 00                	add    BYTE PTR [rax],al
    1277:	03 12                	add    edx,DWORD PTR [rdx]
    1279:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	10 09                	adc    BYTE PTR [rcx],cl
    1280:	54                   	push   rsp
    1281:	08 00                	or     BYTE PTR [rax],al
    1283:	00 03                	add    BYTE PTR [rbx],al
    1285:	13 18                	adc    ebx,DWORD PTR [rax]
    1287:	5a                   	pop    rdx
    1288:	00 00                	add    BYTE PTR [rax],al
    128a:	00 01                	add    BYTE PTR [rcx],al
    128c:	09 ca                	or     edx,ecx
    128e:	09 00                	or     DWORD PTR [rax],eax
    1290:	00 03                	add    BYTE PTR [rbx],al
    1292:	14 18                	adc    al,0x18
    1294:	5a                   	pop    rdx
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	00 02                	add    BYTE PTR [rdx],al
    1299:	09 c0                	or     eax,eax
    129b:	08 00                	or     BYTE PTR [rax],al
    129d:	00 03                	add    BYTE PTR [rbx],al
    129f:	15 18 5a 00 00       	adc    eax,0x5a18
    12a4:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    12a7:	1e                   	(bad)  
    12a8:	09 00                	or     DWORD PTR [rax],eax
    12aa:	00 03                	add    BYTE PTR [rbx],al
    12ac:	16                   	(bad)  
    12ad:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
    12b0:	00 00                	add    BYTE PTR [rax],al
    12b2:	08 09                	or     BYTE PTR [rcx],cl
    12b4:	d8 08                	fmul   DWORD PTR [rax]
    12b6:	00 00                	add    BYTE PTR [rax],al
    12b8:	03 17                	add    edx,DWORD PTR [rdi]
    12ba:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	10 09                	adc    BYTE PTR [rcx],cl
    12c1:	f0 08 00             	lock or BYTE PTR [rax],al
    12c4:	00 03                	add    BYTE PTR [rbx],al
    12c6:	18 18                	sbb    BYTE PTR [rax],bl
    12c8:	5a                   	pop    rdx
    12c9:	00 00                	add    BYTE PTR [rax],al
    12cb:	00 60 09             	add    BYTE PTR [rax+0x9],ah
    12ce:	6b 09 00             	imul   ecx,DWORD PTR [rcx],0x0
    12d1:	00 03                	add    BYTE PTR [rbx],al
    12d3:	19 18                	sbb    DWORD PTR [rax],ebx
    12d5:	5a                   	pop    rdx
    12d6:	00 00                	add    BYTE PTR [rax],al
    12d8:	00 80 09 29 0a 00    	add    BYTE PTR [rax+0xa2909],al
    12de:	00 03                	add    BYTE PTR [rbx],al
    12e0:	1a 18                	sbb    bl,BYTE PTR [rax]
    12e2:	5a                   	pop    rdx
    12e3:	00 00                	add    BYTE PTR [rax],al
    12e5:	00 0f                	add    BYTE PTR [rdi],cl
    12e7:	09 05 0a 00 00 03    	or     DWORD PTR [rip+0x300000a],eax        # 30012f7 <__kernel_end+0x2def2f7>
    12ed:	1b 18                	sbb    ebx,DWORD PTR [rax]
    12ef:	5a                   	pop    rdx
    12f0:	00 00                	add    BYTE PTR [rax],al
    12f2:	00 10                	add    BYTE PTR [rax],dl
    12f4:	09 32                	or     DWORD PTR [rdx],esi
    12f6:	09 00                	or     DWORD PTR [rax],eax
    12f8:	00 03                	add    BYTE PTR [rbx],al
    12fa:	1c 18                	sbb    al,0x18
    12fc:	5a                   	pop    rdx
    12fd:	00 00                	add    BYTE PTR [rax],al
    12ff:	00 20                	add    BYTE PTR [rax],ah
    1301:	09 dd                	or     ebp,ebx
    1303:	09 00                	or     DWORD PTR [rax],eax
    1305:	00 03                	add    BYTE PTR [rbx],al
    1307:	1d 18 5a 00 00       	sbb    eax,0x5a18
    130c:	00 40 09             	add    BYTE PTR [rax+0x9],al
    130f:	cc                   	int3   
    1310:	08 00                	or     BYTE PTR [rax],al
    1312:	00 03                	add    BYTE PTR [rbx],al
    1314:	1e                   	(bad)  
    1315:	18 5a 00             	sbb    BYTE PTR [rdx+0x0],bl
    1318:	00 00                	add    BYTE PTR [rax],al
    131a:	80 09 41             	or     BYTE PTR [rcx],0x41
    131d:	09 00                	or     DWORD PTR [rax],eax
    131f:	00 03                	add    BYTE PTR [rbx],al
    1321:	21 18                	and    DWORD PTR [rax],ebx
    1323:	5a                   	pop    rdx
    1324:	00 00                	add    BYTE PTR [rax],al
    1326:	00 08                	add    BYTE PTR [rax],cl
    1328:	09 16                	or     DWORD PTR [rsi],edx
    132a:	08 00                	or     BYTE PTR [rax],al
    132c:	00 03                	add    BYTE PTR [rbx],al
    132e:	22 18                	and    bl,BYTE PTR [rax]
    1330:	5a                   	pop    rdx
    1331:	00 00                	add    BYTE PTR [rax],al
    1333:	00 10                	add    BYTE PTR [rax],dl
    1335:	09 a6 09 00 00 03    	or     DWORD PTR [rsi+0x3000009],esp
    133b:	23 18                	and    ebx,DWORD PTR [rax]
    133d:	5a                   	pop    rdx
    133e:	00 00                	add    BYTE PTR [rax],al
    1340:	00 18                	add    BYTE PTR [rax],bl
    1342:	09 a9 08 00 00 03    	or     DWORD PTR [rcx+0x3000008],ebp
    1348:	24 18                	and    al,0x18
    134a:	5a                   	pop    rdx
    134b:	00 00                	add    BYTE PTR [rax],al
    134d:	00 20                	add    BYTE PTR [rax],ah
    134f:	0a 0a                	or     cl,BYTE PTR [rdx]
    1351:	0b 00                	or     eax,DWORD PTR [rax]
    1353:	00 08                	add    BYTE PTR [rax],cl
    1355:	03 26                	add    esp,DWORD PTR [rsi]
    1357:	18 31                	sbb    BYTE PTR [rcx],dh
    1359:	02 00                	add    al,BYTE PTR [rax]
    135b:	00 0b                	add    BYTE PTR [rbx],cl
    135d:	57                   	push   rdi
    135e:	0b 00                	or     eax,DWORD PTR [rax]
    1360:	00 03                	add    BYTE PTR [rbx],al
    1362:	27                   	(bad)  
    1363:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
    1366:	00 00                	add    BYTE PTR [rax],al
    1368:	00 0b                	add    BYTE PTR [rbx],cl
    136a:	7f 0b                	jg     1377 <stivale_hdr-0x1fec89>
    136c:	00 00                	add    BYTE PTR [rax],al
    136e:	03 28                	add    ebp,DWORD PTR [rax]
    1370:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
    1373:	00 00                	add    BYTE PTR [rax],al
    1375:	02 0b                	add    cl,BYTE PTR [rbx]
    1377:	88 0b                	mov    BYTE PTR [rbx],cl
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	03 29                	add    ebp,DWORD PTR [rcx]
    137d:	12 4e 00             	adc    cl,BYTE PTR [rsi+0x0]
    1380:	00 00                	add    BYTE PTR [rax],al
    1382:	04 0b                	add    al,0xb
    1384:	33 0c 00             	xor    ecx,DWORD PTR [rax+rax*1]
    1387:	00 03                	add    BYTE PTR [rbx],al
    1389:	2a 12                	sub    dl,BYTE PTR [rdx]
    138b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    138e:	00 05 0b 6a 0a 00    	add    BYTE PTR [rip+0xa6a0b],al        # a7d9f <stivale_hdr-0x158261>
    1394:	00 03                	add    BYTE PTR [rbx],al
    1396:	2b 12                	sub    edx,DWORD PTR [rdx]
    1398:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    139b:	00 06                	add    BYTE PTR [rsi],al
    139d:	0b 4e 0a             	or     ecx,DWORD PTR [rsi+0xa]
    13a0:	00 00                	add    BYTE PTR [rax],al
    13a2:	03 2c 12             	add    ebp,DWORD PTR [rdx+rdx*1]
    13a5:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    13a8:	00 07                	add    BYTE PTR [rdi],al
    13aa:	00 0a                	add    BYTE PTR [rdx],cl
    13ac:	ed                   	in     eax,dx
    13ad:	0a 00                	or     al,BYTE PTR [rax]
    13af:	00 10                	add    BYTE PTR [rax],dl
    13b1:	03 2f                	add    ebp,DWORD PTR [rdi]
    13b3:	18 a7 02 00 00 0b    	sbb    BYTE PTR [rdi+0xb000002],ah
    13b9:	b2 0a                	mov    dl,0xa
    13bb:	00 00                	add    BYTE PTR [rax],al
    13bd:	03 30                	add    esi,DWORD PTR [rax]
    13bf:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
    13c2:	00 00                	add    BYTE PTR [rax],al
    13c4:	00 0b                	add    BYTE PTR [rbx],cl
    13c6:	03 0b                	add    ecx,DWORD PTR [rbx]
    13c8:	00 00                	add    BYTE PTR [rax],al
    13ca:	03 31                	add    esi,DWORD PTR [rcx]
    13cc:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
    13cf:	00 00                	add    BYTE PTR [rax],al
    13d1:	02 0b                	add    cl,BYTE PTR [rbx]
    13d3:	47 0a 00             	rex.RXB or r8b,BYTE PTR [r8]
    13d6:	00 03                	add    BYTE PTR [rbx],al
    13d8:	32 12                	xor    dl,BYTE PTR [rdx]
    13da:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    13dd:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    13e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13e1:	0b 00                	or     eax,DWORD PTR [rax]
    13e3:	00 03                	add    BYTE PTR [rbx],al
    13e5:	33 12                	xor    edx,DWORD PTR [rdx]
    13e7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    13ea:	00 05 0b da 0a 00    	add    BYTE PTR [rip+0xada0b],al        # aedfb <stivale_hdr-0x151205>
    13f0:	00 03                	add    BYTE PTR [rbx],al
    13f2:	34 12                	xor    al,0x12
    13f4:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    13f7:	00 06                	add    BYTE PTR [rsi],al
    13f9:	0b 19                	or     ebx,DWORD PTR [rcx]
    13fb:	0b 00                	or     eax,DWORD PTR [rax]
    13fd:	00 03                	add    BYTE PTR [rbx],al
    13ff:	35 12 4e 00 00       	xor    eax,0x4e12
    1404:	00 07                	add    BYTE PTR [rdi],al
    1406:	0b 20                	or     esp,DWORD PTR [rax]
    1408:	0b 00                	or     eax,DWORD PTR [rax]
    140a:	00 03                	add    BYTE PTR [rbx],al
    140c:	36 13 79 00          	adc    edi,DWORD PTR ss:[rcx+0x0]
    1410:	00 00                	add    BYTE PTR [rax],al
    1412:	08 0b                	or     BYTE PTR [rbx],cl
    1414:	47 0b 00             	rex.RXB or r8d,DWORD PTR [r8]
    1417:	00 03                	add    BYTE PTR [rbx],al
    1419:	37                   	(bad)  
    141a:	13 79 00             	adc    edi,DWORD PTR [rcx+0x0]
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	0c 00                	or     al,0x0
    1421:	0c 67                	or     al,0x67
    1423:	64 74 00             	fs je  1426 <stivale_hdr-0x1febda>
    1426:	0a 03                	or     al,BYTE PTR [rbx]
    1428:	3a 18                	cmp    bl,BYTE PTR [rax]
    142a:	cf                   	iret   
    142b:	02 00                	add    al,BYTE PTR [rax]
    142d:	00 0b                	add    BYTE PTR [rbx],cl
    142f:	57                   	push   rdi
    1430:	0b 00                	or     eax,DWORD PTR [rax]
    1432:	00 03                	add    BYTE PTR [rbx],al
    1434:	3b 12                	cmp    edx,DWORD PTR [rdx]
    1436:	66 00 00             	data16 add BYTE PTR [rax],al
    1439:	00 00                	add    BYTE PTR [rax],al
    143b:	0b 1a                	or     ebx,DWORD PTR [rdx]
    143d:	04 00                	add    al,0x0
    143f:	00 03                	add    BYTE PTR [rbx],al
    1441:	3c 15                	cmp    al,0x15
    1443:	d8 00                	fadd   DWORD PTR [rax]
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	02 00                	add    al,BYTE PTR [rax]
    1449:	04 e2                	add    al,0xe2
    144b:	0a 00                	or     al,BYTE PTR [rax]
    144d:	00 03                	add    BYTE PTR [rbx],al
    144f:	2d 23 d5 01 00       	sub    eax,0x1d523
    1454:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
    1457:	0b 00                	or     eax,DWORD PTR [rax]
    1459:	00 03                	add    BYTE PTR [rbx],al
    145b:	3d 23 a7 02 00       	cmp    eax,0x2a723
    1460:	00 0d 76 0a 00 00    	add    BYTE PTR [rip+0xa76],cl        # 1edc <stivale_hdr-0x1fe124>
    1466:	01 30                	add    DWORD PTR [rax],esi
    1468:	06                   	(bad)  
    1469:	ba 0a 00 00 02       	mov    edx,0x200000a
    146e:	03 00                	add    eax,DWORD PTR [rax]
    1470:	00 0e                	add    BYTE PTR [rsi],cl
    1472:	b0 00                	mov    al,0x0
    1474:	00 00                	add    BYTE PTR [rax],al
    1476:	0e                   	(bad)  
    1477:	b0 00                	mov    al,0x0
    1479:	00 00                	add    BYTE PTR [rax],al
    147b:	00 04 58             	add    BYTE PTR [rax+rbx*2],al
    147e:	0a 00                	or     al,BYTE PTR [rax]
    1480:	00 03                	add    BYTE PTR [rbx],al
    1482:	38 23                	cmp    BYTE PTR [rbx],ah
    1484:	31 02                	xor    DWORD PTR [rdx],eax
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	0d 30 0b 00 00       	or     eax,0xb30
    148d:	01 20                	add    DWORD PTR [rax],esp
    148f:	06                   	(bad)  
    1490:	91                   	xchg   ecx,eax
    1491:	0b 00                	or     eax,DWORD PTR [rax]
    1493:	00 33                	add    BYTE PTR [rbx],dh
    1495:	03 00                	add    eax,DWORD PTR [rax]
    1497:	00 0e                	add    BYTE PTR [rsi],cl
    1499:	d8 00                	fadd   DWORD PTR [rax]
    149b:	00 00                	add    BYTE PTR [rax],al
    149d:	0e                   	(bad)  
    149e:	d8 00                	fadd   DWORD PTR [rax]
    14a0:	00 00                	add    BYTE PTR [rax],al
    14a2:	0e                   	(bad)  
    14a3:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    14a6:	00 0e                	add    BYTE PTR [rsi],cl
    14a8:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    14ab:	00 00                	add    BYTE PTR [rax],al
    14ad:	0f 3e                	(bad)  
    14af:	0a 00                	or     al,BYTE PTR [rax]
    14b1:	00 01                	add    BYTE PTR [rcx],al
    14b3:	0a 11                	or     dl,BYTE PTR [rcx]
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	10 f8                	adc    al,bh
    14b9:	00 00                	add    BYTE PTR [rax],al
    14bb:	00 10                	add    BYTE PTR [rax],dl
    14bd:	05 01 00 00 10       	add    eax,0x10000001
    14c2:	12 01                	adc    al,BYTE PTR [rcx]
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	10 1f                	adc    BYTE PTR [rdi],bl
    14c8:	01 00                	add    DWORD PTR [rax],eax
    14ca:	00 10                	add    BYTE PTR [rax],dl
    14cc:	2c 01                	sub    al,0x1
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	10 39                	adc    BYTE PTR [rcx],bh
    14d2:	01 00                	add    DWORD PTR [rax],eax
    14d4:	00 10                	add    BYTE PTR [rax],dl
    14d6:	46 01 00             	rex.RX add DWORD PTR [rax],r8d
    14d9:	00 10                	add    BYTE PTR [rax],dl
    14db:	53                   	push   rbx
    14dc:	01 00                	add    DWORD PTR [rax],eax
    14de:	00 10                	add    BYTE PTR [rax],dl
    14e0:	60                   	(bad)  
    14e1:	01 00                	add    DWORD PTR [rax],eax
    14e3:	00 10                	add    BYTE PTR [rax],dl
    14e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    14e6:	01 00                	add    DWORD PTR [rax],eax
    14e8:	00 10                	add    BYTE PTR [rax],dl
    14ea:	7a 01                	jp     14ed <stivale_hdr-0x1feb13>
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	10 87 01 00 00 10    	adc    BYTE PTR [rdi+0x10000001],al
    14f4:	94                   	xchg   esp,eax
    14f5:	01 00                	add    DWORD PTR [rax],eax
    14f7:	00 10                	add    BYTE PTR [rax],dl
    14f9:	a1 01 00 00 10 ae 01 	movabs eax,ds:0x1ae10000001
    1500:	00 00 
    1502:	10 bb 01 00 00 10    	adc    BYTE PTR [rbx+0x10000001],bh
    1508:	c8 01 00 00          	enter  0x1,0x0
    150c:	11 cf                	adc    edi,ecx
    150e:	02 00                	add    al,BYTE PTR [rax]
    1510:	00 a2 03 00 00 12    	add    BYTE PTR [rdx+0x12000003],ah
    1516:	34 00                	xor    al,0x0
    1518:	00 00                	add    BYTE PTR [rax],al
    151a:	0f 00 13             	lldt   WORD PTR [rbx]
    151d:	5d                   	pop    rbp
    151e:	0b 00                	or     eax,DWORD PTR [rax]
    1520:	00 01                	add    BYTE PTR [rcx],al
    1522:	03 3e                	add    edi,DWORD PTR [rsi]
    1524:	92                   	xchg   edx,eax
    1525:	03 00                	add    eax,DWORD PTR [rax]
    1527:	00 00                	add    BYTE PTR [rax],al
    1529:	10 09                	adc    BYTE PTR [rcx],cl
    152b:	03 00                	add    eax,DWORD PTR [rax]
    152d:	f0 20 00             	lock and BYTE PTR [rax],al
    1530:	00 00                	add    BYTE PTR [rax],al
    1532:	00 00                	add    BYTE PTR [rax],al
    1534:	14 9c                	adc    al,0x9c
    1536:	0a 00                	or     al,BYTE PTR [rax]
    1538:	00 01                	add    BYTE PTR [rcx],al
    153a:	04 18                	add    al,0x18
    153c:	db 02                	fild   DWORD PTR [rdx]
    153e:	00 00                	add    BYTE PTR [rax],al
    1540:	09 03                	or     DWORD PTR [rbx],eax
    1542:	80 f0 20             	xor    al,0x20
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 00                	add    BYTE PTR [rax],al
    1549:	00 14 86             	add    BYTE PTR [rsi+rax*4],dl
    154c:	0a 00                	or     al,BYTE PTR [rax]
    154e:	00 01                	add    BYTE PTR [rcx],al
    1550:	05 0f a4 00 00       	add    eax,0xa40f
    1555:	00 09                	add    BYTE PTR [rcx],cl
    1557:	03 8c f0 20 00 00 00 	add    ecx,DWORD PTR [rax+rsi*8+0x20]
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	15 92 0a 00 00       	adc    eax,0xa92
    1565:	01 07                	add    DWORD PTR [rdi],eax
    1567:	12 9f 00 00 00 09    	adc    bl,BYTE PTR [rdi+0x9000000]
    156d:	03 27                	add    esp,DWORD PTR [rdi]
    156f:	a0 20 00 00 00 00 00 	movabs al,ds:0xba15000000000020
    1576:	15 ba 
    1578:	0b 00                	or     eax,DWORD PTR [rax]
    157a:	00 01                	add    BYTE PTR [rcx],al
    157c:	08 12                	or     BYTE PTR [rdx],dl
    157e:	9f                   	lahf   
    157f:	00 00                	add    BYTE PTR [rax],al
    1581:	00 09                	add    BYTE PTR [rcx],cl
    1583:	03 28                	add    ebp,DWORD PTR [rax]
    1585:	a0 20 00 00 00 00 00 	movabs al,ds:0xe716000000000020
    158c:	16 e7 
    158e:	02 00                	add    al,BYTE PTR [rax]
    1590:	00 43 18             	add    BYTE PTR [rbx+0x18],al
    1593:	20 00                	and    BYTE PTR [rax],al
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 00                	add    BYTE PTR [rax],al
    1599:	d1 00                	rol    DWORD PTR [rax],1
    159b:	00 00                	add    BYTE PTR [rax],al
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 00                	add    BYTE PTR [rax],al
    15a1:	01 9c 6a 04 00 00 17 	add    DWORD PTR [rdx+rbp*2+0x17000004],ebx
    15a8:	1a 04 00             	sbb    al,BYTE PTR [rax+rax*1]
    15ab:	00 01                	add    BYTE PTR [rcx],al
    15ad:	30 27                	xor    BYTE PTR [rdi],ah
    15af:	b0 00                	mov    al,0x0
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	02 91 58 17 57 0b    	add    dl,BYTE PTR [rcx+0xb571758]
    15b9:	00 00                	add    BYTE PTR [rax],al
    15bb:	01 30                	add    DWORD PTR [rax],esi
    15bd:	34 b0                	xor    al,0xb0
    15bf:	00 00                	add    BYTE PTR [rax],al
    15c1:	00 02                	add    BYTE PTR [rdx],al
    15c3:	91                   	xchg   ecx,eax
    15c4:	50                   	push   rax
    15c5:	14 76                	adc    al,0x76
    15c7:	0b 00                	or     eax,DWORD PTR [rax]
    15c9:	00 01                	add    BYTE PTR [rcx],al
    15cb:	31 0a                	xor    DWORD PTR [rdx],ecx
    15cd:	66 00 00             	data16 add BYTE PTR [rax],al
    15d0:	00 02                	add    BYTE PTR [rdx],al
    15d2:	91                   	xchg   ecx,eax
    15d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15d4:	14 27                	adc    al,0x27
    15d6:	0b 00                	or     eax,DWORD PTR [rax]
    15d8:	00 01                	add    BYTE PTR [rcx],al
    15da:	32 22                	xor    ah,BYTE PTR [rdx]
    15dc:	6a 04                	push   0x4
    15de:	00 00                	add    BYTE PTR [rax],al
    15e0:	02 91 60 00 18 08    	add    dl,BYTE PTR [rcx+0x8180060]
    15e6:	02 03                	add    al,BYTE PTR [rbx]
    15e8:	00 00                	add    BYTE PTR [rax],al
    15ea:	16                   	(bad)  
    15eb:	0e                   	(bad)  
    15ec:	03 00                	add    eax,DWORD PTR [rax]
    15ee:	00 f1                	add    cl,dh
    15f0:	16                   	(bad)  
    15f1:	20 00                	and    BYTE PTR [rax],al
    15f3:	00 00                	add    BYTE PTR [rax],al
    15f5:	00 00                	add    BYTE PTR [rax],al
    15f7:	52                   	push   rdx
    15f8:	01 00                	add    DWORD PTR [rax],eax
    15fa:	00 00                	add    BYTE PTR [rax],al
    15fc:	00 00                	add    BYTE PTR [rax],al
    15fe:	00 01                	add    BYTE PTR [rcx],al
    1600:	9c                   	pushf  
    1601:	c8 04 00 00          	enter  0x4,0x0
    1605:	17                   	(bad)  
    1606:	1a 04 00             	sbb    al,BYTE PTR [rax+rax*1]
    1609:	00 01                	add    BYTE PTR [rcx],al
    160b:	20 2f                	and    BYTE PTR [rdi],ch
    160d:	d8 00                	fadd   DWORD PTR [rax]
    160f:	00 00                	add    BYTE PTR [rax],al
    1611:	02 91 68 17 57 0b    	add    dl,BYTE PTR [rcx+0xb571768]
    1617:	00 00                	add    BYTE PTR [rax],al
    1619:	01 20                	add    DWORD PTR [rax],esp
    161b:	3d d8 00 00 00       	cmp    eax,0xd8
    1620:	02 91 60 17 50 0b    	add    dl,BYTE PTR [rcx+0xb501760]
    1626:	00 00                	add    BYTE PTR [rax],al
    1628:	01 20                	add    DWORD PTR [rax],esp
    162a:	49                   	rex.WB
    162b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    162e:	00 02                	add    BYTE PTR [rdx],al
    1630:	91                   	xchg   ecx,eax
    1631:	5c                   	pop    rsp
    1632:	17                   	(bad)  
    1633:	6a 0a                	push   0xa
    1635:	00 00                	add    BYTE PTR [rax],al
    1637:	01 20                	add    DWORD PTR [rax],esp
    1639:	56                   	push   rsi
    163a:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    163d:	00 02                	add    BYTE PTR [rdx],al
    163f:	91                   	xchg   ecx,eax
    1640:	58                   	pop    rax
    1641:	00 19                	add    BYTE PTR [rcx],bl
    1643:	33 03                	xor    eax,DWORD PTR [rbx]
    1645:	00 00                	add    BYTE PTR [rax],al
    1647:	4a 16                	rex.WX (bad) 
    1649:	20 00                	and    BYTE PTR [rax],al
    164b:	00 00                	add    BYTE PTR [rax],al
    164d:	00 00                	add    BYTE PTR [rax],al
    164f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1650:	00 00                	add    BYTE PTR [rax],al
    1652:	00 00                	add    BYTE PTR [rax],al
    1654:	00 00                	add    BYTE PTR [rax],al
    1656:	00 01                	add    BYTE PTR [rcx],al
    1658:	9c                   	pushf  
    1659:	00 31                	add    BYTE PTR [rcx],dh
    165b:	06                   	(bad)  
    165c:	00 00                	add    BYTE PTR [rax],al
    165e:	04 00                	add    al,0x0
    1660:	5a                   	pop    rdx
    1661:	07                   	(bad)  
    1662:	00 00                	add    BYTE PTR [rax],al
    1664:	08 01                	or     BYTE PTR [rcx],al
    1666:	7c 00                	jl     1668 <stivale_hdr-0x1fe998>
    1668:	00 00                	add    BYTE PTR [rax],al
    166a:	04 ca                	add    al,0xca
    166c:	0b 00                	or     eax,DWORD PTR [rax]
    166e:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	14 19                	adc    al,0x19
    1675:	20 00                	and    BYTE PTR [rax],al
    1677:	00 00                	add    BYTE PTR [rax],al
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	d3 0a                	ror    DWORD PTR [rdx],cl
    167d:	00 00                	add    BYTE PTR [rax],al
    167f:	00 00                	add    BYTE PTR [rax],al
    1681:	00 00                	add    BYTE PTR [rax],al
    1683:	28 06                	sub    BYTE PTR [rsi],al
    1685:	00 00                	add    BYTE PTR [rax],al
    1687:	02 08                	add    cl,BYTE PTR [rax]
    1689:	05 6a 01 00 00       	add    eax,0x16a
    168e:	02 08                	add    cl,BYTE PTR [rax]
    1690:	07                   	(bad)  
    1691:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    1694:	00 02                	add    BYTE PTR [rdx],al
    1696:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 1801 <stivale_hdr-0x1fe7ff>
    169c:	02 10                	add    dl,BYTE PTR [rax]
    169e:	04 8f                	add    al,0x8f
    16a0:	01 00                	add    DWORD PTR [rax],eax
    16a2:	00 03                	add    BYTE PTR [rbx],al
    16a4:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    16a7:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    16aa:	23 00                	and    eax,DWORD PTR [rax]
    16ac:	00 03                	add    BYTE PTR [rbx],al
    16ae:	04 1d                	add    al,0x1d
    16b0:	5a                   	pop    rdx
    16b1:	00 00                	add    BYTE PTR [rax],al
    16b3:	00 02                	add    BYTE PTR [rdx],al
    16b5:	01 08                	add    DWORD PTR [rax],ecx
    16b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16b8:	00 00                	add    BYTE PTR [rax],al
    16ba:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
    16bd:	08 00                	or     BYTE PTR [rax],al
    16bf:	00 03                	add    BYTE PTR [rbx],al
    16c1:	05 1d 6d 00 00       	add    eax,0x6d1d
    16c6:	00 02                	add    BYTE PTR [rdx],al
    16c8:	02 07                	add    al,BYTE PTR [rdi]
    16ca:	9b                   	fwait
    16cb:	01 00                	add    DWORD PTR [rax],eax
    16cd:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
    16d0:	08 00                	or     BYTE PTR [rax],al
    16d2:	00 03                	add    BYTE PTR [rbx],al
    16d4:	06                   	(bad)  
    16d5:	1d 80 00 00 00       	sbb    eax,0x80
    16da:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    16dd:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    16e0:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
    16e3:	01 00                	add    DWORD PTR [rax],eax
    16e5:	00 03                	add    BYTE PTR [rbx],al
    16e7:	07                   	(bad)  
    16e8:	1d 34 00 00 00       	sbb    eax,0x34
    16ed:	02 10                	add    dl,BYTE PTR [rax]
    16ef:	07                   	(bad)  
    16f0:	00 00                	add    BYTE PTR [rax],al
    16f2:	00 00                	add    BYTE PTR [rax],al
    16f4:	04 5f                	add    al,0x5f
    16f6:	03 00                	add    eax,DWORD PTR [rax]
    16f8:	00 03                	add    BYTE PTR [rbx],al
    16fa:	0a 1d 5a 00 00 00    	or     bl,BYTE PTR [rip+0x5a]        # 175a <stivale_hdr-0x1fe8a6>
    1700:	04 e5                	add    al,0xe5
    1702:	02 00                	add    al,BYTE PTR [rax]
    1704:	00 03                	add    BYTE PTR [rbx],al
    1706:	0c 1d                	or     al,0x1d
    1708:	80 00 00             	add    BYTE PTR [rax],0x0
    170b:	00 04 25 00 00 00 03 	add    BYTE PTR ds:0x3000000,al
    1712:	0d 1d 34 00 00       	or     eax,0x341d
    1717:	00 02                	add    BYTE PTR [rdx],al
    1719:	01 06                	add    DWORD PTR [rsi],eax
    171b:	70 00                	jo     171d <stivale_hdr-0x1fe8e3>
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	02 02                	add    al,BYTE PTR [rdx]
    1721:	05 73 01 00 00       	add    eax,0x173
    1726:	05 04 05 69 6e       	add    eax,0x6e690504
    172b:	74 00                	je     172d <stivale_hdr-0x1fe8d3>
    172d:	02 10                	add    dl,BYTE PTR [rax]
    172f:	05 1b 01 00 00       	add    eax,0x11b
    1734:	04 3b                	add    al,0x3b
    1736:	02 00                	add    al,BYTE PTR [rax]
    1738:	00 03                	add    BYTE PTR [rbx],al
    173a:	17                   	(bad)  
    173b:	1d b2 00 00 00       	sbb    eax,0xb2
    1740:	04 8f                	add    al,0x8f
    1742:	22 00                	and    al,BYTE PTR [rax]
    1744:	00 03                	add    BYTE PTR [rbx],al
    1746:	19 1d b2 00 00 00    	sbb    DWORD PTR [rip+0xb2],ebx        # 17fe <stivale_hdr-0x1fe802>
    174c:	06                   	(bad)  
    174d:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1750:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
    1753:	0b ad 01 00 00 07    	or     ebp,DWORD PTR [rbp+0x7000001]
    1759:	69 64 74 00 04 08 0c 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x80c0804
    1760:	08 
    1761:	10 04 09             	adc    BYTE PTR [rcx+rcx*1],al
    1764:	12 ae 0c 00 00 6f    	adc    ch,BYTE PTR [rsi+0x6f00000c]
    176a:	01 00                	add    DWORD PTR [rax],eax
    176c:	00 09                	add    BYTE PTR [rcx],cl
    176e:	70 0c                	jo     177c <stivale_hdr-0x1fe884>
    1770:	00 00                	add    BYTE PTR [rax],al
    1772:	04 0a                	add    al,0xa
    1774:	09 61 00             	or     DWORD PTR [rcx+0x0],esp
    1777:	00 00                	add    BYTE PTR [rax],al
    1779:	00 09                	add    BYTE PTR [rcx],cl
    177b:	a8 13                	test   al,0x13
    177d:	00 00                	add    BYTE PTR [rax],al
    177f:	04 0b                	add    al,0xb
    1781:	09 61 00             	or     DWORD PTR [rcx+0x0],esp
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	02 09                	add    cl,BYTE PTR [rcx]
    1788:	fb                   	sti    
    1789:	0b 00                	or     eax,DWORD PTR [rax]
    178b:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    178e:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    1791:	00 00                	add    BYTE PTR [rax],al
    1793:	04 09                	add    al,0x9
    1795:	33 0c 00             	xor    ecx,DWORD PTR [rax+rax*1]
    1798:	00 04 0d 09 4e 00 00 	add    BYTE PTR [rcx*1+0x4e09],al
    179f:	00 05 09 68 0c 00    	add    BYTE PTR [rip+0xc6809],al        # c7fae <stivale_hdr-0x138052>
    17a5:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    17a8:	09 61 00             	or     DWORD PTR [rcx+0x0],esp
    17ab:	00 00                	add    BYTE PTR [rax],al
    17ad:	06                   	(bad)  
    17ae:	09 c9                	or     ecx,ecx
    17b0:	0c 00                	or     al,0x0
    17b2:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    17b5:	0c 74                	or     al,0x74
    17b7:	00 00                	add    BYTE PTR [rax],al
    17b9:	00 08                	add    BYTE PTR [rax],cl
    17bb:	09 47 0b             	or     DWORD PTR [rdi+0xb],eax
    17be:	00 00                	add    BYTE PTR [rax],al
    17c0:	04 10                	add    al,0x10
    17c2:	0a 74 00 00          	or     dh,BYTE PTR [rax+rax*1+0x0]
    17c6:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    17c9:	08 0a                	or     BYTE PTR [rdx],cl
    17cb:	04 16                	add    al,0x16
    17cd:	12 d2                	adc    dl,dl
    17cf:	0c 00                	or     al,0x0
    17d1:	00 97 01 00 00 09    	add    BYTE PTR [rdi+0x9000001],dl
    17d7:	57                   	push   rdi
    17d8:	0b 00                	or     eax,DWORD PTR [rax]
    17da:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    17dd:	09 61 00             	or     DWORD PTR [rcx+0x0],esp
    17e0:	00 00                	add    BYTE PTR [rax],al
    17e2:	00 09                	add    BYTE PTR [rcx],cl
    17e4:	1a 04 00             	sbb    al,BYTE PTR [rax+rax*1]
    17e7:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
    17ea:	0c e6                	or     al,0xe6
    17ec:	00 00                	add    BYTE PTR [rax],al
    17ee:	00 02                	add    BYTE PTR [rdx],al
    17f0:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
    17f3:	0c 00                	or     al,0x0
    17f5:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    17f8:	1d 6f 01 00 00       	sbb    eax,0x16f
    17fd:	0a 29                	or     ch,BYTE PTR [rcx]
    17ff:	0c 00                	or     al,0x0
    1801:	00 02                	add    BYTE PTR [rdx],al
    1803:	f9                   	stc    
    1804:	06                   	(bad)  
    1805:	00 00                	add    BYTE PTR [rax],al
    1807:	06                   	(bad)  
    1808:	73 79                	jae    1883 <stivale_hdr-0x1fe77d>
    180a:	73 00                	jae    180c <stivale_hdr-0x1fe7f4>
    180c:	05 04 0b 08 02       	add    eax,0x2080b04
    1811:	00 00                	add    BYTE PTR [rax],al
    1813:	0b 69 00             	or     ebp,DWORD PTR [rcx+0x0]
    1816:	00 00                	add    BYTE PTR [rax],al
    1818:	05 05 0f 0c f3       	add    eax,0xf30c0f05
    181d:	01 00                	add    DWORD PTR [rax],eax
    181f:	00 06                	add    BYTE PTR [rsi],al
    1821:	12 0f                	adc    cl,BYTE PTR [rdi]
    1823:	da 01                	fiadd  DWORD PTR [rcx]
    1825:	00 00                	add    BYTE PTR [rax],al
    1827:	0d 12 0c 00 00       	or     eax,0xc12
    182c:	06                   	(bad)  
    182d:	13 19                	adc    ebx,DWORD PTR [rcx]
    182f:	da 00                	fiadd  DWORD PTR [rax]
    1831:	00 00                	add    BYTE PTR [rax],al
    1833:	00 0e                	add    BYTE PTR [rsi],cl
    1835:	48 02 00             	rex.W add al,BYTE PTR [rax]
    1838:	00 07                	add    BYTE PTR [rdi],al
    183a:	09 0f                	or     DWORD PTR [rdi],ecx
    183c:	0d 1f 04 00 00       	or     eax,0x41f
    1841:	07                   	(bad)  
    1842:	0a 1b                	or     bl,BYTE PTR [rbx]
    1844:	b2 00                	mov    dl,0x0
    1846:	00 00                	add    BYTE PTR [rax],al
    1848:	0d 79 03 00 00       	or     eax,0x379
    184d:	07                   	(bad)  
    184e:	0b 1b                	or     ebx,DWORD PTR [rbx]
    1850:	b2 00                	mov    dl,0x0
    1852:	00 00                	add    BYTE PTR [rax],al
    1854:	0d 8f 0c 00 00       	or     eax,0xc8f
    1859:	07                   	(bad)  
    185a:	0c 37                	or     al,0x37
    185c:	bb 02 00 00 00       	mov    ebx,0x2
    1861:	00 02                	add    BYTE PTR [rdx],al
    1863:	01 06                	add    DWORD PTR [rsi],eax
    1865:	77 00                	ja     1867 <stivale_hdr-0x1fe799>
    1867:	00 00                	add    BYTE PTR [rax],al
    1869:	0f 08                	invd   
    186b:	02 00                	add    al,BYTE PTR [rax]
    186d:	00 06                	add    BYTE PTR [rsi],al
    186f:	67 66 78 00          	addr32 data16 js 1873 <stivale_hdr-0x1fe78d>
    1873:	08 08                	or     BYTE PTR [rax],cl
    1875:	0b 29                	or     ebp,DWORD PTR [rcx]
    1877:	02 00                	add    al,BYTE PTR [rax]
    1879:	00 0b                	add    BYTE PTR [rbx],cl
    187b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    187c:	02 00                	add    al,BYTE PTR [rax]
    187e:	00 08                	add    BYTE PTR [rax],cl
    1880:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
    1883:	06                   	(bad)  
    1884:	69 6f 00 09 0d 0b 75 	imul   ebp,DWORD PTR [rdi+0x0],0x750b0d09
    188b:	02 00                	add    al,BYTE PTR [rax]
    188d:	00 10                	add    BYTE PTR [rax],dl
    188f:	74 74                	je     1905 <stivale_hdr-0x1fe6fb>
    1891:	79 00                	jns    1893 <stivale_hdr-0x1fe76d>
    1893:	09 0e                	or     DWORD PTR [rsi],ecx
    1895:	0f 0b                	ud2    
    1897:	16                   	(bad)  
    1898:	03 00                	add    eax,DWORD PTR [rax]
    189a:	00 0a                	add    BYTE PTR [rdx],cl
    189c:	09 0c 06             	or     DWORD PTR [rsi+rax*1],ecx
    189f:	70 69                	jo     190a <stivale_hdr-0x1fe6f6>
    18a1:	74 00                	je     18a3 <stivale_hdr-0x1fe75d>
    18a3:	06                   	(bad)  
    18a4:	06                   	(bad)  
    18a5:	0f 61 02             	punpcklwd mm0,DWORD PTR [rdx]
    18a8:	00 00                	add    BYTE PTR [rax],al
    18aa:	11 b4 14 00 00 06 0a 	adc    DWORD PTR [rsp+rdx*1+0xa060000],esi
    18b1:	17                   	(bad)  
    18b2:	18 0d 00 00 a6 00    	sbb    BYTE PTR [rip+0xa60000],cl        # a618b8 <__kernel_end+0x84f8b8>
    18b8:	00 00                	add    BYTE PTR [rax],al
    18ba:	00 12                	add    BYTE PTR [rdx],dl
    18bc:	78 0c                	js     18ca <stivale_hdr-0x1fe736>
    18be:	00 00                	add    BYTE PTR [rax],al
    18c0:	01 05 18 13 61 00    	add    DWORD PTR [rip+0x611318],eax        # 612bde <__kernel_end+0x400bde>
    18c6:	00 00                	add    BYTE PTR [rax],al
    18c8:	13 4e 00             	adc    ecx,DWORD PTR [rsi+0x0]
    18cb:	00 00                	add    BYTE PTR [rax],al
    18cd:	00 00                	add    BYTE PTR [rax],al
    18cf:	02 01                	add    al,BYTE PTR [rcx]
    18d1:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    18d4:	00 00                	add    BYTE PTR [rax],al
    18d6:	08 10                	or     BYTE PTR [rax],dl
    18d8:	0b 05 10 10 0d 00    	or     eax,DWORD PTR [rip+0xd1010]        # d28ee <stivale_hdr-0x12d712>
    18de:	00 a4 02 00 00 09 a1 	add    BYTE PTR [rdx+rax*1-0x5ef70000],ah
    18e5:	02 00                	add    al,BYTE PTR [rax]
    18e7:	00 0b                	add    BYTE PTR [rbx],cl
    18e9:	06                   	(bad)  
    18ea:	11 e6                	adc    esi,esp
    18ec:	00 00                	add    BYTE PTR [rax],al
    18ee:	00 00                	add    BYTE PTR [rax],al
    18f0:	09 39                	or     DWORD PTR [rcx],edi
    18f2:	0c 00                	or     al,0x0
    18f4:	00 0b                	add    BYTE PTR [rbx],cl
    18f6:	07                   	(bad)  
    18f7:	11 a4 02 00 00 08 00 	adc    DWORD PTR [rdx+rax*1+0x80000],esp
    18fe:	14 08                	adc    al,0x8
    1900:	08 02                	or     BYTE PTR [rdx],al
    1902:	00 00                	add    BYTE PTR [rax],al
    1904:	04 11                	add    al,0x11
    1906:	0d 00 00 0b 08       	or     eax,0x80b0000
    190b:	03 7c 02 00          	add    edi,DWORD PTR [rdx+rax*1+0x0]
    190f:	00 0f                	add    BYTE PTR [rdi],cl
    1911:	aa                   	stos   BYTE PTR es:[rdi],al
    1912:	02 00                	add    al,BYTE PTR [rax]
    1914:	00 15 b6 02 00 00    	add    BYTE PTR [rip+0x2b6],dl        # 1bd0 <stivale_hdr-0x1fe430>
    191a:	c6 02 00             	mov    BYTE PTR [rdx],0x0
    191d:	00 16                	add    BYTE PTR [rsi],dl
    191f:	00 15 06 01 00 00    	add    BYTE PTR [rip+0x106],dl        # 1a2b <stivale_hdr-0x1fe5d5>
    1925:	d6                   	(bad)  
    1926:	02 00                	add    al,BYTE PTR [rax]
    1928:	00 17                	add    BYTE PTR [rdi],dl
    192a:	34 00                	xor    al,0x0
    192c:	00 00                	add    BYTE PTR [rax],al
    192e:	ff 00                	inc    DWORD PTR [rax]
    1930:	18 1b                	sbb    BYTE PTR [rbx],bl
    1932:	0c 00                	or     al,0x0
    1934:	00 02                	add    BYTE PTR [rdx],al
    1936:	0f 1d c6             	nop    esi
    1939:	02 00                	add    al,BYTE PTR [rax]
    193b:	00 09                	add    BYTE PTR [rcx],cl
    193d:	03 a0 f0 20 00 00    	add    esp,DWORD PTR [rax+0x20f0]
    1943:	00 00                	add    BYTE PTR [rax],al
    1945:	00 18                	add    BYTE PTR [rax],bl
    1947:	4a 0c 00             	rex.WX or al,0x0
    194a:	00 02                	add    BYTE PTR [rdx],al
    194c:	10 16                	adc    BYTE PTR [rsi],dl
    194e:	97                   	xchg   edi,eax
    194f:	01 00                	add    DWORD PTR [rax],eax
    1951:	00 09                	add    BYTE PTR [rcx],cl
    1953:	03 a0 00 21 00 00    	add    esp,DWORD PTR [rax+0x2100]
    1959:	00 00                	add    BYTE PTR [rax],al
    195b:	00 19                	add    BYTE PTR [rcx],bl
    195d:	3e 0c 00             	ds or  al,0x0
    1960:	00 90 02 44 10 f8    	add    BYTE PTR [rax-0x7efbbfe],dl
    1966:	03 00                	add    eax,DWORD PTR [rax]
    1968:	00 1a                	add    BYTE PTR [rdx],bl
    196a:	63 72 34             	movsxd esi,DWORD PTR [rdx+0x34]
    196d:	00 02                	add    BYTE PTR [rdx],al
    196f:	46 08 87 00 00 00 00 	rex.RX or BYTE PTR [rdi+0x0],r8b
    1976:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    1979:	33 00                	xor    eax,DWORD PTR [rax]
    197b:	02 47 08             	add    al,BYTE PTR [rdi+0x8]
    197e:	87 00                	xchg   DWORD PTR [rax],eax
    1980:	00 00                	add    BYTE PTR [rax],al
    1982:	08 1a                	or     BYTE PTR [rdx],bl
    1984:	63 72 32             	movsxd esi,DWORD PTR [rdx+0x32]
    1987:	00 02                	add    BYTE PTR [rdx],al
    1989:	48 08 87 00 00 00 10 	rex.W or BYTE PTR [rdi+0x10000000],al
    1990:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    1993:	30 00                	xor    BYTE PTR [rax],al
    1995:	02 49 08             	add    cl,BYTE PTR [rcx+0x8]
    1998:	87 00                	xchg   DWORD PTR [rax],eax
    199a:	00 00                	add    BYTE PTR [rax],al
    199c:	18 1a                	sbb    BYTE PTR [rdx],bl
    199e:	64 73 00             	fs jae 19a1 <stivale_hdr-0x1fe65f>
    19a1:	02 4a 08             	add    cl,BYTE PTR [rdx+0x8]
    19a4:	87 00                	xchg   DWORD PTR [rax],eax
    19a6:	00 00                	add    BYTE PTR [rax],al
    19a8:	20 1a                	and    BYTE PTR [rdx],bl
    19aa:	72 64                	jb     1a10 <stivale_hdr-0x1fe5f0>
    19ac:	69 00 02 4b 08 87    	imul   eax,DWORD PTR [rax],0x87084b02
    19b2:	00 00                	add    BYTE PTR [rax],al
    19b4:	00 28                	add    BYTE PTR [rax],ch
    19b6:	1a 72 73             	sbb    dh,BYTE PTR [rdx+0x73]
    19b9:	69 00 02 4c 08 87    	imul   eax,DWORD PTR [rax],0x87084c02
    19bf:	00 00                	add    BYTE PTR [rax],al
    19c1:	00 30                	add    BYTE PTR [rax],dh
    19c3:	1a 72 62             	sbb    dh,BYTE PTR [rdx+0x62]
    19c6:	70 00                	jo     19c8 <stivale_hdr-0x1fe638>
    19c8:	02 4d 08             	add    cl,BYTE PTR [rbp+0x8]
    19cb:	87 00                	xchg   DWORD PTR [rax],eax
    19cd:	00 00                	add    BYTE PTR [rax],al
    19cf:	38 1a                	cmp    BYTE PTR [rdx],bl
    19d1:	72 62                	jb     1a35 <stivale_hdr-0x1fe5cb>
    19d3:	78 00                	js     19d5 <stivale_hdr-0x1fe62b>
    19d5:	02 4e 08             	add    cl,BYTE PTR [rsi+0x8]
    19d8:	87 00                	xchg   DWORD PTR [rax],eax
    19da:	00 00                	add    BYTE PTR [rax],al
    19dc:	40 1a 72 64          	sbb    sil,BYTE PTR [rdx+0x64]
    19e0:	78 00                	js     19e2 <stivale_hdr-0x1fe61e>
    19e2:	02 4f 08             	add    cl,BYTE PTR [rdi+0x8]
    19e5:	87 00                	xchg   DWORD PTR [rax],eax
    19e7:	00 00                	add    BYTE PTR [rax],al
    19e9:	48 1a 72 63          	rex.W sbb sil,BYTE PTR [rdx+0x63]
    19ed:	78 00                	js     19ef <stivale_hdr-0x1fe611>
    19ef:	02 50 08             	add    dl,BYTE PTR [rax+0x8]
    19f2:	87 00                	xchg   DWORD PTR [rax],eax
    19f4:	00 00                	add    BYTE PTR [rax],al
    19f6:	50                   	push   rax
    19f7:	1a 72 61             	sbb    dh,BYTE PTR [rdx+0x61]
    19fa:	78 00                	js     19fc <stivale_hdr-0x1fe604>
    19fc:	02 51 08             	add    dl,BYTE PTR [rcx+0x8]
    19ff:	87 00                	xchg   DWORD PTR [rax],eax
    1a01:	00 00                	add    BYTE PTR [rax],al
    1a03:	58                   	pop    rax
    1a04:	09 32                	or     DWORD PTR [rdx],esi
    1a06:	0d 00 00 02 52       	or     eax,0x52020000
    1a0b:	08 87 00 00 00 60    	or     BYTE PTR [rdi+0x60000000],al
    1a11:	09 e1                	or     ecx,esp
    1a13:	0b 00                	or     eax,DWORD PTR [rax]
    1a15:	00 02                	add    BYTE PTR [rdx],al
    1a17:	53                   	push   rbx
    1a18:	08 87 00 00 00 68    	or     BYTE PTR [rdi+0x68000000],al
    1a1e:	1a 72 69             	sbb    dh,BYTE PTR [rdx+0x69]
    1a21:	70 00                	jo     1a23 <stivale_hdr-0x1fe5dd>
    1a23:	02 54 08 87          	add    dl,BYTE PTR [rax+rcx*1-0x79]
    1a27:	00 00                	add    BYTE PTR [rax],al
    1a29:	00 70 1a             	add    BYTE PTR [rax+0x1a],dh
    1a2c:	63 73 00             	movsxd esi,DWORD PTR [rbx+0x0]
    1a2f:	02 55 08             	add    dl,BYTE PTR [rbp+0x8]
    1a32:	87 00                	xchg   DWORD PTR [rax],eax
    1a34:	00 00                	add    BYTE PTR [rax],al
    1a36:	78 09                	js     1a41 <stivale_hdr-0x1fe5bf>
    1a38:	32 0c 00             	xor    cl,BYTE PTR [rax+rax*1]
    1a3b:	00 02                	add    BYTE PTR [rdx],al
    1a3d:	56                   	push   rsi
    1a3e:	08 87 00 00 00 80    	or     BYTE PTR [rdi-0x80000000],al
    1a44:	1a 72 73             	sbb    dh,BYTE PTR [rdx+0x73]
    1a47:	70 00                	jo     1a49 <stivale_hdr-0x1fe5b7>
    1a49:	02 57 08             	add    dl,BYTE PTR [rdi+0x8]
    1a4c:	87 00                	xchg   DWORD PTR [rax],eax
    1a4e:	00 00                	add    BYTE PTR [rax],al
    1a50:	88 00                	mov    BYTE PTR [rax],al
    1a52:	04 40                	add    al,0x40
    1a54:	0c 00                	or     al,0x0
    1a56:	00 02                	add    BYTE PTR [rdx],al
    1a58:	58                   	pop    rax
    1a59:	03 02                	add    eax,DWORD PTR [rdx]
    1a5b:	03 00                	add    eax,DWORD PTR [rax]
    1a5d:	00 15 14 04 00 00    	add    BYTE PTR [rip+0x414],dl        # 1e77 <stivale_hdr-0x1fe189>
    1a63:	14 04                	adc    al,0x4
    1a65:	00 00                	add    BYTE PTR [rax],al
    1a67:	17                   	(bad)  
    1a68:	34 00                	xor    al,0x0
    1a6a:	00 00                	add    BYTE PTR [rax],al
    1a6c:	1f                   	(bad)  
    1a6d:	00 14 08             	add    BYTE PTR [rax+rcx*1],dl
    1a70:	0f 02 00             	lar    eax,WORD PTR [rax]
    1a73:	00 18                	add    BYTE PTR [rax],bl
    1a75:	55                   	push   rbp
    1a76:	0c 00                	or     al,0x0
    1a78:	00 02                	add    BYTE PTR [rdx],al
    1a7a:	5a                   	pop    rdx
    1a7b:	0d 04 04 00 00       	or     eax,0x404
    1a80:	09 03                	or     DWORD PTR [rbx],eax
    1a82:	00 d8                	add    al,bl
    1a84:	20 00                	and    BYTE PTR [rax],al
    1a86:	00 00                	add    BYTE PTR [rax],al
    1a88:	00 00                	add    BYTE PTR [rax],al
    1a8a:	1b 9f 0c 00 00 07    	sbb    ebx,DWORD PTR [rdi+0x700000c]
    1a90:	04 80                	add    al,0x80
    1a92:	00 00                	add    BYTE PTR [rax],al
    1a94:	00 02                	add    BYTE PTR [rdx],al
    1a96:	7d 06                	jge    1a9e <stivale_hdr-0x1fe562>
    1a98:	61                   	(bad)  
    1a99:	04 00                	add    al,0x0
    1a9b:	00 1c 89             	add    BYTE PTR [rcx+rcx*4],bl
    1a9e:	05 00 00 00 1c       	add    eax,0x1c000000
    1aa3:	69 07 00 00 01 1c    	imul   eax,DWORD PTR [rdi],0x1c010000
    1aa9:	8a 0c 00             	mov    cl,BYTE PTR [rax+rax*1]
    1aac:	00 02                	add    BYTE PTR [rdx],al
    1aae:	1c ec                	sbb    al,0xec
    1ab0:	0b 00                	or     eax,DWORD PTR [rax]
    1ab2:	00 03                	add    BYTE PTR [rbx],al
    1ab4:	1c 07                	sbb    al,0x7
    1ab6:	0c 00                	or     al,0x0
    1ab8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1abb:	18 7d 0c             	sbb    BYTE PTR [rbp+0xc],bh
    1abe:	00 00                	add    BYTE PTR [rax],al
    1ac0:	02 c5                	add    al,ch
    1ac2:	08 a6 00 00 00 09    	or     BYTE PTR [rsi+0x9000000],ah
    1ac8:	03 ac 00 21 00 00 00 	add    ebp,DWORD PTR [rax+rax*1+0x21]
    1acf:	00 00                	add    BYTE PTR [rax],al
    1ad1:	18 82 0c 00 00 02    	sbb    BYTE PTR [rdx+0x200000c],al
    1ad7:	c6                   	(bad)  
    1ad8:	08 b2 00 00 00 09    	or     BYTE PTR [rdx+0x9000000],dh
    1ade:	03 b0 00 21 00 00    	add    esi,DWORD PTR [rax+0x2100]
    1ae4:	00 00                	add    BYTE PTR [rax],al
    1ae6:	00 1d a3 01 00 00    	add    BYTE PTR [rip+0x1a3],bl        # 1c8f <stivale_hdr-0x1fe371>
    1aec:	04 1e                	add    al,0x1e
    1aee:	20 00                	and    BYTE PTR [rax],al
    1af0:	00 00                	add    BYTE PTR [rax],al
    1af2:	00 00                	add    BYTE PTR [rax],al
    1af4:	e3 05                	jrcxz  1afb <stivale_hdr-0x1fe505>
    1af6:	00 00                	add    BYTE PTR [rax],al
    1af8:	00 00                	add    BYTE PTR [rax],al
    1afa:	00 00                	add    BYTE PTR [rax],al
    1afc:	01 9c 1e f7 0c 00 00 	add    DWORD PTR [rsi+rbx*1+0xcf7],ebx
    1b03:	02 e2                	add    ah,dl
    1b05:	06                   	(bad)  
    1b06:	d2 1c 20             	rcr    BYTE PTR [rax+riz*1],cl
    1b09:	00 00                	add    BYTE PTR [rax],al
    1b0b:	00 00                	add    BYTE PTR [rax],al
    1b0d:	00 32                	add    BYTE PTR [rdx],dh
    1b0f:	01 00                	add    DWORD PTR [rax],eax
    1b11:	00 00                	add    BYTE PTR [rax],al
    1b13:	00 00                	add    BYTE PTR [rax],al
    1b15:	00 01                	add    BYTE PTR [rcx],al
    1b17:	9c                   	pushf  
    1b18:	ff 04 00             	inc    DWORD PTR [rax+rax*1]
    1b1b:	00 1f                	add    BYTE PTR [rdi],bl
    1b1d:	3c 0d                	cmp    al,0xd
    1b1f:	00 00                	add    BYTE PTR [rax],al
    1b21:	02 e2                	add    ah,dl
    1b23:	15 9a 00 00 00       	adc    eax,0x9a
    1b28:	02 91 6c 1f 1a 04    	add    dl,BYTE PTR [rcx+0x41a1f6c]
    1b2e:	00 00                	add    BYTE PTR [rax],al
    1b30:	02 e2                	add    ah,dl
    1b32:	25 e6 00 00 00       	and    eax,0xe6
    1b37:	02 91 60 1f a8 13    	add    dl,BYTE PTR [rcx+0x13a81f60]
    1b3d:	00 00                	add    BYTE PTR [rax],al
    1b3f:	02 e2                	add    ah,dl
    1b41:	30 61 00             	xor    BYTE PTR [rcx+0x0],ah
    1b44:	00 00                	add    BYTE PTR [rax],al
    1b46:	02 91 68 1f 33 0c    	add    dl,BYTE PTR [rcx+0xc331f68]
    1b4c:	00 00                	add    BYTE PTR [rax],al
    1b4e:	02 e2                	add    ah,dl
    1b50:	3f                   	(bad)  
    1b51:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    1b54:	00 02                	add    BYTE PTR [rdx],al
    1b56:	91                   	xchg   ecx,eax
    1b57:	5c                   	pop    rsp
    1b58:	00 20                	add    BYTE PTR [rax],ah
    1b5a:	c6                   	(bad)  
    1b5b:	36 00 00             	add    BYTE PTR ss:[rax],al
    1b5e:	02 ca                	add    cl,dl
    1b60:	06                   	(bad)  
    1b61:	0d 1c 20 00 00       	or     eax,0x201c
    1b66:	00 00                	add    BYTE PTR [rax],al
    1b68:	00 c5                	add    ch,al
    1b6a:	00 00                	add    BYTE PTR [rax],al
    1b6c:	00 00                	add    BYTE PTR [rax],al
    1b6e:	00 00                	add    BYTE PTR [rax],al
    1b70:	00 01                	add    BYTE PTR [rcx],al
    1b72:	9c                   	pushf  
    1b73:	2d 05 00 00 1f       	sub    eax,0x1f000005
    1b78:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    1b7b:	00 02                	add    BYTE PTR [rdx],al
    1b7d:	ca 1d 2d             	retf   0x2d1d
    1b80:	05 00 00 02 91       	add    eax,0x91020000
    1b85:	68 00 21 08 f8       	push   0xfffffffff8082100
    1b8a:	03 00                	add    eax,DWORD PTR [rax]
    1b8c:	00 20                	add    BYTE PTR [rax],ah
    1b8e:	55                   	push   rbp
    1b8f:	0d 00 00 02 c0       	or     eax,0xc0020000
    1b94:	06                   	(bad)  
    1b95:	f2 1b 20             	repnz sbb esp,DWORD PTR [rax]
    1b98:	00 00                	add    BYTE PTR [rax],al
    1b9a:	00 00                	add    BYTE PTR [rax],al
    1b9c:	00 1b                	add    BYTE PTR [rbx],bl
    1b9e:	00 00                	add    BYTE PTR [rax],al
    1ba0:	00 00                	add    BYTE PTR [rax],al
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	00 01                	add    BYTE PTR [rcx],al
    1ba6:	9c                   	pushf  
    1ba7:	61                   	(bad)  
    1ba8:	05 00 00 1f ff       	add    eax,0xff1f0000
    1bad:	0c 00                	or     al,0x0
    1baf:	00 02                	add    BYTE PTR [rdx],al
    1bb1:	c0 1d 2d 05 00 00 02 	rcr    BYTE PTR [rip+0x52d],0x2        # 20e5 <stivale_hdr-0x1fdf1b>
    1bb8:	91                   	xchg   ecx,eax
    1bb9:	68 00 20 43 0d       	push   0xd432000
    1bbe:	00 00                	add    BYTE PTR [rax],al
    1bc0:	02 94 06 da 19 20 00 	add    dl,BYTE PTR [rsi+rax*1+0x2019da]
    1bc7:	00 00                	add    BYTE PTR [rax],al
    1bc9:	00 00                	add    BYTE PTR [rax],al
    1bcb:	18 02                	sbb    BYTE PTR [rdx],al
    1bcd:	00 00                	add    BYTE PTR [rax],al
    1bcf:	00 00                	add    BYTE PTR [rax],al
    1bd1:	00 00                	add    BYTE PTR [rax],al
    1bd3:	01 9c ad 05 00 00 1f 	add    DWORD PTR [rbp+rbp*4+0x1f000005],ebx
    1bda:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    1bdd:	00 02                	add    BYTE PTR [rdx],al
    1bdf:	94                   	xchg   esp,eax
    1be0:	23 2d 05 00 00 02    	and    ebp,DWORD PTR [rip+0x2000005]        # 2001beb <__kernel_end+0x1defbeb>
    1be6:	91                   	xchg   ecx,eax
    1be7:	58                   	pop    rax
    1be8:	22 04 0d 00 00 02 a9 	and    al,BYTE PTR [rcx*1-0x56fe0000]
    1bef:	09 b2 00 00 00 02    	or     DWORD PTR [rdx+0x2000000],esi
    1bf5:	91                   	xchg   ecx,eax
    1bf6:	60                   	(bad)  
    1bf7:	23 72 62             	and    esi,DWORD PTR [rdx+0x62]
    1bfa:	70 00                	jo     1bfc <stivale_hdr-0x1fe404>
    1bfc:	02 b2 09 b2 00 00    	add    dh,BYTE PTR [rdx+0xb209]
    1c02:	00 02                	add    BYTE PTR [rdx],al
    1c04:	91                   	xchg   ecx,eax
    1c05:	68 00 24 e5 0c       	push   0xce52400
    1c0a:	00 00                	add    BYTE PTR [rax],al
    1c0c:	02 85 07 a4 02 00    	add    al,BYTE PTR [rbp+0x2a407]
    1c12:	00 35 19 20 00 00    	add    BYTE PTR [rip+0x2019],dh        # 3c31 <stivale_hdr-0x1fc3cf>
    1c18:	00 00                	add    BYTE PTR [rax],al
    1c1a:	00 a5 00 00 00 00    	add    BYTE PTR [rbp+0x0],ah
    1c20:	00 00                	add    BYTE PTR [rax],al
    1c22:	00 01                	add    BYTE PTR [rcx],al
    1c24:	9c                   	pushf  
    1c25:	fe 05 00 00 1f a1    	inc    BYTE PTR [rip+0xffffffffa11f0000]        # ffffffffa11f1c2b <__kernel_end+0xffffffffa0fdfc2b>
    1c2b:	02 00                	add    al,BYTE PTR [rax]
    1c2d:	00 02                	add    BYTE PTR [rdx],al
    1c2f:	85 20                	test   DWORD PTR [rax],esp
    1c31:	b2 00                	mov    dl,0x0
    1c33:	00 00                	add    BYTE PTR [rax],al
    1c35:	02 91 58 25 41 19    	add    dl,BYTE PTR [rcx+0x19412558]
    1c3b:	20 00                	and    BYTE PTR [rax],al
    1c3d:	00 00                	add    BYTE PTR [rax],al
    1c3f:	00 00                	add    BYTE PTR [rax],al
    1c41:	90                   	nop
    1c42:	00 00                	add    BYTE PTR [rax],al
    1c44:	00 00                	add    BYTE PTR [rax],al
    1c46:	00 00                	add    BYTE PTR [rax],al
    1c48:	00 23                	add    BYTE PTR [rbx],ah
    1c4a:	69 00 02 87 0b cc    	imul   eax,DWORD PTR [rax],0xcc0b8702
    1c50:	00 00                	add    BYTE PTR [rax],al
    1c52:	00 02                	add    BYTE PTR [rdx],al
    1c54:	91                   	xchg   ecx,eax
    1c55:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c56:	00 00                	add    BYTE PTR [rax],al
    1c58:	26 61                	es (bad) 
    1c5a:	02 00                	add    al,BYTE PTR [rax]
    1c5c:	00 14 19             	add    BYTE PTR [rcx+rbx*1],dl
    1c5f:	20 00                	and    BYTE PTR [rax],al
    1c61:	00 00                	add    BYTE PTR [rax],al
    1c63:	00 00                	add    BYTE PTR [rax],al
    1c65:	21 00                	and    DWORD PTR [rax],eax
    1c67:	00 00                	add    BYTE PTR [rax],al
    1c69:	00 00                	add    BYTE PTR [rax],al
    1c6b:	00 00                	add    BYTE PTR [rax],al
    1c6d:	01 9c 1f fb 33 00 00 	add    DWORD PTR [rdi+rbx*1+0x33fb],ebx
    1c74:	01 05 22 61 00 00    	add    DWORD PTR [rip+0x6122],eax        # 7d9c <stivale_hdr-0x1f8264>
    1c7a:	00 02                	add    BYTE PTR [rdx],al
    1c7c:	91                   	xchg   ecx,eax
    1c7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c7e:	27                   	(bad)  
    1c7f:	76 61                	jbe    1ce2 <stivale_hdr-0x1fe31e>
    1c81:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c82:	00 01                	add    BYTE PTR [rcx],al
    1c84:	05 2d 4e 00 00       	add    eax,0x4e2d
    1c89:	00 02                	add    BYTE PTR [rdx],al
    1c8b:	91                   	xchg   ecx,eax
    1c8c:	68 00 00 60 03       	push   0x3600000
    1c91:	00 00                	add    BYTE PTR [rax],al
    1c93:	04 00                	add    al,0x0
    1c95:	9d                   	popf   
    1c96:	09 00                	or     DWORD PTR [rax],eax
    1c98:	00 08                	add    BYTE PTR [rax],cl
    1c9a:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    1c9e:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
    1ca1:	0d 00 00 24 01       	or     eax,0x1240000
    1ca6:	00 00                	add    BYTE PTR [rax],al
    1ca8:	e8 23 20 00 00       	call   3cd0 <stivale_hdr-0x1fc330>
    1cad:	00 00                	add    BYTE PTR [rax],al
    1caf:	00 0c 03             	add    BYTE PTR [rbx+rax*1],cl
    1cb2:	00 00                	add    BYTE PTR [rax],al
    1cb4:	00 00                	add    BYTE PTR [rax],al
    1cb6:	00 00                	add    BYTE PTR [rax],al
    1cb8:	66 09 00             	or     WORD PTR [rax],ax
    1cbb:	00 02                	add    BYTE PTR [rdx],al
    1cbd:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 1e2d <stivale_hdr-0x1fe1d3>
    1cc3:	02 08                	add    cl,BYTE PTR [rax]
    1cc5:	07                   	(bad)  
    1cc6:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    1cc9:	00 02                	add    BYTE PTR [rdx],al
    1ccb:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 1e36 <stivale_hdr-0x1fe1ca>
    1cd1:	02 10                	add    dl,BYTE PTR [rax]
    1cd3:	04 8f                	add    al,0x8f
    1cd5:	01 00                	add    DWORD PTR [rax],eax
    1cd7:	00 03                	add    BYTE PTR [rbx],al
    1cd9:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    1cdc:	00 02                	add    BYTE PTR [rdx],al
    1cde:	01 08                	add    DWORD PTR [rax],ecx
    1ce0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ce1:	00 00                	add    BYTE PTR [rax],al
    1ce3:	00 02                	add    BYTE PTR [rdx],al
    1ce5:	02 07                	add    al,BYTE PTR [rdi]
    1ce7:	9b                   	fwait
    1ce8:	01 00                	add    DWORD PTR [rax],eax
    1cea:	00 02                	add    BYTE PTR [rdx],al
    1cec:	04 07                	add    al,0x7
    1cee:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    1cf1:	00 02                	add    BYTE PTR [rdx],al
    1cf3:	10 07                	adc    BYTE PTR [rdi],al
    1cf5:	00 00                	add    BYTE PTR [rax],al
    1cf7:	00 00                	add    BYTE PTR [rax],al
    1cf9:	04 25                	add    al,0x25
    1cfb:	00 00                	add    BYTE PTR [rax],al
    1cfd:	00 03                	add    BYTE PTR [rbx],al
    1cff:	0d 1d 34 00 00       	or     eax,0x341d
    1d04:	00 02                	add    BYTE PTR [rdx],al
    1d06:	01 06                	add    DWORD PTR [rsi],eax
    1d08:	70 00                	jo     1d0a <stivale_hdr-0x1fe2f6>
    1d0a:	00 00                	add    BYTE PTR [rax],al
    1d0c:	02 02                	add    al,BYTE PTR [rdx]
    1d0e:	05 73 01 00 00       	add    eax,0x173
    1d13:	05 04 05 69 6e       	add    eax,0x6e690504
    1d18:	74 00                	je     1d1a <stivale_hdr-0x1fe2e6>
    1d1a:	02 10                	add    dl,BYTE PTR [rax]
    1d1c:	05 1b 01 00 00       	add    eax,0x11b
    1d21:	06                   	(bad)  
    1d22:	73 79                	jae    1d9d <stivale_hdr-0x1fe263>
    1d24:	73 00                	jae    1d26 <stivale_hdr-0x1fe2da>
    1d26:	04 04                	add    al,0x4
    1d28:	0b a7 00 00 00 07    	or     esp,DWORD PTR [rdi+0x7000000]
    1d2e:	69 00 00 00 04 05    	imul   eax,DWORD PTR [rax],0x5040000
    1d34:	0f 00 02             	sldt   WORD PTR [rdx]
    1d37:	01 06                	add    DWORD PTR [rsi],eax
    1d39:	77 00                	ja     1d3b <stivale_hdr-0x1fe2c5>
    1d3b:	00 00                	add    BYTE PTR [rax],al
    1d3d:	08 2e                	or     BYTE PTR [rsi],ch
    1d3f:	32 00                	xor    al,BYTE PTR [rax]
    1d41:	00 02                	add    BYTE PTR [rdx],al
    1d43:	04 0b                	add    al,0xb
    1d45:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1d46:	01 00                	add    DWORD PTR [rax],eax
    1d48:	00 08                	add    BYTE PTR [rax],cl
    1d4a:	22 0e                	and    cl,BYTE PTR [rsi]
    1d4c:	00 00                	add    BYTE PTR [rax],al
    1d4e:	02 05 0c a3 01 00    	add    al,BYTE PTR [rip+0x1a30c]        # 1c060 <stivale_hdr-0x1e3fa0>
    1d54:	00 09                	add    BYTE PTR [rcx],cl
    1d56:	cf                   	iret   
    1d57:	0d 00 00 20 02       	or     eax,0x2200000
    1d5c:	06                   	(bad)  
    1d5d:	0a 5b 01             	or     bl,BYTE PTR [rbx+0x1]
    1d60:	00 00                	add    BYTE PTR [rax],al
    1d62:	0a 4f 0e             	or     cl,BYTE PTR [rdi+0xe]
    1d65:	00 00                	add    BYTE PTR [rax],al
    1d67:	02 07                	add    al,BYTE PTR [rdi]
    1d69:	0e                   	(bad)  
    1d6a:	6a 00                	push   0x0
    1d6c:	00 00                	add    BYTE PTR [rax],al
    1d6e:	00 0a                	add    BYTE PTR [rdx],cl
    1d70:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    1d74:	02 08                	add    cl,BYTE PTR [rax]
    1d76:	1c ac                	sbb    al,0xac
    1d78:	01 00                	add    DWORD PTR [rax],eax
    1d7a:	00 08                	add    BYTE PTR [rax],cl
    1d7c:	0a ac 0e 00 00 02 09 	or     ch,BYTE PTR [rsi+rcx*1+0x9020000]
    1d83:	1c ac                	sbb    al,0xac
    1d85:	01 00                	add    DWORD PTR [rax],eax
    1d87:	00 10                	add    BYTE PTR [rax],dl
    1d89:	0a 45 0e             	or     al,BYTE PTR [rbp+0xe]
    1d8c:	00 00                	add    BYTE PTR [rax],al
    1d8e:	02 0a                	add    cl,BYTE PTR [rdx]
    1d90:	0c b7                	or     al,0xb7
    1d92:	01 00                	add    DWORD PTR [rax],eax
    1d94:	00 18                	add    BYTE PTR [rax],bl
    1d96:	0b ae 0d 00 00 02    	or     ebp,DWORD PTR [rsi+0x200000d]
    1d9c:	0b 0c fd 0e 00 00 1b 	or     ecx,DWORD PTR [rdi*8+0x1b00000e]
    1da3:	01 00                	add    DWORD PTR [rax],eax
    1da5:	00 21                	add    BYTE PTR [rcx],ah
    1da7:	01 00                	add    DWORD PTR [rax],eax
    1da9:	00 0c ac             	add    BYTE PTR [rsp+rbp*4],cl
    1dac:	01 00                	add    DWORD PTR [rax],eax
    1dae:	00 00                	add    BYTE PTR [rax],al
    1db0:	0b be 0d 00 00 02    	or     edi,DWORD PTR [rsi+0x200000d]
    1db6:	0c 0c                	or     al,0xc
    1db8:	61                   	(bad)  
    1db9:	0d 00 00 35 01       	or     eax,0x1350000
    1dbe:	00 00                	add    BYTE PTR [rax],al
    1dc0:	3b 01                	cmp    eax,DWORD PTR [rcx]
    1dc2:	00 00                	add    BYTE PTR [rax],al
    1dc4:	0c ac                	or     al,0xac
    1dc6:	01 00                	add    DWORD PTR [rax],eax
    1dc8:	00 00                	add    BYTE PTR [rax],al
    1dca:	0d f7 0e 00 00       	or     eax,0xef7
    1dcf:	02 0d 1c 7f 0e 00    	add    cl,BYTE PTR [rip+0xe7f1c]        # e9cf1 <stivale_hdr-0x11630f>
    1dd5:	00 ac 01 00 00 4f 01 	add    BYTE PTR [rcx+rax*1+0x14f0000],ch
    1ddc:	00 00                	add    BYTE PTR [rax],al
    1dde:	0c ac                	or     al,0xac
    1de0:	01 00                	add    DWORD PTR [rax],eax
    1de2:	00 0e                	add    BYTE PTR [rsi],cl
    1de4:	6a 00                	push   0x0
    1de6:	00 00                	add    BYTE PTR [rax],al
    1de8:	00 00                	add    BYTE PTR [rax],al
    1dea:	0f 45 0e             	cmovne ecx,DWORD PTR [rsi]
    1ded:	00 00                	add    BYTE PTR [rax],al
    1def:	01 29                	add    DWORD PTR [rcx],ebp
    1df1:	06                   	(bad)  
    1df2:	ee                   	out    dx,al
    1df3:	0d 00 00 71 01       	or     eax,0x1710000
    1df8:	00 00                	add    BYTE PTR [rax],al
    1dfa:	0e                   	(bad)  
    1dfb:	d4                   	(bad)  
    1dfc:	01 00                	add    DWORD PTR [rax],eax
    1dfe:	00 00                	add    BYTE PTR [rax],al
    1e00:	10 6f 0e             	adc    BYTE PTR [rdi+0xe],ch
    1e03:	00 00                	add    BYTE PTR [rax],al
    1e05:	01 11                	add    DWORD PTR [rcx],edx
    1e07:	07                   	(bad)  
    1e08:	56                   	push   rsi
    1e09:	0e                   	(bad)  
    1e0a:	00 00                	add    BYTE PTR [rax],al
    1e0c:	d4                   	(bad)  
    1e0d:	01 00                	add    DWORD PTR [rax],eax
    1e0f:	00 8b 01 00 00 0e    	add    BYTE PTR [rbx+0xe000001],cl
    1e15:	6a 00                	push   0x0
    1e17:	00 00                	add    BYTE PTR [rax],al
    1e19:	00 11                	add    BYTE PTR [rcx],dl
    1e1b:	17                   	(bad)  
    1e1c:	0e                   	(bad)  
    1e1d:	00 00                	add    BYTE PTR [rax],al
    1e1f:	01 07                	add    DWORD PTR [rdi],eax
    1e21:	06                   	(bad)  
    1e22:	b1 0e                	mov    cl,0xe
    1e24:	00 00                	add    BYTE PTR [rax],al
    1e26:	0e                   	(bad)  
    1e27:	d4                   	(bad)  
    1e28:	01 00                	add    DWORD PTR [rax],eax
    1e2a:	00 0e                	add    BYTE PTR [rsi],cl
    1e2c:	6a 00                	push   0x0
    1e2e:	00 00                	add    BYTE PTR [rax],al
    1e30:	00 00                	add    BYTE PTR [rax],al
    1e32:	12 70 6d             	adc    dh,BYTE PTR [rax+0x6d]
    1e35:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e36:	00 05 05 0c 00 13    	add    BYTE PTR [rip+0x13000c05],al        # 13002a41 <__kernel_end+0x12df0a41>
    1e3c:	08 c6                	or     dh,al
    1e3e:	00 00                	add    BYTE PTR [rax],al
    1e40:	00 14 ac             	add    BYTE PTR [rsp+rbp*4],dl
    1e43:	01 00                	add    DWORD PTR [rax],eax
    1e45:	00 02                	add    BYTE PTR [rdx],al
    1e47:	01 02                	add    DWORD PTR [rdx],eax
    1e49:	61                   	(bad)  
    1e4a:	02 00                	add    al,BYTE PTR [rax]
    1e4c:	00 15 e3 0d 00 00    	add    BYTE PTR [rip+0xde3],dl        # 2c35 <stivale_hdr-0x1fd3cb>
    1e52:	01 04 07             	add    DWORD PTR [rdi+rax*1],eax
    1e55:	d4                   	(bad)  
    1e56:	01 00                	add    DWORD PTR [rax],eax
    1e58:	00 09                	add    BYTE PTR [rcx],cl
    1e5a:	03 b8 00 21 00 00    	add    edi,DWORD PTR [rax+0x2100]
    1e60:	00 00                	add    BYTE PTR [rax],al
    1e62:	00 16                	add    BYTE PTR [rsi],dl
    1e64:	08 15 76 0e 00 00    	or     BYTE PTR [rip+0xe76],dl        # 2ce0 <stivale_hdr-0x1fd320>
    1e6a:	01 05 07 d4 01 00    	add    DWORD PTR [rip+0x1d407],eax        # 1f277 <stivale_hdr-0x1e0d89>
    1e70:	00 09                	add    BYTE PTR [rcx],cl
    1e72:	03 c0                	add    eax,eax
    1e74:	00 21                	add    BYTE PTR [rcx],ah
    1e76:	00 00                	add    BYTE PTR [rax],al
    1e78:	00 00                	add    BYTE PTR [rax],al
    1e7a:	00 17                	add    BYTE PTR [rdi],dl
    1e7c:	21 01                	and    DWORD PTR [rcx],eax
    1e7e:	00 00                	add    BYTE PTR [rax],al
    1e80:	01 4b 06             	add    DWORD PTR [rbx+0x6],ecx
    1e83:	0e                   	(bad)  
    1e84:	02 00                	add    al,BYTE PTR [rax]
    1e86:	00 c8                	add    al,cl
    1e88:	26 20 00             	and    BYTE PTR es:[rax],al
    1e8b:	00 00                	add    BYTE PTR [rax],al
    1e8d:	00 00                	add    BYTE PTR [rax],al
    1e8f:	2c 00                	sub    al,0x0
    1e91:	00 00                	add    BYTE PTR [rax],al
    1e93:	00 00                	add    BYTE PTR [rax],al
    1e95:	00 00                	add    BYTE PTR [rax],al
    1e97:	01 9c 1b 02 00 00 18 	add    DWORD PTR [rbx+rbx*1+0x18000002],ebx
    1e9e:	d6                   	(bad)  
    1e9f:	0e                   	(bad)  
    1ea0:	00 00                	add    BYTE PTR [rax],al
    1ea2:	b2 01                	mov    dl,0x1
    1ea4:	00 00                	add    BYTE PTR [rax],al
    1ea6:	02 91 68 00 19 07    	add    dl,BYTE PTR [rcx+0x7190068]
    1eac:	01 00                	add    DWORD PTR [rax],eax
    1eae:	00 01                	add    BYTE PTR [rcx],al
    1eb0:	3f                   	(bad)  
    1eb1:	06                   	(bad)  
    1eb2:	3d 02 00 00 3a       	cmp    eax,0x3a000002
    1eb7:	26 20 00             	and    BYTE PTR es:[rax],al
    1eba:	00 00                	add    BYTE PTR [rax],al
    1ebc:	00 00                	add    BYTE PTR [rax],al
    1ebe:	8d 00                	lea    eax,[rax]
    1ec0:	00 00                	add    BYTE PTR [rax],al
    1ec2:	00 00                	add    BYTE PTR [rax],al
    1ec4:	00 00                	add    BYTE PTR [rax],al
    1ec6:	01 9c 4a 02 00 00 18 	add    DWORD PTR [rdx+rcx*2+0x18000002],ebx
    1ecd:	d6                   	(bad)  
    1ece:	0e                   	(bad)  
    1ecf:	00 00                	add    BYTE PTR [rax],al
    1ed1:	b2 01                	mov    dl,0x1
    1ed3:	00 00                	add    BYTE PTR [rax],al
    1ed5:	02 91 68 00 19 3b    	add    dl,BYTE PTR [rcx+0x3b190068]
    1edb:	01 00                	add    DWORD PTR [rax],eax
    1edd:	00 01                	add    BYTE PTR [rcx],al
    1edf:	30 24 6c             	xor    BYTE PTR [rsp+rbp*2],ah
    1ee2:	02 00                	add    al,BYTE PTR [rax]
    1ee4:	00 82 25 20 00 00    	add    BYTE PTR [rdx+0x2025],al
    1eea:	00 00                	add    BYTE PTR [rax],al
    1eec:	00 b8 00 00 00 00    	add    BYTE PTR [rax+0x0],bh
    1ef2:	00 00                	add    BYTE PTR [rax],al
    1ef4:	00 01                	add    BYTE PTR [rcx],al
    1ef6:	9c                   	pushf  
    1ef7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1ef8:	02 00                	add    al,BYTE PTR [rax]
    1efa:	00 18                	add    BYTE PTR [rax],bl
    1efc:	d6                   	(bad)  
    1efd:	0e                   	(bad)  
    1efe:	00 00                	add    BYTE PTR [rax],al
    1f00:	b2 01                	mov    dl,0x1
    1f02:	00 00                	add    BYTE PTR [rax],al
    1f04:	02 91 58 1a 35 0f    	add    dl,BYTE PTR [rcx+0xf351a58]
    1f0a:	00 00                	add    BYTE PTR [rax],al
    1f0c:	01 30                	add    DWORD PTR [rax],esi
    1f0e:	54                   	push   rsp
    1f0f:	6a 00                	push   0x0
    1f11:	00 00                	add    BYTE PTR [rax],al
    1f13:	02 91 50 1b e8 0e    	add    dl,BYTE PTR [rcx+0xee81b50]
    1f19:	00 00                	add    BYTE PTR [rax],al
    1f1b:	01 32                	add    DWORD PTR [rdx],esi
    1f1d:	0c 6a                	or     al,0x6a
    1f1f:	00 00                	add    BYTE PTR [rax],al
    1f21:	00 02                	add    BYTE PTR [rdx],al
    1f23:	91                   	xchg   ecx,eax
    1f24:	68 1b 06 0e 00       	push   0xe061b
    1f29:	00 01                	add    BYTE PTR [rcx],al
    1f2b:	34 1a                	xor    al,0x1a
    1f2d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1f2e:	01 00                	add    DWORD PTR [rax],eax
    1f30:	00 02                	add    BYTE PTR [rdx],al
    1f32:	91                   	xchg   ecx,eax
    1f33:	60                   	(bad)  
    1f34:	00 1c 5b             	add    BYTE PTR [rbx+rbx*2],bl
    1f37:	01 00                	add    DWORD PTR [rax],eax
    1f39:	00 10                	add    BYTE PTR [rax],dl
    1f3b:	25 20 00 00 00       	and    eax,0x20
    1f40:	00 00                	add    BYTE PTR [rax],al
    1f42:	71 00                	jno    1f44 <stivale_hdr-0x1fe0bc>
    1f44:	00 00                	add    BYTE PTR [rax],al
    1f46:	00 00                	add    BYTE PTR [rax],al
    1f48:	00 00                	add    BYTE PTR [rax],al
    1f4a:	01 9c e0 02 00 00 1a 	add    DWORD PTR [rax+riz*8+0x1a000002],ebx
    1f51:	a1 02 00 00 01 29 1f 	movabs eax,ds:0x1d41f2901000002
    1f58:	d4 01 
    1f5a:	00 00                	add    BYTE PTR [rax],al
    1f5c:	02 91 58 1b 35 0e    	add    dl,BYTE PTR [rcx+0xe351b58]
    1f62:	00 00                	add    BYTE PTR [rax],al
    1f64:	01 2a                	add    DWORD PTR [rdx],ebp
    1f66:	1a ac 01 00 00 02 91 	sbb    ch,BYTE PTR [rcx+rax*1-0x6efe0000]
    1f6d:	68 00 1d 71 01       	push   0x1711d00
    1f72:	00 00                	add    BYTE PTR [rax],al
    1f74:	d4                   	(bad)  
    1f75:	01 00                	add    DWORD PTR [rax],eax
    1f77:	00 55 24             	add    BYTE PTR [rbp+0x24],dl
    1f7a:	20 00                	and    BYTE PTR [rax],al
    1f7c:	00 00                	add    BYTE PTR [rax],al
    1f7e:	00 00                	add    BYTE PTR [rax],al
    1f80:	bb 00 00 00 00       	mov    ebx,0x0
    1f85:	00 00                	add    BYTE PTR [rax],al
    1f87:	00 01                	add    BYTE PTR [rcx],al
    1f89:	9c                   	pushf  
    1f8a:	1e                   	(bad)  
    1f8b:	03 00                	add    eax,DWORD PTR [rax]
    1f8d:	00 1a                	add    BYTE PTR [rdx],bl
    1f8f:	97                   	xchg   edi,eax
    1f90:	06                   	(bad)  
    1f91:	00 00                	add    BYTE PTR [rax],al
    1f93:	01 11                	add    DWORD PTR [rcx],edx
    1f95:	23 6a 00             	and    ebp,DWORD PTR [rdx+0x0]
    1f98:	00 00                	add    BYTE PTR [rax],al
    1f9a:	02 91 58 1b 35 0e    	add    dl,BYTE PTR [rcx+0xe351b58]
    1fa0:	00 00                	add    BYTE PTR [rax],al
    1fa2:	01 15 1a ac 01 00    	add    DWORD PTR [rip+0x1ac1a],edx        # 1cbc2 <stivale_hdr-0x1e343e>
    1fa8:	00 02                	add    BYTE PTR [rdx],al
    1faa:	91                   	xchg   ecx,eax
    1fab:	68 00 1e 8b 01       	push   0x18b1e00
    1fb0:	00 00                	add    BYTE PTR [rax],al
    1fb2:	e8 23 20 00 00       	call   3fda <stivale_hdr-0x1fc026>
    1fb7:	00 00                	add    BYTE PTR [rax],al
    1fb9:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    1fbc:	00 00                	add    BYTE PTR [rax],al
    1fbe:	00 00                	add    BYTE PTR [rax],al
    1fc0:	00 00                	add    BYTE PTR [rax],al
    1fc2:	01 9c 1a db 0e 00 00 	add    DWORD PTR [rdx+rbx*1+0xedb],ebx
    1fc9:	01 07                	add    DWORD PTR [rdi],eax
    1fcb:	2a d4                	sub    dl,ah
    1fcd:	01 00                	add    DWORD PTR [rax],eax
    1fcf:	00 02                	add    BYTE PTR [rdx],al
    1fd1:	91                   	xchg   ecx,eax
    1fd2:	58                   	pop    rax
    1fd3:	1a 4a 0e             	sbb    cl,BYTE PTR [rdx+0xe]
    1fd6:	00 00                	add    BYTE PTR [rax],al
    1fd8:	01 07                	add    DWORD PTR [rdi],eax
    1fda:	3f                   	(bad)  
    1fdb:	6a 00                	push   0x0
    1fdd:	00 00                	add    BYTE PTR [rax],al
    1fdf:	02 91 50 1b 27 0e    	add    dl,BYTE PTR [rcx+0xe271b50]
    1fe5:	00 00                	add    BYTE PTR [rax],al
    1fe7:	01 0a                	add    DWORD PTR [rdx],ecx
    1fe9:	1a ac 01 00 00 02 91 	sbb    ch,BYTE PTR [rcx+rax*1-0x6efe0000]
    1ff0:	68 00 00 4a 09       	push   0x94a0000
    1ff5:	00 00                	add    BYTE PTR [rax],al
    1ff7:	04 00                	add    al,0x0
    1ff9:	77 0b                	ja     2006 <stivale_hdr-0x1fdffa>
    1ffb:	00 00                	add    BYTE PTR [rax],al
    1ffd:	08 01                	or     BYTE PTR [rcx],al
    1fff:	7c 00                	jl     2001 <stivale_hdr-0x1fdfff>
    2001:	00 00                	add    BYTE PTR [rax],al
    2003:	04 9c                	add    al,0x9c
    2005:	11 00                	adc    DWORD PTR [rax],eax
    2007:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    200a:	00 00                	add    BYTE PTR [rax],al
    200c:	f4                   	hlt    
    200d:	26 20 00             	and    BYTE PTR es:[rax],al
    2010:	00 00                	add    BYTE PTR [rax],al
    2012:	00 00                	add    BYTE PTR [rax],al
    2014:	55                   	push   rbp
    2015:	08 00                	or     BYTE PTR [rax],al
    2017:	00 00                	add    BYTE PTR [rax],al
    2019:	00 00                	add    BYTE PTR [rax],al
    201b:	00 60 0b             	add    BYTE PTR [rax+0xb],ah
    201e:	00 00                	add    BYTE PTR [rax],al
    2020:	02 08                	add    cl,BYTE PTR [rax]
    2022:	05 6a 01 00 00       	add    eax,0x16a
    2027:	02 08                	add    cl,BYTE PTR [rax]
    2029:	07                   	(bad)  
    202a:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    202d:	00 02                	add    BYTE PTR [rdx],al
    202f:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 219a <stivale_hdr-0x1fde66>
    2035:	02 10                	add    dl,BYTE PTR [rax]
    2037:	04 8f                	add    al,0x8f
    2039:	01 00                	add    DWORD PTR [rax],eax
    203b:	00 03                	add    BYTE PTR [rbx],al
    203d:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    2040:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    2043:	23 00                	and    eax,DWORD PTR [rax]
    2045:	00 02                	add    BYTE PTR [rdx],al
    2047:	04 1d                	add    al,0x1d
    2049:	5a                   	pop    rdx
    204a:	00 00                	add    BYTE PTR [rax],al
    204c:	00 02                	add    BYTE PTR [rdx],al
    204e:	01 08                	add    DWORD PTR [rax],ecx
    2050:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2051:	00 00                	add    BYTE PTR [rax],al
    2053:	00 02                	add    BYTE PTR [rdx],al
    2055:	02 07                	add    al,BYTE PTR [rdi]
    2057:	9b                   	fwait
    2058:	01 00                	add    DWORD PTR [rax],eax
    205a:	00 02                	add    BYTE PTR [rdx],al
    205c:	04 07                	add    al,0x7
    205e:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    2061:	00 02                	add    BYTE PTR [rdx],al
    2063:	10 07                	adc    BYTE PTR [rdi],al
    2065:	00 00                	add    BYTE PTR [rax],al
    2067:	00 00                	add    BYTE PTR [rax],al
    2069:	04 4c                	add    al,0x4c
    206b:	01 00                	add    DWORD PTR [rax],eax
    206d:	00 02                	add    BYTE PTR [rdx],al
    206f:	0b 1d 61 00 00 00    	or     ebx,DWORD PTR [rip+0x61]        # 20d6 <stivale_hdr-0x1fdf2a>
    2075:	04 e5                	add    al,0xe5
    2077:	02 00                	add    al,BYTE PTR [rax]
    2079:	00 02                	add    BYTE PTR [rdx],al
    207b:	0c 1d                	or     al,0x1d
    207d:	68 00 00 00 04       	push   0x4000000
    2082:	25 00 00 00 02       	and    eax,0x2000000
    2087:	0d 1d 34 00 00       	or     eax,0x341d
    208c:	00 02                	add    BYTE PTR [rdx],al
    208e:	01 06                	add    DWORD PTR [rsi],eax
    2090:	70 00                	jo     2092 <stivale_hdr-0x1fdf6e>
    2092:	00 00                	add    BYTE PTR [rax],al
    2094:	02 02                	add    al,BYTE PTR [rdx]
    2096:	05 73 01 00 00       	add    eax,0x173
    209b:	05 04 05 69 6e       	add    eax,0x6e690504
    20a0:	74 00                	je     20a2 <stivale_hdr-0x1fdf5e>
    20a2:	02 10                	add    dl,BYTE PTR [rax]
    20a4:	05 1b 01 00 00       	add    eax,0x11b
    20a9:	04 3b                	add    al,0x3b
    20ab:	02 00                	add    al,BYTE PTR [rax]
    20ad:	00 02                	add    BYTE PTR [rdx],al
    20af:	17                   	(bad)  
    20b0:	1d 8e 00 00 00       	sbb    eax,0x8e
    20b5:	04 8f                	add    al,0x8f
    20b7:	22 00                	and    al,BYTE PTR [rax]
    20b9:	00 02                	add    BYTE PTR [rdx],al
    20bb:	19 1d 8e 00 00 00    	sbb    DWORD PTR [rip+0x8e],ebx        # 214f <stivale_hdr-0x1fdeb1>
    20c1:	06                   	(bad)  
    20c2:	73 79                	jae    213d <stivale_hdr-0x1fdec3>
    20c4:	73 00                	jae    20c6 <stivale_hdr-0x1fdf3a>
    20c6:	04 04                	add    al,0x4
    20c8:	0b 08                	or     ecx,DWORD PTR [rax]
    20ca:	01 00                	add    DWORD PTR [rax],eax
    20cc:	00 07                	add    BYTE PTR [rdi],al
    20ce:	69 00 00 00 04 05    	imul   eax,DWORD PTR [rax],0x5040000
    20d4:	0f 08                	invd   
    20d6:	48 02 00             	rex.W add al,BYTE PTR [rax]
    20d9:	00 06                	add    BYTE PTR [rsi],al
    20db:	09 0f                	or     DWORD PTR [rdi],ecx
    20dd:	09 1f                	or     DWORD PTR [rdi],ebx
    20df:	04 00                	add    al,0x0
    20e1:	00 06                	add    BYTE PTR [rsi],al
    20e3:	0a 1b                	or     bl,BYTE PTR [rbx]
    20e5:	8e 00                	mov    es,WORD PTR [rax]
    20e7:	00 00                	add    BYTE PTR [rax],al
    20e9:	0a 1e                	or     bl,BYTE PTR [rsi]
    20eb:	06                   	(bad)  
    20ec:	00 00                	add    BYTE PTR [rax],al
    20ee:	06                   	(bad)  
    20ef:	0e                   	(bad)  
    20f0:	17                   	(bad)  
    20f1:	31 07                	xor    DWORD PTR [rdi],eax
    20f3:	00 00                	add    BYTE PTR [rax],al
    20f5:	8e 00                	mov    es,WORD PTR [rax]
    20f7:	00 00                	add    BYTE PTR [rax],al
    20f9:	00 00                	add    BYTE PTR [rax],al
    20fb:	02 01                	add    al,BYTE PTR [rcx]
    20fd:	06                   	(bad)  
    20fe:	77 00                	ja     2100 <stivale_hdr-0x1fdf00>
    2100:	00 00                	add    BYTE PTR [rax],al
    2102:	0b 08                	or     ecx,DWORD PTR [rax]
    2104:	01 00                	add    DWORD PTR [rax],eax
    2106:	00 0c 79             	add    BYTE PTR [rcx+rdi*2],cl
    2109:	10 00                	adc    BYTE PTR [rax],al
    210b:	00 18                	add    BYTE PTR [rax],bl
    210d:	03 26                	add    esp,DWORD PTR [rsi]
    210f:	08 56 01             	or     BYTE PTR [rsi+0x1],dl
    2112:	00 00                	add    BYTE PTR [rax],al
    2114:	0d 1a 04 00 00       	or     eax,0x41a
    2119:	03 27                	add    esp,DWORD PTR [rdi]
    211b:	0d c2 00 00 00       	or     eax,0xc2
    2120:	00 0d 4f 0e 00 00    	add    BYTE PTR [rip+0xe4f],cl        # 2f75 <stivale_hdr-0x1fd08b>
    2126:	03 28                	add    ebp,DWORD PTR [rax]
    2128:	0c 8e                	or     al,0x8e
    212a:	00 00                	add    BYTE PTR [rax],al
    212c:	00 08                	add    BYTE PTR [rax],cl
    212e:	0d 4f 23 00 00       	or     eax,0x234f
    2133:	03 29                	add    ebp,DWORD PTR [rcx]
    2135:	0c 82                	or     al,0x82
    2137:	00 00                	add    BYTE PTR [rax],al
    2139:	00 10                	add    BYTE PTR [rax],dl
    213b:	0d 33 11 00 00       	or     eax,0x1133
    2140:	03 2a                	add    ebp,DWORD PTR [rdx]
    2142:	0c 82                	or     al,0x82
    2144:	00 00                	add    BYTE PTR [rax],al
    2146:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    2149:	0c d4                	or     al,0xd4
    214b:	07                   	(bad)  
    214c:	00 00                	add    BYTE PTR [rax],al
    214e:	10 03                	adc    BYTE PTR [rbx],al
    2150:	35 08 7e 01 00       	xor    eax,0x17e08
    2155:	00 0d 96 02 00 00    	add    BYTE PTR [rip+0x296],cl        # 23f1 <stivale_hdr-0x1fdc0f>
    215b:	03 36                	add    esi,DWORD PTR [rsi]
    215d:	0d c2 00 00 00       	or     eax,0xc2
    2162:	00 0d 79 02 00 00    	add    BYTE PTR [rip+0x279],cl        # 23e1 <stivale_hdr-0x1fdc1f>
    2168:	03 37                	add    esi,DWORD PTR [rdi]
    216a:	0d 8e 00 00 00       	or     eax,0x8e
    216f:	08 00                	or     BYTE PTR [rax],al
    2171:	0e                   	(bad)  
    2172:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    2175:	00 05 04 0b 94 02    	add    BYTE PTR [rip+0x2940b04],al        # 2942c7f <__kernel_end+0x2730c7f>
    217b:	00 00                	add    BYTE PTR [rax],al
    217d:	06                   	(bad)  
    217e:	70 6d                	jo     21ed <stivale_hdr-0x1fde13>
    2180:	6d                   	ins    DWORD PTR es:[rdi],dx
    2181:	00 05 05 0c 8b 02    	add    BYTE PTR [rip+0x28b0c05],al        # 28b2d8c <__kernel_end+0x26a0d8c>
    2187:	00 00                	add    BYTE PTR [rax],al
    2189:	0a 47 0f             	or     al,BYTE PTR [rdi+0xf]
    218c:	00 00                	add    BYTE PTR [rax],al
    218e:	05 06 0f a1 10       	add    eax,0x10a10f06
    2193:	00 00                	add    BYTE PTR [rax],al
    2195:	b6 00                	mov    dh,0x0
    2197:	00 00                	add    BYTE PTR [rax],al
    2199:	0a 0c 11             	or     cl,BYTE PTR [rcx+rdx*1]
    219c:	00 00                	add    BYTE PTR [rax],al
    219e:	05 07 0f 74 12       	add    eax,0x12740f07
    21a3:	00 00                	add    BYTE PTR [rax],al
    21a5:	b6 00                	mov    dh,0x0
    21a7:	00 00                	add    BYTE PTR [rax],al
    21a9:	0a 7f 11             	or     bh,BYTE PTR [rdi+0x11]
    21ac:	00 00                	add    BYTE PTR [rax],al
    21ae:	05 08 0f 3a 11       	add    eax,0x113a0f08
    21b3:	00 00                	add    BYTE PTR [rax],al
    21b5:	b6 00                	mov    dh,0x0
    21b7:	00 00                	add    BYTE PTR [rax],al
    21b9:	0a c3                	or     al,bl
    21bb:	10 00                	adc    BYTE PTR [rax],al
    21bd:	00 05 09 0f 1f 12    	add    BYTE PTR [rip+0x121f0f09],al        # 121f30cc <__kernel_end+0x11fe10cc>
    21c3:	00 00                	add    BYTE PTR [rax],al
    21c5:	b6 00                	mov    dh,0x0
    21c7:	00 00                	add    BYTE PTR [rax],al
    21c9:	0f 70 11 00          	pshufw mm2,QWORD PTR [rcx],0x0
    21cd:	00 01                	add    BYTE PTR [rcx],al
    21cf:	d5                   	(bad)  
    21d0:	11 ed                	adc    ebp,ebp
    21d2:	01 00                	add    DWORD PTR [rax],eax
    21d4:	00 10                	add    BYTE PTR [rax],dl
    21d6:	b7 03                	mov    bh,0x3
    21d8:	00 00                	add    BYTE PTR [rax],al
    21da:	10 8e 00 00 00 00    	adc    BYTE PTR [rsi+0x0],cl
    21e0:	0f b8                	(bad)  
    21e2:	0f 00 00             	sldt   WORD PTR [rax]
    21e5:	01 cd                	add    ebp,ecx
    21e7:	11 ff                	adc    edi,edi
    21e9:	01 00                	add    DWORD PTR [rax],eax
    21eb:	00 10                	add    BYTE PTR [rax],dl
    21ed:	b7 03                	mov    bh,0x3
    21ef:	00 00                	add    BYTE PTR [rax],al
    21f1:	00 0f                	add    BYTE PTR [rdi],cl
    21f3:	91                   	xchg   ecx,eax
    21f4:	11 00                	adc    DWORD PTR [rax],eax
    21f6:	00 01                	add    BYTE PTR [rcx],al
    21f8:	c7                   	(bad)  
    21f9:	11 16                	adc    DWORD PTR [rsi],edx
    21fb:	02 00                	add    al,BYTE PTR [rax]
    21fd:	00 10                	add    BYTE PTR [rax],dl
    21ff:	b7 03                	mov    bh,0x3
    2201:	00 00                	add    BYTE PTR [rax],al
    2203:	10 8e 00 00 00 00    	adc    BYTE PTR [rsi+0x0],cl
    2209:	0f 43 10             	cmovae edx,DWORD PTR [rax]
    220c:	00 00                	add    BYTE PTR [rax],al
    220e:	01 be 11 28 02 00    	add    DWORD PTR [rsi+0x22811],edi
    2214:	00 10                	add    BYTE PTR [rax],dl
    2216:	b7 03                	mov    bh,0x3
    2218:	00 00                	add    BYTE PTR [rax],al
    221a:	00 11                	add    BYTE PTR [rcx],dl
    221c:	6b 10 00             	imul   edx,DWORD PTR [rax],0x0
    221f:	00 01                	add    BYTE PTR [rcx],al
    2221:	ab                   	stos   DWORD PTR es:[rdi],eax
    2222:	12 b7 03 00 00 3e    	adc    dh,BYTE PTR [rdi+0x3e000003]
    2228:	02 00                	add    al,BYTE PTR [rax]
    222a:	00 10                	add    BYTE PTR [rax],dl
    222c:	8e 00                	mov    es,WORD PTR [rax]
    222e:	00 00                	add    BYTE PTR [rax],al
    2230:	00 12                	add    BYTE PTR [rdx],dl
    2232:	ff 10                	call   QWORD PTR [rax]
    2234:	00 00                	add    BYTE PTR [rax],al
    2236:	01 98 12 b7 03 00    	add    DWORD PTR [rax+0x3b712],ebx
    223c:	00 13                	add    BYTE PTR [rbx],dl
    223e:	af                   	scas   eax,DWORD PTR es:[rdi]
    223f:	11 00                	adc    DWORD PTR [rax],eax
    2241:	00 01                	add    BYTE PTR [rcx],al
    2243:	3d 06 58 0f 00       	cmp    eax,0xf5806
    2248:	00 6a 02             	add    BYTE PTR [rdx+0x2],ch
    224b:	00 00                	add    BYTE PTR [rax],al
    224d:	10 d8                	adc    al,bl
    224f:	06                   	(bad)  
    2250:	00 00                	add    BYTE PTR [rax],al
    2252:	10 8e 00 00 00 10    	adc    BYTE PTR [rsi+0x10000000],cl
    2258:	8e 00                	mov    es,WORD PTR [rax]
    225a:	00 00                	add    BYTE PTR [rax],al
    225c:	00 14 7b             	add    BYTE PTR [rbx+rdi*2],dl
    225f:	11 00                	adc    DWORD PTR [rax],eax
    2261:	00 01                	add    BYTE PTR [rcx],al
    2263:	27                   	(bad)  
    2264:	06                   	(bad)  
    2265:	05 10 00 00 b6       	add    eax,0xb6000010
    226a:	00 00                	add    BYTE PTR [rax],al
    226c:	00 10                	add    BYTE PTR [rax],dl
    226e:	d8 06                	fadd   DWORD PTR [rsi]
    2270:	00 00                	add    BYTE PTR [rax],al
    2272:	10 8e 00 00 00 10    	adc    BYTE PTR [rsi+0x10000000],cl
    2278:	8e 00                	mov    es,WORD PTR [rax]
    227a:	00 00                	add    BYTE PTR [rax],al
    227c:	00 00                	add    BYTE PTR [rax],al
    227e:	07                   	(bad)  
    227f:	eb 06                	jmp    2287 <stivale_hdr-0x1fdd79>
    2281:	00 00                	add    BYTE PTR [rax],al
    2283:	07                   	(bad)  
    2284:	09 0c 00             	or     DWORD PTR [rax+rax*1],ecx
    2287:	0e                   	(bad)  
    2288:	95                   	xchg   ebp,eax
    2289:	07                   	(bad)  
    228a:	00 00                	add    BYTE PTR [rax],al
    228c:	08 04 0b             	or     BYTE PTR [rbx+rcx*1],al
    228f:	30 03                	xor    BYTE PTR [rbx],al
    2291:	00 00                	add    BYTE PTR [rax],al
    2293:	15 b1 0f 00 00       	adc    eax,0xfb1
    2298:	10 09                	adc    BYTE PTR [rcx],cl
    229a:	05 0b 16 97 06       	add    eax,0x697160b
    229f:	00 00                	add    BYTE PTR [rax],al
    22a1:	09 07                	or     DWORD PTR [rdi],eax
    22a3:	0e                   	(bad)  
    22a4:	b6 00                	mov    dh,0x0
    22a6:	00 00                	add    BYTE PTR [rax],al
    22a8:	00 01                	add    BYTE PTR [rcx],al
    22aa:	16                   	(bad)  
    22ab:	08 2d 00 00 09 08    	or     BYTE PTR [rip+0x8090000],ch        # 80922b1 <__kernel_end+0x7e802b1>
    22b1:	0f 30                	wrmsr  
    22b3:	03 00                	add    eax,DWORD PTR [rax]
    22b5:	00 08                	add    BYTE PTR [rax],cl
    22b7:	01 17                	add    DWORD PTR [rdi],edx
    22b9:	45 12 00             	adc    r8b,BYTE PTR [r8]
    22bc:	00 09                	add    BYTE PTR [rcx],cl
    22be:	09 0e                	or     DWORD PTR [rsi],ecx
    22c0:	57                   	push   rdi
    22c1:	10 00                	adc    BYTE PTR [rax],al
    22c3:	00 36                	add    BYTE PTR [rsi],dh
    22c5:	03 00                	add    eax,DWORD PTR [rax]
    22c7:	00 01                	add    BYTE PTR [rcx],al
    22c9:	de 02                	fiadd  WORD PTR [rdx]
    22cb:	00 00                	add    BYTE PTR [rax],al
    22cd:	e9 02 00 00 18       	jmp    180022d4 <__kernel_end+0x17df02d4>
    22d2:	3d 03 00 00 10       	cmp    eax,0x10000003
    22d7:	8e 00                	mov    es,WORD PTR [rax]
    22d9:	00 00                	add    BYTE PTR [rax],al
    22db:	00 19                	add    BYTE PTR [rcx],bl
    22dd:	67 65 74 00          	addr32 gs je 22e1 <stivale_hdr-0x1fdd1f>
    22e1:	09 0a                	or     DWORD PTR [rdx],ecx
    22e3:	0e                   	(bad)  
    22e4:	1d 11 00 00 36       	sbb    eax,0x36000011
    22e9:	03 00                	add    eax,DWORD PTR [rax]
    22eb:	00 01                	add    BYTE PTR [rcx],al
    22ed:	02 03                	add    al,BYTE PTR [rbx]
    22ef:	00 00                	add    BYTE PTR [rax],al
    22f1:	0d 03 00 00 18       	or     eax,0x18000003
    22f6:	3d 03 00 00 10       	cmp    eax,0x10000003
    22fb:	8e 00                	mov    es,WORD PTR [rax]
    22fd:	00 00                	add    BYTE PTR [rax],al
    22ff:	00 1a                	add    BYTE PTR [rdx],bl
    2301:	73 65                	jae    2368 <stivale_hdr-0x1fdc98>
    2303:	74 00                	je     2305 <stivale_hdr-0x1fdcfb>
    2305:	09 0b                	or     DWORD PTR [rbx],ecx
    2307:	0e                   	(bad)  
    2308:	08 12                	or     BYTE PTR [rdx],dl
    230a:	00 00                	add    BYTE PTR [rax],al
    230c:	01 1e                	add    DWORD PTR [rsi],ebx
    230e:	03 00                	add    eax,DWORD PTR [rax]
    2310:	00 18                	add    BYTE PTR [rax],bl
    2312:	3d 03 00 00 10       	cmp    eax,0x10000003
    2317:	8e 00                	mov    es,WORD PTR [rax]
    2319:	00 00                	add    BYTE PTR [rax],al
    231b:	10 36                	adc    BYTE PTR [rsi],dh
    231d:	03 00                	add    eax,DWORD PTR [rax]
    231f:	00 00                	add    BYTE PTR [rax],al
    2321:	00 00                	add    BYTE PTR [rax],al
    2323:	1b 08                	sbb    ecx,DWORD PTR [rax]
    2325:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    2328:	00 02                	add    BYTE PTR [rdx],al
    232a:	01 02                	add    DWORD PTR [rdx],eax
    232c:	61                   	(bad)  
    232d:	02 00                	add    al,BYTE PTR [rax]
    232f:	00 1b                	add    BYTE PTR [rbx],bl
    2331:	08 a0 02 00 00 1c    	or     BYTE PTR [rax+0x1c000002],ah
    2337:	96                   	xchg   esi,eax
    2338:	01 00                	add    DWORD PTR [rax],eax
    233a:	00 01                	add    BYTE PTR [rcx],al
    233c:	08 06                	or     BYTE PTR [rsi],al
    233e:	09 03                	or     DWORD PTR [rbx],eax
    2340:	d0 00                	rol    BYTE PTR [rax],1
    2342:	21 00                	and    DWORD PTR [rax],eax
    2344:	00 00                	add    BYTE PTR [rax],al
    2346:	00 00                	add    BYTE PTR [rax],al
    2348:	1c a6                	sbb    al,0xa6
    234a:	01 00                	add    DWORD PTR [rax],eax
    234c:	00 01                	add    BYTE PTR [rcx],al
    234e:	09 06                	or     DWORD PTR [rsi],eax
    2350:	09 03                	or     DWORD PTR [rbx],eax
    2352:	d8 00                	fadd   DWORD PTR [rax]
    2354:	21 00                	and    DWORD PTR [rax],eax
    2356:	00 00                	add    BYTE PTR [rax],al
    2358:	00 00                	add    BYTE PTR [rax],al
    235a:	1c b6                	sbb    al,0xb6
    235c:	01 00                	add    DWORD PTR [rax],eax
    235e:	00 01                	add    BYTE PTR [rcx],al
    2360:	0a 06                	or     al,BYTE PTR [rsi]
    2362:	09 03                	or     DWORD PTR [rbx],eax
    2364:	e0 00                	loopne 2366 <stivale_hdr-0x1fdc9a>
    2366:	21 00                	and    DWORD PTR [rax],eax
    2368:	00 00                	add    BYTE PTR [rax],al
    236a:	00 00                	add    BYTE PTR [rax],al
    236c:	1c c6                	sbb    al,0xc6
    236e:	01 00                	add    DWORD PTR [rax],eax
    2370:	00 01                	add    BYTE PTR [rcx],al
    2372:	0b 06                	or     eax,DWORD PTR [rsi]
    2374:	09 03                	or     DWORD PTR [rbx],eax
    2376:	e8 00 21 00 00       	call   447b <stivale_hdr-0x1fbb85>
    237b:	00 00                	add    BYTE PTR [rax],al
    237d:	00 1d e5 10 00 00    	add    BYTE PTR [rip+0x10e5],bl        # 3468 <stivale_hdr-0x1fcb98>
    2383:	01 0c 0e             	add    DWORD PTR [rsi+rcx*1],ecx
    2386:	a0 02 00 00 09 03 f0 	movabs al,ds:0x2100f00309000002
    238d:	00 21 
    238f:	00 00                	add    BYTE PTR [rax],al
    2391:	00 00                	add    BYTE PTR [rax],al
    2393:	00 1d 95 10 00 00    	add    BYTE PTR [rip+0x1095],bl        # 342e <stivale_hdr-0x1fcbd2>
    2399:	01 0d 06 36 03 00    	add    DWORD PTR [rip+0x33606],ecx        # 359a5 <stivale_hdr-0x1ca65b>
    239f:	00 09                	add    BYTE PTR [rcx],cl
    23a1:	03 00                	add    eax,DWORD PTR [rax]
    23a3:	01 21                	add    DWORD PTR [rcx],esp
    23a5:	00 00                	add    BYTE PTR [rax],al
    23a7:	00 00                	add    BYTE PTR [rax],al
    23a9:	00 1e                	add    BYTE PTR [rsi],bl
    23ab:	08 1f                	or     BYTE PTR [rdi],bl
    23ad:	d6                   	(bad)  
    23ae:	01 00                	add    DWORD PTR [rax],eax
    23b0:	00 03                	add    BYTE PTR [rbx],al
    23b2:	2f                   	(bad)  
    23b3:	20 00                	and    BYTE PTR [rax],al
    23b5:	00 00                	add    BYTE PTR [rax],al
    23b7:	00 00                	add    BYTE PTR [rax],al
    23b9:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    23bc:	00 00                	add    BYTE PTR [rax],al
    23be:	00 00                	add    BYTE PTR [rax],al
    23c0:	00 01                	add    BYTE PTR [rcx],al
    23c2:	9c                   	pushf  
    23c3:	12 04 00             	adc    al,BYTE PTR [rax+rax*1]
    23c6:	00 20                	add    BYTE PTR [rax],ah
    23c8:	8c 10                	mov    WORD PTR [rax],ss
    23ca:	00 00                	add    BYTE PTR [rax],al
    23cc:	01 d5                	add    ebp,edx
    23ce:	2f                   	(bad)  
    23cf:	b7 03                	mov    bh,0x3
    23d1:	00 00                	add    BYTE PTR [rax],al
    23d3:	02 91 58 20 d4 0f    	add    dl,BYTE PTR [rcx+0xfd42058]
    23d9:	00 00                	add    BYTE PTR [rax],al
    23db:	01 d5                	add    ebp,edx
    23dd:	40 8e 00             	rex mov es,WORD PTR [rax]
    23e0:	00 00                	add    BYTE PTR [rax],al
    23e2:	02 91 50 21 13 2f    	add    dl,BYTE PTR [rcx+0x2f132150]
    23e8:	20 00                	and    BYTE PTR [rax],al
    23ea:	00 00                	add    BYTE PTR [rax],al
    23ec:	00 00                	add    BYTE PTR [rax],al
    23ee:	33 00                	xor    eax,DWORD PTR [rax]
    23f0:	00 00                	add    BYTE PTR [rax],al
    23f2:	00 00                	add    BYTE PTR [rax],al
    23f4:	00 00                	add    BYTE PTR [rax],al
    23f6:	22 74 00 01          	and    dh,BYTE PTR [rax+rax*1+0x1]
    23fa:	d7                   	xlat   BYTE PTR ds:[rbx]
    23fb:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    23fe:	00 00                	add    BYTE PTR [rax],al
    2400:	02 91 68 00 00 1f    	add    dl,BYTE PTR [rcx+0x1f000068]
    2406:	ed                   	in     eax,dx
    2407:	01 00                	add    DWORD PTR [rax],eax
    2409:	00 86 2e 20 00 00    	add    BYTE PTR [rsi+0x202e],al
    240f:	00 00                	add    BYTE PTR [rax],al
    2411:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
    2414:	00 00                	add    BYTE PTR [rax],al
    2416:	00 00                	add    BYTE PTR [rax],al
    2418:	00 00                	add    BYTE PTR [rax],al
    241a:	01 9c 4c 04 00 00 20 	add    DWORD PTR [rsp+rcx*2+0x20000004],ebx
    2421:	8c 10                	mov    WORD PTR [rax],ss
    2423:	00 00                	add    BYTE PTR [rax],al
    2425:	01 cd                	add    ebp,ecx
    2427:	2e b7 03             	cs mov bh,0x3
    242a:	00 00                	add    BYTE PTR [rax],al
    242c:	02 91 58 23 89 1f    	add    dl,BYTE PTR [rcx+0x1f892358]
    2432:	00 00                	add    BYTE PTR [rax],al
    2434:	01 ce                	add    esi,ecx
    2436:	0a b6 00 00 00 02    	or     dh,BYTE PTR [rsi+0x2000000]
    243c:	91                   	xchg   ecx,eax
    243d:	68 00 1f ff 01       	push   0x1ff1f00
    2442:	00 00                	add    BYTE PTR [rax],al
    2444:	40                   	rex
    2445:	2e 20 00             	and    BYTE PTR cs:[rax],al
    2448:	00 00                	add    BYTE PTR [rax],al
    244a:	00 00                	add    BYTE PTR [rax],al
    244c:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    244f:	00 00                	add    BYTE PTR [rax],al
    2451:	00 00                	add    BYTE PTR [rax],al
    2453:	00 01                	add    BYTE PTR [rcx],al
    2455:	9c                   	pushf  
    2456:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2457:	04 00                	add    al,0x0
    2459:	00 20                	add    BYTE PTR [rax],ah
    245b:	8c 10                	mov    WORD PTR [rax],ss
    245d:	00 00                	add    BYTE PTR [rax],al
    245f:	01 c7                	add    edi,eax
    2461:	2f                   	(bad)  
    2462:	b7 03                	mov    bh,0x3
    2464:	00 00                	add    BYTE PTR [rax],al
    2466:	02 91 58 20 d4 0f    	add    dl,BYTE PTR [rcx+0xfd42058]
    246c:	00 00                	add    BYTE PTR [rax],al
    246e:	01 c7                	add    edi,eax
    2470:	40 8e 00             	rex mov es,WORD PTR [rax]
    2473:	00 00                	add    BYTE PTR [rax],al
    2475:	02 91 50 21 50 2e    	add    dl,BYTE PTR [rcx+0x2e502150]
    247b:	20 00                	and    BYTE PTR [rax],al
    247d:	00 00                	add    BYTE PTR [rax],al
    247f:	00 00                	add    BYTE PTR [rax],al
    2481:	33 00                	xor    eax,DWORD PTR [rax]
    2483:	00 00                	add    BYTE PTR [rax],al
    2485:	00 00                	add    BYTE PTR [rax],al
    2487:	00 00                	add    BYTE PTR [rax],al
    2489:	22 74 00 01          	and    dh,BYTE PTR [rax+rax*1+0x1]
    248d:	c9                   	leave  
    248e:	11 8e 00 00 00 02    	adc    DWORD PTR [rsi+0x2000000],ecx
    2494:	91                   	xchg   ecx,eax
    2495:	68 00 00 1f 16       	push   0x161f0000
    249a:	02 00                	add    al,BYTE PTR [rax]
    249c:	00 c4                	add    ah,al
    249e:	2d 20 00 00 00       	sub    eax,0x20
    24a3:	00 00                	add    BYTE PTR [rax],al
    24a5:	7c 00                	jl     24a7 <stivale_hdr-0x1fdb59>
    24a7:	00 00                	add    BYTE PTR [rax],al
    24a9:	00 00                	add    BYTE PTR [rax],al
    24ab:	00 00                	add    BYTE PTR [rax],al
    24ad:	01 9c df 04 00 00 20 	add    DWORD PTR [rdi+rbx*8+0x20000004],ebx
    24b4:	8c 10                	mov    WORD PTR [rax],ss
    24b6:	00 00                	add    BYTE PTR [rax],al
    24b8:	01 be 2e b7 03 00    	add    DWORD PTR [rsi+0x3b72e],edi
    24be:	00 02                	add    BYTE PTR [rdx],al
    24c0:	91                   	xchg   ecx,eax
    24c1:	58                   	pop    rax
    24c2:	23 89 1f 00 00 01    	and    ecx,DWORD PTR [rcx+0x100001f]
    24c8:	c0 0a b6             	ror    BYTE PTR [rdx],0xb6
    24cb:	00 00                	add    BYTE PTR [rax],al
    24cd:	00 02                	add    BYTE PTR [rdx],al
    24cf:	91                   	xchg   ecx,eax
    24d0:	68 00 24 28 02       	push   0x2282400
    24d5:	00 00                	add    BYTE PTR [rax],al
    24d7:	b7 03                	mov    bh,0x3
    24d9:	00 00                	add    BYTE PTR [rax],al
    24db:	33 2d 20 00 00 00    	xor    ebp,DWORD PTR [rip+0x20]        # 2501 <stivale_hdr-0x1fdaff>
    24e1:	00 00                	add    BYTE PTR [rax],al
    24e3:	91                   	xchg   ecx,eax
    24e4:	00 00                	add    BYTE PTR [rax],al
    24e6:	00 00                	add    BYTE PTR [rax],al
    24e8:	00 00                	add    BYTE PTR [rax],al
    24ea:	00 01                	add    BYTE PTR [rcx],al
    24ec:	9c                   	pushf  
    24ed:	5d                   	pop    rbp
    24ee:	05 00 00 20 d4       	add    eax,0xd4200000
    24f3:	0f 00 00             	sldt   WORD PTR [rax]
    24f6:	01 ab 34 8e 00 00    	add    DWORD PTR [rbx+0x8e34],ebp
    24fc:	00 02                	add    BYTE PTR [rdx],al
    24fe:	91                   	xchg   ecx,eax
    24ff:	48 23 f5             	and    rsi,rbp
    2502:	10 00                	adc    BYTE PTR [rax],al
    2504:	00 01                	add    BYTE PTR [rcx],al
    2506:	b0 0b                	mov    al,0xb
    2508:	b7 03                	mov    bh,0x3
    250a:	00 00                	add    BYTE PTR [rax],al
    250c:	02 91 60 21 73 2d    	add    dl,BYTE PTR [rcx+0x2d732160]
    2512:	20 00                	and    BYTE PTR [rax],al
    2514:	00 00                	add    BYTE PTR [rax],al
    2516:	00 00                	add    BYTE PTR [rax],al
    2518:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    251b:	00 00                	add    BYTE PTR [rax],al
    251d:	00 00                	add    BYTE PTR [rax],al
    251f:	00 22                	add    BYTE PTR [rdx],ah
    2521:	69 00 01 b5 0f b6    	imul   eax,DWORD PTR [rax],0xb60fb501
    2527:	00 00                	add    BYTE PTR [rax],al
    2529:	00 02                	add    BYTE PTR [rdx],al
    252b:	91                   	xchg   ecx,eax
    252c:	68 21 85 2d 20       	push   0x202d8521
    2531:	00 00                	add    BYTE PTR [rax],al
    2533:	00 00                	add    BYTE PTR [rax],al
    2535:	00 32                	add    BYTE PTR [rdx],dh
    2537:	00 00                	add    BYTE PTR [rax],al
    2539:	00 00                	add    BYTE PTR [rax],al
    253b:	00 00                	add    BYTE PTR [rax],al
    253d:	00 23                	add    BYTE PTR [rbx],ah
    253f:	ba 11 00 00 01       	mov    edx,0x1000011
    2544:	b7 0f                	mov    bh,0xf
    2546:	b7 03                	mov    bh,0x3
    2548:	00 00                	add    BYTE PTR [rax],al
    254a:	02 91 58 00 00 00    	add    dl,BYTE PTR [rcx+0x58]
    2550:	24 3e                	and    al,0x3e
    2552:	02 00                	add    al,BYTE PTR [rax]
    2554:	00 b7 03 00 00 c9    	add    BYTE PTR [rdi-0x36fffffd],dh
    255a:	2c 20                	sub    al,0x20
    255c:	00 00                	add    BYTE PTR [rax],al
    255e:	00 00                	add    BYTE PTR [rax],al
    2560:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
    2563:	00 00                	add    BYTE PTR [rax],al
    2565:	00 00                	add    BYTE PTR [rax],al
    2567:	00 00                	add    BYTE PTR [rax],al
    2569:	01 9c 9e 05 00 00 21 	add    DWORD PTR [rsi+rbx*4+0x21000005],ebx
    2570:	d1 2c 20             	shr    DWORD PTR [rax+riz*1],1
    2573:	00 00                	add    BYTE PTR [rax],al
    2575:	00 00                	add    BYTE PTR [rax],al
    2577:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
    257a:	00 00                	add    BYTE PTR [rax],al
    257c:	00 00                	add    BYTE PTR [rax],al
    257e:	00 00                	add    BYTE PTR [rax],al
    2580:	23 89 1f 00 00 01    	and    ecx,DWORD PTR [rcx+0x100001f]
    2586:	9a                   	(bad)  
    2587:	0f b6 00             	movzx  eax,BYTE PTR [rax]
    258a:	00 00                	add    BYTE PTR [rax],al
    258c:	02 91 68 00 00 25    	add    dl,BYTE PTR [rcx+0x25000068]
    2592:	ee                   	out    dx,al
    2593:	11 00                	adc    DWORD PTR [rax],eax
    2595:	00 01                	add    BYTE PTR [rcx],al
    2597:	92                   	xchg   edx,eax
    2598:	11 83 2c 20 00 00    	adc    DWORD PTR [rbx+0x202c],eax
    259e:	00 00                	add    BYTE PTR [rax],al
    25a0:	00 46 00             	add    BYTE PTR [rsi+0x0],al
    25a3:	00 00                	add    BYTE PTR [rax],al
    25a5:	00 00                	add    BYTE PTR [rax],al
    25a7:	00 00                	add    BYTE PTR [rax],al
    25a9:	01 9c fa 05 00 00 20 	add    DWORD PTR [rdx+rdi*8+0x20000005],ebx
    25b0:	8c 10                	mov    WORD PTR [rax],ss
    25b2:	00 00                	add    BYTE PTR [rax],al
    25b4:	01 92 25 b7 03 00    	add    DWORD PTR [rdx+0x3b725],edx
    25ba:	00 02                	add    BYTE PTR [rdx],al
    25bc:	91                   	xchg   ecx,eax
    25bd:	58                   	pop    rax
    25be:	20 df                	and    bh,bl
    25c0:	0f 00 00             	sldt   WORD PTR [rax]
    25c3:	01 92 36 8e 00 00    	add    DWORD PTR [rdx+0x8e36],edx
    25c9:	00 02                	add    BYTE PTR [rdx],al
    25cb:	91                   	xchg   ecx,eax
    25cc:	50                   	push   rax
    25cd:	21 93 2c 20 00 00    	and    DWORD PTR [rbx+0x202c],edx
    25d3:	00 00                	add    BYTE PTR [rax],al
    25d5:	00 33                	add    BYTE PTR [rbx],dh
    25d7:	00 00                	add    BYTE PTR [rax],al
    25d9:	00 00                	add    BYTE PTR [rax],al
    25db:	00 00                	add    BYTE PTR [rax],al
    25dd:	00 22                	add    BYTE PTR [rdx],ah
    25df:	74 00                	je     25e1 <stivale_hdr-0x1fda1f>
    25e1:	01 94 0f b6 00 00 00 	add    DWORD PTR [rdi+rcx*1+0xb6],edx
    25e8:	02 91 68 00 00 25    	add    dl,BYTE PTR [rcx+0x25000068]
    25ee:	67 12 00             	adc    al,BYTE PTR [eax]
    25f1:	00 01                	add    BYTE PTR [rcx],al
    25f3:	86 11                	xchg   BYTE PTR [rcx],dl
    25f5:	06                   	(bad)  
    25f6:	2c 20                	sub    al,0x20
    25f8:	00 00                	add    BYTE PTR [rax],al
    25fa:	00 00                	add    BYTE PTR [rax],al
    25fc:	00 7d 00             	add    BYTE PTR [rbp+0x0],bh
    25ff:	00 00                	add    BYTE PTR [rax],al
    2601:	00 00                	add    BYTE PTR [rax],al
    2603:	00 00                	add    BYTE PTR [rax],al
    2605:	01 9c 37 06 00 00 20 	add    DWORD PTR [rdi+rsi*1+0x20000006],ebx
    260c:	8c 10                	mov    WORD PTR [rax],ss
    260e:	00 00                	add    BYTE PTR [rax],al
    2610:	01 86 24 b7 03 00    	add    DWORD PTR [rsi+0x3b724],eax
    2616:	00 02                	add    BYTE PTR [rdx],al
    2618:	91                   	xchg   ecx,eax
    2619:	58                   	pop    rax
    261a:	23 89 1f 00 00 01    	and    ecx,DWORD PTR [rcx+0x100001f]
    2620:	88 0c 8e             	mov    BYTE PTR [rsi+rcx*4],cl
    2623:	00 00                	add    BYTE PTR [rax],al
    2625:	00 02                	add    BYTE PTR [rdx],al
    2627:	91                   	xchg   ecx,eax
    2628:	68 00 26 ec 11       	push   0x11ec2600
    262d:	00 00                	add    BYTE PTR [rax],al
    262f:	01 80 06 d5 11 00    	add    DWORD PTR [rax+0x11d506],eax
    2635:	00 c0                	add    al,al
    2637:	2b 20                	sub    esp,DWORD PTR [rax]
    2639:	00 00                	add    BYTE PTR [rax],al
    263b:	00 00                	add    BYTE PTR [rax],al
    263d:	00 46 00             	add    BYTE PTR [rsi+0x0],al
    2640:	00 00                	add    BYTE PTR [rax],al
    2642:	00 00                	add    BYTE PTR [rax],al
    2644:	00 00                	add    BYTE PTR [rax],al
    2646:	01 9c 97 06 00 00 20 	add    DWORD PTR [rdi+rdx*4+0x20000006],ebx
    264d:	8c 10                	mov    WORD PTR [rax],ss
    264f:	00 00                	add    BYTE PTR [rax],al
    2651:	01 80 1c b7 03 00    	add    DWORD PTR [rax+0x3b71c],eax
    2657:	00 02                	add    BYTE PTR [rdx],al
    2659:	91                   	xchg   ecx,eax
    265a:	58                   	pop    rax
    265b:	20 df                	and    bh,bl
    265d:	0f 00 00             	sldt   WORD PTR [rax]
    2660:	01 80 2d 8e 00 00    	add    DWORD PTR [rax+0x8e2d],eax
    2666:	00 02                	add    BYTE PTR [rdx],al
    2668:	91                   	xchg   ecx,eax
    2669:	50                   	push   rax
    266a:	21 d0                	and    eax,edx
    266c:	2b 20                	sub    esp,DWORD PTR [rax]
    266e:	00 00                	add    BYTE PTR [rax],al
    2670:	00 00                	add    BYTE PTR [rax],al
    2672:	00 33                	add    BYTE PTR [rbx],dh
    2674:	00 00                	add    BYTE PTR [rax],al
    2676:	00 00                	add    BYTE PTR [rax],al
    2678:	00 00                	add    BYTE PTR [rax],al
    267a:	00 22                	add    BYTE PTR [rdx],ah
    267c:	74 00                	je     267e <stivale_hdr-0x1fd982>
    267e:	01 82 0f b6 00 00    	add    DWORD PTR [rdx+0xb60f],eax
    2684:	00 02                	add    BYTE PTR [rdx],al
    2686:	91                   	xchg   ecx,eax
    2687:	68 00 00 26 65       	push   0x65260000
    268c:	12 00                	adc    al,BYTE PTR [rax]
    268e:	00 01                	add    BYTE PTR [rcx],al
    2690:	74 06                	je     2698 <stivale_hdr-0x1fd968>
    2692:	50                   	push   rax
    2693:	12 00                	adc    al,BYTE PTR [rax]
    2695:	00 44 2b 20          	add    BYTE PTR [rbx+rbp*1+0x20],al
    2699:	00 00                	add    BYTE PTR [rax],al
    269b:	00 00                	add    BYTE PTR [rax],al
    269d:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
    26a1:	00 00                	add    BYTE PTR [rax],al
    26a3:	00 00                	add    BYTE PTR [rax],al
    26a5:	00 01                	add    BYTE PTR [rcx],al
    26a7:	9c                   	pushf  
    26a8:	d8 06                	fadd   DWORD PTR [rsi]
    26aa:	00 00                	add    BYTE PTR [rax],al
    26ac:	20 8c 10 00 00 01 74 	and    BYTE PTR [rax+rdx*1+0x74010000],cl
    26b3:	1b b7 03 00 00 02    	sbb    esi,DWORD PTR [rdi+0x2000003]
    26b9:	91                   	xchg   ecx,eax
    26ba:	58                   	pop    rax
    26bb:	23 89 1f 00 00 01    	and    ecx,DWORD PTR [rcx+0x100001f]
    26c1:	76 0c                	jbe    26cf <stivale_hdr-0x1fd931>
    26c3:	8e 00                	mov    es,WORD PTR [rax]
    26c5:	00 00                	add    BYTE PTR [rax],al
    26c7:	02 91 68 00 1b 08    	add    dl,BYTE PTR [rcx+0x81b0068]
    26cd:	56                   	push   rsi
    26ce:	01 00                	add    DWORD PTR [rax],eax
    26d0:	00 1f                	add    BYTE PTR [rdi],bl
    26d2:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
    26d5:	00 99 28 20 00 00    	add    BYTE PTR [rcx+0x2028],bl
    26db:	00 00                	add    BYTE PTR [rax],al
    26dd:	00 ab 02 00 00 00    	add    BYTE PTR [rbx+0x2],ch
    26e3:	00 00                	add    BYTE PTR [rax],al
    26e5:	00 01                	add    BYTE PTR [rcx],al
    26e7:	9c                   	pushf  
    26e8:	fc                   	cld    
    26e9:	07                   	(bad)  
    26ea:	00 00                	add    BYTE PTR [rax],al
    26ec:	20 dc                	and    ah,bl
    26ee:	07                   	(bad)  
    26ef:	00 00                	add    BYTE PTR [rax],al
    26f1:	01 3d 32 d8 06 00    	add    DWORD PTR [rip+0x6d832],edi        # 6ff29 <stivale_hdr-0x1900d7>
    26f7:	00 03                	add    BYTE PTR [rbx],al
    26f9:	91                   	xchg   ecx,eax
    26fa:	98                   	cwde   
    26fb:	7f 20                	jg     271d <stivale_hdr-0x1fd8e3>
    26fd:	ff 11                	call   QWORD PTR [rcx]
    26ff:	00 00                	add    BYTE PTR [rax],al
    2701:	01 3d 45 8e 00 00    	add    DWORD PTR [rip+0x8e45],edi        # b54c <stivale_hdr-0x1f4ab4>
    2707:	00 03                	add    BYTE PTR [rbx],al
    2709:	91                   	xchg   ecx,eax
    270a:	90                   	nop
    270b:	7f 20                	jg     272d <stivale_hdr-0x1fd8d3>
    270d:	4d 10 00             	rex.WRB adc BYTE PTR [r8],r8b
    2710:	00 01                	add    BYTE PTR [rcx],al
    2712:	3d 56 8e 00 00       	cmp    eax,0x8e56
    2717:	00 03                	add    BYTE PTR [rbx],al
    2719:	91                   	xchg   ecx,eax
    271a:	88 7f 23             	mov    BYTE PTR [rdi+0x23],bh
    271d:	80 02 00             	add    BYTE PTR [rdx],0x0
    2720:	00 01                	add    BYTE PTR [rcx],al
    2722:	43 0a b6 00 00 00 02 	rex.XB or sil,BYTE PTR [r14+0x2000000]
    2729:	91                   	xchg   ecx,eax
    272a:	48 23 e9             	and    rbp,rcx
    272d:	0f 00 00             	sldt   WORD PTR [rax]
    2730:	01 45 0b             	add    DWORD PTR [rbp+0xb],eax
    2733:	b7 03                	mov    bh,0x3
    2735:	00 00                	add    BYTE PTR [rax],al
    2737:	02 91 68 23 8b 0f    	add    dl,BYTE PTR [rcx+0xf8b2368]
    273d:	00 00                	add    BYTE PTR [rax],al
    273f:	01 46 0a             	add    DWORD PTR [rsi+0xa],eax
    2742:	b6 00                	mov    dh,0x0
    2744:	00 00                	add    BYTE PTR [rax],al
    2746:	02 91 60 23 11 11    	add    dl,BYTE PTR [rcx+0x11112360]
    274c:	00 00                	add    BYTE PTR [rax],al
    274e:	01 5b 0a             	add    DWORD PTR [rbx+0xa],ebx
    2751:	b6 00                	mov    dh,0x0
    2753:	00 00                	add    BYTE PTR [rax],al
    2755:	03 91 b8 7f 23 fc    	add    edx,DWORD PTR [rcx-0x3dc8048]
    275b:	11 00                	adc    DWORD PTR [rax],eax
    275d:	00 01                	add    BYTE PTR [rcx],al
    275f:	5e                   	pop    rsi
    2760:	0a b6 00 00 00 03    	or     dh,BYTE PTR [rsi+0x3000000]
    2766:	91                   	xchg   ecx,eax
    2767:	b0 7f                	mov    al,0x7f
    2769:	27                   	(bad)  
    276a:	e4 28                	in     al,0x28
    276c:	20 00                	and    BYTE PTR [rax],al
    276e:	00 00                	add    BYTE PTR [rax],al
    2770:	00 00                	add    BYTE PTR [rax],al
    2772:	fa                   	cli    
    2773:	00 00                	add    BYTE PTR [rax],al
    2775:	00 00                	add    BYTE PTR [rax],al
    2777:	00 00                	add    BYTE PTR [rax],al
    2779:	00 ba 07 00 00 22    	add    BYTE PTR [rdx+0x22000007],bh
    277f:	69 00 01 48 0f b6    	imul   eax,DWORD PTR [rax],0xb60f4801
    2785:	00 00                	add    BYTE PTR [rax],al
    2787:	00 02                	add    BYTE PTR [rdx],al
    2789:	91                   	xchg   ecx,eax
    278a:	58                   	pop    rax
    278b:	21 fa                	and    edx,edi
    278d:	28 20                	sub    BYTE PTR [rax],ah
    278f:	00 00                	add    BYTE PTR [rax],al
    2791:	00 00                	add    BYTE PTR [rax],al
    2793:	00 da                	add    dl,bl
    2795:	00 00                	add    BYTE PTR [rax],al
    2797:	00 00                	add    BYTE PTR [rax],al
    2799:	00 00                	add    BYTE PTR [rax],al
    279b:	00 23                	add    BYTE PTR [rbx],ah
    279d:	2b 0b                	sub    ecx,DWORD PTR [rbx]
    279f:	00 00                	add    BYTE PTR [rax],al
    27a1:	01 49 1d             	add    DWORD PTR [rcx+0x1d],ecx
    27a4:	fc                   	cld    
    27a5:	07                   	(bad)  
    27a6:	00 00                	add    BYTE PTR [rax],al
    27a8:	02 91 40 00 00 21    	add    dl,BYTE PTR [rcx+0x21000040]
    27ae:	8c 2a                	mov    WORD PTR [rdx],gs
    27b0:	20 00                	and    BYTE PTR [rax],al
    27b2:	00 00                	add    BYTE PTR [rax],al
    27b4:	00 00                	add    BYTE PTR [rax],al
    27b6:	67 00 00             	add    BYTE PTR [eax],al
    27b9:	00 00                	add    BYTE PTR [rax],al
    27bb:	00 00                	add    BYTE PTR [rax],al
    27bd:	00 22                	add    BYTE PTR [rdx],ah
    27bf:	69 00 01 68 0f b6    	imul   eax,DWORD PTR [rax],0xb60f6801
    27c5:	00 00                	add    BYTE PTR [rax],al
    27c7:	00 02                	add    BYTE PTR [rdx],al
    27c9:	91                   	xchg   ecx,eax
    27ca:	50                   	push   rax
    27cb:	21 9e 2a 20 00 00    	and    DWORD PTR [rsi+0x202a],ebx
    27d1:	00 00                	add    BYTE PTR [rax],al
    27d3:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    27d6:	00 00                	add    BYTE PTR [rax],al
    27d8:	00 00                	add    BYTE PTR [rax],al
    27da:	00 00                	add    BYTE PTR [rax],al
    27dc:	23 2b                	and    ebp,DWORD PTR [rbx]
    27de:	0b 00                	or     eax,DWORD PTR [rax]
    27e0:	00 01                	add    BYTE PTR [rcx],al
    27e2:	69 1d fc 07 00 00 03 	imul   ebx,DWORD PTR [rip+0x7fc],0x7fa89103        # 2fe8 <stivale_hdr-0x1fd018>
    27e9:	91 a8 7f 
    27ec:	00 00                	add    BYTE PTR [rax],al
    27ee:	00 1b                	add    BYTE PTR [rbx],bl
    27f0:	08 14 01             	or     BYTE PTR [rcx+rax*1],dl
    27f3:	00 00                	add    BYTE PTR [rax],al
    27f5:	28 6a 02             	sub    BYTE PTR [rdx+0x2],ch
    27f8:	00 00                	add    BYTE PTR [rax],al
    27fa:	da 27                	fisub  DWORD PTR [rdi]
    27fc:	20 00                	and    BYTE PTR [rax],al
    27fe:	00 00                	add    BYTE PTR [rax],al
    2800:	00 00                	add    BYTE PTR [rax],al
    2802:	bf 00 00 00 00       	mov    edi,0x0
    2807:	00 00                	add    BYTE PTR [rax],al
    2809:	00 01                	add    BYTE PTR [rcx],al
    280b:	9c                   	pushf  
    280c:	b1 08                	mov    cl,0x8
    280e:	00 00                	add    BYTE PTR [rax],al
    2810:	20 dc                	and    ah,bl
    2812:	07                   	(bad)  
    2813:	00 00                	add    BYTE PTR [rax],al
    2815:	01 27                	add    DWORD PTR [rdi],esp
    2817:	3d d8 06 00 00       	cmp    eax,0x6d8
    281c:	02 91 48 20 ff 11    	add    dl,BYTE PTR [rcx+0x11ff2048]
    2822:	00 00                	add    BYTE PTR [rax],al
    2824:	01 27                	add    DWORD PTR [rdi],esp
    2826:	50                   	push   rax
    2827:	8e 00                	mov    es,WORD PTR [rax]
    2829:	00 00                	add    BYTE PTR [rax],al
    282b:	02 91 40 20 4d 10    	add    dl,BYTE PTR [rcx+0x104d2040]
    2831:	00 00                	add    BYTE PTR [rax],al
    2833:	01 27                	add    DWORD PTR [rdi],esp
    2835:	61                   	(bad)  
    2836:	8e 00                	mov    es,WORD PTR [rax]
    2838:	00 00                	add    BYTE PTR [rax],al
    283a:	03 91 b8 7f 23 c3    	add    edx,DWORD PTR [rcx-0x3cdc8048]
    2840:	11 00                	adc    DWORD PTR [rax],eax
    2842:	00 01                	add    BYTE PTR [rcx],al
    2844:	29 13                	sub    DWORD PTR [rbx],edx
    2846:	8e 00                	mov    es,WORD PTR [rax]
    2848:	00 00                	add    BYTE PTR [rax],al
    284a:	09 03                	or     DWORD PTR [rbx],eax
    284c:	08 01                	or     BYTE PTR [rcx],al
    284e:	21 00                	and    DWORD PTR [rax],eax
    2850:	00 00                	add    BYTE PTR [rax],al
    2852:	00 00                	add    BYTE PTR [rax],al
    2854:	23 80 02 00 00 01    	and    eax,DWORD PTR [rax+0x1000002]
    285a:	2c 0c                	sub    al,0xc
    285c:	8e 00                	mov    es,WORD PTR [rax]
    285e:	00 00                	add    BYTE PTR [rax],al
    2860:	02 91 60 21 17 28    	add    dl,BYTE PTR [rcx+0x28172160]
    2866:	20 00                	and    BYTE PTR [rax],al
    2868:	00 00                	add    BYTE PTR [rax],al
    286a:	00 00                	add    BYTE PTR [rax],al
    286c:	55                   	push   rbp
    286d:	00 00                	add    BYTE PTR [rax],al
    286f:	00 00                	add    BYTE PTR [rax],al
    2871:	00 00                	add    BYTE PTR [rax],al
    2873:	00 22                	add    BYTE PTR [rdx],ah
    2875:	69 00 01 2e 0f b6    	imul   eax,DWORD PTR [rax],0xb60f2e01
    287b:	00 00                	add    BYTE PTR [rax],al
    287d:	00 02                	add    BYTE PTR [rdx],al
    287f:	91                   	xchg   ecx,eax
    2880:	68 21 29 28 20       	push   0x20282921
    2885:	00 00                	add    BYTE PTR [rax],al
    2887:	00 00                	add    BYTE PTR [rax],al
    2889:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    288c:	00 00                	add    BYTE PTR [rax],al
    288e:	00 00                	add    BYTE PTR [rax],al
    2890:	00 00                	add    BYTE PTR [rax],al
    2892:	23 2b                	and    ebp,DWORD PTR [rbx]
    2894:	0b 00                	or     eax,DWORD PTR [rax]
    2896:	00 01                	add    BYTE PTR [rcx],al
    2898:	2f                   	(bad)  
    2899:	1d fc 07 00 00       	sbb    eax,0x7fc
    289e:	02 91 58 00 00 00    	add    dl,BYTE PTR [rcx+0x58]
    28a4:	29 ac 0f 00 00 01 1f 	sub    DWORD PTR [rdi+rcx*1+0x1f010000],ebp
    28ab:	06                   	(bad)  
    28ac:	5d                   	pop    rbp
    28ad:	11 00                	adc    DWORD PTR [rax],eax
    28af:	00 87 27 20 00 00    	add    BYTE PTR [rdi+0x2027],al
    28b5:	00 00                	add    BYTE PTR [rax],al
    28b7:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
    28ba:	00 00                	add    BYTE PTR [rax],al
    28bc:	00 00                	add    BYTE PTR [rax],al
    28be:	00 00                	add    BYTE PTR [rax],al
    28c0:	01 9c 11 09 00 00 20 	add    DWORD PTR [rcx+rdx*1+0x20000009],ebx
    28c7:	fc                   	cld    
    28c8:	11 00                	adc    DWORD PTR [rax],eax
    28ca:	00 01                	add    BYTE PTR [rcx],al
    28cc:	1f                   	(bad)  
    28cd:	19 8e 00 00 00 02    	sbb    DWORD PTR [rsi+0x2000000],ecx
    28d3:	91                   	xchg   ecx,eax
    28d4:	58                   	pop    rax
    28d5:	20 a1 02 00 00 01    	and    BYTE PTR [rcx+0x1000002],ah
    28db:	1f                   	(bad)  
    28dc:	2c b7                	sub    al,0xb7
    28de:	03 00                	add    eax,DWORD PTR [rax]
    28e0:	00 02                	add    BYTE PTR [rdx],al
    28e2:	91                   	xchg   ecx,eax
    28e3:	50                   	push   rax
    28e4:	21 ad 27 20 00 00    	and    DWORD PTR [rbp+0x2027],ebp
    28ea:	00 00                	add    BYTE PTR [rax],al
    28ec:	00 2a                	add    BYTE PTR [rdx],ch
    28ee:	00 00                	add    BYTE PTR [rax],al
    28f0:	00 00                	add    BYTE PTR [rax],al
    28f2:	00 00                	add    BYTE PTR [rax],al
    28f4:	00 22                	add    BYTE PTR [rdx],ah
    28f6:	69 00 01 23 11 8e    	imul   eax,DWORD PTR [rax],0x8e112301
    28fc:	00 00                	add    BYTE PTR [rax],al
    28fe:	00 02                	add    BYTE PTR [rdx],al
    2900:	91                   	xchg   ecx,eax
    2901:	68 00 00 2a d8       	push   0xffffffffd82a0000
    2906:	10 00                	adc    BYTE PTR [rax],al
    2908:	00 01                	add    BYTE PTR [rcx],al
    290a:	0f                   	prefetch (bad)
    290b:	0d c2 0f 00 00       	or     eax,0xfc2
    2910:	47 09 00             	rex.RXB or DWORD PTR [r8],r8d
    2913:	00 f4                	add    ah,dh
    2915:	26 20 00             	and    BYTE PTR es:[rax],al
    2918:	00 00                	add    BYTE PTR [rax],al
    291a:	00 00                	add    BYTE PTR [rax],al
    291c:	93                   	xchg   ebx,eax
    291d:	00 00                	add    BYTE PTR [rax],al
    291f:	00 00                	add    BYTE PTR [rax],al
    2921:	00 00                	add    BYTE PTR [rax],al
    2923:	00 01                	add    BYTE PTR [rcx],al
    2925:	9c                   	pushf  
    2926:	47 09 00             	rex.RXB or DWORD PTR [r8],r8d
    2929:	00 20                	add    BYTE PTR [rax],ah
    292b:	4f 23 00             	rex.WRXB and r8,QWORD PTR [r8]
    292e:	00 01                	add    BYTE PTR [rcx],al
    2930:	0f 21 76             	mov    rsi,db6
    2933:	00 00                	add    BYTE PTR [rax],al
    2935:	00 02                	add    BYTE PTR [rdx],al
    2937:	91                   	xchg   ecx,eax
    2938:	6c                   	ins    BYTE PTR es:[rdi],dx
    2939:	00 1b                	add    BYTE PTR [rbx],bl
    293b:	08 0f                	or     BYTE PTR [rdi],cl
    293d:	01 00                	add    DWORD PTR [rax],eax
    293f:	00 00                	add    BYTE PTR [rax],al
    2941:	d2 01                	rol    BYTE PTR [rcx],cl
    2943:	00 00                	add    BYTE PTR [rax],al
    2945:	04 00                	add    al,0x0
    2947:	45 0e                	rex.RB (bad) 
    2949:	00 00                	add    BYTE PTR [rax],al
    294b:	08 01                	or     BYTE PTR [rcx],al
    294d:	7c 00                	jl     294f <stivale_hdr-0x1fd6b1>
    294f:	00 00                	add    BYTE PTR [rax],al
    2951:	04 a1                	add    al,0xa1
    2953:	12 00                	adc    al,BYTE PTR [rax]
    2955:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    2958:	00 00                	add    BYTE PTR [rax],al
    295a:	49 2f                	rex.WB (bad) 
    295c:	20 00                	and    BYTE PTR [rax],al
    295e:	00 00                	add    BYTE PTR [rax],al
    2960:	00 00                	add    BYTE PTR [rax],al
    2962:	8e 00                	mov    es,WORD PTR [rax]
    2964:	00 00                	add    BYTE PTR [rax],al
    2966:	00 00                	add    BYTE PTR [rax],al
    2968:	00 00                	add    BYTE PTR [rax],al
    296a:	a8 0f                	test   al,0xf
    296c:	00 00                	add    BYTE PTR [rax],al
    296e:	02 08                	add    cl,BYTE PTR [rax]
    2970:	05 6a 01 00 00       	add    eax,0x16a
    2975:	02 08                	add    cl,BYTE PTR [rax]
    2977:	07                   	(bad)  
    2978:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    297b:	00 02                	add    BYTE PTR [rdx],al
    297d:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 2ae8 <stivale_hdr-0x1fd518>
    2983:	02 10                	add    dl,BYTE PTR [rax]
    2985:	04 8f                	add    al,0x8f
    2987:	01 00                	add    DWORD PTR [rax],eax
    2989:	00 03                	add    BYTE PTR [rbx],al
    298b:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    298e:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    2991:	23 00                	and    eax,DWORD PTR [rax]
    2993:	00 02                	add    BYTE PTR [rdx],al
    2995:	04 1d                	add    al,0x1d
    2997:	5a                   	pop    rdx
    2998:	00 00                	add    BYTE PTR [rax],al
    299a:	00 02                	add    BYTE PTR [rdx],al
    299c:	01 08                	add    DWORD PTR [rax],ecx
    299e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    299f:	00 00                	add    BYTE PTR [rax],al
    29a1:	00 02                	add    BYTE PTR [rdx],al
    29a3:	02 07                	add    al,BYTE PTR [rdi]
    29a5:	9b                   	fwait
    29a6:	01 00                	add    DWORD PTR [rax],eax
    29a8:	00 02                	add    BYTE PTR [rdx],al
    29aa:	04 07                	add    al,0x7
    29ac:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    29af:	00 02                	add    BYTE PTR [rdx],al
    29b1:	10 07                	adc    BYTE PTR [rdi],al
    29b3:	00 00                	add    BYTE PTR [rax],al
    29b5:	00 00                	add    BYTE PTR [rax],al
    29b7:	04 25                	add    al,0x25
    29b9:	00 00                	add    BYTE PTR [rax],al
    29bb:	00 02                	add    BYTE PTR [rdx],al
    29bd:	0d 1d 34 00 00       	or     eax,0x341d
    29c2:	00 02                	add    BYTE PTR [rdx],al
    29c4:	01 06                	add    DWORD PTR [rsi],eax
    29c6:	70 00                	jo     29c8 <stivale_hdr-0x1fd638>
    29c8:	00 00                	add    BYTE PTR [rax],al
    29ca:	02 02                	add    al,BYTE PTR [rdx]
    29cc:	05 73 01 00 00       	add    eax,0x173
    29d1:	05 04 05 69 6e       	add    eax,0x6e690504
    29d6:	74 00                	je     29d8 <stivale_hdr-0x1fd628>
    29d8:	02 10                	add    dl,BYTE PTR [rax]
    29da:	05 1b 01 00 00       	add    eax,0x11b
    29df:	06                   	(bad)  
    29e0:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    29e3:	00 03                	add    BYTE PTR [rbx],al
    29e5:	03 0b                	add    ecx,DWORD PTR [rbx]
    29e7:	f8                   	clc    
    29e8:	00 00                	add    BYTE PTR [rax],al
    29ea:	00 07                	add    BYTE PTR [rdi],al
    29ec:	96                   	xchg   esi,eax
    29ed:	12 00                	adc    al,BYTE PTR [rax]
    29ef:	00 03                	add    BYTE PTR [rbx],al
    29f1:	04 0c                	add    al,0xc
    29f3:	08 cf                	or     bh,cl
    29f5:	1e                   	(bad)  
    29f6:	00 00                	add    BYTE PTR [rax],al
    29f8:	01 09                	add    DWORD PTR [rcx],ecx
    29fa:	07                   	(bad)  
    29fb:	bb 12 00 00 f8       	mov    ebx,0xf8000012
    2a00:	00 00                	add    BYTE PTR [rax],al
    2a02:	00 d6                	add    dh,dl
    2a04:	00 00                	add    BYTE PTR [rax],al
    2a06:	00 09                	add    BYTE PTR [rcx],cl
    2a08:	f8                   	clc    
    2a09:	00 00                	add    BYTE PTR [rax],al
    2a0b:	00 09                	add    BYTE PTR [rcx],cl
    2a0d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    2a10:	00 09                	add    BYTE PTR [rcx],cl
    2a12:	76 00                	jbe    2a14 <stivale_hdr-0x1fd5ec>
    2a14:	00 00                	add    BYTE PTR [rax],al
    2a16:	00 0a                	add    BYTE PTR [rdx],cl
    2a18:	e5 12                	in     eax,0x12
    2a1a:	00 00                	add    BYTE PTR [rax],al
    2a1c:	01 03                	add    DWORD PTR [rbx],eax
    2a1e:	07                   	(bad)  
    2a1f:	ec                   	in     al,dx
    2a20:	12 00                	adc    al,BYTE PTR [rax]
    2a22:	00 f8                	add    al,bh
    2a24:	00 00                	add    BYTE PTR [rax],al
    2a26:	00 09                	add    BYTE PTR [rcx],cl
    2a28:	f8                   	clc    
    2a29:	00 00                	add    BYTE PTR [rax],al
    2a2b:	00 09                	add    BYTE PTR [rcx],cl
    2a2d:	80 01 00             	add    BYTE PTR [rcx],0x0
    2a30:	00 09                	add    BYTE PTR [rcx],cl
    2a32:	76 00                	jbe    2a34 <stivale_hdr-0x1fd5cc>
    2a34:	00 00                	add    BYTE PTR [rax],al
    2a36:	00 00                	add    BYTE PTR [rax],al
    2a38:	00 0b                	add    BYTE PTR [rbx],cl
    2a3a:	08 0c f8             	or     BYTE PTR [rax+rdi*8],cl
    2a3d:	00 00                	add    BYTE PTR [rax],al
    2a3f:	00 0d b2 00 00 00    	add    BYTE PTR [rip+0xb2],cl        # 2af7 <stivale_hdr-0x1fd509>
    2a45:	f8                   	clc    
    2a46:	00 00                	add    BYTE PTR [rax],al
    2a48:	00 8a 2f 20 00 00    	add    BYTE PTR [rdx+0x202f],cl
    2a4e:	00 00                	add    BYTE PTR [rax],al
    2a50:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
    2a53:	00 00                	add    BYTE PTR [rax],al
    2a55:	00 00                	add    BYTE PTR [rax],al
    2a57:	00 00                	add    BYTE PTR [rax],al
    2a59:	01 9c 7a 01 00 00 0e 	add    DWORD PTR [rdx+rdi*2+0xe000001],ebx
    2a60:	de 12                	ficom  WORD PTR [rdx]
    2a62:	00 00                	add    BYTE PTR [rax],al
    2a64:	01 09                	add    DWORD PTR [rcx],ecx
    2a66:	28 f8                	sub    al,bh
    2a68:	00 00                	add    BYTE PTR [rax],al
    2a6a:	00 02                	add    BYTE PTR [rdx],al
    2a6c:	91                   	xchg   ecx,eax
    2a6d:	58                   	pop    rax
    2a6e:	0e                   	(bad)  
    2a6f:	07                   	(bad)  
    2a70:	05 00 00 01 09       	add    eax,0x9010000
    2a75:	35 4e 00 00 00       	xor    eax,0x4e
    2a7a:	02 91 54 0e 97 06    	add    dl,BYTE PTR [rcx+0x6970e54]
    2a80:	00 00                	add    BYTE PTR [rax],al
    2a82:	01 09                	add    DWORD PTR [rcx],ecx
    2a84:	43 76 00             	rex.XB jbe 2a87 <stivale_hdr-0x1fd579>
    2a87:	00 00                	add    BYTE PTR [rax],al
    2a89:	02 91 48 0f 62 75    	add    dl,BYTE PTR [rcx+0x75620f48]
    2a8f:	66 00 01             	data16 add BYTE PTR [rcx],al
    2a92:	0a 08                	or     cl,BYTE PTR [rax]
    2a94:	7a 01                	jp     2a97 <stivale_hdr-0x1fd569>
    2a96:	00 00                	add    BYTE PTR [rax],al
    2a98:	02 91 60 10 a7 2f    	add    dl,BYTE PTR [rcx+0x2fa71060]
    2a9e:	20 00                	and    BYTE PTR [rax],al
    2aa0:	00 00                	add    BYTE PTR [rax],al
    2aa2:	00 00                	add    BYTE PTR [rax],al
    2aa4:	2a 00                	sub    al,BYTE PTR [rax]
    2aa6:	00 00                	add    BYTE PTR [rax],al
    2aa8:	00 00                	add    BYTE PTR [rax],al
    2aaa:	00 00                	add    BYTE PTR [rax],al
    2aac:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    2aaf:	01 0b                	add    DWORD PTR [rbx],ecx
    2ab1:	0e                   	(bad)  
    2ab2:	76 00                	jbe    2ab4 <stivale_hdr-0x1fd54c>
    2ab4:	00 00                	add    BYTE PTR [rax],al
    2ab6:	02 91 68 00 00 11    	add    dl,BYTE PTR [rcx+0x11000068]
    2abc:	08 4e 00             	or     BYTE PTR [rsi+0x0],cl
    2abf:	00 00                	add    BYTE PTR [rax],al
    2ac1:	11 08                	adc    DWORD PTR [rax],ecx
    2ac3:	8b 01                	mov    eax,DWORD PTR [rcx]
    2ac5:	00 00                	add    BYTE PTR [rax],al
    2ac7:	0c 80                	or     al,0x80
    2ac9:	01 00                	add    DWORD PTR [rax],eax
    2acb:	00 12                	add    BYTE PTR [rdx],dl
    2acd:	13 d6                	adc    edx,esi
    2acf:	00 00                	add    BYTE PTR [rax],al
    2ad1:	00 f8                	add    al,bh
    2ad3:	00 00                	add    BYTE PTR [rax],al
    2ad5:	00 49 2f             	add    BYTE PTR [rcx+0x2f],cl
    2ad8:	20 00                	and    BYTE PTR [rax],al
    2ada:	00 00                	add    BYTE PTR [rax],al
    2adc:	00 00                	add    BYTE PTR [rax],al
    2ade:	41 00 00             	add    BYTE PTR [r8],al
    2ae1:	00 00                	add    BYTE PTR [rax],al
    2ae3:	00 00                	add    BYTE PTR [rax],al
    2ae5:	00 01                	add    BYTE PTR [rcx],al
    2ae7:	9c                   	pushf  
    2ae8:	14 64                	adc    al,0x64
    2aea:	73 74                	jae    2b60 <stivale_hdr-0x1fd4a0>
    2aec:	00 01                	add    BYTE PTR [rcx],al
    2aee:	03 33                	add    esi,DWORD PTR [rbx]
    2af0:	fa                   	cli    
    2af1:	00 00                	add    BYTE PTR [rax],al
    2af3:	00 02                	add    BYTE PTR [rdx],al
    2af5:	91                   	xchg   ecx,eax
    2af6:	68 14 73 72 63       	push   0x63727314
    2afb:	00 01                	add    BYTE PTR [rcx],al
    2afd:	03 4f 86             	add    ecx,DWORD PTR [rdi-0x7a]
    2b00:	01 00                	add    DWORD PTR [rax],eax
    2b02:	00 02                	add    BYTE PTR [rdx],al
    2b04:	91                   	xchg   ecx,eax
    2b05:	60                   	(bad)  
    2b06:	0e                   	(bad)  
    2b07:	ce                   	(bad)  
    2b08:	2f                   	(bad)  
    2b09:	00 00                	add    BYTE PTR [rax],al
    2b0b:	01 03                	add    DWORD PTR [rbx],eax
    2b0d:	5b                   	pop    rbx
    2b0e:	76 00                	jbe    2b10 <stivale_hdr-0x1fd4f0>
    2b10:	00 00                	add    BYTE PTR [rax],al
    2b12:	02 91 58 00 00 72    	add    dl,BYTE PTR [rcx+0x72000058]
    2b18:	06                   	(bad)  
    2b19:	00 00                	add    BYTE PTR [rax],al
    2b1b:	04 00                	add    al,0x0
    2b1d:	52                   	push   rdx
    2b1e:	0f 00 00             	sldt   WORD PTR [rax]
    2b21:	08 01                	or     BYTE PTR [rcx],al
    2b23:	7c 00                	jl     2b25 <stivale_hdr-0x1fd4db>
    2b25:	00 00                	add    BYTE PTR [rax],al
    2b27:	04 28                	add    al,0x28
    2b29:	14 00                	adc    al,0x0
    2b2b:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    2b2e:	00 00                	add    BYTE PTR [rax],al
    2b30:	d8 2f                	fsubr  DWORD PTR [rdi]
    2b32:	20 00                	and    BYTE PTR [rax],al
    2b34:	00 00                	add    BYTE PTR [rax],al
    2b36:	00 00                	add    BYTE PTR [rax],al
    2b38:	8e 07                	mov    es,WORD PTR [rdi]
    2b3a:	00 00                	add    BYTE PTR [rax],al
    2b3c:	00 00                	add    BYTE PTR [rax],al
    2b3e:	00 00                	add    BYTE PTR [rax],al
    2b40:	4c 10 00             	rex.WR adc BYTE PTR [rax],r8b
    2b43:	00 02                	add    BYTE PTR [rdx],al
    2b45:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 2cb5 <stivale_hdr-0x1fd34b>
    2b4b:	02 08                	add    cl,BYTE PTR [rax]
    2b4d:	07                   	(bad)  
    2b4e:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    2b51:	00 02                	add    BYTE PTR [rdx],al
    2b53:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 2cbe <stivale_hdr-0x1fd342>
    2b59:	02 10                	add    dl,BYTE PTR [rax]
    2b5b:	04 8f                	add    al,0x8f
    2b5d:	01 00                	add    DWORD PTR [rax],eax
    2b5f:	00 03                	add    BYTE PTR [rbx],al
    2b61:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    2b64:	00 02                	add    BYTE PTR [rdx],al
    2b66:	01 08                	add    DWORD PTR [rax],ecx
    2b68:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b69:	00 00                	add    BYTE PTR [rax],al
    2b6b:	00 02                	add    BYTE PTR [rdx],al
    2b6d:	02 07                	add    al,BYTE PTR [rdi]
    2b6f:	9b                   	fwait
    2b70:	01 00                	add    DWORD PTR [rax],eax
    2b72:	00 02                	add    BYTE PTR [rdx],al
    2b74:	04 07                	add    al,0x7
    2b76:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    2b79:	00 02                	add    BYTE PTR [rdx],al
    2b7b:	10 07                	adc    BYTE PTR [rdi],al
    2b7d:	00 00                	add    BYTE PTR [rax],al
    2b7f:	00 00                	add    BYTE PTR [rax],al
    2b81:	04 5f                	add    al,0x5f
    2b83:	03 00                	add    eax,DWORD PTR [rax]
    2b85:	00 02                	add    BYTE PTR [rdx],al
    2b87:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 2bdb <stivale_hdr-0x1fd425>
    2b8d:	04 4c                	add    al,0x4c
    2b8f:	01 00                	add    DWORD PTR [rax],eax
    2b91:	00 02                	add    BYTE PTR [rdx],al
    2b93:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 2bee <stivale_hdr-0x1fd412>
    2b99:	04 25                	add    al,0x25
    2b9b:	00 00                	add    BYTE PTR [rax],al
    2b9d:	00 02                	add    BYTE PTR [rdx],al
    2b9f:	0d 1d 34 00 00       	or     eax,0x341d
    2ba4:	00 02                	add    BYTE PTR [rdx],al
    2ba6:	01 06                	add    DWORD PTR [rsi],eax
    2ba8:	70 00                	jo     2baa <stivale_hdr-0x1fd456>
    2baa:	00 00                	add    BYTE PTR [rax],al
    2bac:	02 02                	add    al,BYTE PTR [rdx]
    2bae:	05 73 01 00 00       	add    eax,0x173
    2bb3:	05 04 05 69 6e       	add    eax,0x6e690504
    2bb8:	74 00                	je     2bba <stivale_hdr-0x1fd446>
    2bba:	02 10                	add    dl,BYTE PTR [rax]
    2bbc:	05 1b 01 00 00       	add    eax,0x11b
    2bc1:	04 8f                	add    al,0x8f
    2bc3:	22 00                	and    al,BYTE PTR [rax]
    2bc5:	00 02                	add    BYTE PTR [rdx],al
    2bc7:	19 1d 82 00 00 00    	sbb    DWORD PTR [rip+0x82],ebx        # 2c4f <stivale_hdr-0x1fd3b1>
    2bcd:	02 01                	add    al,BYTE PTR [rcx]
    2bcf:	06                   	(bad)  
    2bd0:	77 00                	ja     2bd2 <stivale_hdr-0x1fd42e>
    2bd2:	00 00                	add    BYTE PTR [rax],al
    2bd4:	06                   	(bad)  
    2bd5:	73 79                	jae    2c50 <stivale_hdr-0x1fd3b0>
    2bd7:	73 00                	jae    2bd9 <stivale_hdr-0x1fd427>
    2bd9:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    2bdc:	da 00                	fiadd  DWORD PTR [rax]
    2bde:	00 00                	add    BYTE PTR [rax],al
    2be0:	07                   	(bad)  
    2be1:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
    2be7:	0f 07                	sysret 
    2be9:	48 02 00             	rex.W add al,BYTE PTR [rax]
    2bec:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    2bef:	0f 00 08             	str    WORD PTR [rax]
    2bf2:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    2bf5:	00 07                	add    BYTE PTR [rdi],al
    2bf7:	04 0b                	add    al,0xb
    2bf9:	e2 02                	loop   2bfd <stivale_hdr-0x1fd403>
    2bfb:	00 00                	add    BYTE PTR [rax],al
    2bfd:	09 70 6d             	or     DWORD PTR [rax+0x6d],esi
    2c00:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c01:	00 07                	add    BYTE PTR [rdi],al
    2c03:	05 0c 0a eb 06       	add    eax,0x6eb0a0c
    2c08:	00 00                	add    BYTE PTR [rax],al
    2c0a:	05 09 0c 0b fb       	add    eax,0xfb0b0c09
    2c0f:	05 00 00 07 04       	add    eax,0x4070000
    2c14:	5c                   	pop    rsp
    2c15:	00 00                	add    BYTE PTR [rax],al
    2c17:	00 05 0a 08 4a 01    	add    BYTE PTR [rip+0x14a080a],al        # 14a3427 <__kernel_end+0x1291427>
    2c1d:	00 00                	add    BYTE PTR [rax],al
    2c1f:	0c 89                	or     al,0x89
    2c21:	05 00 00 00 0c       	add    eax,0xc000000
    2c26:	64 07                	fs (bad) 
    2c28:	00 00                	add    BYTE PTR [rax],al
    2c2a:	01 0c 6a             	add    DWORD PTR [rdx+rbp*2],ecx
    2c2d:	04 00                	add    al,0x0
    2c2f:	00 02                	add    BYTE PTR [rdx],al
    2c31:	0c 41                	or     al,0x41
    2c33:	05 00 00 03 0c       	add    eax,0xc030000
    2c38:	86 03                	xchg   BYTE PTR [rbx],al
    2c3a:	00 00                	add    BYTE PTR [rax],al
    2c3c:	04 0c                	add    al,0xc
    2c3e:	9c                   	pushf  
    2c3f:	06                   	(bad)  
    2c40:	00 00                	add    BYTE PTR [rax],al
    2c42:	05 0c 33 04 00       	add    eax,0x4330c
    2c47:	00 07                	add    BYTE PTR [rdi],al
    2c49:	0c 03                	or     al,0x3
    2c4b:	06                   	(bad)  
    2c4c:	00 00                	add    BYTE PTR [rax],al
    2c4e:	09 0c 0c             	or     DWORD PTR [rsp+rcx*1],ecx
    2c51:	06                   	(bad)  
    2c52:	00 00                	add    BYTE PTR [rax],al
    2c54:	0a 0c 15 06 00 00 0b 	or     cl,BYTE PTR [rdx*1+0xb000006]
    2c5b:	0d 6e 78 00 3f       	or     eax,0x3f00786e
    2c60:	00 0e                	add    BYTE PTR [rsi],cl
    2c62:	40 04 00             	add    al,0x0
    2c65:	00 08                	add    BYTE PTR [rax],cl
    2c67:	05 17 0a 04 02       	add    eax,0x2040a17
    2c6c:	00 00                	add    BYTE PTR [rax],al
    2c6e:	0f 07                	sysret 
    2c70:	05 00 00 05 18       	add    eax,0x18050000
    2c75:	0b 82 00 00 00 00    	or     eax,DWORD PTR [rdx+0x0]
    2c7b:	10 55 04             	adc    BYTE PTR [rbp+0x4],dl
    2c7e:	00 00                	add    BYTE PTR [rax],al
    2c80:	05 19 09 a5 06       	add    eax,0x6a50919
    2c85:	00 00                	add    BYTE PTR [rax],al
    2c87:	78 01                	js     2c8a <stivale_hdr-0x1fd376>
    2c89:	00 00                	add    BYTE PTR [rax],al
    2c8b:	88 01                	mov    BYTE PTR [rcx],al
    2c8d:	00 00                	add    BYTE PTR [rax],al
    2c8f:	11 e2                	adc    edx,esp
    2c91:	02 00                	add    al,BYTE PTR [rax]
    2c93:	00 12                	add    BYTE PTR [rdx],dl
    2c95:	f6 00 00             	test   BYTE PTR [rax],0x0
    2c98:	00 12                	add    BYTE PTR [rdx],dl
    2c9a:	ed                   	in     eax,dx
    2c9b:	02 00                	add    al,BYTE PTR [rax]
    2c9d:	00 00                	add    BYTE PTR [rax],al
    2c9f:	13 85 04 00 00 05    	adc    eax,DWORD PTR [rbp+0x5000004]
    2ca5:	1a 09                	sbb    cl,BYTE PTR [rcx]
    2ca7:	f2 06                	repnz (bad) 
    2ca9:	00 00                	add    BYTE PTR [rax],al
    2cab:	ed                   	in     eax,dx
    2cac:	02 00                	add    al,BYTE PTR [rax]
    2cae:	00 a0 01 00 00 ab    	add    BYTE PTR [rax-0x54ffffff],ah
    2cb4:	01 00                	add    DWORD PTR [rax],eax
    2cb6:	00 11                	add    BYTE PTR [rcx],dl
    2cb8:	e2 02                	loop   2cbc <stivale_hdr-0x1fd344>
    2cba:	00 00                	add    BYTE PTR [rax],al
    2cbc:	12 f6                	adc    dh,dh
    2cbe:	00 00                	add    BYTE PTR [rax],al
    2cc0:	00 00                	add    BYTE PTR [rax],al
    2cc2:	10 ff                	adc    bh,bh
    2cc4:	04 00                	add    al,0x0
    2cc6:	00 05 1b 09 bb 05    	add    BYTE PTR [rip+0x5bb091b],al        # 5bb35e7 <__kernel_end+0x59a15e7>
    2ccc:	00 00                	add    BYTE PTR [rax],al
    2cce:	bf 01 00 00 ca       	mov    edi,0xca000001
    2cd3:	01 00                	add    DWORD PTR [rax],eax
    2cd5:	00 11                	add    BYTE PTR [rcx],dl
    2cd7:	e2 02                	loop   2cdb <stivale_hdr-0x1fd325>
    2cd9:	00 00                	add    BYTE PTR [rax],al
    2cdb:	12 6a 00             	adc    ch,BYTE PTR [rdx+0x0]
    2cde:	00 00                	add    BYTE PTR [rax],al
    2ce0:	00 10                	add    BYTE PTR [rax],dl
    2ce2:	5e                   	pop    rsi
    2ce3:	04 00                	add    al,0x0
    2ce5:	00 05 1c 09 c8 04    	add    BYTE PTR [rip+0x4c8091c],al        # 4c83607 <__kernel_end+0x4a71607>
    2ceb:	00 00                	add    BYTE PTR [rax],al
    2ced:	de 01                	fiadd  WORD PTR [rcx]
    2cef:	00 00                	add    BYTE PTR [rax],al
    2cf1:	e9 01 00 00 11       	jmp    11002cf7 <__kernel_end+0x10df0cf7>
    2cf6:	e2 02                	loop   2cfa <stivale_hdr-0x1fd306>
    2cf8:	00 00                	add    BYTE PTR [rax],al
    2cfa:	12 82 00 00 00 00    	adc    al,BYTE PTR [rdx+0x0]
    2d00:	14 74                	adc    al,0x74
    2d02:	06                   	(bad)  
    2d03:	00 00                	add    BYTE PTR [rax],al
    2d05:	05 1d 0b e0 03       	add    eax,0x3e00b1d
    2d0a:	00 00                	add    BYTE PTR [rax],al
    2d0c:	82                   	(bad)  
    2d0d:	00 00                	add    BYTE PTR [rax],al
    2d0f:	00 fd                	add    ch,bh
    2d11:	01 00                	add    DWORD PTR [rax],eax
    2d13:	00 11                	add    BYTE PTR [rcx],dl
    2d15:	e2 02                	loop   2d19 <stivale_hdr-0x1fd2e7>
    2d17:	00 00                	add    BYTE PTR [rax],al
    2d19:	00 00                	add    BYTE PTR [rax],al
    2d1b:	15 91 05 00 00       	adc    eax,0x591
    2d20:	00 10                	add    BYTE PTR [rax],dl
    2d22:	00 10                	add    BYTE PTR [rax],dl
    2d24:	05 20 0a 22 02       	add    eax,0x2220a20
    2d29:	00 00                	add    BYTE PTR [rax],al
    2d2b:	0f e8 21             	psubsb mm4,QWORD PTR [rcx]
    2d2e:	00 00                	add    BYTE PTR [rax],al
    2d30:	05 21 19 f4 02       	add    eax,0x2f41921
    2d35:	00 00                	add    BYTE PTR [rax],al
    2d37:	00 00                	add    BYTE PTR [rax],al
    2d39:	16                   	(bad)  
    2d3a:	dc 13                	fcom   QWORD PTR [rbx]
    2d3c:	00 00                	add    BYTE PTR [rax],al
    2d3e:	20 05 24 09 88 02    	and    BYTE PTR [rip+0x2880924],al        # 2883668 <__kernel_end+0x2671668>
    2d44:	00 00                	add    BYTE PTR [rax],al
    2d46:	17                   	(bad)  
    2d47:	dc 13                	fcom   QWORD PTR [rbx]
    2d49:	00 00                	add    BYTE PTR [rax],al
    2d4b:	05 26 04 47 14       	add    eax,0x14470426
    2d50:	00 00                	add    BYTE PTR [rax],al
    2d52:	01 44 02 00          	add    DWORD PTR [rdx+rax*1+0x0],eax
    2d56:	00 4f 02             	add    BYTE PTR [rdi+0x2],cl
    2d59:	00 00                	add    BYTE PTR [rax],al
    2d5b:	11 05 03 00 00 12    	adc    DWORD PTR [rip+0x12000003],eax        # 12002d64 <__kernel_end+0x11df0d64>
    2d61:	82                   	(bad)  
    2d62:	00 00                	add    BYTE PTR [rax],al
    2d64:	00 00                	add    BYTE PTR [rax],al
    2d66:	18 83 13 00 00 05    	sbb    BYTE PTR [rbx+0x5000013],al
    2d6c:	27                   	(bad)  
    2d6d:	0b 82 00 00 00 00    	or     eax,DWORD PTR [rdx+0x0]
    2d73:	01 18                	add    DWORD PTR [rax],ebx
    2d75:	23 14 00             	and    edx,DWORD PTR [rax+rax*1]
    2d78:	00 05 28 0b 82 00    	add    BYTE PTR [rip+0x820b28],al        # 8238a6 <__kernel_end+0x6118a6>
    2d7e:	00 00                	add    BYTE PTR [rax],al
    2d80:	08 01                	or     BYTE PTR [rcx],al
    2d82:	18 07                	sbb    BYTE PTR [rdi],al
    2d84:	14 00                	adc    al,0x0
    2d86:	00 05 29 0b 82 00    	add    BYTE PTR [rip+0x820b29],al        # 8238b5 <__kernel_end+0x6118b5>
    2d8c:	00 00                	add    BYTE PTR [rax],al
    2d8e:	10 01                	adc    BYTE PTR [rcx],al
    2d90:	19 70 5f             	sbb    DWORD PTR [rax+0x5f],esi
    2d93:	69 00 05 2a 0b 82    	imul   eax,DWORD PTR [rax],0x820b2a05
    2d99:	00 00                	add    BYTE PTR [rax],al
    2d9b:	00 18                	add    BYTE PTR [rax],bl
    2d9d:	01 00                	add    DWORD PTR [rax],eax
    2d9f:	1a 5e 07             	sbb    bl,BYTE PTR [rsi+0x7]
    2da2:	00 00                	add    BYTE PTR [rax],al
    2da4:	05 2d 16 4f 05       	add    eax,0x54f162d
    2da9:	00 00                	add    BYTE PTR [rax],al
    2dab:	10 03                	adc    BYTE PTR [rbx],al
    2dad:	00 00                	add    BYTE PTR [rax],al
    2daf:	1b 6f 14             	sbb    ebp,DWORD PTR [rdi+0x14]
    2db2:	00 00                	add    BYTE PTR [rax],al
    2db4:	01 8a 11 aa 02 00    	add    DWORD PTR [rdx+0x2aa11],ecx
    2dba:	00 12                	add    BYTE PTR [rdx],dl
    2dbc:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2dbf:	00 00                	add    BYTE PTR [rax],al
    2dc1:	1c 46                	sbb    al,0x46
    2dc3:	13 00                	adc    eax,DWORD PTR [rax]
    2dc5:	00 01                	add    BYTE PTR [rcx],al
    2dc7:	61                   	(bad)  
    2dc8:	07                   	(bad)  
    2dc9:	b1 13                	mov    cl,0x13
    2dcb:	00 00                	add    BYTE PTR [rax],al
    2dcd:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2dd0:	00 c4                	add    ah,al
    2dd2:	02 00                	add    al,BYTE PTR [rax]
    2dd4:	00 12                	add    BYTE PTR [rdx],dl
    2dd6:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2dd9:	00 00                	add    BYTE PTR [rax],al
    2ddb:	1d fc 13 00 00       	sbb    eax,0x13fc
    2de0:	01 25 06 11 13 00    	add    DWORD PTR [rip+0x131106],esp        # 133eec <stivale_hdr-0xcc114>
    2de6:	00 12                	add    BYTE PTR [rdx],dl
    2de8:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2deb:	00 12                	add    BYTE PTR [rdx],dl
    2ded:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2df0:	00 12                	add    BYTE PTR [rdx],dl
    2df2:	ed                   	in     eax,dx
    2df3:	02 00                	add    al,BYTE PTR [rax]
    2df5:	00 00                	add    BYTE PTR [rax],al
    2df7:	00 00                	add    BYTE PTR [rax],al
    2df9:	1e                   	(bad)  
    2dfa:	08 4a 01             	or     BYTE PTR [rdx+0x1],cl
    2dfd:	00 00                	add    BYTE PTR [rax],al
    2dff:	1f                   	(bad)  
    2e00:	e2 02                	loop   2e04 <stivale_hdr-0x1fd1fc>
    2e02:	00 00                	add    BYTE PTR [rax],al
    2e04:	02 01                	add    al,BYTE PTR [rcx]
    2e06:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    2e09:	00 00                	add    BYTE PTR [rax],al
    2e0b:	20 4a 01             	and    BYTE PTR [rdx+0x1],cl
    2e0e:	00 00                	add    BYTE PTR [rax],al
    2e10:	05 03 00 00 21       	add    eax,0x21000003
    2e15:	34 00                	xor    al,0x0
    2e17:	00 00                	add    BYTE PTR [rax],al
    2e19:	ff 01                	inc    DWORD PTR [rcx]
    2e1b:	00 1e                	add    BYTE PTR [rsi],bl
    2e1d:	08 22                	or     BYTE PTR [rdx],ah
    2e1f:	02 00                	add    al,BYTE PTR [rax]
    2e21:	00 1f                	add    BYTE PTR [rdi],bl
    2e23:	05 03 00 00 1e       	add    eax,0x1e000003
    2e28:	08 04 02             	or     BYTE PTR [rdx+rax*1],al
    2e2b:	00 00                	add    BYTE PTR [rax],al
    2e2d:	07                   	(bad)  
    2e2e:	95                   	xchg   ebp,eax
    2e2f:	07                   	(bad)  
    2e30:	00 00                	add    BYTE PTR [rax],al
    2e32:	06                   	(bad)  
    2e33:	04 0b                	add    al,0xb
    2e35:	22 88 02 00 00 01    	and    cl,BYTE PTR [rax+0x1000002]
    2e3b:	12 1d 09 03 10 01    	adc    bl,BYTE PTR [rip+0x1100309]        # 110314a <__kernel_end+0xef114a>
    2e41:	21 00                	and    DWORD PTR [rax],eax
    2e43:	00 00                	add    BYTE PTR [rax],al
    2e45:	00 00                	add    BYTE PTR [rax],al
    2e47:	23 ab 01 00 00 01    	and    ebp,DWORD PTR [rbx+0x1000001]
    2e4d:	b4 06                	mov    ah,0x6
    2e4f:	52                   	push   rdx
    2e50:	03 00                	add    eax,DWORD PTR [rax]
    2e52:	00 e8                	add    al,ch
    2e54:	36 20 00             	and    BYTE PTR ss:[rax],al
    2e57:	00 00                	add    BYTE PTR [rax],al
    2e59:	00 00                	add    BYTE PTR [rax],al
    2e5b:	7e 00                	jle    2e5d <stivale_hdr-0x1fd1a3>
    2e5d:	00 00                	add    BYTE PTR [rax],al
    2e5f:	00 00                	add    BYTE PTR [rax],al
    2e61:	00 00                	add    BYTE PTR [rax],al
    2e63:	01 9c 6e 03 00 00 24 	add    DWORD PTR [rsi+rbp*2+0x24000003],ebx
    2e6a:	d6                   	(bad)  
    2e6b:	0e                   	(bad)  
    2e6c:	00 00                	add    BYTE PTR [rax],al
    2e6e:	e8 02 00 00 02       	call   2002e75 <__kernel_end+0x1df0e75>
    2e73:	91                   	xchg   ecx,eax
    2e74:	68 25 89 1f 00       	push   0x1f8925
    2e79:	00 01                	add    BYTE PTR [rcx],al
    2e7b:	b4 3b                	mov    ah,0x3b
    2e7d:	6a 00                	push   0x0
    2e7f:	00 00                	add    BYTE PTR [rax],al
    2e81:	02 91 64 00 26 ca    	add    dl,BYTE PTR [rcx-0x35d9ff9c]
    2e87:	01 00                	add    DWORD PTR [rax],eax
    2e89:	00 01                	add    BYTE PTR [rcx],al
    2e8b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2e8c:	06                   	(bad)  
    2e8d:	90                   	nop
    2e8e:	03 00                	add    eax,DWORD PTR [rax]
    2e90:	00 92 36 20 00 00    	add    BYTE PTR [rdx+0x2036],dl
    2e96:	00 00                	add    BYTE PTR [rax],al
    2e98:	00 55 00             	add    BYTE PTR [rbp+0x0],dl
    2e9b:	00 00                	add    BYTE PTR [rax],al
    2e9d:	00 00                	add    BYTE PTR [rax],al
    2e9f:	00 00                	add    BYTE PTR [rax],al
    2ea1:	01 9c ac 03 00 00 24 	add    DWORD PTR [rsp+rbp*4+0x24000003],ebx
    2ea8:	d6                   	(bad)  
    2ea9:	0e                   	(bad)  
    2eaa:	00 00                	add    BYTE PTR [rax],al
    2eac:	e8 02 00 00 02       	call   2002eb3 <__kernel_end+0x1df0eb3>
    2eb1:	91                   	xchg   ecx,eax
    2eb2:	68 25 3e 14 00       	push   0x143e25
    2eb7:	00 01                	add    BYTE PTR [rcx],al
    2eb9:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2eba:	40 aa                	stos   BYTE PTR es:[rdi],al
    2ebc:	00 00                	add    BYTE PTR [rax],al
    2ebe:	00 02                	add    BYTE PTR [rdx],al
    2ec0:	91                   	xchg   ecx,eax
    2ec1:	60                   	(bad)  
    2ec2:	00 26                	add    BYTE PTR [rsi],ah
    2ec4:	e9 01 00 00 01       	jmp    1002eca <__kernel_end+0xdf0eca>
    2ec9:	a8 08                	test   al,0x8
    2ecb:	ce                   	(bad)  
    2ecc:	03 00                	add    eax,DWORD PTR [rax]
    2ece:	00 70 36             	add    BYTE PTR [rax+0x36],dh
    2ed1:	20 00                	and    BYTE PTR [rax],al
    2ed3:	00 00                	add    BYTE PTR [rax],al
    2ed5:	00 00                	add    BYTE PTR [rax],al
    2ed7:	22 00                	and    al,BYTE PTR [rax]
    2ed9:	00 00                	add    BYTE PTR [rax],al
    2edb:	00 00                	add    BYTE PTR [rax],al
    2edd:	00 00                	add    BYTE PTR [rax],al
    2edf:	01 9c db 03 00 00 24 	add    DWORD PTR [rbx+rbx*8+0x24000003],ebx
    2ee6:	d6                   	(bad)  
    2ee7:	0e                   	(bad)  
    2ee8:	00 00                	add    BYTE PTR [rax],al
    2eea:	e8 02 00 00 02       	call   2002ef1 <__kernel_end+0x1df0ef1>
    2eef:	91                   	xchg   ecx,eax
    2ef0:	68 00 26 88 01       	push   0x1882600
    2ef5:	00 00                	add    BYTE PTR [rax],al
    2ef7:	01 a2 06 fd 03 00    	add    DWORD PTR [rdx+0x3fd06],esp
    2efd:	00 3a                	add    BYTE PTR [rdx],bh
    2eff:	36 20 00             	and    BYTE PTR ss:[rax],al
    2f02:	00 00                	add    BYTE PTR [rax],al
    2f04:	00 00                	add    BYTE PTR [rax],al
    2f06:	36 00 00             	add    BYTE PTR ss:[rax],al
    2f09:	00 00                	add    BYTE PTR [rax],al
    2f0b:	00 00                	add    BYTE PTR [rax],al
    2f0d:	00 01                	add    BYTE PTR [rcx],al
    2f0f:	9c                   	pushf  
    2f10:	28 04 00             	sub    BYTE PTR [rax+rax*1],al
    2f13:	00 24 d6             	add    BYTE PTR [rsi+rdx*8],ah
    2f16:	0e                   	(bad)  
    2f17:	00 00                	add    BYTE PTR [rax],al
    2f19:	e8 02 00 00 02       	call   2002f20 <__kernel_end+0x1df0f20>
    2f1e:	91                   	xchg   ecx,eax
    2f1f:	58                   	pop    rax
    2f20:	25 89 04 00 00       	and    eax,0x489
    2f25:	01 a2 3d f6 00 00    	add    DWORD PTR [rdx+0xf63d],esp
    2f2b:	00 02                	add    BYTE PTR [rdx],al
    2f2d:	91                   	xchg   ecx,eax
    2f2e:	54                   	push   rsp
    2f2f:	27                   	(bad)  
    2f30:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    2f31:	13 00                	adc    eax,DWORD PTR [rax]
    2f33:	00 01                	add    BYTE PTR [rcx],al
    2f35:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    2f36:	0c 82                	or     al,0x82
    2f38:	00 00                	add    BYTE PTR [rax],al
    2f3a:	00 02                	add    BYTE PTR [rdx],al
    2f3c:	91                   	xchg   ecx,eax
    2f3d:	68 00 26 64 01       	push   0x1642600
    2f42:	00 00                	add    BYTE PTR [rax],al
    2f44:	01 9a 06 4a 04 00    	add    DWORD PTR [rdx+0x44a06],ebx
    2f4a:	00 dc                	add    ah,bl
    2f4c:	35 20 00 00 00       	xor    eax,0x20
    2f51:	00 00                	add    BYTE PTR [rax],al
    2f53:	5e                   	pop    rsi
    2f54:	00 00                	add    BYTE PTR [rax],al
    2f56:	00 00                	add    BYTE PTR [rax],al
    2f58:	00 00                	add    BYTE PTR [rax],al
    2f5a:	00 01                	add    BYTE PTR [rcx],al
    2f5c:	9c                   	pushf  
    2f5d:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2f60:	00 24 d6             	add    BYTE PTR [rsi+rdx*8],ah
    2f63:	0e                   	(bad)  
    2f64:	00 00                	add    BYTE PTR [rax],al
    2f66:	e8 02 00 00 02       	call   2002f6d <__kernel_end+0x1df0f6d>
    2f6b:	91                   	xchg   ecx,eax
    2f6c:	58                   	pop    rax
    2f6d:	25 89 04 00 00       	and    eax,0x489
    2f72:	01 9a 3d f6 00 00    	add    DWORD PTR [rdx+0xf63d],ebx
    2f78:	00 02                	add    BYTE PTR [rdx],al
    2f7a:	91                   	xchg   ecx,eax
    2f7b:	54                   	push   rsp
    2f7c:	25 1b 14 00 00       	and    eax,0x141b
    2f81:	01 9a 48 ed 02 00    	add    DWORD PTR [rdx+0x2ed48],ebx
    2f87:	00 02                	add    BYTE PTR [rdx],al
    2f89:	91                   	xchg   ecx,eax
    2f8a:	50                   	push   rax
    2f8b:	27                   	(bad)  
    2f8c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    2f8d:	13 00                	adc    eax,DWORD PTR [rax]
    2f8f:	00 01                	add    BYTE PTR [rcx],al
    2f91:	9c                   	pushf  
    2f92:	0c 82                	or     al,0x82
    2f94:	00 00                	add    BYTE PTR [rax],al
    2f96:	00 02                	add    BYTE PTR [rdx],al
    2f98:	91                   	xchg   ecx,eax
    2f99:	68 00 28 08 29       	push   0x29082800
    2f9e:	98                   	cwde   
    2f9f:	02 00                	add    al,BYTE PTR [rax]
    2fa1:	00 b8 34 20 00 00    	add    BYTE PTR [rax+0x2034],bh
    2fa7:	00 00                	add    BYTE PTR [rax],al
    2fa9:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    2fac:	00 00                	add    BYTE PTR [rax],al
    2fae:	00 00                	add    BYTE PTR [rax],al
    2fb0:	00 00                	add    BYTE PTR [rax],al
    2fb2:	01 9c fd 04 00 00 25 	add    DWORD PTR [rbp+rdi*8+0x25000004],ebx
    2fb9:	36 13 00             	adc    eax,DWORD PTR ss:[rax]
    2fbc:	00 01                	add    BYTE PTR [rcx],al
    2fbe:	8a 3b                	mov    bh,BYTE PTR [rbx]
    2fc0:	84 04 00             	test   BYTE PTR [rax+rax*1],al
    2fc3:	00 03                	add    BYTE PTR [rbx],al
    2fc5:	91                   	xchg   ecx,eax
    2fc6:	98                   	cwde   
    2fc7:	7f 27                	jg     2ff0 <stivale_hdr-0x1fd010>
    2fc9:	e5 13                	in     eax,0x13
    2fcb:	00 00                	add    BYTE PTR [rax],al
    2fcd:	01 8c 16 22 02 00 00 	add    DWORD PTR [rsi+rdx*1+0x222],ecx
    2fd4:	03 91 b0 7f 2a 70    	add    edx,DWORD PTR [rcx+0x702a7fb0]
    2fda:	64 65 00 01          	fs add BYTE PTR gs:[rcx],al
    2fde:	8d 1a                	lea    ebx,[rdx]
    2fe0:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
    2fe3:	00 03                	add    BYTE PTR [rbx],al
    2fe5:	91                   	xchg   ecx,eax
    2fe6:	a8 7f                	test   al,0x7f
    2fe8:	2a 70 64             	sub    dh,BYTE PTR [rax+0x64]
    2feb:	70 00                	jo     2fed <stivale_hdr-0x1fd013>
    2fed:	01 90 11 10 03 00    	add    DWORD PTR [rax+0x31011],edx
    2ff3:	00 02                	add    BYTE PTR [rdx],al
    2ff5:	91                   	xchg   ecx,eax
    2ff6:	68 2a 70 64 00       	push   0x64702a
    2ffb:	01 93 11 10 03 00    	add    DWORD PTR [rbx+0x31011],edx
    3001:	00 02                	add    BYTE PTR [rdx],al
    3003:	91                   	xchg   ecx,eax
    3004:	60                   	(bad)  
    3005:	2a 70 74             	sub    dh,BYTE PTR [rax+0x74]
    3008:	00 01                	add    BYTE PTR [rcx],al
    300a:	96                   	xchg   esi,eax
    300b:	11 10                	adc    DWORD PTR [rax],edx
    300d:	03 00                	add    eax,DWORD PTR [rax]
    300f:	00 02                	add    BYTE PTR [rdx],al
    3011:	91                   	xchg   ecx,eax
    3012:	58                   	pop    rax
    3013:	00 2b                	add    BYTE PTR [rbx],ch
    3015:	aa                   	stos   BYTE PTR es:[rdi],al
    3016:	02 00                	add    al,BYTE PTR [rax]
    3018:	00 84 04 00 00 64 33 	add    BYTE PTR [rsp+rax*1+0x33640000],al
    301f:	20 00                	and    BYTE PTR [rax],al
    3021:	00 00                	add    BYTE PTR [rax],al
    3023:	00 00                	add    BYTE PTR [rax],al
    3025:	54                   	push   rsp
    3026:	01 00                	add    DWORD PTR [rax],eax
    3028:	00 00                	add    BYTE PTR [rax],al
    302a:	00 00                	add    BYTE PTR [rax],al
    302c:	00 01                	add    BYTE PTR [rcx],al
    302e:	9c                   	pushf  
    302f:	87 05 00 00 25 36    	xchg   DWORD PTR [rip+0x36250000],eax        # 36253035 <__kernel_end+0x36041035>
    3035:	13 00                	adc    eax,DWORD PTR [rax]
    3037:	00 01                	add    BYTE PTR [rcx],al
    3039:	61                   	(bad)  
    303a:	32 84 04 00 00 03 91 	xor    al,BYTE PTR [rsp+rax*1-0x6efd0000]
    3041:	98                   	cwde   
    3042:	7f 27                	jg     306b <stivale_hdr-0x1fcf95>
    3044:	e5 13                	in     eax,0x13
    3046:	00 00                	add    BYTE PTR [rax],al
    3048:	01 63 16             	add    DWORD PTR [rbx+0x16],esp
    304b:	22 02                	and    al,BYTE PTR [rdx]
    304d:	00 00                	add    BYTE PTR [rax],al
    304f:	03 91 b0 7f 2a 70    	add    edx,DWORD PTR [rcx+0x702a7fb0]
    3055:	64 65 00 01          	fs add BYTE PTR gs:[rcx],al
    3059:	64 1a 4a 01          	sbb    cl,BYTE PTR fs:[rdx+0x1]
    305d:	00 00                	add    BYTE PTR [rax],al
    305f:	03 91 a8 7f 27 0c    	add    edx,DWORD PTR [rcx+0xc277fa8]
    3065:	14 00                	adc    al,0x0
    3067:	00 01                	add    BYTE PTR [rcx],al
    3069:	66 0c 76             	data16 or al,0x76
    306c:	00 00                	add    BYTE PTR [rax],al
    306e:	00 02                	add    BYTE PTR [rdx],al
    3070:	91                   	xchg   ecx,eax
    3071:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3072:	2a 70 64             	sub    dh,BYTE PTR [rax+0x64]
    3075:	70 00                	jo     3077 <stivale_hdr-0x1fcf89>
    3077:	01 6a 11             	add    DWORD PTR [rdx+0x11],ebp
    307a:	10 03                	adc    BYTE PTR [rbx],al
    307c:	00 00                	add    BYTE PTR [rax],al
    307e:	02 91 60 2a 70 64    	add    dl,BYTE PTR [rcx+0x64702a60]
    3084:	00 01                	add    BYTE PTR [rcx],al
    3086:	73 11                	jae    3099 <stivale_hdr-0x1fcf67>
    3088:	10 03                	adc    BYTE PTR [rbx],al
    308a:	00 00                	add    BYTE PTR [rax],al
    308c:	02 91 58 2a 70 74    	add    dl,BYTE PTR [rcx+0x74702a58]
    3092:	00 01                	add    BYTE PTR [rcx],al
    3094:	7b 11                	jnp    30a7 <stivale_hdr-0x1fcf59>
    3096:	10 03                	adc    BYTE PTR [rbx],al
    3098:	00 00                	add    BYTE PTR [rax],al
    309a:	02 91 50 00 29 c4    	add    dl,BYTE PTR [rcx-0x3bd6ffb0]
    30a0:	02 00                	add    al,BYTE PTR [rax]
    30a2:	00 4e 30             	add    BYTE PTR [rsi+0x30],cl
    30a5:	20 00                	and    BYTE PTR [rax],al
    30a7:	00 00                	add    BYTE PTR [rax],al
    30a9:	00 00                	add    BYTE PTR [rax],al
    30ab:	16                   	(bad)  
    30ac:	03 00                	add    eax,DWORD PTR [rax]
    30ae:	00 00                	add    BYTE PTR [rax],al
    30b0:	00 00                	add    BYTE PTR [rax],al
    30b2:	00 01                	add    BYTE PTR [rcx],al
    30b4:	9c                   	pushf  
    30b5:	1e                   	(bad)  
    30b6:	06                   	(bad)  
    30b7:	00 00                	add    BYTE PTR [rax],al
    30b9:	25 ed 13 00 00       	and    eax,0x13ed
    30be:	01 25 27 84 04 00    	add    DWORD PTR [rip+0x48427],esp        # 4b4eb <stivale_hdr-0x1b4b15>
    30c4:	00 03                	add    BYTE PTR [rbx],al
    30c6:	91                   	xchg   ecx,eax
    30c7:	98                   	cwde   
    30c8:	7f 25                	jg     30ef <stivale_hdr-0x1fcf11>
    30ca:	94                   	xchg   esp,eax
    30cb:	13 00                	adc    eax,DWORD PTR [rax]
    30cd:	00 01                	add    BYTE PTR [rcx],al
    30cf:	25 3d 84 04 00       	and    eax,0x4843d
    30d4:	00 03                	add    BYTE PTR [rbx],al
    30d6:	91                   	xchg   ecx,eax
    30d7:	90                   	nop
    30d8:	7f 25                	jg     30ff <stivale_hdr-0x1fcf01>
    30da:	89 13                	mov    DWORD PTR [rbx],edx
    30dc:	00 00                	add    BYTE PTR [rax],al
    30de:	01 25 53 ed 02 00    	add    DWORD PTR [rip+0x2ed53],esp        # 31e37 <stivale_hdr-0x1ce1c9>
    30e4:	00 03                	add    BYTE PTR [rbx],al
    30e6:	91                   	xchg   ecx,eax
    30e7:	8c 7f 27             	mov    WORD PTR [rdi+0x27],?
    30ea:	e5 13                	in     eax,0x13
    30ec:	00 00                	add    BYTE PTR [rax],al
    30ee:	01 27                	add    DWORD PTR [rdi],esp
    30f0:	16                   	(bad)  
    30f1:	22 02                	and    al,BYTE PTR [rdx]
    30f3:	00 00                	add    BYTE PTR [rax],al
    30f5:	03 91 b0 7f 2a 70    	add    edx,DWORD PTR [rcx+0x702a7fb0]
    30fb:	64 65 00 01          	fs add BYTE PTR gs:[rcx],al
    30ff:	28 1a                	sub    BYTE PTR [rdx],bl
    3101:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
    3104:	00 03                	add    BYTE PTR [rbx],al
    3106:	91                   	xchg   ecx,eax
    3107:	a8 7f                	test   al,0x7f
    3109:	2a 70 64             	sub    dh,BYTE PTR [rax+0x64]
    310c:	70 00                	jo     310e <stivale_hdr-0x1fcef2>
    310e:	01 2b                	add    DWORD PTR [rbx],ebp
    3110:	11 10                	adc    DWORD PTR [rax],edx
    3112:	03 00                	add    eax,DWORD PTR [rax]
    3114:	00 02                	add    BYTE PTR [rdx],al
    3116:	91                   	xchg   ecx,eax
    3117:	68 2a 70 64 00       	push   0x64702a
    311c:	01 3b                	add    DWORD PTR [rbx],edi
    311e:	11 10                	adc    DWORD PTR [rax],edx
    3120:	03 00                	add    eax,DWORD PTR [rax]
    3122:	00 02                	add    BYTE PTR [rdx],al
    3124:	91                   	xchg   ecx,eax
    3125:	60                   	(bad)  
    3126:	2a 70 74             	sub    dh,BYTE PTR [rax+0x74]
    3129:	00 01                	add    BYTE PTR [rcx],al
    312b:	4a 11 10             	rex.WX adc QWORD PTR [rax],rdx
    312e:	03 00                	add    eax,DWORD PTR [rax]
    3130:	00 02                	add    BYTE PTR [rdx],al
    3132:	91                   	xchg   ecx,eax
    3133:	58                   	pop    rax
    3134:	00 2c 2f             	add    BYTE PTR [rdi+rbp*1],ch
    3137:	02 00                	add    al,BYTE PTR [rax]
    3139:	00 01                	add    BYTE PTR [rcx],al
    313b:	19 01                	sbb    DWORD PTR [rcx],eax
    313d:	2f                   	(bad)  
    313e:	06                   	(bad)  
    313f:	00 00                	add    BYTE PTR [rax],al
    3141:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    3144:	00 00                	add    BYTE PTR [rax],al
    3146:	2d d6 0e 00 00       	sub    eax,0xed6
    314b:	0b 03                	or     eax,DWORD PTR [rbx]
    314d:	00 00                	add    BYTE PTR [rax],al
    314f:	2e 36 13 00          	cs adc eax,DWORD PTR ss:[rax]
    3153:	00 01                	add    BYTE PTR [rcx],al
    3155:	19 3b                	sbb    DWORD PTR [rbx],edi
    3157:	82                   	(bad)  
    3158:	00 00                	add    BYTE PTR [rax],al
    315a:	00 00                	add    BYTE PTR [rax],al
    315c:	2f                   	(bad)  
    315d:	1e                   	(bad)  
    315e:	06                   	(bad)  
    315f:	00 00                	add    BYTE PTR [rax],al
    3161:	5b                   	pop    rbx
    3162:	13 00                	adc    eax,DWORD PTR [rax]
    3164:	00 64 06 00          	add    BYTE PTR [rsi+rax*1+0x0],ah
    3168:	00 d8                	add    al,bl
    316a:	2f                   	(bad)  
    316b:	20 00                	and    BYTE PTR [rax],al
    316d:	00 00                	add    BYTE PTR [rax],al
    316f:	00 00                	add    BYTE PTR [rax],al
    3171:	76 00                	jbe    3173 <stivale_hdr-0x1fce8d>
    3173:	00 00                	add    BYTE PTR [rax],al
    3175:	00 00                	add    BYTE PTR [rax],al
    3177:	00 00                	add    BYTE PTR [rax],al
    3179:	01 9c 30 2f 06 00 00 	add    DWORD PTR [rax+rsi*1+0x62f],ebx
    3180:	02 91 68 30 38 06    	add    dl,BYTE PTR [rcx+0x6383068]
    3186:	00 00                	add    BYTE PTR [rax],al
    3188:	02 91 60 00 00 90    	add    dl,BYTE PTR [rcx-0x6fffffa0]
    318e:	02 00                	add    al,BYTE PTR [rax]
    3190:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    3193:	49 12 00             	rex.WB adc al,BYTE PTR [r8]
    3196:	00 08                	add    BYTE PTR [rax],cl
    3198:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    319c:	00 04 e9             	add    BYTE PTR [rcx+rbp*8],al
    319f:	14 00                	adc    al,0x0
    31a1:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    31a4:	00 00                	add    BYTE PTR [rax],al
    31a6:	66 37                	data16 (bad) 
    31a8:	20 00                	and    BYTE PTR [rax],al
    31aa:	00 00                	add    BYTE PTR [rax],al
    31ac:	00 00                	add    BYTE PTR [rax],al
    31ae:	0a 01                	or     al,BYTE PTR [rcx]
    31b0:	00 00                	add    BYTE PTR [rax],al
    31b2:	00 00                	add    BYTE PTR [rax],al
    31b4:	00 00                	add    BYTE PTR [rax],al
    31b6:	43 13 00             	rex.XB adc eax,DWORD PTR [r8]
    31b9:	00 02                	add    BYTE PTR [rdx],al
    31bb:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 332b <stivale_hdr-0x1fccd5>
    31c1:	02 08                	add    cl,BYTE PTR [rax]
    31c3:	07                   	(bad)  
    31c4:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    31c7:	00 02                	add    BYTE PTR [rdx],al
    31c9:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 3334 <stivale_hdr-0x1fcccc>
    31cf:	02 10                	add    dl,BYTE PTR [rax]
    31d1:	04 8f                	add    al,0x8f
    31d3:	01 00                	add    DWORD PTR [rax],eax
    31d5:	00 03                	add    BYTE PTR [rbx],al
    31d7:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    31da:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    31dd:	23 00                	and    eax,DWORD PTR [rax]
    31df:	00 03                	add    BYTE PTR [rbx],al
    31e1:	04 1d                	add    al,0x1d
    31e3:	5a                   	pop    rdx
    31e4:	00 00                	add    BYTE PTR [rax],al
    31e6:	00 02                	add    BYTE PTR [rdx],al
    31e8:	01 08                	add    DWORD PTR [rax],ecx
    31ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31eb:	00 00                	add    BYTE PTR [rax],al
    31ed:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
    31f0:	08 00                	or     BYTE PTR [rax],al
    31f2:	00 03                	add    BYTE PTR [rbx],al
    31f4:	05 1d 6d 00 00       	add    eax,0x6d1d
    31f9:	00 02                	add    BYTE PTR [rdx],al
    31fb:	02 07                	add    al,BYTE PTR [rdi]
    31fd:	9b                   	fwait
    31fe:	01 00                	add    DWORD PTR [rax],eax
    3200:	00 02                	add    BYTE PTR [rdx],al
    3202:	04 07                	add    al,0x7
    3204:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    3207:	00 02                	add    BYTE PTR [rdx],al
    3209:	10 07                	adc    BYTE PTR [rdi],al
    320b:	00 00                	add    BYTE PTR [rax],al
    320d:	00 00                	add    BYTE PTR [rax],al
    320f:	04 4c                	add    al,0x4c
    3211:	01 00                	add    DWORD PTR [rax],eax
    3213:	00 03                	add    BYTE PTR [rbx],al
    3215:	0b 1d 6d 00 00 00    	or     ebx,DWORD PTR [rip+0x6d]        # 3288 <stivale_hdr-0x1fcd78>
    321b:	04 e5                	add    al,0xe5
    321d:	02 00                	add    al,BYTE PTR [rax]
    321f:	00 03                	add    BYTE PTR [rbx],al
    3221:	0c 1d                	or     al,0x1d
    3223:	74 00                	je     3225 <stivale_hdr-0x1fcddb>
    3225:	00 00                	add    BYTE PTR [rax],al
    3227:	04 25                	add    al,0x25
    3229:	00 00                	add    BYTE PTR [rax],al
    322b:	00 03                	add    BYTE PTR [rbx],al
    322d:	0d 1d 34 00 00       	or     eax,0x341d
    3232:	00 02                	add    BYTE PTR [rdx],al
    3234:	01 06                	add    DWORD PTR [rsi],eax
    3236:	70 00                	jo     3238 <stivale_hdr-0x1fcdc8>
    3238:	00 00                	add    BYTE PTR [rax],al
    323a:	02 02                	add    al,BYTE PTR [rdx]
    323c:	05 73 01 00 00       	add    eax,0x173
    3241:	05 04 05 69 6e       	add    eax,0x6e690504
    3246:	74 00                	je     3248 <stivale_hdr-0x1fcdb8>
    3248:	02 10                	add    dl,BYTE PTR [rax]
    324a:	05 1b 01 00 00       	add    eax,0x11b
    324f:	04 3b                	add    al,0x3b
    3251:	02 00                	add    al,BYTE PTR [rax]
    3253:	00 03                	add    BYTE PTR [rbx],al
    3255:	17                   	(bad)  
    3256:	1d 9a 00 00 00       	sbb    eax,0x9a
    325b:	06                   	(bad)  
    325c:	69 6f 00 01 04 0b 72 	imul   ebp,DWORD PTR [rdi+0x0],0x720b0401
    3263:	01 00                	add    DWORD PTR [rax],eax
    3265:	00 06                	add    BYTE PTR [rsi],al
    3267:	70 69                	jo     32d2 <stivale_hdr-0x1fcd2e>
    3269:	74 00                	je     326b <stivale_hdr-0x1fcd95>
    326b:	04 06                	add    al,0x6
    326d:	0f 5e 01             	divps  xmm0,XMMWORD PTR [rcx]
    3270:	00 00                	add    BYTE PTR [rax],al
    3272:	07                   	(bad)  
    3273:	b4 14                	mov    ah,0x14
    3275:	00 00                	add    BYTE PTR [rax],al
    3277:	04 0a                	add    al,0xa
    3279:	17                   	(bad)  
    327a:	18 0d 00 00 8e 00    	sbb    BYTE PTR [rip+0x8e0000],cl        # 8e3280 <__kernel_end+0x6d1280>
    3280:	00 00                	add    BYTE PTR [rax],al
    3282:	07                   	(bad)  
    3283:	19 15 00 00 04 0b    	sbb    DWORD PTR [rip+0xb040000],edx        # b043289 <__kernel_end+0xae31289>
    3289:	17                   	(bad)  
    328a:	02 15 00 00 82 00    	add    dl,BYTE PTR [rip+0x820000]        # 823290 <__kernel_end+0x611290>
    3290:	00 00                	add    BYTE PTR [rax],al
    3292:	07                   	(bad)  
    3293:	b1 14                	mov    cl,0x14
    3295:	00 00                	add    BYTE PTR [rax],al
    3297:	04 0c                	add    al,0xc
    3299:	17                   	(bad)  
    329a:	83 14 00 00          	adc    DWORD PTR [rax+rax*1],0x0
    329e:	8e 00                	mov    es,WORD PTR [rax]
    32a0:	00 00                	add    BYTE PTR [rax],al
    32a2:	07                   	(bad)  
    32a3:	16                   	(bad)  
    32a4:	15 00 00 04 0d       	adc    eax,0xd040000
    32a9:	17                   	(bad)  
    32aa:	21 15 00 00 82 00    	and    DWORD PTR [rip+0x820000],edx        # 8232b0 <__kernel_end+0x6112b0>
    32b0:	00 00                	add    BYTE PTR [rax],al
    32b2:	08 a0 14 00 00 02    	or     BYTE PTR [rax+0x2000014],ah
    32b8:	19 06                	sbb    DWORD PTR [rsi],eax
    32ba:	39 15 00 00 3b 01    	cmp    DWORD PTR [rip+0x13b0000],edx        # 13b32c0 <__kernel_end+0x11a12c0>
    32c0:	00 00                	add    BYTE PTR [rax],al
    32c2:	09 8e 00 00 00 00    	or     DWORD PTR [rsi+0x0],ecx
    32c8:	08 58 15             	or     BYTE PTR [rax+0x15],bl
    32cb:	00 00                	add    BYTE PTR [rax],al
    32cd:	02 0e                	add    cl,BYTE PTR [rsi]
    32cf:	06                   	(bad)  
    32d0:	c1 14 00 00          	rcl    DWORD PTR [rax+rax*1],0x0
    32d4:	51                   	push   rcx
    32d5:	01 00                	add    DWORD PTR [rax],eax
    32d7:	00 09                	add    BYTE PTR [rcx],cl
    32d9:	8e 00                	mov    es,WORD PTR [rax]
    32db:	00 00                	add    BYTE PTR [rax],al
    32dd:	00 0a                	add    BYTE PTR [rdx],cl
    32df:	e0 14                	loopne 32f5 <stivale_hdr-0x1fcd0b>
    32e1:	00 00                	add    BYTE PTR [rax],al
    32e3:	02 09                	add    cl,BYTE PTR [rcx]
    32e5:	06                   	(bad)  
    32e6:	69 15 00 00 00 0b 78 	imul   edx,DWORD PTR [rip+0xb000000],0xc78        # b0032f0 <__kernel_end+0xadf12f0>
    32ed:	0c 00 00 
    32f0:	01 05 18 09 61 00    	add    DWORD PTR [rip+0x610918],eax        # 613c0e <__kernel_end+0x401c0e>
    32f6:	00 00                	add    BYTE PTR [rax],al
    32f8:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    32fb:	00 00                	add    BYTE PTR [rax],al
    32fd:	00 00                	add    BYTE PTR [rax],al
    32ff:	06                   	(bad)  
    3300:	73 79                	jae    337b <stivale_hdr-0x1fcc85>
    3302:	73 00                	jae    3304 <stivale_hdr-0x1fccfc>
    3304:	04 11                	add    al,0x11
    3306:	0b 94 01 00 00 0c f3 	or     edx,DWORD PTR [rcx+rax*1-0xcf40000]
    330d:	01 00                	add    DWORD PTR [rax],eax
    330f:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    3312:	0f 0d 12             	prefetchwt1 BYTE PTR [rdx]
    3315:	0c 00                	or     al,0x0
    3317:	00 04 13             	add    BYTE PTR [rbx+rdx*1],al
    331a:	19 c2                	sbb    edx,eax
    331c:	00 00                	add    BYTE PTR [rax],al
    331e:	00 00                	add    BYTE PTR [rax],al
    3320:	00 0e                	add    BYTE PTR [rsi],cl
    3322:	f5                   	cmc    
    3323:	00 00                	add    BYTE PTR [rax],al
    3325:	00 02                	add    BYTE PTR [rdx],al
    3327:	04 08                	add    al,0x8
    3329:	09 03                	or     DWORD PTR [rbx],eax
    332b:	18 01                	sbb    BYTE PTR [rcx],al
    332d:	21 00                	and    DWORD PTR [rax],eax
    332f:	00 00                	add    BYTE PTR [rax],al
    3331:	00 00                	add    BYTE PTR [rax],al
    3333:	0e                   	(bad)  
    3334:	e5 00                	in     eax,0x0
    3336:	00 00                	add    BYTE PTR [rax],al
    3338:	02 05 08 09 03 1c    	add    al,BYTE PTR [rip+0x1c030908]        # 1c033c46 <__kernel_end+0x1be21c46>
    333e:	01 21                	add    DWORD PTR [rcx],esp
    3340:	00 00                	add    BYTE PTR [rax],al
    3342:	00 00                	add    BYTE PTR [rax],al
    3344:	00 0e                	add    BYTE PTR [rsi],cl
    3346:	15 01 00 00 02       	adc    eax,0x2000001
    334b:	06                   	(bad)  
    334c:	08 09                	or     BYTE PTR [rcx],cl
    334e:	03 20                	add    esp,DWORD PTR [rax]
    3350:	01 21                	add    DWORD PTR [rcx],esp
    3352:	00 00                	add    BYTE PTR [rax],al
    3354:	00 00                	add    BYTE PTR [rax],al
    3356:	00 0e                	add    BYTE PTR [rsi],cl
    3358:	05 01 00 00 02       	add    eax,0x2000001
    335d:	07                   	(bad)  
    335e:	08 09                	or     BYTE PTR [rcx],cl
    3360:	03 24 01             	add    esp,DWORD PTR [rcx+rax*1]
    3363:	21 00                	and    DWORD PTR [rax],eax
    3365:	00 00                	add    BYTE PTR [rax],al
    3367:	00 00                	add    BYTE PTR [rax],al
    3369:	0f 86 01 00 00 02    	jbe    2003370 <__kernel_end+0x1df1370>
    336f:	24 08                	and    al,0x8
    3371:	9a                   	(bad)  
    3372:	00 00                	add    BYTE PTR [rax],al
    3374:	00 09                	add    BYTE PTR [rcx],cl
    3376:	03 28                	add    ebp,DWORD PTR [rax]
    3378:	01 21                	add    DWORD PTR [rcx],esp
    337a:	00 00                	add    BYTE PTR [rax],al
    337c:	00 00                	add    BYTE PTR [rax],al
    337e:	00 10                	add    BYTE PTR [rax],dl
    3380:	25 01 00 00 04       	and    eax,0x4000001
    3385:	38 20                	cmp    BYTE PTR [rax],ah
    3387:	00 00                	add    BYTE PTR [rax],al
    3389:	00 00                	add    BYTE PTR [rax],al
    338b:	00 6c 00 00          	add    BYTE PTR [rax+rax*1+0x0],ch
    338f:	00 00                	add    BYTE PTR [rax],al
    3391:	00 00                	add    BYTE PTR [rax],al
    3393:	00 01                	add    BYTE PTR [rcx],al
    3395:	9c                   	pushf  
    3396:	1c 02                	sbb    al,0x2
    3398:	00 00                	add    BYTE PTR [rax],al
    339a:	11 68 7a             	adc    DWORD PTR [rax+0x7a],ebp
    339d:	00 02                	add    BYTE PTR [rdx],al
    339f:	19 27                	sbb    DWORD PTR [rdi],esp
    33a1:	8e 00                	mov    es,WORD PTR [rax]
    33a3:	00 00                	add    BYTE PTR [rax],al
    33a5:	02 91 6c 00 10 3b    	add    dl,BYTE PTR [rcx+0x3b10006c]
    33ab:	01 00                	add    DWORD PTR [rax],eax
    33ad:	00 98 37 20 00 00    	add    BYTE PTR [rax+0x2037],bl
    33b3:	00 00                	add    BYTE PTR [rax],al
    33b5:	00 6c 00 00          	add    BYTE PTR [rax+rax*1+0x0],ch
    33b9:	00 00                	add    BYTE PTR [rax],al
    33bb:	00 00                	add    BYTE PTR [rax],al
    33bd:	00 01                	add    BYTE PTR [rcx],al
    33bf:	9c                   	pushf  
    33c0:	46 02 00             	rex.RX add r8b,BYTE PTR [rax]
    33c3:	00 11                	add    BYTE PTR [rcx],dl
    33c5:	68 7a 00 02 0e       	push   0xe02007a
    33ca:	27                   	(bad)  
    33cb:	8e 00                	mov    es,WORD PTR [rax]
    33cd:	00 00                	add    BYTE PTR [rax],al
    33cf:	02 91 6c 00 12 51    	add    dl,BYTE PTR [rcx+0x5112006c]
    33d5:	01 00                	add    DWORD PTR [rax],eax
    33d7:	00 87 37 20 00 00    	add    BYTE PTR [rdi+0x2037],al
    33dd:	00 00                	add    BYTE PTR [rax],al
    33df:	00 11                	add    BYTE PTR [rcx],dl
    33e1:	00 00                	add    BYTE PTR [rax],al
    33e3:	00 00                	add    BYTE PTR [rax],al
    33e5:	00 00                	add    BYTE PTR [rax],al
    33e7:	00 01                	add    BYTE PTR [rcx],al
    33e9:	9c                   	pushf  
    33ea:	13 5e 01             	adc    ebx,DWORD PTR [rsi+0x1]
    33ed:	00 00                	add    BYTE PTR [rax],al
    33ef:	66 37                	data16 (bad) 
    33f1:	20 00                	and    BYTE PTR [rax],al
    33f3:	00 00                	add    BYTE PTR [rax],al
    33f5:	00 00                	add    BYTE PTR [rax],al
    33f7:	21 00                	and    DWORD PTR [rax],eax
    33f9:	00 00                	add    BYTE PTR [rax],al
    33fb:	00 00                	add    BYTE PTR [rax],al
    33fd:	00 00                	add    BYTE PTR [rax],al
    33ff:	01 9c 14 fb 33 00 00 	add    DWORD PTR [rsp+rdx*1+0x33fb],ebx
    3406:	01 05 22 61 00 00    	add    DWORD PTR [rip+0x6122],eax        # 952e <stivale_hdr-0x1f6ad2>
    340c:	00 02                	add    BYTE PTR [rdx],al
    340e:	91                   	xchg   ecx,eax
    340f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3410:	11 76 61             	adc    DWORD PTR [rsi+0x61],esi
    3413:	6c                   	ins    BYTE PTR es:[rdi],dx
    3414:	00 01                	add    BYTE PTR [rcx],al
    3416:	05 2d 4e 00 00       	add    eax,0x4e2d
    341b:	00 02                	add    BYTE PTR [rdx],al
    341d:	91                   	xchg   ecx,eax
    341e:	68 00 00 8b 03       	push   0x38b0000
    3423:	00 00                	add    BYTE PTR [rax],al
    3425:	04 00                	add    al,0x0
    3427:	7f 13                	jg     343c <stivale_hdr-0x1fcbc4>
    3429:	00 00                	add    BYTE PTR [rax],al
    342b:	08 01                	or     BYTE PTR [rcx],al
    342d:	7c 00                	jl     342f <stivale_hdr-0x1fcbd1>
    342f:	00 00                	add    BYTE PTR [rax],al
    3431:	04 a8                	add    al,0xa8
    3433:	15 00 00 24 01       	adc    eax,0x1240000
    3438:	00 00                	add    BYTE PTR [rax],al
    343a:	70 38                	jo     3474 <stivale_hdr-0x1fcb8c>
    343c:	20 00                	and    BYTE PTR [rax],al
    343e:	00 00                	add    BYTE PTR [rax],al
    3440:	00 00                	add    BYTE PTR [rax],al
    3442:	f2 00 00             	repnz add BYTE PTR [rax],al
    3445:	00 00                	add    BYTE PTR [rax],al
    3447:	00 00                	add    BYTE PTR [rax],al
    3449:	00 09                	add    BYTE PTR [rcx],cl
    344b:	14 00                	adc    al,0x0
    344d:	00 02                	add    BYTE PTR [rdx],al
    344f:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 35bf <stivale_hdr-0x1fca41>
    3455:	02 08                	add    cl,BYTE PTR [rax]
    3457:	07                   	(bad)  
    3458:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    345b:	00 02                	add    BYTE PTR [rdx],al
    345d:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 35c8 <stivale_hdr-0x1fca38>
    3463:	02 10                	add    dl,BYTE PTR [rax]
    3465:	04 8f                	add    al,0x8f
    3467:	01 00                	add    DWORD PTR [rax],eax
    3469:	00 03                	add    BYTE PTR [rbx],al
    346b:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    346e:	00 02                	add    BYTE PTR [rdx],al
    3470:	01 08                	add    DWORD PTR [rax],ecx
    3472:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3473:	00 00                	add    BYTE PTR [rax],al
    3475:	00 02                	add    BYTE PTR [rdx],al
    3477:	02 07                	add    al,BYTE PTR [rdi]
    3479:	9b                   	fwait
    347a:	01 00                	add    DWORD PTR [rax],eax
    347c:	00 02                	add    BYTE PTR [rdx],al
    347e:	04 07                	add    al,0x7
    3480:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    3483:	00 02                	add    BYTE PTR [rdx],al
    3485:	10 07                	adc    BYTE PTR [rdi],al
    3487:	00 00                	add    BYTE PTR [rax],al
    3489:	00 00                	add    BYTE PTR [rax],al
    348b:	04 5f                	add    al,0x5f
    348d:	03 00                	add    eax,DWORD PTR [rax]
    348f:	00 02                	add    BYTE PTR [rdx],al
    3491:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 34e5 <stivale_hdr-0x1fcb1b>
    3497:	04 4c                	add    al,0x4c
    3499:	01 00                	add    DWORD PTR [rax],eax
    349b:	00 02                	add    BYTE PTR [rdx],al
    349d:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 34f8 <stivale_hdr-0x1fcb08>
    34a3:	04 e5                	add    al,0xe5
    34a5:	02 00                	add    al,BYTE PTR [rax]
    34a7:	00 02                	add    BYTE PTR [rdx],al
    34a9:	0c 1d                	or     al,0x1d
    34ab:	5c                   	pop    rsp
    34ac:	00 00                	add    BYTE PTR [rax],al
    34ae:	00 04 25 00 00 00 02 	add    BYTE PTR ds:0x2000000,al
    34b5:	0d 1d 34 00 00       	or     eax,0x341d
    34ba:	00 02                	add    BYTE PTR [rdx],al
    34bc:	01 06                	add    DWORD PTR [rsi],eax
    34be:	70 00                	jo     34c0 <stivale_hdr-0x1fcb40>
    34c0:	00 00                	add    BYTE PTR [rax],al
    34c2:	02 02                	add    al,BYTE PTR [rdx]
    34c4:	05 73 01 00 00       	add    eax,0x173
    34c9:	05 04 05 69 6e       	add    eax,0x6e690504
    34ce:	74 00                	je     34d0 <stivale_hdr-0x1fcb30>
    34d0:	02 10                	add    dl,BYTE PTR [rax]
    34d2:	05 1b 01 00 00       	add    eax,0x11b
    34d7:	04 3b                	add    al,0x3b
    34d9:	02 00                	add    al,BYTE PTR [rax]
    34db:	00 02                	add    BYTE PTR [rdx],al
    34dd:	17                   	(bad)  
    34de:	1d 8e 00 00 00       	sbb    eax,0x8e
    34e3:	04 8f                	add    al,0x8f
    34e5:	22 00                	and    al,BYTE PTR [rax]
    34e7:	00 02                	add    BYTE PTR [rdx],al
    34e9:	19 1d 8e 00 00 00    	sbb    DWORD PTR [rip+0x8e],ebx        # 357d <stivale_hdr-0x1fca83>
    34ef:	06                   	(bad)  
    34f0:	69 6f 00 04 04 0b 89 	imul   ebp,DWORD PTR [rdi+0x0],0x890b0404
    34f7:	01 00                	add    DWORD PTR [rax],eax
    34f9:	00 07                	add    BYTE PTR [rdi],al
    34fb:	16                   	(bad)  
    34fc:	03 00                	add    eax,DWORD PTR [rax]
    34fe:	00 03                	add    BYTE PTR [rbx],al
    3500:	09 0c 80             	or     DWORD PTR [rax+rax*4],ecx
    3503:	01 00                	add    DWORD PTR [rax],eax
    3505:	00 08                	add    BYTE PTR [rax],cl
    3507:	7c 16                	jl     351f <stivale_hdr-0x1fcae1>
    3509:	00 00                	add    BYTE PTR [rax],al
    350b:	02 03                	add    al,BYTE PTR [rbx]
    350d:	0e                   	(bad)  
    350e:	0a 09                	or     cl,BYTE PTR [rcx]
    3510:	f4                   	hlt    
    3511:	15 00 00 03 0f       	adc    eax,0xf030000
    3516:	12 4e 00             	adc    cl,BYTE PTR [rsi+0x0]
    3519:	00 00                	add    BYTE PTR [rax],al
    351b:	01 08                	add    DWORD PTR [rax],ecx
    351d:	00 00                	add    BYTE PTR [rax],al
    351f:	09 6b 16             	or     DWORD PTR [rbx+0x16],ebp
    3522:	00 00                	add    BYTE PTR [rax],al
    3524:	03 10                	add    edx,DWORD PTR [rax]
    3526:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    352c:	01 07                	add    DWORD PTR [rdi],eax
    352e:	01 09                	add    DWORD PTR [rcx],ecx
    3530:	7f 15                	jg     3547 <stivale_hdr-0x1fcab9>
    3532:	00 00                	add    BYTE PTR [rax],al
    3534:	03 11                	add    edx,DWORD PTR [rcx]
    3536:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    353c:	01 06                	add    DWORD PTR [rsi],eax
    353e:	01 09                	add    DWORD PTR [rcx],ecx
    3540:	0a 16                	or     dl,BYTE PTR [rsi]
    3542:	00 00                	add    BYTE PTR [rax],al
    3544:	03 12                	add    edx,DWORD PTR [rdx]
    3546:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    354c:	01 05 01 09 c3 15    	add    DWORD PTR [rip+0x15c30901],eax        # 15c33e53 <__kernel_end+0x15a21e53>
    3552:	00 00                	add    BYTE PTR [rax],al
    3554:	03 13                	add    edx,DWORD PTR [rbx]
    3556:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    355c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    355f:	09 1e                	or     DWORD PTR [rsi],ebx
    3561:	16                   	(bad)  
    3562:	00 00                	add    BYTE PTR [rax],al
    3564:	03 14 09             	add    edx,DWORD PTR [rcx+rcx*1]
    3567:	89 01                	mov    DWORD PTR [rcx],eax
    3569:	00 00                	add    BYTE PTR [rax],al
    356b:	01 01                	add    DWORD PTR [rcx],eax
    356d:	03 01                	add    eax,DWORD PTR [rcx]
    356f:	09 14 16             	or     DWORD PTR [rsi+rdx*1],edx
    3572:	00 00                	add    BYTE PTR [rax],al
    3574:	03 15 09 89 01 00    	add    edx,DWORD PTR [rip+0x18909]        # 1be83 <stivale_hdr-0x1e417d>
    357a:	00 01                	add    BYTE PTR [rcx],al
    357c:	01 02                	add    DWORD PTR [rdx],eax
    357e:	01 09                	add    DWORD PTR [rcx],ecx
    3580:	5f                   	pop    rdi
    3581:	16                   	(bad)  
    3582:	00 00                	add    BYTE PTR [rax],al
    3584:	03 16                	add    edx,DWORD PTR [rsi]
    3586:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    358c:	01 01                	add    DWORD PTR [rcx],eax
    358e:	01 09                	add    DWORD PTR [rcx],ecx
    3590:	cc                   	int3   
    3591:	15 00 00 03 17       	adc    eax,0x17030000
    3596:	09 89 01 00 00 01    	or     DWORD PTR [rcx+0x1000001],ecx
    359c:	01 00                	add    DWORD PTR [rax],eax
    359e:	01 00                	add    DWORD PTR [rax],eax
    35a0:	00 0a                	add    BYTE PTR [rdx],cl
    35a2:	74 74                	je     3618 <stivale_hdr-0x1fc9e8>
    35a4:	79 00                	jns    35a6 <stivale_hdr-0x1fca5a>
    35a6:	0a 0e                	or     cl,BYTE PTR [rsi]
    35a8:	0f 00 02             	sldt   WORD PTR [rdx]
    35ab:	01 02                	add    DWORD PTR [rdx],eax
    35ad:	61                   	(bad)  
    35ae:	02 00                	add    al,BYTE PTR [rax]
    35b0:	00 06                	add    BYTE PTR [rsi],al
    35b2:	73 79                	jae    362d <stivale_hdr-0x1fc9d3>
    35b4:	73 00                	jae    35b6 <stivale_hdr-0x1fca4a>
    35b6:	05 04 0b a5 01       	add    eax,0x1a50b04
    35bb:	00 00                	add    BYTE PTR [rax],al
    35bd:	0b 69 00             	or     ebp,DWORD PTR [rcx+0x0]
    35c0:	00 00                	add    BYTE PTR [rax],al
    35c2:	05 05 0f 00 02       	add    eax,0x2000f05
    35c7:	01 06                	add    DWORD PTR [rsi],eax
    35c9:	77 00                	ja     35cb <stivale_hdr-0x1fca35>
    35cb:	00 00                	add    BYTE PTR [rax],al
    35cd:	0c 4d                	or     al,0x4d
    35cf:	06                   	(bad)  
    35d0:	00 00                	add    BYTE PTR [rax],al
    35d2:	10 06                	adc    BYTE PTR [rsi],al
    35d4:	2d 08 fb 01 00       	sub    eax,0x1fb08
    35d9:	00 0d c5 01 00 00    	add    BYTE PTR [rip+0x1c5],cl        # 37a4 <stivale_hdr-0x1fc85c>
    35df:	06                   	(bad)  
    35e0:	2e 0d c2 00 00 00    	cs or  eax,0xc2
    35e6:	00 0d c3 02 00 00    	add    BYTE PTR [rip+0x2c3],cl        # 38af <stivale_hdr-0x1fc751>
    35ec:	06                   	(bad)  
    35ed:	2f                   	(bad)  
    35ee:	0d 76 00 00 00       	or     eax,0x76
    35f3:	08 0d 53 01 00 00    	or     BYTE PTR [rip+0x153],cl        # 374c <stivale_hdr-0x1fc8b4>
    35f9:	06                   	(bad)  
    35fa:	30 0d 76 00 00 00    	xor    BYTE PTR [rip+0x76],cl        # 3676 <stivale_hdr-0x1fc98a>
    3600:	0a 0d 12 00 00 00    	or     cl,BYTE PTR [rip+0x12]        # 3618 <stivale_hdr-0x1fc9e8>
    3606:	06                   	(bad)  
    3607:	31 0d 76 00 00 00    	xor    DWORD PTR [rip+0x76],ecx        # 3683 <stivale_hdr-0x1fc97d>
    360d:	0c 0d                	or     al,0xd
    360f:	59                   	pop    rcx
    3610:	00 00                	add    BYTE PTR [rax],al
    3612:	00 06                	add    BYTE PTR [rsi],al
    3614:	32 0d 76 00 00 00    	xor    cl,BYTE PTR [rip+0x76]        # 3690 <stivale_hdr-0x1fc970>
    361a:	0e                   	(bad)  
    361b:	00 07                	add    BYTE PTR [rdi],al
    361d:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    3620:	00 07                	add    BYTE PTR [rdi],al
    3622:	04 0b                	add    al,0xb
    3624:	3d 02 00 00 06       	cmp    eax,0x6000002
    3629:	70 6d                	jo     3698 <stivale_hdr-0x1fc968>
    362b:	6d                   	ins    DWORD PTR es:[rdi],dx
    362c:	00 07                	add    BYTE PTR [rdi],al
    362e:	05 0c 34 02 00       	add    eax,0x2340c
    3633:	00 0e                	add    BYTE PTR [rsi],cl
    3635:	47 0f 00 00          	rex.RXB sldt WORD PTR [r8]
    3639:	07                   	(bad)  
    363a:	06                   	(bad)  
    363b:	0f a1                	pop    fs
    363d:	10 00                	adc    BYTE PTR [rax],al
    363f:	00 b6 00 00 00 0e    	add    BYTE PTR [rsi+0xe000000],dh
    3645:	7f 11                	jg     3658 <stivale_hdr-0x1fc9a8>
    3647:	00 00                	add    BYTE PTR [rax],al
    3649:	07                   	(bad)  
    364a:	08 0f                	or     BYTE PTR [rdi],cl
    364c:	3a 11                	cmp    dl,BYTE PTR [rcx]
    364e:	00 00                	add    BYTE PTR [rax],al
    3650:	b6 00                	mov    dh,0x0
    3652:	00 00                	add    BYTE PTR [rax],al
    3654:	00 0b                	add    BYTE PTR [rbx],cl
    3656:	eb 06                	jmp    365e <stivale_hdr-0x1fc9a2>
    3658:	00 00                	add    BYTE PTR [rax],al
    365a:	08 09                	or     BYTE PTR [rcx],cl
    365c:	0c 00                	or     al,0x0
    365e:	06                   	(bad)  
    365f:	67 66 78 00          	addr32 data16 js 3663 <stivale_hdr-0x1fc99d>
    3663:	09 08                	or     DWORD PTR [rax],ecx
    3665:	0b 62 02             	or     esp,DWORD PTR [rdx+0x2]
    3668:	00 00                	add    BYTE PTR [rax],al
    366a:	0f 67 6f 70          	packuswb mm5,QWORD PTR [rdi+0x70]
    366e:	00 09                	add    BYTE PTR [rcx],cl
    3670:	0b 22                	or     esp,DWORD PTR [rdx]
    3672:	51                   	push   rcx
    3673:	07                   	(bad)  
    3674:	00 00                	add    BYTE PTR [rax],al
    3676:	ac                   	lods   al,BYTE PTR ds:[rsi]
    3677:	01 00                	add    DWORD PTR [rax],eax
    3679:	00 0b                	add    BYTE PTR [rbx],cl
    367b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    367c:	02 00                	add    al,BYTE PTR [rax]
    367e:	00 09                	add    BYTE PTR [rcx],cl
    3680:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
    3683:	10 08                	adc    BYTE PTR [rax],cl
    3685:	82                   	(bad)  
    3686:	00 00                	add    BYTE PTR [rax],al
    3688:	00 11                	add    BYTE PTR [rcx],dl
    368a:	87 15 00 00 07 04    	xchg   DWORD PTR [rip+0x4070000],edx        # 4073690 <__kernel_end+0x3e61690>
    3690:	5c                   	pop    rsp
    3691:	00 00                	add    BYTE PTR [rax],al
    3693:	00 01                	add    BYTE PTR [rcx],al
    3695:	1e                   	(bad)  
    3696:	06                   	(bad)  
    3697:	87 02                	xchg   DWORD PTR [rdx],eax
    3699:	00 00                	add    BYTE PTR [rax],al
    369b:	12 ea                	adc    ch,dl
    369d:	15 00 00 00 12       	adc    eax,0x12000000
    36a2:	43 16                	rex.XB (bad) 
    36a4:	00 00                	add    BYTE PTR [rax],al
    36a6:	01 00                	add    DWORD PTR [rax],eax
    36a8:	13 96 15 00 00 01    	adc    edx,DWORD PTR [rsi+0x1000015]
    36ae:	35 12 b9 02 00       	xor    eax,0x2b912
    36b3:	00 3f                	add    BYTE PTR [rdi],bh
    36b5:	39 20                	cmp    DWORD PTR [rax],esp
    36b7:	00 00                	add    BYTE PTR [rax],al
    36b9:	00 00                	add    BYTE PTR [rax],al
    36bb:	00 23                	add    BYTE PTR [rbx],ah
    36bd:	00 00                	add    BYTE PTR [rax],al
    36bf:	00 00                	add    BYTE PTR [rax],al
    36c1:	00 00                	add    BYTE PTR [rax],al
    36c3:	00 01                	add    BYTE PTR [rcx],al
    36c5:	9c                   	pushf  
    36c6:	b9 02 00 00 14       	mov    ecx,0x14000002
    36cb:	48 10 00             	rex.W adc BYTE PTR [rax],al
    36ce:	00 01                	add    BYTE PTR [rcx],al
    36d0:	37                   	(bad)  
    36d1:	0b b9 02 00 00 02    	or     edi,DWORD PTR [rcx+0x2000002]
    36d7:	91                   	xchg   ecx,eax
    36d8:	68 00 15 08 16       	push   0x16081500
    36dd:	51                   	push   rcx
    36de:	16                   	(bad)  
    36df:	00 00                	add    BYTE PTR [rax],al
    36e1:	01 30                	add    DWORD PTR [rax],esi
    36e3:	11 24 39             	adc    DWORD PTR [rcx+rdi*1],esp
    36e6:	20 00                	and    BYTE PTR [rax],al
    36e8:	00 00                	add    BYTE PTR [rax],al
    36ea:	00 00                	add    BYTE PTR [rax],al
    36ec:	1b 00                	sbb    eax,DWORD PTR [rax]
    36ee:	00 00                	add    BYTE PTR [rax],al
    36f0:	00 00                	add    BYTE PTR [rax],al
    36f2:	00 00                	add    BYTE PTR [rax],al
    36f4:	01 9c e9 02 00 00 17 	add    DWORD PTR [rcx+rbp*8+0x17000002],ebx
    36fb:	4c 16                	rex.WR (bad) 
    36fd:	00 00                	add    BYTE PTR [rax],al
    36ff:	01 30                	add    DWORD PTR [rax],esi
    3701:	25 e9 02 00 00       	and    eax,0x2e9
    3706:	02 91 68 00 10 08    	add    dl,BYTE PTR [rcx+0x8100068]
    370c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    370d:	01 00                	add    DWORD PTR [rax],eax
    370f:	00 18                	add    BYTE PTR [rax],bl
    3711:	fd                   	std    
    3712:	15 00 00 01 23       	adc    eax,0x23010000
    3717:	13 8e 00 00 00 e9    	adc    ecx,DWORD PTR [rsi-0x17000000]
    371d:	38 20                	cmp    BYTE PTR [rax],ah
    371f:	00 00                	add    BYTE PTR [rax],al
    3721:	00 00                	add    BYTE PTR [rax],al
    3723:	00 3b                	add    BYTE PTR [rbx],bh
    3725:	00 00                	add    BYTE PTR [rax],al
    3727:	00 00                	add    BYTE PTR [rax],al
    3729:	00 00                	add    BYTE PTR [rax],al
    372b:	00 01                	add    BYTE PTR [rcx],al
    372d:	9c                   	pushf  
    372e:	21 03                	and    DWORD PTR [rbx],eax
    3730:	00 00                	add    BYTE PTR [rax],al
    3732:	17                   	(bad)  
    3733:	90                   	nop
    3734:	15 00 00 01 23       	adc    eax,0x23010000
    3739:	27                   	(bad)  
    373a:	6a 00                	push   0x0
    373c:	00 00                	add    BYTE PTR [rax],al
    373e:	02 91 6c 00 16 d5    	add    dl,BYTE PTR [rcx-0x2ae9ff94]
    3744:	15 00 00 01 0f       	adc    eax,0xf010000
    3749:	11 8b 38 20 00 00    	adc    DWORD PTR [rbx+0x2038],ecx
    374f:	00 00                	add    BYTE PTR [rax],al
    3751:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    3754:	00 00                	add    BYTE PTR [rax],al
    3756:	00 00                	add    BYTE PTR [rax],al
    3758:	00 00                	add    BYTE PTR [rax],al
    375a:	01 9c 4f 03 00 00 17 	add    DWORD PTR [rdi+rcx*2+0x17000003],ebx
    3761:	08 2d 00 00 01 0f    	or     BYTE PTR [rip+0xf010000],ch        # f013767 <__kernel_end+0xee01767>
    3767:	2e 62 02             	cs (bad) 
    376a:	00 00                	add    BYTE PTR [rax],al
    376c:	02 91 68 00 16 26    	add    dl,BYTE PTR [rcx+0x26160068]
    3772:	16                   	(bad)  
    3773:	00 00                	add    BYTE PTR [rax],al
    3775:	01 0a                	add    DWORD PTR [rdx],ecx
    3777:	11 70 38             	adc    DWORD PTR [rax+0x38],esi
    377a:	20 00                	and    BYTE PTR [rax],al
    377c:	00 00                	add    BYTE PTR [rax],al
    377e:	00 00                	add    BYTE PTR [rax],al
    3780:	1b 00                	sbb    eax,DWORD PTR [rax]
    3782:	00 00                	add    BYTE PTR [rax],al
    3784:	00 00                	add    BYTE PTR [rax],al
    3786:	00 00                	add    BYTE PTR [rax],al
    3788:	01 9c 7d 03 00 00 17 	add    DWORD PTR [rbp+rdi*2+0x17000003],ebx
    378f:	4d 0d 00 00 01 0a    	rex.WRB or rax,0xa010000
    3795:	35 88 03 00 00       	xor    eax,0x388
    379a:	02 91 68 00 19 88    	add    dl,BYTE PTR [rcx-0x77e6ff98]
    37a0:	03 00                	add    eax,DWORD PTR [rax]
    37a2:	00 1a                	add    BYTE PTR [rdx],bl
    37a4:	e5 00                	in     eax,0x0
    37a6:	00 00                	add    BYTE PTR [rax],al
    37a8:	00 10                	add    BYTE PTR [rax],dl
    37aa:	08 7d 03             	or     BYTE PTR [rbp+0x3],bh
    37ad:	00 00                	add    BYTE PTR [rax],al
    37af:	00 d8                	add    al,bl
    37b1:	02 00                	add    al,BYTE PTR [rax]
    37b3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    37b6:	19 15 00 00 08 01    	sbb    DWORD PTR [rip+0x1080000],edx        # 10837bc <__kernel_end+0xe717bc>
    37bc:	7c 00                	jl     37be <stivale_hdr-0x1fc842>
    37be:	00 00                	add    BYTE PTR [rax],al
    37c0:	04 4d                	add    al,0x4d
    37c2:	17                   	(bad)  
    37c3:	00 00                	add    BYTE PTR [rax],al
    37c5:	24 01                	and    al,0x1
	...
    37d3:	00 00                	add    BYTE PTR [rax],al
    37d5:	65 15 00 00 02 01    	gs adc eax,0x1020000
    37db:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    37de:	00 00                	add    BYTE PTR [rax],al
    37e0:	02 01                	add    al,BYTE PTR [rcx]
    37e2:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    37e5:	00 00                	add    BYTE PTR [rax],al
    37e7:	03 f4                	add    esi,esp
    37e9:	15 00 00 07 04       	adc    eax,0x4070000
    37ee:	05 02 00 00 02       	add    eax,0x2000002
    37f3:	12 06                	adc    al,BYTE PTR [rsi]
    37f5:	05 02 00 00 04       	add    eax,0x4000002
    37fa:	ee                   	out    dx,al
    37fb:	17                   	(bad)  
    37fc:	00 00                	add    BYTE PTR [rax],al
    37fe:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    3801:	17                   	(bad)  
    3802:	00 00                	add    BYTE PTR [rax],al
    3804:	01 05 6f 6e 65 00    	add    DWORD PTR [rip+0x656e6f],eax        # 65a679 <__kernel_end+0x448679>
    380a:	02 05 74 77 6f 00    	add    al,BYTE PTR [rip+0x6f7774]        # 6faf84 <__kernel_end+0x4e8f84>
    3810:	03 04 93             	add    eax,DWORD PTR [rbx+rdx*4]
    3813:	16                   	(bad)  
    3814:	00 00                	add    BYTE PTR [rax],al
    3816:	04 04                	add    al,0x4
    3818:	c5 16 00             	(bad)
    381b:	00 05 04 d1 16 00    	add    BYTE PTR [rip+0x16d104],al        # 170925 <stivale_hdr-0x8f6db>
    3821:	00 06                	add    BYTE PTR [rsi],al
    3823:	05 73 69 78 00       	add    eax,0x786973
    3828:	07                   	(bad)  
    3829:	04 29                	add    al,0x29
    382b:	17                   	(bad)  
    382c:	00 00                	add    BYTE PTR [rax],al
    382e:	08 04 e7             	or     BYTE PTR [rdi+riz*8],al
    3831:	16                   	(bad)  
    3832:	00 00                	add    BYTE PTR [rax],al
    3834:	09 04 fa             	or     DWORD PTR [rdx+rdi*8],eax
    3837:	17                   	(bad)  
    3838:	00 00                	add    BYTE PTR [rax],al
    383a:	0a 04 ba             	or     al,BYTE PTR [rdx+rdi*4]
    383d:	17                   	(bad)  
    383e:	00 00                	add    BYTE PTR [rax],al
    3840:	0b 04 26             	or     eax,DWORD PTR [rsi+riz*1]
    3843:	18 00                	sbb    BYTE PTR [rax],al
    3845:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
    3848:	3a 17                	cmp    dl,BYTE PTR [rdi]
    384a:	00 00                	add    BYTE PTR [rax],al
    384c:	0d 04 46 1f 00       	or     eax,0x1f4604
    3851:	00 0e                	add    BYTE PTR [rsi],cl
    3853:	05 74 61 62 00       	add    eax,0x626174
    3858:	0f 05                	syscall 
    385a:	71 00                	jno    385c <stivale_hdr-0x1fc7a4>
    385c:	10 05 77 00 11 05    	adc    BYTE PTR [rip+0x5110077],al        # 51138d9 <__kernel_end+0x4f018d9>
    3862:	65 00 12             	add    BYTE PTR gs:[rdx],dl
    3865:	05 72 00 13 05       	add    eax,0x5130072
    386a:	74 00                	je     386c <stivale_hdr-0x1fc794>
    386c:	14 05                	adc    al,0x5
    386e:	79 00                	jns    3870 <stivale_hdr-0x1fc790>
    3870:	15 05 75 00 16       	adc    eax,0x16007505
    3875:	05 69 00 17 05       	add    eax,0x5170069
    387a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    387b:	00 18                	add    BYTE PTR [rax],bl
    387d:	05 70 00 19 04       	add    eax,0x4190070
    3882:	40 17                	rex (bad) 
    3884:	00 00                	add    BYTE PTR [rax],al
    3886:	1a 04 b0             	sbb    al,BYTE PTR [rax+rsi*4]
    3889:	16                   	(bad)  
    388a:	00 00                	add    BYTE PTR [rax],al
    388c:	1b 04 51             	sbb    eax,DWORD PTR [rcx+rdx*2]
    388f:	2c 00                	sub    al,0x0
    3891:	00 1c 04             	add    BYTE PTR [rsp+rax*1],bl
    3894:	d6                   	(bad)  
    3895:	16                   	(bad)  
    3896:	00 00                	add    BYTE PTR [rax],al
    3898:	1d 05 61 00 1e       	sbb    eax,0x1e006105
    389d:	05 73 00 1f 05       	add    eax,0x51f0073
    38a2:	64 00 20             	add    BYTE PTR fs:[rax],ah
    38a5:	05 66 00 21 05       	add    eax,0x5210066
    38aa:	67 00 22             	add    BYTE PTR [edx],ah
    38ad:	05 68 00 23 05       	add    eax,0x5230068
    38b2:	6a 00                	push   0x0
    38b4:	24 05                	and    al,0x5
    38b6:	6b 00 25             	imul   eax,DWORD PTR [rax],0x25
    38b9:	05 6c 00 26 04       	add    eax,0x426006c
    38be:	15 18 00 00 27       	adc    eax,0x27000018
    38c3:	04 ff                	add    al,0xff
    38c5:	17                   	(bad)  
    38c6:	00 00                	add    BYTE PTR [rax],al
    38c8:	28 04 a7             	sub    BYTE PTR [rdi+riz*4],al
    38cb:	16                   	(bad)  
    38cc:	00 00                	add    BYTE PTR [rax],al
    38ce:	29 04 09             	sub    DWORD PTR [rcx+rcx*1],eax
    38d1:	17                   	(bad)  
    38d2:	00 00                	add    BYTE PTR [rax],al
    38d4:	2a 04 78             	sub    al,BYTE PTR [rax+rdi*2]
    38d7:	17                   	(bad)  
    38d8:	00 00                	add    BYTE PTR [rax],al
    38da:	2b 05 7a 00 2c 05    	sub    eax,DWORD PTR [rip+0x52c007a]        # 52c395a <__kernel_end+0x50b195a>
    38e0:	78 00                	js     38e2 <stivale_hdr-0x1fc71e>
    38e2:	2d 05 63 00 2e       	sub    eax,0x2e006305
    38e7:	05 76 00 2f 05       	add    eax,0x52f0076
    38ec:	62                   	(bad)  
    38ed:	00 30                	add    BYTE PTR [rax],dh
    38ef:	05 6e 00 31 05       	add    eax,0x531006e
    38f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    38f5:	00 32                	add    BYTE PTR [rdx],dh
    38f7:	04 03                	add    al,0x3
    38f9:	17                   	(bad)  
    38fa:	00 00                	add    BYTE PTR [rax],al
    38fc:	33 04 1b             	xor    eax,DWORD PTR [rbx+rbx*1]
    38ff:	17                   	(bad)  
    3900:	00 00                	add    BYTE PTR [rax],al
    3902:	34 04                	xor    al,0x4
    3904:	7c 17                	jl     391d <stivale_hdr-0x1fc6e3>
    3906:	00 00                	add    BYTE PTR [rax],al
    3908:	35 04 bf 17 00       	xor    eax,0x17bf04
    390d:	00 36                	add    BYTE PTR [rsi],dh
    390f:	04 89                	add    al,0x89
    3911:	17                   	(bad)  
    3912:	00 00                	add    BYTE PTR [rax],al
    3914:	37                   	(bad)  
    3915:	04 a2                	add    al,0xa2
    3917:	17                   	(bad)  
    3918:	00 00                	add    BYTE PTR [rax],al
    391a:	38 04 4a             	cmp    BYTE PTR [rdx+rcx*2],al
    391d:	1f                   	(bad)  
    391e:	00 00                	add    BYTE PTR [rax],al
    3920:	39 04 95 17 00 00 3a 	cmp    DWORD PTR [rdx*4+0x3a000017],eax
    3927:	05 66 31 00 3b       	add    eax,0x3b003166
    392c:	05 66 32 00 3c       	add    eax,0x3c003266
    3931:	05 66 33 00 3d       	add    eax,0x3d003366
    3936:	05 66 34 00 3e       	add    eax,0x3e003466
    393b:	05 66 35 00 3f       	add    eax,0x3f003566
    3940:	05 66 36 00 40       	add    eax,0x40003666
    3945:	05 66 37 00 41       	add    eax,0x41003766
    394a:	05 66 38 00 42       	add    eax,0x42003866
    394f:	05 66 39 00 43       	add    eax,0x43003966
    3954:	05 66 31 30 00       	add    eax,0x303166
    3959:	44 04 cb             	rex.R add al,0xcb
    395c:	17                   	(bad)  
    395d:	00 00                	add    BYTE PTR [rax],al
    395f:	45 04 f9             	rex.RB add al,0xf9
    3962:	16                   	(bad)  
    3963:	00 00                	add    BYTE PTR [rax],al
    3965:	46 04 22             	rex.RX add al,0x22
    3968:	17                   	(bad)  
    3969:	00 00                	add    BYTE PTR [rax],al
    396b:	47 04 e0             	rex.RXB add al,0xe0
    396e:	16                   	(bad)  
    396f:	00 00                	add    BYTE PTR [rax],al
    3971:	48 04 f3             	rex.W add al,0xf3
    3974:	17                   	(bad)  
    3975:	00 00                	add    BYTE PTR [rax],al
    3977:	49 04 1f             	rex.WB add al,0x1f
    397a:	18 00                	sbb    BYTE PTR [rax],al
    397c:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    397f:	be 16 00 00 4b       	mov    esi,0x4b000016
    3984:	04 ca                	add    al,0xca
    3986:	16                   	(bad)  
    3987:	00 00                	add    BYTE PTR [rax],al
    3989:	4c 04 0a             	rex.WR add al,0xa
    398c:	18 00                	sbb    BYTE PTR [rax],al
    398e:	00 4d 04             	add    BYTE PTR [rbp+0x4],cl
    3991:	ed                   	in     eax,dx
    3992:	16                   	(bad)  
    3993:	00 00                	add    BYTE PTR [rax],al
    3995:	4e 04 6d             	rex.WRX add al,0x6d
    3998:	17                   	(bad)  
    3999:	00 00                	add    BYTE PTR [rax],al
    399b:	4f 04 2f             	rex.WRXB add al,0x2f
    399e:	17                   	(bad)  
    399f:	00 00                	add    BYTE PTR [rax],al
    39a1:	50                   	push   rax
    39a2:	04 8c                	add    al,0x8c
    39a4:	16                   	(bad)  
    39a5:	00 00                	add    BYTE PTR [rax],al
    39a7:	51                   	push   rcx
    39a8:	04 b3                	add    al,0xb3
    39aa:	17                   	(bad)  
    39ab:	00 00                	add    BYTE PTR [rax],al
    39ad:	52                   	push   rdx
    39ae:	04 14                	add    al,0x14
    39b0:	17                   	(bad)  
    39b1:	00 00                	add    BYTE PTR [rax],al
    39b3:	53                   	push   rbx
    39b4:	00 02                	add    BYTE PTR [rdx],al
    39b6:	04 07                	add    al,0x7
    39b8:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    39bb:	00 06                	add    BYTE PTR [rsi],al
    39bd:	2f                   	(bad)  
    39be:	02 00                	add    al,BYTE PTR [rax]
    39c0:	00 1c 02             	add    BYTE PTR [rdx+rax*1],bl
    39c3:	00 00                	add    BYTE PTR [rax],al
    39c5:	07                   	(bad)  
    39c6:	21 02                	and    DWORD PTR [rdx],eax
    39c8:	00 00                	add    BYTE PTR [rax],al
    39ca:	53                   	push   rbx
    39cb:	00 08                	add    BYTE PTR [rax],cl
    39cd:	0c 02                	or     al,0x2
    39cf:	00 00                	add    BYTE PTR [rax],al
    39d1:	02 08                	add    cl,BYTE PTR [rax]
    39d3:	07                   	(bad)  
    39d4:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    39d7:	00 02                	add    BYTE PTR [rdx],al
    39d9:	01 06                	add    DWORD PTR [rsi],eax
    39db:	77 00                	ja     39dd <stivale_hdr-0x1fc623>
    39dd:	00 00                	add    BYTE PTR [rax],al
    39df:	08 28                	or     BYTE PTR [rax],ch
    39e1:	02 00                	add    al,BYTE PTR [rax]
    39e3:	00 09                	add    BYTE PTR [rcx],cl
    39e5:	a1 16 00 00 01 04 0c 	movabs eax,ds:0x21c0c0401000016
    39ec:	1c 02 
    39ee:	00 00                	add    BYTE PTR [rax],al
    39f0:	09 03                	or     DWORD PTR [rbx],eax
    39f2:	a0 97 20 00 00 00 00 	movabs al,ds:0x900000000002097
    39f9:	00 09 
    39fb:	9a                   	(bad)  
    39fc:	17                   	(bad)  
    39fd:	00 00                	add    BYTE PTR [rax],al
    39ff:	01 12                	add    DWORD PTR [rdx],edx
    3a01:	0c 1c                	or     al,0x1c
    3a03:	02 00                	add    al,BYTE PTR [rax]
    3a05:	00 09                	add    BYTE PTR [rcx],cl
    3a07:	03 00                	add    eax,DWORD PTR [rax]
    3a09:	98                   	cwde   
    3a0a:	20 00                	and    BYTE PTR [rax],al
    3a0c:	00 00                	add    BYTE PTR [rax],al
    3a0e:	00 00                	add    BYTE PTR [rax],al
    3a10:	09 ab 17 00 00 01    	or     DWORD PTR [rbx+0x1000017],ebp
    3a16:	20 0c 1c             	and    BYTE PTR [rsp+rbx*1],cl
    3a19:	02 00                	add    al,BYTE PTR [rax]
    3a1b:	00 09                	add    BYTE PTR [rcx],cl
    3a1d:	03 60 98             	add    esp,DWORD PTR [rax-0x68]
    3a20:	20 00                	and    BYTE PTR [rax],al
    3a22:	00 00                	add    BYTE PTR [rax],al
    3a24:	00 00                	add    BYTE PTR [rax],al
    3a26:	09 d7                	or     edi,edx
    3a28:	17                   	(bad)  
    3a29:	00 00                	add    BYTE PTR [rax],al
    3a2b:	01 2e                	add    DWORD PTR [rsi],ebp
    3a2d:	0c 1c                	or     al,0x1c
    3a2f:	02 00                	add    al,BYTE PTR [rax]
    3a31:	00 09                	add    BYTE PTR [rcx],cl
    3a33:	03 c0                	add    eax,eax
    3a35:	98                   	cwde   
    3a36:	20 00                	and    BYTE PTR [rax],al
    3a38:	00 00                	add    BYTE PTR [rax],al
    3a3a:	00 00                	add    BYTE PTR [rax],al
    3a3c:	0a 99 16 00 00 01    	or     bl,BYTE PTR [rcx+0x1000016]
    3a42:	3c 06                	cmp    al,0x6
    3a44:	e0 17                	loopne 3a5d <stivale_hdr-0x1fc5a3>
    3a46:	00 00                	add    BYTE PTR [rax],al
    3a48:	28 02                	sub    BYTE PTR [rdx],al
    3a4a:	00 00                	add    BYTE PTR [rax],al
    3a4c:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
    3a52:	00 00                	add    BYTE PTR [rax],al
    3a54:	99                   	cdq    
    3a55:	00 00                	add    BYTE PTR [rax],al
    3a57:	00 00                	add    BYTE PTR [rax],al
    3a59:	00 00                	add    BYTE PTR [rax],al
    3a5b:	00 01                	add    BYTE PTR [rcx],al
    3a5d:	9c                   	pushf  
    3a5e:	0b 6b 63             	or     ebp,DWORD PTR [rbx+0x63]
    3a61:	00 01                	add    BYTE PTR [rcx],al
    3a63:	3c 1c                	cmp    al,0x1c
    3a65:	29 00                	sub    DWORD PTR [rax],eax
    3a67:	00 00                	add    BYTE PTR [rax],al
    3a69:	02 91 6c 0c 5b 02    	add    dl,BYTE PTR [rcx+0x25b0c6c]
    3a6f:	00 00                	add    BYTE PTR [rax],al
    3a71:	01 3c 25 30 00 00 00 	add    DWORD PTR ds:0x30,edi
    3a78:	02 91 68 0c 95 17    	add    dl,BYTE PTR [rcx+0x17950c68]
    3a7e:	00 00                	add    BYTE PTR [rax],al
    3a80:	01 3c 31             	add    DWORD PTR [rcx+rsi*1],edi
    3a83:	30 00                	xor    BYTE PTR [rax],al
    3a85:	00 00                	add    BYTE PTR [rax],al
    3a87:	02 91 64 00 00 a7    	add    dl,BYTE PTR [rcx-0x58ffff9c]
    3a8d:	02 00                	add    al,BYTE PTR [rax]
    3a8f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    3a92:	c7                   	(bad)  
    3a93:	15 00 00 08 01       	adc    eax,0x1080000
    3a98:	7c 00                	jl     3a9a <stivale_hdr-0x1fc566>
    3a9a:	00 00                	add    BYTE PTR [rax],al
    3a9c:	04 74                	add    al,0x74
    3a9e:	18 00                	sbb    BYTE PTR [rax],al
    3aa0:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    3aa3:	00 00                	add    BYTE PTR [rax],al
    3aa5:	20 00                	and    BYTE PTR [rax],al
	...
    3aaf:	00 00                	add    BYTE PTR [rax],al
    3ab1:	16                   	(bad)  
    3ab2:	16                   	(bad)  
    3ab3:	00 00                	add    BYTE PTR [rax],al
    3ab5:	02 27                	add    ah,BYTE PTR [rdi]
    3ab7:	1b 00                	sbb    eax,DWORD PTR [rax]
    3ab9:	00 05 04 e9 01 00    	add    BYTE PTR [rip+0x1e904],al        # 223c3 <stivale_hdr-0x1ddc3d>
    3abf:	00 02                	add    BYTE PTR [rdx],al
    3ac1:	04 06                	add    al,0x6
    3ac3:	e9 01 00 00 03       	jmp    3003ac9 <__kernel_end+0x2df1ac9>
    3ac8:	50                   	push   rax
    3ac9:	18 00                	sbb    BYTE PTR [rax],al
    3acb:	00 01                	add    BYTE PTR [rcx],al
    3acd:	03 b8 18 00 00 02    	add    edi,DWORD PTR [rax+0x2000018]
    3ad3:	03 c2                	add    eax,edx
    3ad5:	1a 00                	sbb    al,BYTE PTR [rax]
    3ad7:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
    3ada:	78 1c                	js     3af8 <stivale_hdr-0x1fc508>
    3adc:	00 00                	add    BYTE PTR [rax],al
    3ade:	08 03                	or     BYTE PTR [rbx],al
    3ae0:	43 19 00             	rex.XB sbb DWORD PTR [r8],eax
    3ae3:	00 10                	add    BYTE PTR [rax],dl
    3ae5:	03 1d 19 00 00 20    	add    ebx,DWORD PTR [rip+0x20000019]        # 20003b04 <__kernel_end+0x1fdf1b04>
    3aeb:	03 f7                	add    esi,edi
    3aed:	18 00                	sbb    BYTE PTR [rax],al
    3aef:	00 40 03             	add    BYTE PTR [rax+0x3],al
    3af2:	4f 1a 00             	rex.WRXB sbb r8b,BYTE PTR [r8]
    3af5:	00 80 04 30 19 00    	add    BYTE PTR [rax+0x193004],al
    3afb:	00 00                	add    BYTE PTR [rax],al
    3afd:	01 04 f9             	add    DWORD PTR [rcx+rdi*8],eax
    3b00:	1b 00                	sbb    eax,DWORD PTR [rax]
    3b02:	00 00                	add    BYTE PTR [rax],al
    3b04:	02 04 db             	add    al,BYTE PTR [rbx+rbx*8]
    3b07:	19 00                	sbb    DWORD PTR [rax],eax
    3b09:	00 00                	add    BYTE PTR [rax],al
    3b0b:	04 04                	add    al,0x4
    3b0d:	62                   	(bad)  
    3b0e:	1a 00                	sbb    al,BYTE PTR [rax]
    3b10:	00 00                	add    BYTE PTR [rax],al
    3b12:	10 04 e5 1b 00 00 00 	adc    BYTE PTR [riz*8+0x1b],al
    3b19:	20 04 ed 1a 00 00 00 	and    BYTE PTR [rbp*8+0x1a],al
    3b20:	40 04 ee             	add    al,0xee
    3b23:	19 00                	sbb    DWORD PTR [rax],eax
    3b25:	00 00                	add    BYTE PTR [rax],al
    3b27:	80 05 0e 1c 00 00 00 	add    BYTE PTR [rip+0x1c0e],0x0        # 573c <stivale_hdr-0x1fa8c4>
    3b2e:	00 02                	add    BYTE PTR [rdx],al
    3b30:	00 05 75 1a 00 00    	add    BYTE PTR [rip+0x1a75],al        # 55ab <stivale_hdr-0x1faa55>
    3b36:	00 00                	add    BYTE PTR [rax],al
    3b38:	04 00                	add    al,0x0
    3b3a:	05 23 1c 00 00       	add    eax,0x1c23
    3b3f:	00 00                	add    BYTE PTR [rax],al
    3b41:	08 00                	or     BYTE PTR [rax],al
    3b43:	05 39 1c 00 00       	add    eax,0x1c39
    3b48:	00 00                	add    BYTE PTR [rax],al
    3b4a:	10 00                	adc    BYTE PTR [rax],al
    3b4c:	05 cf 1b 00 00       	add    eax,0x1bcf
    3b51:	00 00                	add    BYTE PTR [rax],al
    3b53:	20 00                	and    BYTE PTR [rax],al
    3b55:	05 e2 18 00 00       	add    eax,0x18e2
    3b5a:	00 00                	add    BYTE PTR [rax],al
    3b5c:	40 00 05 62 1c 00 00 	add    BYTE PTR [rip+0x1c62],al        # 57c5 <stivale_hdr-0x1fa83b>
    3b63:	00 00                	add    BYTE PTR [rax],al
    3b65:	80 00 05             	add    BYTE PTR [rax],0x5
    3b68:	5c                   	pop    rsp
    3b69:	1b 00                	sbb    eax,DWORD PTR [rax]
    3b6b:	00 00                	add    BYTE PTR [rax],al
    3b6d:	00 00                	add    BYTE PTR [rax],al
    3b6f:	02 05 d8 1a 00 00    	add    al,BYTE PTR [rip+0x1ad8]        # 564d <stivale_hdr-0x1fa9b3>
    3b75:	00 00                	add    BYTE PTR [rax],al
    3b77:	00 04 05 dc 1c 00 00 	add    BYTE PTR [rax*1+0x1cdc],al
    3b7e:	00 00                	add    BYTE PTR [rax],al
    3b80:	00 08                	add    BYTE PTR [rax],cl
    3b82:	05 6f 1b 00 00       	add    eax,0x1b6f
    3b87:	00 00                	add    BYTE PTR [rax],al
    3b89:	00 10                	add    BYTE PTR [rax],dl
    3b8b:	03 92 19 00 00 01    	add    edx,DWORD PTR [rdx+0x1000019]
    3b91:	03 7f 19             	add    edi,DWORD PTR [rdi+0x19]
    3b94:	00 00                	add    BYTE PTR [rax],al
    3b96:	02 03                	add    al,BYTE PTR [rbx]
    3b98:	ca 1c 00             	retf   0x1c
    3b9b:	00 04 03             	add    BYTE PTR [rbx+rax*1],al
    3b9e:	02 1a                	add    bl,BYTE PTR [rdx]
    3ba0:	00 00                	add    BYTE PTR [rax],al
    3ba2:	08 03                	or     BYTE PTR [rbx],al
    3ba4:	95                   	xchg   ebp,eax
    3ba5:	1b 00                	sbb    eax,DWORD PTR [rax]
    3ba7:	00 10                	add    BYTE PTR [rax],dl
    3ba9:	03 28                	add    ebp,DWORD PTR [rax]
    3bab:	1a 00                	sbb    al,BYTE PTR [rax]
    3bad:	00 20                	add    BYTE PTR [rax],ah
    3baf:	03 6c 19 00          	add    ebp,DWORD PTR [rcx+rbx*1+0x0]
    3bb3:	00 40 03             	add    BYTE PTR [rax+0x3],al
    3bb6:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3bb7:	19 00                	sbb    DWORD PTR [rax],eax
    3bb9:	00 80 04 15 1a 00    	add    BYTE PTR [rax+0x1a1504],al
    3bbf:	00 00                	add    BYTE PTR [rax],al
    3bc1:	01 04 3b             	add    DWORD PTR [rbx+rdi*1],eax
    3bc4:	1a 00                	sbb    al,BYTE PTR [rax]
    3bc6:	00 00                	add    BYTE PTR [rax],al
    3bc8:	02 04 92             	add    al,BYTE PTR [rdx+rdx*4]
    3bcb:	18 00                	sbb    BYTE PTR [rax],al
    3bcd:	00 00                	add    BYTE PTR [rax],al
    3bcf:	08 04 b8             	or     BYTE PTR [rax+rdi*4],al
    3bd2:	19 00                	sbb    DWORD PTR [rax],eax
    3bd4:	00 00                	add    BYTE PTR [rax],al
    3bd6:	10 04 3d 18 00 00 00 	adc    BYTE PTR [rdi*1+0x18],al
    3bdd:	20 04 88             	and    BYTE PTR [rax+rcx*4],al
    3be0:	1a 00                	sbb    al,BYTE PTR [rax]
    3be2:	00 00                	add    BYTE PTR [rax],al
    3be4:	40 04 a3             	add    al,0xa3
    3be7:	1c 00                	sbb    al,0x0
    3be9:	00 00                	add    BYTE PTR [rax],al
    3beb:	80 05 b7 1c 00 00 00 	add    BYTE PTR [rip+0x1cb7],0x0        # 58a9 <stivale_hdr-0x1fa757>
    3bf2:	00 01                	add    BYTE PTR [rcx],al
    3bf4:	00 05 33 1b 00 00    	add    BYTE PTR [rip+0x1b33],al        # 572d <stivale_hdr-0x1fa8d3>
    3bfa:	00 00                	add    BYTE PTR [rax],al
    3bfc:	02 00                	add    al,BYTE PTR [rax]
    3bfe:	05 9b 1a 00 00       	add    eax,0x1a9b
    3c03:	00 00                	add    BYTE PTR [rax],al
    3c05:	04 00                	add    al,0x0
    3c07:	05 0a 19 00 00       	add    eax,0x190a
    3c0c:	00 00                	add    BYTE PTR [rax],al
    3c0e:	08 00                	or     BYTE PTR [rax],al
    3c10:	05 ae 1a 00 00       	add    eax,0x1aae
    3c15:	00 00                	add    BYTE PTR [rax],al
    3c17:	20 00                	and    BYTE PTR [rax],al
    3c19:	05 a8 1b 00 00       	add    eax,0x1ba8
    3c1e:	00 00                	add    BYTE PTR [rax],al
    3c20:	40 00 05 bc 1b 00 00 	add    BYTE PTR [rip+0x1bbc],al        # 57e3 <stivale_hdr-0x1fa81d>
    3c27:	00 00                	add    BYTE PTR [rax],al
    3c29:	80 00 05             	add    BYTE PTR [rax],0x5
    3c2c:	8f                   	(bad)  
    3c2d:	1c 00                	sbb    al,0x0
    3c2f:	00 00                	add    BYTE PTR [rax],al
    3c31:	00 00                	add    BYTE PTR [rax],al
    3c33:	01 05 4f 1c 00 00    	add    DWORD PTR [rip+0x1c4f],eax        # 5888 <stivale_hdr-0x1fa778>
    3c39:	00 00                	add    BYTE PTR [rax],al
    3c3b:	00 02                	add    BYTE PTR [rdx],al
    3c3d:	05 ce 18 00 00       	add    eax,0x18ce
    3c42:	00 00                	add    BYTE PTR [rax],al
    3c44:	00 04 05 2b 18 00 00 	add    BYTE PTR [rax*1+0x182b],al
    3c4b:	00 00                	add    BYTE PTR [rax],al
    3c4d:	00 08                	add    BYTE PTR [rax],cl
    3c4f:	05 59 19 00 00       	add    eax,0x1959
    3c54:	00 00                	add    BYTE PTR [rax],al
    3c56:	00 10                	add    BYTE PTR [rax],dl
    3c58:	05 82 1b 00 00       	add    eax,0x1b82
    3c5d:	00 00                	add    BYTE PTR [rax],al
    3c5f:	00 20                	add    BYTE PTR [rax],ah
    3c61:	05 48 1b 00 00       	add    eax,0x1b48
    3c66:	00 00                	add    BYTE PTR [rax],al
    3c68:	00 40 06             	add    BYTE PTR [rax+0x6],al
    3c6b:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3c6c:	18 00                	sbb    BYTE PTR [rax],al
    3c6e:	00 80 80 80 80 78    	add    BYTE PTR [rax+0x78808080],al
    3c74:	00 07                	add    BYTE PTR [rdi],al
    3c76:	04 05                	add    al,0x5
    3c78:	69 6e 74 00 02 cc 19 	imul   ebp,DWORD PTR [rsi+0x74],0x19cc0200
    3c7f:	00 00                	add    BYTE PTR [rax],al
    3c81:	07                   	(bad)  
    3c82:	04 1b                	add    al,0x1b
    3c84:	02 00                	add    al,BYTE PTR [rax]
    3c86:	00 02                	add    BYTE PTR [rdx],al
    3c88:	40 06                	rex (bad) 
    3c8a:	1b 02                	sbb    eax,DWORD PTR [rdx]
    3c8c:	00 00                	add    BYTE PTR [rax],al
    3c8e:	08 45 41             	or     BYTE PTR [rbp+0x41],al
    3c91:	58                   	pop    rax
    3c92:	00 00                	add    BYTE PTR [rax],al
    3c94:	08 45 42             	or     BYTE PTR [rbp+0x42],al
    3c97:	58                   	pop    rax
    3c98:	00 01                	add    BYTE PTR [rcx],al
    3c9a:	08 45 43             	or     BYTE PTR [rbp+0x43],al
    3c9d:	58                   	pop    rax
    3c9e:	00 02                	add    BYTE PTR [rdx],al
    3ca0:	08 45 44             	or     BYTE PTR [rbp+0x44],al
    3ca3:	58                   	pop    rax
    3ca4:	00 03                	add    BYTE PTR [rbx],al
    3ca6:	00 09                	add    BYTE PTR [rcx],cl
    3ca8:	04 07                	add    al,0x7
    3caa:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    3cad:	00 0a                	add    BYTE PTR [rdx],cl
    3caf:	64 18 00             	sbb    BYTE PTR fs:[rax],al
    3cb2:	00 01                	add    BYTE PTR [rcx],al
    3cb4:	04 06                	add    al,0x6
    3cb6:	02 1b                	add    bl,BYTE PTR [rbx]
    3cb8:	00 00                	add    BYTE PTR [rax],al
    3cba:	a3 02 00 00 99 90 20 	movabs ds:0x209099000002,eax
    3cc1:	00 00 
    3cc3:	00 00                	add    BYTE PTR [rax],al
    3cc5:	00 58 00             	add    BYTE PTR [rax+0x0],bl
    3cc8:	00 00                	add    BYTE PTR [rax],al
    3cca:	00 00                	add    BYTE PTR [rax],al
    3ccc:	00 00                	add    BYTE PTR [rax],al
    3cce:	01 9c a3 02 00 00 0b 	add    DWORD PTR [rbx+riz*4+0xb000002],ebx
    3cd5:	72 65                	jb     3d3c <stivale_hdr-0x1fc2c4>
    3cd7:	67 00 01             	add    BYTE PTR [ecx],al
    3cda:	04 25                	add    al,0x25
    3cdc:	f0 01 00             	lock add DWORD PTR [rax],eax
    3cdf:	00 02                	add    BYTE PTR [rdx],al
    3ce1:	91                   	xchg   ecx,eax
    3ce2:	54                   	push   rsp
    3ce3:	0c 90                	or     al,0x90
    3ce5:	15 00 00 01 04       	adc    eax,0x4010000
    3cea:	36 29 00             	sub    DWORD PTR ss:[rax],eax
    3ced:	00 00                	add    BYTE PTR [rax],al
    3cef:	02 91 50 0d 65 61    	add    dl,BYTE PTR [rcx+0x61650d50]
    3cf5:	78 00                	js     3cf7 <stivale_hdr-0x1fc309>
    3cf7:	01 06                	add    DWORD PTR [rsi],eax
    3cf9:	12 1b                	adc    bl,BYTE PTR [rbx]
    3cfb:	02 00                	add    al,BYTE PTR [rax]
    3cfd:	00 02                	add    BYTE PTR [rdx],al
    3cff:	91                   	xchg   ecx,eax
    3d00:	64 0d 65 62 78 00    	fs or  eax,0x786265
    3d06:	01 06                	add    DWORD PTR [rsi],eax
    3d08:	17                   	(bad)  
    3d09:	1b 02                	sbb    eax,DWORD PTR [rdx]
    3d0b:	00 00                	add    BYTE PTR [rax],al
    3d0d:	02 91 60 0d 65 63    	add    dl,BYTE PTR [rcx+0x63650d60]
    3d13:	78 00                	js     3d15 <stivale_hdr-0x1fc2eb>
    3d15:	01 06                	add    DWORD PTR [rsi],eax
    3d17:	1c 1b                	sbb    al,0x1b
    3d19:	02 00                	add    al,BYTE PTR [rax]
    3d1b:	00 02                	add    BYTE PTR [rdx],al
    3d1d:	91                   	xchg   ecx,eax
    3d1e:	5c                   	pop    rsp
    3d1f:	0d 65 64 78 00       	or     eax,0x786465
    3d24:	01 06                	add    DWORD PTR [rsi],eax
    3d26:	21 1b                	and    DWORD PTR [rbx],ebx
    3d28:	02 00                	add    al,BYTE PTR [rax]
    3d2a:	00 02                	add    BYTE PTR [rdx],al
    3d2c:	91                   	xchg   ecx,eax
    3d2d:	58                   	pop    rax
    3d2e:	00 09                	add    BYTE PTR [rcx],cl
    3d30:	01 02                	add    DWORD PTR [rdx],eax
    3d32:	61                   	(bad)  
    3d33:	02 00                	add    al,BYTE PTR [rax]
    3d35:	00 00                	add    BYTE PTR [rax],al
    3d37:	ec                   	in     al,dx
    3d38:	07                   	(bad)  
    3d39:	00 00                	add    BYTE PTR [rax],al
    3d3b:	04 00                	add    al,0x0
    3d3d:	84 16                	test   BYTE PTR [rsi],dl
    3d3f:	00 00                	add    BYTE PTR [rax],al
    3d41:	08 01                	or     BYTE PTR [rcx],al
    3d43:	7c 00                	jl     3d45 <stivale_hdr-0x1fc2bb>
    3d45:	00 00                	add    BYTE PTR [rax],al
    3d47:	04 6d                	add    al,0x6d
    3d49:	1e                   	(bad)  
    3d4a:	00 00                	add    BYTE PTR [rax],al
    3d4c:	24 01                	and    al,0x1
    3d4e:	00 00                	add    BYTE PTR [rax],al
    3d50:	40 00 00             	add    BYTE PTR [rax],al
	...
    3d5b:	00 93 16 00 00 02    	add    BYTE PTR [rbx+0x2000016],dl
    3d61:	01 06                	add    DWORD PTR [rsi],eax
    3d63:	70 00                	jo     3d65 <stivale_hdr-0x1fc29b>
    3d65:	00 00                	add    BYTE PTR [rax],al
    3d67:	02 02                	add    al,BYTE PTR [rdx]
    3d69:	05 73 01 00 00       	add    eax,0x173
    3d6e:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    3d75:	02 08                	add    cl,BYTE PTR [rax]
    3d77:	05 6a 01 00 00       	add    eax,0x16a
    3d7c:	04 1d                	add    al,0x1d
    3d7e:	1f                   	(bad)  
    3d7f:	00 00                	add    BYTE PTR [rax],al
    3d81:	02 2e                	add    ch,BYTE PTR [rsi]
    3d83:	18 51 00             	sbb    BYTE PTR [rcx+0x0],dl
    3d86:	00 00                	add    BYTE PTR [rax],al
    3d88:	02 01                	add    al,BYTE PTR [rcx]
    3d8a:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    3d8d:	00 00                	add    BYTE PTR [rax],al
    3d8f:	02 02                	add    al,BYTE PTR [rdx]
    3d91:	07                   	(bad)  
    3d92:	9b                   	fwait
    3d93:	01 00                	add    DWORD PTR [rax],eax
    3d95:	00 02                	add    BYTE PTR [rdx],al
    3d97:	04 07                	add    al,0x7
    3d99:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    3d9c:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    3d9f:	1c 00                	sbb    al,0x0
    3da1:	00 02                	add    BYTE PTR [rdx],al
    3da3:	37                   	(bad)  
    3da4:	19 72 00             	sbb    DWORD PTR [rdx+0x0],esi
    3da7:	00 00                	add    BYTE PTR [rax],al
    3da9:	02 08                	add    cl,BYTE PTR [rax]
    3dab:	07                   	(bad)  
    3dac:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    3daf:	00 05 2f 1d 00 00    	add    BYTE PTR [rip+0x1d2f],al        # 5ae4 <stivale_hdr-0x1fa51c>
    3db5:	02 03                	add    al,BYTE PTR [rbx]
    3db7:	06                   	(bad)  
    3db8:	08 17                	or     BYTE PTR [rdi],dl
    3dba:	01 00                	add    DWORD PTR [rax],eax
    3dbc:	00 06                	add    BYTE PTR [rsi],al
    3dbe:	f4                   	hlt    
    3dbf:	15 00 00 03 07       	adc    eax,0x7030000
    3dc4:	13 51 00             	adc    edx,DWORD PTR [rcx+0x0]
    3dc7:	00 00                	add    BYTE PTR [rax],al
    3dc9:	01 08                	add    DWORD PTR [rax],ecx
    3dcb:	00 00                	add    BYTE PTR [rax],al
    3dcd:	06                   	(bad)  
    3dce:	6b 16 00             	imul   edx,DWORD PTR [rsi],0x0
    3dd1:	00 03                	add    BYTE PTR [rbx],al
    3dd3:	08 07                	or     BYTE PTR [rdi],al
    3dd5:	17                   	(bad)  
    3dd6:	01 00                	add    DWORD PTR [rax],eax
    3dd8:	00 01                	add    BYTE PTR [rcx],al
    3dda:	01 07                	add    DWORD PTR [rdi],eax
    3ddc:	01 06                	add    DWORD PTR [rsi],eax
    3dde:	7f 15                	jg     3df5 <stivale_hdr-0x1fc20b>
    3de0:	00 00                	add    BYTE PTR [rax],al
    3de2:	03 09                	add    ecx,DWORD PTR [rcx]
    3de4:	07                   	(bad)  
    3de5:	17                   	(bad)  
    3de6:	01 00                	add    DWORD PTR [rax],eax
    3de8:	00 01                	add    BYTE PTR [rcx],al
    3dea:	01 06                	add    DWORD PTR [rsi],eax
    3dec:	01 06                	add    DWORD PTR [rsi],eax
    3dee:	0a 16                	or     dl,BYTE PTR [rsi]
    3df0:	00 00                	add    BYTE PTR [rax],al
    3df2:	03 0a                	add    ecx,DWORD PTR [rdx]
    3df4:	07                   	(bad)  
    3df5:	17                   	(bad)  
    3df6:	01 00                	add    DWORD PTR [rax],eax
    3df8:	00 01                	add    BYTE PTR [rcx],al
    3dfa:	01 05 01 06 c3 15    	add    DWORD PTR [rip+0x15c30601],eax        # 15c34401 <__kernel_end+0x15a22401>
    3e00:	00 00                	add    BYTE PTR [rax],al
    3e02:	03 0b                	add    ecx,DWORD PTR [rbx]
    3e04:	07                   	(bad)  
    3e05:	17                   	(bad)  
    3e06:	01 00                	add    DWORD PTR [rax],eax
    3e08:	00 01                	add    BYTE PTR [rcx],al
    3e0a:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    3e0d:	06                   	(bad)  
    3e0e:	1e                   	(bad)  
    3e0f:	16                   	(bad)  
    3e10:	00 00                	add    BYTE PTR [rax],al
    3e12:	03 0c 07             	add    ecx,DWORD PTR [rdi+rax*1]
    3e15:	17                   	(bad)  
    3e16:	01 00                	add    DWORD PTR [rax],eax
    3e18:	00 01                	add    BYTE PTR [rcx],al
    3e1a:	01 03                	add    DWORD PTR [rbx],eax
    3e1c:	01 06                	add    DWORD PTR [rsi],eax
    3e1e:	14 16                	adc    al,0x16
    3e20:	00 00                	add    BYTE PTR [rax],al
    3e22:	03 0d 07 17 01 00    	add    ecx,DWORD PTR [rip+0x11707]        # 1552f <stivale_hdr-0x1eaad1>
    3e28:	00 01                	add    BYTE PTR [rcx],al
    3e2a:	01 02                	add    DWORD PTR [rdx],eax
    3e2c:	01 06                	add    DWORD PTR [rsi],eax
    3e2e:	5f                   	pop    rdi
    3e2f:	16                   	(bad)  
    3e30:	00 00                	add    BYTE PTR [rax],al
    3e32:	03 0e                	add    ecx,DWORD PTR [rsi]
    3e34:	07                   	(bad)  
    3e35:	17                   	(bad)  
    3e36:	01 00                	add    DWORD PTR [rax],eax
    3e38:	00 01                	add    BYTE PTR [rcx],al
    3e3a:	01 01                	add    DWORD PTR [rcx],eax
    3e3c:	01 06                	add    DWORD PTR [rsi],eax
    3e3e:	cc                   	int3   
    3e3f:	15 00 00 03 0f       	adc    eax,0xf030000
    3e44:	07                   	(bad)  
    3e45:	17                   	(bad)  
    3e46:	01 00                	add    DWORD PTR [rax],eax
    3e48:	00 01                	add    BYTE PTR [rcx],al
    3e4a:	01 00                	add    DWORD PTR [rax],eax
    3e4c:	01 00                	add    DWORD PTR [rax],eax
    3e4e:	02 01                	add    al,BYTE PTR [rcx]
    3e50:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	07                   	(bad)  
    3e56:	27                   	(bad)  
    3e57:	1b 00                	sbb    eax,DWORD PTR [rax]
    3e59:	00 05 04 37 00 00    	add    BYTE PTR [rip+0x3704],al        # 7563 <stivale_hdr-0x1f8a9d>
    3e5f:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    3e62:	06                   	(bad)  
    3e63:	de 02                	fiadd  WORD PTR [rdx]
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	08 50 18             	or     BYTE PTR [rax+0x18],dl
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	01 08                	add    DWORD PTR [rax],ecx
    3e6e:	b8 18 00 00 02       	mov    eax,0x2000018
    3e73:	08 c2                	or     dl,al
    3e75:	1a 00                	sbb    al,BYTE PTR [rax]
    3e77:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    3e7a:	78 1c                	js     3e98 <stivale_hdr-0x1fc168>
    3e7c:	00 00                	add    BYTE PTR [rax],al
    3e7e:	08 08                	or     BYTE PTR [rax],cl
    3e80:	43 19 00             	rex.XB sbb DWORD PTR [r8],eax
    3e83:	00 10                	add    BYTE PTR [rax],dl
    3e85:	08 1d 19 00 00 20    	or     BYTE PTR [rip+0x20000019],bl        # 20003ea4 <__kernel_end+0x1fdf1ea4>
    3e8b:	08 f7                	or     bh,dh
    3e8d:	18 00                	sbb    BYTE PTR [rax],al
    3e8f:	00 40 08             	add    BYTE PTR [rax+0x8],al
    3e92:	4f 1a 00             	rex.WRXB sbb r8b,BYTE PTR [r8]
    3e95:	00 80 09 30 19 00    	add    BYTE PTR [rax+0x193009],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	01 09                	add    DWORD PTR [rcx],ecx
    3e9f:	f9                   	stc    
    3ea0:	1b 00                	sbb    eax,DWORD PTR [rax]
    3ea2:	00 00                	add    BYTE PTR [rax],al
    3ea4:	02 09                	add    cl,BYTE PTR [rcx]
    3ea6:	db 19                	fistp  DWORD PTR [rcx]
    3ea8:	00 00                	add    BYTE PTR [rax],al
    3eaa:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    3ead:	62                   	(bad)  
    3eae:	1a 00                	sbb    al,BYTE PTR [rax]
    3eb0:	00 00                	add    BYTE PTR [rax],al
    3eb2:	10 09                	adc    BYTE PTR [rcx],cl
    3eb4:	e5 1b                	in     eax,0x1b
    3eb6:	00 00                	add    BYTE PTR [rax],al
    3eb8:	00 20                	add    BYTE PTR [rax],ah
    3eba:	09 ed                	or     ebp,ebp
    3ebc:	1a 00                	sbb    al,BYTE PTR [rax]
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	40 09 ee             	rex or esi,ebp
    3ec3:	19 00                	sbb    DWORD PTR [rax],eax
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	80 0a 0e             	or     BYTE PTR [rdx],0xe
    3eca:	1c 00                	sbb    al,0x0
    3ecc:	00 00                	add    BYTE PTR [rax],al
    3ece:	00 02                	add    BYTE PTR [rdx],al
    3ed0:	00 0a                	add    BYTE PTR [rdx],cl
    3ed2:	75 1a                	jne    3eee <stivale_hdr-0x1fc112>
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	04 00                	add    al,0x0
    3eda:	0a 23                	or     ah,BYTE PTR [rbx]
    3edc:	1c 00                	sbb    al,0x0
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	00 08                	add    BYTE PTR [rax],cl
    3ee2:	00 0a                	add    BYTE PTR [rdx],cl
    3ee4:	39 1c 00             	cmp    DWORD PTR [rax+rax*1],ebx
    3ee7:	00 00                	add    BYTE PTR [rax],al
    3ee9:	00 10                	add    BYTE PTR [rax],dl
    3eeb:	00 0a                	add    BYTE PTR [rdx],cl
    3eed:	cf                   	iret   
    3eee:	1b 00                	sbb    eax,DWORD PTR [rax]
    3ef0:	00 00                	add    BYTE PTR [rax],al
    3ef2:	00 20                	add    BYTE PTR [rax],ah
    3ef4:	00 0a                	add    BYTE PTR [rdx],cl
    3ef6:	e2 18                	loop   3f10 <stivale_hdr-0x1fc0f0>
    3ef8:	00 00                	add    BYTE PTR [rax],al
    3efa:	00 00                	add    BYTE PTR [rax],al
    3efc:	40 00 0a             	add    BYTE PTR [rdx],cl
    3eff:	62                   	(bad)  
    3f00:	1c 00                	sbb    al,0x0
    3f02:	00 00                	add    BYTE PTR [rax],al
    3f04:	00 80 00 0a 5c 1b    	add    BYTE PTR [rax+0x1b5c0a00],al
    3f0a:	00 00                	add    BYTE PTR [rax],al
    3f0c:	00 00                	add    BYTE PTR [rax],al
    3f0e:	00 02                	add    BYTE PTR [rdx],al
    3f10:	0a d8                	or     bl,al
    3f12:	1a 00                	sbb    al,BYTE PTR [rax]
    3f14:	00 00                	add    BYTE PTR [rax],al
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	04 0a                	add    al,0xa
    3f1a:	dc 1c 00             	fcomp  QWORD PTR [rax+rax*1]
    3f1d:	00 00                	add    BYTE PTR [rax],al
    3f1f:	00 00                	add    BYTE PTR [rax],al
    3f21:	08 0a                	or     BYTE PTR [rdx],cl
    3f23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f24:	1b 00                	sbb    eax,DWORD PTR [rax]
    3f26:	00 00                	add    BYTE PTR [rax],al
    3f28:	00 00                	add    BYTE PTR [rax],al
    3f2a:	10 08                	adc    BYTE PTR [rax],cl
    3f2c:	92                   	xchg   edx,eax
    3f2d:	19 00                	sbb    DWORD PTR [rax],eax
    3f2f:	00 01                	add    BYTE PTR [rcx],al
    3f31:	08 7f 19             	or     BYTE PTR [rdi+0x19],bh
    3f34:	00 00                	add    BYTE PTR [rax],al
    3f36:	02 08                	add    cl,BYTE PTR [rax]
    3f38:	ca 1c 00             	retf   0x1c
    3f3b:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    3f3e:	02 1a                	add    bl,BYTE PTR [rdx]
    3f40:	00 00                	add    BYTE PTR [rax],al
    3f42:	08 08                	or     BYTE PTR [rax],cl
    3f44:	95                   	xchg   ebp,eax
    3f45:	1b 00                	sbb    eax,DWORD PTR [rax]
    3f47:	00 10                	add    BYTE PTR [rax],dl
    3f49:	08 28                	or     BYTE PTR [rax],ch
    3f4b:	1a 00                	sbb    al,BYTE PTR [rax]
    3f4d:	00 20                	add    BYTE PTR [rax],ah
    3f4f:	08 6c 19 00          	or     BYTE PTR [rcx+rbx*1+0x0],ch
    3f53:	00 40 08             	add    BYTE PTR [rax+0x8],al
    3f56:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3f57:	19 00                	sbb    DWORD PTR [rax],eax
    3f59:	00 80 09 15 1a 00    	add    BYTE PTR [rax+0x1a1509],al
    3f5f:	00 00                	add    BYTE PTR [rax],al
    3f61:	01 09                	add    DWORD PTR [rcx],ecx
    3f63:	3b 1a                	cmp    ebx,DWORD PTR [rdx]
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 02                	add    BYTE PTR [rdx],al
    3f69:	09 92 18 00 00 00    	or     DWORD PTR [rdx+0x18],edx
    3f6f:	08 09                	or     BYTE PTR [rcx],cl
    3f71:	b8 19 00 00 00       	mov    eax,0x19
    3f76:	10 09                	adc    BYTE PTR [rcx],cl
    3f78:	3d 18 00 00 00       	cmp    eax,0x18
    3f7d:	20 09                	and    BYTE PTR [rcx],cl
    3f7f:	88 1a                	mov    BYTE PTR [rdx],bl
    3f81:	00 00                	add    BYTE PTR [rax],al
    3f83:	00 40 09             	add    BYTE PTR [rax+0x9],al
    3f86:	a3 1c 00 00 00 80 0a 	movabs ds:0x1cb70a800000001c,eax
    3f8d:	b7 1c 
    3f8f:	00 00                	add    BYTE PTR [rax],al
    3f91:	00 00                	add    BYTE PTR [rax],al
    3f93:	01 00                	add    DWORD PTR [rax],eax
    3f95:	0a 33                	or     dh,BYTE PTR [rbx]
    3f97:	1b 00                	sbb    eax,DWORD PTR [rax]
    3f99:	00 00                	add    BYTE PTR [rax],al
    3f9b:	00 02                	add    BYTE PTR [rdx],al
    3f9d:	00 0a                	add    BYTE PTR [rdx],cl
    3f9f:	9b                   	fwait
    3fa0:	1a 00                	sbb    al,BYTE PTR [rax]
    3fa2:	00 00                	add    BYTE PTR [rax],al
    3fa4:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    3fa7:	0a 0a                	or     cl,BYTE PTR [rdx]
    3fa9:	19 00                	sbb    DWORD PTR [rax],eax
    3fab:	00 00                	add    BYTE PTR [rax],al
    3fad:	00 08                	add    BYTE PTR [rax],cl
    3faf:	00 0a                	add    BYTE PTR [rdx],cl
    3fb1:	ae                   	scas   al,BYTE PTR es:[rdi]
    3fb2:	1a 00                	sbb    al,BYTE PTR [rax]
    3fb4:	00 00                	add    BYTE PTR [rax],al
    3fb6:	00 20                	add    BYTE PTR [rax],ah
    3fb8:	00 0a                	add    BYTE PTR [rdx],cl
    3fba:	a8 1b                	test   al,0x1b
    3fbc:	00 00                	add    BYTE PTR [rax],al
    3fbe:	00 00                	add    BYTE PTR [rax],al
    3fc0:	40 00 0a             	add    BYTE PTR [rdx],cl
    3fc3:	bc 1b 00 00 00       	mov    esp,0x1b
    3fc8:	00 80 00 0a 8f 1c    	add    BYTE PTR [rax+0x1c8f0a00],al
    3fce:	00 00                	add    BYTE PTR [rax],al
    3fd0:	00 00                	add    BYTE PTR [rax],al
    3fd2:	00 01                	add    BYTE PTR [rcx],al
    3fd4:	0a 4f 1c             	or     cl,BYTE PTR [rdi+0x1c]
    3fd7:	00 00                	add    BYTE PTR [rax],al
    3fd9:	00 00                	add    BYTE PTR [rax],al
    3fdb:	00 02                	add    BYTE PTR [rdx],al
    3fdd:	0a ce                	or     cl,dh
    3fdf:	18 00                	sbb    BYTE PTR [rax],al
    3fe1:	00 00                	add    BYTE PTR [rax],al
    3fe3:	00 00                	add    BYTE PTR [rax],al
    3fe5:	04 0a                	add    al,0xa
    3fe7:	2b 18                	sub    ebx,DWORD PTR [rax]
    3fe9:	00 00                	add    BYTE PTR [rax],al
    3feb:	00 00                	add    BYTE PTR [rax],al
    3fed:	00 08                	add    BYTE PTR [rax],cl
    3fef:	0a 59 19             	or     bl,BYTE PTR [rcx+0x19]
    3ff2:	00 00                	add    BYTE PTR [rax],al
    3ff4:	00 00                	add    BYTE PTR [rax],al
    3ff6:	00 10                	add    BYTE PTR [rax],dl
    3ff8:	0a 82 1b 00 00 00    	or     al,BYTE PTR [rdx+0x1b]
    3ffe:	00 00                	add    BYTE PTR [rax],al
    4000:	20 0a                	and    BYTE PTR [rdx],cl
    4002:	48 1b 00             	sbb    rax,QWORD PTR [rax]
    4005:	00 00                	add    BYTE PTR [rax],al
    4007:	00 00                	add    BYTE PTR [rax],al
    4009:	40 0b a5 18 00 00 80 	rex or esp,DWORD PTR [rbp-0x7fffffe8]
    4010:	80 80 80 78 00 07 cc 	add    BYTE PTR [rax+0x7007880],0xcc
    4017:	19 00                	sbb    DWORD PTR [rax],eax
    4019:	00 07                	add    BYTE PTR [rdi],al
    401b:	04 5f                	add    al,0x5f
    401d:	00 00                	add    BYTE PTR [rax],al
    401f:	00 04 40             	add    BYTE PTR [rax+rax*2],al
    4022:	06                   	(bad)  
    4023:	09 03                	or     DWORD PTR [rbx],eax
    4025:	00 00                	add    BYTE PTR [rax],al
    4027:	0c 45                	or     al,0x45
    4029:	41 58                	pop    r8
    402b:	00 00                	add    BYTE PTR [rax],al
    402d:	0c 45                	or     al,0x45
    402f:	42 58                	rex.X pop rax
    4031:	00 01                	add    BYTE PTR [rcx],al
    4033:	0c 45                	or     al,0x45
    4035:	43 58                	rex.XB pop r8
    4037:	00 02                	add    BYTE PTR [rdx],al
    4039:	0c 45                	or     al,0x45
    403b:	44 58                	rex.R pop rax
    403d:	00 03                	add    BYTE PTR [rbx],al
    403f:	00 07                	add    BYTE PTR [rdi],al
    4041:	a0 1e 00 00 07 04 5f 	movabs al,ds:0x5f040700001e
    4048:	00 00 
    404a:	00 01                	add    BYTE PTR [rcx],al
    404c:	06                   	(bad)  
    404d:	06                   	(bad)  
    404e:	3a 03                	cmp    al,BYTE PTR [rbx]
    4050:	00 00                	add    BYTE PTR [rax],al
    4052:	08 d9                	or     cl,bl
    4054:	15 00 00 00 08       	adc    eax,0x8000000
    4059:	16                   	(bad)  
    405a:	1e                   	(bad)  
    405b:	00 00                	add    BYTE PTR [rax],al
    405d:	01 08                	add    DWORD PTR [rax],ecx
    405f:	db 1d 00 00 02 08    	fistp  DWORD PTR [rip+0x8020000]        # 8024065 <__kernel_end+0x7e12065>
    4065:	33 1e                	xor    ebx,DWORD PTR [rsi]
    4067:	00 00                	add    BYTE PTR [rax],al
    4069:	03 08                	add    ecx,DWORD PTR [rax]
    406b:	fd                   	std    
    406c:	1c 00                	sbb    al,0x0
    406e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4071:	07                   	(bad)  
    4072:	8b 15 00 00 07 04    	mov    edx,DWORD PTR [rip+0x4070000]        # 4074078 <__kernel_end+0x3e62078>
    4078:	5f                   	pop    rdi
    4079:	00 00                	add    BYTE PTR [rax],al
    407b:	00 01                	add    BYTE PTR [rcx],al
    407d:	0e                   	(bad)  
    407e:	06                   	(bad)  
    407f:	59                   	pop    rcx
    4080:	03 00                	add    eax,DWORD PTR [rax]
    4082:	00 08                	add    BYTE PTR [rax],cl
    4084:	ea                   	(bad)  
    4085:	15 00 00 00 08       	adc    eax,0x8000000
    408a:	43 16                	rex.XB (bad) 
    408c:	00 00                	add    BYTE PTR [rax],al
    408e:	01 00                	add    DWORD PTR [rax],eax
    4090:	0d 75 03 00 00       	or     eax,0x375
    4095:	69 03 00 00 0e 72    	imul   eax,DWORD PTR [rbx],0x720e0000
    409b:	00 00                	add    BYTE PTR [rax],al
    409d:	00 10                	add    BYTE PTR [rax],dl
    409f:	00 0f                	add    BYTE PTR [rdi],cl
    40a1:	59                   	pop    rcx
    40a2:	03 00                	add    eax,DWORD PTR [rax]
    40a4:	00 02                	add    BYTE PTR [rdx],al
    40a6:	01 06                	add    DWORD PTR [rsi],eax
    40a8:	77 00                	ja     40aa <stivale_hdr-0x1fbf56>
    40aa:	00 00                	add    BYTE PTR [rax],al
    40ac:	0f 6e 03             	movd   mm0,DWORD PTR [rbx]
    40af:	00 00                	add    BYTE PTR [rax],al
    40b1:	10 eb                	adc    bl,ch
    40b3:	1d 00 00 01 14       	sbb    eax,0x14010000
    40b8:	0c 69                	or     al,0x69
    40ba:	03 00                	add    eax,DWORD PTR [rax]
    40bc:	00 09                	add    BYTE PTR [rcx],cl
    40be:	03 80 99 20 00 00    	add    eax,DWORD PTR [rax+0x2099]
    40c4:	00 00                	add    BYTE PTR [rax],al
    40c6:	00 0d 6e 03 00 00    	add    BYTE PTR [rip+0x36e],cl        # 443a <stivale_hdr-0x1fbbc6>
    40cc:	a0 03 00 00 0e 72 00 	movabs al,ds:0x720e000003
    40d3:	00 00 
    40d5:	3f                   	(bad)  
    40d6:	00 11                	add    BYTE PTR [rcx],dl
    40d8:	c4                   	(bad)  
    40d9:	1d 00 00 01 17       	sbb    eax,0x17010000
    40de:	06                   	(bad)  
    40df:	90                   	nop
    40e0:	03 00                	add    eax,DWORD PTR [rax]
    40e2:	00 09                	add    BYTE PTR [rcx],cl
    40e4:	03 20                	add    esp,DWORD PTR [rax]
    40e6:	99                   	cdq    
    40e7:	20 00                	and    BYTE PTR [rax],al
    40e9:	00 00                	add    BYTE PTR [rax],al
    40eb:	00 00                	add    BYTE PTR [rax],al
    40ed:	11 8b 1e 00 00 01    	adc    DWORD PTR [rbx+0x100001e],ecx
    40f3:	4c 05 37 00 00 00    	rex.WR add rax,0x37
    40f9:	09 03                	or     DWORD PTR [rbx],eax
    40fb:	60                   	(bad)  
    40fc:	99                   	cdq    
    40fd:	20 00                	and    BYTE PTR [rax],al
    40ff:	00 00                	add    BYTE PTR [rax],al
    4101:	00 00                	add    BYTE PTR [rax],al
    4103:	11 be 1e 00 00 01    	adc    DWORD PTR [rsi+0x100001e],edi
    4109:	4e 07                	rex.WRX (bad) 
    410b:	e2 03                	loop   4110 <stivale_hdr-0x1fbef0>
    410d:	00 00                	add    BYTE PTR [rax],al
    410f:	09 03                	or     DWORD PTR [rbx],eax
    4111:	68 99 20 00 00       	push   0x2099
    4116:	00 00                	add    BYTE PTR [rax],al
    4118:	00 12                	add    BYTE PTR [rdx],dl
    411a:	08 6e 03             	or     BYTE PTR [rsi+0x3],ch
    411d:	00 00                	add    BYTE PTR [rax],al
    411f:	11 ef                	adc    edi,ebp
    4121:	1e                   	(bad)  
    4122:	00 00                	add    BYTE PTR [rax],al
    4124:	01 50 06             	add    DWORD PTR [rax+0x6],edx
    4127:	17                   	(bad)  
    4128:	01 00                	add    DWORD PTR [rax],eax
    412a:	00 09                	add    BYTE PTR [rcx],cl
    412c:	03 70 99             	add    esi,DWORD PTR [rax-0x67]
    412f:	20 00                	and    BYTE PTR [rax],al
    4131:	00 00                	add    BYTE PTR [rax],al
    4133:	00 00                	add    BYTE PTR [rax],al
    4135:	11 47 1e             	adc    DWORD PTR [rdi+0x1e],eax
    4138:	00 00                	add    BYTE PTR [rax],al
    413a:	01 52 06             	add    DWORD PTR [rdx+0x6],edx
    413d:	17                   	(bad)  
    413e:	01 00                	add    DWORD PTR [rax],eax
    4140:	00 09                	add    BYTE PTR [rcx],cl
    4142:	03 71 99             	add    esi,DWORD PTR [rcx-0x67]
    4145:	20 00                	and    BYTE PTR [rax],al
    4147:	00 00                	add    BYTE PTR [rax],al
    4149:	00 00                	add    BYTE PTR [rax],al
    414b:	11 3c 1f             	adc    DWORD PTR [rdi+rbx*1],edi
    414e:	00 00                	add    BYTE PTR [rax],al
    4150:	01 54 06 17          	add    DWORD PTR [rsi+rax*1+0x17],edx
    4154:	01 00                	add    DWORD PTR [rax],eax
    4156:	00 09                	add    BYTE PTR [rcx],cl
    4158:	03 72 99             	add    esi,DWORD PTR [rdx-0x67]
    415b:	20 00                	and    BYTE PTR [rax],al
    415d:	00 00                	add    BYTE PTR [rax],al
    415f:	00 00                	add    BYTE PTR [rax],al
    4161:	0d 75 03 00 00       	or     eax,0x375
    4166:	3a 04 00             	cmp    al,BYTE PTR [rax+rax*1]
    4169:	00 0e                	add    BYTE PTR [rsi],cl
    416b:	72 00                	jb     416d <stivale_hdr-0x1fbe93>
    416d:	00 00                	add    BYTE PTR [rax],al
    416f:	07                   	(bad)  
    4170:	00 0f                	add    BYTE PTR [rdi],cl
    4172:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
    4175:	00 10                	add    BYTE PTR [rax],dl
    4177:	0c 1e                	or     al,0x1e
    4179:	00 00                	add    BYTE PTR [rax],al
    417b:	01 bc 0c 3a 04 00 00 	add    DWORD PTR [rsp+rcx*1+0x43a],edi
    4182:	09 03                	or     DWORD PTR [rbx],eax
    4184:	98                   	cwde   
    4185:	99                   	cdq    
    4186:	20 00                	and    BYTE PTR [rax],al
    4188:	00 00                	add    BYTE PTR [rax],al
    418a:	00 00                	add    BYTE PTR [rax],al
    418c:	10 06                	adc    BYTE PTR [rsi],al
    418e:	1d 00 00 01 bf       	sbb    eax,0xbf010000
    4193:	0c 3a                	or     al,0x3a
    4195:	04 00                	add    al,0x0
    4197:	00 09                	add    BYTE PTR [rcx],cl
    4199:	03 a0 99 20 00 00    	add    esp,DWORD PTR [rax+0x2099]
    419f:	00 00                	add    BYTE PTR [rax],al
    41a1:	00 0d 75 03 00 00    	add    BYTE PTR [rip+0x375],cl        # 451c <stivale_hdr-0x1fbae4>
    41a7:	7b 04                	jnp    41ad <stivale_hdr-0x1fbe53>
    41a9:	00 00                	add    BYTE PTR [rax],al
    41ab:	0e                   	(bad)  
    41ac:	72 00                	jb     41ae <stivale_hdr-0x1fbe52>
    41ae:	00 00                	add    BYTE PTR [rax],al
    41b0:	04 00                	add    al,0x0
    41b2:	0f 6b 04 00          	packssdw mm0,QWORD PTR [rax+rax*1]
    41b6:	00 10                	add    BYTE PTR [rax],dl
    41b8:	15 1d 00 00 01       	adc    eax,0x100001d
    41bd:	c2 0c 7b             	ret    0x7b0c
    41c0:	04 00                	add    al,0x0
    41c2:	00 09                	add    BYTE PTR [rcx],cl
    41c4:	03 a8 99 20 00 00    	add    ebp,DWORD PTR [rax+0x2099]
    41ca:	00 00                	add    BYTE PTR [rax],al
    41cc:	00 13                	add    BYTE PTR [rbx],dl
    41ce:	5c                   	pop    rsp
    41cf:	1e                   	(bad)  
    41d0:	00 00                	add    BYTE PTR [rax],al
    41d2:	01 f6                	add    esi,esi
    41d4:	06                   	(bad)  
    41d5:	fe                   	(bad)  
    41d6:	1e                   	(bad)  
    41d7:	00 00                	add    BYTE PTR [rax],al
    41d9:	e9 96 20 00 00       	jmp    6274 <stivale_hdr-0x1f9d8c>
    41de:	00 00                	add    BYTE PTR [rax],al
    41e0:	00 85 00 00 00 00    	add    BYTE PTR [rbp+0x0],al
    41e6:	00 00                	add    BYTE PTR [rax],al
    41e8:	00 01                	add    BYTE PTR [rcx],al
    41ea:	9c                   	pushf  
    41eb:	c8 04 00 00          	enter  0x4,0x0
    41ef:	14 2c                	adc    al,0x2c
    41f1:	33 00                	xor    eax,DWORD PTR [rax]
    41f3:	00 01                	add    BYTE PTR [rcx],al
    41f5:	f6 1d e2 03 00 00    	neg    BYTE PTR [rip+0x3e2]        # 45dd <stivale_hdr-0x1fba23>
    41fb:	02 91 68 00 15 14    	add    dl,BYTE PTR [rcx+0x14150068]
    4201:	1d 00 00 01 ee       	sbb    eax,0xee010000
    4206:	06                   	(bad)  
    4207:	5d                   	pop    rbp
    4208:	1d 00 00 be 96       	sbb    eax,0x96be0000
    420d:	20 00                	and    BYTE PTR [rax],al
    420f:	00 00                	add    BYTE PTR [rax],al
    4211:	00 00                	add    BYTE PTR [rax],al
    4213:	2b 00                	sub    eax,DWORD PTR [rax]
    4215:	00 00                	add    BYTE PTR [rax],al
    4217:	00 00                	add    BYTE PTR [rax],al
    4219:	00 00                	add    BYTE PTR [rax],al
    421b:	01 9c 15 25 1f 00 00 	add    DWORD PTR [rbp+rdx*1+0x1f25],ebx
    4222:	01 d7                	add    edi,edx
    4224:	06                   	(bad)  
    4225:	fb                   	sti    
    4226:	1d 00 00 25 95       	sbb    eax,0x95250000
    422b:	20 00                	and    BYTE PTR [rax],al
    422d:	00 00                	add    BYTE PTR [rax],al
    422f:	00 00                	add    BYTE PTR [rax],al
    4231:	99                   	cdq    
    4232:	01 00                	add    DWORD PTR [rax],eax
    4234:	00 00                	add    BYTE PTR [rax],al
    4236:	00 00                	add    BYTE PTR [rax],al
    4238:	00 01                	add    BYTE PTR [rcx],al
    423a:	9c                   	pushf  
    423b:	13 0b                	adc    ecx,DWORD PTR [rbx]
    423d:	1e                   	(bad)  
    423e:	00 00                	add    BYTE PTR [rax],al
    4240:	01 c5                	add    ebp,eax
    4242:	06                   	(bad)  
    4243:	cd 1d                	int    0x1d
    4245:	00 00                	add    BYTE PTR [rax],al
    4247:	6b 94 20 00 00 00 00 	imul   edx,DWORD PTR [rax+riz*1+0x0],0x0
    424e:	00 
    424f:	ba 00 00 00 00       	mov    edx,0x0
    4254:	00 00                	add    BYTE PTR [rax],al
    4256:	00 01                	add    BYTE PTR [rcx],al
    4258:	9c                   	pushf  
    4259:	54                   	push   rsp
    425a:	05 00 00 10 ea       	add    eax,0xea100000
    425f:	15 00 00 01 c7       	adc    eax,0xc7010000
    4264:	0e                   	(bad)  
    4265:	66 00 00             	data16 add BYTE PTR [rax],al
    4268:	00 02                	add    BYTE PTR [rdx],al
    426a:	91                   	xchg   ecx,eax
    426b:	68 10 43 16 00       	push   0x164310
    4270:	00 01                	add    BYTE PTR [rcx],al
    4272:	c7                   	(bad)  
    4273:	19 66 00             	sbb    DWORD PTR [rsi+0x0],esp
    4276:	00 00                	add    BYTE PTR [rax],al
    4278:	02 91 60 10 b5 1e    	add    dl,BYTE PTR [rcx+0x1eb51060]
    427e:	00 00                	add    BYTE PTR [rax],al
    4280:	01 c7                	add    edi,eax
    4282:	23 66 00             	and    esp,DWORD PTR [rsi+0x0]
    4285:	00 00                	add    BYTE PTR [rax],al
    4287:	02 91 58 00 16 e5    	add    dl,BYTE PTR [rcx-0x1ae9ffa8]
    428d:	1d 00 00 01 ae       	sbb    eax,0xae010000
    4292:	06                   	(bad)  
    4293:	23 94 20 00 00 00 00 	and    edx,DWORD PTR [rax+riz*1+0x0]
    429a:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    429d:	00 00                	add    BYTE PTR [rax],al
    429f:	00 00                	add    BYTE PTR [rax],al
    42a1:	00 00                	add    BYTE PTR [rax],al
    42a3:	01 9c 15 15 1f 00 00 	add    DWORD PTR [rbp+rdx*1+0x1f15],ebx
    42aa:	01 91 06 30 1f 00    	add    DWORD PTR [rcx+0x1f3006],edx
    42b0:	00 70 93             	add    BYTE PTR [rax-0x6d],dh
    42b3:	20 00                	and    BYTE PTR [rax],al
    42b5:	00 00                	add    BYTE PTR [rax],al
    42b7:	00 00                	add    BYTE PTR [rax],al
    42b9:	b3 00                	mov    bl,0x0
    42bb:	00 00                	add    BYTE PTR [rax],al
    42bd:	00 00                	add    BYTE PTR [rax],al
    42bf:	00 00                	add    BYTE PTR [rax],al
    42c1:	01 9c 13 4e 1d 00 00 	add    DWORD PTR [rbx+rdx*1+0x1d4e],ebx
    42c8:	01 68 06             	add    DWORD PTR [rax+0x6],ebp
    42cb:	1b 1d 00 00 83 92    	sbb    ebx,DWORD PTR [rip+0xffffffff92830000]        # ffffffff928342d1 <__kernel_end+0xffffffff926222d1>
    42d1:	20 00                	and    BYTE PTR [rax],al
    42d3:	00 00                	add    BYTE PTR [rax],al
    42d5:	00 00                	add    BYTE PTR [rax],al
    42d7:	ed                   	in     eax,dx
    42d8:	00 00                	add    BYTE PTR [rax],al
    42da:	00 00                	add    BYTE PTR [rax],al
    42dc:	00 00                	add    BYTE PTR [rax],al
    42de:	00 01                	add    BYTE PTR [rcx],al
    42e0:	9c                   	pushf  
    42e1:	cd 05                	int    0x5
    42e3:	00 00                	add    BYTE PTR [rax],al
    42e5:	14 38                	adc    al,0x38
    42e7:	1d 00 00 01 68       	sbb    eax,0x68010000
    42ec:	29 79 00             	sub    DWORD PTR [rcx+0x0],edi
    42ef:	00 00                	add    BYTE PTR [rax],al
    42f1:	02 91 5e 10 3f 39    	add    dl,BYTE PTR [rcx+0x393f105e]
    42f7:	00 00                	add    BYTE PTR [rax],al
    42f9:	01 6d 0a             	add    DWORD PTR [rbp+0xa],ebp
    42fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42fd:	03 00                	add    eax,DWORD PTR [rax]
    42ff:	00 02                	add    BYTE PTR [rdx],al
    4301:	91                   	xchg   ecx,eax
    4302:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4303:	00 17                	add    BYTE PTR [rdi],dl
    4305:	ce                   	(bad)  
    4306:	1e                   	(bad)  
    4307:	00 00                	add    BYTE PTR [rax],al
    4309:	01 5f 07             	add    DWORD PTR [rdi+0x7],ebx
    430c:	76 1d                	jbe    432b <stivale_hdr-0x1fbcd5>
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	4f 06                	rex.WRXB (bad) 
    4312:	00 00                	add    BYTE PTR [rax],al
    4314:	36 92                	ss xchg edx,eax
    4316:	20 00                	and    BYTE PTR [rax],al
    4318:	00 00                	add    BYTE PTR [rax],al
    431a:	00 00                	add    BYTE PTR [rax],al
    431c:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    431f:	00 00                	add    BYTE PTR [rax],al
    4321:	00 00                	add    BYTE PTR [rax],al
    4323:	00 01                	add    BYTE PTR [rcx],al
    4325:	9c                   	pushf  
    4326:	4f 06                	rex.WRXB (bad) 
    4328:	00 00                	add    BYTE PTR [rax],al
    432a:	14 08                	adc    al,0x8
    432c:	2d 00 00 01 5f       	sub    eax,0x5f010000
    4331:	15 4f 06 00 00       	adc    eax,0x64f
    4336:	02 91 58 14 07 05    	add    dl,BYTE PTR [rcx+0x5071458]
    433c:	00 00                	add    BYTE PTR [rax],al
    433e:	01 5f 2b             	add    DWORD PTR [rdi+0x2b],ebx
    4341:	51                   	push   rcx
    4342:	00 00                	add    BYTE PTR [rax],al
    4344:	00 02                	add    BYTE PTR [rdx],al
    4346:	91                   	xchg   ecx,eax
    4347:	54                   	push   rsp
    4348:	14 ce                	adc    al,0xce
    434a:	2f                   	(bad)  
    434b:	00 00                	add    BYTE PTR [rax],al
    434d:	01 5f 40             	add    DWORD PTR [rdi+0x40],ebx
    4350:	72 00                	jb     4352 <stivale_hdr-0x1fbcae>
    4352:	00 00                	add    BYTE PTR [rax],al
    4354:	02 91 48 10 e7 1e    	add    dl,BYTE PTR [rcx+0x1ee71048]
    435a:	00 00                	add    BYTE PTR [rax],al
    435c:	01 61 11             	add    DWORD PTR [rcx+0x11],esp
    435f:	51                   	push   rcx
    4360:	06                   	(bad)  
    4361:	00 00                	add    BYTE PTR [rax],al
    4363:	02 91 60 18 53 92    	add    dl,BYTE PTR [rcx-0x6dace7a0]
    4369:	20 00                	and    BYTE PTR [rax],al
    436b:	00 00                	add    BYTE PTR [rax],al
    436d:	00 00                	add    BYTE PTR [rax],al
    436f:	2a 00                	sub    al,BYTE PTR [rax]
    4371:	00 00                	add    BYTE PTR [rax],al
    4373:	00 00                	add    BYTE PTR [rax],al
    4375:	00 00                	add    BYTE PTR [rax],al
    4377:	19 69 00             	sbb    DWORD PTR [rcx+0x0],ebp
    437a:	01 62 15             	add    DWORD PTR [rdx+0x15],esp
    437d:	72 00                	jb     437f <stivale_hdr-0x1fbc81>
    437f:	00 00                	add    BYTE PTR [rax],al
    4381:	02 91 68 00 00 1a    	add    dl,BYTE PTR [rcx+0x1a000068]
    4387:	08 12                	or     BYTE PTR [rdx],dl
    4389:	08 51 00             	or     BYTE PTR [rcx+0x0],dl
    438c:	00 00                	add    BYTE PTR [rax],al
    438e:	17                   	(bad)  
    438f:	15 1e 00 00 01       	adc    eax,0x100001e
    4394:	57                   	push   rdi
    4395:	07                   	(bad)  
    4396:	50                   	push   rax
    4397:	1f                   	(bad)  
    4398:	00 00                	add    BYTE PTR [rax],al
    439a:	4f 06                	rex.WRXB (bad) 
    439c:	00 00                	add    BYTE PTR [rax],al
    439e:	15 92 20 00 00       	adc    eax,0x2092
    43a3:	00 00                	add    BYTE PTR [rax],al
    43a5:	00 21                	add    BYTE PTR [rcx],ah
    43a7:	00 00                	add    BYTE PTR [rax],al
    43a9:	00 00                	add    BYTE PTR [rax],al
    43ab:	00 00                	add    BYTE PTR [rax],al
    43ad:	00 01                	add    BYTE PTR [rcx],al
    43af:	9c                   	pushf  
    43b0:	8d 06                	lea    eax,[rsi]
    43b2:	00 00                	add    BYTE PTR [rax],al
    43b4:	19 72 61             	sbb    DWORD PTR [rdx+0x61],esi
    43b7:	78 00                	js     43b9 <stivale_hdr-0x1fbc47>
    43b9:	01 59 0e             	add    DWORD PTR [rcx+0xe],ebx
    43bc:	66 00 00             	data16 add BYTE PTR [rax],al
    43bf:	00 02                	add    BYTE PTR [rdx],al
    43c1:	91                   	xchg   ecx,eax
    43c2:	68 00 1b 43 1d       	push   0x1d431b00
    43c7:	00 00                	add    BYTE PTR [rax],al
    43c9:	01 46 06             	add    DWORD PTR [rsi+0x6],eax
    43cc:	85 1d 00 00 ff 91    	test   DWORD PTR [rip+0xffffffff91ff0000],ebx        # ffffffff91ff43d2 <__kernel_end+0xffffffff91de23d2>
    43d2:	20 00                	and    BYTE PTR [rax],al
    43d4:	00 00                	add    BYTE PTR [rax],al
    43d6:	00 00                	add    BYTE PTR [rax],al
    43d8:	16                   	(bad)  
    43d9:	00 00                	add    BYTE PTR [rax],al
    43db:	00 00                	add    BYTE PTR [rax],al
    43dd:	00 00                	add    BYTE PTR [rax],al
    43df:	00 01                	add    BYTE PTR [rcx],al
    43e1:	9c                   	pushf  
    43e2:	bf 06 00 00 14       	mov    edi,0x14000006
    43e7:	4d 0d 00 00 01 46    	rex.WRB or rax,0x46010000
    43ed:	27                   	(bad)  
    43ee:	ca 06 00             	retf   0x6
    43f1:	00 02                	add    BYTE PTR [rdx],al
    43f3:	91                   	xchg   ecx,eax
    43f4:	68 00 1c ca 06       	push   0x6ca1c00
    43f9:	00 00                	add    BYTE PTR [rax],al
    43fb:	1d 79 00 00 00       	sbb    eax,0x79
    4400:	00 12                	add    BYTE PTR [rdx],dl
    4402:	08 bf 06 00 00 17    	or     BYTE PTR [rdi+0x17000006],bh
    4408:	fc                   	cld    
    4409:	1c 00                	sbb    al,0x0
    440b:	00 01                	add    BYTE PTR [rcx],al
    440d:	3e 0a 68 1d          	or     ch,BYTE PTR ds:[rax+0x1d]
    4411:	00 00                	add    BYTE PTR [rax],al
    4413:	66 00 00             	data16 add BYTE PTR [rax],al
    4416:	00 e1                	add    cl,ah
    4418:	91                   	xchg   ecx,eax
    4419:	20 00                	and    BYTE PTR [rax],al
    441b:	00 00                	add    BYTE PTR [rax],al
    441d:	00 00                	add    BYTE PTR [rax],al
    441f:	1e                   	(bad)  
    4420:	00 00                	add    BYTE PTR [rax],al
    4422:	00 00                	add    BYTE PTR [rax],al
    4424:	00 00                	add    BYTE PTR [rax],al
    4426:	00 01                	add    BYTE PTR [rcx],al
    4428:	9c                   	pushf  
    4429:	15 07 00 00 14       	adc    eax,0x14000007
    442e:	90                   	nop
    442f:	15 00 00 01 3e       	adc    eax,0x3e010000
    4434:	1c 45                	sbb    al,0x45
    4436:	00 00                	add    BYTE PTR [rax],al
    4438:	00 02                	add    BYTE PTR [rdx],al
    443a:	91                   	xchg   ecx,eax
    443b:	5c                   	pop    rsp
    443c:	19 72 61             	sbb    DWORD PTR [rdx+0x61],esi
    443f:	78 00                	js     4441 <stivale_hdr-0x1fbbbf>
    4441:	01 40 0e             	add    DWORD PTR [rax+0xe],eax
    4444:	66 00 00             	data16 add BYTE PTR [rax],al
    4447:	00 02                	add    BYTE PTR [rdx],al
    4449:	91                   	xchg   ecx,eax
    444a:	68 00 1b 55 1e       	push   0x1e551b00
    444f:	00 00                	add    BYTE PTR [rax],al
    4451:	01 38                	add    DWORD PTR [rax],edi
    4453:	06                   	(bad)  
    4454:	a8 1e                	test   al,0x1e
    4456:	00 00                	add    BYTE PTR [rax],al
    4458:	cb                   	retf   
    4459:	91                   	xchg   ecx,eax
    445a:	20 00                	and    BYTE PTR [rax],al
    445c:	00 00                	add    BYTE PTR [rax],al
    445e:	00 00                	add    BYTE PTR [rax],al
    4460:	16                   	(bad)  
    4461:	00 00                	add    BYTE PTR [rax],al
    4463:	00 00                	add    BYTE PTR [rax],al
    4465:	00 00                	add    BYTE PTR [rax],al
    4467:	00 01                	add    BYTE PTR [rcx],al
    4469:	9c                   	pushf  
    446a:	47 07                	rex.RXB (bad) 
    446c:	00 00                	add    BYTE PTR [rax],al
    446e:	14 4c                	adc    al,0x4c
    4470:	16                   	(bad)  
    4471:	00 00                	add    BYTE PTR [rax],al
    4473:	01 38                	add    DWORD PTR [rax],edi
    4475:	1a 47 07             	sbb    al,BYTE PTR [rdi+0x7]
    4478:	00 00                	add    BYTE PTR [rax],al
    447a:	02 91 68 00 12 08    	add    dl,BYTE PTR [rcx+0x8120068]
    4480:	75 03                	jne    4485 <stivale_hdr-0x1fbb7b>
    4482:	00 00                	add    BYTE PTR [rax],al
    4484:	17                   	(bad)  
    4485:	bc 1d 00 00 01       	mov    esp,0x100001d
    448a:	26 06                	es (bad) 
    448c:	d6                   	(bad)  
    448d:	1e                   	(bad)  
    448e:	00 00                	add    BYTE PTR [rax],al
    4490:	17                   	(bad)  
    4491:	01 00                	add    DWORD PTR [rax],eax
    4493:	00 6a 91             	add    BYTE PTR [rdx-0x6f],ch
    4496:	20 00                	and    BYTE PTR [rax],al
    4498:	00 00                	add    BYTE PTR [rax],al
    449a:	00 00                	add    BYTE PTR [rax],al
    449c:	61                   	(bad)  
    449d:	00 00                	add    BYTE PTR [rax],al
    449f:	00 00                	add    BYTE PTR [rax],al
    44a1:	00 00                	add    BYTE PTR [rax],al
    44a3:	00 01                	add    BYTE PTR [rcx],al
    44a5:	9c                   	pushf  
    44a6:	a1 07 00 00 1e 6c 68 	movabs eax,ds:0x73686c1e000007
    44ad:	73 00 
    44af:	01 26                	add    DWORD PTR [rsi],esp
    44b1:	1a 47 07             	sbb    al,BYTE PTR [rdi+0x7]
    44b4:	00 00                	add    BYTE PTR [rax],al
    44b6:	02 91 58 1e 72 68    	add    dl,BYTE PTR [rcx+0x68721e58]
    44bc:	73 00                	jae    44be <stivale_hdr-0x1fbb42>
    44be:	01 26                	add    DWORD PTR [rsi],esp
    44c0:	2b 47 07             	sub    eax,DWORD PTR [rdi+0x7]
    44c3:	00 00                	add    BYTE PTR [rax],al
    44c5:	02 91 50 10 2e 1e    	add    dl,BYTE PTR [rcx+0x1e2e1050]
    44cb:	00 00                	add    BYTE PTR [rax],al
    44cd:	01 28                	add    DWORD PTR [rax],ebp
    44cf:	11 47 07             	adc    DWORD PTR [rdi+0x7],eax
    44d2:	00 00                	add    BYTE PTR [rax],al
    44d4:	02 91 68 00 1f 0f    	add    dl,BYTE PTR [rcx+0xf1f0068]
    44da:	1d 00 00 01 1a       	sbb    eax,0x1a010000
    44df:	07                   	(bad)  
    44e0:	24 1e                	and    al,0x1e
    44e2:	00 00                	add    BYTE PTR [rax],al
    44e4:	e2 03                	loop   44e9 <stivale_hdr-0x1fbb17>
    44e6:	00 00                	add    BYTE PTR [rax],al
    44e8:	f1                   	icebp  
    44e9:	90                   	nop
    44ea:	20 00                	and    BYTE PTR [rax],al
    44ec:	00 00                	add    BYTE PTR [rax],al
    44ee:	00 00                	add    BYTE PTR [rax],al
    44f0:	79 00                	jns    44f2 <stivale_hdr-0x1fbb0e>
    44f2:	00 00                	add    BYTE PTR [rax],al
    44f4:	00 00                	add    BYTE PTR [rax],al
    44f6:	00 00                	add    BYTE PTR [rax],al
    44f8:	01 9c 1e 76 61 6c 00 	add    DWORD PTR [rsi+rbx*1+0x6c6176],ebx
    44ff:	01 1a                	add    DWORD PTR [rdx],ebx
    4501:	15 3e 00 00 00       	adc    eax,0x3e
    4506:	02 91 58 14 1a 04    	add    dl,BYTE PTR [rcx+0x41a1458]
    450c:	00 00                	add    BYTE PTR [rax],al
    450e:	01 1a                	add    DWORD PTR [rdx],ebx
    4510:	1e                   	(bad)  
    4511:	37                   	(bad)  
    4512:	00 00                	add    BYTE PTR [rax],al
    4514:	00 02                	add    BYTE PTR [rdx],al
    4516:	91                   	xchg   ecx,eax
    4517:	54                   	push   rsp
    4518:	19 69 00             	sbb    DWORD PTR [rcx+0x0],ebp
    451b:	01 1c 06             	add    DWORD PTR [rsi+rax*1],ebx
    451e:	37                   	(bad)  
    451f:	00 00                	add    BYTE PTR [rax],al
    4521:	00 02                	add    BYTE PTR [rdx],al
    4523:	91                   	xchg   ecx,eax
    4524:	6c                   	ins    BYTE PTR es:[rdi],dx
    4525:	00 00                	add    BYTE PTR [rax],al
    4527:	86 02                	xchg   BYTE PTR [rdx],al
    4529:	00 00                	add    BYTE PTR [rax],al
    452b:	04 00                	add    al,0x0
    452d:	62                   	(bad)  
    452e:	18 00                	sbb    BYTE PTR [rax],al
    4530:	00 08                	add    BYTE PTR [rax],cl
    4532:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    4536:	00 04 70             	add    BYTE PTR [rax+rsi*2],al
    4539:	1f                   	(bad)  
    453a:	00 00                	add    BYTE PTR [rax],al
    453c:	24 01                	and    al,0x1
    453e:	00 00                	add    BYTE PTR [rax],al
    4540:	62                   	(bad)  
    4541:	39 20                	cmp    DWORD PTR [rax],esp
    4543:	00 00                	add    BYTE PTR [rax],al
    4545:	00 00                	add    BYTE PTR [rax],al
    4547:	00 17                	add    BYTE PTR [rdi],dl
    4549:	01 00                	add    DWORD PTR [rax],eax
    454b:	00 00                	add    BYTE PTR [rax],al
    454d:	00 00                	add    BYTE PTR [rax],al
    454f:	00 3d 1a 00 00 02    	add    BYTE PTR [rip+0x200001a],bh        # 200456f <__kernel_end+0x1df256f>
    4555:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 46c5 <stivale_hdr-0x1fb93b>
    455b:	02 08                	add    cl,BYTE PTR [rax]
    455d:	07                   	(bad)  
    455e:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    4561:	00 02                	add    BYTE PTR [rdx],al
    4563:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 46ce <stivale_hdr-0x1fb932>
    4569:	02 10                	add    dl,BYTE PTR [rax]
    456b:	04 8f                	add    al,0x8f
    456d:	01 00                	add    DWORD PTR [rax],eax
    456f:	00 03                	add    BYTE PTR [rbx],al
    4571:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4574:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    4577:	23 00                	and    eax,DWORD PTR [rax]
    4579:	00 02                	add    BYTE PTR [rdx],al
    457b:	04 1d                	add    al,0x1d
    457d:	5a                   	pop    rdx
    457e:	00 00                	add    BYTE PTR [rax],al
    4580:	00 02                	add    BYTE PTR [rdx],al
    4582:	01 08                	add    DWORD PTR [rax],ecx
    4584:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4585:	00 00                	add    BYTE PTR [rax],al
    4587:	00 02                	add    BYTE PTR [rdx],al
    4589:	02 07                	add    al,BYTE PTR [rdi]
    458b:	9b                   	fwait
    458c:	01 00                	add    DWORD PTR [rax],eax
    458e:	00 02                	add    BYTE PTR [rdx],al
    4590:	04 07                	add    al,0x7
    4592:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    4595:	00 02                	add    BYTE PTR [rdx],al
    4597:	10 07                	adc    BYTE PTR [rdi],al
    4599:	00 00                	add    BYTE PTR [rax],al
    459b:	00 00                	add    BYTE PTR [rax],al
    459d:	04 5f                	add    al,0x5f
    459f:	03 00                	add    eax,DWORD PTR [rax]
    45a1:	00 02                	add    BYTE PTR [rdx],al
    45a3:	0a 1d 5a 00 00 00    	or     bl,BYTE PTR [rip+0x5a]        # 4603 <stivale_hdr-0x1fb9fd>
    45a9:	04 25                	add    al,0x25
    45ab:	00 00                	add    BYTE PTR [rax],al
    45ad:	00 02                	add    BYTE PTR [rdx],al
    45af:	0d 1d 34 00 00       	or     eax,0x341d
    45b4:	00 02                	add    BYTE PTR [rdx],al
    45b6:	01 06                	add    DWORD PTR [rsi],eax
    45b8:	70 00                	jo     45ba <stivale_hdr-0x1fba46>
    45ba:	00 00                	add    BYTE PTR [rax],al
    45bc:	02 02                	add    al,BYTE PTR [rdx]
    45be:	05 73 01 00 00       	add    eax,0x173
    45c3:	05 04 05 69 6e       	add    eax,0x6e690504
    45c8:	74 00                	je     45ca <stivale_hdr-0x1fba36>
    45ca:	02 10                	add    dl,BYTE PTR [rax]
    45cc:	05 1b 01 00 00       	add    eax,0x11b
    45d1:	04 3b                	add    al,0x3b
    45d3:	02 00                	add    al,BYTE PTR [rax]
    45d5:	00 02                	add    BYTE PTR [rdx],al
    45d7:	17                   	(bad)  
    45d8:	1d 82 00 00 00       	sbb    eax,0x82
    45dd:	06                   	(bad)  
    45de:	95                   	xchg   ebp,eax
    45df:	07                   	(bad)  
    45e0:	00 00                	add    BYTE PTR [rax],al
    45e2:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    45e5:	52                   	push   rdx
    45e6:	01 00                	add    DWORD PTR [rax],eax
    45e8:	00 07                	add    BYTE PTR [rdi],al
    45ea:	b1 0f                	mov    cl,0xf
    45ec:	00 00                	add    BYTE PTR [rax],al
    45ee:	10 03                	adc    BYTE PTR [rbx],al
    45f0:	05 0b 08 97 06       	add    eax,0x697080b
    45f5:	00 00                	add    BYTE PTR [rax],al
    45f7:	03 07                	add    eax,DWORD PTR [rdi]
    45f9:	0e                   	(bad)  
    45fa:	aa                   	stos   BYTE PTR es:[rdi],al
    45fb:	00 00                	add    BYTE PTR [rax],al
    45fd:	00 00                	add    BYTE PTR [rax],al
    45ff:	01 08                	add    DWORD PTR [rax],ecx
    4601:	08 2d 00 00 03 08    	or     BYTE PTR [rip+0x8030000],ch        # 8034607 <__kernel_end+0x7e22607>
    4607:	0f 52 01             	rsqrtps xmm0,XMMWORD PTR [rcx]
    460a:	00 00                	add    BYTE PTR [rax],al
    460c:	08 01                	or     BYTE PTR [rcx],al
    460e:	09 45 12             	or     DWORD PTR [rbp+0x12],eax
    4611:	00 00                	add    BYTE PTR [rax],al
    4613:	03 09                	add    ecx,DWORD PTR [rcx]
    4615:	0e                   	(bad)  
    4616:	57                   	push   rdi
    4617:	10 00                	adc    BYTE PTR [rax],al
    4619:	00 58 01             	add    BYTE PTR [rax+0x1],bl
    461c:	00 00                	add    BYTE PTR [rax],al
    461e:	01 00                	add    DWORD PTR [rax],eax
    4620:	01 00                	add    DWORD PTR [rax],eax
    4622:	00 0b                	add    BYTE PTR [rbx],cl
    4624:	01 00                	add    DWORD PTR [rax],eax
    4626:	00 0a                	add    BYTE PTR [rdx],cl
    4628:	5f                   	pop    rdi
    4629:	01 00                	add    DWORD PTR [rax],eax
    462b:	00 0b                	add    BYTE PTR [rbx],cl
    462d:	82                   	(bad)  
    462e:	00 00                	add    BYTE PTR [rax],al
    4630:	00 00                	add    BYTE PTR [rax],al
    4632:	0c 67                	or     al,0x67
    4634:	65 74 00             	gs je  4637 <stivale_hdr-0x1fb9c9>
    4637:	03 0a                	add    ecx,DWORD PTR [rdx]
    4639:	0e                   	(bad)  
    463a:	1d 11 00 00 58       	sbb    eax,0x58000011
    463f:	01 00                	add    DWORD PTR [rax],eax
    4641:	00 01                	add    BYTE PTR [rcx],al
    4643:	24 01                	and    al,0x1
    4645:	00 00                	add    BYTE PTR [rax],al
    4647:	2f                   	(bad)  
    4648:	01 00                	add    DWORD PTR [rax],eax
    464a:	00 0a                	add    BYTE PTR [rdx],cl
    464c:	5f                   	pop    rdi
    464d:	01 00                	add    DWORD PTR [rax],eax
    464f:	00 0b                	add    BYTE PTR [rbx],cl
    4651:	82                   	(bad)  
    4652:	00 00                	add    BYTE PTR [rax],al
    4654:	00 00                	add    BYTE PTR [rax],al
    4656:	0d 73 65 74 00       	or     eax,0x746573
    465b:	03 0b                	add    ecx,DWORD PTR [rbx]
    465d:	0e                   	(bad)  
    465e:	08 12                	or     BYTE PTR [rdx],dl
    4660:	00 00                	add    BYTE PTR [rax],al
    4662:	01 40 01             	add    DWORD PTR [rax+0x1],eax
    4665:	00 00                	add    BYTE PTR [rax],al
    4667:	0a 5f 01             	or     bl,BYTE PTR [rdi+0x1]
    466a:	00 00                	add    BYTE PTR [rax],al
    466c:	0b 82 00 00 00 0b    	or     eax,DWORD PTR [rdx+0xb000000]
    4672:	58                   	pop    rax
    4673:	01 00                	add    DWORD PTR [rax],eax
    4675:	00 00                	add    BYTE PTR [rax],al
    4677:	00 00                	add    BYTE PTR [rax],al
    4679:	0e                   	(bad)  
    467a:	08 4e 00             	or     BYTE PTR [rsi+0x0],cl
    467d:	00 00                	add    BYTE PTR [rax],al
    467f:	02 01                	add    al,BYTE PTR [rcx]
    4681:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    4684:	00 00                	add    BYTE PTR [rax],al
    4686:	0e                   	(bad)  
    4687:	08 c2                	or     dl,al
    4689:	00 00                	add    BYTE PTR [rax],al
    468b:	00 0f                	add    BYTE PTR [rdi],cl
    468d:	5f                   	pop    rdi
    468e:	01 00                	add    DWORD PTR [rax],eax
    4690:	00 10                	add    BYTE PTR [rax],dl
    4692:	2f                   	(bad)  
    4693:	01 00                	add    DWORD PTR [rax],eax
    4695:	00 01                	add    BYTE PTR [rcx],al
    4697:	10 06                	adc    BYTE PTR [rsi],al
    4699:	8c 01                	mov    WORD PTR [rcx],es
    469b:	00 00                	add    BYTE PTR [rax],al
    469d:	dc 39                	fdivr  QWORD PTR [rcx]
    469f:	20 00                	and    BYTE PTR [rax],al
    46a1:	00 00                	add    BYTE PTR [rax],al
    46a3:	00 00                	add    BYTE PTR [rax],al
    46a5:	9d                   	popf   
    46a6:	00 00                	add    BYTE PTR [rax],al
    46a8:	00 00                	add    BYTE PTR [rax],al
    46aa:	00 00                	add    BYTE PTR [rax],al
    46ac:	00 01                	add    BYTE PTR [rcx],al
    46ae:	9c                   	pushf  
    46af:	e4 01                	in     al,0x1
    46b1:	00 00                	add    BYTE PTR [rax],al
    46b3:	11 d6                	adc    esi,edx
    46b5:	0e                   	(bad)  
    46b6:	00 00                	add    BYTE PTR [rax],al
    46b8:	65 01 00             	add    DWORD PTR gs:[rax],eax
    46bb:	00 02                	add    BYTE PTR [rdx],al
    46bd:	91                   	xchg   ecx,eax
    46be:	58                   	pop    rax
    46bf:	12 89 1f 00 00 01    	adc    cl,BYTE PTR [rcx+0x100001f]
    46c5:	10 1f                	adc    BYTE PTR [rdi],bl
    46c7:	82                   	(bad)  
    46c8:	00 00                	add    BYTE PTR [rax],al
    46ca:	00 02                	add    BYTE PTR [rdx],al
    46cc:	91                   	xchg   ecx,eax
    46cd:	50                   	push   rax
    46ce:	12 07                	adc    al,BYTE PTR [rdi]
    46d0:	05 00 00 01 10       	add    eax,0x10010000
    46d5:	2b 58 01             	sub    ebx,DWORD PTR [rax+0x1]
    46d8:	00 00                	add    BYTE PTR [rax],al
    46da:	02 91 4c 13 84 1f    	add    dl,BYTE PTR [rcx+0x1f84134c]
    46e0:	00 00                	add    BYTE PTR [rax],al
    46e2:	01 12                	add    DWORD PTR [rdx],edx
    46e4:	0c 82                	or     al,0x82
    46e6:	00 00                	add    BYTE PTR [rax],al
    46e8:	00 02                	add    BYTE PTR [rdx],al
    46ea:	91                   	xchg   ecx,eax
    46eb:	68 13 8f 1f 00       	push   0x1f8f13
    46f0:	00 01                	add    BYTE PTR [rcx],al
    46f2:	13 0c 76             	adc    ecx,DWORD PTR [rsi+rsi*2]
    46f5:	00 00                	add    BYTE PTR [rax],al
    46f7:	00 02                	add    BYTE PTR [rdx],al
    46f9:	91                   	xchg   ecx,eax
    46fa:	67 13 64 1f 00       	adc    esp,DWORD PTR [edi+ebx*1+0x0]
    46ff:	00 01                	add    BYTE PTR [rcx],al
    4701:	14 0c                	adc    al,0xc
    4703:	76 00                	jbe    4705 <stivale_hdr-0x1fb8fb>
    4705:	00 00                	add    BYTE PTR [rax],al
    4707:	02 91 66 00 10 0b    	add    dl,BYTE PTR [rcx+0xb100066]
    470d:	01 00                	add    DWORD PTR [rax],eax
    470f:	00 01                	add    BYTE PTR [rcx],al
    4711:	07                   	(bad)  
    4712:	06                   	(bad)  
    4713:	06                   	(bad)  
    4714:	02 00                	add    al,BYTE PTR [rax]
    4716:	00 88 39 20 00 00    	add    BYTE PTR [rax+0x2039],cl
    471c:	00 00                	add    BYTE PTR [rax],al
    471e:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
    4722:	00 00                	add    BYTE PTR [rax],al
    4724:	00 00                	add    BYTE PTR [rax],al
    4726:	00 01                	add    BYTE PTR [rcx],al
    4728:	9c                   	pushf  
    4729:	4f 02 00             	rex.WRXB add r8b,BYTE PTR [r8]
    472c:	00 11                	add    BYTE PTR [rcx],dl
    472e:	d6                   	(bad)  
    472f:	0e                   	(bad)  
    4730:	00 00                	add    BYTE PTR [rax],al
    4732:	65 01 00             	add    DWORD PTR gs:[rax],eax
    4735:	00 02                	add    BYTE PTR [rdx],al
    4737:	91                   	xchg   ecx,eax
    4738:	58                   	pop    rax
    4739:	12 89 1f 00 00 01    	adc    cl,BYTE PTR [rcx+0x100001f]
    473f:	07                   	(bad)  
    4740:	1f                   	(bad)  
    4741:	82                   	(bad)  
    4742:	00 00                	add    BYTE PTR [rax],al
    4744:	00 02                	add    BYTE PTR [rdx],al
    4746:	91                   	xchg   ecx,eax
    4747:	50                   	push   rax
    4748:	13 84 1f 00 00 01 09 	adc    eax,DWORD PTR [rdi+rbx*1+0x9010000]
    474f:	0a aa 00 00 00 02    	or     ch,BYTE PTR [rdx+0x2000000]
    4755:	91                   	xchg   ecx,eax
    4756:	68 13 8f 1f 00       	push   0x1f8f13
    475b:	00 01                	add    BYTE PTR [rcx],al
    475d:	0a 0c 76             	or     cl,BYTE PTR [rsi+rsi*2]
    4760:	00 00                	add    BYTE PTR [rax],al
    4762:	00 02                	add    BYTE PTR [rdx],al
    4764:	91                   	xchg   ecx,eax
    4765:	67 13 64 1f 00       	adc    esp,DWORD PTR [edi+ebx*1+0x0]
    476a:	00 01                	add    BYTE PTR [rcx],al
    476c:	0b 0c 76             	or     ecx,DWORD PTR [rsi+rsi*2]
    476f:	00 00                	add    BYTE PTR [rax],al
    4771:	00 02                	add    BYTE PTR [rdx],al
    4773:	91                   	xchg   ecx,eax
    4774:	66 00 14 e7          	data16 add BYTE PTR [rdi+riz*8],dl
    4778:	00 00                	add    BYTE PTR [rax],al
    477a:	00 01                	add    BYTE PTR [rcx],al
    477c:	03 06                	add    eax,DWORD PTR [rsi]
    477e:	6d                   	ins    DWORD PTR es:[rdi],dx
    477f:	02 00                	add    al,BYTE PTR [rax]
    4781:	00 62 39             	add    BYTE PTR [rdx+0x39],ah
    4784:	20 00                	and    BYTE PTR [rax],al
    4786:	00 00                	add    BYTE PTR [rax],al
    4788:	00 00                	add    BYTE PTR [rax],al
    478a:	25 00 00 00 00       	and    eax,0x0
    478f:	00 00                	add    BYTE PTR [rax],al
    4791:	00 01                	add    BYTE PTR [rcx],al
    4793:	9c                   	pushf  
    4794:	11 d6                	adc    esi,edx
    4796:	0e                   	(bad)  
    4797:	00 00                	add    BYTE PTR [rax],al
    4799:	65 01 00             	add    DWORD PTR gs:[rax],eax
    479c:	00 02                	add    BYTE PTR [rdx],al
    479e:	91                   	xchg   ecx,eax
    479f:	68 12 89 1f 00       	push   0x1f8912
    47a4:	00 01                	add    BYTE PTR [rcx],al
    47a6:	03 26                	add    esp,DWORD PTR [rsi]
    47a8:	82                   	(bad)  
    47a9:	00 00                	add    BYTE PTR [rax],al
    47ab:	00 02                	add    BYTE PTR [rdx],al
    47ad:	91                   	xchg   ecx,eax
    47ae:	60                   	(bad)  
    47af:	00 00                	add    BYTE PTR [rax],al
    47b1:	6b 03 00             	imul   eax,DWORD PTR [rbx],0x0
    47b4:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    47b7:	a1 19 00 00 08 01 7c 	movabs eax,ds:0x7c0108000019
    47be:	00 00 
    47c0:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    47c3:	1f                   	(bad)  
    47c4:	00 00                	add    BYTE PTR [rax],al
    47c6:	24 01                	and    al,0x1
    47c8:	00 00                	add    BYTE PTR [rax],al
    47ca:	79 3a                	jns    4806 <stivale_hdr-0x1fb7fa>
    47cc:	20 00                	and    BYTE PTR [rax],al
    47ce:	00 00                	add    BYTE PTR [rax],al
    47d0:	00 00                	add    BYTE PTR [rax],al
    47d2:	d5                   	(bad)  
    47d3:	01 00                	add    DWORD PTR [rax],eax
    47d5:	00 00                	add    BYTE PTR [rax],al
    47d7:	00 00                	add    BYTE PTR [rax],al
    47d9:	00 ff                	add    bh,bh
    47db:	1a 00                	sbb    al,BYTE PTR [rax]
    47dd:	00 02                	add    BYTE PTR [rdx],al
    47df:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 494f <stivale_hdr-0x1fb6b1>
    47e5:	02 08                	add    cl,BYTE PTR [rax]
    47e7:	07                   	(bad)  
    47e8:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    47eb:	00 02                	add    BYTE PTR [rdx],al
    47ed:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 4958 <stivale_hdr-0x1fb6a8>
    47f3:	02 10                	add    dl,BYTE PTR [rax]
    47f5:	04 8f                	add    al,0x8f
    47f7:	01 00                	add    DWORD PTR [rax],eax
    47f9:	00 03                	add    BYTE PTR [rbx],al
    47fb:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    47fe:	00 02                	add    BYTE PTR [rdx],al
    4800:	01 08                	add    DWORD PTR [rax],ecx
    4802:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4803:	00 00                	add    BYTE PTR [rax],al
    4805:	00 02                	add    BYTE PTR [rdx],al
    4807:	02 07                	add    al,BYTE PTR [rdi]
    4809:	9b                   	fwait
    480a:	01 00                	add    DWORD PTR [rax],eax
    480c:	00 02                	add    BYTE PTR [rdx],al
    480e:	04 07                	add    al,0x7
    4810:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    4813:	00 02                	add    BYTE PTR [rdx],al
    4815:	10 07                	adc    BYTE PTR [rdi],al
    4817:	00 00                	add    BYTE PTR [rax],al
    4819:	00 00                	add    BYTE PTR [rax],al
    481b:	04 25                	add    al,0x25
    481d:	00 00                	add    BYTE PTR [rax],al
    481f:	00 02                	add    BYTE PTR [rdx],al
    4821:	0d 1d 34 00 00       	or     eax,0x341d
    4826:	00 02                	add    BYTE PTR [rdx],al
    4828:	01 06                	add    DWORD PTR [rsi],eax
    482a:	70 00                	jo     482c <stivale_hdr-0x1fb7d4>
    482c:	00 00                	add    BYTE PTR [rax],al
    482e:	02 02                	add    al,BYTE PTR [rdx]
    4830:	05 73 01 00 00       	add    eax,0x173
    4835:	05 04 05 69 6e       	add    eax,0x6e690504
    483a:	74 00                	je     483c <stivale_hdr-0x1fb7c4>
    483c:	04 a6                	add    al,0xa6
    483e:	1f                   	(bad)  
    483f:	00 00                	add    BYTE PTR [rax],al
    4841:	02 13                	add    dl,BYTE PTR [rbx]
    4843:	1d 2d 00 00 00       	sbb    eax,0x2d
    4848:	02 10                	add    dl,BYTE PTR [rax]
    484a:	05 1b 01 00 00       	add    eax,0x11b
    484f:	04 1e                	add    al,0x1e
    4851:	20 00                	and    BYTE PTR [rax],al
    4853:	00 02                	add    BYTE PTR [rdx],al
    4855:	16                   	(bad)  
    4856:	1d 8b 00 00 00       	sbb    eax,0x8b
    485b:	04 3b                	add    al,0x3b
    485d:	02 00                	add    al,BYTE PTR [rax]
    485f:	00 02                	add    BYTE PTR [rdx],al
    4861:	17                   	(bad)  
    4862:	1d 6a 00 00 00       	sbb    eax,0x6a
    4867:	06                   	(bad)  
    4868:	73 79                	jae    48e3 <stivale_hdr-0x1fb71d>
    486a:	73 00                	jae    486c <stivale_hdr-0x1fb794>
    486c:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    486f:	cb                   	retf   
    4870:	00 00                	add    BYTE PTR [rax],al
    4872:	00 07                	add    BYTE PTR [rdi],al
    4874:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
    487a:	0f 00 02             	sldt   WORD PTR [rdx]
    487d:	01 06                	add    DWORD PTR [rsi],eax
    487f:	77 00                	ja     4881 <stivale_hdr-0x1fb77f>
    4881:	00 00                	add    BYTE PTR [rax],al
    4883:	08 cb                	or     bl,cl
    4885:	00 00                	add    BYTE PTR [rax],al
    4887:	00 06                	add    BYTE PTR [rsi],al
    4889:	67 66 78 00          	addr32 data16 js 488d <stivale_hdr-0x1fb773>
    488d:	04 08                	add    al,0x8
    488f:	0b ec                	or     ebp,esp
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 07                	add    BYTE PTR [rdi],al
    4895:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4896:	02 00                	add    al,BYTE PTR [rax]
    4898:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
    489b:	0c 00                	or     al,0x0
    489d:	06                   	(bad)  
    489e:	69 6f 00 05 0d 0b 00 	imul   ebp,DWORD PTR [rdi+0x0],0xb0d05
    48a5:	01 00                	add    DWORD PTR [rax],eax
    48a7:	00 09                	add    BYTE PTR [rcx],cl
    48a9:	74 74                	je     491f <stivale_hdr-0x1fb6e1>
    48ab:	79 00                	jns    48ad <stivale_hdr-0x1fb753>
    48ad:	05 0e 0f 00 0a       	add    eax,0xa000f0e
    48b2:	95                   	xchg   ebp,eax
    48b3:	07                   	(bad)  
    48b4:	00 00                	add    BYTE PTR [rax],al
    48b6:	06                   	(bad)  
    48b7:	04 0b                	add    al,0xb
    48b9:	b9 01 00 00 0b       	mov    ecx,0xb000001
    48be:	99                   	cdq    
    48bf:	1f                   	(bad)  
    48c0:	00 00                	add    BYTE PTR [rax],al
    48c2:	01 3d 05 c7 1f 00    	add    DWORD PTR [rip+0x1fc705],edi        # 200fcd <stivale_hdr+0xfcd>
    48c8:	00 84 00 00 00 26 01 	add    BYTE PTR [rax+rax*1+0x1260000],al
    48cf:	00 00                	add    BYTE PTR [rax],al
    48d1:	0c cb                	or     al,0xcb
    48d3:	00 00                	add    BYTE PTR [rax],al
    48d5:	00 00                	add    BYTE PTR [rax],al
    48d7:	0b 23                	or     esp,DWORD PTR [rbx]
    48d9:	20 00                	and    BYTE PTR [rax],al
    48db:	00 01                	add    BYTE PTR [rcx],al
    48dd:	36 07                	ss (bad) 
    48df:	da 1f                	ficomp DWORD PTR [rdi]
    48e1:	00 00                	add    BYTE PTR [rax],al
    48e3:	e2 01                	loop   48e6 <stivale_hdr-0x1fb71a>
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	45 01 00             	add    DWORD PTR [r8],r8d
    48ea:	00 0c e2             	add    BYTE PTR [rdx+riz*8],cl
    48ed:	01 00                	add    DWORD PTR [rax],eax
    48ef:	00 0c ed 01 00 00 00 	add    BYTE PTR [rbp*8+0x1],cl
    48f6:	0b 17                	or     edx,DWORD PTR [rdi]
    48f8:	20 00                	and    BYTE PTR [rax],al
    48fa:	00 01                	add    BYTE PTR [rcx],al
    48fc:	27                   	(bad)  
    48fd:	07                   	(bad)  
    48fe:	01 20                	add    DWORD PTR [rax],esp
    4900:	00 00                	add    BYTE PTR [rax],al
    4902:	e2 01                	loop   4905 <stivale_hdr-0x1fb6fb>
    4904:	00 00                	add    BYTE PTR [rax],al
    4906:	64 01 00             	add    DWORD PTR fs:[rax],eax
    4909:	00 0c e2             	add    BYTE PTR [rdx+riz*8],cl
    490c:	01 00                	add    DWORD PTR [rax],eax
    490e:	00 0c ed 01 00 00 00 	add    BYTE PTR [rbp*8+0x1],cl
    4915:	0b ad 1f 00 00 01    	or     ebp,DWORD PTR [rbp+0x100001f]
    491b:	1f                   	(bad)  
    491c:	06                   	(bad)  
    491d:	42 20 00             	rex.X and BYTE PTR [rax],al
    4920:	00 aa 00 00 00 7e    	add    BYTE PTR [rdx+0x7e000000],ch
    4926:	01 00                	add    DWORD PTR [rax],eax
    4928:	00 0c ed 01 00 00 00 	add    BYTE PTR [rbp*8+0x1],cl
    492f:	0b 56 20             	or     edx,DWORD PTR [rsi+0x20]
    4932:	00 00                	add    BYTE PTR [rax],al
    4934:	01 13                	add    DWORD PTR [rbx],edx
    4936:	06                   	(bad)  
    4937:	2a 20                	sub    ah,BYTE PTR [rax]
    4939:	00 00                	add    BYTE PTR [rax],al
    493b:	c4 02 00 00          	(bad)
    493f:	9d                   	popf   
    4940:	01 00                	add    DWORD PTR [rax],eax
    4942:	00 0c ed 01 00 00 0c 	add    BYTE PTR [rbp*8+0xc000001],cl
    4949:	ed                   	in     eax,dx
    494a:	01 00                	add    DWORD PTR [rax],eax
    494c:	00 00                	add    BYTE PTR [rax],al
    494e:	0d 0f 1d 00 00       	or     eax,0x1d0f
    4953:	01 05 07 f0 1f 00    	add    DWORD PTR [rip+0x1ff007],eax        # 203960 <sys_allocate_page+0x21>
    4959:	00 e2                	add    dl,ah
    495b:	01 00                	add    DWORD PTR [rax],eax
    495d:	00 0c 2d 00 00 00 0c 	add    BYTE PTR [rbp*1+0xc000000],cl
    4964:	84 00                	test   BYTE PTR [rax],al
    4966:	00 00                	add    BYTE PTR [rax],al
    4968:	00 00                	add    BYTE PTR [rax],al
    496a:	0e                   	(bad)  
    496b:	0c 01                	or     al,0x1
    496d:	00 00                	add    BYTE PTR [rax],al
    496f:	24 3c                	and    al,0x3c
    4971:	20 00                	and    BYTE PTR [rax],al
    4973:	00 00                	add    BYTE PTR [rax],al
    4975:	00 00                	add    BYTE PTR [rax],al
    4977:	2a 00                	sub    al,BYTE PTR [rax]
    4979:	00 00                	add    BYTE PTR [rax],al
    497b:	00 00                	add    BYTE PTR [rax],al
    497d:	00 00                	add    BYTE PTR [rax],al
    497f:	01 9c e2 01 00 00 0f 	add    DWORD PTR [rdx+riz*8+0xf000001],ebx
    4986:	63 00                	movsxd eax,DWORD PTR [rax]
    4988:	01 3d 18 cb 00 00    	add    DWORD PTR [rip+0xcb18],edi        # 114a6 <stivale_hdr-0x1eeb5a>
    498e:	00 02                	add    BYTE PTR [rdx],al
    4990:	91                   	xchg   ecx,eax
    4991:	6c                   	ins    BYTE PTR es:[rdi],dx
    4992:	00 10                	add    BYTE PTR [rax],dl
    4994:	08 cb                	or     bl,cl
    4996:	00 00                	add    BYTE PTR [rax],al
    4998:	00 11                	add    BYTE PTR [rcx],dl
    499a:	e2 01                	loop   499d <stivale_hdr-0x1fb663>
    499c:	00 00                	add    BYTE PTR [rax],al
    499e:	10 08                	adc    BYTE PTR [rax],cl
    49a0:	d2 00                	rol    BYTE PTR [rax],cl
    49a2:	00 00                	add    BYTE PTR [rax],al
    49a4:	11 ed                	adc    ebp,ebp
    49a6:	01 00                	add    DWORD PTR [rax],eax
    49a8:	00 0e                	add    BYTE PTR [rsi],cl
    49aa:	26 01 00             	add    DWORD PTR es:[rax],eax
    49ad:	00 dd                	add    ch,bl
    49af:	3b 20                	cmp    esp,DWORD PTR [rax]
    49b1:	00 00                	add    BYTE PTR [rax],al
    49b3:	00 00                	add    BYTE PTR [rax],al
    49b5:	00 47 00             	add    BYTE PTR [rdi+0x0],al
    49b8:	00 00                	add    BYTE PTR [rax],al
    49ba:	00 00                	add    BYTE PTR [rax],al
    49bc:	00 00                	add    BYTE PTR [rax],al
    49be:	01 9c 41 02 00 00 0f 	add    DWORD PTR [rcx+rax*2+0xf000002],ebx
    49c5:	64 73 74             	fs jae 4a3c <stivale_hdr-0x1fb5c4>
    49c8:	00 01                	add    BYTE PTR [rcx],al
    49ca:	36 26 e8 01 00 00 02 	ss es call 20049d2 <__kernel_end+0x1df29d2>
    49d1:	91                   	xchg   ecx,eax
    49d2:	58                   	pop    rax
    49d3:	0f 73                	(bad)  
    49d5:	72 63                	jb     4a3a <stivale_hdr-0x1fb5c6>
    49d7:	00 01                	add    BYTE PTR [rcx],al
    49d9:	36 43                	ss rex.XB
    49db:	f3 01 00             	repz add DWORD PTR [rax],eax
    49de:	00 02                	add    BYTE PTR [rdx],al
    49e0:	91                   	xchg   ecx,eax
    49e1:	50                   	push   rax
    49e2:	12 6f 75             	adc    ch,BYTE PTR [rdi+0x75]
    49e5:	74 00                	je     49e7 <stivale_hdr-0x1fb619>
    49e7:	01 38                	add    DWORD PTR [rax],edi
    49e9:	09 e2                	or     edx,esp
    49eb:	01 00                	add    DWORD PTR [rax],eax
    49ed:	00 02                	add    BYTE PTR [rdx],al
    49ef:	91                   	xchg   ecx,eax
    49f0:	68 00 0e 45 01       	push   0x1450e00
    49f5:	00 00                	add    BYTE PTR [rax],al
    49f7:	82                   	(bad)  
    49f8:	3b 20                	cmp    esp,DWORD PTR [rax]
    49fa:	00 00                	add    BYTE PTR [rax],al
    49fc:	00 00                	add    BYTE PTR [rax],al
    49fe:	00 5b 00             	add    BYTE PTR [rbx+0x0],bl
    4a01:	00 00                	add    BYTE PTR [rax],al
    4a03:	00 00                	add    BYTE PTR [rax],al
    4a05:	00 00                	add    BYTE PTR [rax],al
    4a07:	01 9c 8a 02 00 00 13 	add    DWORD PTR [rdx+rcx*4+0x13000002],ebx
    4a0e:	a1 1f 00 00 01 27 1a 	movabs eax,ds:0x1e21a270100001f
    4a15:	e2 01 
    4a17:	00 00                	add    BYTE PTR [rax],al
    4a19:	02 91 58 0f 73 72    	add    dl,BYTE PTR [rcx+0x72730f58]
    4a1f:	63 00                	movsxd eax,DWORD PTR [rax]
    4a21:	01 27                	add    DWORD PTR [rdi],esp
    4a23:	2c ed                	sub    al,0xed
    4a25:	01 00                	add    DWORD PTR [rax],eax
    4a27:	00 02                	add    BYTE PTR [rdx],al
    4a29:	91                   	xchg   ecx,eax
    4a2a:	50                   	push   rax
    4a2b:	12 65 6e             	adc    ah,BYTE PTR [rbp+0x6e]
    4a2e:	64 00 01             	add    BYTE PTR fs:[rcx],al
    4a31:	29 09                	sub    DWORD PTR [rcx],ecx
    4a33:	e2 01                	loop   4a36 <stivale_hdr-0x1fb5ca>
    4a35:	00 00                	add    BYTE PTR [rax],al
    4a37:	02 91 68 00 0e 64    	add    dl,BYTE PTR [rcx+0x640e0068]
    4a3d:	01 00                	add    DWORD PTR [rax],eax
    4a3f:	00 3d 3b 20 00 00    	add    BYTE PTR [rip+0x203b],bh        # 6a80 <stivale_hdr-0x1f9580>
    4a45:	00 00                	add    BYTE PTR [rax],al
    4a47:	00 45 00             	add    BYTE PTR [rbp+0x0],al
    4a4a:	00 00                	add    BYTE PTR [rax],al
    4a4c:	00 00                	add    BYTE PTR [rax],al
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	01 9c c4 02 00 00 0f 	add    DWORD PTR [rsp+rax*8+0xf000002],ebx
    4a57:	73 74                	jae    4acd <stivale_hdr-0x1fb533>
    4a59:	72 00                	jb     4a5b <stivale_hdr-0x1fb5a5>
    4a5b:	01 1f                	add    DWORD PTR [rdi],ebx
    4a5d:	1f                   	(bad)  
    4a5e:	ed                   	in     eax,dx
    4a5f:	01 00                	add    DWORD PTR [rax],eax
    4a61:	00 02                	add    BYTE PTR [rdx],al
    4a63:	91                   	xchg   ecx,eax
    4a64:	58                   	pop    rax
    4a65:	12 6c 65 6e          	adc    ch,BYTE PTR [rbp+riz*2+0x6e]
    4a69:	00 01                	add    BYTE PTR [rcx],al
    4a6b:	21 07                	and    DWORD PTR [rdi],eax
    4a6d:	aa                   	stos   BYTE PTR es:[rdi],al
    4a6e:	00 00                	add    BYTE PTR [rax],al
    4a70:	00 02                	add    BYTE PTR [rdx],al
    4a72:	91                   	xchg   ecx,eax
    4a73:	68 00 02 01 02       	push   0x2010200
    4a78:	61                   	(bad)  
    4a79:	02 00                	add    al,BYTE PTR [rax]
    4a7b:	00 0e                	add    BYTE PTR [rsi],cl
    4a7d:	7e 01                	jle    4a80 <stivale_hdr-0x1fb580>
    4a7f:	00 00                	add    BYTE PTR [rax],al
    4a81:	f6 3a                	idiv   BYTE PTR [rdx]
    4a83:	20 00                	and    BYTE PTR [rax],al
    4a85:	00 00                	add    BYTE PTR [rax],al
    4a87:	00 00                	add    BYTE PTR [rax],al
    4a89:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4a8c:	00 00                	add    BYTE PTR [rax],al
    4a8e:	00 00                	add    BYTE PTR [rax],al
    4a90:	00 01                	add    BYTE PTR [rcx],al
    4a92:	9c                   	pushf  
    4a93:	05 03 00 00 0f       	add    eax,0xf000003
    4a98:	6c                   	ins    BYTE PTR es:[rdi],dx
    4a99:	68 73 00 01 13       	push   0x13010073
    4a9e:	20 ed                	and    ch,ch
    4aa0:	01 00                	add    DWORD PTR [rax],eax
    4aa2:	00 02                	add    BYTE PTR [rdx],al
    4aa4:	91                   	xchg   ecx,eax
    4aa5:	68 0f 72 68 73       	push   0x7368720f
    4aaa:	00 01                	add    BYTE PTR [rcx],al
    4aac:	13 31                	adc    esi,DWORD PTR [rcx]
    4aae:	ed                   	in     eax,dx
    4aaf:	01 00                	add    DWORD PTR [rax],eax
    4ab1:	00 02                	add    BYTE PTR [rdx],al
    4ab3:	91                   	xchg   ecx,eax
    4ab4:	60                   	(bad)  
    4ab5:	00 0e                	add    BYTE PTR [rsi],cl
    4ab7:	9d                   	popf   
    4ab8:	01 00                	add    DWORD PTR [rax],eax
    4aba:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    4abd:	20 00                	and    BYTE PTR [rax],al
    4abf:	00 00                	add    BYTE PTR [rax],al
    4ac1:	00 00                	add    BYTE PTR [rax],al
    4ac3:	7d 00                	jge    4ac5 <stivale_hdr-0x1fb53b>
    4ac5:	00 00                	add    BYTE PTR [rax],al
    4ac7:	00 00                	add    BYTE PTR [rax],al
    4ac9:	00 00                	add    BYTE PTR [rax],al
    4acb:	01 9c 62 03 00 00 0f 	add    DWORD PTR [rdx+riz*2+0xf000003],ebx
    4ad2:	76 61                	jbe    4b35 <stivale_hdr-0x1fb4cb>
    4ad4:	6c                   	ins    BYTE PTR es:[rdi],dx
    4ad5:	00 01                	add    BYTE PTR [rcx],al
    4ad7:	05 1b 2d 00 00       	add    eax,0x2d1b
    4adc:	00 02                	add    BYTE PTR [rdx],al
    4ade:	91                   	xchg   ecx,eax
    4adf:	58                   	pop    rax
    4ae0:	13 1a                	adc    ebx,DWORD PTR [rdx]
    4ae2:	04 00                	add    al,0x0
    4ae4:	00 01                	add    BYTE PTR [rcx],al
    4ae6:	05 24 84 00 00       	add    eax,0x8424
    4aeb:	00 02                	add    BYTE PTR [rdx],al
    4aed:	91                   	xchg   ecx,eax
    4aee:	54                   	push   rsp
    4aef:	12 62 75             	adc    ah,BYTE PTR [rdx+0x75]
    4af2:	66 00 01             	data16 add BYTE PTR [rcx],al
    4af5:	07                   	(bad)  
    4af6:	0e                   	(bad)  
    4af7:	62 03                	(bad)  
    4af9:	00 00                	add    BYTE PTR [rax],al
    4afb:	09 03                	or     DWORD PTR [rbx],eax
    4afd:	40 01 21             	rex add DWORD PTR [rcx],esp
    4b00:	00 00                	add    BYTE PTR [rax],al
    4b02:	00 00                	add    BYTE PTR [rax],al
    4b04:	00 12                	add    BYTE PTR [rdx],dl
    4b06:	69 00 01 09 07 9e    	imul   eax,DWORD PTR [rax],0x9e070901
    4b0c:	00 00                	add    BYTE PTR [rax],al
    4b0e:	00 02                	add    BYTE PTR [rdx],al
    4b10:	91                   	xchg   ecx,eax
    4b11:	68 00 14 cb 00       	push   0xcb1400
    4b16:	00 00                	add    BYTE PTR [rax],al
    4b18:	15 34 00 00 00       	adc    eax,0x34
    4b1d:	3f                   	(bad)  
    4b1e:	00 00                	add    BYTE PTR [rax],al
    4b20:	9d                   	popf   
    4b21:	02 00                	add    al,BYTE PTR [rax]
    4b23:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    4b26:	b8 1a 00 00 08       	mov    eax,0x800001a
    4b2b:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    4b2f:	00 04 e7             	add    BYTE PTR [rdi+riz*8],al
    4b32:	20 00                	and    BYTE PTR [rax],al
    4b34:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    4b37:	00 00                	add    BYTE PTR [rax],al
    4b39:	4e 3c 20             	rex.WRX cmp al,0x20
    4b3c:	00 00                	add    BYTE PTR [rax],al
    4b3e:	00 00                	add    BYTE PTR [rax],al
    4b40:	00 33                	add    BYTE PTR [rbx],dh
    4b42:	01 00                	add    DWORD PTR [rax],eax
    4b44:	00 00                	add    BYTE PTR [rax],al
    4b46:	00 00                	add    BYTE PTR [rax],al
    4b48:	00 c3                	add    bl,al
    4b4a:	1c 00                	sbb    al,0x0
    4b4c:	00 02                	add    BYTE PTR [rdx],al
    4b4e:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 4cbe <stivale_hdr-0x1fb342>
    4b54:	02 08                	add    cl,BYTE PTR [rax]
    4b56:	07                   	(bad)  
    4b57:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    4b5a:	00 02                	add    BYTE PTR [rdx],al
    4b5c:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 4cc7 <stivale_hdr-0x1fb339>
    4b62:	02 10                	add    dl,BYTE PTR [rax]
    4b64:	04 8f                	add    al,0x8f
    4b66:	01 00                	add    DWORD PTR [rax],eax
    4b68:	00 03                	add    BYTE PTR [rbx],al
    4b6a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4b6d:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    4b70:	23 00                	and    eax,DWORD PTR [rax]
    4b72:	00 03                	add    BYTE PTR [rbx],al
    4b74:	04 1d                	add    al,0x1d
    4b76:	5a                   	pop    rdx
    4b77:	00 00                	add    BYTE PTR [rax],al
    4b79:	00 02                	add    BYTE PTR [rdx],al
    4b7b:	01 08                	add    DWORD PTR [rax],ecx
    4b7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4b7e:	00 00                	add    BYTE PTR [rax],al
    4b80:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
    4b83:	08 00                	or     BYTE PTR [rax],al
    4b85:	00 03                	add    BYTE PTR [rbx],al
    4b87:	05 1d 6d 00 00       	add    eax,0x6d1d
    4b8c:	00 02                	add    BYTE PTR [rdx],al
    4b8e:	02 07                	add    al,BYTE PTR [rdi]
    4b90:	9b                   	fwait
    4b91:	01 00                	add    DWORD PTR [rax],eax
    4b93:	00 02                	add    BYTE PTR [rdx],al
    4b95:	04 07                	add    al,0x7
    4b97:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    4b9a:	00 02                	add    BYTE PTR [rdx],al
    4b9c:	10 07                	adc    BYTE PTR [rdi],al
    4b9e:	00 00                	add    BYTE PTR [rax],al
    4ba0:	00 00                	add    BYTE PTR [rax],al
    4ba2:	04 e5                	add    al,0xe5
    4ba4:	02 00                	add    al,BYTE PTR [rax]
    4ba6:	00 03                	add    BYTE PTR [rbx],al
    4ba8:	0c 1d                	or     al,0x1d
    4baa:	74 00                	je     4bac <stivale_hdr-0x1fb454>
    4bac:	00 00                	add    BYTE PTR [rax],al
    4bae:	02 01                	add    al,BYTE PTR [rcx]
    4bb0:	06                   	(bad)  
    4bb1:	70 00                	jo     4bb3 <stivale_hdr-0x1fb44d>
    4bb3:	00 00                	add    BYTE PTR [rax],al
    4bb5:	02 02                	add    al,BYTE PTR [rdx]
    4bb7:	05 73 01 00 00       	add    eax,0x173
    4bbc:	05 04 05 69 6e       	add    eax,0x6e690504
    4bc1:	74 00                	je     4bc3 <stivale_hdr-0x1fb43d>
    4bc3:	02 10                	add    dl,BYTE PTR [rax]
    4bc5:	05 1b 01 00 00       	add    eax,0x11b
    4bca:	06                   	(bad)  
    4bcb:	69 6f 00 01 04 0b e7 	imul   ebp,DWORD PTR [rdi+0x0],0xe70b0401
    4bd2:	00 00                	add    BYTE PTR [rax],al
    4bd4:	00 07                	add    BYTE PTR [rdi],al
    4bd6:	70 69                	jo     4c41 <stivale_hdr-0x1fb3bf>
    4bd8:	74 00                	je     4bda <stivale_hdr-0x1fb426>
    4bda:	04 06                	add    al,0x6
    4bdc:	0f 08                	invd   
    4bde:	69 6e 62 00 01 0c 18 	imul   ebp,DWORD PTR [rsi+0x62],0x180c0100
    4be5:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4be8:	00 d3                	add    bl,dl
    4bea:	00 00                	add    BYTE PTR [rax],al
    4bec:	00 09                	add    BYTE PTR [rcx],cl
    4bee:	61                   	(bad)  
    4bef:	00 00                	add    BYTE PTR [rax],al
    4bf1:	00 00                	add    BYTE PTR [rax],al
    4bf3:	0a 78 0c             	or     bh,BYTE PTR [rax+0xc]
    4bf6:	00 00                	add    BYTE PTR [rax],al
    4bf8:	01 05 18 09 61 00    	add    DWORD PTR [rip+0x610918],eax        # 615516 <__kernel_end+0x403516>
    4bfe:	00 00                	add    BYTE PTR [rax],al
    4c00:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4c03:	00 00                	add    BYTE PTR [rax],al
    4c05:	00 00                	add    BYTE PTR [rax],al
    4c07:	06                   	(bad)  
    4c08:	73 79                	jae    4c83 <stivale_hdr-0x1fb37d>
    4c0a:	73 00                	jae    4c0c <stivale_hdr-0x1fb3f4>
    4c0c:	04 11                	add    al,0x11
    4c0e:	0b 63 01             	or     esp,DWORD PTR [rbx+0x1]
    4c11:	00 00                	add    BYTE PTR [rax],al
    4c13:	0b f3                	or     esi,ebx
    4c15:	01 00                	add    DWORD PTR [rax],eax
    4c17:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    4c1a:	0f 0c                	(bad)  
    4c1c:	93                   	xchg   ebx,eax
    4c1d:	20 00                	and    BYTE PTR [rax],al
    4c1f:	00 05 07 0f 0c 5e    	add    BYTE PTR [rip+0x5e0c0f07],al        # 5e0c5b2c <__kernel_end+0x5deb3b2c>
    4c25:	20 00                	and    BYTE PTR [rax],al
    4c27:	00 05 08 13 0d d7    	add    BYTE PTR [rip+0xffffffffd70d1308],al        # ffffffffd70d5f35 <__kernel_end+0xffffffffd6ec3f35>
    4c2d:	20 00                	and    BYTE PTR [rax],al
    4c2f:	00 02                	add    BYTE PTR [rdx],al
    4c31:	20 06                	and    BYTE PTR [rsi],al
    4c33:	99                   	cdq    
    4c34:	20 00                	and    BYTE PTR [rax],al
    4c36:	00 26                	add    BYTE PTR [rsi],ah
    4c38:	01 00                	add    DWORD PTR [rax],eax
    4c3a:	00 09                	add    BYTE PTR [rcx],cl
    4c3c:	82                   	(bad)  
    4c3d:	00 00                	add    BYTE PTR [rax],al
    4c3f:	00 09                	add    BYTE PTR [rcx],cl
    4c41:	82                   	(bad)  
    4c42:	00 00                	add    BYTE PTR [rax],al
    4c44:	00 00                	add    BYTE PTR [rax],al
    4c46:	0e                   	(bad)  
    4c47:	d7                   	xlat   BYTE PTR ds:[rbx]
    4c48:	20 00                	and    BYTE PTR [rax],al
    4c4a:	00 02                	add    BYTE PTR [rdx],al
    4c4c:	19 06                	sbb    DWORD PTR [rsi],eax
    4c4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4c4f:	20 00                	and    BYTE PTR [rax],al
    4c51:	00 0e                	add    BYTE PTR [rsi],cl
    4c53:	dc 20                	fsub   QWORD PTR [rax]
    4c55:	00 00                	add    BYTE PTR [rax],al
    4c57:	02 13                	add    dl,BYTE PTR [rbx]
    4c59:	06                   	(bad)  
    4c5a:	26 21 00             	and    DWORD PTR es:[rax],eax
    4c5d:	00 0d 64 20 00 00    	add    BYTE PTR [rip+0x2064],cl        # 6cc7 <stivale_hdr-0x1f9339>
    4c63:	02 08                	add    cl,BYTE PTR [rax]
    4c65:	06                   	(bad)  
    4c66:	b5 20                	mov    ch,0x20
    4c68:	00 00                	add    BYTE PTR [rax],al
    4c6a:	54                   	push   rsp
    4c6b:	01 00                	add    DWORD PTR [rax],eax
    4c6d:	00 09                	add    BYTE PTR [rcx],cl
    4c6f:	82                   	(bad)  
    4c70:	00 00                	add    BYTE PTR [rax],al
    4c72:	00 00                	add    BYTE PTR [rax],al
    4c74:	0e                   	(bad)  
    4c75:	a1 09 00 00 02 03 06 	movabs eax,ds:0x210b060302000009
    4c7c:	0b 21 
    4c7e:	00 00                	add    BYTE PTR [rax],al
    4c80:	00 00                	add    BYTE PTR [rax],al
    4c82:	00 0f                	add    BYTE PTR [rdi],cl
    4c84:	0b 01                	or     eax,DWORD PTR [rcx]
    4c86:	00 00                	add    BYTE PTR [rax],al
    4c88:	4c 3d 20 00 00 00    	rex.WR cmp rax,0x20
    4c8e:	00 00                	add    BYTE PTR [rax],al
    4c90:	35 00 00 00 00       	xor    eax,0x0
    4c95:	00 00                	add    BYTE PTR [rax],al
    4c97:	00 01                	add    BYTE PTR [rcx],al
    4c99:	9c                   	pushf  
    4c9a:	9d                   	popf   
    4c9b:	01 00                	add    DWORD PTR [rax],eax
    4c9d:	00 10                	add    BYTE PTR [rax],dl
    4c9f:	5f                   	pop    rdi
    4ca0:	15 00 00 02 20       	adc    eax,0x20020000
    4ca5:	25 82 00 00 00       	and    eax,0x82
    4caa:	02 91 6c 10 8a 20    	add    dl,BYTE PTR [rcx+0x208a106c]
    4cb0:	00 00                	add    BYTE PTR [rax],al
    4cb2:	02 20                	add    ah,BYTE PTR [rax]
    4cb4:	37                   	(bad)  
    4cb5:	82                   	(bad)  
    4cb6:	00 00                	add    BYTE PTR [rax],al
    4cb8:	00 02                	add    BYTE PTR [rdx],al
    4cba:	91                   	xchg   ecx,eax
    4cbb:	68 00 11 26 01       	push   0x1261100
    4cc0:	00 00                	add    BYTE PTR [rax],al
    4cc2:	22 3d 20 00 00 00    	and    bh,BYTE PTR [rip+0x20]        # 4ce8 <stivale_hdr-0x1fb318>
    4cc8:	00 00                	add    BYTE PTR [rax],al
    4cca:	2a 00                	sub    al,BYTE PTR [rax]
    4ccc:	00 00                	add    BYTE PTR [rax],al
    4cce:	00 00                	add    BYTE PTR [rax],al
    4cd0:	00 00                	add    BYTE PTR [rax],al
    4cd2:	01 9c 0f 32 01 00 00 	add    DWORD PTR [rdi+rcx*1+0x132],ebx
    4cd9:	f7 3c 20             	idiv   DWORD PTR [rax+riz*1]
    4cdc:	00 00                	add    BYTE PTR [rax],al
    4cde:	00 00                	add    BYTE PTR [rax],al
    4ce0:	00 2b                	add    BYTE PTR [rbx],ch
    4ce2:	00 00                	add    BYTE PTR [rax],al
    4ce4:	00 00                	add    BYTE PTR [rax],al
    4ce6:	00 00                	add    BYTE PTR [rax],al
    4ce8:	00 01                	add    BYTE PTR [rcx],al
    4cea:	9c                   	pushf  
    4ceb:	df 01                	fild   WORD PTR [rcx]
    4ced:	00 00                	add    BYTE PTR [rax],al
    4cef:	12 74 6d 70          	adc    dh,BYTE PTR [rbp+rbp*2+0x70]
    4cf3:	00 02                	add    BYTE PTR [rdx],al
    4cf5:	14 0a                	adc    al,0xa
    4cf7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4cfa:	00 02                	add    BYTE PTR [rdx],al
    4cfc:	91                   	xchg   ecx,eax
    4cfd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4cfe:	00 0f                	add    BYTE PTR [rdi],cl
    4d00:	3e 01 00             	add    DWORD PTR ds:[rax],eax
    4d03:	00 b0 3c 20 00 00    	add    BYTE PTR [rax+0x203c],dh
    4d09:	00 00                	add    BYTE PTR [rax],al
    4d0b:	00 47 00             	add    BYTE PTR [rdi+0x0],al
    4d0e:	00 00                	add    BYTE PTR [rax],al
    4d10:	00 00                	add    BYTE PTR [rax],al
    4d12:	00 00                	add    BYTE PTR [rax],al
    4d14:	01 9c 19 02 00 00 10 	add    DWORD PTR [rcx+rbx*1+0x10000002],ebx
    4d1b:	5f                   	pop    rdi
    4d1c:	15 00 00 02 08       	adc    eax,0x8020000
    4d21:	2b 82 00 00 00 02    	sub    eax,DWORD PTR [rdx+0x2000000]
    4d27:	91                   	xchg   ecx,eax
    4d28:	5c                   	pop    rsp
    4d29:	12 74 6d 70          	adc    dh,BYTE PTR [rbp+rbp*2+0x70]
    4d2d:	00 02                	add    BYTE PTR [rdx],al
    4d2f:	09 0a                	or     DWORD PTR [rdx],ecx
    4d31:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4d34:	00 02                	add    BYTE PTR [rdx],al
    4d36:	91                   	xchg   ecx,eax
    4d37:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d38:	00 11                	add    BYTE PTR [rcx],dl
    4d3a:	54                   	push   rsp
    4d3b:	01 00                	add    DWORD PTR [rax],eax
    4d3d:	00 8d 3c 20 00 00    	add    BYTE PTR [rbp+0x203c],cl
    4d43:	00 00                	add    BYTE PTR [rax],al
    4d45:	00 23                	add    BYTE PTR [rbx],ah
    4d47:	00 00                	add    BYTE PTR [rax],al
    4d49:	00 00                	add    BYTE PTR [rax],al
    4d4b:	00 00                	add    BYTE PTR [rax],al
    4d4d:	00 01                	add    BYTE PTR [rcx],al
    4d4f:	9c                   	pushf  
    4d50:	13 bd 00 00 00 6f    	adc    edi,DWORD PTR [rbp+0x6f000000]
    4d56:	3c 20                	cmp    al,0x20
    4d58:	00 00                	add    BYTE PTR [rax],al
    4d5a:	00 00                	add    BYTE PTR [rax],al
    4d5c:	00 1e                	add    BYTE PTR [rsi],bl
    4d5e:	00 00                	add    BYTE PTR [rax],al
    4d60:	00 00                	add    BYTE PTR [rax],al
    4d62:	00 00                	add    BYTE PTR [rax],al
    4d64:	00 01                	add    BYTE PTR [rcx],al
    4d66:	9c                   	pushf  
    4d67:	6a 02                	push   0x2
    4d69:	00 00                	add    BYTE PTR [rax],al
    4d6b:	10 fb                	adc    bl,bh
    4d6d:	33 00                	xor    eax,DWORD PTR [rax]
    4d6f:	00 01                	add    BYTE PTR [rcx],al
    4d71:	0c 21                	or     al,0x21
    4d73:	61                   	(bad)  
    4d74:	00 00                	add    BYTE PTR [rax],al
    4d76:	00 02                	add    BYTE PTR [rdx],al
    4d78:	91                   	xchg   ecx,eax
    4d79:	5c                   	pop    rsp
    4d7a:	12 72 65             	adc    dh,BYTE PTR [rdx+0x65]
    4d7d:	74 00                	je     4d7f <stivale_hdr-0x1fb281>
    4d7f:	01 0e                	add    DWORD PTR [rsi],ecx
    4d81:	0e                   	(bad)  
    4d82:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4d85:	00 02                	add    BYTE PTR [rdx],al
    4d87:	91                   	xchg   ecx,eax
    4d88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d89:	00 14 d3             	add    BYTE PTR [rbx+rdx*8],dl
    4d8c:	00 00                	add    BYTE PTR [rax],al
    4d8e:	00 4e 3c             	add    BYTE PTR [rsi+0x3c],cl
    4d91:	20 00                	and    BYTE PTR [rax],al
    4d93:	00 00                	add    BYTE PTR [rax],al
    4d95:	00 00                	add    BYTE PTR [rax],al
    4d97:	21 00                	and    DWORD PTR [rax],eax
    4d99:	00 00                	add    BYTE PTR [rax],al
    4d9b:	00 00                	add    BYTE PTR [rax],al
    4d9d:	00 00                	add    BYTE PTR [rax],al
    4d9f:	01 9c 10 fb 33 00 00 	add    DWORD PTR [rax+rdx*1+0x33fb],ebx
    4da6:	01 05 22 61 00 00    	add    DWORD PTR [rip+0x6122],eax        # aece <stivale_hdr-0x1f5132>
    4dac:	00 02                	add    BYTE PTR [rdx],al
    4dae:	91                   	xchg   ecx,eax
    4daf:	6c                   	ins    BYTE PTR es:[rdi],dx
    4db0:	15 76 61 6c 00       	adc    eax,0x6c6176
    4db5:	01 05 2d 4e 00 00    	add    DWORD PTR [rip+0x4e2d],eax        # 9be8 <stivale_hdr-0x1f6418>
    4dbb:	00 02                	add    BYTE PTR [rdx],al
    4dbd:	91                   	xchg   ecx,eax
    4dbe:	68 00 00 e2 02       	push   0x2e20000
    4dc3:	00 00                	add    BYTE PTR [rax],al
    4dc5:	04 00                	add    al,0x0
    4dc7:	f6 1b                	neg    BYTE PTR [rbx]
    4dc9:	00 00                	add    BYTE PTR [rax],al
    4dcb:	08 01                	or     BYTE PTR [rcx],al
    4dcd:	7c 00                	jl     4dcf <stivale_hdr-0x1fb231>
    4dcf:	00 00                	add    BYTE PTR [rax],al
    4dd1:	04 99                	add    al,0x99
    4dd3:	21 00                	and    DWORD PTR [rax],eax
    4dd5:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    4dd8:	00 00                	add    BYTE PTR [rax],al
    4dda:	81 3d 20 00 00 00 00 	cmp    DWORD PTR [rip+0x20],0x23e0000        # 4e04 <stivale_hdr-0x1fb1fc>
    4de1:	00 3e 02 
    4de4:	00 00                	add    BYTE PTR [rax],al
    4de6:	00 00                	add    BYTE PTR [rax],al
    4de8:	00 00                	add    BYTE PTR [rax],al
    4dea:	d2 1d 00 00 02 08    	rcr    BYTE PTR [rip+0x8020000],cl        # 8024df0 <__kernel_end+0x7e12df0>
    4df0:	05 6a 01 00 00       	add    eax,0x16a
    4df5:	02 08                	add    cl,BYTE PTR [rax]
    4df7:	07                   	(bad)  
    4df8:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    4dfb:	00 02                	add    BYTE PTR [rdx],al
    4dfd:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 4f68 <stivale_hdr-0x1fb098>
    4e03:	02 10                	add    dl,BYTE PTR [rax]
    4e05:	04 8f                	add    al,0x8f
    4e07:	01 00                	add    DWORD PTR [rax],eax
    4e09:	00 03                	add    BYTE PTR [rbx],al
    4e0b:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4e0e:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    4e11:	23 00                	and    eax,DWORD PTR [rax]
    4e13:	00 03                	add    BYTE PTR [rbx],al
    4e15:	04 1d                	add    al,0x1d
    4e17:	5a                   	pop    rdx
    4e18:	00 00                	add    BYTE PTR [rax],al
    4e1a:	00 02                	add    BYTE PTR [rdx],al
    4e1c:	01 08                	add    DWORD PTR [rax],ecx
    4e1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4e1f:	00 00                	add    BYTE PTR [rax],al
    4e21:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
    4e24:	08 00                	or     BYTE PTR [rax],al
    4e26:	00 03                	add    BYTE PTR [rbx],al
    4e28:	05 1d 6d 00 00       	add    eax,0x6d1d
    4e2d:	00 02                	add    BYTE PTR [rdx],al
    4e2f:	02 07                	add    al,BYTE PTR [rdi]
    4e31:	9b                   	fwait
    4e32:	01 00                	add    DWORD PTR [rax],eax
    4e34:	00 02                	add    BYTE PTR [rdx],al
    4e36:	04 07                	add    al,0x7
    4e38:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    4e3b:	00 02                	add    BYTE PTR [rdx],al
    4e3d:	10 07                	adc    BYTE PTR [rdi],al
    4e3f:	00 00                	add    BYTE PTR [rax],al
    4e41:	00 00                	add    BYTE PTR [rax],al
    4e43:	02 01                	add    al,BYTE PTR [rcx]
    4e45:	06                   	(bad)  
    4e46:	70 00                	jo     4e48 <stivale_hdr-0x1fb1b8>
    4e48:	00 00                	add    BYTE PTR [rax],al
    4e4a:	02 02                	add    al,BYTE PTR [rdx]
    4e4c:	05 73 01 00 00       	add    eax,0x173
    4e51:	05 04 05 69 6e       	add    eax,0x6e690504
    4e56:	74 00                	je     4e58 <stivale_hdr-0x1fb1a8>
    4e58:	02 10                	add    dl,BYTE PTR [rax]
    4e5a:	05 1b 01 00 00       	add    eax,0x11b
    4e5f:	06                   	(bad)  
    4e60:	83 21 00             	and    DWORD PTR [rcx],0x0
    4e63:	00 02                	add    BYTE PTR [rdx],al
    4e65:	46 11 a9 3f 20 00 00 	rex.RX adc DWORD PTR [rcx+0x203f],r13d
    4e6c:	00 00                	add    BYTE PTR [rax],al
    4e6e:	00 16                	add    BYTE PTR [rsi],dl
    4e70:	00 00                	add    BYTE PTR [rax],al
    4e72:	00 00                	add    BYTE PTR [rax],al
    4e74:	00 00                	add    BYTE PTR [rax],al
    4e76:	00 01                	add    BYTE PTR [rcx],al
    4e78:	9c                   	pushf  
    4e79:	07                   	(bad)  
    4e7a:	69 6f 00 04 17 0b 4b 	imul   ebp,DWORD PTR [rdi+0x0],0x4b0b1704
    4e81:	01 00                	add    DWORD PTR [rax],eax
    4e83:	00 07                	add    BYTE PTR [rdi],al
    4e85:	70 69                	jo     4ef0 <stivale_hdr-0x1fb110>
    4e87:	63 00                	movsxd eax,DWORD PTR [rax]
    4e89:	04 18                	add    al,0x18
    4e8b:	0f 19 01             	nop    DWORD PTR [rcx]
    4e8e:	00 00                	add    BYTE PTR [rax],al
    4e90:	08 62 21             	or     BYTE PTR [rdx+0x21],ah
    4e93:	00 00                	add    BYTE PTR [rax],al
    4e95:	02 37                	add    dh,BYTE PTR [rdi]
    4e97:	06                   	(bad)  
    4e98:	e1 00                	loope  4e9a <stivale_hdr-0x1fb166>
    4e9a:	00 00                	add    BYTE PTR [rax],al
    4e9c:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4e9f:	00 00                	add    BYTE PTR [rax],al
    4ea1:	00 08                	add    BYTE PTR [rax],cl
    4ea3:	7a 21                	jp     4ec6 <stivale_hdr-0x1fb13a>
    4ea5:	00 00                	add    BYTE PTR [rax],al
    4ea7:	02 29                	add    ch,BYTE PTR [rcx]
    4ea9:	06                   	(bad)  
    4eaa:	f3 00 00             	repz add BYTE PTR [rax],al
    4ead:	00 09                	add    BYTE PTR [rcx],cl
    4eaf:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4eb2:	00 00                	add    BYTE PTR [rax],al
    4eb4:	08 58 21             	or     BYTE PTR [rax+0x21],bl
    4eb7:	00 00                	add    BYTE PTR [rax],al
    4eb9:	02 0c 06             	add    cl,BYTE PTR [rsi+rax*1]
    4ebc:	0a 01                	or     al,BYTE PTR [rcx]
    4ebe:	00 00                	add    BYTE PTR [rax],al
    4ec0:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4ec3:	00 00                	add    BYTE PTR [rax],al
    4ec5:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4ec8:	00 00                	add    BYTE PTR [rax],al
    4eca:	00 0a                	add    BYTE PTR [rdx],cl
    4ecc:	6d                   	ins    DWORD PTR es:[rdi],dx
    4ecd:	21 00                	and    DWORD PTR [rax],eax
    4ecf:	00 02                	add    BYTE PTR [rdx],al
    4ed1:	04 06                	add    al,0x6
    4ed3:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4ed6:	00 00                	add    BYTE PTR [rax],al
    4ed8:	00 00                	add    BYTE PTR [rax],al
    4eda:	0b 91 21 00 00 01    	or     edx,DWORD PTR [rcx+0x1000021]
    4ee0:	35 18 0c 69 6e       	xor    eax,0x6e690c18
    4ee5:	62                   	(bad)  
    4ee6:	00 01                	add    BYTE PTR [rcx],al
    4ee8:	0c 18                	or     al,0x18
    4eea:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4eed:	00 37                	add    BYTE PTR [rdi],dh
    4eef:	01 00                	add    DWORD PTR [rax],eax
    4ef1:	00 09                	add    BYTE PTR [rcx],cl
    4ef3:	61                   	(bad)  
    4ef4:	00 00                	add    BYTE PTR [rax],al
    4ef6:	00 00                	add    BYTE PTR [rax],al
    4ef8:	0d 78 0c 00 00       	or     eax,0xc78
    4efd:	01 05 18 09 61 00    	add    DWORD PTR [rip+0x610918],eax        # 61581b <__kernel_end+0x40381b>
    4f03:	00 00                	add    BYTE PTR [rax],al
    4f05:	09 4e 00             	or     DWORD PTR [rsi+0x0],ecx
    4f08:	00 00                	add    BYTE PTR [rax],al
    4f0a:	00 00                	add    BYTE PTR [rax],al
    4f0c:	0e                   	(bad)  
    4f0d:	cf                   	iret   
    4f0e:	00 00                	add    BYTE PTR [rax],al
    4f10:	00 4d 3f             	add    BYTE PTR [rbp+0x3f],cl
    4f13:	20 00                	and    BYTE PTR [rax],al
    4f15:	00 00                	add    BYTE PTR [rax],al
    4f17:	00 00                	add    BYTE PTR [rax],al
    4f19:	5c                   	pop    rsp
    4f1a:	00 00                	add    BYTE PTR [rax],al
    4f1c:	00 00                	add    BYTE PTR [rax],al
    4f1e:	00 00                	add    BYTE PTR [rax],al
    4f20:	00 01                	add    BYTE PTR [rcx],al
    4f22:	9c                   	pushf  
    4f23:	94                   	xchg   esp,eax
    4f24:	01 00                	add    DWORD PTR [rax],eax
    4f26:	00 0f                	add    BYTE PTR [rdi],cl
    4f28:	69 72 71 00 02 37 1f 	imul   esi,DWORD PTR [rdx+0x71],0x1f370200
    4f2f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4f32:	00 02                	add    BYTE PTR [rdx],al
    4f34:	91                   	xchg   ecx,eax
    4f35:	5c                   	pop    rsp
    4f36:	10 fb                	adc    bl,bh
    4f38:	33 00                	xor    eax,DWORD PTR [rax]
    4f3a:	00 02                	add    BYTE PTR [rdx],al
    4f3c:	39 0a                	cmp    DWORD PTR [rdx],ecx
    4f3e:	61                   	(bad)  
    4f3f:	00 00                	add    BYTE PTR [rax],al
    4f41:	00 02                	add    BYTE PTR [rdx],al
    4f43:	91                   	xchg   ecx,eax
    4f44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4f45:	10 07                	adc    BYTE PTR [rdi],al
    4f47:	05 00 00 02 3a       	add    eax,0x3a020000
    4f4c:	0a 4e 00             	or     cl,BYTE PTR [rsi+0x0]
    4f4f:	00 00                	add    BYTE PTR [rax],al
    4f51:	02 91 6d 00 0e e1    	add    dl,BYTE PTR [rcx-0x1ef1ff93]
    4f57:	00 00                	add    BYTE PTR [rax],al
    4f59:	00 f3                	add    bl,dh
    4f5b:	3e 20 00             	and    BYTE PTR ds:[rax],al
    4f5e:	00 00                	add    BYTE PTR [rax],al
    4f60:	00 00                	add    BYTE PTR [rax],al
    4f62:	5a                   	pop    rdx
    4f63:	00 00                	add    BYTE PTR [rax],al
    4f65:	00 00                	add    BYTE PTR [rax],al
    4f67:	00 00                	add    BYTE PTR [rax],al
    4f69:	00 01                	add    BYTE PTR [rcx],al
    4f6b:	9c                   	pushf  
    4f6c:	dd 01                	fld    QWORD PTR [rcx]
    4f6e:	00 00                	add    BYTE PTR [rax],al
    4f70:	0f 69 72 71          	punpckhwd mm6,QWORD PTR [rdx+0x71]
    4f74:	00 02                	add    BYTE PTR [rdx],al
    4f76:	29 1d 4e 00 00 00    	sub    DWORD PTR [rip+0x4e],ebx        # 4fca <stivale_hdr-0x1fb036>
    4f7c:	02 91 5c 10 fb 33    	add    dl,BYTE PTR [rcx+0x33fb105c]
    4f82:	00 00                	add    BYTE PTR [rax],al
    4f84:	02 2a                	add    ch,BYTE PTR [rdx]
    4f86:	0a 61 00             	or     ah,BYTE PTR [rcx+0x0]
    4f89:	00 00                	add    BYTE PTR [rax],al
    4f8b:	02 91 6e 10 07 05    	add    dl,BYTE PTR [rcx+0x507106e]
    4f91:	00 00                	add    BYTE PTR [rax],al
    4f93:	02 2b                	add    ch,BYTE PTR [rbx]
    4f95:	0a 4e 00             	or     cl,BYTE PTR [rsi+0x0]
    4f98:	00 00                	add    BYTE PTR [rax],al
    4f9a:	02 91 6d 00 0e f3    	add    dl,BYTE PTR [rcx-0xcf1ff93]
    4fa0:	00 00                	add    BYTE PTR [rax],al
    4fa2:	00 02                	add    BYTE PTR [rdx],al
    4fa4:	3e 20 00             	and    BYTE PTR ds:[rax],al
    4fa7:	00 00                	add    BYTE PTR [rax],al
    4fa9:	00 00                	add    BYTE PTR [rax],al
    4fab:	f1                   	icebp  
    4fac:	00 00                	add    BYTE PTR [rax],al
    4fae:	00 00                	add    BYTE PTR [rax],al
    4fb0:	00 00                	add    BYTE PTR [rax],al
    4fb2:	00 01                	add    BYTE PTR [rcx],al
    4fb4:	9c                   	pushf  
    4fb5:	33 02                	xor    eax,DWORD PTR [rdx]
    4fb7:	00 00                	add    BYTE PTR [rax],al
    4fb9:	11 48 21             	adc    DWORD PTR [rax+0x21],ecx
    4fbc:	00 00                	add    BYTE PTR [rax],al
    4fbe:	02 0c 1e             	add    cl,BYTE PTR [rsi+rbx*1]
    4fc1:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4fc4:	00 02                	add    BYTE PTR [rdx],al
    4fc6:	91                   	xchg   ecx,eax
    4fc7:	5c                   	pop    rsp
    4fc8:	11 50 21             	adc    DWORD PTR [rax+0x21],edx
    4fcb:	00 00                	add    BYTE PTR [rax],al
    4fcd:	02 0c 2c             	add    cl,BYTE PTR [rsp+rbp*1]
    4fd0:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4fd3:	00 02                	add    BYTE PTR [rdx],al
    4fd5:	91                   	xchg   ecx,eax
    4fd6:	58                   	pop    rax
    4fd7:	12 61 31             	adc    ah,BYTE PTR [rcx+0x31]
    4fda:	00 02                	add    BYTE PTR [rdx],al
    4fdc:	0e                   	(bad)  
    4fdd:	07                   	(bad)  
    4fde:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4fe1:	00 02                	add    BYTE PTR [rdx],al
    4fe3:	91                   	xchg   ecx,eax
    4fe4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4fe5:	12 61 32             	adc    ah,BYTE PTR [rcx+0x32]
    4fe8:	00 02                	add    BYTE PTR [rdx],al
    4fea:	0e                   	(bad)  
    4feb:	0b 4e 00             	or     ecx,DWORD PTR [rsi+0x0]
    4fee:	00 00                	add    BYTE PTR [rax],al
    4ff0:	02 91 6e 00 0e 0a    	add    dl,BYTE PTR [rcx+0xa0e006e]
    4ff6:	01 00                	add    DWORD PTR [rax],eax
    4ff8:	00 ce                	add    dh,cl
    4ffa:	3d 20 00 00 00       	cmp    eax,0x20
    4fff:	00 00                	add    BYTE PTR [rax],al
    5001:	34 00                	xor    al,0x0
    5003:	00 00                	add    BYTE PTR [rax],al
    5005:	00 00                	add    BYTE PTR [rax],al
    5007:	00 00                	add    BYTE PTR [rax],al
    5009:	01 9c 5e 02 00 00 0f 	add    DWORD PTR [rsi+rbx*2+0xf000002],ebx
    5010:	69 72 71 00 02 04 21 	imul   esi,DWORD PTR [rdx+0x71],0x21040200
    5017:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    501a:	00 02                	add    BYTE PTR [rdx],al
    501c:	91                   	xchg   ecx,eax
    501d:	6c                   	ins    BYTE PTR es:[rdi],dx
    501e:	00 13                	add    BYTE PTR [rbx],dl
    5020:	19 01                	sbb    DWORD PTR [rcx],eax
    5022:	00 00                	add    BYTE PTR [rax],al
    5024:	c0 3d 20 00 00 00 00 	sar    BYTE PTR [rip+0x20],0x0        # 504b <stivale_hdr-0x1fafb5>
    502b:	00 0e                	add    BYTE PTR [rsi],cl
    502d:	00 00                	add    BYTE PTR [rax],al
    502f:	00 00                	add    BYTE PTR [rax],al
    5031:	00 00                	add    BYTE PTR [rax],al
    5033:	00 01                	add    BYTE PTR [rcx],al
    5035:	9c                   	pushf  
    5036:	14 21                	adc    al,0x21
    5038:	01 00                	add    DWORD PTR [rax],eax
    503a:	00 a2 3d 20 00 00    	add    BYTE PTR [rdx+0x203d],ah
    5040:	00 00                	add    BYTE PTR [rax],al
    5042:	00 1e                	add    BYTE PTR [rsi],bl
    5044:	00 00                	add    BYTE PTR [rax],al
    5046:	00 00                	add    BYTE PTR [rax],al
    5048:	00 00                	add    BYTE PTR [rax],al
    504a:	00 01                	add    BYTE PTR [rcx],al
    504c:	9c                   	pushf  
    504d:	af                   	scas   eax,DWORD PTR es:[rdi]
    504e:	02 00                	add    al,BYTE PTR [rax]
    5050:	00 11                	add    BYTE PTR [rcx],dl
    5052:	fb                   	sti    
    5053:	33 00                	xor    eax,DWORD PTR [rax]
    5055:	00 01                	add    BYTE PTR [rcx],al
    5057:	0c 21                	or     al,0x21
    5059:	61                   	(bad)  
    505a:	00 00                	add    BYTE PTR [rax],al
    505c:	00 02                	add    BYTE PTR [rdx],al
    505e:	91                   	xchg   ecx,eax
    505f:	5c                   	pop    rsp
    5060:	12 72 65             	adc    dh,BYTE PTR [rdx+0x65]
    5063:	74 00                	je     5065 <stivale_hdr-0x1faf9b>
    5065:	01 0e                	add    DWORD PTR [rsi],ecx
    5067:	0e                   	(bad)  
    5068:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    506b:	00 02                	add    BYTE PTR [rdx],al
    506d:	91                   	xchg   ecx,eax
    506e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    506f:	00 15 37 01 00 00    	add    BYTE PTR [rip+0x137],dl        # 51ac <stivale_hdr-0x1fae54>
    5075:	81 3d 20 00 00 00 00 	cmp    DWORD PTR [rip+0x20],0x210000        # 509f <stivale_hdr-0x1faf61>
    507c:	00 21 00 
    507f:	00 00                	add    BYTE PTR [rax],al
    5081:	00 00                	add    BYTE PTR [rax],al
    5083:	00 00                	add    BYTE PTR [rax],al
    5085:	01 9c 11 fb 33 00 00 	add    DWORD PTR [rcx+rdx*1+0x33fb],ebx
    508c:	01 05 22 61 00 00    	add    DWORD PTR [rip+0x6122],eax        # b1b4 <stivale_hdr-0x1f4e4c>
    5092:	00 02                	add    BYTE PTR [rdx],al
    5094:	91                   	xchg   ecx,eax
    5095:	6c                   	ins    BYTE PTR es:[rdi],dx
    5096:	0f 76 61 6c          	pcmpeqd mm4,QWORD PTR [rcx+0x6c]
    509a:	00 01                	add    BYTE PTR [rcx],al
    509c:	05 2d 4e 00 00       	add    eax,0x4e2d
    50a1:	00 02                	add    BYTE PTR [rdx],al
    50a3:	91                   	xchg   ecx,eax
    50a4:	68 00 00 73 05       	push   0x5730000
    50a9:	00 00                	add    BYTE PTR [rax],al
    50ab:	04 00                	add    al,0x0
    50ad:	41 1d 00 00 08 01    	rex.B sbb eax,0x1080000
    50b3:	7c 00                	jl     50b5 <stivale_hdr-0x1faf4b>
    50b5:	00 00                	add    BYTE PTR [rax],al
    50b7:	04 10                	add    al,0x10
    50b9:	22 00                	and    al,BYTE PTR [rax]
    50bb:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    50be:	00 00                	add    BYTE PTR [rax],al
    50c0:	bf 3f 20 00 00       	mov    edi,0x203f
    50c5:	00 00                	add    BYTE PTR [rax],al
    50c7:	00 64 02 00          	add    BYTE PTR [rdx+rax*1+0x0],ah
    50cb:	00 00                	add    BYTE PTR [rax],al
    50cd:	00 00                	add    BYTE PTR [rax],al
    50cf:	00 09                	add    BYTE PTR [rcx],cl
    50d1:	1f                   	(bad)  
    50d2:	00 00                	add    BYTE PTR [rax],al
    50d4:	02 08                	add    cl,BYTE PTR [rax]
    50d6:	05 6a 01 00 00       	add    eax,0x16a
    50db:	02 08                	add    cl,BYTE PTR [rax]
    50dd:	07                   	(bad)  
    50de:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    50e1:	00 02                	add    BYTE PTR [rdx],al
    50e3:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 524e <stivale_hdr-0x1fadb2>
    50e9:	02 10                	add    dl,BYTE PTR [rax]
    50eb:	04 8f                	add    al,0x8f
    50ed:	01 00                	add    DWORD PTR [rax],eax
    50ef:	00 03                	add    BYTE PTR [rbx],al
    50f1:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    50f4:	00 02                	add    BYTE PTR [rdx],al
    50f6:	01 08                	add    DWORD PTR [rax],ecx
    50f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    50f9:	00 00                	add    BYTE PTR [rax],al
    50fb:	00 02                	add    BYTE PTR [rdx],al
    50fd:	02 07                	add    al,BYTE PTR [rdi]
    50ff:	9b                   	fwait
    5100:	01 00                	add    DWORD PTR [rax],eax
    5102:	00 02                	add    BYTE PTR [rdx],al
    5104:	04 07                	add    al,0x7
    5106:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    5109:	00 02                	add    BYTE PTR [rdx],al
    510b:	10 07                	adc    BYTE PTR [rdi],al
    510d:	00 00                	add    BYTE PTR [rax],al
    510f:	00 00                	add    BYTE PTR [rax],al
    5111:	04 5f                	add    al,0x5f
    5113:	03 00                	add    eax,DWORD PTR [rax]
    5115:	00 02                	add    BYTE PTR [rdx],al
    5117:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 516b <stivale_hdr-0x1fae95>
    511d:	04 4c                	add    al,0x4c
    511f:	01 00                	add    DWORD PTR [rax],eax
    5121:	00 02                	add    BYTE PTR [rdx],al
    5123:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 517e <stivale_hdr-0x1fae82>
    5129:	04 e5                	add    al,0xe5
    512b:	02 00                	add    al,BYTE PTR [rax]
    512d:	00 02                	add    BYTE PTR [rdx],al
    512f:	0c 1d                	or     al,0x1d
    5131:	5c                   	pop    rsp
    5132:	00 00                	add    BYTE PTR [rax],al
    5134:	00 04 25 00 00 00 02 	add    BYTE PTR ds:0x2000000,al
    513b:	0d 1d 34 00 00       	or     eax,0x341d
    5140:	00 02                	add    BYTE PTR [rdx],al
    5142:	01 06                	add    DWORD PTR [rsi],eax
    5144:	70 00                	jo     5146 <stivale_hdr-0x1faeba>
    5146:	00 00                	add    BYTE PTR [rax],al
    5148:	02 02                	add    al,BYTE PTR [rdx]
    514a:	05 73 01 00 00       	add    eax,0x173
    514f:	05 04 05 69 6e       	add    eax,0x6e690504
    5154:	74 00                	je     5156 <stivale_hdr-0x1faeaa>
    5156:	02 10                	add    dl,BYTE PTR [rax]
    5158:	05 1b 01 00 00       	add    eax,0x11b
    515d:	04 3b                	add    al,0x3b
    515f:	02 00                	add    al,BYTE PTR [rax]
    5161:	00 02                	add    BYTE PTR [rdx],al
    5163:	17                   	(bad)  
    5164:	1d 8e 00 00 00       	sbb    eax,0x8e
    5169:	04 8f                	add    al,0x8f
    516b:	22 00                	and    al,BYTE PTR [rax]
    516d:	00 02                	add    BYTE PTR [rdx],al
    516f:	19 1d 8e 00 00 00    	sbb    DWORD PTR [rip+0x8e],ebx        # 5203 <stivale_hdr-0x1fadfd>
    5175:	06                   	(bad)  
    5176:	73 79                	jae    51f1 <stivale_hdr-0x1fae0f>
    5178:	73 00                	jae    517a <stivale_hdr-0x1fae86>
    517a:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    517d:	8b 01                	mov    eax,DWORD PTR [rcx]
    517f:	00 00                	add    BYTE PTR [rax],al
    5181:	07                   	(bad)  
    5182:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
    5188:	0f 08                	invd   
    518a:	0a 24 00             	or     ah,BYTE PTR [rax+rax*1]
    518d:	00 24 03             	add    BYTE PTR [rbx+rax*1],ah
    5190:	06                   	(bad)  
    5191:	10 65 01             	adc    BYTE PTR [rbp+0x1],ah
    5194:	00 00                	add    BYTE PTR [rax],al
    5196:	09 ac 34 00 00 03 07 	or     DWORD PTR [rsp+rsi*1+0x7030000],ebp
    519d:	14 8b                	adc    al,0x8b
    519f:	01 00                	add    DWORD PTR [rax],eax
    51a1:	00 00                	add    BYTE PTR [rax],al
    51a3:	09 4f 0e             	or     DWORD PTR [rdi+0xe],ecx
    51a6:	00 00                	add    BYTE PTR [rax],al
    51a8:	03 08                	add    ecx,DWORD PTR [rax]
    51aa:	14 82                	adc    al,0x82
    51ac:	00 00                	add    BYTE PTR [rax],al
    51ae:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    51b1:	01 02                	add    DWORD PTR [rdx],eax
    51b3:	00 00                	add    BYTE PTR [rax],al
    51b5:	03 09                	add    ecx,DWORD PTR [rcx]
    51b7:	14 6a                	adc    al,0x6a
    51b9:	00 00                	add    BYTE PTR [rax],al
    51bb:	00 08                	add    BYTE PTR [rax],cl
    51bd:	09 fa                	or     edx,edi
    51bf:	02 00                	add    al,BYTE PTR [rax]
    51c1:	00 03                	add    BYTE PTR [rbx],al
    51c3:	0a 14 6a             	or     dl,BYTE PTR [rdx+rbp*2]
    51c6:	00 00                	add    BYTE PTR [rax],al
    51c8:	00 09                	add    BYTE PTR [rcx],cl
    51ca:	09 c9                	or     ecx,ecx
    51cc:	2d 00 00 03 0b       	sub    eax,0xb030000
    51d1:	14 9b                	adc    al,0x9b
    51d3:	01 00                	add    DWORD PTR [rax],eax
    51d5:	00 0a                	add    BYTE PTR [rdx],cl
    51d7:	09 d5                	or     ebp,edx
    51d9:	02 00                	add    al,BYTE PTR [rax]
    51db:	00 03                	add    BYTE PTR [rbx],al
    51dd:	0c 14                	or     al,0x14
    51df:	ab                   	stos   DWORD PTR es:[rdi],eax
    51e0:	01 00                	add    DWORD PTR [rax],eax
    51e2:	00 10                	add    BYTE PTR [rax],dl
    51e4:	09 fa                	or     edx,edi
    51e6:	01 00                	add    DWORD PTR [rax],eax
    51e8:	00 03                	add    BYTE PTR [rbx],al
    51ea:	0d 14 82 00 00       	or     eax,0x8214
    51ef:	00 18                	add    BYTE PTR [rax],bl
    51f1:	09 ba 01 00 00 03    	or     DWORD PTR [rdx+0x3000001],edi
    51f7:	0e                   	(bad)  
    51f8:	14 82                	adc    al,0x82
    51fa:	00 00                	add    BYTE PTR [rax],al
    51fc:	00 1c 09             	add    BYTE PTR [rcx+rcx*1],bl
    51ff:	3c 03                	cmp    al,0x3
    5201:	00 00                	add    BYTE PTR [rax],al
    5203:	03 0f                	add    ecx,DWORD PTR [rdi]
    5205:	14 82                	adc    al,0x82
    5207:	00 00                	add    BYTE PTR [rax],al
    5209:	00 20                	add    BYTE PTR [rax],ah
    520b:	00 0a                	add    BYTE PTR [rdx],cl
    520d:	35 05 00 00 2c       	xor    eax,0x2c000005
    5212:	03 1e                	add    ebx,DWORD PTR [rsi]
    5214:	10 09                	adc    BYTE PTR [rcx],cl
    5216:	9c                   	pushf  
    5217:	35 00 00 03 1f       	xor    eax,0x1f030000
    521c:	18 e2                	sbb    dl,ah
    521e:	00 00                	add    BYTE PTR [rax],al
    5220:	00 00                	add    BYTE PTR [rax],al
    5222:	0b 70 61             	or     esi,DWORD PTR [rax+0x61]
    5225:	64 00 03             	add    BYTE PTR fs:[rbx],al
    5228:	20 14 ab             	and    BYTE PTR [rbx+rbp*4],dl
    522b:	01 00                	add    DWORD PTR [rax],eax
    522d:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    5230:	00 00                	add    BYTE PTR [rax],al
    5232:	0c 6a                	or     al,0x6a
    5234:	00 00                	add    BYTE PTR [rax],al
    5236:	00 9b 01 00 00 0d    	add    BYTE PTR [rbx+0xd000001],bl
    523c:	34 00                	xor    al,0x0
    523e:	00 00                	add    BYTE PTR [rax],al
    5240:	03 00                	add    eax,DWORD PTR [rax]
    5242:	0c 6a                	or     al,0x6a
    5244:	00 00                	add    BYTE PTR [rax],al
    5246:	00 ab 01 00 00 0d    	add    BYTE PTR [rbx+0xd000001],ch
    524c:	34 00                	xor    al,0x0
    524e:	00 00                	add    BYTE PTR [rax],al
    5250:	05 00 0c 6a 00       	add    eax,0x6a0c00
    5255:	00 00                	add    BYTE PTR [rax],al
    5257:	bb 01 00 00 0d       	mov    ebx,0xd000001
    525c:	34 00                	xor    al,0x0
    525e:	00 00                	add    BYTE PTR [rax],al
    5260:	07                   	(bad)  
    5261:	00 06                	add    BYTE PTR [rsi],al
    5263:	69 6f 00 04 06 0b 06 	imul   ebp,DWORD PTR [rdi+0x0],0x60b0604
    526a:	03 00                	add    eax,DWORD PTR [rax]
    526c:	00 06                	add    BYTE PTR [rsi],al
    526e:	70 63                	jo     52d3 <stivale_hdr-0x1fad2d>
    5270:	69 00 04 07 0f e8    	imul   eax,DWORD PTR [rax],0xe80f0704
    5276:	02 00                	add    al,BYTE PTR [rax]
    5278:	00 08                	add    BYTE PTR [rax],cl
    527a:	33 23                	xor    esp,DWORD PTR [rbx]
    527c:	00 00                	add    BYTE PTR [rax],al
    527e:	10 04 08             	adc    BYTE PTR [rax+rcx*1],al
    5281:	10 21                	adc    BYTE PTR [rcx],ah
    5283:	02 00                	add    al,BYTE PTR [rax]
    5285:	00 09                	add    BYTE PTR [rcx],cl
    5287:	1a 04 00             	sbb    al,BYTE PTR [rax+rax*1]
    528a:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    528d:	15 c2 00 00 00       	adc    eax,0xc2
    5292:	00 09                	add    BYTE PTR [rcx],cl
    5294:	d1 21                	shl    DWORD PTR [rcx],1
    5296:	00 00                	add    BYTE PTR [rax],al
    5298:	04 0a                	add    al,0xa
    529a:	14 76                	adc    al,0x76
    529c:	00 00                	add    BYTE PTR [rax],al
    529e:	00 08                	add    BYTE PTR [rax],cl
    52a0:	09 b7 21 00 00 04    	or     DWORD PTR [rdi+0x4000021],esi
    52a6:	0b 14 6a             	or     edx,DWORD PTR [rdx+rbp*2]
    52a9:	00 00                	add    BYTE PTR [rax],al
    52ab:	00 0a                	add    BYTE PTR [rdx],cl
    52ad:	09 2b                	or     DWORD PTR [rbx],ebp
    52af:	23 00                	and    eax,DWORD PTR [rax]
    52b1:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    52b4:	14 6a                	adc    al,0x6a
    52b6:	00 00                	add    BYTE PTR [rax],al
    52b8:	00 0b                	add    BYTE PTR [rbx],cl
    52ba:	0b 70 61             	or     esi,DWORD PTR [rax+0x61]
    52bd:	64 00 04 0d 14 8b 01 	add    BYTE PTR fs:[rcx*1+0x18b14],al
    52c4:	00 
    52c5:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    52c8:	08 15 2e 00 00 10    	or     BYTE PTR [rip+0x1000002e],dl        # 100052fc <__kernel_end+0xfdf32fc>
    52ce:	04 10                	add    al,0x10
    52d0:	10 cb                	adc    bl,cl
    52d2:	02 00                	add    al,BYTE PTR [rax]
    52d4:	00 09                	add    BYTE PTR [rcx],cl
    52d6:	c9                   	leave  
    52d7:	2d 00 00 04 11       	sub    eax,0x11040000
    52dc:	14 76                	adc    al,0x76
    52de:	00 00                	add    BYTE PTR [rax],al
    52e0:	00 00                	add    BYTE PTR [rax],al
    52e2:	09 e8                	or     eax,ebp
    52e4:	22 00                	and    al,BYTE PTR [rax]
    52e6:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    52e9:	14 76                	adc    al,0x76
    52eb:	00 00                	add    BYTE PTR [rax],al
    52ed:	00 02                	add    BYTE PTR [rdx],al
    52ef:	09 2c 33             	or     DWORD PTR [rbx+rsi*1],ebp
    52f2:	00 00                	add    BYTE PTR [rax],al
    52f4:	04 13                	add    al,0x13
    52f6:	14 76                	adc    al,0x76
    52f8:	00 00                	add    BYTE PTR [rax],al
    52fa:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    52fd:	2e 30 00             	xor    BYTE PTR cs:[rax],al
    5300:	00 04 14             	add    BYTE PTR [rsp+rdx*1],al
    5303:	14 76                	adc    al,0x76
    5305:	00 00                	add    BYTE PTR [rax],al
    5307:	00 06                	add    BYTE PTR [rsi],al
    5309:	09 54 23 00          	or     DWORD PTR [rbx+riz*1+0x0],edx
    530d:	00 04 15 14 6a 00 00 	add    BYTE PTR [rdx*1+0x6a14],al
    5314:	00 08                	add    BYTE PTR [rax],cl
    5316:	09 02                	or     DWORD PTR [rdx],eax
    5318:	23 00                	and    eax,DWORD PTR [rax]
    531a:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    531d:	14 6a                	adc    al,0x6a
    531f:	00 00                	add    BYTE PTR [rax],al
    5321:	00 09                	add    BYTE PTR [rcx],cl
    5323:	09 f2                	or     edx,esi
    5325:	22 00                	and    al,BYTE PTR [rax]
    5327:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    532a:	14 6a                	adc    al,0x6a
    532c:	00 00                	add    BYTE PTR [rax],al
    532e:	00 0a                	add    BYTE PTR [rdx],cl
    5330:	09 46 22             	or     DWORD PTR [rsi+0x22],eax
    5333:	00 00                	add    BYTE PTR [rax],al
    5335:	04 18                	add    al,0x18
    5337:	14 6a                	adc    al,0x6a
    5339:	00 00                	add    BYTE PTR [rax],al
    533b:	00 0b                	add    BYTE PTR [rbx],cl
    533d:	09 c1                	or     ecx,eax
    533f:	21 00                	and    DWORD PTR [rax],eax
    5341:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    5344:	14 6a                	adc    al,0x6a
    5346:	00 00                	add    BYTE PTR [rax],al
    5348:	00 0c 09             	add    BYTE PTR [rcx+rcx*1],cl
    534b:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    534c:	22 00                	and    al,BYTE PTR [rax]
    534e:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    5351:	14 6a                	adc    al,0x6a
    5353:	00 00                	add    BYTE PTR [rax],al
    5355:	00 0d 09 48 23 00    	add    BYTE PTR [rip+0x234809],cl        # 239b64 <__kernel_end+0x27b64>
    535b:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
    535e:	14 6a                	adc    al,0x6a
    5360:	00 00                	add    BYTE PTR [rax],al
    5362:	00 0e                	add    BYTE PTR [rsi],cl
    5364:	09 b2 21 00 00 04    	or     DWORD PTR [rdx+0x4000021],esi
    536a:	1c 14                	sbb    al,0x14
    536c:	6a 00                	push   0x0
    536e:	00 00                	add    BYTE PTR [rax],al
    5370:	0f 00 0e             	str    WORD PTR [rsi]
    5373:	2e 04 00             	cs add al,0x0
    5376:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    5379:	28 a6 03 00 00 06    	sub    BYTE PTR [rsi+0x6000003],ah
    537f:	03 00                	add    eax,DWORD PTR [rax]
    5381:	00 0f                	add    BYTE PTR [rdi],cl
    5383:	97                   	xchg   edi,eax
    5384:	22 00                	and    al,BYTE PTR [rax]
    5386:	00 01                	add    BYTE PTR [rcx],al
    5388:	44 06                	rex.R (bad) 
    538a:	b3 22                	mov    bl,0x22
    538c:	00 00                	add    BYTE PTR [rax],al
    538e:	00 10                	add    BYTE PTR [rax],dl
    5390:	91                   	xchg   ecx,eax
    5391:	02 00                	add    al,BYTE PTR [rax]
    5393:	00 05 06 0f fd 02    	add    BYTE PTR [rip+0x2fd0f06],al        # 2fd629f <__kernel_end+0x2dc429f>
    5399:	00 00                	add    BYTE PTR [rax],al
    539b:	11 ad 02 00 00 05    	adc    DWORD PTR [rbp+0x5000002],ebp
    53a1:	07                   	(bad)  
    53a2:	13 00                	adc    eax,DWORD PTR [rax]
    53a4:	12 74 74 79          	adc    dh,BYTE PTR [rsp+rsi*2+0x79]
    53a8:	00 08                	add    BYTE PTR [rax],cl
    53aa:	0e                   	(bad)  
    53ab:	0f 00 13             	lldt   WORD PTR [rbx]
    53ae:	08 65 01             	or     BYTE PTR [rbp+0x1],ah
    53b1:	00 00                	add    BYTE PTR [rax],al
    53b3:	13 08                	adc    ecx,DWORD PTR [rax]
    53b5:	21 02                	and    DWORD PTR [rdx],eax
    53b7:	00 00                	add    BYTE PTR [rax],al
    53b9:	02 01                	add    al,BYTE PTR [rcx]
    53bb:	06                   	(bad)  
    53bc:	77 00                	ja     53be <stivale_hdr-0x1fac42>
    53be:	00 00                	add    BYTE PTR [rax],al
    53c0:	10 2e                	adc    BYTE PTR [rsi],ch
    53c2:	32 00                	xor    al,BYTE PTR [rax]
    53c4:	00 06                	add    BYTE PTR [rsi],al
    53c6:	08 0b                	or     BYTE PTR [rbx],cl
    53c8:	2e 03 00             	add    eax,DWORD PTR cs:[rax]
    53cb:	00 11                	add    BYTE PTR [rcx],dl
    53cd:	eb 06                	jmp    53d5 <stivale_hdr-0x1fac2b>
    53cf:	00 00                	add    BYTE PTR [rax],al
    53d1:	06                   	(bad)  
    53d2:	09 0c 00             	or     DWORD PTR [rax+rax*1],ecx
    53d5:	02 01                	add    al,BYTE PTR [rcx]
    53d7:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    53da:	00 00                	add    BYTE PTR [rax],al
    53dc:	06                   	(bad)  
    53dd:	67 66 78 00          	addr32 data16 js 53e1 <stivale_hdr-0x1fac1f>
    53e1:	07                   	(bad)  
    53e2:	08 0b                	or     BYTE PTR [rbx],cl
    53e4:	4a 03 00             	rex.WX add rax,QWORD PTR [rax]
    53e7:	00 11                	add    BYTE PTR [rcx],dl
    53e9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    53ea:	02 00                	add    al,BYTE PTR [rax]
    53ec:	00 07                	add    BYTE PTR [rdi],al
    53ee:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
    53f1:	14 cb                	adc    al,0xcb
    53f3:	02 00                	add    al,BYTE PTR [rax]
    53f5:	00 01                	add    BYTE PTR [rcx],al
    53f7:	06                   	(bad)  
    53f8:	19 09                	sbb    DWORD PTR [rcx],ecx
    53fa:	03 80 01 21 00 00    	add    eax,DWORD PTR [rax+0x2101]
    5400:	00 00                	add    BYTE PTR [rax],al
    5402:	00 15 db 02 00 00    	add    BYTE PTR [rip+0x2db],dl        # 56e3 <stivale_hdr-0x1fa91d>
    5408:	91                   	xchg   ecx,eax
    5409:	41 20 00             	and    BYTE PTR [r8],al
    540c:	00 00                	add    BYTE PTR [rax],al
    540e:	00 00                	add    BYTE PTR [rax],al
    5410:	92                   	xchg   edx,eax
    5411:	00 00                	add    BYTE PTR [rax],al
    5413:	00 00                	add    BYTE PTR [rax],al
    5415:	00 00                	add    BYTE PTR [rax],al
    5417:	00 01                	add    BYTE PTR [rcx],al
    5419:	9c                   	pushf  
    541a:	e8 03 00 00 16       	call   16005422 <__kernel_end+0x15df3422>
    541f:	e3 21                	jrcxz  5442 <stivale_hdr-0x1fabbe>
    5421:	00 00                	add    BYTE PTR [rax],al
    5423:	01 46 09             	add    DWORD PTR [rsi+0x9],eax
    5426:	a8 00                	test   al,0x0
    5428:	00 00                	add    BYTE PTR [rax],al
    542a:	02 91 5c 17 b0 41    	add    dl,BYTE PTR [rcx+0x41b0175c]
    5430:	20 00                	and    BYTE PTR [rax],al
    5432:	00 00                	add    BYTE PTR [rax],al
    5434:	00 00                	add    BYTE PTR [rax],al
    5436:	70 00                	jo     5438 <stivale_hdr-0x1fabc8>
    5438:	00 00                	add    BYTE PTR [rax],al
    543a:	00 00                	add    BYTE PTR [rax],al
    543c:	00 00                	add    BYTE PTR [rax],al
    543e:	18 69 00             	sbb    BYTE PTR [rcx+0x0],ch
    5441:	01 47 0e             	add    DWORD PTR [rdi+0xe],eax
    5444:	a8 00                	test   al,0x0
    5446:	00 00                	add    BYTE PTR [rax],al
    5448:	02 91 6c 17 bf 41    	add    dl,BYTE PTR [rcx+0x41bf176c]
    544e:	20 00                	and    BYTE PTR [rax],al
    5450:	00 00                	add    BYTE PTR [rax],al
    5452:	00 00                	add    BYTE PTR [rax],al
    5454:	5b                   	pop    rbx
    5455:	00 00                	add    BYTE PTR [rax],al
    5457:	00 00                	add    BYTE PTR [rax],al
    5459:	00 00                	add    BYTE PTR [rax],al
    545b:	00 16                	add    BYTE PTR [rsi],dl
    545d:	f0 21 00             	lock and DWORD PTR [rax],eax
    5460:	00 01                	add    BYTE PTR [rcx],al
    5462:	49 28 e8             	rex.WB sub r8b,bpl
    5465:	03 00                	add    eax,DWORD PTR [rax]
    5467:	00 02                	add    BYTE PTR [rdx],al
    5469:	91                   	xchg   ecx,eax
    546a:	50                   	push   rax
    546b:	17                   	(bad)  
    546c:	dd 41 20             	fld    QWORD PTR [rcx+0x20]
    546f:	00 00                	add    BYTE PTR [rax],al
    5471:	00 00                	add    BYTE PTR [rax],al
    5473:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 5479 <stivale_hdr-0x1fab87>
    5479:	00 00                	add    BYTE PTR [rax],al
    547b:	00 18                	add    BYTE PTR [rax],bl
    547d:	62                   	(bad)  
    547e:	75 73                	jne    54f3 <stivale_hdr-0x1fab0d>
    5480:	00 01                	add    BYTE PTR [rcx],al
    5482:	4a 13 b6 00 00 00 02 	rex.WX adc rsi,QWORD PTR [rsi+0x2000000]
    5489:	91                   	xchg   ecx,eax
    548a:	60                   	(bad)  
    548b:	00 00                	add    BYTE PTR [rax],al
    548d:	00 00                	add    BYTE PTR [rax],al
    548f:	13 08                	adc    ecx,DWORD PTR [rax]
    5491:	d2 01                	rol    BYTE PTR [rcx],cl
    5493:	00 00                	add    BYTE PTR [rax],al
    5495:	19 66 22             	sbb    DWORD PTR [rsi+0x22],esp
    5498:	00 00                	add    BYTE PTR [rax],al
    549a:	01 33                	add    DWORD PTR [rbx],esi
    549c:	06                   	(bad)  
    549d:	74 22                	je     54c1 <stivale_hdr-0x1fab3f>
    549f:	00 00                	add    BYTE PTR [rax],al
    54a1:	fd                   	std    
    54a2:	40 20 00             	and    BYTE PTR [rax],al
    54a5:	00 00                	add    BYTE PTR [rax],al
    54a7:	00 00                	add    BYTE PTR [rax],al
    54a9:	94                   	xchg   esp,eax
    54aa:	00 00                	add    BYTE PTR [rax],al
    54ac:	00 00                	add    BYTE PTR [rax],al
    54ae:	00 00                	add    BYTE PTR [rax],al
    54b0:	00 01                	add    BYTE PTR [rcx],al
    54b2:	9c                   	pushf  
    54b3:	7d 04                	jge    54b9 <stivale_hdr-0x1fab47>
    54b5:	00 00                	add    BYTE PTR [rax],al
    54b7:	1a 1a                	sbb    bl,BYTE PTR [rdx]
    54b9:	04 00                	add    al,0x0
    54bb:	00 01                	add    BYTE PTR [rcx],al
    54bd:	33 1c c2             	xor    ebx,DWORD PTR [rdx+rax*8]
    54c0:	00 00                	add    BYTE PTR [rax],al
    54c2:	00 02                	add    BYTE PTR [rdx],al
    54c4:	91                   	xchg   ecx,eax
    54c5:	48 1b 62 75          	sbb    rsp,QWORD PTR [rdx+0x75]
    54c9:	73 00                	jae    54cb <stivale_hdr-0x1fab35>
    54cb:	01 33                	add    DWORD PTR [rbx],esi
    54cd:	27                   	(bad)  
    54ce:	b6 00                	mov    dh,0x0
    54d0:	00 00                	add    BYTE PTR [rax],al
    54d2:	02 91 40 16 ea 2a    	add    dl,BYTE PTR [rcx+0x2aea1640]
    54d8:	00 00                	add    BYTE PTR [rax],al
    54da:	01 35 0c 8e 00 00    	add    DWORD PTR [rip+0x8e0c],esi        # e2ec <stivale_hdr-0x1f1d14>
    54e0:	00 02                	add    BYTE PTR [rdx],al
    54e2:	91                   	xchg   ecx,eax
    54e3:	60                   	(bad)  
    54e4:	16                   	(bad)  
    54e5:	3a 22                	cmp    ah,BYTE PTR [rdx]
    54e7:	00 00                	add    BYTE PTR [rax],al
    54e9:	01 36                	add    DWORD PTR [rsi],esi
    54eb:	0d c2 00 00 00       	or     eax,0xc2
    54f0:	02 91 58 16 15 2e    	add    dl,BYTE PTR [rcx+0x2e151658]
    54f6:	00 00                	add    BYTE PTR [rax],al
    54f8:	01 39                	add    DWORD PTR [rcx],edi
    54fa:	1d 0c 03 00 00       	sbb    eax,0x30c
    54ff:	02 91 50 17 63 41    	add    dl,BYTE PTR [rcx+0x41631750]
    5505:	20 00                	and    BYTE PTR [rax],al
    5507:	00 00                	add    BYTE PTR [rax],al
    5509:	00 00                	add    BYTE PTR [rax],al
    550b:	28 00                	sub    BYTE PTR [rax],al
    550d:	00 00                	add    BYTE PTR [rax],al
    550f:	00 00                	add    BYTE PTR [rax],al
    5511:	00 00                	add    BYTE PTR [rax],al
    5513:	16                   	(bad)  
    5514:	33 22                	xor    esp,DWORD PTR [rdx]
    5516:	00 00                	add    BYTE PTR [rax],al
    5518:	01 40 0e             	add    DWORD PTR [rax+0xe],eax
    551b:	a8 00                	test   al,0x0
    551d:	00 00                	add    BYTE PTR [rax],al
    551f:	02 91 6c 00 00 19    	add    dl,BYTE PTR [rcx+0x1900006c]
    5525:	29 22                	sub    DWORD PTR [rdx],esp
    5527:	00 00                	add    BYTE PTR [rax],al
    5529:	01 22                	add    DWORD PTR [rdx],esp
    552b:	06                   	(bad)  
    552c:	14 23                	adc    al,0x23
    552e:	00 00                	add    BYTE PTR [rax],al
    5530:	69 40 20 00 00 00 00 	imul   eax,DWORD PTR [rax+0x20],0x0
    5537:	00 94 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],dl
    553e:	00 00                	add    BYTE PTR [rax],al
    5540:	01 9c 0c 05 00 00 1a 	add    DWORD PTR [rsp+rcx*1+0x1a000005],ebx
    5547:	3a 22                	cmp    ah,BYTE PTR [rdx]
    5549:	00 00                	add    BYTE PTR [rax],al
    554b:	01 22                	add    DWORD PTR [rdx],esp
    554d:	1f                   	(bad)  
    554e:	c2 00 00             	ret    0x0
    5551:	00 02                	add    BYTE PTR [rdx],al
    5553:	91                   	xchg   ecx,eax
    5554:	48 1a 33             	rex.W sbb sil,BYTE PTR [rbx]
    5557:	22 00                	and    al,BYTE PTR [rax]
    5559:	00 01                	add    BYTE PTR [rcx],al
    555b:	22 31                	and    dh,BYTE PTR [rcx]
    555d:	b6 00                	mov    dh,0x0
    555f:	00 00                	add    BYTE PTR [rax],al
    5561:	02 91 40 16 ea 2a    	add    dl,BYTE PTR [rcx+0x2aea1640]
    5567:	00 00                	add    BYTE PTR [rax],al
    5569:	01 24 0c             	add    DWORD PTR [rsp+rcx*1],esp
    556c:	8e 00                	mov    es,WORD PTR [rax]
    556e:	00 00                	add    BYTE PTR [rax],al
    5570:	02 91 60 16 88 22    	add    dl,BYTE PTR [rcx+0x22881660]
    5576:	00 00                	add    BYTE PTR [rax],al
    5578:	01 25 0d c2 00 00    	add    DWORD PTR [rip+0xc20d],esp        # 1178b <stivale_hdr-0x1ee875>
    557e:	00 02                	add    BYTE PTR [rdx],al
    5580:	91                   	xchg   ecx,eax
    5581:	58                   	pop    rax
    5582:	16                   	(bad)  
    5583:	15 2e 00 00 01       	adc    eax,0x100002e
    5588:	28 1d 0c 03 00 00    	sub    BYTE PTR [rip+0x30c],bl        # 589a <stivale_hdr-0x1fa766>
    558e:	02 91 50 17 cf 40    	add    dl,BYTE PTR [rcx+0x40cf1750]
    5594:	20 00                	and    BYTE PTR [rax],al
    5596:	00 00                	add    BYTE PTR [rax],al
    5598:	00 00                	add    BYTE PTR [rax],al
    559a:	28 00                	sub    BYTE PTR [rax],al
    559c:	00 00                	add    BYTE PTR [rax],al
    559e:	00 00                	add    BYTE PTR [rax],al
    55a0:	00 00                	add    BYTE PTR [rax],al
    55a2:	16                   	(bad)  
    55a3:	5d                   	pop    rbp
    55a4:	22 00                	and    al,BYTE PTR [rax]
    55a6:	00 01                	add    BYTE PTR [rcx],al
    55a8:	2f                   	(bad)  
    55a9:	0e                   	(bad)  
    55aa:	a8 00                	test   al,0x0
    55ac:	00 00                	add    BYTE PTR [rax],al
    55ae:	02 91 6c 00 00 1c    	add    dl,BYTE PTR [rcx+0x1c00006c]
    55b4:	53                   	push   rbx
    55b5:	22 00                	and    al,BYTE PTR [rax]
    55b7:	00 01                	add    BYTE PTR [rcx],al
    55b9:	08 06                	or     BYTE PTR [rsi],al
    55bb:	cf                   	iret   
    55bc:	22 00                	and    al,BYTE PTR [rax]
    55be:	00 bf 3f 20 00 00    	add    BYTE PTR [rdi+0x203f],bh
    55c4:	00 00                	add    BYTE PTR [rax],al
    55c6:	00 aa 00 00 00 00    	add    BYTE PTR [rdx+0x0],ch
    55cc:	00 00                	add    BYTE PTR [rax],al
    55ce:	00 01                	add    BYTE PTR [rcx],al
    55d0:	9c                   	pushf  
    55d1:	1a 88 22 00 00 01    	sbb    cl,BYTE PTR [rax+0x1000022]
    55d7:	08 21                	or     BYTE PTR [rcx],ah
    55d9:	c2 00 00             	ret    0x0
    55dc:	00 02                	add    BYTE PTR [rdx],al
    55de:	91                   	xchg   ecx,eax
    55df:	48 1a 5d 22          	rex.W sbb bl,BYTE PTR [rbp+0x22]
    55e3:	00 00                	add    BYTE PTR [rax],al
    55e5:	01 08                	add    DWORD PTR [rax],ecx
    55e7:	36 b6 00             	ss mov dh,0x0
    55ea:	00 00                	add    BYTE PTR [rax],al
    55ec:	02 91 40 16 ea 2a    	add    dl,BYTE PTR [rcx+0x2aea1640]
    55f2:	00 00                	add    BYTE PTR [rax],al
    55f4:	01 0a                	add    DWORD PTR [rdx],ecx
    55f6:	0c 8e                	or     al,0x8e
    55f8:	00 00                	add    BYTE PTR [rax],al
    55fa:	00 02                	add    BYTE PTR [rdx],al
    55fc:	91                   	xchg   ecx,eax
    55fd:	68 16 ff 21 00       	push   0x21ff16
    5602:	00 01                	add    BYTE PTR [rcx],al
    5604:	0b 0d c2 00 00 00    	or     ecx,DWORD PTR [rip+0xc2]        # 56cc <stivale_hdr-0x1fa934>
    560a:	02 91 60 16 15 2e    	add    dl,BYTE PTR [rcx+0x2e151660]
    5610:	00 00                	add    BYTE PTR [rax],al
    5612:	01 0e                	add    DWORD PTR [rsi],ecx
    5614:	1d 0c 03 00 00       	sbb    eax,0x30c
    5619:	02 91 58 00 00 3b    	add    dl,BYTE PTR [rcx+0x3b000058]
    561f:	01 00                	add    DWORD PTR [rax],eax
    5621:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    5624:	ef                   	out    dx,eax
    5625:	1e                   	(bad)  
    5626:	00 00                	add    BYTE PTR [rax],al
    5628:	08 01                	or     BYTE PTR [rcx],al
    562a:	7c 00                	jl     562c <stivale_hdr-0x1fa9d4>
    562c:	00 00                	add    BYTE PTR [rax],al
    562e:	04 83                	add    al,0x83
    5630:	23 00                	and    eax,DWORD PTR [rax]
    5632:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    5635:	00 00                	add    BYTE PTR [rax],al
    5637:	23 42 20             	and    eax,DWORD PTR [rdx+0x20]
    563a:	00 00                	add    BYTE PTR [rax],al
    563c:	00 00                	add    BYTE PTR [rax],al
    563e:	00 26                	add    BYTE PTR [rsi],ah
    5640:	00 00                	add    BYTE PTR [rax],al
    5642:	00 00                	add    BYTE PTR [rax],al
    5644:	00 00                	add    BYTE PTR [rax],al
    5646:	00 f5                	add    ch,dh
    5648:	20 00                	and    BYTE PTR [rax],al
    564a:	00 02                	add    BYTE PTR [rdx],al
    564c:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 57bc <stivale_hdr-0x1fa844>
    5652:	02 08                	add    cl,BYTE PTR [rax]
    5654:	07                   	(bad)  
    5655:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    5658:	00 02                	add    BYTE PTR [rdx],al
    565a:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 57c5 <stivale_hdr-0x1fa83b>
    5660:	02 10                	add    dl,BYTE PTR [rax]
    5662:	04 8f                	add    al,0x8f
    5664:	01 00                	add    DWORD PTR [rax],eax
    5666:	00 03                	add    BYTE PTR [rbx],al
    5668:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    566b:	00 02                	add    BYTE PTR [rdx],al
    566d:	01 08                	add    DWORD PTR [rax],ecx
    566f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5670:	00 00                	add    BYTE PTR [rax],al
    5672:	00 02                	add    BYTE PTR [rdx],al
    5674:	02 07                	add    al,BYTE PTR [rdi]
    5676:	9b                   	fwait
    5677:	01 00                	add    DWORD PTR [rax],eax
    5679:	00 02                	add    BYTE PTR [rdx],al
    567b:	04 07                	add    al,0x7
    567d:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    5680:	00 02                	add    BYTE PTR [rdx],al
    5682:	10 07                	adc    BYTE PTR [rdi],al
    5684:	00 00                	add    BYTE PTR [rax],al
    5686:	00 00                	add    BYTE PTR [rax],al
    5688:	02 01                	add    al,BYTE PTR [rcx]
    568a:	06                   	(bad)  
    568b:	70 00                	jo     568d <stivale_hdr-0x1fa973>
    568d:	00 00                	add    BYTE PTR [rax],al
    568f:	02 02                	add    al,BYTE PTR [rdx]
    5691:	05 73 01 00 00       	add    eax,0x173
    5696:	04 04                	add    al,0x4
    5698:	05 69 6e 74 00       	add    eax,0x746e69
    569d:	02 10                	add    dl,BYTE PTR [rax]
    569f:	05 1b 01 00 00       	add    eax,0x11b
    56a4:	05 73 79 73 00       	add    eax,0x737973
    56a9:	02 04 0b             	add    al,BYTE PTR [rbx+rcx*1]
    56ac:	9b                   	fwait
    56ad:	00 00                	add    BYTE PTR [rax],al
    56af:	00 06                	add    BYTE PTR [rsi],al
    56b1:	69 00 00 00 02 05    	imul   eax,DWORD PTR [rax],0x5020000
    56b7:	0f 00 02             	sldt   WORD PTR [rdx]
    56ba:	01 06                	add    DWORD PTR [rsi],eax
    56bc:	77 00                	ja     56be <stivale_hdr-0x1fa942>
    56be:	00 00                	add    BYTE PTR [rax],al
    56c0:	05 67 66 78 00       	add    eax,0x786667
    56c5:	03 08                	add    ecx,DWORD PTR [rax]
    56c7:	0b b7 00 00 00 06    	or     esi,DWORD PTR [rdi+0x6000000]
    56cd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    56ce:	02 00                	add    al,BYTE PTR [rax]
    56d0:	00 03                	add    BYTE PTR [rbx],al
    56d2:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
    56d5:	05 69 6f 00 04       	add    eax,0x4006f69
    56da:	0d 0b cb 00 00       	or     eax,0xcb0b
    56df:	00 07                	add    BYTE PTR [rdi],al
    56e1:	74 74                	je     5757 <stivale_hdr-0x1fa8a9>
    56e3:	79 00                	jns    56e5 <stivale_hdr-0x1fa91b>
    56e5:	04 0e                	add    al,0xe
    56e7:	0f 00 05 63 70 75 00 	sldt   WORD PTR [rip+0x757063]        # 75c751 <__kernel_end+0x54a751>
    56ee:	05 08 0b f9 00       	add    eax,0xf90b08
    56f3:	00 00                	add    BYTE PTR [rax],al
    56f5:	08 9e 23 00 00 05    	or     BYTE PTR [rsi+0x5000023],bl
    56fb:	09 0f                	or     DWORD PTR [rdi],ecx
    56fd:	09 69 23             	or     DWORD PTR [rcx+0x23],ebp
    5700:	00 00                	add    BYTE PTR [rax],al
    5702:	01 15 06 09 76 23    	add    DWORD PTR [rip+0x23760906],edx        # 2376600e <__kernel_end+0x2355400e>
    5708:	00 00                	add    BYTE PTR [rax],al
    570a:	01 11                	add    DWORD PTR [rcx],edx
    570c:	06                   	(bad)  
    570d:	09 60 23             	or     DWORD PTR [rax+0x23],esp
    5710:	00 00                	add    BYTE PTR [rax],al
    5712:	01 0c 06             	add    DWORD PTR [rsi+rax*1],ecx
    5715:	00 00                	add    BYTE PTR [rax],al
    5717:	0a df                	or     bl,bh
    5719:	00 00                	add    BYTE PTR [rax],al
    571b:	00 3d 42 20 00 00    	add    BYTE PTR [rip+0x2042],bh        # 7763 <stivale_hdr-0x1f889d>
    5721:	00 00                	add    BYTE PTR [rax],al
    5723:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    5726:	00 00                	add    BYTE PTR [rax],al
    5728:	00 00                	add    BYTE PTR [rax],al
    572a:	00 00                	add    BYTE PTR [rax],al
    572c:	01 9c 0a e7 00 00 00 	add    DWORD PTR [rdx+rcx*1+0xe7],ebx
    5733:	31 42 20             	xor    DWORD PTR [rdx+0x20],eax
    5736:	00 00                	add    BYTE PTR [rax],al
    5738:	00 00                	add    BYTE PTR [rax],al
    573a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    573d:	00 00                	add    BYTE PTR [rax],al
    573f:	00 00                	add    BYTE PTR [rax],al
    5741:	00 00                	add    BYTE PTR [rax],al
    5743:	01 9c 0b ef 00 00 00 	add    DWORD PTR [rbx+rcx*1+0xef],ebx
    574a:	23 42 20             	and    eax,DWORD PTR [rdx+0x20]
    574d:	00 00                	add    BYTE PTR [rax],al
    574f:	00 00                	add    BYTE PTR [rax],al
    5751:	00 0e                	add    BYTE PTR [rsi],cl
    5753:	00 00                	add    BYTE PTR [rax],al
    5755:	00 00                	add    BYTE PTR [rax],al
    5757:	00 00                	add    BYTE PTR [rax],al
    5759:	00 01                	add    BYTE PTR [rcx],al
    575b:	9c                   	pushf  
    575c:	00 b8 03 00 00 04    	add    BYTE PTR [rax+0x4000003],bh
    5762:	00 87 1f 00 00 08    	add    BYTE PTR [rdi+0x800001f],al
    5768:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    576c:	00 04 b5 23 00 00 24 	add    BYTE PTR [rsi*4+0x24000023],al
    5773:	01 00                	add    DWORD PTR [rax],eax
    5775:	00 49 42             	add    BYTE PTR [rcx+0x42],cl
    5778:	20 00                	and    BYTE PTR [rax],al
    577a:	00 00                	add    BYTE PTR [rax],al
    577c:	00 00                	add    BYTE PTR [rax],al
    577e:	fe 00                	inc    BYTE PTR [rax]
    5780:	00 00                	add    BYTE PTR [rax],al
    5782:	00 00                	add    BYTE PTR [rax],al
    5784:	00 00                	add    BYTE PTR [rax],al
    5786:	ab                   	stos   DWORD PTR es:[rdi],eax
    5787:	21 00                	and    DWORD PTR [rax],eax
    5789:	00 02                	add    BYTE PTR [rdx],al
    578b:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 58fb <stivale_hdr-0x1fa705>
    5791:	02 08                	add    cl,BYTE PTR [rax]
    5793:	07                   	(bad)  
    5794:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    5797:	00 02                	add    BYTE PTR [rdx],al
    5799:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 5904 <stivale_hdr-0x1fa6fc>
    579f:	02 10                	add    dl,BYTE PTR [rax]
    57a1:	04 8f                	add    al,0x8f
    57a3:	01 00                	add    DWORD PTR [rax],eax
    57a5:	00 03                	add    BYTE PTR [rbx],al
    57a7:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    57aa:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    57ad:	23 00                	and    eax,DWORD PTR [rax]
    57af:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    57b2:	1d 5a 00 00 00       	sbb    eax,0x5a
    57b7:	02 01                	add    al,BYTE PTR [rcx]
    57b9:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    57bc:	00 00                	add    BYTE PTR [rax],al
    57be:	04 eb                	add    al,0xeb
    57c0:	08 00                	or     BYTE PTR [rax],al
    57c2:	00 04 05 1d 6d 00 00 	add    BYTE PTR [rax*1+0x6d1d],al
    57c9:	00 02                	add    BYTE PTR [rdx],al
    57cb:	02 07                	add    al,BYTE PTR [rdi]
    57cd:	9b                   	fwait
    57ce:	01 00                	add    DWORD PTR [rax],eax
    57d0:	00 02                	add    BYTE PTR [rdx],al
    57d2:	04 07                	add    al,0x7
    57d4:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    57d7:	00 02                	add    BYTE PTR [rdx],al
    57d9:	10 07                	adc    BYTE PTR [rdi],al
    57db:	00 00                	add    BYTE PTR [rax],al
    57dd:	00 00                	add    BYTE PTR [rax],al
    57df:	04 5f                	add    al,0x5f
    57e1:	03 00                	add    eax,DWORD PTR [rax]
    57e3:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
    57e6:	1d 5a 00 00 00       	sbb    eax,0x5a
    57eb:	04 e5                	add    al,0xe5
    57ed:	02 00                	add    al,BYTE PTR [rax]
    57ef:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    57f2:	1d 74 00 00 00       	sbb    eax,0x74
    57f7:	04 25                	add    al,0x25
    57f9:	00 00                	add    BYTE PTR [rax],al
    57fb:	00 04 0d 1d 34 00 00 	add    BYTE PTR [rcx*1+0x341d],al
    5802:	00 02                	add    BYTE PTR [rdx],al
    5804:	01 06                	add    DWORD PTR [rsi],eax
    5806:	70 00                	jo     5808 <stivale_hdr-0x1fa7f8>
    5808:	00 00                	add    BYTE PTR [rax],al
    580a:	02 02                	add    al,BYTE PTR [rdx]
    580c:	05 73 01 00 00       	add    eax,0x173
    5811:	05 04 05 69 6e       	add    eax,0x6e690504
    5816:	74 00                	je     5818 <stivale_hdr-0x1fa7e8>
    5818:	02 10                	add    dl,BYTE PTR [rax]
    581a:	05 1b 01 00 00       	add    eax,0x11b
    581f:	04 3b                	add    al,0x3b
    5821:	02 00                	add    al,BYTE PTR [rax]
    5823:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    5826:	1d 9a 00 00 00       	sbb    eax,0x9a
    582b:	04 8f                	add    al,0x8f
    582d:	22 00                	and    al,BYTE PTR [rax]
    582f:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    5832:	1d 9a 00 00 00       	sbb    eax,0x9a
    5837:	06                   	(bad)  
    5838:	73 79                	jae    58b3 <stivale_hdr-0x1fa74d>
    583a:	73 00                	jae    583c <stivale_hdr-0x1fa7c4>
    583c:	05 04 0b 1c 02       	add    eax,0x21c0b04
    5841:	00 00                	add    BYTE PTR [rax],al
    5843:	07                   	(bad)  
    5844:	69 00 00 00 05 05    	imul   eax,DWORD PTR [rax],0x5050000
    584a:	0f 08                	invd   
    584c:	0a 24 00             	or     ah,BYTE PTR [rax+rax*1]
    584f:	00 24 05 06 10 71 01 	add    BYTE PTR [rax*1+0x1711006],ah
    5856:	00 00                	add    BYTE PTR [rax],al
    5858:	09 ac 34 00 00 05 07 	or     DWORD PTR [rsp+rsi*1+0x7050000],ebp
    585f:	14 1c                	adc    al,0x1c
    5861:	02 00                	add    al,BYTE PTR [rax]
    5863:	00 00                	add    BYTE PTR [rax],al
    5865:	09 4f 0e             	or     DWORD PTR [rdi+0xe],ecx
    5868:	00 00                	add    BYTE PTR [rax],al
    586a:	05 08 14 8e 00       	add    eax,0x8e1408
    586f:	00 00                	add    BYTE PTR [rax],al
    5871:	04 09                	add    al,0x9
    5873:	01 02                	add    DWORD PTR [rdx],eax
    5875:	00 00                	add    BYTE PTR [rax],al
    5877:	05 09 14 82 00       	add    eax,0x821409
    587c:	00 00                	add    BYTE PTR [rax],al
    587e:	08 09                	or     BYTE PTR [rcx],cl
    5880:	fa                   	cli    
    5881:	02 00                	add    al,BYTE PTR [rax]
    5883:	00 05 0a 14 82 00    	add    BYTE PTR [rip+0x82140a],al        # 826c93 <__kernel_end+0x614c93>
    5889:	00 00                	add    BYTE PTR [rax],al
    588b:	09 09                	or     DWORD PTR [rcx],ecx
    588d:	c9                   	leave  
    588e:	2d 00 00 05 0b       	sub    eax,0xb050000
    5893:	14 2c                	adc    al,0x2c
    5895:	02 00                	add    al,BYTE PTR [rax]
    5897:	00 0a                	add    BYTE PTR [rdx],cl
    5899:	09 d5                	or     ebp,edx
    589b:	02 00                	add    al,BYTE PTR [rax]
    589d:	00 05 0c 14 3c 02    	add    BYTE PTR [rip+0x23c140c],al        # 23c6caf <__kernel_end+0x21b4caf>
    58a3:	00 00                	add    BYTE PTR [rax],al
    58a5:	10 09                	adc    BYTE PTR [rcx],cl
    58a7:	fa                   	cli    
    58a8:	01 00                	add    DWORD PTR [rax],eax
    58aa:	00 05 0d 14 8e 00    	add    BYTE PTR [rip+0x8e140d],al        # 8e6cbd <__kernel_end+0x6d4cbd>
    58b0:	00 00                	add    BYTE PTR [rax],al
    58b2:	18 09                	sbb    BYTE PTR [rcx],cl
    58b4:	ba 01 00 00 05       	mov    edx,0x5000001
    58b9:	0e                   	(bad)  
    58ba:	14 8e                	adc    al,0x8e
    58bc:	00 00                	add    BYTE PTR [rax],al
    58be:	00 1c 09             	add    BYTE PTR [rcx+rcx*1],bl
    58c1:	3c 03                	cmp    al,0x3
    58c3:	00 00                	add    BYTE PTR [rax],al
    58c5:	05 0f 14 8e 00       	add    eax,0x8e140f
    58ca:	00 00                	add    BYTE PTR [rax],al
    58cc:	20 00                	and    BYTE PTR [rax],al
    58ce:	08 1f                	or     BYTE PTR [rdi],bl
    58d0:	03 00                	add    eax,DWORD PTR [rax]
    58d2:	00 24 05 12 10 f4 01 	add    BYTE PTR [rax*1+0x1f41012],ah
    58d9:	00 00                	add    BYTE PTR [rax],al
    58db:	09 ac 34 00 00 05 13 	or     DWORD PTR [rsp+rsi*1+0x13050000],ebp
    58e2:	14 3c                	adc    al,0x3c
    58e4:	02 00                	add    al,BYTE PTR [rax]
    58e6:	00 00                	add    BYTE PTR [rax],al
    58e8:	09 fa                	or     edx,edi
    58ea:	02 00                	add    al,BYTE PTR [rax]
    58ec:	00 05 14 14 82 00    	add    BYTE PTR [rip+0x821414],al        # 826d06 <__kernel_end+0x614d06>
    58f2:	00 00                	add    BYTE PTR [rax],al
    58f4:	08 09                	or     BYTE PTR [rcx],cl
    58f6:	c9                   	leave  
    58f7:	2d 00 00 05 15       	sub    eax,0x15050000
    58fc:	14 2c                	adc    al,0x2c
    58fe:	02 00                	add    al,BYTE PTR [rax]
    5900:	00 09                	add    BYTE PTR [rcx],cl
    5902:	09 01                	or     DWORD PTR [rcx],eax
    5904:	02 00                	add    al,BYTE PTR [rax]
    5906:	00 05 16 14 82 00    	add    BYTE PTR [rip+0x821416],al        # 826d22 <__kernel_end+0x614d22>
    590c:	00 00                	add    BYTE PTR [rax],al
    590e:	0f 09                	wbinvd 
    5910:	d6                   	(bad)  
    5911:	01 00                	add    DWORD PTR [rax],eax
    5913:	00 05 17 14 8e 00    	add    BYTE PTR [rip+0x8e1417],al        # 8e6d30 <__kernel_end+0x6d4d30>
    5919:	00 00                	add    BYTE PTR [rax],al
    591b:	10 09                	adc    BYTE PTR [rcx],cl
    591d:	4f 0e                	rex.WRXB (bad) 
    591f:	00 00                	add    BYTE PTR [rax],al
    5921:	05 18 14 8e 00       	add    eax,0x8e1418
    5926:	00 00                	add    BYTE PTR [rax],al
    5928:	14 09                	adc    al,0x9
    592a:	0a 02                	or     al,BYTE PTR [rdx]
    592c:	00 00                	add    BYTE PTR [rax],al
    592e:	05 19 19 4c 02       	add    eax,0x24c1919
    5933:	00 00                	add    BYTE PTR [rax],al
    5935:	18 09                	sbb    BYTE PTR [rcx],cl
    5937:	f9                   	stc    
    5938:	02 00                	add    al,BYTE PTR [rax]
    593a:	00 05 1a 14 82 00    	add    BYTE PTR [rip+0x82141a],al        # 826d5a <__kernel_end+0x614d5a>
    5940:	00 00                	add    BYTE PTR [rax],al
    5942:	20 0a                	and    BYTE PTR [rdx],cl
    5944:	70 61                	jo     59a7 <stivale_hdr-0x1fa659>
    5946:	64 00 05 1b 14 52 02 	add    BYTE PTR fs:[rip+0x252141b],al        # 2526d68 <__kernel_end+0x2314d68>
    594d:	00 00                	add    BYTE PTR [rax],al
    594f:	21 00                	and    DWORD PTR [rax],eax
    5951:	0b 8c 02 00 00 05 23 	or     ecx,DWORD PTR [rdx+rax*1+0x23050000]
    5958:	17                   	(bad)  
    5959:	b7 03                	mov    bh,0x3
    595b:	00 00                	add    BYTE PTR [rax],al
    595d:	62 02                	(bad)  
    595f:	00 00                	add    BYTE PTR [rax],al
    5961:	0c ab                	or     al,0xab
    5963:	23 00                	and    eax,DWORD PTR [rax]
    5965:	00 03                	add    BYTE PTR [rbx],al
    5967:	07                   	(bad)  
    5968:	18 cf                	sbb    bh,cl
    596a:	23 00                	and    eax,DWORD PTR [rax]
    596c:	00 4c 02 00          	add    BYTE PTR [rdx+rax*1+0x0],cl
    5970:	00 0d 7a 02 00 00    	add    BYTE PTR [rip+0x27a],cl        # 5bf0 <stivale_hdr-0x1fa410>
    5976:	00 00                	add    BYTE PTR [rax],al
    5978:	00 0e                	add    BYTE PTR [rsi],cl
    597a:	82                   	(bad)  
    597b:	00 00                	add    BYTE PTR [rax],al
    597d:	00 2c 02             	add    BYTE PTR [rdx+rax*1],ch
    5980:	00 00                	add    BYTE PTR [rax],al
    5982:	0f 34                	sysenter 
    5984:	00 00                	add    BYTE PTR [rax],al
    5986:	00 03                	add    BYTE PTR [rbx],al
    5988:	00 0e                	add    BYTE PTR [rsi],cl
    598a:	82                   	(bad)  
    598b:	00 00                	add    BYTE PTR [rax],al
    598d:	00 3c 02             	add    BYTE PTR [rdx+rax*1],bh
    5990:	00 00                	add    BYTE PTR [rax],al
    5992:	0f 34                	sysenter 
    5994:	00 00                	add    BYTE PTR [rax],al
    5996:	00 05 00 0e 82 00    	add    BYTE PTR [rip+0x820e00],al        # 82679c <__kernel_end+0x61479c>
    599c:	00 00                	add    BYTE PTR [rax],al
    599e:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
    59a1:	00 0f                	add    BYTE PTR [rdi],cl
    59a3:	34 00                	xor    al,0x0
    59a5:	00 00                	add    BYTE PTR [rax],al
    59a7:	07                   	(bad)  
    59a8:	00 10                	add    BYTE PTR [rax],dl
    59aa:	08 ee                	or     dh,ch
    59ac:	00 00                	add    BYTE PTR [rax],al
    59ae:	00 0e                	add    BYTE PTR [rsi],cl
    59b0:	82                   	(bad)  
    59b1:	00 00                	add    BYTE PTR [rax],al
    59b3:	00 62 02             	add    BYTE PTR [rdx+0x2],ah
    59b6:	00 00                	add    BYTE PTR [rax],al
    59b8:	0f 34                	sysenter 
    59ba:	00 00                	add    BYTE PTR [rax],al
    59bc:	00 02                	add    BYTE PTR [rdx],al
    59be:	00 10                	add    BYTE PTR [rax],dl
    59c0:	08 71 01             	or     BYTE PTR [rcx+0x1],dh
    59c3:	00 00                	add    BYTE PTR [rax],al
    59c5:	11 f4                	adc    esp,esi
    59c7:	01 00                	add    DWORD PTR [rax],eax
    59c9:	00 03                	add    BYTE PTR [rbx],al
    59cb:	05 13 09 03 88       	add    eax,0x88030913
    59d0:	01 21                	add    DWORD PTR [rcx],esp
    59d2:	00 00                	add    BYTE PTR [rax],al
    59d4:	00 00                	add    BYTE PTR [rax],al
    59d6:	00 10                	add    BYTE PTR [rax],dl
    59d8:	08 80 02 00 00 02    	or     BYTE PTR [rax+0x2000002],al
    59de:	01 06                	add    DWORD PTR [rsi],eax
    59e0:	77 00                	ja     59e2 <stivale_hdr-0x1fa61e>
    59e2:	00 00                	add    BYTE PTR [rax],al
    59e4:	12 04 02             	adc    al,BYTE PTR [rdx+rax*1]
    59e7:	00 00                	add    BYTE PTR [rax],al
    59e9:	8a 42 20             	mov    al,BYTE PTR [rdx+0x20]
    59ec:	00 00                	add    BYTE PTR [rax],al
    59ee:	00 00                	add    BYTE PTR [rax],al
    59f0:	00 bd 00 00 00 00    	add    BYTE PTR [rbp+0x0],bh
    59f6:	00 00                	add    BYTE PTR [rax],al
    59f8:	00 01                	add    BYTE PTR [rcx],al
    59fa:	9c                   	pushf  
    59fb:	20 03                	and    BYTE PTR [rbx],al
    59fd:	00 00                	add    BYTE PTR [rax],al
    59ff:	13 ac 34 00 00 03 07 	adc    ebp,DWORD PTR [rsp+rsi*1+0x7030000]
    5a06:	33 7a 02             	xor    edi,DWORD PTR [rdx+0x2]
    5a09:	00 00                	add    BYTE PTR [rax],al
    5a0b:	02 91 48 14 f5 23    	add    dl,BYTE PTR [rcx+0x23f51448]
    5a11:	00 00                	add    BYTE PTR [rax],al
    5a13:	03 0a                	add    ecx,DWORD PTR [rdx]
    5a15:	0a c2                	or     al,dl
    5a17:	00 00                	add    BYTE PTR [rax],al
    5a19:	00 02                	add    BYTE PTR [rdx],al
    5a1b:	91                   	xchg   ecx,eax
    5a1c:	58                   	pop    rax
    5a1d:	15 bc 42 20 00       	adc    eax,0x2042bc
    5a22:	00 00                	add    BYTE PTR [rax],al
    5a24:	00 00                	add    BYTE PTR [rax],al
    5a26:	84 00                	test   BYTE PTR [rax],al
    5a28:	00 00                	add    BYTE PTR [rax],al
    5a2a:	00 00                	add    BYTE PTR [rax],al
    5a2c:	00 00                	add    BYTE PTR [rax],al
    5a2e:	16                   	(bad)  
    5a2f:	69 00 03 0b 0f c2    	imul   eax,DWORD PTR [rax],0xc20f0b03
    5a35:	00 00                	add    BYTE PTR [rax],al
    5a37:	00 02                	add    BYTE PTR [rdx],al
    5a39:	91                   	xchg   ecx,eax
    5a3a:	68 15 ce 42 20       	push   0x2042ce15
    5a3f:	00 00                	add    BYTE PTR [rax],al
    5a41:	00 00                	add    BYTE PTR [rax],al
    5a43:	00 6b 00             	add    BYTE PTR [rbx+0x0],ch
    5a46:	00 00                	add    BYTE PTR [rax],al
    5a48:	00 00                	add    BYTE PTR [rax],al
    5a4a:	00 00                	add    BYTE PTR [rax],al
    5a4c:	14 02                	adc    al,0x2
    5a4e:	24 00                	and    al,0x0
    5a50:	00 03                	add    BYTE PTR [rbx],al
    5a52:	0d 27 4c 02 00       	or     eax,0x24c27
    5a57:	00 02                	add    BYTE PTR [rdx],al
    5a59:	91                   	xchg   ecx,eax
    5a5a:	50                   	push   rax
    5a5b:	15 f2 42 20 00       	adc    eax,0x2042f2
    5a60:	00 00                	add    BYTE PTR [rax],al
    5a62:	00 00                	add    BYTE PTR [rax],al
    5a64:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    5a67:	00 00                	add    BYTE PTR [rax],al
    5a69:	00 00                	add    BYTE PTR [rax],al
    5a6b:	00 16                	add    BYTE PTR [rsi],dl
    5a6d:	6a 00                	push   0x0
    5a6f:	03 0e                	add    ecx,DWORD PTR [rsi]
    5a71:	12 b4 00 00 00 02 91 	adc    dh,BYTE PTR [rax+rax*1-0x6efe0000]
    5a78:	64 00 00             	add    BYTE PTR fs:[rax],al
    5a7b:	00 00                	add    BYTE PTR [rax],al
    5a7d:	06                   	(bad)  
    5a7e:	69 6f 00 01 04 0b 5a 	imul   ebp,DWORD PTR [rdi+0x0],0x5a0b0401
    5a85:	03 00                	add    eax,DWORD PTR [rax]
    5a87:	00 17                	add    BYTE PTR [rdi],dl
    5a89:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    5a8a:	23 00                	and    eax,DWORD PTR [rax]
    5a8c:	00 02                	add    BYTE PTR [rdx],al
    5a8e:	05 0f 46 03 00       	add    eax,0x3460f
    5a93:	00 18                	add    BYTE PTR [rax],bl
    5a95:	e9 23 00 00 02       	jmp    2005abd <__kernel_end+0x1df3abd>
    5a9a:	07                   	(bad)  
    5a9b:	1d 0d 4e 00 00       	sbb    eax,0x4e0d
    5aa0:	00 00                	add    BYTE PTR [rax],al
    5aa2:	00 18                	add    BYTE PTR [rax],bl
    5aa4:	78 0c                	js     5ab2 <stivale_hdr-0x1fa54e>
    5aa6:	00 00                	add    BYTE PTR [rax],al
    5aa8:	01 05 18 0d 61 00    	add    DWORD PTR [rip+0x610d18],eax        # 6167c6 <__kernel_end+0x4047c6>
    5aae:	00 00                	add    BYTE PTR [rax],al
    5ab0:	0d 4e 00 00 00       	or     eax,0x4e
    5ab5:	00 00                	add    BYTE PTR [rax],al
    5ab7:	12 37                	adc    dh,BYTE PTR [rdi]
    5ab9:	03 00                	add    eax,DWORD PTR [rax]
    5abb:	00 6a 42             	add    BYTE PTR [rdx+0x42],ch
    5abe:	20 00                	and    BYTE PTR [rax],al
    5ac0:	00 00                	add    BYTE PTR [rax],al
    5ac2:	00 00                	add    BYTE PTR [rax],al
    5ac4:	20 00                	and    BYTE PTR [rax],al
    5ac6:	00 00                	add    BYTE PTR [rax],al
    5ac8:	00 00                	add    BYTE PTR [rax],al
    5aca:	00 00                	add    BYTE PTR [rax],al
    5acc:	01 9c 85 03 00 00 19 	add    DWORD PTR [rbp+rax*4+0x19000003],ebx
    5ad3:	76 61                	jbe    5b36 <stivale_hdr-0x1fa4ca>
    5ad5:	6c                   	ins    BYTE PTR es:[rdi],dx
    5ad6:	00 02                	add    BYTE PTR [rdx],al
    5ad8:	07                   	(bad)  
    5ad9:	2e 4e 00 00          	rex.WRX add BYTE PTR cs:[rax],r8b
    5add:	00 02                	add    BYTE PTR [rdx],al
    5adf:	91                   	xchg   ecx,eax
    5ae0:	6c                   	ins    BYTE PTR es:[rdi],dx
    5ae1:	00 1a                	add    BYTE PTR [rdx],bl
    5ae3:	46 03 00             	rex.RX add r8d,DWORD PTR [rax]
    5ae6:	00 49 42             	add    BYTE PTR [rcx+0x42],cl
    5ae9:	20 00                	and    BYTE PTR [rax],al
    5aeb:	00 00                	add    BYTE PTR [rax],al
    5aed:	00 00                	add    BYTE PTR [rax],al
    5aef:	21 00                	and    DWORD PTR [rax],eax
    5af1:	00 00                	add    BYTE PTR [rax],al
    5af3:	00 00                	add    BYTE PTR [rax],al
    5af5:	00 00                	add    BYTE PTR [rax],al
    5af7:	01 9c 13 fb 33 00 00 	add    DWORD PTR [rbx+rdx*1+0x33fb],ebx
    5afe:	01 05 22 61 00 00    	add    DWORD PTR [rip+0x6122],eax        # bc26 <stivale_hdr-0x1f43da>
    5b04:	00 02                	add    BYTE PTR [rdx],al
    5b06:	91                   	xchg   ecx,eax
    5b07:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b08:	19 76 61             	sbb    DWORD PTR [rsi+0x61],esi
    5b0b:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b0c:	00 01                	add    BYTE PTR [rcx],al
    5b0e:	05 2d 4e 00 00       	add    eax,0x4e2d
    5b13:	00 02                	add    BYTE PTR [rdx],al
    5b15:	91                   	xchg   ecx,eax
    5b16:	68 00 00 05 0c       	push   0xc050000
    5b1b:	00 00                	add    BYTE PTR [rax],al
    5b1d:	04 00                	add    al,0x0
    5b1f:	fe                   	(bad)  
    5b20:	20 00                	and    BYTE PTR [rax],al
    5b22:	00 08                	add    BYTE PTR [rax],cl
    5b24:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    5b28:	00 04 15 24 00 00 24 	add    BYTE PTR [rdx*1+0x24000024],al
    5b2f:	01 00                	add    DWORD PTR [rax],eax
    5b31:	00 47 43             	add    BYTE PTR [rdi+0x43],al
    5b34:	20 00                	and    BYTE PTR [rax],al
    5b36:	00 00                	add    BYTE PTR [rax],al
    5b38:	00 00                	add    BYTE PTR [rax],al
    5b3a:	6b 0d 00 00 00 00 00 	imul   ecx,DWORD PTR [rip+0x0],0x0        # 5b41 <stivale_hdr-0x1fa4bf>
    5b41:	00 c8                	add    al,cl
    5b43:	22 00                	and    al,BYTE PTR [rax]
    5b45:	00 02                	add    BYTE PTR [rdx],al
    5b47:	08 07                	or     BYTE PTR [rdi],al
    5b49:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    5b4c:	00 02                	add    BYTE PTR [rdx],al
    5b4e:	04 07                	add    al,0x7
    5b50:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    5b53:	00 02                	add    BYTE PTR [rdx],al
    5b55:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 5cc5 <stivale_hdr-0x1fa33b>
    5b5b:	03 3d 24 00 00 05    	add    edi,DWORD PTR [rip+0x5000024]        # 5005b85 <__kernel_end+0x4df3b85>
    5b61:	d1 17                	rcl    DWORD PTR [rdi],1
    5b63:	2d 00 00 00 02       	sub    eax,0x2000000
    5b68:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 5cd3 <stivale_hdr-0x1fa32d>
    5b6e:	02 10                	add    dl,BYTE PTR [rax]
    5b70:	04 8f                	add    al,0x8f
    5b72:	01 00                	add    DWORD PTR [rax],eax
    5b74:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
    5b77:	00 00                	add    BYTE PTR [rax],al
    5b79:	00 03                	add    BYTE PTR [rbx],al
    5b7b:	f0 23 00             	lock and eax,DWORD PTR [rax]
    5b7e:	00 06                	add    BYTE PTR [rsi],al
    5b80:	04 1d                	add    al,0x1d
    5b82:	6d                   	ins    DWORD PTR es:[rdi],dx
    5b83:	00 00                	add    BYTE PTR [rax],al
    5b85:	00 02                	add    BYTE PTR [rdx],al
    5b87:	01 08                	add    DWORD PTR [rax],ecx
    5b89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5b8a:	00 00                	add    BYTE PTR [rax],al
    5b8c:	00 03                	add    BYTE PTR [rbx],al
    5b8e:	eb 08                	jmp    5b98 <stivale_hdr-0x1fa468>
    5b90:	00 00                	add    BYTE PTR [rax],al
    5b92:	06                   	(bad)  
    5b93:	05 1d 80 00 00       	add    eax,0x801d
    5b98:	00 02                	add    BYTE PTR [rdx],al
    5b9a:	02 07                	add    al,BYTE PTR [rdi]
    5b9c:	9b                   	fwait
    5b9d:	01 00                	add    DWORD PTR [rax],eax
    5b9f:	00 03                	add    BYTE PTR [rbx],al
    5ba1:	ea                   	(bad)  
    5ba2:	08 00                	or     BYTE PTR [rax],al
    5ba4:	00 06                	add    BYTE PTR [rsi],al
    5ba6:	06                   	(bad)  
    5ba7:	1d 34 00 00 00       	sbb    eax,0x34
    5bac:	03 ae 01 00 00 06    	add    ebp,DWORD PTR [rsi+0x6000001]
    5bb2:	07                   	(bad)  
    5bb3:	1d 2d 00 00 00       	sbb    eax,0x2d
    5bb8:	02 10                	add    dl,BYTE PTR [rax]
    5bba:	07                   	(bad)  
    5bbb:	00 00                	add    BYTE PTR [rax],al
    5bbd:	00 00                	add    BYTE PTR [rax],al
    5bbf:	03 5f 03             	add    ebx,DWORD PTR [rdi+0x3]
    5bc2:	00 00                	add    BYTE PTR [rax],al
    5bc4:	06                   	(bad)  
    5bc5:	0a 1d 6d 00 00 00    	or     bl,BYTE PTR [rip+0x6d]        # 5c38 <stivale_hdr-0x1fa3c8>
    5bcb:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    5bcf:	00 06                	add    BYTE PTR [rsi],al
    5bd1:	0b 1d 80 00 00 00    	or     ebx,DWORD PTR [rip+0x80]        # 5c57 <stivale_hdr-0x1fa3a9>
    5bd7:	03 e5                	add    esp,ebp
    5bd9:	02 00                	add    al,BYTE PTR [rax]
    5bdb:	00 06                	add    BYTE PTR [rsi],al
    5bdd:	0c 1d                	or     al,0x1d
    5bdf:	34 00                	xor    al,0x0
    5be1:	00 00                	add    BYTE PTR [rax],al
    5be3:	03 25 00 00 00 06    	add    esp,DWORD PTR [rip+0x6000000]        # 6005be9 <__kernel_end+0x5df3be9>
    5be9:	0d 1d 2d 00 00       	or     eax,0x2d1d
    5bee:	00 02                	add    BYTE PTR [rdx],al
    5bf0:	01 06                	add    DWORD PTR [rsi],eax
    5bf2:	70 00                	jo     5bf4 <stivale_hdr-0x1fa40c>
    5bf4:	00 00                	add    BYTE PTR [rax],al
    5bf6:	02 02                	add    al,BYTE PTR [rdx]
    5bf8:	05 73 01 00 00       	add    eax,0x173
    5bfd:	05 04 05 69 6e       	add    eax,0x6e690504
    5c02:	74 00                	je     5c04 <stivale_hdr-0x1fa3fc>
    5c04:	02 10                	add    dl,BYTE PTR [rax]
    5c06:	05 1b 01 00 00       	add    eax,0x11b
    5c0b:	03 3b                	add    edi,DWORD PTR [rbx]
    5c0d:	02 00                	add    al,BYTE PTR [rax]
    5c0f:	00 06                	add    BYTE PTR [rsi],al
    5c11:	17                   	(bad)  
    5c12:	1d ca 00 00 00       	sbb    eax,0xca
    5c17:	03 8f 22 00 00 06    	add    ecx,DWORD PTR [rdi+0x6000022]
    5c1d:	19 1d ca 00 00 00    	sbb    DWORD PTR [rip+0xca],ebx        # 5ced <stivale_hdr-0x1fa313>
    5c23:	06                   	(bad)  
    5c24:	73 79                	jae    5c9f <stivale_hdr-0x1fa361>
    5c26:	73 00                	jae    5c28 <stivale_hdr-0x1fa3d8>
    5c28:	08 04 0b             	or     BYTE PTR [rbx+rcx*1],al
    5c2b:	1f                   	(bad)  
    5c2c:	01 00                	add    DWORD PTR [rax],eax
    5c2e:	00 07                	add    BYTE PTR [rdi],al
    5c30:	69 00 00 00 08 05    	imul   eax,DWORD PTR [rax],0x5080000
    5c36:	0f 00 02             	sldt   WORD PTR [rdx]
    5c39:	01 06                	add    DWORD PTR [rsi],eax
    5c3b:	77 00                	ja     5c3d <stivale_hdr-0x1fa3c3>
    5c3d:	00 00                	add    BYTE PTR [rax],al
    5c3f:	08 1f                	or     BYTE PTR [rdi],bl
    5c41:	01 00                	add    DWORD PTR [rax],eax
    5c43:	00 09                	add    BYTE PTR [rcx],cl
    5c45:	4d 06                	rex.WRB (bad) 
    5c47:	00 00                	add    BYTE PTR [rax],al
    5c49:	10 07                	adc    BYTE PTR [rdi],al
    5c4b:	2d 08 7a 01 00       	sub    eax,0x17a08
    5c50:	00 0a                	add    BYTE PTR [rdx],cl
    5c52:	c5 01 00             	(bad)
    5c55:	00 07                	add    BYTE PTR [rdi],al
    5c57:	2e 0d fe 00 00 00    	cs or  eax,0xfe
    5c5d:	00 0a                	add    BYTE PTR [rdx],cl
    5c5f:	c3                   	ret    
    5c60:	02 00                	add    al,BYTE PTR [rax]
    5c62:	00 07                	add    BYTE PTR [rdi],al
    5c64:	2f                   	(bad)  
    5c65:	0d b2 00 00 00       	or     eax,0xb2
    5c6a:	08 0a                	or     BYTE PTR [rdx],cl
    5c6c:	53                   	push   rbx
    5c6d:	01 00                	add    DWORD PTR [rax],eax
    5c6f:	00 07                	add    BYTE PTR [rdi],al
    5c71:	30 0d b2 00 00 00    	xor    BYTE PTR [rip+0xb2],cl        # 5d29 <stivale_hdr-0x1fa2d7>
    5c77:	0a 0a                	or     cl,BYTE PTR [rdx]
    5c79:	12 00                	adc    al,BYTE PTR [rax]
    5c7b:	00 00                	add    BYTE PTR [rax],al
    5c7d:	07                   	(bad)  
    5c7e:	31 0d b2 00 00 00    	xor    DWORD PTR [rip+0xb2],ecx        # 5d36 <stivale_hdr-0x1fa2ca>
    5c84:	0c 0a                	or     al,0xa
    5c86:	59                   	pop    rcx
    5c87:	00 00                	add    BYTE PTR [rax],al
    5c89:	00 07                	add    BYTE PTR [rdi],al
    5c8b:	32 0d b2 00 00 00    	xor    cl,BYTE PTR [rip+0xb2]        # 5d43 <stivale_hdr-0x1fa2bd>
    5c91:	0e                   	(bad)  
    5c92:	00 06                	add    BYTE PTR [rsi],al
    5c94:	67 66 78 00          	addr32 data16 js 5c98 <stivale_hdr-0x1fa368>
    5c98:	01 08                	add    DWORD PTR [rax],ecx
    5c9a:	0b 47 02             	or     eax,DWORD PTR [rdi+0x2]
    5c9d:	00 00                	add    BYTE PTR [rax],al
    5c9f:	0b 08                	or     ecx,DWORD PTR [rax]
    5ca1:	2d 00 00 01 0a       	sub    eax,0xa010000
    5ca6:	18 75 04             	sbb    BYTE PTR [rbp+0x4],dh
    5ca9:	00 00                	add    BYTE PTR [rax],al
    5cab:	47 02 00             	rex.RXB add r8b,BYTE PTR [r8]
    5cae:	00 0c 67             	add    BYTE PTR [rdi+riz*2],cl
    5cb1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5cb2:	70 00                	jo     5cb4 <stivale_hdr-0x1fa34c>
    5cb4:	01 0b                	add    DWORD PTR [rbx],ecx
    5cb6:	22 51 07             	and    dl,BYTE PTR [rcx+0x7]
    5cb9:	00 00                	add    BYTE PTR [rax],al
    5cbb:	2b 01                	sub    eax,DWORD PTR [rcx]
    5cbd:	00 00                	add    BYTE PTR [rax],al
    5cbf:	0d a6 02 00 00       	or     eax,0x2a6
    5cc4:	01 10                	add    DWORD PTR [rax],edx
    5cc6:	0c 13                	or     al,0x13
    5cc8:	02 00                	add    al,BYTE PTR [rax]
    5cca:	00 09                	add    BYTE PTR [rcx],cl
    5ccc:	ff 26                	jmp    QWORD PTR [rsi]
    5cce:	00 00                	add    BYTE PTR [rax],al
    5cd0:	08 01                	or     BYTE PTR [rcx],al
    5cd2:	11 12                	adc    DWORD PTR [rdx],edx
    5cd4:	d6                   	(bad)  
    5cd5:	01 00                	add    DWORD PTR [rax],eax
    5cd7:	00 0e                	add    BYTE PTR [rsi],cl
    5cd9:	78 00                	js     5cdb <stivale_hdr-0x1fa325>
    5cdb:	01 12                	add    DWORD PTR [rdx],edx
    5cdd:	0b be 00 00 00 00    	or     edi,DWORD PTR [rsi+0x0]
    5ce3:	0e                   	(bad)  
    5ce4:	79 00                	jns    5ce6 <stivale_hdr-0x1fa31a>
    5ce6:	01 13                	add    DWORD PTR [rbx],edx
    5ce8:	0b be 00 00 00 04    	or     edi,DWORD PTR [rsi+0x4000000]
    5cee:	00 09                	add    BYTE PTR [rcx],cl
    5cf0:	e4 27                	in     al,0x27
    5cf2:	00 00                	add    BYTE PTR [rax],al
    5cf4:	08 01                	or     BYTE PTR [rcx],al
    5cf6:	16                   	(bad)  
    5cf7:	12 fa                	adc    bh,dl
    5cf9:	01 00                	add    DWORD PTR [rax],eax
    5cfb:	00 0e                	add    BYTE PTR [rsi],cl
    5cfd:	77 00                	ja     5cff <stivale_hdr-0x1fa301>
    5cff:	01 17                	add    DWORD PTR [rdi],edx
    5d01:	0b be 00 00 00 00    	or     edi,DWORD PTR [rsi+0x0]
    5d07:	0e                   	(bad)  
    5d08:	68 00 01 18 0b       	push   0xb180100
    5d0d:	be 00 00 00 04       	mov    esi,0x4000000
    5d12:	00 03                	add    BYTE PTR [rbx],al
    5d14:	e6 27                	out    0x27,al
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	01 19                	add    DWORD PTR [rcx],ebx
    5d1a:	05 d6 01 00 00       	add    eax,0x1d6
    5d1f:	03 fa                	add    edi,edx
    5d21:	24 00                	and    al,0x0
    5d23:	00 01                	add    BYTE PTR [rcx],al
    5d25:	14 05                	adc    al,0x5
    5d27:	b2 01                	mov    dl,0x1
    5d29:	00 00                	add    BYTE PTR [rax],al
    5d2b:	00 0f                	add    BYTE PTR [rdi],cl
    5d2d:	b5 2b                	mov    ch,0x2b
    5d2f:	00 00                	add    BYTE PTR [rax],al
    5d31:	01 1f                	add    DWORD PTR [rdi],ebx
    5d33:	0c 10                	or     al,0x10
    5d35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5d36:	28 00                	sub    BYTE PTR [rax],al
    5d38:	00 01                	add    BYTE PTR [rcx],al
    5d3a:	26 16                	es (bad) 
    5d3c:	32 02                	xor    al,BYTE PTR [rdx]
    5d3e:	00 00                	add    BYTE PTR [rax],al
    5d40:	11 06                	adc    DWORD PTR [rsi],eax
    5d42:	02 00                	add    al,BYTE PTR [rax]
    5d44:	00 11                	add    BYTE PTR [rcx],dl
    5d46:	be 00 00 00 00       	mov    esi,0x0
    5d4b:	12 f1                	adc    dh,cl
    5d4d:	27                   	(bad)  
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	01 21                	add    DWORD PTR [rcx],esp
    5d52:	16                   	(bad)  
    5d53:	11 06                	adc    DWORD PTR [rsi],eax
    5d55:	02 00                	add    al,BYTE PTR [rax]
    5d57:	00 11                	add    BYTE PTR [rcx],dl
    5d59:	be 00 00 00 00       	mov    esi,0x0
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	13 08                	adc    ecx,DWORD PTR [rax]
    5d62:	be 00 00 00 06       	mov    esi,0x6000000
    5d67:	69 6f 00 02 0d 0b 61 	imul   ebp,DWORD PTR [rdi+0x0],0x610b0d02
    5d6e:	04 00                	add    al,0x0
    5d70:	00 14 74             	add    BYTE PTR [rsp+rsi*2],dl
    5d73:	74 79                	je     5dee <stivale_hdr-0x1fa212>
    5d75:	00 02                	add    BYTE PTR [rdx],al
    5d77:	0e                   	(bad)  
    5d78:	0f 0b                	ud2    
    5d7a:	70 25                	jo     5da1 <stivale_hdr-0x1fa25f>
    5d7c:	00 00                	add    BYTE PTR [rax],al
    5d7e:	02 0f                	add    cl,BYTE PTR [rdi]
    5d80:	15 3f 25 00 00       	adc    eax,0x253f
    5d85:	f2 00 00             	repnz add BYTE PTR [rax],al
    5d88:	00 0b                	add    BYTE PTR [rbx],cl
    5d8a:	64 28 00             	sub    BYTE PTR fs:[rax],al
    5d8d:	00 02                	add    BYTE PTR [rdx],al
    5d8f:	10 15 9b 27 00 00    	adc    BYTE PTR [rip+0x279b],dl        # 8530 <stivale_hdr-0x1f7ad0>
    5d95:	f2 00 00             	repnz add BYTE PTR [rax],al
    5d98:	00 0c 72             	add    BYTE PTR [rdx+rsi*2],cl
    5d9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5d9c:	77 00                	ja     5d9e <stivale_hdr-0x1fa262>
    5d9e:	02 11                	add    dl,BYTE PTR [rcx]
    5da0:	15 2d 24 00 00       	adc    eax,0x242d
    5da5:	f2 00 00             	repnz add BYTE PTR [rax],al
    5da8:	00 0b                	add    BYTE PTR [rbx],cl
    5daa:	1e                   	(bad)  
    5dab:	28 00                	sub    BYTE PTR [rax],al
    5dad:	00 02                	add    BYTE PTR [rdx],al
    5daf:	12 15 5e 26 00 00    	adc    dl,BYTE PTR [rip+0x265e]        # 8413 <stivale_hdr-0x1f7bed>
    5db5:	f2 00 00             	repnz add BYTE PTR [rax],al
    5db8:	00 0b                	add    BYTE PTR [rbx],cl
    5dba:	55                   	push   rbp
    5dbb:	25 00 00 02 13       	and    eax,0x13020000
    5dc0:	16                   	(bad)  
    5dc1:	7e 26                	jle    5de9 <stivale_hdr-0x1fa217>
    5dc3:	00 00                	add    BYTE PTR [rax],al
    5dc5:	61                   	(bad)  
    5dc6:	04 00                	add    al,0x0
    5dc8:	00 15 be 28 00 00    	add    BYTE PTR [rip+0x28be],dl        # 868c <stivale_hdr-0x1f7974>
    5dce:	07                   	(bad)  
    5dcf:	04 34                	add    al,0x34
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	00 02                	add    BYTE PTR [rdx],al
    5dd5:	28 0e                	sub    BYTE PTR [rsi],cl
    5dd7:	23 03                	and    eax,DWORD PTR [rbx]
    5dd9:	00 00                	add    BYTE PTR [rax],al
    5ddb:	16                   	(bad)  
    5ddc:	f1                   	icebp  
    5ddd:	25 00 00 00 16       	and    eax,0x16000000
    5de2:	98                   	cwde   
    5de3:	24 00                	and    al,0x0
    5de5:	00 01                	add    BYTE PTR [rcx],al
    5de7:	16                   	(bad)  
    5de8:	1b 26                	sbb    esp,DWORD PTR [rsi]
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	02 16                	add    dl,BYTE PTR [rsi]
    5dee:	6a 24                	push   0x24
    5df0:	00 00                	add    BYTE PTR [rax],al
    5df2:	03 16                	add    edx,DWORD PTR [rsi]
    5df4:	d6                   	(bad)  
    5df5:	24 00                	and    al,0x0
    5df7:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    5dfa:	26 27                	es (bad) 
    5dfc:	00 00                	add    BYTE PTR [rax],al
    5dfe:	05 16 54 28 00       	add    eax,0x285416
    5e03:	00 06                	add    BYTE PTR [rsi],al
    5e05:	16                   	(bad)  
    5e06:	5a                   	pop    rdx
    5e07:	27                   	(bad)  
    5e08:	00 00                	add    BYTE PTR [rax],al
    5e0a:	07                   	(bad)  
    5e0b:	16                   	(bad)  
    5e0c:	40 28 00             	sub    BYTE PTR [rax],al
    5e0f:	00 08                	add    BYTE PTR [rax],cl
    5e11:	16                   	(bad)  
    5e12:	dc 25 00 00 09 16    	fsub   QWORD PTR [rip+0x16090000]        # 16095e18 <__kernel_end+0x15e83e18>
    5e18:	e4 24                	in     al,0x24
    5e1a:	00 00                	add    BYTE PTR [rax],al
    5e1c:	0a 16                	or     dl,BYTE PTR [rsi]
    5e1e:	7a 25                	jp     5e45 <stivale_hdr-0x1fa1bb>
    5e20:	00 00                	add    BYTE PTR [rax],al
    5e22:	0b 16                	or     edx,DWORD PTR [rsi]
    5e24:	3c 26                	cmp    al,0x26
    5e26:	00 00                	add    BYTE PTR [rax],al
    5e28:	0c 16                	or     al,0x16
    5e2a:	97                   	xchg   edi,eax
    5e2b:	26 00 00             	add    BYTE PTR es:[rax],al
    5e2e:	0d 16 10 27 00       	or     eax,0x271016
    5e33:	00 0e                	add    BYTE PTR [rsi],cl
    5e35:	16                   	(bad)  
    5e36:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    5e37:	24 00                	and    al,0x0
    5e39:	00 0f                	add    BYTE PTR [rdi],cl
    5e3b:	00 17                	add    BYTE PTR [rdi],dl
    5e3d:	2b 26                	sub    esp,DWORD PTR [rsi]
    5e3f:	00 00                	add    BYTE PTR [rax],al
    5e41:	04 66                	add    al,0x66
    5e43:	01 19                	add    DWORD PTR [rcx],ebx
    5e45:	bd 26 00 00 fa       	mov    ebp,0xfa000026
    5e4a:	01 00                	add    DWORD PTR [rax],eax
    5e4c:	00 3e                	add    BYTE PTR [rsi],bh
    5e4e:	03 00                	add    eax,DWORD PTR [rax]
    5e50:	00 11                	add    BYTE PTR [rcx],dl
    5e52:	fa                   	cli    
    5e53:	01 00                	add    DWORD PTR [rax],eax
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	18 25 28 00 00 04    	sbb    BYTE PTR [rip+0x4000028],ah        # 4005e85 <__kernel_end+0x3df3e85>
    5e5d:	60                   	(bad)  
    5e5e:	01 06                	add    DWORD PTR [rsi],eax
    5e60:	c8 28 00 00          	enter  0x28,0x0
    5e64:	55                   	push   rbp
    5e65:	03 00                	add    eax,DWORD PTR [rax]
    5e67:	00 11                	add    BYTE PTR [rcx],dl
    5e69:	48 05 00 00 00 18    	add    rax,0x18000000
    5e6f:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
    5e73:	04 5a                	add    al,0x5a
    5e75:	01 06                	add    DWORD PTR [rsi],eax
    5e77:	b7 24                	mov    bh,0x24
    5e79:	00 00                	add    BYTE PTR [rax],al
    5e7b:	71 03                	jno    5e80 <stivale_hdr-0x1fa180>
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	11 42 00             	adc    DWORD PTR [rdx+0x0],eax
    5e82:	00 00                	add    BYTE PTR [rax],al
    5e84:	11 42 00             	adc    DWORD PTR [rdx+0x0],eax
    5e87:	00 00                	add    BYTE PTR [rax],al
    5e89:	00 18                	add    BYTE PTR [rax],bl
    5e8b:	69 07 00 00 04 1f    	imul   eax,DWORD PTR [rdi],0x1f040000
    5e91:	01 06                	add    DWORD PTR [rsi],eax
    5e93:	01 26                	add    DWORD PTR [rsi],esp
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	88 03                	mov    BYTE PTR [rbx],al
    5e99:	00 00                	add    BYTE PTR [rax],al
    5e9b:	11 48 05             	adc    DWORD PTR [rax+0x5],ecx
    5e9e:	00 00                	add    BYTE PTR [rax],al
    5ea0:	00 19                	add    BYTE PTR [rcx],bl
    5ea2:	50                   	push   rax
    5ea3:	26 00 00             	add    BYTE PTR es:[rax],al
    5ea6:	04 ee                	add    al,0xee
    5ea8:	06                   	(bad)  
    5ea9:	07                   	(bad)  
    5eaa:	28 00                	sub    BYTE PTR [rax],al
    5eac:	00 a3 03 00 00 11    	add    BYTE PTR [rbx+0x11000003],ah
    5eb2:	1f                   	(bad)  
    5eb3:	01 00                	add    DWORD PTR [rax],eax
    5eb5:	00 11                	add    BYTE PTR [rcx],dl
    5eb7:	61                   	(bad)  
    5eb8:	00 00                	add    BYTE PTR [rax],al
    5eba:	00 00                	add    BYTE PTR [rax],al
    5ebc:	1a 5b 02             	sbb    bl,BYTE PTR [rbx+0x2]
    5ebf:	00 00                	add    BYTE PTR [rax],al
    5ec1:	04 dc                	add    al,0xdc
    5ec3:	06                   	(bad)  
    5ec4:	d1 27                	shl    DWORD PTR [rdi],1
    5ec6:	00 00                	add    BYTE PTR [rax],al
    5ec8:	1a af 26 00 00 04    	sbb    ch,BYTE PTR [rdi+0x4000026]
    5ece:	cf                   	iret   
    5ecf:	06                   	(bad)  
    5ed0:	c0 25 00 00 19 81 28 	shl    BYTE PTR [rip+0xffffffff81190000],0x28        # ffffffff81195ed7 <__kernel_end+0xffffffff80f83ed7>
    5ed7:	00 00                	add    BYTE PTR [rax],al
    5ed9:	04 ad                	add    al,0xad
    5edb:	06                   	(bad)  
    5edc:	19 25 00 00 d6 03    	sbb    DWORD PTR [rip+0x3d60000],esp        # 3d65ee2 <__kernel_end+0x3b53ee2>
    5ee2:	00 00                	add    BYTE PTR [rax],al
    5ee4:	11 b2 00 00 00 11    	adc    DWORD PTR [rdx+0x11000000],esi
    5eea:	b2 00                	mov    dl,0x0
    5eec:	00 00                	add    BYTE PTR [rax],al
    5eee:	00 19                	add    BYTE PTR [rcx],bl
    5ef0:	30 28                	xor    BYTE PTR [rax],ch
    5ef2:	00 00                	add    BYTE PTR [rax],al
    5ef4:	04 8b                	add    al,0x8b
    5ef6:	06                   	(bad)  
    5ef7:	a1 25 00 00 f1 03 00 	movabs eax,ds:0x11000003f1000025
    5efe:	00 11 
    5f00:	b2 00                	mov    dl,0x0
    5f02:	00 00                	add    BYTE PTR [rax],al
    5f04:	11 b2 00 00 00 00    	adc    DWORD PTR [rdx+0x0],esi
    5f0a:	1b 82 27 00 00 04    	sbb    eax,DWORD PTR [rdx+0x4000027]
    5f10:	42 07                	rex.X (bad) 
    5f12:	44 24 00             	rex.R and al,0x0
    5f15:	00 87 00 00 00 0b    	add    BYTE PTR [rdi+0xb000000],al
    5f1b:	04 00                	add    al,0x0
    5f1d:	00 11                	add    BYTE PTR [rcx],dl
    5f1f:	61                   	(bad)  
    5f20:	00 00                	add    BYTE PTR [rax],al
    5f22:	00 00                	add    BYTE PTR [rax],al
    5f24:	19 8b 24 00 00 04    	sbb    DWORD PTR [rbx+0x4000024],ecx
    5f2a:	35 06 b3 27 00       	xor    eax,0x27b306
    5f2f:	00 30                	add    BYTE PTR [rax],dh
    5f31:	04 00                	add    al,0x0
    5f33:	00 11                	add    BYTE PTR [rcx],dl
    5f35:	1f                   	(bad)  
    5f36:	01 00                	add    DWORD PTR [rax],eax
    5f38:	00 11                	add    BYTE PTR [rcx],dl
    5f3a:	61                   	(bad)  
    5f3b:	00 00                	add    BYTE PTR [rax],al
    5f3d:	00 11                	add    BYTE PTR [rcx],dl
    5f3f:	42 00 00             	rex.X add BYTE PTR [rax],al
    5f42:	00 11                	add    BYTE PTR [rcx],dl
    5f44:	42 00 00             	rex.X add BYTE PTR [rax],al
    5f47:	00 00                	add    BYTE PTR [rax],al
    5f49:	1a 95 27 00 00 04    	sbb    dl,BYTE PTR [rbp+0x4000027]
    5f4f:	2c 06                	sub    al,0x6
    5f51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5f52:	27                   	(bad)  
    5f53:	00 00                	add    BYTE PTR [rax],al
    5f55:	1a af 11 00 00 04    	sbb    ch,BYTE PTR [rdi+0x4000011]
    5f5b:	18 06                	sbb    BYTE PTR [rsi],al
    5f5d:	41 27                	rex.B (bad) 
    5f5f:	00 00                	add    BYTE PTR [rax],al
    5f61:	1c 8f                	sbb    al,0x8f
    5f63:	25 00 00 02 15       	and    eax,0x15020000
    5f68:	1c 74                	sbb    al,0x74
    5f6a:	00 00                	add    BYTE PTR [rax],al
    5f6c:	00 11                	add    BYTE PTR [rcx],dl
    5f6e:	61                   	(bad)  
    5f6f:	00 00                	add    BYTE PTR [rax],al
    5f71:	00 11                	add    BYTE PTR [rcx],dl
    5f73:	61                   	(bad)  
    5f74:	00 00                	add    BYTE PTR [rax],al
    5f76:	00 00                	add    BYTE PTR [rax],al
    5f78:	00 00                	add    BYTE PTR [rax],al
    5f7a:	13 08                	adc    ecx,DWORD PTR [rax]
    5f7c:	74 00                	je     5f7e <stivale_hdr-0x1fa082>
    5f7e:	00 00                	add    BYTE PTR [rax],al
    5f80:	0d 2e 32 00 00       	or     eax,0x322e
    5f85:	09 04 0b             	or     DWORD PTR [rbx+rcx*1],eax
    5f88:	7c 04                	jl     5f8e <stivale_hdr-0x1fa072>
    5f8a:	00 00                	add    BYTE PTR [rax],al
    5f8c:	1d 70 6d 6d 00       	sbb    eax,0x6d6d70
    5f91:	09 05 0c 00 1e 60    	or     DWORD PTR [rip+0x601e000c],eax        # 601e5fa3 <__kernel_end+0x5ffd3fa3>
    5f97:	02 00                	add    al,BYTE PTR [rax]
    5f99:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    5f9c:	07                   	(bad)  
    5f9d:	09 03                	or     DWORD PTR [rbx],eax
    5f9f:	90                   	nop
    5fa0:	01 21                	add    DWORD PTR [rcx],esp
    5fa2:	00 00                	add    BYTE PTR [rax],al
    5fa4:	00 00                	add    BYTE PTR [rax],al
    5fa6:	00 1e                	add    BYTE PTR [rsi],bl
    5fa8:	70 02                	jo     5fac <stivale_hdr-0x1fa054>
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	04 0f                	add    al,0xf
    5fae:	07                   	(bad)  
    5faf:	09 03                	or     DWORD PTR [rbx],eax
    5fb1:	98                   	cwde   
    5fb2:	01 21                	add    DWORD PTR [rcx],esp
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	00 1e                	add    BYTE PTR [rsi],bl
    5fba:	80 02 00             	add    BYTE PTR [rdx],0x0
    5fbd:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
    5fc0:	07                   	(bad)  
    5fc1:	09 03                	or     DWORD PTR [rbx],eax
    5fc3:	a0 01 21 00 00 00 00 	movabs al,ds:0x1e00000000002101
    5fca:	00 1e 
    5fcc:	90                   	nop
    5fcd:	02 00                	add    al,BYTE PTR [rax]
    5fcf:	00 04 11             	add    BYTE PTR [rcx+rdx*1],al
    5fd2:	07                   	(bad)  
    5fd3:	09 03                	or     DWORD PTR [rbx],eax
    5fd5:	a8 01                	test   al,0x1
    5fd7:	21 00                	and    DWORD PTR [rax],eax
    5fd9:	00 00                	add    BYTE PTR [rax],al
    5fdb:	00 00                	add    BYTE PTR [rax],al
    5fdd:	1e                   	(bad)  
    5fde:	a0 02 00 00 04 12 08 	movabs al,ds:0x309081204000002
    5fe5:	09 03 
    5fe7:	b0 01                	mov    al,0x1
    5fe9:	21 00                	and    DWORD PTR [rax],eax
    5feb:	00 00                	add    BYTE PTR [rax],al
    5fed:	00 00                	add    BYTE PTR [rax],al
    5fef:	1f                   	(bad)  
    5ff0:	59                   	pop    rcx
    5ff1:	26 00 00             	add    BYTE PTR es:[rax],al
    5ff4:	04 6f                	add    al,0x6f
    5ff6:	01 11                	add    DWORD PTR [rcx],edx
    5ff8:	8b 50 20             	mov    edx,DWORD PTR [rax+0x20]
    5ffb:	00 00                	add    BYTE PTR [rax],al
    5ffd:	00 00                	add    BYTE PTR [rax],al
    5fff:	00 27                	add    BYTE PTR [rdi],ah
    6001:	00 00                	add    BYTE PTR [rax],al
    6003:	00 00                	add    BYTE PTR [rax],al
    6005:	00 00                	add    BYTE PTR [rax],al
    6007:	00 01                	add    BYTE PTR [rcx],al
    6009:	9c                   	pushf  
    600a:	06                   	(bad)  
    600b:	05 00 00 20 e2       	add    eax,0xe2200000
    6010:	2e 00 00             	add    BYTE PTR cs:[rax],al
    6013:	04 6f                	add    al,0x6f
    6015:	01 1c 06             	add    DWORD PTR [rsi+rax*1],ebx
    6018:	05 00 00 02 91       	add    eax,0x91020000
    601d:	68 00 13 08 1f       	push   0x1f081300
    6022:	01 00                	add    DWORD PTR [rax],eax
    6024:	00 21                	add    BYTE PTR [rcx],ah
    6026:	23 03                	and    eax,DWORD PTR [rbx]
    6028:	00 00                	add    BYTE PTR [rax],al
    602a:	5b                   	pop    rbx
    602b:	50                   	push   rax
    602c:	20 00                	and    BYTE PTR [rax],al
    602e:	00 00                	add    BYTE PTR [rax],al
    6030:	00 00                	add    BYTE PTR [rax],al
    6032:	30 00                	xor    BYTE PTR [rax],al
    6034:	00 00                	add    BYTE PTR [rax],al
    6036:	00 00                	add    BYTE PTR [rax],al
    6038:	00 00                	add    BYTE PTR [rax],al
    603a:	01 9c 48 05 00 00 20 	add    DWORD PTR [rax+rcx*2+0x20000005],ebx
    6041:	fc                   	cld    
    6042:	27                   	(bad)  
    6043:	00 00                	add    BYTE PTR [rax],al
    6045:	04 66                	add    al,0x66
    6047:	01 4b fa             	add    DWORD PTR [rbx-0x6],ecx
    604a:	01 00                	add    DWORD PTR [rax],eax
    604c:	00 02                	add    BYTE PTR [rdx],al
    604e:	91                   	xchg   ecx,eax
    604f:	58                   	pop    rax
    6050:	22 61 25             	and    ah,BYTE PTR [rcx+0x25]
    6053:	00 00                	add    BYTE PTR [rax],al
    6055:	04 67                	add    al,0x67
    6057:	01 1a                	add    DWORD PTR [rdx],ebx
    6059:	fa                   	cli    
    605a:	01 00                	add    DWORD PTR [rax],eax
    605c:	00 02                	add    BYTE PTR [rdx],al
    605e:	91                   	xchg   ecx,eax
    605f:	68 00 13 08 26       	push   0x26081300
    6064:	01 00                	add    DWORD PTR [rax],eax
    6066:	00 23                	add    BYTE PTR [rbx],ah
    6068:	3e 03 00             	add    eax,DWORD PTR ds:[rax]
    606b:	00 34 50             	add    BYTE PTR [rax+rdx*2],dh
    606e:	20 00                	and    BYTE PTR [rax],al
    6070:	00 00                	add    BYTE PTR [rax],al
    6072:	00 00                	add    BYTE PTR [rax],al
    6074:	27                   	(bad)  
    6075:	00 00                	add    BYTE PTR [rax],al
    6077:	00 00                	add    BYTE PTR [rax],al
    6079:	00 00                	add    BYTE PTR [rax],al
    607b:	00 01                	add    BYTE PTR [rcx],al
    607d:	9c                   	pushf  
    607e:	7a 05                	jp     6085 <stivale_hdr-0x1f9f7b>
    6080:	00 00                	add    BYTE PTR [rax],al
    6082:	20 e2                	and    dl,ah
    6084:	2e 00 00             	add    BYTE PTR cs:[rax],al
    6087:	04 60                	add    al,0x60
    6089:	01 26                	add    DWORD PTR [rsi],esp
    608b:	48 05 00 00 02 91    	add    rax,0xffffffff91020000
    6091:	68 00 21 55 03       	push   0x3552100
    6096:	00 00                	add    BYTE PTR [rax],al
    6098:	0b 50 20             	or     edx,DWORD PTR [rax+0x20]
    609b:	00 00                	add    BYTE PTR [rax],al
    609d:	00 00                	add    BYTE PTR [rax],al
    609f:	00 29                	add    BYTE PTR [rcx],ch
    60a1:	00 00                	add    BYTE PTR [rax],al
    60a3:	00 00                	add    BYTE PTR [rax],al
    60a5:	00 00                	add    BYTE PTR [rax],al
    60a7:	00 01                	add    BYTE PTR [rcx],al
    60a9:	9c                   	pushf  
    60aa:	b6 05                	mov    dh,0x5
    60ac:	00 00                	add    BYTE PTR [rax],al
    60ae:	20 99 25 00 00 04    	and    BYTE PTR [rcx+0x4000025],bl
    60b4:	5a                   	pop    rdx
    60b5:	01 21                	add    DWORD PTR [rcx],esp
    60b7:	42 00 00             	rex.X add BYTE PTR [rax],al
    60ba:	00 02                	add    BYTE PTR [rdx],al
    60bc:	91                   	xchg   ecx,eax
    60bd:	68 20 6b 25 00       	push   0x256b20
    60c2:	00 04 5a             	add    BYTE PTR [rdx+rbx*2],al
    60c5:	01 31                	add    DWORD PTR [rcx],esi
    60c7:	42 00 00             	rex.X add BYTE PTR [rax],al
    60ca:	00 02                	add    BYTE PTR [rdx],al
    60cc:	91                   	xchg   ecx,eax
    60cd:	60                   	(bad)  
    60ce:	00 23                	add    BYTE PTR [rbx],ah
    60d0:	71 03                	jno    60d5 <stivale_hdr-0x1f9f2b>
    60d2:	00 00                	add    BYTE PTR [rax],al
    60d4:	61                   	(bad)  
    60d5:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    60d8:	00 00                	add    BYTE PTR [rax],al
    60da:	00 00                	add    BYTE PTR [rax],al
    60dc:	aa                   	stos   BYTE PTR es:[rdi],al
    60dd:	02 00                	add    al,BYTE PTR [rax]
    60df:	00 00                	add    BYTE PTR [rax],al
    60e1:	00 00                	add    BYTE PTR [rax],al
    60e3:	00 01                	add    BYTE PTR [rcx],al
    60e5:	9c                   	pushf  
    60e6:	49 06                	rex.WB (bad) 
    60e8:	00 00                	add    BYTE PTR [rax],al
    60ea:	20 e2                	and    dl,ah
    60ec:	2e 00 00             	add    BYTE PTR cs:[rax],al
    60ef:	04 1f                	add    al,0x1f
    60f1:	01 21                	add    DWORD PTR [rcx],esp
    60f3:	48 05 00 00 03 91    	add    rax,0xffffffff91030000
    60f9:	b8 7f 22 c2 28       	mov    eax,0x28c2227f
    60fe:	00 00                	add    BYTE PTR [rax],al
    6100:	04 21                	add    al,0x21
    6102:	01 07                	add    DWORD PTR [rdi],eax
    6104:	61                   	(bad)  
    6105:	00 00                	add    BYTE PTR [rax],al
    6107:	00 02                	add    BYTE PTR [rdx],al
    6109:	91                   	xchg   ecx,eax
    610a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    610b:	22 98 28 00 00 04    	and    bl,BYTE PTR [rax+0x4000028]
    6111:	22 01                	and    al,BYTE PTR [rcx]
    6113:	07                   	(bad)  
    6114:	49 06                	rex.WB (bad) 
    6116:	00 00                	add    BYTE PTR [rax],al
    6118:	02 91 4d 24 88 4d    	add    dl,BYTE PTR [rcx+0x4d88244d]
    611e:	20 00                	and    BYTE PTR [rax],al
    6120:	00 00                	add    BYTE PTR [rax],al
    6122:	00 00                	add    BYTE PTR [rax],al
    6124:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    6127:	00 00                	add    BYTE PTR [rax],al
    6129:	00 00                	add    BYTE PTR [rax],al
    612b:	00 26                	add    BYTE PTR [rsi],ah
    612d:	06                   	(bad)  
    612e:	00 00                	add    BYTE PTR [rax],al
    6130:	25 69 00 04 26       	and    eax,0x26040069
    6135:	01 0d f2 00 00 00    	add    DWORD PTR [rip+0xf2],ecx        # 622d <stivale_hdr-0x1f9dd3>
    613b:	02 91 60 00 26 f2    	add    dl,BYTE PTR [rcx-0xdd9ffa0]
    6141:	4d 20 00             	rex.WRB and BYTE PTR [r8],r8b
    6144:	00 00                	add    BYTE PTR [rax],al
    6146:	00 00                	add    BYTE PTR [rax],al
    6148:	f5                   	cmc    
    6149:	01 00                	add    DWORD PTR [rax],eax
    614b:	00 00                	add    BYTE PTR [rax],al
    614d:	00 00                	add    BYTE PTR [rax],al
    614f:	00 22                	add    BYTE PTR [rdx],ah
    6151:	0b 27                	or     esp,DWORD PTR [rdi]
    6153:	00 00                	add    BYTE PTR [rax],al
    6155:	04 34                	add    al,0x34
    6157:	01 08                	add    DWORD PTR [rax],ecx
    6159:	e4 00                	in     al,0x0
    615b:	00 00                	add    BYTE PTR [rax],al
    615d:	02 91 5c 00 00 27    	add    dl,BYTE PTR [rcx+0x2700005c]
    6163:	1f                   	(bad)  
    6164:	01 00                	add    DWORD PTR [rax],eax
    6166:	00 59 06             	add    BYTE PTR [rcx+0x6],bl
    6169:	00 00                	add    BYTE PTR [rax],al
    616b:	28 2d 00 00 00 0e    	sub    BYTE PTR [rip+0xe000000],ch        # e006171 <__kernel_end+0xddf4171>
    6171:	00 23                	add    BYTE PTR [rbx],ah
    6173:	88 03                	mov    BYTE PTR [rbx],al
    6175:	00 00                	add    BYTE PTR [rax],al
    6177:	d6                   	(bad)  
    6178:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    617b:	00 00                	add    BYTE PTR [rax],al
    617d:	00 00                	add    BYTE PTR [rax],al
    617f:	8b 01                	mov    eax,DWORD PTR [rcx]
    6181:	00 00                	add    BYTE PTR [rax],al
    6183:	00 00                	add    BYTE PTR [rax],al
    6185:	00 00                	add    BYTE PTR [rax],al
    6187:	01 9c 91 06 00 00 29 	add    DWORD PTR [rcx+rdx*4+0x29000006],ebx
    618e:	63 00                	movsxd eax,DWORD PTR [rax]
    6190:	04 ee                	add    al,0xee
    6192:	1d 1f 01 00 00       	sbb    eax,0x11f
    6197:	02 91 6c 2a c2 28    	add    dl,BYTE PTR [rcx+0x28c22a6c]
    619d:	00 00                	add    BYTE PTR [rax],al
    619f:	04 ee                	add    al,0xee
    61a1:	25 61 00 00 00       	and    eax,0x61
    61a6:	02 91 68 00 23 a3    	add    dl,BYTE PTR [rcx-0x5cdcff98]
    61ac:	03 00                	add    eax,DWORD PTR [rax]
    61ae:	00 00                	add    BYTE PTR [rax],al
    61b0:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    61b3:	00 00                	add    BYTE PTR [rax],al
    61b5:	00 00                	add    BYTE PTR [rax],al
    61b7:	d6                   	(bad)  
    61b8:	00 00                	add    BYTE PTR [rax],al
    61ba:	00 00                	add    BYTE PTR [rax],al
    61bc:	00 00                	add    BYTE PTR [rax],al
    61be:	00 01                	add    BYTE PTR [rcx],al
    61c0:	9c                   	pushf  
    61c1:	0e                   	(bad)  
    61c2:	07                   	(bad)  
    61c3:	00 00                	add    BYTE PTR [rax],al
    61c5:	24 09                	and    al,0x9
    61c7:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    61ca:	00 00                	add    BYTE PTR [rax],al
    61cc:	00 00                	add    BYTE PTR [rax],al
    61ce:	40 00 00             	add    BYTE PTR [rax],al
    61d1:	00 00                	add    BYTE PTR [rax],al
    61d3:	00 00                	add    BYTE PTR [rax],al
    61d5:	00 cf                	add    bh,cl
    61d7:	06                   	(bad)  
    61d8:	00 00                	add    BYTE PTR [rax],al
    61da:	2b 69 00             	sub    ebp,DWORD PTR [rcx+0x0]
    61dd:	04 de                	add    al,0xde
    61df:	11 42 00             	adc    DWORD PTR [rdx+0x0],eax
    61e2:	00 00                	add    BYTE PTR [rax],al
    61e4:	02 91 58 00 26 49    	add    dl,BYTE PTR [rcx+0x49260058]
    61ea:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    61ed:	00 00                	add    BYTE PTR [rax],al
    61ef:	00 00                	add    BYTE PTR [rax],al
    61f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    61f2:	00 00                	add    BYTE PTR [rax],al
    61f4:	00 00                	add    BYTE PTR [rax],al
    61f6:	00 00                	add    BYTE PTR [rax],al
    61f8:	00 2b                	add    BYTE PTR [rbx],ch
    61fa:	69 00 04 e3 11 42    	imul   eax,DWORD PTR [rax],0x4211e304
    6200:	00 00                	add    BYTE PTR [rax],al
    6202:	00 02                	add    BYTE PTR [rdx],al
    6204:	91                   	xchg   ecx,eax
    6205:	50                   	push   rax
    6206:	26 5e                	es pop rsi
    6208:	4b 20 00             	rex.WXB and BYTE PTR [r8],al
    620b:	00 00                	add    BYTE PTR [rax],al
    620d:	00 00                	add    BYTE PTR [rax],al
    620f:	53                   	push   rbx
    6210:	00 00                	add    BYTE PTR [rax],al
    6212:	00 00                	add    BYTE PTR [rax],al
    6214:	00 00                	add    BYTE PTR [rax],al
    6216:	00 2b                	add    BYTE PTR [rbx],ch
    6218:	6a 00                	push   0x0
    621a:	04 e5                	add    al,0xe5
    621c:	15 42 00 00 00       	adc    eax,0x42
    6221:	02 91 48 00 00 00    	add    dl,BYTE PTR [rcx+0x48]
    6227:	23 af 03 00 00 9e    	and    ebp,DWORD PTR [rdi-0x61fffffd]
    622d:	4a 20 00             	rex.WX and BYTE PTR [rax],al
    6230:	00 00                	add    BYTE PTR [rax],al
    6232:	00 00                	add    BYTE PTR [rax],al
    6234:	62                   	(bad)  
    6235:	00 00                	add    BYTE PTR [rax],al
    6237:	00 00                	add    BYTE PTR [rax],al
    6239:	00 00                	add    BYTE PTR [rax],al
    623b:	00 01                	add    BYTE PTR [rcx],al
    623d:	9c                   	pushf  
    623e:	6c                   	ins    BYTE PTR es:[rdi],dx
    623f:	07                   	(bad)  
    6240:	00 00                	add    BYTE PTR [rax],al
    6242:	26 a6                	cmps   BYTE PTR es:[rsi],BYTE PTR es:[rdi]
    6244:	4a 20 00             	rex.WX and BYTE PTR [rax],al
    6247:	00 00                	add    BYTE PTR [rax],al
    6249:	00 00                	add    BYTE PTR [rax],al
    624b:	57                   	push   rdi
    624c:	00 00                	add    BYTE PTR [rax],al
    624e:	00 00                	add    BYTE PTR [rax],al
    6250:	00 00                	add    BYTE PTR [rax],al
    6252:	00 2c 65 24 00 00 04 	add    BYTE PTR [riz*2+0x4000024],ch
    6259:	d1 0e                	ror    DWORD PTR [rsi],1
    625b:	b2 00                	mov    dl,0x0
    625d:	00 00                	add    BYTE PTR [rax],al
    625f:	02 91 6e 26 bc 4a    	add    dl,BYTE PTR [rcx+0x4abc266e]
    6265:	20 00                	and    BYTE PTR [rax],al
    6267:	00 00                	add    BYTE PTR [rax],al
    6269:	00 00                	add    BYTE PTR [rax],al
    626b:	34 00                	xor    al,0x0
    626d:	00 00                	add    BYTE PTR [rax],al
    626f:	00 00                	add    BYTE PTR [rax],al
    6271:	00 00                	add    BYTE PTR [rax],al
    6273:	2c d1                	sub    al,0xd1
    6275:	24 00                	and    al,0x0
    6277:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    627a:	0f b2 00             	lss    eax,FWORD PTR [rax]
    627d:	00 00                	add    BYTE PTR [rax],al
    627f:	02 91 6c 00 00 00    	add    dl,BYTE PTR [rcx+0x6c]
    6285:	23 bb 03 00 00 fd    	and    edi,DWORD PTR [rbx-0x2fffffd]
    628b:	48 20 00             	rex.W and BYTE PTR [rax],al
    628e:	00 00                	add    BYTE PTR [rax],al
    6290:	00 00                	add    BYTE PTR [rax],al
    6292:	a1 01 00 00 00 00 00 	movabs eax,ds:0x100000000000001
    6299:	00 01 
    629b:	9c                   	pushf  
    629c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    629d:	08 00                	or     BYTE PTR [rax],al
    629f:	00 2a                	add    BYTE PTR [rdx],ch
    62a1:	d1 24 00             	shl    DWORD PTR [rax+rax*1],1
    62a4:	00 04 ad 2d b2 00 00 	add    BYTE PTR [rbp*4+0xb22d],al
    62ab:	00 03                	add    BYTE PTR [rbx],al
    62ad:	91                   	xchg   ecx,eax
    62ae:	dc 7e 2a             	fdivr  QWORD PTR [rsi+0x2a]
    62b1:	65 24 00             	gs and al,0x0
    62b4:	00 04 ad 3a b2 00 00 	add    BYTE PTR [rbp*4+0xb23a],al
    62bb:	00 03                	add    BYTE PTR [rbx],al
    62bd:	91                   	xchg   ecx,eax
    62be:	d8 7e 2c             	fdivr  DWORD PTR [rsi+0x2c]
    62c1:	38 27                	cmp    BYTE PTR [rdi],ah
    62c3:	00 00                	add    BYTE PTR [rax],al
    62c5:	04 af                	add    al,0xaf
    62c7:	0a 87 00 00 00 03    	or     al,BYTE PTR [rdi+0x3000000]
    62cd:	91                   	xchg   ecx,eax
    62ce:	ac                   	lods   al,BYTE PTR ds:[rsi]
    62cf:	7f 2c                	jg     62fd <stivale_hdr-0x1f9d03>
    62d1:	f6 26                	mul    BYTE PTR [rsi]
    62d3:	00 00                	add    BYTE PTR [rax],al
    62d5:	04 b0                	add    al,0xb0
    62d7:	0a 87 00 00 00 03    	or     al,BYTE PTR [rdi+0x3000000]
    62dd:	91                   	xchg   ecx,eax
    62de:	a8 7f                	test   al,0x7f
    62e0:	2c 93                	sub    al,0x93
    62e2:	25 00 00 04 b2       	and    eax,0xb2040000
    62e7:	07                   	(bad)  
    62e8:	74 00                	je     62ea <stivale_hdr-0x1f9d16>
    62ea:	00 00                	add    BYTE PTR [rax],al
    62ec:	03 91 b6 7f 2c 71    	add    edx,DWORD PTR [rcx+0x712c7fb6]
    62f2:	26 00 00             	add    BYTE PTR es:[rax],al
    62f5:	04 b4                	add    al,0xb4
    62f7:	07                   	(bad)  
    62f8:	61                   	(bad)  
    62f9:	00 00                	add    BYTE PTR [rax],al
    62fb:	00 03                	add    BYTE PTR [rbx],al
    62fd:	91                   	xchg   ecx,eax
    62fe:	b5 7f                	mov    ch,0x7f
    6300:	2c a2                	sub    al,0xa2
    6302:	28 00                	sub    BYTE PTR [rax],al
    6304:	00 04 b5 07 61 00 00 	add    BYTE PTR [rsi*4+0x6107],al
    630b:	00 03                	add    BYTE PTR [rbx],al
    630d:	91                   	xchg   ecx,eax
    630e:	b4 7f                	mov    ah,0x7f
    6310:	2b 63 00             	sub    esp,DWORD PTR [rbx+0x0]
    6313:	04 b7                	add    al,0xb7
    6315:	07                   	(bad)  
    6316:	1f                   	(bad)  
    6317:	01 00                	add    DWORD PTR [rax],eax
    6319:	00 03                	add    BYTE PTR [rbx],al
    631b:	91                   	xchg   ecx,eax
    631c:	b3 7f                	mov    bl,0x7f
    631e:	2c 0b                	sub    al,0xb
    6320:	25 00 00 04 bc       	and    eax,0xbc040000
    6325:	0b 93 00 00 00 03    	or     edx,DWORD PTR [rbx+0x3000000]
    632b:	91                   	xchg   ecx,eax
    632c:	a0 7f 2c 0f 35 00 00 	movabs al,ds:0xbe040000350f2c7f
    6333:	04 be 
    6335:	0a a4 08 00 00 03 91 	or     ah,BYTE PTR [rax+rcx*1-0x6efd0000]
    633c:	e0 7e                	loopne 63bc <stivale_hdr-0x1f9c44>
    633e:	24 96                	and    al,0x96
    6340:	49 20 00             	rex.WB and BYTE PTR [r8],al
    6343:	00 00                	add    BYTE PTR [rax],al
    6345:	00 00                	add    BYTE PTR [rax],al
    6347:	39 00                	cmp    DWORD PTR [rax],eax
    6349:	00 00                	add    BYTE PTR [rax],al
    634b:	00 00                	add    BYTE PTR [rax],al
    634d:	00 00                	add    BYTE PTR [rax],al
    634f:	48 08 00             	rex.W or BYTE PTR [rax],al
    6352:	00 2b                	add    BYTE PTR [rbx],ch
    6354:	69 00 04 c0 0e a6    	imul   eax,DWORD PTR [rax],0xa60ec004
    635a:	00 00                	add    BYTE PTR [rax],al
    635c:	00 02                	add    BYTE PTR [rdx],al
    635e:	91                   	xchg   ecx,eax
    635f:	5f                   	pop    rdi
    6360:	00 26                	add    BYTE PTR [rsi],ah
    6362:	cf                   	iret   
    6363:	49 20 00             	rex.WB and BYTE PTR [r8],al
    6366:	00 00                	add    BYTE PTR [rax],al
    6368:	00 00                	add    BYTE PTR [rax],al
    636a:	c8 00 00 00          	enter  0x0,0x0
    636e:	00 00                	add    BYTE PTR [rax],al
    6370:	00 00                	add    BYTE PTR [rax],al
    6372:	2b 79 00             	sub    edi,DWORD PTR [rcx+0x0]
    6375:	04 c4                	add    al,0xc4
    6377:	0c f2                	or     al,0xf2
    6379:	00 00                	add    BYTE PTR [rax],al
    637b:	00 02                	add    BYTE PTR [rdx],al
    637d:	91                   	xchg   ecx,eax
    637e:	50                   	push   rax
    637f:	2b 79 79             	sub    edi,DWORD PTR [rcx+0x79]
    6382:	00 04 c4             	add    BYTE PTR [rsp+rax*8],al
    6385:	13 f2                	adc    esi,edx
    6387:	00 00                	add    BYTE PTR [rax],al
    6389:	00 02                	add    BYTE PTR [rdx],al
    638b:	91                   	xchg   ecx,eax
    638c:	48                   	rex.W
    638d:	26 f6 49 20 00       	test   BYTE PTR es:[rcx+0x20],0x0
    6392:	00 00                	add    BYTE PTR [rax],al
    6394:	00 00                	add    BYTE PTR [rax],al
    6396:	92                   	xchg   edx,eax
    6397:	00 00                	add    BYTE PTR [rax],al
    6399:	00 00                	add    BYTE PTR [rax],al
    639b:	00 00                	add    BYTE PTR [rax],al
    639d:	00 2b                	add    BYTE PTR [rbx],ch
    639f:	78 00                	js     63a1 <stivale_hdr-0x1f9c5f>
    63a1:	04 c5                	add    al,0xc5
    63a3:	0d f2 00 00 00       	or     eax,0xf2
    63a8:	02 91 40 2b 78 78    	add    dl,BYTE PTR [rcx+0x78782b40]
    63ae:	00 04 c5 14 f2 00 00 	add    BYTE PTR [rax*8+0xf214],al
    63b5:	00 03                	add    BYTE PTR [rbx],al
    63b7:	91                   	xchg   ecx,eax
    63b8:	b8 7f 00 00 00       	mov    eax,0x7f
    63bd:	27                   	(bad)  
    63be:	61                   	(bad)  
    63bf:	00 00                	add    BYTE PTR [rax],al
    63c1:	00 b4 08 00 00 28 2d 	add    BYTE PTR [rax+rcx*1+0x2d280000],dh
    63c8:	00 00                	add    BYTE PTR [rax],al
    63ca:	00 3f                	add    BYTE PTR [rdi],bh
    63cc:	00 23                	add    BYTE PTR [rbx],ah
    63ce:	d6                   	(bad)  
    63cf:	03 00                	add    eax,DWORD PTR [rax]
    63d1:	00 5c 47 20          	add    BYTE PTR [rdi+rax*2+0x20],bl
    63d5:	00 00                	add    BYTE PTR [rax],al
    63d7:	00 00                	add    BYTE PTR [rax],al
    63d9:	00 a1 01 00 00 00    	add    BYTE PTR [rcx+0x1],ah
    63df:	00 00                	add    BYTE PTR [rax],al
    63e1:	00 01                	add    BYTE PTR [rcx],al
    63e3:	9c                   	pushf  
    63e4:	ec                   	in     al,dx
    63e5:	09 00                	or     DWORD PTR [rax],eax
    63e7:	00 2a                	add    BYTE PTR [rdx],ch
    63e9:	d1 24 00             	shl    DWORD PTR [rax+rax*1],1
    63ec:	00 04 8b             	add    BYTE PTR [rbx+rcx*4],al
    63ef:	26 b2 00             	es mov dl,0x0
    63f2:	00 00                	add    BYTE PTR [rax],al
    63f4:	03 91 dc 7e 2a 65    	add    edx,DWORD PTR [rcx+0x652a7edc]
    63fa:	24 00                	and    al,0x0
    63fc:	00 04 8b             	add    BYTE PTR [rbx+rcx*4],al
    63ff:	33 b2 00 00 00 03    	xor    esi,DWORD PTR [rdx+0x3000000]
    6405:	91                   	xchg   ecx,eax
    6406:	d8 7e 2c             	fdivr  DWORD PTR [rsi+0x2c]
    6409:	38 27                	cmp    BYTE PTR [rdi],ah
    640b:	00 00                	add    BYTE PTR [rax],al
    640d:	04 8d                	add    al,0x8d
    640f:	0a 87 00 00 00 03    	or     al,BYTE PTR [rdi+0x3000000]
    6415:	91                   	xchg   ecx,eax
    6416:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6417:	7f 2c                	jg     6445 <stivale_hdr-0x1f9bbb>
    6419:	f6 26                	mul    BYTE PTR [rsi]
    641b:	00 00                	add    BYTE PTR [rax],al
    641d:	04 8e                	add    al,0x8e
    641f:	0a 87 00 00 00 03    	or     al,BYTE PTR [rdi+0x3000000]
    6425:	91                   	xchg   ecx,eax
    6426:	a8 7f                	test   al,0x7f
    6428:	2c 93                	sub    al,0x93
    642a:	25 00 00 04 90       	and    eax,0x90040000
    642f:	07                   	(bad)  
    6430:	74 00                	je     6432 <stivale_hdr-0x1f9bce>
    6432:	00 00                	add    BYTE PTR [rax],al
    6434:	03 91 b6 7f 2c 71    	add    edx,DWORD PTR [rcx+0x712c7fb6]
    643a:	26 00 00             	add    BYTE PTR es:[rax],al
    643d:	04 92                	add    al,0x92
    643f:	07                   	(bad)  
    6440:	61                   	(bad)  
    6441:	00 00                	add    BYTE PTR [rax],al
    6443:	00 03                	add    BYTE PTR [rbx],al
    6445:	91                   	xchg   ecx,eax
    6446:	b5 7f                	mov    ch,0x7f
    6448:	2c a2                	sub    al,0xa2
    644a:	28 00                	sub    BYTE PTR [rax],al
    644c:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    644f:	07                   	(bad)  
    6450:	61                   	(bad)  
    6451:	00 00                	add    BYTE PTR [rax],al
    6453:	00 03                	add    BYTE PTR [rbx],al
    6455:	91                   	xchg   ecx,eax
    6456:	b4 7f                	mov    ah,0x7f
    6458:	2b 63 00             	sub    esp,DWORD PTR [rbx+0x0]
    645b:	04 95                	add    al,0x95
    645d:	07                   	(bad)  
    645e:	1f                   	(bad)  
    645f:	01 00                	add    DWORD PTR [rax],eax
    6461:	00 03                	add    BYTE PTR [rbx],al
    6463:	91                   	xchg   ecx,eax
    6464:	b3 7f                	mov    bl,0x7f
    6466:	2c 0b                	sub    al,0xb
    6468:	25 00 00 04 9a       	and    eax,0x9a040000
    646d:	0b 93 00 00 00 03    	or     edx,DWORD PTR [rbx+0x3000000]
    6473:	91                   	xchg   ecx,eax
    6474:	a0 7f 2c 0f 35 00 00 	movabs al,ds:0x9c040000350f2c7f
    647b:	04 9c 
    647d:	0a a4 08 00 00 03 91 	or     ah,BYTE PTR [rax+rcx*1-0x6efd0000]
    6484:	e0 7e                	loopne 6504 <stivale_hdr-0x1f9afc>
    6486:	24 f5                	and    al,0xf5
    6488:	47 20 00             	rex.RXB and BYTE PTR [r8],r8b
    648b:	00 00                	add    BYTE PTR [rax],al
    648d:	00 00                	add    BYTE PTR [rax],al
    648f:	39 00                	cmp    DWORD PTR [rax],eax
    6491:	00 00                	add    BYTE PTR [rax],al
    6493:	00 00                	add    BYTE PTR [rax],al
    6495:	00 00                	add    BYTE PTR [rax],al
    6497:	90                   	nop
    6498:	09 00                	or     DWORD PTR [rax],eax
    649a:	00 2b                	add    BYTE PTR [rbx],ch
    649c:	69 00 04 9e 0e a6    	imul   eax,DWORD PTR [rax],0xa60e9e04
    64a2:	00 00                	add    BYTE PTR [rax],al
    64a4:	00 02                	add    BYTE PTR [rdx],al
    64a6:	91                   	xchg   ecx,eax
    64a7:	5f                   	pop    rdi
    64a8:	00 26                	add    BYTE PTR [rsi],ah
    64aa:	2e 48 20 00          	rex.W and BYTE PTR cs:[rax],al
    64ae:	00 00                	add    BYTE PTR [rax],al
    64b0:	00 00                	add    BYTE PTR [rax],al
    64b2:	c8 00 00 00          	enter  0x0,0x0
    64b6:	00 00                	add    BYTE PTR [rax],al
    64b8:	00 00                	add    BYTE PTR [rax],al
    64ba:	2b 79 00             	sub    edi,DWORD PTR [rcx+0x0]
    64bd:	04 a2                	add    al,0xa2
    64bf:	0c f2                	or     al,0xf2
    64c1:	00 00                	add    BYTE PTR [rax],al
    64c3:	00 02                	add    BYTE PTR [rdx],al
    64c5:	91                   	xchg   ecx,eax
    64c6:	50                   	push   rax
    64c7:	2b 79 79             	sub    edi,DWORD PTR [rcx+0x79]
    64ca:	00 04 a2             	add    BYTE PTR [rdx+riz*4],al
    64cd:	13 f2                	adc    esi,edx
    64cf:	00 00                	add    BYTE PTR [rax],al
    64d1:	00 02                	add    BYTE PTR [rdx],al
    64d3:	91                   	xchg   ecx,eax
    64d4:	48                   	rex.W
    64d5:	26 55                	es push rbp
    64d7:	48 20 00             	rex.W and BYTE PTR [rax],al
    64da:	00 00                	add    BYTE PTR [rax],al
    64dc:	00 00                	add    BYTE PTR [rax],al
    64de:	92                   	xchg   edx,eax
    64df:	00 00                	add    BYTE PTR [rax],al
    64e1:	00 00                	add    BYTE PTR [rax],al
    64e3:	00 00                	add    BYTE PTR [rax],al
    64e5:	00 2b                	add    BYTE PTR [rbx],ch
    64e7:	78 00                	js     64e9 <stivale_hdr-0x1f9b17>
    64e9:	04 a3                	add    al,0xa3
    64eb:	0e                   	(bad)  
    64ec:	f2 00 00             	repnz add BYTE PTR [rax],al
    64ef:	00 02                	add    BYTE PTR [rdx],al
    64f1:	91                   	xchg   ecx,eax
    64f2:	40 2b 78 78          	rex sub edi,DWORD PTR [rax+0x78]
    64f6:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    64f9:	15 f2 00 00 00       	adc    eax,0xf2
    64fe:	03 91 b8 7f 00 00    	add    edx,DWORD PTR [rcx+0x7fb8]
    6504:	00 21                	add    BYTE PTR [rcx],ah
    6506:	f1                   	icebp  
    6507:	03 00                	add    eax,DWORD PTR [rax]
    6509:	00 82 46 20 00 00    	add    BYTE PTR [rdx+0x2046],al
    650f:	00 00                	add    BYTE PTR [rax],al
    6511:	00 da                	add    dl,bl
    6513:	00 00                	add    BYTE PTR [rax],al
    6515:	00 00                	add    BYTE PTR [rax],al
    6517:	00 00                	add    BYTE PTR [rax],al
    6519:	00 01                	add    BYTE PTR [rcx],al
    651b:	9c                   	pushf  
    651c:	26 0a 00             	or     al,BYTE PTR es:[rax]
    651f:	00 2a                	add    BYTE PTR [rdx],ch
    6521:	af                   	scas   eax,DWORD PTR es:[rdi]
    6522:	28 00                	sub    BYTE PTR [rax],al
    6524:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    6527:	28 61 00             	sub    BYTE PTR [rcx+0x0],ah
    652a:	00 00                	add    BYTE PTR [rax],al
    652c:	02 91 5c 2c c2 28    	add    dl,BYTE PTR [rcx+0x28c22c5c]
    6532:	00 00                	add    BYTE PTR [rax],al
    6534:	04 44                	add    al,0x44
    6536:	08 87 00 00 00 02    	or     BYTE PTR [rdi+0x2000000],al
    653c:	91                   	xchg   ecx,eax
    653d:	6c                   	ins    BYTE PTR es:[rdi],dx
    653e:	00 23                	add    BYTE PTR [rbx],ah
    6540:	0b 04 00             	or     eax,DWORD PTR [rax+rax*1]
    6543:	00 ef                	add    bh,ch
    6545:	45 20 00             	and    BYTE PTR [r8],r8b
    6548:	00 00                	add    BYTE PTR [rax],al
    654a:	00 00                	add    BYTE PTR [rax],al
    654c:	93                   	xchg   ebx,eax
    654d:	00 00                	add    BYTE PTR [rax],al
    654f:	00 00                	add    BYTE PTR [rax],al
    6551:	00 00                	add    BYTE PTR [rax],al
    6553:	00 01                	add    BYTE PTR [rcx],al
    6555:	9c                   	pushf  
    6556:	7c 0a                	jl     6562 <stivale_hdr-0x1f9a9e>
    6558:	00 00                	add    BYTE PTR [rax],al
    655a:	29 63 00             	sub    DWORD PTR [rbx+0x0],esp
    655d:	04 35                	add    al,0x35
    655f:	21 1f                	and    DWORD PTR [rdi],ebx
    6561:	01 00                	add    DWORD PTR [rax],eax
    6563:	00 02                	add    BYTE PTR [rdx],al
    6565:	91                   	xchg   ecx,eax
    6566:	5c                   	pop    rsp
    6567:	2a af 28 00 00 04    	sub    ch,BYTE PTR [rdi+0x4000028]
    656d:	35 29 61 00 00       	xor    eax,0x6129
    6572:	00 02                	add    BYTE PTR [rdx],al
    6574:	91                   	xchg   ecx,eax
    6575:	58                   	pop    rax
    6576:	2a d1                	sub    dl,cl
    6578:	24 00                	and    al,0x0
    657a:	00 04 35 38 42 00 00 	add    BYTE PTR [rsi*1+0x4238],al
    6581:	00 02                	add    BYTE PTR [rdx],al
    6583:	91                   	xchg   ecx,eax
    6584:	50                   	push   rax
    6585:	2a 65 24             	sub    ah,BYTE PTR [rbp+0x24]
    6588:	00 00                	add    BYTE PTR [rax],al
    658a:	04 35                	add    al,0x35
    658c:	45                   	rex.RB
    658d:	42 00 00             	rex.X add BYTE PTR [rax],al
    6590:	00 02                	add    BYTE PTR [rdx],al
    6592:	91                   	xchg   ecx,eax
    6593:	48 00 23             	rex.W add BYTE PTR [rbx],spl
    6596:	30 04 00             	xor    BYTE PTR [rax+rax*1],al
    6599:	00 82 45 20 00 00    	add    BYTE PTR [rdx+0x2045],al
    659f:	00 00                	add    BYTE PTR [rax],al
    65a1:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    65a4:	00 00                	add    BYTE PTR [rax],al
    65a6:	00 00                	add    BYTE PTR [rax],al
    65a8:	00 00                	add    BYTE PTR [rax],al
    65aa:	01 9c d6 0a 00 00 26 	add    DWORD PTR [rsi+rdx*8+0x2600000a],ebx
    65b1:	8a 45 20             	mov    al,BYTE PTR [rbp+0x20]
    65b4:	00 00                	add    BYTE PTR [rax],al
    65b6:	00 00                	add    BYTE PTR [rax],al
    65b8:	00 53 00             	add    BYTE PTR [rbx+0x0],dl
    65bb:	00 00                	add    BYTE PTR [rax],al
    65bd:	00 00                	add    BYTE PTR [rax],al
    65bf:	00 00                	add    BYTE PTR [rax],al
    65c1:	2b 79 00             	sub    edi,DWORD PTR [rcx+0x0]
    65c4:	04 2e                	add    al,0x2e
    65c6:	14 34                	adc    al,0x34
    65c8:	00 00                	add    BYTE PTR [rax],al
    65ca:	00 02                	add    BYTE PTR [rdx],al
    65cc:	91                   	xchg   ecx,eax
    65cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    65ce:	26 a0 45 20 00 00 00 	movabs al,es:0x3700000000002045
    65d5:	00 00 37 
    65d8:	00 00                	add    BYTE PTR [rax],al
    65da:	00 00                	add    BYTE PTR [rax],al
    65dc:	00 00                	add    BYTE PTR [rax],al
    65de:	00 2b                	add    BYTE PTR [rbx],ch
    65e0:	78 00                	js     65e2 <stivale_hdr-0x1f9a1e>
    65e2:	04 2f                	add    al,0x2f
    65e4:	15 34 00 00 00       	adc    eax,0x34
    65e9:	02 91 68 00 00 00    	add    dl,BYTE PTR [rcx+0x68]
    65ef:	23 3c 04             	and    edi,DWORD PTR [rsp+rax*1]
    65f2:	00 00                	add    BYTE PTR [rax],al
    65f4:	22 44 20 00          	and    al,BYTE PTR [rax+riz*1+0x0]
    65f8:	00 00                	add    BYTE PTR [rax],al
    65fa:	00 00                	add    BYTE PTR [rax],al
    65fc:	60                   	(bad)  
    65fd:	01 00                	add    DWORD PTR [rax],eax
    65ff:	00 00                	add    BYTE PTR [rax],al
    6601:	00 00                	add    BYTE PTR [rax],al
    6603:	00 01                	add    BYTE PTR [rcx],al
    6605:	9c                   	pushf  
    6606:	01 0b                	add    DWORD PTR [rbx],ecx
    6608:	00 00                	add    BYTE PTR [rax],al
    660a:	2c 97                	sub    al,0x97
    660c:	06                   	(bad)  
    660d:	00 00                	add    BYTE PTR [rax],al
    660f:	04 1d                	add    al,0x1d
    6611:	1a fa                	sbb    bh,dl
    6613:	01 00                	add    DWORD PTR [rax],eax
    6615:	00 02                	add    BYTE PTR [rdx],al
    6617:	91                   	xchg   ecx,eax
    6618:	68 00 0d 95 07       	push   0x7950d00
    661d:	00 00                	add    BYTE PTR [rax],al
    661f:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    6622:	25 0b 00 00 1c       	and    eax,0x1c00000b
    6627:	b6 28                	mov    dh,0x28
    6629:	00 00                	add    BYTE PTR [rax],al
    662b:	03 07                	add    eax,DWORD PTR [rdi]
    662d:	19 a6 00 00 00 11    	sbb    DWORD PTR [rsi+0x11000000],esp
    6633:	ca 00 00             	retf   0x0
    6636:	00 11                	add    BYTE PTR [rcx],dl
    6638:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6639:	00 00                	add    BYTE PTR [rax],al
    663b:	00 00                	add    BYTE PTR [rax],al
    663d:	00 21                	add    BYTE PTR [rcx],ah
    663f:	0d 0b 00 00 fc       	or     eax,0xfc00000b
    6644:	43 20 00             	rex.XB and BYTE PTR [r8],al
    6647:	00 00                	add    BYTE PTR [rax],al
    6649:	00 00                	add    BYTE PTR [rax],al
    664b:	26 00 00             	add    BYTE PTR es:[rax],al
    664e:	00 00                	add    BYTE PTR [rax],al
    6650:	00 00                	add    BYTE PTR [rax],al
    6652:	00 01                	add    BYTE PTR [rcx],al
    6654:	9c                   	pushf  
    6655:	5f                   	pop    rdi
    6656:	0b 00                	or     eax,DWORD PTR [rax]
    6658:	00 2a                	add    BYTE PTR [rdx],ch
    665a:	79 24                	jns    6680 <stivale_hdr-0x1f9980>
    665c:	00 00                	add    BYTE PTR [rax],al
    665e:	03 07                	add    eax,DWORD PTR [rdi]
    6660:	28 ca                	sub    dl,cl
    6662:	00 00                	add    BYTE PTR [rax],al
    6664:	00 02                	add    BYTE PTR [rdx],al
    6666:	91                   	xchg   ecx,eax
    6667:	68 29 62 69 74       	push   0x74696229
    666c:	00 03                	add    BYTE PTR [rbx],al
    666e:	07                   	(bad)  
    666f:	37                   	(bad)  
    6670:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6671:	00 00                	add    BYTE PTR [rax],al
    6673:	00 02                	add    BYTE PTR [rdx],al
    6675:	91                   	xchg   ecx,eax
    6676:	64 00 21             	add    BYTE PTR fs:[rcx],ah
    6679:	48 04 00             	rex.W add al,0x0
    667c:	00 db                	add    bl,bl
    667e:	43 20 00             	rex.XB and BYTE PTR [r8],al
    6681:	00 00                	add    BYTE PTR [rax],al
    6683:	00 00                	add    BYTE PTR [rax],al
    6685:	21 00                	and    DWORD PTR [rax],eax
    6687:	00 00                	add    BYTE PTR [rax],al
    6689:	00 00                	add    BYTE PTR [rax],al
    668b:	00 00                	add    BYTE PTR [rax],al
    668d:	01 9c 98 0b 00 00 29 	add    DWORD PTR [rax+rbx*4+0x2900000b],ebx
    6694:	75 63                	jne    66f9 <stivale_hdr-0x1f9907>
    6696:	00 02                	add    BYTE PTR [rdx],al
    6698:	15 2b 61 00 00       	adc    eax,0x612b
    669d:	00 02                	add    BYTE PTR [rdx],al
    669f:	91                   	xchg   ecx,eax
    66a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    66a1:	2a c2                	sub    al,dl
    66a3:	28 00                	sub    BYTE PTR [rax],al
    66a5:	00 02                	add    BYTE PTR [rdx],al
    66a7:	15 34 61 00 00       	adc    eax,0x6134
    66ac:	00 02                	add    BYTE PTR [rdx],al
    66ae:	91                   	xchg   ecx,eax
    66af:	68 00 21 1b 02       	push   0x21b2100
    66b4:	00 00                	add    BYTE PTR [rax],al
    66b6:	91                   	xchg   ecx,eax
    66b7:	43 20 00             	rex.XB and BYTE PTR [r8],al
    66ba:	00 00                	add    BYTE PTR [rax],al
    66bc:	00 00                	add    BYTE PTR [rax],al
    66be:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    66c1:	00 00                	add    BYTE PTR [rax],al
    66c3:	00 00                	add    BYTE PTR [rax],al
    66c5:	00 01                	add    BYTE PTR [rcx],al
    66c7:	9c                   	pushf  
    66c8:	d2 0b                	ror    BYTE PTR [rbx],cl
    66ca:	00 00                	add    BYTE PTR [rax],al
    66cc:	2a 16                	sub    dl,BYTE PTR [rsi]
    66ce:	26 00 00             	add    BYTE PTR es:[rax],al
    66d1:	01 26                	add    DWORD PTR [rsi],esp
    66d3:	46 06                	rex.RX (bad) 
    66d5:	02 00                	add    al,BYTE PTR [rax]
    66d7:	00 02                	add    BYTE PTR [rdx],al
    66d9:	91                   	xchg   ecx,eax
    66da:	68 2a f6 27 00       	push   0x27f62a
    66df:	00 01                	add    BYTE PTR [rcx],al
    66e1:	26 53                	es push rbx
    66e3:	be 00 00 00 02       	mov    esi,0x2000000
    66e8:	91                   	xchg   ecx,eax
    66e9:	64 00 2d 32 02 00 00 	add    BYTE PTR fs:[rip+0x232],ch        # 6922 <stivale_hdr-0x1f96de>
    66f0:	47                   	rex.RXB
    66f1:	43 20 00             	rex.XB and BYTE PTR [r8],al
    66f4:	00 00                	add    BYTE PTR [rax],al
    66f6:	00 00                	add    BYTE PTR [rax],al
    66f8:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    66fb:	00 00                	add    BYTE PTR [rax],al
    66fd:	00 00                	add    BYTE PTR [rax],al
    66ff:	00 01                	add    BYTE PTR [rcx],al
    6701:	9c                   	pushf  
    6702:	2a 16                	sub    dl,BYTE PTR [rsi]
    6704:	26 00 00             	add    BYTE PTR es:[rax],al
    6707:	01 21                	add    DWORD PTR [rcx],esp
    6709:	3f                   	(bad)  
    670a:	06                   	(bad)  
    670b:	02 00                	add    al,BYTE PTR [rax]
    670d:	00 02                	add    BYTE PTR [rdx],al
    670f:	91                   	xchg   ecx,eax
    6710:	68 2a f6 27 00       	push   0x27f62a
    6715:	00 01                	add    BYTE PTR [rcx],al
    6717:	21 4c be 00          	and    DWORD PTR [rsi+rdi*4+0x0],ecx
    671b:	00 00                	add    BYTE PTR [rax],al
    671d:	02 91 64 00 00 0d    	add    dl,BYTE PTR [rcx+0xd000064]
    6723:	08 00                	or     BYTE PTR [rax],al
    6725:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    6728:	b8 23 00 00 08       	mov    eax,0x8000023
    672d:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    6731:	00 04 66             	add    BYTE PTR [rsi+riz*2],al
    6734:	2a 00                	sub    al,BYTE PTR [rax]
    6736:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    6739:	00 00                	add    BYTE PTR [rax],al
    673b:	b2 50                	mov    dl,0x50
    673d:	20 00                	and    BYTE PTR [rax],al
    673f:	00 00                	add    BYTE PTR [rax],al
    6741:	00 00                	add    BYTE PTR [rax],al
    6743:	76 1f                	jbe    6764 <stivale_hdr-0x1f989c>
    6745:	00 00                	add    BYTE PTR [rax],al
    6747:	00 00                	add    BYTE PTR [rax],al
    6749:	00 00                	add    BYTE PTR [rax],al
    674b:	95                   	xchg   ebp,eax
    674c:	29 00                	sub    DWORD PTR [rax],eax
    674e:	00 02                	add    BYTE PTR [rdx],al
    6750:	01 06                	add    DWORD PTR [rsi],eax
    6752:	70 00                	jo     6754 <stivale_hdr-0x1f98ac>
    6754:	00 00                	add    BYTE PTR [rax],al
    6756:	02 02                	add    al,BYTE PTR [rdx]
    6758:	05 73 01 00 00       	add    eax,0x173
    675d:	03 04 05 69 6e 74 00 	add    eax,DWORD PTR [rax*1+0x746e69]
    6764:	02 08                	add    cl,BYTE PTR [rax]
    6766:	05 6a 01 00 00       	add    eax,0x16a
    676b:	02 01                	add    al,BYTE PTR [rcx]
    676d:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    6770:	00 00                	add    BYTE PTR [rax],al
    6772:	02 02                	add    al,BYTE PTR [rdx]
    6774:	07                   	(bad)  
    6775:	9b                   	fwait
    6776:	01 00                	add    DWORD PTR [rax],eax
    6778:	00 02                	add    BYTE PTR [rdx],al
    677a:	04 07                	add    al,0x7
    677c:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    677f:	00 02                	add    BYTE PTR [rdx],al
    6781:	08 07                	or     BYTE PTR [rdi],al
    6783:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    6786:	00 04 71             	add    BYTE PTR [rcx+rsi*2],al
    6789:	29 00                	sub    DWORD PTR [rax],eax
    678b:	00 02                	add    BYTE PTR [rdx],al
    678d:	5b                   	pop    rbx
    678e:	19 42 00             	sbb    DWORD PTR [rdx+0x0],eax
    6791:	00 00                	add    BYTE PTR [rax],al
    6793:	04 70                	add    al,0x70
    6795:	29 00                	sub    DWORD PTR [rax],eax
    6797:	00 02                	add    BYTE PTR [rdx],al
    6799:	5c                   	pop    rsp
    679a:	1a 5e 00             	sbb    bl,BYTE PTR [rsi+0x0]
    679d:	00 00                	add    BYTE PTR [rax],al
    679f:	04 2e                	add    al,0x2e
    67a1:	2a 00                	sub    al,BYTE PTR [rax]
    67a3:	00 03                	add    BYTE PTR [rbx],al
    67a5:	8f                   	(bad)  
    67a6:	1a 42 00             	sbb    al,BYTE PTR [rdx+0x0]
    67a9:	00 00                	add    BYTE PTR [rax],al
    67ab:	04 3d                	add    al,0x3d
    67ad:	24 00                	and    al,0x0
    67af:	00 03                	add    BYTE PTR [rbx],al
    67b1:	d1 17                	rcl    DWORD PTR [rdi],1
    67b3:	5e                   	pop    rsi
    67b4:	00 00                	add    BYTE PTR [rax],al
    67b6:	00 02                	add    BYTE PTR [rdx],al
    67b8:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 6923 <stivale_hdr-0x1f96dd>
    67be:	02 10                	add    dl,BYTE PTR [rax]
    67c0:	04 8f                	add    al,0x8f
    67c2:	01 00                	add    DWORD PTR [rax],eax
    67c4:	00 05 47 00 00 00    	add    BYTE PTR [rip+0x47],al        # 6811 <stivale_hdr-0x1f97ef>
    67ca:	04 38                	add    al,0x38
    67cc:	2a 00                	sub    al,BYTE PTR [rax]
    67ce:	00 04 28             	add    BYTE PTR [rax+rbp*1],al
    67d1:	1b b4 00 00 00 06 92 	sbb    esi,DWORD PTR [rax+rax*1-0x6dfa0000]
    67d8:	29 00                	sub    DWORD PTR [rax],eax
    67da:	00 bd 00 00 00 07    	add    BYTE PTR [rbp+0x7000000],bh
    67e0:	cd 00                	int    0x0
    67e2:	00 00                	add    BYTE PTR [rax],al
    67e4:	cd 00                	int    0x0
    67e6:	00 00                	add    BYTE PTR [rax],al
    67e8:	08 5e 00             	or     BYTE PTR [rsi+0x0],bl
    67eb:	00 00                	add    BYTE PTR [rax],al
    67ed:	00 00                	add    BYTE PTR [rax],al
    67ef:	09 ef                	or     edi,ebp
    67f1:	29 00                	sub    DWORD PTR [rax],eax
    67f3:	00 18                	add    BYTE PTR [rax],bl
    67f5:	05 00 0a 01 00       	add    eax,0x10a00
    67fa:	00 0a                	add    BYTE PTR [rdx],cl
    67fc:	27                   	(bad)  
    67fd:	29 00                	sub    DWORD PTR [rax],eax
    67ff:	00 05 00 57 00 00    	add    BYTE PTR [rip+0x5700],al        # bf05 <stivale_hdr-0x1f40fb>
    6805:	00 00                	add    BYTE PTR [rax],al
    6807:	0a e7                	or     ah,bh
    6809:	2a 00                	sub    al,BYTE PTR [rax]
    680b:	00 05 00 57 00 00    	add    BYTE PTR [rip+0x5700],al        # bf11 <stivale_hdr-0x1f40ef>
    6811:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
    6814:	d5                   	(bad)  
    6815:	29 00                	sub    DWORD PTR [rax],eax
    6817:	00 05 00 0a 01 00    	add    BYTE PTR [rip+0x10a00],al        # 1721d <stivale_hdr-0x1e8de3>
    681d:	00 08                	add    BYTE PTR [rax],cl
    681f:	0a a9 2a 00 00 05    	or     ch,BYTE PTR [rcx+0x500002a]
    6825:	00 0a                	add    BYTE PTR [rdx],cl
    6827:	01 00                	add    DWORD PTR [rax],eax
    6829:	00 10                	add    BYTE PTR [rax],dl
    682b:	00 0b                	add    BYTE PTR [rbx],cl
    682d:	08 04 3f             	or     BYTE PTR [rdi+rdi*1],al
    6830:	2a 00                	sub    al,BYTE PTR [rax]
    6832:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    6835:	18 a8 00 00 00 02    	sbb    BYTE PTR [rax+0x2000000],ch
    683b:	10 07                	adc    BYTE PTR [rdi],al
    683d:	00 00                	add    BYTE PTR [rax],al
    683f:	00 00                	add    BYTE PTR [rax],al
    6841:	02 10                	add    dl,BYTE PTR [rax]
    6843:	05 1b 01 00 00       	add    eax,0x11b
    6848:	0c 73                	or     al,0x73
    684a:	79 73                	jns    68bf <stivale_hdr-0x1f9741>
    684c:	00 06                	add    BYTE PTR [rsi],al
    684e:	04 0b                	add    al,0xb
    6850:	3b 01                	cmp    eax,DWORD PTR [rcx]
    6852:	00 00                	add    BYTE PTR [rax],al
    6854:	0d 69 00 00 00       	or     eax,0x69
    6859:	06                   	(bad)  
    685a:	05 0f 00 02 01       	add    eax,0x102000f
    685f:	06                   	(bad)  
    6860:	77 00                	ja     6862 <stivale_hdr-0x1f979e>
    6862:	00 00                	add    BYTE PTR [rax],al
    6864:	0e                   	(bad)  
    6865:	3b 01                	cmp    eax,DWORD PTR [rcx]
    6867:	00 00                	add    BYTE PTR [rax],al
    6869:	0f 2e 32             	ucomiss xmm6,DWORD PTR [rdx]
    686c:	00 00                	add    BYTE PTR [rax],al
    686e:	0a 03                	or     al,BYTE PTR [rbx]
    6870:	0b 5c 01 00          	or     ebx,DWORD PTR [rcx+rax*1+0x0]
    6874:	00 0d 22 0e 00 00    	add    BYTE PTR [rip+0xe22],cl        # 769c <stivale_hdr-0x1f8964>
    687a:	07                   	(bad)  
    687b:	05 0c 00 02 01       	add    eax,0x102000c
    6880:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    6883:	00 00                	add    BYTE PTR [rax],al
    6885:	0c 67                	or     al,0x67
    6887:	66 78 00             	data16 js 688a <stivale_hdr-0x1f9776>
    688a:	08 08                	or     BYTE PTR [rax],cl
    688c:	0b 78 01             	or     edi,DWORD PTR [rax+0x1]
    688f:	00 00                	add    BYTE PTR [rax],al
    6891:	0d a6 02 00 00       	or     eax,0x2a6
    6896:	08 10                	or     BYTE PTR [rax],dl
    6898:	0c 00                	or     al,0x0
    689a:	0c 69                	or     al,0x69
    689c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    689d:	00 09                	add    BYTE PTR [rcx],cl
    689f:	0d 0b 8c 01 00       	or     eax,0x18c0b
    68a4:	00 10                	add    BYTE PTR [rax],dl
    68a6:	74 74                	je     691c <stivale_hdr-0x1f96e4>
    68a8:	79 00                	jns    68aa <stivale_hdr-0x1f9756>
    68aa:	09 0e                	or     DWORD PTR [rsi],ecx
    68ac:	0f 00 11             	lldt   WORD PTR [rcx]
    68af:	5f                   	pop    rdi
    68b0:	2a 00                	sub    al,BYTE PTR [rax]
    68b2:	00 01                	add    BYTE PTR [rcx],al
    68b4:	d8 01                	fadd   DWORD PTR [rcx]
    68b6:	2d 3b 00 00 00       	sub    eax,0x3b
    68bb:	7b 6f                	jnp    692c <stivale_hdr-0x1f96d4>
    68bd:	20 00                	and    BYTE PTR [rax],al
    68bf:	00 00                	add    BYTE PTR [rax],al
    68c1:	00 00                	add    BYTE PTR [rax],al
    68c3:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    68c4:	00 00                	add    BYTE PTR [rax],al
    68c6:	00 00                	add    BYTE PTR [rax],al
    68c8:	00 00                	add    BYTE PTR [rax],al
    68ca:	00 01                	add    BYTE PTR [rcx],al
    68cc:	9c                   	pushf  
    68cd:	e2 01                	loop   68d0 <stivale_hdr-0x1f9730>
    68cf:	00 00                	add    BYTE PTR [rax],al
    68d1:	12 b7 2a 00 00 01    	adc    dh,BYTE PTR [rdi+0x100002a]
    68d7:	d8 01                	fadd   DWORD PTR [rcx]
    68d9:	41 e2 01             	rex.B loop 68dd <stivale_hdr-0x1f9723>
    68dc:	00 00                	add    BYTE PTR [rax],al
    68de:	03 91 98 7e 13 14    	add    edx,DWORD PTR [rcx+0x14137e98]
    68e4:	42 2a 00             	rex.X sub al,BYTE PTR [rax]
    68e7:	00 01                	add    BYTE PTR [rcx],al
    68e9:	da 01                	fiadd  DWORD PTR [rcx]
    68eb:	0d 0c 01 00 00       	or     eax,0x10c
    68f0:	03 91 a0 7e 15 69    	add    edx,DWORD PTR [rcx+0x69157ea0]
    68f6:	00 01                	add    BYTE PTR [rcx],al
    68f8:	dc 01                	fadd   QWORD PTR [rcx]
    68fa:	09 3b                	or     DWORD PTR [rbx],edi
    68fc:	00 00                	add    BYTE PTR [rax],al
    68fe:	00 03                	add    BYTE PTR [rbx],al
    6900:	91                   	xchg   ecx,eax
    6901:	bc 7e 00 16 08       	mov    esp,0x816007e
    6906:	42 01 00             	rex.X add DWORD PTR [rax],eax
    6909:	00 17                	add    BYTE PTR [rdi],dl
    690b:	5e                   	pop    rsi
    690c:	2a 00                	sub    al,BYTE PTR [rax]
    690e:	00 01                	add    BYTE PTR [rcx],al
    6910:	56                   	push   rsi
    6911:	05 e3 28 00 00       	add    eax,0x28e3
    6916:	3b 00                	cmp    eax,DWORD PTR [rax]
    6918:	00 00                	add    BYTE PTR [rax],al
    691a:	71 55                	jno    6971 <stivale_hdr-0x1f968f>
    691c:	20 00                	and    BYTE PTR [rax],al
    691e:	00 00                	add    BYTE PTR [rax],al
    6920:	00 00                	add    BYTE PTR [rax],al
    6922:	0a 1a                	or     bl,BYTE PTR [rdx]
    6924:	00 00                	add    BYTE PTR [rax],al
    6926:	00 00                	add    BYTE PTR [rax],al
    6928:	00 00                	add    BYTE PTR [rax],al
    692a:	01 9c 3d 06 00 00 18 	add    DWORD PTR [rbp+rdi*1+0x18000006],ebx
    6931:	b7 2a                	mov    bh,0x2a
    6933:	00 00                	add    BYTE PTR [rax],al
    6935:	01 56 1a             	add    DWORD PTR [rsi+0x1a],edx
    6938:	e2 01                	loop   693b <stivale_hdr-0x1f96c5>
    693a:	00 00                	add    BYTE PTR [rax],al
    693c:	03 91 b8 7c 18 42    	add    edx,DWORD PTR [rcx+0x42187cb8]
    6942:	2a 00                	sub    al,BYTE PTR [rax]
    6944:	00 01                	add    BYTE PTR [rcx],al
    6946:	56                   	push   rsi
    6947:	2a 3d 06 00 00 03    	sub    bh,BYTE PTR [rip+0x3000006]        # 3006953 <__kernel_end+0x2df4953>
    694d:	91                   	xchg   ecx,eax
    694e:	b0 7c                	mov    al,0x7c
    6950:	19 fd                	sbb    ebp,edi
    6952:	2a 00                	sub    al,BYTE PTR [rax]
    6954:	00 01                	add    BYTE PTR [rcx],al
    6956:	58                   	pop    rax
    6957:	09 3b                	or     DWORD PTR [rbx],edi
    6959:	00 00                	add    BYTE PTR [rax],al
    695b:	00 03                	add    BYTE PTR [rbx],al
    695d:	91                   	xchg   ecx,eax
    695e:	c4                   	(bad)  
    695f:	7e 19                	jle    697a <stivale_hdr-0x1f9686>
    6961:	09 29                	or     DWORD PTR [rcx],ebp
    6963:	00 00                	add    BYTE PTR [rax],al
    6965:	01 59 0a             	add    DWORD PTR [rcx+0xa],ebx
    6968:	43 06                	rex.XB (bad) 
    696a:	00 00                	add    BYTE PTR [rax],al
    696c:	03 91 c0 7c 1a f4    	add    edx,DWORD PTR [rcx-0xbe58340]
    6972:	56                   	push   rsi
    6973:	20 00                	and    BYTE PTR [rax],al
    6975:	00 00                	add    BYTE PTR [rax],al
    6977:	00 00                	add    BYTE PTR [rax],al
    6979:	7f 18                	jg     6993 <stivale_hdr-0x1f966d>
    697b:	00 00                	add    BYTE PTR [rax],al
    697d:	00 00                	add    BYTE PTR [rax],al
    697f:	00 00                	add    BYTE PTR [rax],al
    6981:	1b 69 00             	sbb    ebp,DWORD PTR [rcx+0x0]
    6984:	01 5b 0e             	add    DWORD PTR [rbx+0xe],ebx
    6987:	3b 00                	cmp    eax,DWORD PTR [rax]
    6989:	00 00                	add    BYTE PTR [rax],al
    698b:	02 91 6c 1a 16 57    	add    dl,BYTE PTR [rcx+0x57161a6c]
    6991:	20 00                	and    BYTE PTR [rax],al
    6993:	00 00                	add    BYTE PTR [rax],al
    6995:	00 00                	add    BYTE PTR [rax],al
    6997:	54                   	push   rsp
    6998:	18 00                	sbb    BYTE PTR [rax],al
    699a:	00 00                	add    BYTE PTR [rax],al
    699c:	00 00                	add    BYTE PTR [rax],al
    699e:	00 19                	add    BYTE PTR [rcx],bl
    69a0:	03 2b                	add    ebp,DWORD PTR [rbx]
    69a2:	00 00                	add    BYTE PTR [rax],al
    69a4:	01 5d 0e             	add    DWORD PTR [rbp+0xe],ebx
    69a7:	3b 01                	cmp    eax,DWORD PTR [rcx]
    69a9:	00 00                	add    BYTE PTR [rax],al
    69ab:	02 91 6b 19 4f 0e    	add    dl,BYTE PTR [rcx+0xe4f196b]
    69b1:	00 00                	add    BYTE PTR [rax],al
    69b3:	01 5e 0e             	add    DWORD PTR [rsi+0xe],ebx
    69b6:	3b 01                	cmp    eax,DWORD PTR [rcx]
    69b8:	00 00                	add    BYTE PTR [rax],al
    69ba:	02 91 6a 19 47 2a    	add    dl,BYTE PTR [rcx+0x2a47196a]
    69c0:	00 00                	add    BYTE PTR [rax],al
    69c2:	01 60 0e             	add    DWORD PTR [rax+0xe],esp
    69c5:	3b 00                	cmp    eax,DWORD PTR [rax]
    69c7:	00 00                	add    BYTE PTR [rax],al
    69c9:	02 91 64 19 a4 29    	add    dl,BYTE PTR [rcx+0x29a41964]
    69cf:	00 00                	add    BYTE PTR [rax],al
    69d1:	01 61 0e             	add    DWORD PTR [rcx+0xe],esp
    69d4:	3b 00                	cmp    eax,DWORD PTR [rax]
    69d6:	00 00                	add    BYTE PTR [rax],al
    69d8:	02 91 60 19 f1 2a    	add    dl,BYTE PTR [rcx+0x2af11960]
    69de:	00 00                	add    BYTE PTR [rax],al
    69e0:	01 62 0e             	add    DWORD PTR [rdx+0xe],esp
    69e3:	5c                   	pop    rsp
    69e4:	01 00                	add    DWORD PTR [rax],eax
    69e6:	00 02                	add    BYTE PTR [rdx],al
    69e8:	91                   	xchg   ecx,eax
    69e9:	5f                   	pop    rdi
    69ea:	19 86 2a 00 00 01    	sbb    DWORD PTR [rsi+0x100002a],eax
    69f0:	63 0e                	movsxd ecx,DWORD PTR [rsi]
    69f2:	5c                   	pop    rsp
    69f3:	01 00                	add    DWORD PTR [rax],eax
    69f5:	00 02                	add    BYTE PTR [rdx],al
    69f7:	91                   	xchg   ecx,eax
    69f8:	5e                   	pop    rsi
    69f9:	19 52 2a             	sbb    DWORD PTR [rdx+0x2a],edx
    69fc:	00 00                	add    BYTE PTR [rax],al
    69fe:	01 64 0e 5c          	add    DWORD PTR [rsi+rcx*1+0x5c],esp
    6a02:	01 00                	add    DWORD PTR [rax],eax
    6a04:	00 02                	add    BYTE PTR [rdx],al
    6a06:	91                   	xchg   ecx,eax
    6a07:	5d                   	pop    rbp
    6a08:	19 e7                	sbb    edi,esp
    6a0a:	29 00                	sub    DWORD PTR [rax],eax
    6a0c:	00 01                	add    BYTE PTR [rcx],al
    6a0e:	65 0e                	gs (bad) 
    6a10:	5c                   	pop    rsp
    6a11:	01 00                	add    DWORD PTR [rax],eax
    6a13:	00 02                	add    BYTE PTR [rdx],al
    6a15:	91                   	xchg   ecx,eax
    6a16:	5c                   	pop    rsp
    6a17:	19 de                	sbb    esi,ebx
    6a19:	2a 00                	sub    al,BYTE PTR [rax]
    6a1b:	00 01                	add    BYTE PTR [rcx],al
    6a1d:	66 0e                	data16 (bad) 
    6a1f:	5c                   	pop    rsp
    6a20:	01 00                	add    DWORD PTR [rax],eax
    6a22:	00 02                	add    BYTE PTR [rdx],al
    6a24:	91                   	xchg   ecx,eax
    6a25:	5b                   	pop    rbx
    6a26:	19 ad 29 00 00 01    	sbb    DWORD PTR [rbp+0x1000029],ebp
    6a2c:	67 0e                	addr32 (bad) 
    6a2e:	5c                   	pop    rsp
    6a2f:	01 00                	add    DWORD PTR [rax],eax
    6a31:	00 02                	add    BYTE PTR [rdx],al
    6a33:	91                   	xchg   ecx,eax
    6a34:	5a                   	pop    rdx
    6a35:	19 81 2a 00 00 01    	sbb    DWORD PTR [rcx+0x100002a],eax
    6a3b:	68 0e 3b 00 00       	push   0x3b0e
    6a40:	00 02                	add    BYTE PTR [rdx],al
    6a42:	91                   	xchg   ecx,eax
    6a43:	54                   	push   rsp
    6a44:	1a 66 57             	sbb    ah,BYTE PTR [rsi+0x57]
    6a47:	20 00                	and    BYTE PTR [rax],al
    6a49:	00 00                	add    BYTE PTR [rax],al
    6a4b:	00 00                	add    BYTE PTR [rax],al
    6a4d:	dd 17                	fst    QWORD PTR [rdi]
    6a4f:	00 00                	add    BYTE PTR [rax],al
    6a51:	00 00                	add    BYTE PTR [rax],al
    6a53:	00 00                	add    BYTE PTR [rax],al
    6a55:	19 8e 2a 00 00 01    	sbb    DWORD PTR [rsi+0x100002a],ecx
    6a5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    6a5c:	12 5c 01 00          	adc    bl,BYTE PTR [rcx+rax*1+0x0]
    6a60:	00 02                	add    BYTE PTR [rdx],al
    6a62:	91                   	xchg   ecx,eax
    6a63:	53                   	push   rbx
    6a64:	19 1a                	sbb    DWORD PTR [rdx],ebx
    6a66:	04 00                	add    al,0x0
    6a68:	00 01                	add    BYTE PTR [rcx],al
    6a6a:	bc 11 3b 00 00       	mov    esp,0x3b11
    6a6f:	00 02                	add    BYTE PTR [rdx],al
    6a71:	91                   	xchg   ecx,eax
    6a72:	4c 1c c1             	rex.WR sbb al,0xc1
    6a75:	5b                   	pop    rbx
    6a76:	20 00                	and    BYTE PTR [rax],al
    6a78:	00 00                	add    BYTE PTR [rax],al
    6a7a:	00 00                	add    BYTE PTR [rax],al
    6a7c:	b6 00                	mov    dh,0x0
    6a7e:	00 00                	add    BYTE PTR [rax],al
    6a80:	00 00                	add    BYTE PTR [rax],al
    6a82:	00 00                	add    BYTE PTR [rax],al
    6a84:	77 03                	ja     6a89 <stivale_hdr-0x1f9577>
    6a86:	00 00                	add    BYTE PTR [rax],al
    6a88:	19 bc 29 00 00 01 d7 	sbb    DWORD PTR [rcx+rbp*1-0x28ff0000],edi
    6a8f:	2a 57 00             	sub    dl,BYTE PTR [rdi+0x0]
    6a92:	00 00                	add    BYTE PTR [rax],al
    6a94:	03 91 d0 7e 00 1c    	add    edx,DWORD PTR [rcx+0x1c007ed0]
    6a9a:	77 5c                	ja     6af8 <stivale_hdr-0x1f9508>
    6a9c:	20 00                	and    BYTE PTR [rax],al
    6a9e:	00 00                	add    BYTE PTR [rax],al
    6aa0:	00 00                	add    BYTE PTR [rax],al
    6aa2:	b7 00                	mov    bh,0x0
    6aa4:	00 00                	add    BYTE PTR [rax],al
    6aa6:	00 00                	add    BYTE PTR [rax],al
    6aa8:	00 00                	add    BYTE PTR [rax],al
    6aaa:	9d                   	popf   
    6aab:	03 00                	add    eax,DWORD PTR [rax]
    6aad:	00 19                	add    BYTE PTR [rcx],bl
    6aaf:	bc 29 00 00 01       	mov    esp,0x1000029
    6ab4:	de 2b                	fisubr WORD PTR [rbx]
    6ab6:	49 00 00             	rex.WB add BYTE PTR [r8],al
    6ab9:	00 03                	add    BYTE PTR [rbx],al
    6abb:	91                   	xchg   ecx,eax
    6abc:	d5                   	(bad)  
    6abd:	7e 00                	jle    6abf <stivale_hdr-0x1f9541>
    6abf:	1c 2e                	sbb    al,0x2e
    6ac1:	5d                   	pop    rbp
    6ac2:	20 00                	and    BYTE PTR [rax],al
    6ac4:	00 00                	add    BYTE PTR [rax],al
    6ac6:	00 00                	add    BYTE PTR [rax],al
    6ac8:	b8 00 00 00 00       	mov    eax,0x0
    6acd:	00 00                	add    BYTE PTR [rax],al
    6acf:	00 c3                	add    bl,al
    6ad1:	03 00                	add    eax,DWORD PTR [rax]
    6ad3:	00 19                	add    BYTE PTR [rcx],bl
    6ad5:	bc 29 00 00 01       	mov    esp,0x1000029
    6ada:	e5 30                	in     eax,0x30
    6adc:	50                   	push   rax
    6add:	00 00                	add    BYTE PTR [rax],al
    6adf:	00 03                	add    BYTE PTR [rbx],al
    6ae1:	91                   	xchg   ecx,eax
    6ae2:	d6                   	(bad)  
    6ae3:	7e 00                	jle    6ae5 <stivale_hdr-0x1f951b>
    6ae5:	1c e6                	sbb    al,0xe6
    6ae7:	5d                   	pop    rbp
    6ae8:	20 00                	and    BYTE PTR [rax],al
    6aea:	00 00                	add    BYTE PTR [rax],al
    6aec:	00 00                	add    BYTE PTR [rax],al
    6aee:	b9 00 00 00 00       	mov    ecx,0x0
    6af3:	00 00                	add    BYTE PTR [rax],al
    6af5:	00 e9                	add    cl,ch
    6af7:	03 00                	add    eax,DWORD PTR [rax]
    6af9:	00 19                	add    BYTE PTR [rcx],bl
    6afb:	bc 29 00 00 01       	mov    esp,0x1000029
    6b00:	ec                   	in     al,dx
    6b01:	2b 5e 00             	sub    ebx,DWORD PTR [rsi+0x0]
    6b04:	00 00                	add    BYTE PTR [rax],al
    6b06:	03 91 e0 7e 00 1c    	add    edx,DWORD PTR [rcx+0x1c007ee0]
    6b0c:	9f                   	lahf   
    6b0d:	5e                   	pop    rsi
    6b0e:	20 00                	and    BYTE PTR [rax],al
    6b10:	00 00                	add    BYTE PTR [rax],al
    6b12:	00 00                	add    BYTE PTR [rax],al
    6b14:	b9 00 00 00 00       	mov    ecx,0x0
    6b19:	00 00                	add    BYTE PTR [rax],al
    6b1b:	00 0f                	add    BYTE PTR [rdi],cl
    6b1d:	04 00                	add    al,0x0
    6b1f:	00 19                	add    BYTE PTR [rcx],bl
    6b21:	bc 29 00 00 01       	mov    esp,0x1000029
    6b26:	f3 30 53 06          	repz xor BYTE PTR [rbx+0x6],dl
    6b2a:	00 00                	add    BYTE PTR [rax],al
    6b2c:	03 91 e8 7e 00 1c    	add    edx,DWORD PTR [rcx+0x1c007ee8]
    6b32:	58                   	pop    rax
    6b33:	5f                   	pop    rdi
    6b34:	20 00                	and    BYTE PTR [rax],al
    6b36:	00 00                	add    BYTE PTR [rax],al
    6b38:	00 00                	add    BYTE PTR [rax],al
    6b3a:	b9 00 00 00 00       	mov    ecx,0x0
    6b3f:	00 00                	add    BYTE PTR [rax],al
    6b41:	00 35 04 00 00 19    	add    BYTE PTR [rip+0x19000004],dh        # 19006b4b <__kernel_end+0x18df4b4b>
    6b47:	bc 29 00 00 01       	mov    esp,0x1000029
    6b4c:	fa                   	cli    
    6b4d:	27                   	(bad)  
    6b4e:	71 00                	jno    6b50 <stivale_hdr-0x1f94b0>
    6b50:	00 00                	add    BYTE PTR [rax],al
    6b52:	03 91 d8 7e 00 1c    	add    edx,DWORD PTR [rcx+0x1c007ed8]
    6b58:	11 60 20             	adc    DWORD PTR [rax+0x20],esp
    6b5b:	00 00                	add    BYTE PTR [rax],al
    6b5d:	00 00                	add    BYTE PTR [rax],al
    6b5f:	00 b3 00 00 00 00    	add    BYTE PTR [rbx+0x0],dh
    6b65:	00 00                	add    BYTE PTR [rax],al
    6b67:	00 5c 04 00          	add    BYTE PTR [rsp+rax*1+0x0],bl
    6b6b:	00 14 bc             	add    BYTE PTR [rsp+rdi*4],dl
    6b6e:	29 00                	sub    DWORD PTR [rax],eax
    6b70:	00 01                	add    BYTE PTR [rcx],al
    6b72:	01 01                	add    DWORD PTR [rcx],eax
    6b74:	24 89                	and    al,0x89
    6b76:	00 00                	add    BYTE PTR [rax],al
    6b78:	00 03                	add    BYTE PTR [rbx],al
    6b7a:	91                   	xchg   ecx,eax
    6b7b:	f8                   	clc    
    6b7c:	7e 00                	jle    6b7e <stivale_hdr-0x1f9482>
    6b7e:	1c c4                	sbb    al,0xc4
    6b80:	60                   	(bad)  
    6b81:	20 00                	and    BYTE PTR [rax],al
    6b83:	00 00                	add    BYTE PTR [rax],al
    6b85:	00 00                	add    BYTE PTR [rax],al
    6b87:	b0 00                	mov    al,0x0
    6b89:	00 00                	add    BYTE PTR [rax],al
    6b8b:	00 00                	add    BYTE PTR [rax],al
    6b8d:	00 00                	add    BYTE PTR [rax],al
    6b8f:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    6b93:	14 bc                	adc    al,0xbc
    6b95:	29 00                	sub    DWORD PTR [rax],eax
    6b97:	00 01                	add    BYTE PTR [rcx],al
    6b99:	08 01                	or     BYTE PTR [rcx],al
    6b9b:	27                   	(bad)  
    6b9c:	7d 00                	jge    6b9e <stivale_hdr-0x1f9462>
    6b9e:	00 00                	add    BYTE PTR [rax],al
    6ba0:	03 91 f0 7e 00 1c    	add    edx,DWORD PTR [rcx+0x1c007ef0]
    6ba6:	ca 61 20             	retf   0x2061
    6ba9:	00 00                	add    BYTE PTR [rax],al
    6bab:	00 00                	add    BYTE PTR [rax],al
    6bad:	00 b2 00 00 00 00    	add    BYTE PTR [rdx+0x0],dh
    6bb3:	00 00                	add    BYTE PTR [rax],al
    6bb5:	00 aa 04 00 00 14    	add    BYTE PTR [rdx+0x14000004],ch
    6bbb:	bc 29 00 00 01       	mov    esp,0x1000029
    6bc0:	19 01                	sbb    DWORD PTR [rcx],eax
    6bc2:	1d 3b 00 00 00       	sbb    eax,0x3b
    6bc7:	03 91 80 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007f80]
    6bcd:	7c 62                	jl     6c31 <stivale_hdr-0x1f93cf>
    6bcf:	20 00                	and    BYTE PTR [rax],al
    6bd1:	00 00                	add    BYTE PTR [rax],al
    6bd3:	00 00                	add    BYTE PTR [rax],al
    6bd5:	b2 00                	mov    dl,0x0
    6bd7:	00 00                	add    BYTE PTR [rax],al
    6bd9:	00 00                	add    BYTE PTR [rax],al
    6bdb:	00 00                	add    BYTE PTR [rax],al
    6bdd:	d1 04 00             	rol    DWORD PTR [rax+rax*1],1
    6be0:	00 14 bc             	add    BYTE PTR [rsp+rdi*4],dl
    6be3:	29 00                	sub    DWORD PTR [rax],eax
    6be5:	00 01                	add    BYTE PTR [rcx],al
    6be7:	20 01                	and    BYTE PTR [rcx],al
    6be9:	25 2d 00 00 00       	and    eax,0x2d
    6bee:	03 91 85 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007f85]
    6bf4:	2e 63 20             	movsxd esp,DWORD PTR cs:[rax]
    6bf7:	00 00                	add    BYTE PTR [rax],al
    6bf9:	00 00                	add    BYTE PTR [rax],al
    6bfb:	00 b3 00 00 00 00    	add    BYTE PTR [rbx+0x0],dh
    6c01:	00 00                	add    BYTE PTR [rax],al
    6c03:	00 f8                	add    al,bh
    6c05:	04 00                	add    al,0x0
    6c07:	00 14 bc             	add    BYTE PTR [rsp+rdi*4],dl
    6c0a:	29 00                	sub    DWORD PTR [rax],eax
    6c0c:	00 01                	add    BYTE PTR [rcx],al
    6c0e:	27                   	(bad)  
    6c0f:	01 23                	add    DWORD PTR [rbx],esp
    6c11:	34 00                	xor    al,0x0
    6c13:	00 00                	add    BYTE PTR [rax],al
    6c15:	03 91 86 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007f86]
    6c1b:	e1 63                	loope  6c80 <stivale_hdr-0x1f9380>
    6c1d:	20 00                	and    BYTE PTR [rax],al
    6c1f:	00 00                	add    BYTE PTR [rax],al
    6c21:	00 00                	add    BYTE PTR [rax],al
    6c23:	b3 00                	mov    bl,0x0
    6c25:	00 00                	add    BYTE PTR [rax],al
    6c27:	00 00                	add    BYTE PTR [rax],al
    6c29:	00 00                	add    BYTE PTR [rax],al
    6c2b:	1f                   	(bad)  
    6c2c:	05 00 00 14 bc       	add    eax,0xbc140000
    6c31:	29 00                	sub    DWORD PTR [rax],eax
    6c33:	00 01                	add    BYTE PTR [rcx],al
    6c35:	2e 01 1e             	add    DWORD PTR cs:[rsi],ebx
    6c38:	42 00 00             	rex.X add BYTE PTR [rax],al
    6c3b:	00 03                	add    BYTE PTR [rbx],al
    6c3d:	91                   	xchg   ecx,eax
    6c3e:	90                   	nop
    6c3f:	7f 00                	jg     6c41 <stivale_hdr-0x1f93bf>
    6c41:	1c 94                	sbb    al,0x94
    6c43:	64 20 00             	and    BYTE PTR fs:[rax],al
    6c46:	00 00                	add    BYTE PTR [rax],al
    6c48:	00 00                	add    BYTE PTR [rax],al
    6c4a:	b3 00                	mov    bl,0x0
    6c4c:	00 00                	add    BYTE PTR [rax],al
    6c4e:	00 00                	add    BYTE PTR [rax],al
    6c50:	00 00                	add    BYTE PTR [rax],al
    6c52:	46 05 00 00 14 bc    	rex.RX add eax,0xbc140000
    6c58:	29 00                	sub    DWORD PTR [rax],eax
    6c5a:	00 01                	add    BYTE PTR [rcx],al
    6c5c:	35 01 23 95 00       	xor    eax,0x952301
    6c61:	00 00                	add    BYTE PTR [rax],al
    6c63:	03 91 98 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007f98]
    6c69:	47                   	rex.RXB
    6c6a:	65 20 00             	and    BYTE PTR gs:[rax],al
    6c6d:	00 00                	add    BYTE PTR [rax],al
    6c6f:	00 00                	add    BYTE PTR [rax],al
    6c71:	b3 00                	mov    bl,0x0
    6c73:	00 00                	add    BYTE PTR [rax],al
    6c75:	00 00                	add    BYTE PTR [rax],al
    6c77:	00 00                	add    BYTE PTR [rax],al
    6c79:	6d                   	ins    DWORD PTR es:[rdi],dx
    6c7a:	05 00 00 14 bc       	add    eax,0xbc140000
    6c7f:	29 00                	sub    DWORD PTR [rax],eax
    6c81:	00 01                	add    BYTE PTR [rcx],al
    6c83:	3c 01                	cmp    al,0x1
    6c85:	22 65 00             	and    ah,BYTE PTR [rbp+0x0]
    6c88:	00 00                	add    BYTE PTR [rax],al
    6c8a:	03 91 88 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007f88]
    6c90:	fa                   	cli    
    6c91:	65 20 00             	and    BYTE PTR gs:[rax],al
    6c94:	00 00                	add    BYTE PTR [rax],al
    6c96:	00 00                	add    BYTE PTR [rax],al
    6c98:	b3 00                	mov    bl,0x0
    6c9a:	00 00                	add    BYTE PTR [rax],al
    6c9c:	00 00                	add    BYTE PTR [rax],al
    6c9e:	00 00                	add    BYTE PTR [rax],al
    6ca0:	94                   	xchg   esp,eax
    6ca1:	05 00 00 14 bc       	add    eax,0xbc140000
    6ca6:	29 00                	sub    DWORD PTR [rax],eax
    6ca8:	00 01                	add    BYTE PTR [rcx],al
    6caa:	43 01 20             	rex.XB add DWORD PTR [r8],esp
    6cad:	89 00                	mov    DWORD PTR [rax],eax
    6caf:	00 00                	add    BYTE PTR [rax],al
    6cb1:	03 91 a8 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007fa8]
    6cb7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6cb8:	66 20 00             	data16 and BYTE PTR [rax],al
    6cbb:	00 00                	add    BYTE PTR [rax],al
    6cbd:	00 00                	add    BYTE PTR [rax],al
    6cbf:	b0 00                	mov    al,0x0
    6cc1:	00 00                	add    BYTE PTR [rax],al
    6cc3:	00 00                	add    BYTE PTR [rax],al
    6cc5:	00 00                	add    BYTE PTR [rax],al
    6cc7:	bb 05 00 00 14       	mov    ebx,0x14000005
    6ccc:	bc 29 00 00 01       	mov    esp,0x1000029
    6cd1:	4a 01 23             	rex.WX add QWORD PTR [rbx],rsp
    6cd4:	7d 00                	jge    6cd6 <stivale_hdr-0x1f932a>
    6cd6:	00 00                	add    BYTE PTR [rax],al
    6cd8:	03 91 a0 7f 00 1c    	add    edx,DWORD PTR [rcx+0x1c007fa0]
    6cde:	ec                   	in     al,dx
    6cdf:	69 20 00 00 00 00    	imul   esp,DWORD PTR [rax],0x0
    6ce5:	00 70 00             	add    BYTE PTR [rax+0x0],dh
    6ce8:	00 00                	add    BYTE PTR [rax],al
    6cea:	00 00                	add    BYTE PTR [rax],al
    6cec:	00 00                	add    BYTE PTR [rax],al
    6cee:	e0 05                	loopne 6cf5 <stivale_hdr-0x1f930b>
    6cf0:	00 00                	add    BYTE PTR [rax],al
    6cf2:	15 61 00 01 71       	adc    eax,0x71010061
    6cf7:	01 22                	add    DWORD PTR [rdx],esp
    6cf9:	5a                   	pop    rdx
    6cfa:	06                   	(bad)  
    6cfb:	00 00                	add    BYTE PTR [rax],al
    6cfd:	03 91 b0 7f 00 1d    	add    edx,DWORD PTR [rcx+0x1d007fb0]
    6d03:	30 01                	xor    BYTE PTR [rcx],al
    6d05:	00 00                	add    BYTE PTR [rax],al
    6d07:	14 b3                	adc    al,0xb3
    6d09:	29 00                	sub    DWORD PTR [rax],eax
    6d0b:	00 01                	add    BYTE PTR [rcx],al
    6d0d:	94                   	xchg   esp,eax
    6d0e:	01 1c 60             	add    DWORD PTR [rax+riz*2],ebx
    6d11:	06                   	(bad)  
    6d12:	00 00                	add    BYTE PTR [rax],al
    6d14:	02 91 40 14 29 2a    	add    dl,BYTE PTR [rcx+0x2a291440]
    6d1a:	00 00                	add    BYTE PTR [rax],al
    6d1c:	01 9b 01 19 3b 00    	add    DWORD PTR [rbx+0x3b1901],ebx
    6d22:	00 00                	add    BYTE PTR [rax],al
    6d24:	03 91 bc 7f 14 50    	add    edx,DWORD PTR [rcx+0x50147fbc]
    6d2a:	29 00                	sub    DWORD PTR [rax],eax
    6d2c:	00 01                	add    BYTE PTR [rcx],al
    6d2e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6d2f:	01 1e                	add    DWORD PTR [rsi],ebx
    6d31:	65 00 00             	add    BYTE PTR gs:[rax],al
    6d34:	00 03                	add    BYTE PTR [rbx],al
    6d36:	91                   	xchg   ecx,eax
    6d37:	c8 7e 1a d2          	enter  0x1a7e,0xd2
    6d3b:	6d                   	ins    DWORD PTR es:[rdi],dx
    6d3c:	20 00                	and    BYTE PTR [rax],al
    6d3e:	00 00                	add    BYTE PTR [rax],al
    6d40:	00 00                	add    BYTE PTR [rax],al
    6d42:	2b 00                	sub    eax,DWORD PTR [rax]
    6d44:	00 00                	add    BYTE PTR [rax],al
    6d46:	00 00                	add    BYTE PTR [rax],al
    6d48:	00 00                	add    BYTE PTR [rax],al
    6d4a:	15 69 00 01 aa       	adc    eax,0xaa010069
    6d4f:	01 1e                	add    DWORD PTR [rsi],ebx
    6d51:	3b 00                	cmp    eax,DWORD PTR [rax]
    6d53:	00 00                	add    BYTE PTR [rax],al
    6d55:	03 91 b8 7f 00 00    	add    edx,DWORD PTR [rcx+0x7fb8]
    6d5b:	00 00                	add    BYTE PTR [rax],al
    6d5d:	00 00                	add    BYTE PTR [rax],al
    6d5f:	16                   	(bad)  
    6d60:	08 cd                	or     ch,cl
    6d62:	00 00                	add    BYTE PTR [rax],al
    6d64:	00 07                	add    BYTE PTR [rdi],al
    6d66:	3b 01                	cmp    eax,DWORD PTR [rcx]
    6d68:	00 00                	add    BYTE PTR [rax],al
    6d6a:	53                   	push   rbx
    6d6b:	06                   	(bad)  
    6d6c:	00 00                	add    BYTE PTR [rax],al
    6d6e:	08 5e 00             	or     BYTE PTR [rsi+0x0],bl
    6d71:	00 00                	add    BYTE PTR [rax],al
    6d73:	ff 00                	inc    DWORD PTR [rax]
    6d75:	02 08                	add    cl,BYTE PTR [rax]
    6d77:	07                   	(bad)  
    6d78:	39 29                	cmp    DWORD PTR [rcx],ebp
    6d7a:	00 00                	add    BYTE PTR [rax],al
    6d7c:	16                   	(bad)  
    6d7d:	08 3b                	or     BYTE PTR [rbx],bh
    6d7f:	00 00                	add    BYTE PTR [rax],al
    6d81:	00 02                	add    BYTE PTR [rdx],al
    6d83:	08 04 94             	or     BYTE PTR [rsp+rdx*4],al
    6d86:	01 00                	add    DWORD PTR [rax],eax
    6d88:	00 1e                	add    BYTE PTR [rsi],bl
    6d8a:	d0 2a                	shr    BYTE PTR [rdx],1
    6d8c:	00 00                	add    BYTE PTR [rax],al
    6d8e:	01 50 06             	add    DWORD PTR [rax+0x6],edx
    6d91:	13 2a                	adc    ebp,DWORD PTR [rdx]
    6d93:	00 00                	add    BYTE PTR [rax],al
    6d95:	1c 55                	sbb    al,0x55
    6d97:	20 00                	and    BYTE PTR [rax],al
    6d99:	00 00                	add    BYTE PTR [rax],al
    6d9b:	00 00                	add    BYTE PTR [rax],al
    6d9d:	55                   	push   rbp
    6d9e:	00 00                	add    BYTE PTR [rax],al
    6da0:	00 00                	add    BYTE PTR [rax],al
    6da2:	00 00                	add    BYTE PTR [rax],al
    6da4:	00 01                	add    BYTE PTR [rcx],al
    6da6:	9c                   	pushf  
    6da7:	c3                   	ret    
    6da8:	06                   	(bad)  
    6da9:	00 00                	add    BYTE PTR [rax],al
    6dab:	1f                   	(bad)  
    6dac:	63 00                	movsxd eax,DWORD PTR [rax]
    6dae:	01 50 1a             	add    DWORD PTR [rax+0x1a],edx
    6db1:	c3                   	ret    
    6db2:	06                   	(bad)  
    6db3:	00 00                	add    BYTE PTR [rax],al
    6db5:	02 91 58 1f 61 00    	add    dl,BYTE PTR [rcx+0x611f58]
    6dbb:	01 50 22             	add    DWORD PTR [rax+0x22],edx
    6dbe:	5a                   	pop    rdx
    6dbf:	06                   	(bad)  
    6dc0:	00 00                	add    BYTE PTR [rax],al
    6dc2:	02 91 50 1a 2c 55    	add    dl,BYTE PTR [rcx+0x552c1a50]
    6dc8:	20 00                	and    BYTE PTR [rax],al
    6dca:	00 00                	add    BYTE PTR [rax],al
    6dcc:	00 00                	add    BYTE PTR [rax],al
    6dce:	42 00 00             	rex.X add BYTE PTR [rax],al
    6dd1:	00 00                	add    BYTE PTR [rax],al
    6dd3:	00 00                	add    BYTE PTR [rax],al
    6dd5:	00 1b                	add    BYTE PTR [rbx],bl
    6dd7:	69 00 01 51 0e 3b    	imul   eax,DWORD PTR [rax],0x3b0e5101
    6ddd:	00 00                	add    BYTE PTR [rax],al
    6ddf:	00 02                	add    BYTE PTR [rdx],al
    6de1:	91                   	xchg   ecx,eax
    6de2:	6c                   	ins    BYTE PTR es:[rdi],dx
    6de3:	00 00                	add    BYTE PTR [rax],al
    6de5:	16                   	(bad)  
    6de6:	08 3b                	or     BYTE PTR [rbx],bh
    6de8:	01 00                	add    DWORD PTR [rax],eax
    6dea:	00 1e                	add    BYTE PTR [rsi],bl
    6dec:	c4                   	(bad)  
    6ded:	29 00                	sub    DWORD PTR [rax],eax
    6def:	00 01                	add    BYTE PTR [rcx],al
    6df1:	4b 06                	rex.WXB (bad) 
    6df3:	7a 29                	jp     6e1e <stivale_hdr-0x1f91e2>
    6df5:	00 00                	add    BYTE PTR [rax],al
    6df7:	e9 54 20 00 00       	jmp    8e50 <stivale_hdr-0x1f71b0>
    6dfc:	00 00                	add    BYTE PTR [rax],al
    6dfe:	00 33                	add    BYTE PTR [rbx],dh
    6e00:	00 00                	add    BYTE PTR [rax],al
    6e02:	00 00                	add    BYTE PTR [rax],al
    6e04:	00 00                	add    BYTE PTR [rax],al
    6e06:	00 01                	add    BYTE PTR [rcx],al
    6e08:	9c                   	pushf  
    6e09:	06                   	(bad)  
    6e0a:	07                   	(bad)  
    6e0b:	00 00                	add    BYTE PTR [rax],al
    6e0d:	1f                   	(bad)  
    6e0e:	63 00                	movsxd eax,DWORD PTR [rax]
    6e10:	01 4b 1c             	add    DWORD PTR [rbx+0x1c],ecx
    6e13:	3b 01                	cmp    eax,DWORD PTR [rcx]
    6e15:	00 00                	add    BYTE PTR [rax],al
    6e17:	02 91 6c 1f 61 00    	add    dl,BYTE PTR [rcx+0x611f6c]
    6e1d:	01 4b 24             	add    DWORD PTR [rbx+0x24],ecx
    6e20:	5a                   	pop    rdx
    6e21:	06                   	(bad)  
    6e22:	00 00                	add    BYTE PTR [rax],al
    6e24:	02 91 60 00 17 0d    	add    dl,BYTE PTR [rcx+0xd170060]
    6e2a:	2b 00                	sub    eax,DWORD PTR [rax]
    6e2c:	00 01                	add    BYTE PTR [rcx],al
    6e2e:	0b 07                	or     eax,DWORD PTR [rdi]
    6e30:	5a                   	pop    rdx
    6e31:	29 00                	sub    DWORD PTR [rax],eax
    6e33:	00 c3                	add    bl,al
    6e35:	06                   	(bad)  
    6e36:	00 00                	add    BYTE PTR [rax],al
    6e38:	b2 50                	mov    dl,0x50
    6e3a:	20 00                	and    BYTE PTR [rax],al
    6e3c:	00 00                	add    BYTE PTR [rax],al
    6e3e:	00 00                	add    BYTE PTR [rax],al
    6e40:	37                   	(bad)  
    6e41:	04 00                	add    al,0x0
    6e43:	00 00                	add    BYTE PTR [rax],al
    6e45:	00 00                	add    BYTE PTR [rax],al
    6e47:	00 01                	add    BYTE PTR [rcx],al
    6e49:	9c                   	pushf  
    6e4a:	04 08                	add    al,0x8
    6e4c:	00 00                	add    BYTE PTR [rax],al
    6e4e:	1f                   	(bad)  
    6e4f:	69 00 01 0b 1a 65    	imul   eax,DWORD PTR [rax],0x651a0b01
    6e55:	00 00                	add    BYTE PTR [rax],al
    6e57:	00 03                	add    BYTE PTR [rbx],al
    6e59:	91                   	xchg   ecx,eax
    6e5a:	98                   	cwde   
    6e5b:	7d 1f                	jge    6e7c <stivale_hdr-0x1f9184>
    6e5d:	62                   	(bad)  
    6e5e:	00 01                	add    BYTE PTR [rcx],al
    6e60:	0b 22                	or     esp,DWORD PTR [rdx]
    6e62:	c3                   	ret    
    6e63:	06                   	(bad)  
    6e64:	00 00                	add    BYTE PTR [rax],al
    6e66:	03 91 90 7d 18 1a    	add    edx,DWORD PTR [rcx+0x1a187d90]
    6e6c:	04 00                	add    al,0x0
    6e6e:	00 01                	add    BYTE PTR [rcx],al
    6e70:	0b 2b                	or     ebp,DWORD PTR [rbx]
    6e72:	3b 00                	cmp    eax,DWORD PTR [rax]
    6e74:	00 00                	add    BYTE PTR [rax],al
    6e76:	03 91 8c 7d 18 16    	add    edx,DWORD PTR [rcx+0x16187d8c]
    6e7c:	29 00                	sub    DWORD PTR [rax],eax
    6e7e:	00 01                	add    BYTE PTR [rcx],al
    6e80:	0b 36                	or     esi,DWORD PTR [rsi]
    6e82:	5c                   	pop    rsp
    6e83:	01 00                	add    DWORD PTR [rax],eax
    6e85:	00 03                	add    BYTE PTR [rbx],al
    6e87:	91                   	xchg   ecx,eax
    6e88:	88 7d 18             	mov    BYTE PTR [rbp+0x18],bh
    6e8b:	97                   	xchg   edi,eax
    6e8c:	2a 00                	sub    al,BYTE PTR [rax]
    6e8e:	00 01                	add    BYTE PTR [rcx],al
    6e90:	0b 4d 5c             	or     ecx,DWORD PTR [rbp+0x5c]
    6e93:	01 00                	add    DWORD PTR [rax],eax
    6e95:	00 03                	add    BYTE PTR [rbx],al
    6e97:	91                   	xchg   ecx,eax
    6e98:	84 7d 18             	test   BYTE PTR [rbp+0x18],bh
    6e9b:	be 2a 00 00 01       	mov    esi,0x100002a
    6ea0:	0c 15                	or     al,0x15
    6ea2:	3b 00                	cmp    eax,DWORD PTR [rax]
    6ea4:	00 00                	add    BYTE PTR [rax],al
    6ea6:	03 91 80 7d 18 c8    	add    edx,DWORD PTR [rcx-0x37e78280]
    6eac:	2a 00                	sub    al,BYTE PTR [rax]
    6eae:	00 01                	add    BYTE PTR [rcx],al
    6eb0:	0c 25                	or     al,0x25
    6eb2:	5c                   	pop    rsp
    6eb3:	01 00                	add    DWORD PTR [rax],eax
    6eb5:	00 03                	add    BYTE PTR [rbx],al
    6eb7:	91                   	xchg   ecx,eax
    6eb8:	fc                   	cld    
    6eb9:	7c 18                	jl     6ed3 <stivale_hdr-0x1f912d>
    6ebb:	86 2a                	xchg   BYTE PTR [rdx],ch
    6ebd:	00 00                	add    BYTE PTR [rax],al
    6ebf:	01 0c 33             	add    DWORD PTR [rbx+rsi*1],ecx
    6ec2:	5c                   	pop    rsp
    6ec3:	01 00                	add    DWORD PTR [rax],eax
    6ec5:	00 03                	add    BYTE PTR [rbx],al
    6ec7:	91                   	xchg   ecx,eax
    6ec8:	f8                   	clc    
    6ec9:	7c 19                	jl     6ee4 <stivale_hdr-0x1f911c>
    6ecb:	9b                   	fwait
    6ecc:	1f                   	(bad)  
    6ecd:	00 00                	add    BYTE PTR [rax],al
    6ecf:	01 0e                	add    DWORD PTR [rsi],ecx
    6ed1:	0a 04 08             	or     al,BYTE PTR [rax+rcx*1]
    6ed4:	00 00                	add    BYTE PTR [rax],al
    6ed6:	03 91 a0 7f 1b 70    	add    edx,DWORD PTR [rcx+0x701b7fa0]
    6edc:	00 01                	add    BYTE PTR [rcx],al
    6ede:	19 0b                	sbb    DWORD PTR [rbx],ecx
    6ee0:	c3                   	ret    
    6ee1:	06                   	(bad)  
    6ee2:	00 00                	add    BYTE PTR [rax],al
    6ee4:	02 91 58 19 31 29    	add    dl,BYTE PTR [rcx+0x29311958]
    6eea:	00 00                	add    BYTE PTR [rax],al
    6eec:	01 23                	add    DWORD PTR [rbx],esp
    6eee:	0e                   	(bad)  
    6eef:	65 00 00             	add    BYTE PTR gs:[rax],al
    6ef2:	00 02                	add    BYTE PTR [rdx],al
    6ef4:	91                   	xchg   ecx,eax
    6ef5:	50                   	push   rax
    6ef6:	19 01                	sbb    DWORD PTR [rcx],eax
    6ef8:	29 00                	sub    DWORD PTR [rax],eax
    6efa:	00 01                	add    BYTE PTR [rcx],al
    6efc:	2f                   	(bad)  
    6efd:	09 3b                	or     DWORD PTR [rbx],edi
    6eff:	00 00                	add    BYTE PTR [rax],al
    6f01:	00 02                	add    BYTE PTR [rdx],al
    6f03:	91                   	xchg   ecx,eax
    6f04:	4c 1a 0f             	rex.WR sbb r9b,BYTE PTR [rdi]
    6f07:	53                   	push   rbx
    6f08:	20 00                	and    BYTE PTR [rax],al
    6f0a:	00 00                	add    BYTE PTR [rax],al
    6f0c:	00 00                	add    BYTE PTR [rax],al
    6f0e:	cd 01                	int    0x1
    6f10:	00 00                	add    BYTE PTR [rax],al
    6f12:	00 00                	add    BYTE PTR [rax],al
    6f14:	00 00                	add    BYTE PTR [rax],al
    6f16:	1b 61 00             	sbb    esp,DWORD PTR [rcx+0x0]
    6f19:	01 3c 0e             	add    DWORD PTR [rsi+rcx*1],edi
    6f1c:	43 06                	rex.XB (bad) 
    6f1e:	00 00                	add    BYTE PTR [rax],al
    6f20:	03 91 a0 7d 00 00    	add    edx,DWORD PTR [rcx+0x7da0]
    6f26:	20 3b                	and    BYTE PTR [rbx],bh
    6f28:	01 00                	add    DWORD PTR [rax],eax
    6f2a:	00 08                	add    BYTE PTR [rax],cl
    6f2c:	5e                   	pop    rsi
    6f2d:	00 00                	add    BYTE PTR [rax],al
    6f2f:	00 1f                	add    BYTE PTR [rdi],bl
    6f31:	00 00                	add    BYTE PTR [rax],al
    6f33:	26 05 00 00 04 00    	es add eax,0x40000
    6f39:	74 25                	je     6f60 <stivale_hdr-0x1f90a0>
    6f3b:	00 00                	add    BYTE PTR [rax],al
    6f3d:	08 01                	or     BYTE PTR [rcx],al
    6f3f:	7c 00                	jl     6f41 <stivale_hdr-0x1f90bf>
    6f41:	00 00                	add    BYTE PTR [rax],al
    6f43:	04 da                	add    al,0xda
    6f45:	2b 00                	sub    eax,DWORD PTR [rax]
    6f47:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    6f4a:	00 00                	add    BYTE PTR [rax],al
    6f4c:	28 70 20             	sub    BYTE PTR [rax+0x20],dh
    6f4f:	00 00                	add    BYTE PTR [rax],al
    6f51:	00 00                	add    BYTE PTR [rax],al
    6f53:	00 b1 02 00 00 00    	add    BYTE PTR [rcx+0x2],dh
    6f59:	00 00                	add    BYTE PTR [rax],al
    6f5b:	00 43 30             	add    BYTE PTR [rbx+0x30],al
    6f5e:	00 00                	add    BYTE PTR [rax],al
    6f60:	02 08                	add    cl,BYTE PTR [rax]
    6f62:	05 6a 01 00 00       	add    eax,0x16a
    6f67:	02 08                	add    cl,BYTE PTR [rax]
    6f69:	07                   	(bad)  
    6f6a:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    6f6d:	00 02                	add    BYTE PTR [rdx],al
    6f6f:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 70da <stivale_hdr-0x1f8f26>
    6f75:	02 10                	add    dl,BYTE PTR [rax]
    6f77:	04 8f                	add    al,0x8f
    6f79:	01 00                	add    DWORD PTR [rax],eax
    6f7b:	00 03                	add    BYTE PTR [rbx],al
    6f7d:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    6f80:	00 02                	add    BYTE PTR [rdx],al
    6f82:	01 08                	add    DWORD PTR [rax],ecx
    6f84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f85:	00 00                	add    BYTE PTR [rax],al
    6f87:	00 02                	add    BYTE PTR [rdx],al
    6f89:	02 07                	add    al,BYTE PTR [rdi]
    6f8b:	9b                   	fwait
    6f8c:	01 00                	add    DWORD PTR [rax],eax
    6f8e:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
    6f91:	08 00                	or     BYTE PTR [rax],al
    6f93:	00 03                	add    BYTE PTR [rbx],al
    6f95:	06                   	(bad)  
    6f96:	1d 68 00 00 00       	sbb    eax,0x68
    6f9b:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    6f9e:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    6fa1:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
    6fa4:	01 00                	add    DWORD PTR [rax],eax
    6fa6:	00 03                	add    BYTE PTR [rbx],al
    6fa8:	07                   	(bad)  
    6fa9:	1d 34 00 00 00       	sbb    eax,0x34
    6fae:	02 10                	add    dl,BYTE PTR [rax]
    6fb0:	07                   	(bad)  
    6fb1:	00 00                	add    BYTE PTR [rax],al
    6fb3:	00 00                	add    BYTE PTR [rax],al
    6fb5:	04 4c                	add    al,0x4c
    6fb7:	01 00                	add    DWORD PTR [rax],eax
    6fb9:	00 03                	add    BYTE PTR [rbx],al
    6fbb:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 7016 <stivale_hdr-0x1f8fea>
    6fc1:	04 e5                	add    al,0xe5
    6fc3:	02 00                	add    al,BYTE PTR [rax]
    6fc5:	00 03                	add    BYTE PTR [rbx],al
    6fc7:	0c 1d                	or     al,0x1d
    6fc9:	68 00 00 00 04       	push   0x4000000
    6fce:	25 00 00 00 03       	and    eax,0x3000000
    6fd3:	0d 1d 34 00 00       	or     eax,0x341d
    6fd8:	00 05 9a 00 00 00    	add    BYTE PTR [rip+0x9a],al        # 7078 <stivale_hdr-0x1f8f88>
    6fde:	02 01                	add    al,BYTE PTR [rcx]
    6fe0:	06                   	(bad)  
    6fe1:	70 00                	jo     6fe3 <stivale_hdr-0x1f901d>
    6fe3:	00 00                	add    BYTE PTR [rax],al
    6fe5:	02 02                	add    al,BYTE PTR [rdx]
    6fe7:	05 73 01 00 00       	add    eax,0x173
    6fec:	06                   	(bad)  
    6fed:	04 05                	add    al,0x5
    6fef:	69 6e 74 00 02 10 05 	imul   ebp,DWORD PTR [rsi+0x74],0x5100200
    6ff6:	1b 01                	sbb    eax,DWORD PTR [rcx]
    6ff8:	00 00                	add    BYTE PTR [rax],al
    6ffa:	04 3b                	add    al,0x3b
    6ffc:	02 00                	add    al,BYTE PTR [rax]
    6ffe:	00 03                	add    BYTE PTR [rbx],al
    7000:	17                   	(bad)  
    7001:	1d 9a 00 00 00       	sbb    eax,0x9a
    7006:	04 8f                	add    al,0x8f
    7008:	22 00                	and    al,BYTE PTR [rax]
    700a:	00 03                	add    BYTE PTR [rbx],al
    700c:	19 1d 9a 00 00 00    	sbb    DWORD PTR [rip+0x9a],ebx        # 70ac <stivale_hdr-0x1f8f54>
    7012:	07                   	(bad)  
    7013:	73 79                	jae    708e <stivale_hdr-0x1f8f72>
    7015:	73 00                	jae    7017 <stivale_hdr-0x1f8fe9>
    7017:	05 04 0b f4 00       	add    eax,0xf40b04
    701c:	00 00                	add    BYTE PTR [rax],al
    701e:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
    7021:	00 00                	add    BYTE PTR [rax],al
    7023:	05 05 0f 00 02       	add    eax,0x2000f05
    7028:	01 06                	add    DWORD PTR [rsi],eax
    702a:	77 00                	ja     702c <stivale_hdr-0x1f8fd4>
    702c:	00 00                	add    BYTE PTR [rax],al
    702e:	09 4d 06             	or     DWORD PTR [rbp+0x6],ecx
    7031:	00 00                	add    BYTE PTR [rax],al
    7033:	10 04 2d 08 4a 01 00 	adc    BYTE PTR [rbp*1+0x14a08],al
    703a:	00 0a                	add    BYTE PTR [rdx],cl
    703c:	c5 01 00             	(bad)
    703f:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    7042:	0d d3 00 00 00       	or     eax,0xd3
    7047:	00 0a                	add    BYTE PTR [rdx],cl
    7049:	c3                   	ret    
    704a:	02 00                	add    al,BYTE PTR [rax]
    704c:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    704f:	0d 82 00 00 00       	or     eax,0x82
    7054:	08 0a                	or     BYTE PTR [rdx],cl
    7056:	53                   	push   rbx
    7057:	01 00                	add    DWORD PTR [rax],eax
    7059:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    705c:	0d 82 00 00 00       	or     eax,0x82
    7061:	0a 0a                	or     cl,BYTE PTR [rdx]
    7063:	12 00                	adc    al,BYTE PTR [rax]
    7065:	00 00                	add    BYTE PTR [rax],al
    7067:	04 31                	add    al,0x31
    7069:	0d 82 00 00 00       	or     eax,0x82
    706e:	0c 0a                	or     al,0xa
    7070:	59                   	pop    rcx
    7071:	00 00                	add    BYTE PTR [rax],al
    7073:	00 04 32             	add    BYTE PTR [rdx+rsi*1],al
    7076:	0d 82 00 00 00       	or     eax,0x82
    707b:	0e                   	(bad)  
    707c:	00 07                	add    BYTE PTR [rdi],al
    707e:	67 66 78 00          	addr32 data16 js 7082 <stivale_hdr-0x1f8f7e>
    7082:	01 08                	add    DWORD PTR [rax],ecx
    7084:	0b c1                	or     eax,ecx
    7086:	02 00                	add    al,BYTE PTR [rax]
    7088:	00 0b                	add    BYTE PTR [rbx],cl
    708a:	08 2d 00 00 01 0a    	or     BYTE PTR [rip+0xa010000],ch        # a017090 <__kernel_end+0x9e05090>
    7090:	18 75 04             	sbb    BYTE PTR [rbp+0x4],dh
    7093:	00 00                	add    BYTE PTR [rax],al
    7095:	c1 02 00             	rol    DWORD PTR [rdx],0x0
    7098:	00 0c 67             	add    BYTE PTR [rdi+riz*2],cl
    709b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    709c:	70 00                	jo     709e <stivale_hdr-0x1f8f62>
    709e:	01 0b                	add    DWORD PTR [rbx],ecx
    70a0:	22 51 07             	and    dl,BYTE PTR [rcx+0x7]
    70a3:	00 00                	add    BYTE PTR [rax],al
    70a5:	fb                   	sti    
    70a6:	00 00                	add    BYTE PTR [rax],al
    70a8:	00 0d a6 02 00 00    	add    BYTE PTR [rip+0x2a6],cl        # 7354 <stivale_hdr-0x1f8cac>
    70ae:	01 10                	add    DWORD PTR [rax],edx
    70b0:	0c 5c                	or     al,0x5c
    70b2:	02 00                	add    al,BYTE PTR [rax]
    70b4:	00 09                	add    BYTE PTR [rcx],cl
    70b6:	ff 26                	jmp    QWORD PTR [rsi]
    70b8:	00 00                	add    BYTE PTR [rax],al
    70ba:	08 01                	or     BYTE PTR [rcx],al
    70bc:	11 12                	adc    DWORD PTR [rdx],edx
    70be:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    70bf:	01 00                	add    DWORD PTR [rax],eax
    70c1:	00 0e                	add    BYTE PTR [rsi],cl
    70c3:	78 00                	js     70c5 <stivale_hdr-0x1f8f3b>
    70c5:	01 12                	add    DWORD PTR [rdx],edx
    70c7:	0b 8e 00 00 00 00    	or     ecx,DWORD PTR [rsi+0x0]
    70cd:	0e                   	(bad)  
    70ce:	79 00                	jns    70d0 <stivale_hdr-0x1f8f30>
    70d0:	01 13                	add    DWORD PTR [rbx],edx
    70d2:	0b 8e 00 00 00 04    	or     ecx,DWORD PTR [rsi+0x4000000]
    70d8:	00 09                	add    BYTE PTR [rcx],cl
    70da:	e4 27                	in     al,0x27
    70dc:	00 00                	add    BYTE PTR [rax],al
    70de:	08 01                	or     BYTE PTR [rcx],al
    70e0:	16                   	(bad)  
    70e1:	12 ca                	adc    cl,dl
    70e3:	01 00                	add    DWORD PTR [rax],eax
    70e5:	00 0e                	add    BYTE PTR [rsi],cl
    70e7:	77 00                	ja     70e9 <stivale_hdr-0x1f8f17>
    70e9:	01 17                	add    DWORD PTR [rdi],edx
    70eb:	0b 8e 00 00 00 00    	or     ecx,DWORD PTR [rsi+0x0]
    70f1:	0e                   	(bad)  
    70f2:	68 00 01 18 0b       	push   0xb180100
    70f7:	8e 00                	mov    es,WORD PTR [rax]
    70f9:	00 00                	add    BYTE PTR [rax],al
    70fb:	04 00                	add    al,0x0
    70fd:	04 fa                	add    al,0xfa
    70ff:	24 00                	and    al,0x0
    7101:	00 01                	add    BYTE PTR [rcx],al
    7103:	14 05                	adc    al,0x5
    7105:	82                   	(bad)  
    7106:	01 00                	add    DWORD PTR [rax],eax
    7108:	00 0f                	add    BYTE PTR [rdi],cl
    710a:	bc 2b 00 00 02       	mov    esp,0x200002b
    710f:	37                   	(bad)  
    7110:	1f                   	(bad)  
    7111:	2a 2b                	sub    ch,BYTE PTR [rbx]
    7113:	00 00                	add    BYTE PTR [rax],al
    7115:	ca 01 00             	retf   0x1
    7118:	00 f5                	add    ch,dh
    711a:	01 00                	add    DWORD PTR [rax],eax
    711c:	00 10                	add    BYTE PTR [rax],dl
    711e:	ca 01 00             	retf   0x1
    7121:	00 10                	add    BYTE PTR [rax],dl
    7123:	ca 01 00             	retf   0x1
    7126:	00 00                	add    BYTE PTR [rax],al
    7128:	11 b6 2c 00 00 02    	adc    DWORD PTR [rsi+0x200002c],esi
    712e:	18 06                	sbb    BYTE PTR [rsi],al
    7130:	64 2c 00             	fs sub al,0x0
    7133:	00 15 02 00 00 10    	add    BYTE PTR [rip+0x10000002],dl        # 1000713b <__kernel_end+0xfdf513b>
    7139:	ca 01 00             	retf   0x1
    713c:	00 10                	add    BYTE PTR [rax],dl
    713e:	15 02 00 00 10       	adc    eax,0x10000002
    7143:	8e 00                	mov    es,WORD PTR [rax]
    7145:	00 00                	add    BYTE PTR [rax],al
    7147:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
    714a:	27                   	(bad)  
    714b:	00 00                	add    BYTE PTR [rax],al
    714d:	01 19                	add    DWORD PTR [rcx],ebx
    714f:	05 a6 01 00 00       	add    eax,0x1a6
    7154:	0f d9 2c 00          	psubusw mm5,QWORD PTR [rax+rax*1]
    7158:	00 02                	add    BYTE PTR [rdx],al
    715a:	10 19                	adc    BYTE PTR [rcx],bl
    715c:	9f                   	lahf   
    715d:	2c 00                	sub    al,0x0
    715f:	00 15 02 00 00 40    	add    BYTE PTR [rip+0x40000002],dl        # 40007167 <__kernel_end+0x3fdf5167>
    7165:	02 00                	add    al,BYTE PTR [rax]
    7167:	00 10                	add    BYTE PTR [rax],dl
    7169:	8e 00                	mov    es,WORD PTR [rax]
    716b:	00 00                	add    BYTE PTR [rax],al
    716d:	10 8e 00 00 00 00    	adc    BYTE PTR [rsi+0x0],cl
    7173:	12 70 6f             	adc    dh,BYTE PTR [rax+0x6f]
    7176:	73 00                	jae    7178 <stivale_hdr-0x1f8e88>
    7178:	02 08                	add    cl,BYTE PTR [rax]
    717a:	1f                   	(bad)  
    717b:	8c 2b                	mov    WORD PTR [rbx],gs
    717d:	00 00                	add    BYTE PTR [rax],al
    717f:	ca 01 00             	retf   0x1
    7182:	00 10                	add    BYTE PTR [rax],dl
    7184:	8e 00                	mov    es,WORD PTR [rax]
    7186:	00 00                	add    BYTE PTR [rax],al
    7188:	10 8e 00 00 00 00    	adc    BYTE PTR [rsi+0x0],cl
    718e:	00 0d a7 2b 00 00    	add    BYTE PTR [rip+0x2ba7],cl        # 9d3b <stivale_hdr-0x1f62c5>
    7194:	01 0d 0c 80 02 00    	add    DWORD PTR [rip+0x2800c],ecx        # 2f1a6 <stivale_hdr-0x1d0e5a>
    719a:	00 13                	add    BYTE PTR [rbx],dl
    719c:	17                   	(bad)  
    719d:	2b 00                	sub    eax,DWORD PTR [rax]
    719f:	00 02                	add    BYTE PTR [rdx],al
    71a1:	40 01 07             	rex add DWORD PTR [rdi],eax
    71a4:	5c                   	pop    rsp
    71a5:	2b 00                	sub    eax,DWORD PTR [rax]
    71a7:	00 6f 00             	add    BYTE PTR [rdi+0x0],ch
    71aa:	00 00                	add    BYTE PTR [rax],al
    71ac:	10 f4                	adc    ah,dh
    71ae:	00 00                	add    BYTE PTR [rax],al
    71b0:	00 00                	add    BYTE PTR [rax],al
    71b2:	00 14 b5 2b 00 00 01 	add    BYTE PTR [rsi*4+0x100002b],dl
    71b9:	1f                   	(bad)  
    71ba:	0c 15                	or     al,0x15
    71bc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    71bd:	2b 00                	sub    eax,DWORD PTR [rax]
    71bf:	00 02                	add    BYTE PTR [rdx],al
    71c1:	32 06                	xor    al,BYTE PTR [rsi]
    71c3:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    71c6:	00 15 c8 2b 00 00    	add    BYTE PTR [rip+0x2bc8],dl        # 9d94 <stivale_hdr-0x1f626c>
    71cc:	02 2d 06 bb 2c 00    	add    ch,BYTE PTR [rip+0x2cbb06]        # 2d2cd8 <__kernel_end+0xc0cd8>
    71d2:	00 15 a2 2b 00 00    	add    BYTE PTR [rip+0x2ba2],dl        # 9d7a <stivale_hdr-0x1f6286>
    71d8:	02 28                	add    ch,BYTE PTR [rax]
    71da:	06                   	(bad)  
    71db:	f6 2b                	imul   BYTE PTR [rbx]
    71dd:	00 00                	add    BYTE PTR [rax],al
    71df:	16                   	(bad)  
    71e0:	f1                   	icebp  
    71e1:	27                   	(bad)  
    71e2:	00 00                	add    BYTE PTR [rax],al
    71e4:	01 21                	add    DWORD PTR [rcx],esp
    71e6:	16                   	(bad)  
    71e7:	10 ca                	adc    dl,cl
    71e9:	01 00                	add    DWORD PTR [rax],eax
    71eb:	00 10                	add    BYTE PTR [rax],dl
    71ed:	8e 00                	mov    es,WORD PTR [rax]
    71ef:	00 00                	add    BYTE PTR [rax],al
    71f1:	00 00                	add    BYTE PTR [rax],al
    71f3:	00 17                	add    BYTE PTR [rdi],dl
    71f5:	08 8e 00 00 00 18    	or     BYTE PTR [rsi+0x18000000],cl
    71fb:	66 01 00             	add    WORD PTR [rax],ax
    71fe:	00 02                	add    BYTE PTR [rdx],al
    7200:	05 16 09 03 c0       	add    eax,0xc0030916
    7205:	01 21                	add    DWORD PTR [rcx],esp
    7207:	00 00                	add    BYTE PTR [rax],al
    7209:	00 00                	add    BYTE PTR [rax],al
    720b:	00 18                	add    BYTE PTR [rax],bl
    720d:	56                   	push   rsi
    720e:	01 00                	add    DWORD PTR [rax],eax
    7210:	00 02                	add    BYTE PTR [rdx],al
    7212:	06                   	(bad)  
    7213:	0d 09 03 d0 01       	or     eax,0x1d00309
    7218:	21 00                	and    DWORD PTR [rax],eax
    721a:	00 00                	add    BYTE PTR [rax],al
    721c:	00 00                	add    BYTE PTR [rax],al
    721e:	19 a6 00 00 00 fb    	sbb    DWORD PTR [rsi-0x5000000],esp
    7224:	02 00                	add    al,BYTE PTR [rax]
    7226:	00 1a                	add    BYTE PTR [rdx],bl
    7228:	34 00                	xor    al,0x0
    722a:	00 00                	add    BYTE PTR [rax],al
    722c:	ff 00                	inc    DWORD PTR [rax]
    722e:	05 eb 02 00 00       	add    eax,0x2eb
    7233:	1b 80 2b 00 00 02    	sbb    eax,DWORD PTR [rax+0x200002b]
    7239:	3c 0e                	cmp    al,0xe
    723b:	fb                   	sti    
    723c:	02 00                	add    al,BYTE PTR [rax]
    723e:	00 09                	add    BYTE PTR [rcx],cl
    7240:	03 80 ab 20 00 00    	add    eax,DWORD PTR [rax+0x20ab]
    7246:	00 00                	add    BYTE PTR [rax],al
    7248:	00 1c 68             	add    BYTE PTR [rax+rbp*2],bl
    724b:	02 00                	add    al,BYTE PTR [rax]
    724d:	00 b1 72 20 00 00    	add    BYTE PTR [rcx+0x2072],dh
    7253:	00 00                	add    BYTE PTR [rax],al
    7255:	00 28                	add    BYTE PTR [rax],ch
    7257:	00 00                	add    BYTE PTR [rax],al
    7259:	00 00                	add    BYTE PTR [rax],al
    725b:	00 00                	add    BYTE PTR [rax],al
    725d:	00 01                	add    BYTE PTR [rcx],al
    725f:	9c                   	pushf  
    7260:	40 03 00             	rex add eax,DWORD PTR [rax]
    7263:	00 1d 63 00 02 40    	add    BYTE PTR [rip+0x40020063],bl        # 400272cc <__kernel_end+0x3fe152cc>
    7269:	01 2b                	add    DWORD PTR [rbx],ebp
    726b:	f4                   	hlt    
    726c:	00 00                	add    BYTE PTR [rax],al
    726e:	00 02                	add    BYTE PTR [rdx],al
    7270:	91                   	xchg   ecx,eax
    7271:	6c                   	ins    BYTE PTR es:[rdi],dx
    7272:	00 1e                	add    BYTE PTR [rsi],bl
    7274:	d6                   	(bad)  
    7275:	01 00                	add    DWORD PTR [rax],eax
    7277:	00 80 72 20 00 00    	add    BYTE PTR [rax+0x2072],al
    727d:	00 00                	add    BYTE PTR [rax],al
    727f:	00 31                	add    BYTE PTR [rcx],dh
    7281:	00 00                	add    BYTE PTR [rax],al
    7283:	00 00                	add    BYTE PTR [rax],al
    7285:	00 00                	add    BYTE PTR [rax],al
    7287:	00 01                	add    BYTE PTR [rcx],al
    7289:	9c                   	pushf  
    728a:	7a 03                	jp     728f <stivale_hdr-0x1f8d71>
    728c:	00 00                	add    BYTE PTR [rax],al
    728e:	1f                   	(bad)  
    728f:	5e                   	pop    rsi
    7290:	2c 00                	sub    al,0x0
    7292:	00 02                	add    BYTE PTR [rdx],al
    7294:	37                   	(bad)  
    7295:	56                   	push   rsi
    7296:	ca 01 00             	retf   0x1
    7299:	00 02                	add    BYTE PTR [rdx],al
    729b:	91                   	xchg   ecx,eax
    729c:	68 1f d4 2b 00       	push   0x2bd41f
    72a1:	00 02                	add    BYTE PTR [rdx],al
    72a3:	37                   	(bad)  
    72a4:	7b ca                	jnp    7270 <stivale_hdr-0x1f8d90>
    72a6:	01 00                	add    DWORD PTR [rax],eax
    72a8:	00 02                	add    BYTE PTR [rdx],al
    72aa:	91                   	xchg   ecx,eax
    72ab:	60                   	(bad)  
    72ac:	00 20                	add    BYTE PTR [rax],ah
    72ae:	88 02                	mov    BYTE PTR [rdx],al
    72b0:	00 00                	add    BYTE PTR [rax],al
    72b2:	43 72 20             	rex.XB jb 72d5 <stivale_hdr-0x1f8d2b>
    72b5:	00 00                	add    BYTE PTR [rax],al
    72b7:	00 00                	add    BYTE PTR [rax],al
    72b9:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 72bf <stivale_hdr-0x1f8d41>
    72bf:	00 00                	add    BYTE PTR [rax],al
    72c1:	00 01                	add    BYTE PTR [rcx],al
    72c3:	9c                   	pushf  
    72c4:	20 94 02 00 00 03 72 	and    BYTE PTR [rdx+rax*1+0x72030000],dl
    72cb:	20 00                	and    BYTE PTR [rax],al
    72cd:	00 00                	add    BYTE PTR [rax],al
    72cf:	00 00                	add    BYTE PTR [rax],al
    72d1:	40 00 00             	add    BYTE PTR [rax],al
    72d4:	00 00                	add    BYTE PTR [rax],al
    72d6:	00 00                	add    BYTE PTR [rax],al
    72d8:	00 01                	add    BYTE PTR [rcx],al
    72da:	9c                   	pushf  
    72db:	20 a0 02 00 00 c6    	and    BYTE PTR [rax-0x39fffffe],ah
    72e1:	71 20                	jno    7303 <stivale_hdr-0x1f8cfd>
    72e3:	00 00                	add    BYTE PTR [rax],al
    72e5:	00 00                	add    BYTE PTR [rax],al
    72e7:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 72ed <stivale_hdr-0x1f8d13>
    72ed:	00 00                	add    BYTE PTR [rax],al
    72ef:	00 01                	add    BYTE PTR [rcx],al
    72f1:	9c                   	pushf  
    72f2:	1e                   	(bad)  
    72f3:	f5                   	cmc    
    72f4:	01 00                	add    DWORD PTR [rax],eax
    72f6:	00 ab 70 20 00 00    	add    BYTE PTR [rbx+0x2070],ch
    72fc:	00 00                	add    BYTE PTR [rax],al
    72fe:	00 1b                	add    BYTE PTR [rbx],bl
    7300:	01 00                	add    DWORD PTR [rax],eax
    7302:	00 00                	add    BYTE PTR [rax],al
    7304:	00 00                	add    BYTE PTR [rax],al
    7306:	00 01                	add    BYTE PTR [rcx],al
    7308:	9c                   	pushf  
    7309:	69 04 00 00 1f 16 26 	imul   eax,DWORD PTR [rax+rax*1],0x26161f00
    7310:	00 00                	add    BYTE PTR [rax],al
    7312:	02 18                	add    bl,BYTE PTR [rax]
    7314:	36 ca 01 00          	ss retf 0x1
    7318:	00 03                	add    BYTE PTR [rbx],al
    731a:	91                   	xchg   ecx,eax
    731b:	b8 7f 1f 57 2c       	mov    eax,0x2c571f7f
    7320:	00 00                	add    BYTE PTR [rax],al
    7322:	02 18                	add    bl,BYTE PTR [rax]
    7324:	54                   	push   rsp
    7325:	15 02 00 00 03       	adc    eax,0x3000002
    732a:	91                   	xchg   ecx,eax
    732b:	b0 7f                	mov    al,0x7f
    732d:	1f                   	(bad)  
    732e:	c2 28 00             	ret    0x28
    7331:	00 02                	add    BYTE PTR [rdx],al
    7333:	18 63 8e             	sbb    BYTE PTR [rbx-0x72],ah
    7336:	00 00                	add    BYTE PTR [rax],al
    7338:	00 03                	add    BYTE PTR [rbx],al
    733a:	91                   	xchg   ecx,eax
    733b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    733c:	7f 1b                	jg     7359 <stivale_hdr-0x1f8ca7>
    733e:	0c 2c                	or     al,0x2c
    7340:	00 00                	add    BYTE PTR [rax],al
    7342:	02 1a                	add    bl,BYTE PTR [rdx]
    7344:	20 ca                	and    dl,cl
    7346:	01 00                	add    DWORD PTR [rax],eax
    7348:	00 02                	add    BYTE PTR [rdx],al
    734a:	91                   	xchg   ecx,eax
    734b:	48 1b 42 2c          	sbb    rax,QWORD PTR [rdx+0x2c]
    734f:	00 00                	add    BYTE PTR [rax],al
    7351:	02 1f                	add    bl,BYTE PTR [rdi]
    7353:	20 ca                	and    dl,cl
    7355:	01 00                	add    DWORD PTR [rax],eax
    7357:	00 02                	add    BYTE PTR [rdx],al
    7359:	91                   	xchg   ecx,eax
    735a:	40 21 22             	rex and DWORD PTR [rdx],esp
    735d:	71 20                	jno    737f <stivale_hdr-0x1f8c81>
    735f:	00 00                	add    BYTE PTR [rax],al
    7361:	00 00                	add    BYTE PTR [rax],al
    7363:	00 98 00 00 00 00    	add    BYTE PTR [rax+0x0],bl
    7369:	00 00                	add    BYTE PTR [rax],al
    736b:	00 22                	add    BYTE PTR [rdx],ah
    736d:	78 78                	js     73e7 <stivale_hdr-0x1f8c19>
    736f:	00 02                	add    BYTE PTR [rdx],al
    7371:	21 0c c7             	and    DWORD PTR [rdi+rax*8],ecx
    7374:	00 00                	add    BYTE PTR [rax],al
    7376:	00 02                	add    BYTE PTR [rdx],al
    7378:	91                   	xchg   ecx,eax
    7379:	58                   	pop    rax
    737a:	21 54 71 20          	and    DWORD PTR [rcx+rsi*2+0x20],edx
    737e:	00 00                	add    BYTE PTR [rax],al
    7380:	00 00                	add    BYTE PTR [rax],al
    7382:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
    7386:	00 00                	add    BYTE PTR [rax],al
    7388:	00 00                	add    BYTE PTR [rax],al
    738a:	00 22                	add    BYTE PTR [rdx],ah
    738c:	79 79                	jns    7407 <stivale_hdr-0x1f8bf9>
    738e:	00 02                	add    BYTE PTR [rdx],al
    7390:	22 0d c7 00 00 00    	and    cl,BYTE PTR [rip+0xc7]        # 745d <stivale_hdr-0x1f8ba3>
    7396:	02 91 50 00 00 00    	add    dl,BYTE PTR [rcx+0x50]
    739c:	1c 21                	sbb    al,0x21
    739e:	02 00                	add    al,BYTE PTR [rax]
    73a0:	00 8b 70 20 00 00    	add    BYTE PTR [rbx+0x2070],cl
    73a6:	00 00                	add    BYTE PTR [rax],al
    73a8:	00 20                	add    BYTE PTR [rax],ah
    73aa:	00 00                	add    BYTE PTR [rax],al
    73ac:	00 00                	add    BYTE PTR [rax],al
    73ae:	00 00                	add    BYTE PTR [rax],al
    73b0:	00 01                	add    BYTE PTR [rcx],al
    73b2:	9c                   	pushf  
    73b3:	ae                   	scas   al,BYTE PTR es:[rdi]
    73b4:	04 00                	add    al,0x0
    73b6:	00 23                	add    BYTE PTR [rbx],ah
    73b8:	77 00                	ja     73ba <stivale_hdr-0x1f8c46>
    73ba:	02 10                	add    dl,BYTE PTR [rax]
    73bc:	32 8e 00 00 00 02    	xor    cl,BYTE PTR [rsi+0x2000000]
    73c2:	91                   	xchg   ecx,eax
    73c3:	5c                   	pop    rsp
    73c4:	23 68 00             	and    ebp,DWORD PTR [rax+0x0]
    73c7:	02 10                	add    dl,BYTE PTR [rax]
    73c9:	3c 8e                	cmp    al,0x8e
    73cb:	00 00                	add    BYTE PTR [rax],al
    73cd:	00 02                	add    BYTE PTR [rdx],al
    73cf:	91                   	xchg   ecx,eax
    73d0:	58                   	pop    rax
    73d1:	1b 57 2c             	sbb    edx,DWORD PTR [rdi+0x2c]
    73d4:	00 00                	add    BYTE PTR [rax],al
    73d6:	02 12                	add    dl,BYTE PTR [rdx]
    73d8:	1a 15 02 00 00 02    	sbb    dl,BYTE PTR [rip+0x2000002]        # 20073e0 <__kernel_end+0x1df53e0>
    73de:	91                   	xchg   ecx,eax
    73df:	68 00 1c 40 02       	push   0x2401c00
    73e4:	00 00                	add    BYTE PTR [rax],al
    73e6:	6b 70 20 00          	imul   esi,DWORD PTR [rax+0x20],0x0
    73ea:	00 00                	add    BYTE PTR [rax],al
    73ec:	00 00                	add    BYTE PTR [rax],al
    73ee:	20 00                	and    BYTE PTR [rax],al
    73f0:	00 00                	add    BYTE PTR [rax],al
    73f2:	00 00                	add    BYTE PTR [rax],al
    73f4:	00 00                	add    BYTE PTR [rax],al
    73f6:	01 9c f3 04 00 00 23 	add    DWORD PTR [rbx+rsi*8+0x23000004],ebx
    73fd:	78 00                	js     73ff <stivale_hdr-0x1f8c01>
    73ff:	02 08                	add    cl,BYTE PTR [rax]
    7401:	37                   	(bad)  
    7402:	8e 00                	mov    es,WORD PTR [rax]
    7404:	00 00                	add    BYTE PTR [rax],al
    7406:	02 91 5c 23 79 00    	add    dl,BYTE PTR [rcx+0x79235c]
    740c:	02 08                	add    cl,BYTE PTR [rax]
    740e:	41 8e 00             	mov    es,WORD PTR [r8]
    7411:	00 00                	add    BYTE PTR [rax],al
    7413:	02 91 58 1b 16 26    	add    dl,BYTE PTR [rcx+0x26161b58]
    7419:	00 00                	add    BYTE PTR [rax],al
    741b:	02 0a                	add    cl,BYTE PTR [rdx]
    741d:	20 ca                	and    dl,cl
    741f:	01 00                	add    DWORD PTR [rax],eax
    7421:	00 02                	add    BYTE PTR [rdx],al
    7423:	91                   	xchg   ecx,eax
    7424:	68 00 24 ac 02       	push   0x2ac2400
    7429:	00 00                	add    BYTE PTR [rax],al
    742b:	28 70 20             	sub    BYTE PTR [rax+0x20],dh
    742e:	00 00                	add    BYTE PTR [rax],al
    7430:	00 00                	add    BYTE PTR [rax],al
    7432:	00 43 00             	add    BYTE PTR [rbx+0x0],al
    7435:	00 00                	add    BYTE PTR [rax],al
    7437:	00 00                	add    BYTE PTR [rax],al
    7439:	00 00                	add    BYTE PTR [rax],al
    743b:	01 9c 1f 16 26 00 00 	add    DWORD PTR [rdi+rbx*1+0x2616],ebx
    7442:	01 21                	add    DWORD PTR [rcx],esp
    7444:	3f                   	(bad)  
    7445:	ca 01 00             	retf   0x1
    7448:	00 02                	add    BYTE PTR [rdx],al
    744a:	91                   	xchg   ecx,eax
    744b:	68 1f f6 27 00       	push   0x27f61f
    7450:	00 01                	add    BYTE PTR [rcx],al
    7452:	21 4c 8e 00          	and    DWORD PTR [rsi+rcx*4+0x0],ecx
    7456:	00 00                	add    BYTE PTR [rax],al
    7458:	02 91 64 00 00 0d    	add    dl,BYTE PTR [rcx+0xd000064]
    745e:	10 00                	adc    BYTE PTR [rax],al
    7460:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    7463:	9b                   	fwait
    7464:	27                   	(bad)  
    7465:	00 00                	add    BYTE PTR [rax],al
    7467:	08 01                	or     BYTE PTR [rcx],al
    7469:	7c 00                	jl     746b <stivale_hdr-0x1f8b95>
    746b:	00 00                	add    BYTE PTR [rax],al
    746d:	04 46                	add    al,0x46
    746f:	33 00                	xor    eax,DWORD PTR [rax]
    7471:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    7474:	00 00                	add    BYTE PTR [rax],al
    7476:	d9 72 20             	fnstenv [rdx+0x20]
    7479:	00 00                	add    BYTE PTR [rax],al
    747b:	00 00                	add    BYTE PTR [rax],al
    747d:	00 a1 0a 00 00 00    	add    BYTE PTR [rcx+0xa],ah
    7483:	00 00                	add    BYTE PTR [rax],al
    7485:	00 54 32 00          	add    BYTE PTR [rdx+rsi*1+0x0],dl
    7489:	00 02                	add    BYTE PTR [rdx],al
    748b:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 75fb <stivale_hdr-0x1f8a05>
    7491:	02 08                	add    cl,BYTE PTR [rax]
    7493:	07                   	(bad)  
    7494:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    7497:	00 02                	add    BYTE PTR [rdx],al
    7499:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 7604 <stivale_hdr-0x1f89fc>
    749f:	02 10                	add    dl,BYTE PTR [rax]
    74a1:	04 8f                	add    al,0x8f
    74a3:	01 00                	add    DWORD PTR [rax],eax
    74a5:	00 03                	add    BYTE PTR [rbx],al
    74a7:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    74aa:	00 02                	add    BYTE PTR [rdx],al
    74ac:	01 08                	add    DWORD PTR [rax],ecx
    74ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    74af:	00 00                	add    BYTE PTR [rax],al
    74b1:	00 02                	add    BYTE PTR [rdx],al
    74b3:	02 07                	add    al,BYTE PTR [rdi]
    74b5:	9b                   	fwait
    74b6:	01 00                	add    DWORD PTR [rax],eax
    74b8:	00 02                	add    BYTE PTR [rdx],al
    74ba:	04 07                	add    al,0x7
    74bc:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    74bf:	00 02                	add    BYTE PTR [rdx],al
    74c1:	10 07                	adc    BYTE PTR [rdi],al
    74c3:	00 00                	add    BYTE PTR [rax],al
    74c5:	00 00                	add    BYTE PTR [rax],al
    74c7:	04 5f                	add    al,0x5f
    74c9:	03 00                	add    eax,DWORD PTR [rax]
    74cb:	00 02                	add    BYTE PTR [rdx],al
    74cd:	0a 1d 4e 00 00 00    	or     bl,BYTE PTR [rip+0x4e]        # 7521 <stivale_hdr-0x1f8adf>
    74d3:	04 4c                	add    al,0x4c
    74d5:	01 00                	add    DWORD PTR [rax],eax
    74d7:	00 02                	add    BYTE PTR [rdx],al
    74d9:	0b 1d 55 00 00 00    	or     ebx,DWORD PTR [rip+0x55]        # 7534 <stivale_hdr-0x1f8acc>
    74df:	04 e5                	add    al,0xe5
    74e1:	02 00                	add    al,BYTE PTR [rax]
    74e3:	00 02                	add    BYTE PTR [rdx],al
    74e5:	0c 1d                	or     al,0x1d
    74e7:	5c                   	pop    rsp
    74e8:	00 00                	add    BYTE PTR [rax],al
    74ea:	00 04 25 00 00 00 02 	add    BYTE PTR ds:0x2000000,al
    74f1:	0d 1d 34 00 00       	or     eax,0x341d
    74f6:	00 02                	add    BYTE PTR [rdx],al
    74f8:	01 06                	add    DWORD PTR [rsi],eax
    74fa:	70 00                	jo     74fc <stivale_hdr-0x1f8b04>
    74fc:	00 00                	add    BYTE PTR [rax],al
    74fe:	02 02                	add    al,BYTE PTR [rdx]
    7500:	05 73 01 00 00       	add    eax,0x173
    7505:	05 04 05 69 6e       	add    eax,0x6e690504
    750a:	74 00                	je     750c <stivale_hdr-0x1f8af4>
    750c:	02 10                	add    dl,BYTE PTR [rax]
    750e:	05 1b 01 00 00       	add    eax,0x11b
    7513:	04 3b                	add    al,0x3b
    7515:	02 00                	add    al,BYTE PTR [rax]
    7517:	00 02                	add    BYTE PTR [rdx],al
    7519:	17                   	(bad)  
    751a:	1d 8e 00 00 00       	sbb    eax,0x8e
    751f:	04 8f                	add    al,0x8f
    7521:	22 00                	and    al,BYTE PTR [rax]
    7523:	00 02                	add    BYTE PTR [rdx],al
    7525:	19 1d 8e 00 00 00    	sbb    DWORD PTR [rip+0x8e],ebx        # 75b9 <stivale_hdr-0x1f8a47>
    752b:	06                   	(bad)  
    752c:	73 79                	jae    75a7 <stivale_hdr-0x1f8a59>
    752e:	73 00                	jae    7530 <stivale_hdr-0x1f8ad0>
    7530:	03 04 0b             	add    eax,DWORD PTR [rbx+rcx*1]
    7533:	e3 00                	jrcxz  7535 <stivale_hdr-0x1f8acb>
    7535:	00 00                	add    BYTE PTR [rax],al
    7537:	07                   	(bad)  
    7538:	69 00 00 00 03 05    	imul   eax,DWORD PTR [rax],0x5030000
    753e:	0f 00 08             	str    WORD PTR [rax]
    7541:	6a 00                	push   0x0
    7543:	00 00                	add    BYTE PTR [rax],al
    7545:	f3 00 00             	repz add BYTE PTR [rax],al
    7548:	00 09                	add    BYTE PTR [rcx],cl
    754a:	34 00                	xor    al,0x0
    754c:	00 00                	add    BYTE PTR [rax],al
    754e:	03 00                	add    eax,DWORD PTR [rax]
    7550:	06                   	(bad)  
    7551:	69 6f 00 04 06 0b 4c 	imul   ebp,DWORD PTR [rdi+0x0],0x4c0b0604
    7558:	0a 00                	or     al,BYTE PTR [rax]
    755a:	00 06                	add    BYTE PTR [rsi],al
    755c:	70 63                	jo     75c1 <stivale_hdr-0x1f8a3f>
    755e:	69 00 04 07 0f 9c    	imul   eax,DWORD PTR [rax],0x9c0f0704
    7564:	02 00                	add    al,BYTE PTR [rax]
    7566:	00 0a                	add    BYTE PTR [rdx],cl
    7568:	15 2e 00 00 10       	adc    eax,0x1000002e
    756d:	04 10                	add    al,0x10
    756f:	10 b4 01 00 00 0b c9 	adc    BYTE PTR [rcx+rax*1-0x36f50000],dh
    7576:	2d 00 00 04 11       	sub    eax,0x11040000
    757b:	14 76                	adc    al,0x76
    757d:	00 00                	add    BYTE PTR [rax],al
    757f:	00 00                	add    BYTE PTR [rax],al
    7581:	0b e8                	or     ebp,eax
    7583:	22 00                	and    al,BYTE PTR [rax]
    7585:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    7588:	14 76                	adc    al,0x76
    758a:	00 00                	add    BYTE PTR [rax],al
    758c:	00 02                	add    BYTE PTR [rdx],al
    758e:	0b 2c 33             	or     ebp,DWORD PTR [rbx+rsi*1]
    7591:	00 00                	add    BYTE PTR [rax],al
    7593:	04 13                	add    al,0x13
    7595:	14 76                	adc    al,0x76
    7597:	00 00                	add    BYTE PTR [rax],al
    7599:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    759c:	2e 30 00             	xor    BYTE PTR cs:[rax],al
    759f:	00 04 14             	add    BYTE PTR [rsp+rdx*1],al
    75a2:	14 76                	adc    al,0x76
    75a4:	00 00                	add    BYTE PTR [rax],al
    75a6:	00 06                	add    BYTE PTR [rsi],al
    75a8:	0b 54 23 00          	or     edx,DWORD PTR [rbx+riz*1+0x0]
    75ac:	00 04 15 14 6a 00 00 	add    BYTE PTR [rdx*1+0x6a14],al
    75b3:	00 08                	add    BYTE PTR [rax],cl
    75b5:	0b 02                	or     eax,DWORD PTR [rdx]
    75b7:	23 00                	and    eax,DWORD PTR [rax]
    75b9:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    75bc:	14 6a                	adc    al,0x6a
    75be:	00 00                	add    BYTE PTR [rax],al
    75c0:	00 09                	add    BYTE PTR [rcx],cl
    75c2:	0b f2                	or     esi,edx
    75c4:	22 00                	and    al,BYTE PTR [rax]
    75c6:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    75c9:	14 6a                	adc    al,0x6a
    75cb:	00 00                	add    BYTE PTR [rax],al
    75cd:	00 0a                	add    BYTE PTR [rdx],cl
    75cf:	0b 46 22             	or     eax,DWORD PTR [rsi+0x22]
    75d2:	00 00                	add    BYTE PTR [rax],al
    75d4:	04 18                	add    al,0x18
    75d6:	14 6a                	adc    al,0x6a
    75d8:	00 00                	add    BYTE PTR [rax],al
    75da:	00 0b                	add    BYTE PTR [rbx],cl
    75dc:	0b c1                	or     eax,ecx
    75de:	21 00                	and    DWORD PTR [rax],eax
    75e0:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    75e3:	14 6a                	adc    al,0x6a
    75e5:	00 00                	add    BYTE PTR [rax],al
    75e7:	00 0c 0b             	add    BYTE PTR [rbx+rcx*1],cl
    75ea:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    75eb:	22 00                	and    al,BYTE PTR [rax]
    75ed:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    75f0:	14 6a                	adc    al,0x6a
    75f2:	00 00                	add    BYTE PTR [rax],al
    75f4:	00 0d 0b 48 23 00    	add    BYTE PTR [rip+0x23480b],cl        # 23be05 <__kernel_end+0x29e05>
    75fa:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
    75fd:	14 6a                	adc    al,0x6a
    75ff:	00 00                	add    BYTE PTR [rax],al
    7601:	00 0e                	add    BYTE PTR [rsi],cl
    7603:	0b b2 21 00 00 04    	or     esi,DWORD PTR [rdx+0x4000021]
    7609:	1c 14                	sbb    al,0x14
    760b:	6a 00                	push   0x0
    760d:	00 00                	add    BYTE PTR [rax],al
    760f:	0f 00 0c e0          	str    WORD PTR [rax+riz*8]
    7613:	33 00                	xor    eax,DWORD PTR [rax]
    7615:	00 40 04             	add    BYTE PTR [rax+0x4],al
    7618:	1f                   	(bad)  
    7619:	10 0b                	adc    BYTE PTR [rbx],cl
    761b:	7e 2f                	jle    764c <stivale_hdr-0x1f89b4>
    761d:	00 00                	add    BYTE PTR [rax],al
    761f:	04 20                	add    al,0x20
    7621:	1b 0a                	sbb    ecx,DWORD PTR [rdx]
    7623:	01 00                	add    DWORD PTR [rax],eax
    7625:	00 00                	add    BYTE PTR [rax],al
    7627:	0b 43 2e             	or     eax,DWORD PTR [rbx+0x2e]
    762a:	00 00                	add    BYTE PTR [rax],al
    762c:	04 21                	add    al,0x21
    762e:	14 82                	adc    al,0x82
    7630:	00 00                	add    BYTE PTR [rax],al
    7632:	00 10                	add    BYTE PTR [rax],dl
    7634:	0b 48 2e             	or     ecx,DWORD PTR [rax+0x2e]
    7637:	00 00                	add    BYTE PTR [rax],al
    7639:	04 22                	add    al,0x22
    763b:	14 82                	adc    al,0x82
    763d:	00 00                	add    BYTE PTR [rax],al
    763f:	00 14 0b             	add    BYTE PTR [rbx+rcx*1],dl
    7642:	4d                   	rex.WRB
    7643:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7646:	04 23                	add    al,0x23
    7648:	14 82                	adc    al,0x82
    764a:	00 00                	add    BYTE PTR [rax],al
    764c:	00 18                	add    BYTE PTR [rax],bl
    764e:	0b 52 2e             	or     edx,DWORD PTR [rdx+0x2e]
    7651:	00 00                	add    BYTE PTR [rax],al
    7653:	04 24                	add    al,0x24
    7655:	14 82                	adc    al,0x82
    7657:	00 00                	add    BYTE PTR [rax],al
    7659:	00 1c 0b             	add    BYTE PTR [rbx+rcx*1],bl
    765c:	57                   	push   rdi
    765d:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7660:	04 25                	add    al,0x25
    7662:	14 82                	adc    al,0x82
    7664:	00 00                	add    BYTE PTR [rax],al
    7666:	00 20                	add    BYTE PTR [rax],ah
    7668:	0b 5c 2e 00          	or     ebx,DWORD PTR [rsi+rbp*1+0x0]
    766c:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    766f:	14 82                	adc    al,0x82
    7671:	00 00                	add    BYTE PTR [rax],al
    7673:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
    7676:	1d 2d 00 00 04       	sbb    eax,0x400002d
    767b:	27                   	(bad)  
    767c:	14 82                	adc    al,0x82
    767e:	00 00                	add    BYTE PTR [rax],al
    7680:	00 28                	add    BYTE PTR [rax],ch
    7682:	0b bf 2d 00 00 04    	or     edi,DWORD PTR [rdi+0x400002d]
    7688:	28 14 76             	sub    BYTE PTR [rsi+rsi*2],dl
    768b:	00 00                	add    BYTE PTR [rax],al
    768d:	00 2c 0b             	add    BYTE PTR [rbx+rcx*1],ch
    7690:	db 2d 00 00 04 29    	fld    TBYTE PTR [rip+0x29040000]        # 29047696 <__kernel_end+0x28e35696>
    7696:	14 76                	adc    al,0x76
    7698:	00 00                	add    BYTE PTR [rax],al
    769a:	00 2e                	add    BYTE PTR [rsi],ch
    769c:	0b 92 33 00 00 04    	or     edx,DWORD PTR [rdx+0x4000033]
    76a2:	2a 14 82             	sub    dl,BYTE PTR [rdx+rax*4]
    76a5:	00 00                	add    BYTE PTR [rax],al
    76a7:	00 30                	add    BYTE PTR [rax],dh
    76a9:	0b 08                	or     ecx,DWORD PTR [rax]
    76ab:	2f                   	(bad)  
    76ac:	00 00                	add    BYTE PTR [rax],al
    76ae:	04 2b                	add    al,0x2b
    76b0:	14 6a                	adc    al,0x6a
    76b2:	00 00                	add    BYTE PTR [rax],al
    76b4:	00 34 0d 70 61 64 00 	add    BYTE PTR [rcx*1+0x646170],dh
    76bb:	04 2c                	add    al,0x2c
    76bd:	14 4c                	adc    al,0x4c
    76bf:	0a 00                	or     al,BYTE PTR [rax]
    76c1:	00 35 0b e8 2d 00    	add    BYTE PTR [rip+0x2de80b],dh        # 2e5ed2 <__kernel_end+0xd3ed2>
    76c7:	00 04 2d 14 6a 00 00 	add    BYTE PTR [rbp*1+0x6a14],al
    76ce:	00 3c 0b             	add    BYTE PTR [rbx+rcx*1],bh
    76d1:	0f 33                	rdpmc  
    76d3:	00 00                	add    BYTE PTR [rax],al
    76d5:	04 2e                	add    al,0x2e
    76d7:	14 6a                	adc    al,0x6a
    76d9:	00 00                	add    BYTE PTR [rax],al
    76db:	00 3d 0b aa 32 00    	add    BYTE PTR [rip+0x32aa0b],bh        # 3320ec <__kernel_end+0x1200ec>
    76e1:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    76e4:	14 6a                	adc    al,0x6a
    76e6:	00 00                	add    BYTE PTR [rax],al
    76e8:	00 3e                	add    BYTE PTR [rsi],bh
    76ea:	0b 9a 32 00 00 04    	or     ebx,DWORD PTR [rdx+0x4000032]
    76f0:	30 14 6a             	xor    BYTE PTR [rdx+rbp*2],dl
    76f3:	00 00                	add    BYTE PTR [rax],al
    76f5:	00 3f                	add    BYTE PTR [rdi],bh
    76f7:	00 00                	add    BYTE PTR [rax],al
    76f9:	0e                   	(bad)  
    76fa:	91                   	xchg   ecx,eax
    76fb:	02 00                	add    al,BYTE PTR [rax]
    76fd:	00 05 06 0f 43 0a    	add    BYTE PTR [rip+0xa430f06],al        # a438609 <__kernel_end+0xa226609>
    7703:	00 00                	add    BYTE PTR [rax],al
    7705:	0f ad 02             	shrd   DWORD PTR [rdx],eax,cl
    7708:	00 00                	add    BYTE PTR [rax],al
    770a:	05 07 13 10 8b       	add    eax,0x8b101307
    770f:	32 00                	xor    al,BYTE PTR [rax]
    7711:	00 07                	add    BYTE PTR [rdi],al
    7713:	04 5c                	add    al,0x5c
    7715:	00 00                	add    BYTE PTR [rax],al
    7717:	00 05 08 12 e0 02    	add    BYTE PTR [rip+0x2e01208],al        # 2e08925 <__kernel_end+0x2bf6925>
    771d:	00 00                	add    BYTE PTR [rax],al
    771f:	11 5d 30             	adc    DWORD PTR [rbp+0x30],ebx
    7722:	00 00                	add    BYTE PTR [rax],al
    7724:	00 11                	add    BYTE PTR [rcx],dl
    7726:	3b 36                	cmp    esi,DWORD PTR [rsi]
    7728:	00 00                	add    BYTE PTR [rax],al
    772a:	01 11                	add    DWORD PTR [rcx],edx
    772c:	61                   	(bad)  
    772d:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7730:	02 12                	add    dl,BYTE PTR [rdx]
    7732:	70 6d                	jo     77a1 <stivale_hdr-0x1f885f>
    7734:	00 03                	add    BYTE PTR [rbx],al
    7736:	11 df                	adc    edi,ebx
    7738:	35 00 00 04 00       	xor    eax,0x40000
    773d:	10 cc                	adc    ah,cl
    773f:	31 00                	xor    DWORD PTR [rax],eax
    7741:	00 07                	add    BYTE PTR [rdi],al
    7743:	04 5c                	add    al,0x5c
    7745:	00 00                	add    BYTE PTR [rax],al
    7747:	00 05 10 12 f9 02    	add    BYTE PTR [rip+0x2f91210],al        # 2f9895d <__kernel_end+0x2d8695d>
    774d:	00 00                	add    BYTE PTR [rax],al
    774f:	11 89 05 00 00 03    	adc    DWORD PTR [rcx+0x3000005],ecx
    7755:	00 10                	add    BYTE PTR [rax],dl
    7757:	ce                   	(bad)  
    7758:	33 00                	xor    eax,DWORD PTR [rax]
    775a:	00 07                	add    BYTE PTR [rdi],al
    775c:	04 5c                	add    al,0x5c
    775e:	00 00                	add    BYTE PTR [rax],al
    7760:	00 05 14 12 12 03    	add    BYTE PTR [rip+0x3121214],al        # 312897a <__kernel_end+0x2f1697a>
    7766:	00 00                	add    BYTE PTR [rax],al
    7768:	11 ab 2d 00 00 01    	adc    DWORD PTR [rbx+0x100002d],ebp
    776e:	00 10                	add    BYTE PTR [rax],dl
    7770:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    7771:	34 00                	xor    al,0x0
    7773:	00 07                	add    BYTE PTR [rdi],al
    7775:	04 5c                	add    al,0x5c
    7777:	00 00                	add    BYTE PTR [rax],al
    7779:	00 05 18 12 47 03    	add    BYTE PTR [rip+0x3471218],al        # 3478997 <__kernel_end+0x3266997>
    777f:	00 00                	add    BYTE PTR [rax],al
    7781:	13 7d 2e             	adc    edi,DWORD PTR [rbp+0x2e]
    7784:	00 00                	add    BYTE PTR [rax],al
    7786:	01 01                	add    DWORD PTR [rcx],eax
    7788:	14 eb                	adc    al,0xeb
    778a:	14 9f                	adc    al,0x9f
    778c:	2d 00 00 01 01       	sub    eax,0x1010000
    7791:	13 43 2d             	adc    eax,DWORD PTR [rbx+0x2d]
    7794:	00 00                	add    BYTE PTR [rax],al
    7796:	01 01                	add    DWORD PTR [rcx],eax
    7798:	3c c3                	cmp    al,0xc3
    779a:	13 f2                	adc    esi,edx
    779c:	33 00                	xor    eax,DWORD PTR [rax]
    779e:	00 01                	add    BYTE PTR [rcx],al
    77a0:	01 69 96             	add    DWORD PTR [rcx-0x6a],ebp
    77a3:	00 10                	add    BYTE PTR [rax],dl
    77a5:	92                   	xchg   edx,eax
    77a6:	34 00                	xor    al,0x0
    77a8:	00 07                	add    BYTE PTR [rdi],al
    77aa:	04 5c                	add    al,0x5c
    77ac:	00 00                	add    BYTE PTR [rax],al
    77ae:	00 05 1f 12 74 03    	add    BYTE PTR [rip+0x374121f],al        # 37489d3 <__kernel_end+0x35369d3>
    77b4:	00 00                	add    BYTE PTR [rax],al
    77b6:	11 7e 32             	adc    DWORD PTR [rsi+0x32],edi
    77b9:	00 00                	add    BYTE PTR [rax],al
    77bb:	01 11                	add    DWORD PTR [rcx],edx
    77bd:	ca 35 00             	retf   0x35
    77c0:	00 10                	add    BYTE PTR [rax],dl
    77c2:	14 e7                	adc    al,0xe7
    77c4:	2e 00 00             	add    BYTE PTR cs:[rax],al
    77c7:	00 40 14             	add    BYTE PTR [rax+0x14],al
    77ca:	de 2c 00             	fisubr WORD PTR [rax+rax*1]
    77cd:	00 00                	add    BYTE PTR [rax],al
    77cf:	80 00 10             	add    BYTE PTR [rax],0x10
    77d2:	ed                   	in     eax,dx
    77d3:	35 00 00 07 04       	xor    eax,0x4070000
    77d8:	5c                   	pop    rsp
    77d9:	00 00                	add    BYTE PTR [rax],al
    77db:	00 05 26 12 b7 03    	add    BYTE PTR [rip+0x3b71226],al        # 3b78a07 <__kernel_end+0x3966a07>
    77e1:	00 00                	add    BYTE PTR [rax],al
    77e3:	11 8a 33 00 00 27    	adc    DWORD PTR [rdx+0x27000033],ecx
    77e9:	11 66 2e             	adc    DWORD PTR [rsi+0x2e],esp
    77ec:	00 00                	add    BYTE PTR [rax],al
    77ee:	34 11                	xor    al,0x11
    77f0:	35 30 00 00 39       	xor    eax,0x39000030
    77f5:	11 86 35 00 00 41    	adc    DWORD PTR [rsi+0x41000035],eax
    77fb:	11 e2                	adc    edx,esp
    77fd:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7800:	46 11 b2 21 00 00 58 	rex.RX adc DWORD PTR [rdx+0x58000021],r14d
    7807:	11 1d 33 00 00 5f    	adc    DWORD PTR [rip+0x5f000033],ebx        # 5f007840 <__kernel_end+0x5edf5840>
    780d:	11 d4                	adc    esp,edx
    780f:	2f                   	(bad)  
    7810:	00 00                	add    BYTE PTR [rax],al
    7812:	a1 00 10 27 33 00 00 	movabs eax,ds:0x407000033271000
    7819:	07 04 
    781b:	5c                   	pop    rsp
    781c:	00 00                	add    BYTE PTR [rax],al
    781e:	00 05 31 12 f4 03    	add    BYTE PTR [rip+0x3f41231],al        # 3f48a55 <__kernel_end+0x3d36a55>
    7824:	00 00                	add    BYTE PTR [rax],al
    7826:	11 6e 2f             	adc    DWORD PTR [rsi+0x2f],ebp
    7829:	00 00                	add    BYTE PTR [rax],al
    782b:	20 11                	and    BYTE PTR [rcx],dl
    782d:	f7 2d 00 00 25 11    	imul   DWORD PTR [rip+0x11250000]        # 11257833 <__kernel_end+0x11045833>
    7833:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    7836:	00 30                	add    BYTE PTR [rax],dh
    7838:	11 4a 35             	adc    DWORD PTR [rdx+0x35],ecx
    783b:	00 00                	add    BYTE PTR [rax],al
    783d:	35 11 85 16 00       	xor    eax,0x168511
    7842:	00 a1 11 e7 35 00    	add    BYTE PTR [rcx+0x35e711],ah
    7848:	00 e7                	add    bh,ah
    784a:	11 35 32 00 00 ec    	adc    DWORD PTR [rip+0xffffffffec000032],esi        # ffffffffec007882 <__kernel_end+0xffffffffebdf5882>
    7850:	00 10                	add    BYTE PTR [rax],dl
    7852:	07                   	(bad)  
    7853:	35 00 00 07 04       	xor    eax,0x4070000
    7858:	5c                   	pop    rsp
    7859:	00 00                	add    BYTE PTR [rax],al
    785b:	00 05 3b 12 13 04    	add    BYTE PTR [rip+0x413123b],al        # 4138a9c <__kernel_end+0x3f26a9c>
    7861:	00 00                	add    BYTE PTR [rax],al
    7863:	11 3e                	adc    DWORD PTR [rsi],edi
    7865:	2d 00 00 80 12       	sub    eax,0x12800000
    786a:	64 72 71             	fs jb  78de <stivale_hdr-0x1f8722>
    786d:	00 08                	add    BYTE PTR [rax],cl
    786f:	00 10                	add    BYTE PTR [rax],dl
    7871:	d7                   	xlat   BYTE PTR ds:[rbx]
    7872:	33 00                	xor    eax,DWORD PTR [rax]
    7874:	00 07                	add    BYTE PTR [rdi],al
    7876:	04 5c                	add    al,0x5c
    7878:	00 00                	add    BYTE PTR [rax],al
    787a:	00 05 40 12 2f 04    	add    BYTE PTR [rip+0x42f1240],al        # 42f8ac0 <__kernel_end+0x40e6ac0>
    7880:	00 00                	add    BYTE PTR [rax],al
    7882:	13 95 32 00 00 00    	adc    edx,DWORD PTR [rbp+0x32]
    7888:	00 00                	add    BYTE PTR [rax],al
    788a:	40 00 10             	add    BYTE PTR [rax],dl
    788d:	b7 33                	mov    bh,0x33
    788f:	00 00                	add    BYTE PTR [rax],al
    7891:	07                   	(bad)  
    7892:	04 5c                	add    al,0x5c
    7894:	00 00                	add    BYTE PTR [rax],al
    7896:	00 05 44 12 5a 04    	add    BYTE PTR [rip+0x45a1244],al        # 45a8ae0 <__kernel_end+0x4396ae0>
    789c:	00 00                	add    BYTE PTR [rax],al
    789e:	11 c2                	adc    edx,eax
    78a0:	31 00                	xor    DWORD PTR [rax],eax
    78a2:	00 00                	add    BYTE PTR [rax],al
    78a4:	11 65 35             	adc    DWORD PTR [rbp+0x35],esp
    78a7:	00 00                	add    BYTE PTR [rax],al
    78a9:	01 11                	add    DWORD PTR [rcx],edx
    78ab:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    78ac:	33 00                	xor    eax,DWORD PTR [rax]
    78ae:	00 02                	add    BYTE PTR [rdx],al
    78b0:	11 31                	adc    DWORD PTR [rcx],esi
    78b2:	2d 00 00 03 00       	sub    eax,0x30000
    78b7:	10 00                	adc    BYTE PTR [rax],al
    78b9:	34 00                	xor    al,0x0
    78bb:	00 07                	add    BYTE PTR [rdi],al
    78bd:	04 5c                	add    al,0x5c
    78bf:	00 00                	add    BYTE PTR [rax],al
    78c1:	00 05 4b 12 85 04    	add    BYTE PTR [rip+0x485124b],al        # 4858b12 <__kernel_end+0x4646b12>
    78c7:	00 00                	add    BYTE PTR [rax],al
    78c9:	11 c0                	adc    eax,eax
    78cb:	35 00 00 00 11       	xor    eax,0x11000000
    78d0:	0f 2d 00             	cvtps2pi mm0,QWORD PTR [rax]
    78d3:	00 01                	add    BYTE PTR [rcx],al
    78d5:	11 40 36             	adc    DWORD PTR [rax+0x36],eax
    78d8:	00 00                	add    BYTE PTR [rax],al
    78da:	02 11                	add    dl,BYTE PTR [rcx]
    78dc:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    78dd:	2f                   	(bad)  
    78de:	00 00                	add    BYTE PTR [rax],al
    78e0:	03 00                	add    eax,DWORD PTR [rax]
    78e2:	0a f7                	or     dh,bh
    78e4:	33 00                	xor    eax,DWORD PTR [rax]
    78e6:	00 80 05 52 14 8a    	add    BYTE PTR [rax-0x75ebadfb],al
    78ec:	05 00 00 0b 62       	add    eax,0x620b0000
    78f1:	30 00                	xor    BYTE PTR [rax],al
    78f3:	00 05 53 18 82 00    	add    BYTE PTR [rip+0x821853],al        # 82914c <__kernel_end+0x61714c>
    78f9:	00 00                	add    BYTE PTR [rax],al
    78fb:	00 0b                	add    BYTE PTR [rbx],cl
    78fd:	11 30                	adc    DWORD PTR [rax],esi
    78ff:	00 00                	add    BYTE PTR [rax],al
    7901:	05 54 18 82 00       	add    eax,0x821854
    7906:	00 00                	add    BYTE PTR [rax],al
    7908:	04 0b                	add    al,0xb
    790a:	79 31                	jns    793d <stivale_hdr-0x1f86c3>
    790c:	00 00                	add    BYTE PTR [rax],al
    790e:	05 55 18 82 00       	add    eax,0x821855
    7913:	00 00                	add    BYTE PTR [rax],al
    7915:	08 0b                	or     BYTE PTR [rbx],cl
    7917:	0c 36                	or     al,0x36
    7919:	00 00                	add    BYTE PTR [rax],al
    791b:	05 56 18 82 00       	add    eax,0x821856
    7920:	00 00                	add    BYTE PTR [rax],al
    7922:	0c 0b                	or     al,0xb
    7924:	db 32                	(bad)  [rdx]
    7926:	00 00                	add    BYTE PTR [rax],al
    7928:	05 57 18 82 00       	add    eax,0x821857
    792d:	00 00                	add    BYTE PTR [rax],al
    792f:	10 0b                	adc    BYTE PTR [rbx],cl
    7931:	93                   	xchg   ebx,eax
    7932:	31 00                	xor    DWORD PTR [rax],eax
    7934:	00 05 58 18 82 00    	add    BYTE PTR [rip+0x821858],al        # 829192 <__kernel_end+0x617192>
    793a:	00 00                	add    BYTE PTR [rax],al
    793c:	14 0b                	adc    al,0xb
    793e:	48 32 00             	rex.W xor al,BYTE PTR [rax]
    7941:	00 05 59 18 82 00    	add    BYTE PTR [rip+0x821859],al        # 8291a0 <__kernel_end+0x6171a0>
    7947:	00 00                	add    BYTE PTR [rax],al
    7949:	18 0d 70 61 64 00    	sbb    BYTE PTR [rip+0x646170],cl        # 64dabf <__kernel_end+0x43babf>
    794f:	05 5a 18 e3 00       	add    eax,0xe3185a
    7954:	00 00                	add    BYTE PTR [rax],al
    7956:	1c 0b                	sbb    al,0xb
    7958:	d8 2e                	fsubr  DWORD PTR [rsi]
    795a:	00 00                	add    BYTE PTR [rax],al
    795c:	05 5b 18 82 00       	add    eax,0x82185b
    7961:	00 00                	add    BYTE PTR [rax],al
    7963:	20 0b                	and    BYTE PTR [rbx],cl
    7965:	ac                   	lods   al,BYTE PTR ds:[rsi]
    7966:	34 00                	xor    al,0x0
    7968:	00 05 5c 18 82 00    	add    BYTE PTR [rip+0x82185c],al        # 8291ca <__kernel_end+0x6171ca>
    796e:	00 00                	add    BYTE PTR [rax],al
    7970:	24 0b                	and    al,0xb
    7972:	29 30                	sub    DWORD PTR [rax],esi
    7974:	00 00                	add    BYTE PTR [rax],al
    7976:	05 5d 18 82 00       	add    eax,0x82185d
    797b:	00 00                	add    BYTE PTR [rax],al
    797d:	28 0b                	sub    BYTE PTR [rbx],cl
    797f:	d3 30                	shl    DWORD PTR [rax],cl
    7981:	00 00                	add    BYTE PTR [rax],al
    7983:	05 5e 18 82 00       	add    eax,0x82185e
    7988:	00 00                	add    BYTE PTR [rax],al
    798a:	2c 0b                	sub    al,0xb
    798c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    798e:	00 00                	add    BYTE PTR [rax],al
    7990:	05 5f 18 82 00       	add    eax,0x82185f
    7995:	00 00                	add    BYTE PTR [rax],al
    7997:	30 0b                	xor    BYTE PTR [rbx],cl
    7999:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    799a:	2d 00 00 05 60       	sub    eax,0x60050000
    799f:	18 82 00 00 00 34    	sbb    BYTE PTR [rdx+0x34000000],al
    79a5:	0b e0                	or     esp,eax
    79a7:	30 00                	xor    BYTE PTR [rax],al
    79a9:	00 05 61 18 82 00    	add    BYTE PTR [rip+0x821861],al        # 829210 <__kernel_end+0x617210>
    79af:	00 00                	add    BYTE PTR [rax],al
    79b1:	38 0b                	cmp    BYTE PTR [rbx],cl
    79b3:	34 33                	xor    al,0x33
    79b5:	00 00                	add    BYTE PTR [rax],al
    79b7:	05 62 18 82 00       	add    eax,0x821862
    79bc:	00 00                	add    BYTE PTR [rax],al
    79be:	3c 0b                	cmp    al,0xb
    79c0:	73 35                	jae    79f7 <stivale_hdr-0x1f8609>
    79c2:	00 00                	add    BYTE PTR [rax],al
    79c4:	05 63 18 82 00       	add    eax,0x821863
    79c9:	00 00                	add    BYTE PTR [rax],al
    79cb:	40 0b 64 09 00       	rex or esp,DWORD PTR [rcx+rcx*1+0x0]
    79d0:	00 05 64 18 5c 0a    	add    BYTE PTR [rip+0xa5c1864],al        # a5c923a <__kernel_end+0xa3b723a>
    79d6:	00 00                	add    BYTE PTR [rax],al
    79d8:	44 0b 77 2f          	or     r14d,DWORD PTR [rdi+0x2f]
    79dc:	00 00                	add    BYTE PTR [rax],al
    79de:	05 65 18 6c 0a       	add    eax,0xa6c1865
    79e3:	00 00                	add    BYTE PTR [rax],al
    79e5:	70 00                	jo     79e7 <stivale_hdr-0x1f8619>
    79e7:	15 2a 32 00 00       	adc    eax,0x322a
    79ec:	80 01 05             	add    BYTE PTR [rcx],0x5
    79ef:	68 14 50 06 00       	push   0x65014
    79f4:	00 0b                	add    BYTE PTR [rbx],cl
    79f6:	3c 31                	cmp    al,0x31
    79f8:	00 00                	add    BYTE PTR [rax],al
    79fa:	05 69 18 82 00       	add    eax,0x821869
    79ff:	00 00                	add    BYTE PTR [rax],al
    7a01:	00 0b                	add    BYTE PTR [rbx],cl
    7a03:	1a 2f                	sbb    ch,BYTE PTR [rdi]
    7a05:	00 00                	add    BYTE PTR [rax],al
    7a07:	05 6a 18 82 00       	add    eax,0x82186a
    7a0c:	00 00                	add    BYTE PTR [rax],al
    7a0e:	04 0b                	add    al,0xb
    7a10:	db 32                	(bad)  [rdx]
    7a12:	00 00                	add    BYTE PTR [rax],al
    7a14:	05 6b 18 82 00       	add    eax,0x82186b
    7a19:	00 00                	add    BYTE PTR [rax],al
    7a1b:	08 0b                	or     BYTE PTR [rbx],cl
    7a1d:	f2 2c 00             	repnz sub al,0x0
    7a20:	00 05 6c 18 82 00    	add    BYTE PTR [rip+0x82186c],al        # 829292 <__kernel_end+0x617292>
    7a26:	00 00                	add    BYTE PTR [rax],al
    7a28:	0c 0b                	or     al,0xb
    7a2a:	d3 2d 00 00 05 6d    	shr    DWORD PTR [rip+0x6d050000],cl        # 6d057a30 <__kernel_end+0x6ce45a30>
    7a30:	18 82 00 00 00 10    	sbb    BYTE PTR [rdx+0x10000000],al
    7a36:	0b 6a 31             	or     ebp,DWORD PTR [rdx+0x31]
    7a39:	00 00                	add    BYTE PTR [rax],al
    7a3b:	05 6e 18 82 00       	add    eax,0x82186e
    7a40:	00 00                	add    BYTE PTR [rax],al
    7a42:	14 0b                	adc    al,0xb
    7a44:	08 30                	or     BYTE PTR [rax],dh
    7a46:	00 00                	add    BYTE PTR [rax],al
    7a48:	05 6f 18 82 00       	add    eax,0x82186f
    7a4d:	00 00                	add    BYTE PTR [rax],al
    7a4f:	18 0b                	sbb    BYTE PTR [rbx],cl
    7a51:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7a52:	31 00                	xor    DWORD PTR [rax],eax
    7a54:	00 05 70 18 82 00    	add    BYTE PTR [rip+0x821870],al        # 8292ca <__kernel_end+0x6172ca>
    7a5a:	00 00                	add    BYTE PTR [rax],al
    7a5c:	1c 0b                	sbb    al,0xb
    7a5e:	b6 30                	mov    dh,0x30
    7a60:	00 00                	add    BYTE PTR [rax],al
    7a62:	05 71 18 82 00       	add    eax,0x821871
    7a67:	00 00                	add    BYTE PTR [rax],al
    7a69:	20 0b                	and    BYTE PTR [rbx],cl
    7a6b:	b8 32 00 00 05       	mov    eax,0x5000032
    7a70:	72 18                	jb     7a8a <stivale_hdr-0x1f8576>
    7a72:	82                   	(bad)  
    7a73:	00 00                	add    BYTE PTR [rax],al
    7a75:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
    7a78:	b6 34                	mov    dh,0x34
    7a7a:	00 00                	add    BYTE PTR [rax],al
    7a7c:	05 73 18 82 00       	add    eax,0x821873
    7a81:	00 00                	add    BYTE PTR [rax],al
    7a83:	28 0d 70 61 64 00    	sub    BYTE PTR [rip+0x646170],cl        # 64dbf9 <__kernel_end+0x43bbf9>
    7a89:	05 74 18 7c 0a       	add    eax,0xa7c1874
    7a8e:	00 00                	add    BYTE PTR [rax],al
    7a90:	2c 0b                	sub    al,0xb
    7a92:	77 2f                	ja     7ac3 <stivale_hdr-0x1f853d>
    7a94:	00 00                	add    BYTE PTR [rax],al
    7a96:	05 75 18 8c 0a       	add    eax,0xa8c1875
    7a9b:	00 00                	add    BYTE PTR [rax],al
    7a9d:	a0 16 0b 30 00 00 05 	movabs al,ds:0x1a76050000300b16
    7aa4:	76 1a 
    7aa6:	9c                   	pushf  
    7aa7:	0a 00                	or     al,BYTE PTR [rax]
    7aa9:	00 00                	add    BYTE PTR [rax],al
    7aab:	01 00                	add    DWORD PTR [rax],eax
    7aad:	0a 90 35 00 00 20    	or     dl,BYTE PTR [rax+0x20000035]
    7ab3:	05 79 14 3b 07       	add    eax,0x73b1479
    7ab8:	00 00                	add    BYTE PTR [rax],al
    7aba:	17                   	(bad)  
    7abb:	3d 30 00 00 05       	cmp    eax,0x5000030
    7ac0:	7a 18                	jp     7ada <stivale_hdr-0x1f8526>
    7ac2:	6a 00                	push   0x0
    7ac4:	00 00                	add    BYTE PTR [rax],al
    7ac6:	01 05 03 00 17 df    	add    DWORD PTR [rip+0xffffffffdf170003],eax        # ffffffffdf177acf <__kernel_end+0xffffffffdef65acf>
    7acc:	35 00 00 05 7b       	xor    eax,0x7b050000
    7ad1:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7ad4:	00 00                	add    BYTE PTR [rax],al
    7ad6:	01 01                	add    DWORD PTR [rcx],eax
    7ad8:	02 00                	add    al,BYTE PTR [rax]
    7ada:	17                   	(bad)  
    7adb:	69 07 00 00 05 7c    	imul   eax,DWORD PTR [rdi],0x7c050000
    7ae1:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7ae4:	00 00                	add    BYTE PTR [rax],al
    7ae6:	01 01                	add    DWORD PTR [rcx],eax
    7ae8:	01 00                	add    DWORD PTR [rax],eax
    7aea:	17                   	(bad)  
    7aeb:	4a 2d 00 00 05 7d    	rex.WX sub rax,0x7d050000
    7af1:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7af4:	00 00                	add    BYTE PTR [rax],al
    7af6:	01 01                	add    DWORD PTR [rcx],eax
    7af8:	00 00                	add    BYTE PTR [rax],al
    7afa:	17                   	(bad)  
    7afb:	c8 33 00 00          	enter  0x33,0x0
    7aff:	05 7e 18 6a 00       	add    eax,0x6a187e
    7b04:	00 00                	add    BYTE PTR [rax],al
    7b06:	01 01                	add    DWORD PTR [rcx],eax
    7b08:	07                   	(bad)  
    7b09:	01 17                	add    DWORD PTR [rdi],edx
    7b0b:	b2 21                	mov    dl,0x21
    7b0d:	00 00                	add    BYTE PTR [rax],al
    7b0f:	05 7f 18 6a 00       	add    eax,0x6a187f
    7b14:	00 00                	add    BYTE PTR [rax],al
    7b16:	01 01                	add    DWORD PTR [rcx],eax
    7b18:	06                   	(bad)  
    7b19:	01 17                	add    DWORD PTR [rdi],edx
    7b1b:	d4                   	(bad)  
    7b1c:	35 00 00 05 80       	xor    eax,0x80050000
    7b21:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7b24:	00 00                	add    BYTE PTR [rax],al
    7b26:	01 01                	add    DWORD PTR [rcx],eax
    7b28:	05 01 18 70 61       	add    eax,0x61701801
    7b2d:	64 00 05 81 18 6a 00 	add    BYTE PTR fs:[rip+0x6a1881],al        # 6a93b5 <__kernel_end+0x4973b5>
    7b34:	00 00                	add    BYTE PTR [rax],al
    7b36:	01 01                	add    DWORD PTR [rcx],eax
    7b38:	04 01                	add    al,0x1
    7b3a:	17                   	(bad)  
    7b3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7b3c:	32 00                	xor    al,BYTE PTR [rax]
    7b3e:	00 05 82 18 6a 00    	add    BYTE PTR [rip+0x6a1882],al        # 6a93c6 <__kernel_end+0x4973c6>
    7b44:	00 00                	add    BYTE PTR [rax],al
    7b46:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    7b49:	01 17                	add    DWORD PTR [rdi],edx
    7b4b:	23 31                	and    esi,DWORD PTR [rcx]
    7b4d:	00 00                	add    BYTE PTR [rax],al
    7b4f:	05 83 18 76 00       	add    eax,0x761883
    7b54:	00 00                	add    BYTE PTR [rax],al
    7b56:	02 10                	add    dl,BYTE PTR [rax]
    7b58:	00 02                	add    BYTE PTR [rdx],al
    7b5a:	17                   	(bad)  
    7b5b:	c9                   	leave  
    7b5c:	2f                   	(bad)  
    7b5d:	00 00                	add    BYTE PTR [rax],al
    7b5f:	05 84 18 82 00       	add    eax,0x821884
    7b64:	00 00                	add    BYTE PTR [rax],al
    7b66:	04 20                	add    al,0x20
    7b68:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    7b6b:	d7                   	xlat   BYTE PTR ds:[rbx]
    7b6c:	34 00                	xor    al,0x0
    7b6e:	00 05 85 18 82 00    	add    BYTE PTR [rip+0x821885],al        # 8293f9 <__kernel_end+0x6173f9>
    7b74:	00 00                	add    BYTE PTR [rax],al
    7b76:	04 20                	add    al,0x20
    7b78:	00 08                	add    BYTE PTR [rax],cl
    7b7a:	17                   	(bad)  
    7b7b:	0a 31                	or     dh,BYTE PTR [rcx]
    7b7d:	00 00                	add    BYTE PTR [rax],al
    7b7f:	05 86 18 82 00       	add    eax,0x821886
    7b84:	00 00                	add    BYTE PTR [rax],al
    7b86:	04 20                	add    al,0x20
    7b88:	00 0c 0b             	add    BYTE PTR [rbx+rcx*1],cl
    7b8b:	64 09 00             	or     DWORD PTR fs:[rax],eax
    7b8e:	00 05 87 18 ac 0a    	add    BYTE PTR [rip+0xaac1887],al        # aac941b <__kernel_end+0xa8b741b>
    7b94:	00 00                	add    BYTE PTR [rax],al
    7b96:	10 00                	adc    BYTE PTR [rax],al
    7b98:	0a 6e 2e             	or     ch,BYTE PTR [rsi+0x2e]
    7b9b:	00 00                	add    BYTE PTR [rax],al
    7b9d:	10 05 8a 14 a0 07    	adc    BYTE PTR [rip+0x7a0148a],al        # 7a0902d <__kernel_end+0x77f702d>
    7ba3:	00 00                	add    BYTE PTR [rax],al
    7ba5:	0b 80 34 00 00 05    	or     eax,DWORD PTR [rax+0x5000034]
    7bab:	8b 18                	mov    ebx,DWORD PTR [rax]
    7bad:	82                   	(bad)  
    7bae:	00 00                	add    BYTE PTR [rax],al
    7bb0:	00 00                	add    BYTE PTR [rax],al
    7bb2:	0b f0                	or     esi,eax
    7bb4:	2f                   	(bad)  
    7bb5:	00 00                	add    BYTE PTR [rax],al
    7bb7:	05 8c 18 82 00       	add    eax,0x82188c
    7bbc:	00 00                	add    BYTE PTR [rax],al
    7bbe:	04 0d                	add    al,0xd
    7bc0:	70 61                	jo     7c23 <stivale_hdr-0x1f83dd>
    7bc2:	64 00 05 8d 18 82 00 	add    BYTE PTR fs:[rip+0x82188d],al        # 829456 <__kernel_end+0x617456>
    7bc9:	00 00                	add    BYTE PTR [rax],al
    7bcb:	08 17                	or     BYTE PTR [rdi],dl
    7bcd:	ee                   	out    dx,al
    7bce:	30 00                	xor    BYTE PTR [rax],al
    7bd0:	00 05 8e 18 82 00    	add    BYTE PTR [rip+0x82188e],al        # 829464 <__kernel_end+0x617464>
    7bd6:	00 00                	add    BYTE PTR [rax],al
    7bd8:	04 16                	add    al,0x16
    7bda:	0a 0c 17             	or     cl,BYTE PTR [rdi+rdx*1]
    7bdd:	64 09 00             	or     DWORD PTR fs:[rax],eax
    7be0:	00 05 8f 18 82 00    	add    BYTE PTR [rip+0x82188f],al        # 829475 <__kernel_end+0x617475>
    7be6:	00 00                	add    BYTE PTR [rax],al
    7be8:	04 09                	add    al,0x9
    7bea:	01 0c 17             	add    DWORD PTR [rdi+rdx*1],ecx
    7bed:	e2 31                	loop   7c20 <stivale_hdr-0x1f83e0>
    7bef:	00 00                	add    BYTE PTR [rax],al
    7bf1:	05 90 18 6a 00       	add    eax,0x6a1890
    7bf6:	00 00                	add    BYTE PTR [rax],al
    7bf8:	01 01                	add    DWORD PTR [rcx],eax
    7bfa:	00 0f                	add    BYTE PTR [rdi],cl
    7bfc:	00 0a                	add    BYTE PTR [rdx],cl
    7bfe:	23 2e                	and    ebp,DWORD PTR [rsi]
    7c00:	00 00                	add    BYTE PTR [rax],al
    7c02:	90                   	nop
    7c03:	05 93 14 e2 07       	add    eax,0x7e21493
    7c08:	00 00                	add    BYTE PTR [rax],al
    7c0a:	0b a3 35 00 00 05    	or     esp,DWORD PTR [rbx+0x5000035]
    7c10:	94                   	xchg   esp,eax
    7c11:	18 bc 0a 00 00 00 0b 	sbb    BYTE PTR [rdx+rcx*1+0xb000000],bh
    7c18:	cb                   	retf   
    7c19:	32 00                	xor    al,BYTE PTR [rax]
    7c1b:	00 05 95 18 ac 0a    	add    BYTE PTR [rip+0xaac1895],al        # aac94b6 <__kernel_end+0xa8b74b6>
    7c21:	00 00                	add    BYTE PTR [rax],al
    7c23:	40 0d 70 61 64 00    	rex or eax,0x646170
    7c29:	05 96 18 cc 0a       	add    eax,0xacc1896
    7c2e:	00 00                	add    BYTE PTR [rax],al
    7c30:	50                   	push   rax
    7c31:	0b ea                	or     ebp,edx
    7c33:	34 00                	xor    al,0x0
    7c35:	00 05 97 20 dc 0a    	add    BYTE PTR [rip+0xadc2097],al        # adc9cd2 <__kernel_end+0xabb7cd2>
    7c3b:	00 00                	add    BYTE PTR [rax],al
    7c3d:	80 00 0a             	add    BYTE PTR [rax],0xa
    7c40:	3e 32 00             	xor    al,BYTE PTR ds:[rax]
    7c43:	00 20                	add    BYTE PTR [rax],ah
    7c45:	05 9a 14 24 08       	add    eax,0x824149a
    7c4a:	00 00                	add    BYTE PTR [rax],al
    7c4c:	0b fb                	or     edi,ebx
    7c4e:	33 00                	xor    eax,DWORD PTR [rax]
    7c50:	00 05 9b 1b ec 0a    	add    BYTE PTR [rip+0xaec1b9b],al        # aec97f1 <__kernel_end+0xacb77f1>
    7c56:	00 00                	add    BYTE PTR [rax],al
    7c58:	00 0b                	add    BYTE PTR [rbx],cl
    7c5a:	4f 23 00             	rex.WRXB and r8,QWORD PTR [r8]
    7c5d:	00 05 9c 1b b0 02    	add    BYTE PTR [rip+0x2b01b9c],al        # 2b097ff <__kernel_end+0x28f77ff>
    7c63:	00 00                	add    BYTE PTR [rax],al
    7c65:	08 0b                	or     BYTE PTR [rbx],cl
    7c67:	04 2d                	add    al,0x2d
    7c69:	00 00                	add    BYTE PTR [rax],al
    7c6b:	05 9d 19 f2 0a       	add    eax,0xaf2199d
    7c70:	00 00                	add    BYTE PTR [rax],al
    7c72:	10 0b                	adc    BYTE PTR [rbx],cl
    7c74:	82                   	(bad)  
    7c75:	31 00                	xor    DWORD PTR [rax],eax
    7c77:	00 05 9e 18 6a 00    	add    BYTE PTR [rip+0x6a189e],al        # 6a951b <__kernel_end+0x49751b>
    7c7d:	00 00                	add    BYTE PTR [rax],al
    7c7f:	18 00                	sbb    BYTE PTR [rax],al
    7c81:	0a f9                	or     bh,cl
    7c83:	30 00                	xor    BYTE PTR [rax],al
    7c85:	00 14 05 a1 14 31 09 	add    BYTE PTR [rax*1+0x93114a1],dl
    7c8c:	00 00                	add    BYTE PTR [rax],al
    7c8e:	0b ed                	or     ebp,ebp
    7c90:	35 00 00 05 a2       	xor    eax,0xa2050000
    7c95:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7c98:	00 00                	add    BYTE PTR [rax],al
    7c9a:	00 17                	add    BYTE PTR [rdi],dl
    7c9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7c9d:	32 00                	xor    al,BYTE PTR [rax]
    7c9f:	00 05 a3 18 6a 00    	add    BYTE PTR [rip+0x6a18a3],al        # 6a9548 <__kernel_end+0x497548>
    7ca5:	00 00                	add    BYTE PTR [rax],al
    7ca7:	01 04 04             	add    DWORD PTR [rsp+rax*1],eax
    7caa:	01 18                	add    DWORD PTR [rax],ebx
    7cac:	70 61                	jo     7d0f <stivale_hdr-0x1f82f1>
    7cae:	64 00 05 a4 18 6a 00 	add    BYTE PTR fs:[rip+0x6a18a4],al        # 6a9559 <__kernel_end+0x497559>
    7cb5:	00 00                	add    BYTE PTR [rax],al
    7cb7:	01 03                	add    DWORD PTR [rbx],eax
    7cb9:	01 01                	add    DWORD PTR [rcx],eax
    7cbb:	18 63 63             	sbb    BYTE PTR [rbx+0x63],ah
    7cbe:	00 05 a5 18 6a 00    	add    BYTE PTR [rip+0x6a18a5],al        # 6a9569 <__kernel_end+0x497569>
    7cc4:	00 00                	add    BYTE PTR [rax],al
    7cc6:	01 01                	add    DWORD PTR [rcx],eax
    7cc8:	00 01                	add    BYTE PTR [rcx],al
    7cca:	0b 2c 33             	or     ebp,DWORD PTR [rbx+rsi*1]
    7ccd:	00 00                	add    BYTE PTR [rax],al
    7ccf:	05 a6 18 6a 00       	add    eax,0x6a18a6
    7cd4:	00 00                	add    BYTE PTR [rax],al
    7cd6:	02 0b                	add    cl,BYTE PTR [rbx]
    7cd8:	a0 2e 00 00 05 a7 18 	movabs al,ds:0x6a18a70500002e
    7cdf:	6a 00 
    7ce1:	00 00                	add    BYTE PTR [rax],al
    7ce3:	03 0b                	add    ecx,DWORD PTR [rbx]
    7ce5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    7ce6:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7ce9:	05 a8 18 6a 00       	add    eax,0x6a18a8
    7cee:	00 00                	add    BYTE PTR [rax],al
    7cf0:	04 0b                	add    al,0xb
    7cf2:	b1 2e                	mov    cl,0x2e
    7cf4:	00 00                	add    BYTE PTR [rax],al
    7cf6:	05 a9 18 6a 00       	add    eax,0x6a18a9
    7cfb:	00 00                	add    BYTE PTR [rax],al
    7cfd:	05 0b b6 2e 00       	add    eax,0x2eb60b
    7d02:	00 05 aa 18 6a 00    	add    BYTE PTR [rip+0x6a18aa],al        # 6a95b2 <__kernel_end+0x4975b2>
    7d08:	00 00                	add    BYTE PTR [rax],al
    7d0a:	06                   	(bad)  
    7d0b:	0b 33                	or     esi,DWORD PTR [rbx]
    7d0d:	22 00                	and    al,BYTE PTR [rax]
    7d0f:	00 05 ab 18 6a 00    	add    BYTE PTR [rip+0x6a18ab],al        # 6a95c0 <__kernel_end+0x4975c0>
    7d15:	00 00                	add    BYTE PTR [rax],al
    7d17:	07                   	(bad)  
    7d18:	0b bb 2e 00 00 05    	or     edi,DWORD PTR [rbx+0x500002e]
    7d1e:	ac                   	lods   al,BYTE PTR ds:[rsi]
    7d1f:	18 6a 00             	sbb    BYTE PTR [rdx+0x0],ch
    7d22:	00 00                	add    BYTE PTR [rax],al
    7d24:	08 0b                	or     BYTE PTR [rbx],cl
    7d26:	c0 2e 00             	shr    BYTE PTR [rsi],0x0
    7d29:	00 05 ad 18 6a 00    	add    BYTE PTR [rip+0x6a18ad],al        # 6a95dc <__kernel_end+0x4975dc>
    7d2f:	00 00                	add    BYTE PTR [rax],al
    7d31:	09 0b                	or     DWORD PTR [rbx],ecx
    7d33:	c5 2e 00             	(bad)
    7d36:	00 05 ae 18 6a 00    	add    BYTE PTR [rip+0x6a18ae],al        # 6a95ea <__kernel_end+0x4975ea>
    7d3c:	00 00                	add    BYTE PTR [rax],al
    7d3e:	0a 0b                	or     cl,BYTE PTR [rbx]
    7d40:	50                   	push   rax
    7d41:	30 00                	xor    BYTE PTR [rax],al
    7d43:	00 05 af 18 6a 00    	add    BYTE PTR [rip+0x6a18af],al        # 6a95f8 <__kernel_end+0x4975f8>
    7d49:	00 00                	add    BYTE PTR [rax],al
    7d4b:	0b 0b                	or     ecx,DWORD PTR [rbx]
    7d4d:	96                   	xchg   esi,eax
    7d4e:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7d51:	05 b0 18 6a 00       	add    eax,0x6a18b0
    7d56:	00 00                	add    BYTE PTR [rax],al
    7d58:	0c 0b                	or     al,0xb
    7d5a:	e7 2c                	out    0x2c,eax
    7d5c:	00 00                	add    BYTE PTR [rax],al
    7d5e:	05 b1 18 6a 00       	add    eax,0x6a18b1
    7d63:	00 00                	add    BYTE PTR [rax],al
    7d65:	0d 0d 69 63 63       	or     eax,0x6363690d
    7d6a:	00 05 b2 18 6a 00    	add    BYTE PTR [rip+0x6a18b2],al        # 6a9622 <__kernel_end+0x497622>
    7d70:	00 00                	add    BYTE PTR [rax],al
    7d72:	0e                   	(bad)  
    7d73:	0b 6d 31             	or     ebp,DWORD PTR [rbp+0x31]
    7d76:	00 00                	add    BYTE PTR [rax],al
    7d78:	05 b3 18 6a 00       	add    eax,0x6a18b3
    7d7d:	00 00                	add    BYTE PTR [rax],al
    7d7f:	0f 0b                	ud2    
    7d81:	64 09 00             	or     DWORD PTR fs:[rax],eax
    7d84:	00 05 b4 18 e3 00    	add    BYTE PTR [rip+0xe318b4],al        # e3963e <__kernel_end+0xc2763e>
    7d8a:	00 00                	add    BYTE PTR [rax],al
    7d8c:	10 00                	adc    BYTE PTR [rax],al
    7d8e:	19 f7                	sbb    edi,esi
    7d90:	34 00                	xor    al,0x0
    7d92:	00 05 04 01 28 40    	add    BYTE PTR [rip+0x40280104],al        # 40287e9c <__kernel_end+0x40075e9c>
    7d98:	2f                   	(bad)  
    7d99:	00 00                	add    BYTE PTR [rax],al
    7d9b:	f8                   	clc    
    7d9c:	0a 00                	or     al,BYTE PTR [rax]
    7d9e:	00 19                	add    BYTE PTR [rcx],bl
    7da0:	d2 34 00             	shl    BYTE PTR [rax+rax*1],cl
    7da3:	00 05 05 01 20 53    	add    BYTE PTR [rip+0x53200105],al        # 53207eae <__kernel_end+0x52ff5eae>
    7da9:	31 00                	xor    DWORD PTR [rax],eax
    7dab:	00 fe                	add    dh,bh
    7dad:	0a 00                	or     al,BYTE PTR [rax]
    7daf:	00 19                	add    BYTE PTR [rcx],bl
    7db1:	0b 30                	or     esi,DWORD PTR [rax]
    7db3:	00 00                	add    BYTE PTR [rax],al
    7db5:	05 06 01 1f f0       	add    eax,0xf01f0106
    7dba:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7dbd:	04 0b                	add    al,0xb
    7dbf:	00 00                	add    BYTE PTR [rax],al
    7dc1:	19 b2 2d 00 00 05    	sbb    DWORD PTR [rdx+0x500002d],esi
    7dc7:	07                   	(bad)  
    7dc8:	01 1b                	add    DWORD PTR [rbx],ebx
    7dca:	1b 36                	sbb    esi,DWORD PTR [rsi]
    7dcc:	00 00                	add    BYTE PTR [rax],al
    7dce:	6a 00                	push   0x0
    7dd0:	00 00                	add    BYTE PTR [rax],al
    7dd2:	1a 57 35             	sbb    dl,BYTE PTR [rdi+0x35]
    7dd5:	00 00                	add    BYTE PTR [rax],al
    7dd7:	01 ca                	add    edx,ecx
    7dd9:	05 79 2d 00 00       	add    eax,0x2d79
    7dde:	a8 00                	test   al,0x0
    7de0:	00 00                	add    BYTE PTR [rax],al
    7de2:	9e                   	sahf   
    7de3:	09 00                	or     DWORD PTR [rax],eax
    7de5:	00 1b                	add    BYTE PTR [rbx],bl
    7de7:	b6 00                	mov    dh,0x0
    7de9:	00 00                	add    BYTE PTR [rax],al
    7deb:	1b 8e 00 00 00 1b    	sbb    ecx,DWORD PTR [rsi+0x1b000000]
    7df1:	76 00                	jbe    7df3 <stivale_hdr-0x1f820d>
    7df3:	00 00                	add    BYTE PTR [rax],al
    7df5:	1b b9 0b 00 00 00    	sbb    edi,DWORD PTR [rcx+0xb]
    7dfb:	1a 03                	sbb    al,BYTE PTR [rbx]
    7dfd:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7e00:	01 83 05 65 33 00    	add    DWORD PTR [rbx+0x336505],eax
    7e06:	00 a8 00 00 00 c7    	add    BYTE PTR [rax-0x39000000],ch
    7e0c:	09 00                	or     DWORD PTR [rax],eax
    7e0e:	00 1b                	add    BYTE PTR [rbx],bl
    7e10:	b6 00                	mov    dh,0x0
    7e12:	00 00                	add    BYTE PTR [rax],al
    7e14:	1b 8e 00 00 00 1b    	sbb    ecx,DWORD PTR [rsi+0x1b000000]
    7e1a:	76 00                	jbe    7e1c <stivale_hdr-0x1f81e4>
    7e1c:	00 00                	add    BYTE PTR [rax],al
    7e1e:	1b b9 0b 00 00 00    	sbb    edi,DWORD PTR [rcx+0xb]
    7e24:	1c 57                	sbb    al,0x57
    7e26:	32 00                	xor    al,BYTE PTR [rax]
    7e28:	00 01                	add    BYTE PTR [rcx],al
    7e2a:	75 06                	jne    7e32 <stivale_hdr-0x1f81ce>
    7e2c:	35 34 00 00 dd       	xor    eax,0xdd000034
    7e31:	09 00                	or     DWORD PTR [rax],eax
    7e33:	00 1b                	add    BYTE PTR [rbx],bl
    7e35:	b6 00                	mov    dh,0x0
    7e37:	00 00                	add    BYTE PTR [rax],al
    7e39:	00 1c ca             	add    BYTE PTR [rdx+rcx*8],bl
    7e3c:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7e3f:	01 6b 06             	add    DWORD PTR [rbx+0x6],ebp
    7e42:	57                   	push   rdi
    7e43:	2d 00 00 f3 09       	sub    eax,0x9f30000
    7e48:	00 00                	add    BYTE PTR [rax],al
    7e4a:	1b b6 00 00 00 00    	sbb    esi,DWORD PTR [rsi+0x0]
    7e50:	1c 87                	sbb    al,0x87
    7e52:	2e 00 00             	add    BYTE PTR cs:[rax],al
    7e55:	01 4d 06             	add    DWORD PTR [rbp+0x6],ecx
    7e58:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
    7e5b:	00 09                	add    BYTE PTR [rcx],cl
    7e5d:	0a 00                	or     al,BYTE PTR [rax]
    7e5f:	00 1b                	add    BYTE PTR [rbx],bl
    7e61:	b6 00                	mov    dh,0x0
    7e63:	00 00                	add    BYTE PTR [rax],al
    7e65:	00 1d f8 32 00 00    	add    BYTE PTR [rip+0x32f8],bl        # b163 <stivale_hdr-0x1f4e9d>
    7e6b:	01 3c 06             	add    DWORD PTR [rsi+rax*1],edi
    7e6e:	85 2f                	test   DWORD PTR [rdi],ebp
    7e70:	00 00                	add    BYTE PTR [rax],al
    7e72:	1a 87 32 00 00 01    	sbb    al,BYTE PTR [rdi+0x1000032]
    7e78:	23 1b                	and    ebx,DWORD PTR [rbx]
    7e7a:	74 30                	je     7eac <stivale_hdr-0x1f8154>
    7e7c:	00 00                	add    BYTE PTR [rax],al
    7e7e:	b0 02                	mov    al,0x2
    7e80:	00 00                	add    BYTE PTR [rax],al
    7e82:	2f                   	(bad)  
    7e83:	0a 00                	or     al,BYTE PTR [rax]
    7e85:	00 1b                	add    BYTE PTR [rbx],bl
    7e87:	ec                   	in     al,dx
    7e88:	0a 00                	or     al,BYTE PTR [rax]
    7e8a:	00 00                	add    BYTE PTR [rax],al
    7e8c:	1e                   	(bad)  
    7e8d:	af                   	scas   eax,DWORD PTR es:[rdi]
    7e8e:	11 00                	adc    DWORD PTR [rax],eax
    7e90:	00 01                	add    BYTE PTR [rcx],al
    7e92:	19 06                	sbb    DWORD PTR [rsi],eax
    7e94:	14 35                	adc    al,0x35
    7e96:	00 00                	add    BYTE PTR [rax],al
    7e98:	1b f8                	sbb    edi,eax
    7e9a:	0a 00                	or     al,BYTE PTR [rax]
    7e9c:	00 00                	add    BYTE PTR [rax],al
    7e9e:	00 00                	add    BYTE PTR [rax],al
    7ea0:	1f                   	(bad)  
    7ea1:	74 74                	je     7f17 <stivale_hdr-0x1f80e9>
    7ea3:	79 00                	jns    7ea5 <stivale_hdr-0x1f815b>
    7ea5:	08 0e                	or     BYTE PTR [rsi],cl
    7ea7:	0f 00 08             	str    WORD PTR [rax]
    7eaa:	6a 00                	push   0x0
    7eac:	00 00                	add    BYTE PTR [rax],al
    7eae:	5c                   	pop    rsp
    7eaf:	0a 00                	or     al,BYTE PTR [rax]
    7eb1:	00 09                	add    BYTE PTR [rcx],cl
    7eb3:	34 00                	xor    al,0x0
    7eb5:	00 00                	add    BYTE PTR [rax],al
    7eb7:	06                   	(bad)  
    7eb8:	00 08                	add    BYTE PTR [rax],cl
    7eba:	6a 00                	push   0x0
    7ebc:	00 00                	add    BYTE PTR [rax],al
    7ebe:	6c                   	ins    BYTE PTR es:[rdi],dx
    7ebf:	0a 00                	or     al,BYTE PTR [rax]
    7ec1:	00 09                	add    BYTE PTR [rcx],cl
    7ec3:	34 00                	xor    al,0x0
    7ec5:	00 00                	add    BYTE PTR [rax],al
    7ec7:	2b 00                	sub    eax,DWORD PTR [rax]
    7ec9:	08 82 00 00 00 7c    	or     BYTE PTR [rdx+0x7c000000],al
    7ecf:	0a 00                	or     al,BYTE PTR [rax]
    7ed1:	00 09                	add    BYTE PTR [rcx],cl
    7ed3:	34 00                	xor    al,0x0
    7ed5:	00 00                	add    BYTE PTR [rax],al
    7ed7:	03 00                	add    eax,DWORD PTR [rax]
    7ed9:	08 6a 00             	or     BYTE PTR [rdx+0x0],ch
    7edc:	00 00                	add    BYTE PTR [rax],al
    7ede:	8c 0a                	mov    WORD PTR [rdx],cs
    7ee0:	00 00                	add    BYTE PTR [rax],al
    7ee2:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    7ee5:	00 00                	add    BYTE PTR [rax],al
    7ee7:	73 00                	jae    7ee9 <stivale_hdr-0x1f8117>
    7ee9:	08 6a 00             	or     BYTE PTR [rdx+0x0],ch
    7eec:	00 00                	add    BYTE PTR [rax],al
    7eee:	9c                   	pushf  
    7eef:	0a 00                	or     al,BYTE PTR [rax]
    7ef1:	00 09                	add    BYTE PTR [rcx],cl
    7ef3:	34 00                	xor    al,0x0
    7ef5:	00 00                	add    BYTE PTR [rax],al
    7ef7:	5f                   	pop    rdi
    7ef8:	00 08                	add    BYTE PTR [rax],cl
    7efa:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
    7efd:	00 ac 0a 00 00 09 34 	add    BYTE PTR [rdx+rcx*1+0x34090000],ch
    7f04:	00 00                	add    BYTE PTR [rax],al
    7f06:	00 00                	add    BYTE PTR [rax],al
    7f08:	00 08                	add    BYTE PTR [rax],cl
    7f0a:	6a 00                	push   0x0
    7f0c:	00 00                	add    BYTE PTR [rax],al
    7f0e:	bc 0a 00 00 09       	mov    esp,0x900000a
    7f13:	34 00                	xor    al,0x0
    7f15:	00 00                	add    BYTE PTR [rax],al
    7f17:	0f 00 08             	str    WORD PTR [rax]
    7f1a:	6a 00                	push   0x0
    7f1c:	00 00                	add    BYTE PTR [rax],al
    7f1e:	cc                   	int3   
    7f1f:	0a 00                	or     al,BYTE PTR [rax]
    7f21:	00 09                	add    BYTE PTR [rcx],cl
    7f23:	34 00                	xor    al,0x0
    7f25:	00 00                	add    BYTE PTR [rax],al
    7f27:	3f                   	(bad)  
    7f28:	00 08                	add    BYTE PTR [rax],cl
    7f2a:	6a 00                	push   0x0
    7f2c:	00 00                	add    BYTE PTR [rax],al
    7f2e:	dc 0a                	fmul   QWORD PTR [rdx]
    7f30:	00 00                	add    BYTE PTR [rax],al
    7f32:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    7f35:	00 00                	add    BYTE PTR [rax],al
    7f37:	2f                   	(bad)  
    7f38:	00 08                	add    BYTE PTR [rax],cl
    7f3a:	3b 07                	cmp    eax,DWORD PTR [rdi]
    7f3c:	00 00                	add    BYTE PTR [rax],al
    7f3e:	ec                   	in     al,dx
    7f3f:	0a 00                	or     al,BYTE PTR [rax]
    7f41:	00 09                	add    BYTE PTR [rcx],cl
    7f43:	34 00                	xor    al,0x0
    7f45:	00 00                	add    BYTE PTR [rax],al
    7f47:	00 00                	add    BYTE PTR [rax],al
    7f49:	20 08                	and    BYTE PTR [rax],cl
    7f4b:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
    7f4e:	00 20                	add    BYTE PTR [rax],ah
    7f50:	08 6a 00             	or     BYTE PTR [rdx+0x0],ch
    7f53:	00 00                	add    BYTE PTR [rax],al
    7f55:	20 08                	and    BYTE PTR [rax],cl
    7f57:	0a 01                	or     al,BYTE PTR [rcx]
    7f59:	00 00                	add    BYTE PTR [rax],al
    7f5b:	20 08                	and    BYTE PTR [rax],cl
    7f5d:	8a 05 00 00 08 0f    	mov    al,BYTE PTR [rip+0xf080000]        # f087f63 <__kernel_end+0xee75f63>
    7f63:	0b 00                	or     eax,DWORD PTR [rax]
    7f65:	00 0f                	add    BYTE PTR [rdi],cl
    7f67:	0b 00                	or     eax,DWORD PTR [rax]
    7f69:	00 21                	add    BYTE PTR [rcx],ah
    7f6b:	00 20                	add    BYTE PTR [rax],ah
    7f6d:	08 e2                	or     dl,ah
    7f6f:	07                   	(bad)  
    7f70:	00 00                	add    BYTE PTR [rax],al
    7f72:	02 01                	add    al,BYTE PTR [rcx]
    7f74:	06                   	(bad)  
    7f75:	77 00                	ja     7f77 <stivale_hdr-0x1f8089>
    7f77:	00 00                	add    BYTE PTR [rax],al
    7f79:	06                   	(bad)  
    7f7a:	67 66 78 00          	addr32 data16 js 7f7e <stivale_hdr-0x1f8082>
    7f7e:	06                   	(bad)  
    7f7f:	08 0b                	or     BYTE PTR [rbx],cl
    7f81:	31 0b                	xor    DWORD PTR [rbx],ecx
    7f83:	00 00                	add    BYTE PTR [rax],al
    7f85:	07                   	(bad)  
    7f86:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7f87:	02 00                	add    al,BYTE PTR [rax]
    7f89:	00 06                	add    BYTE PTR [rsi],al
    7f8b:	10 0c 00             	adc    BYTE PTR [rax+rax*1],cl
    7f8e:	0e                   	(bad)  
    7f8f:	2e 32 00             	xor    al,BYTE PTR cs:[rax]
    7f92:	00 07                	add    BYTE PTR [rdi],al
    7f94:	08 0b                	or     BYTE PTR [rbx],cl
    7f96:	56                   	push   rsi
    7f97:	0b 00                	or     eax,DWORD PTR [rax]
    7f99:	00 07                	add    BYTE PTR [rdi],al
    7f9b:	eb 06                	jmp    7fa3 <stivale_hdr-0x1f805d>
    7f9d:	00 00                	add    BYTE PTR [rax],al
    7f9f:	07                   	(bad)  
    7fa0:	09 0c 1f             	or     DWORD PTR [rdi+rbx*1],ecx
    7fa3:	70 6d                	jo     8012 <stivale_hdr-0x1f7fee>
    7fa5:	6d                   	ins    DWORD PTR es:[rdi],dx
    7fa6:	00 09                	add    BYTE PTR [rcx],cl
    7fa8:	05 0c 07 22 0e       	add    eax,0xe22070c
    7fad:	00 00                	add    BYTE PTR [rax],al
    7faf:	0a 05 0c 00 02 01    	or     al,BYTE PTR [rip+0x102000c]        # 1027fc1 <__kernel_end+0xe15fc1>
    7fb5:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    7fb8:	00 00                	add    BYTE PTR [rax],al
    7fba:	22 31                	and    dh,BYTE PTR [rcx]
    7fbc:	09 00                	or     DWORD PTR [rax],eax
    7fbe:	00 01                	add    BYTE PTR [rcx],al
    7fc0:	08 19                	or     BYTE PTR [rcx],bl
    7fc2:	09 03                	or     DWORD PTR [rbx],eax
    7fc4:	e0 01                	loopne 7fc7 <stivale_hdr-0x1f8039>
    7fc6:	21 00                	and    DWORD PTR [rax],eax
    7fc8:	00 00                	add    BYTE PTR [rax],al
    7fca:	00 00                	add    BYTE PTR [rax],al
    7fcc:	22 42 09             	and    al,BYTE PTR [rdx+0x9]
    7fcf:	00 00                	add    BYTE PTR [rax],al
    7fd1:	01 09                	add    DWORD PTR [rcx],ecx
    7fd3:	1d 09 03 e8 01       	sbb    eax,0x1e80309
    7fd8:	21 00                	and    DWORD PTR [rax],eax
    7fda:	00 00                	add    BYTE PTR [rax],al
    7fdc:	00 00                	add    BYTE PTR [rax],al
    7fde:	08 0f                	or     BYTE PTR [rdi],cl
    7fe0:	0b 00                	or     eax,DWORD PTR [rax]
    7fe2:	00 91 0b 00 00 09    	add    BYTE PTR [rcx+0x900000b],dl
    7fe8:	34 00                	xor    al,0x0
    7fea:	00 00                	add    BYTE PTR [rax],al
    7fec:	1f                   	(bad)  
    7fed:	00 23                	add    BYTE PTR [rbx],ah
    7fef:	53                   	push   rbx
    7ff0:	09 00                	or     DWORD PTR [rax],eax
    7ff2:	00 01                	add    BYTE PTR [rcx],al
    7ff4:	0a 1c 81             	or     bl,BYTE PTR [rcx+rax*4]
    7ff7:	0b 00                	or     eax,DWORD PTR [rax]
    7ff9:	00 09                	add    BYTE PTR [rcx],cl
    7ffb:	03 00                	add    eax,DWORD PTR [rax]
    7ffd:	02 21                	add    ah,BYTE PTR [rcx]
    7fff:	00 00                	add    BYTE PTR [rax],al
    8001:	00 00                	add    BYTE PTR [rax],al
    8003:	00 22                	add    BYTE PTR [rdx],ah
    8005:	64 09 00             	or     DWORD PTR fs:[rax],eax
    8008:	00 01                	add    BYTE PTR [rcx],al
    800a:	0b 08                	or     ecx,DWORD PTR [rax]
    800c:	09 03                	or     DWORD PTR [rbx],eax
    800e:	00 03                	add    BYTE PTR [rbx],al
    8010:	21 00                	and    DWORD PTR [rax],eax
    8012:	00 00                	add    BYTE PTR [rax],al
    8014:	00 00                	add    BYTE PTR [rax],al
    8016:	24 08                	and    al,0x8
    8018:	25 75 09 00 00       	and    eax,0x975
    801d:	9d                   	popf   
    801e:	7a 20                	jp     8040 <stivale_hdr-0x1f7fc0>
    8020:	00 00                	add    BYTE PTR [rax],al
    8022:	00 00                	add    BYTE PTR [rax],al
    8024:	00 dd                	add    ch,bl
    8026:	02 00                	add    al,BYTE PTR [rax]
    8028:	00 00                	add    BYTE PTR [rax],al
    802a:	00 00                	add    BYTE PTR [rax],al
    802c:	00 01                	add    BYTE PTR [rcx],al
    802e:	9c                   	pushf  
    802f:	90                   	nop
    8030:	0c 00                	or     al,0x0
    8032:	00 26                	add    BYTE PTR [rsi],ah
    8034:	87 31                	xchg   DWORD PTR [rcx],esi
    8036:	00 00                	add    BYTE PTR [rax],al
    8038:	01 ca                	add    edx,ecx
    803a:	28 b6 00 00 00 03    	sub    BYTE PTR [rsi+0x3000000],dh
    8040:	91                   	xchg   ecx,eax
    8041:	a8 7f                	test   al,0x7f
    8043:	26 4c 31 00          	xor    QWORD PTR es:[rax],r8
    8047:	00 01                	add    BYTE PTR [rcx],al
    8049:	ca 3c 8e             	retf   0x8e3c
    804c:	00 00                	add    BYTE PTR [rax],al
    804e:	00 03                	add    BYTE PTR [rbx],al
    8050:	91                   	xchg   ecx,eax
    8051:	a0 7f 26 2f 31 00 00 	movabs al,ds:0xca010000312f267f
    8058:	01 ca 
    805a:	4b 76 00             	rex.WXB jbe 805d <stivale_hdr-0x1f7fa3>
    805d:	00 00                	add    BYTE PTR [rax],al
    805f:	03 91 9c 7f 26 e2    	add    edx,DWORD PTR [rcx-0x1dd98064]
    8065:	2e 00 00             	add    BYTE PTR cs:[rax],al
    8068:	01 ca                	add    edx,ecx
    806a:	5f                   	pop    rdi
    806b:	b9 0b 00 00 03       	mov    ecx,0x300000b
    8070:	91                   	xchg   ecx,eax
    8071:	90                   	nop
    8072:	7f 27                	jg     809b <stivale_hdr-0x1f7f65>
    8074:	fb                   	sti    
    8075:	33 00                	xor    eax,DWORD PTR [rax]
    8077:	00 01                	add    BYTE PTR [rcx],al
    8079:	cc                   	int3   
    807a:	10 0f                	adc    BYTE PTR [rdi],cl
    807c:	0b 00                	or     eax,DWORD PTR [rax]
    807e:	00 02                	add    BYTE PTR [rdx],al
    8080:	91                   	xchg   ecx,eax
    8081:	60                   	(bad)  
    8082:	27                   	(bad)  
    8083:	b7 2f                	mov    bh,0x2f
    8085:	00 00                	add    BYTE PTR [rax],al
    8087:	01 ce                	add    esi,ecx
    8089:	09 a8 00 00 00 02    	or     DWORD PTR [rax+0x2000000],ebp
    808f:	91                   	xchg   ecx,eax
    8090:	5c                   	pop    rsp
    8091:	27                   	(bad)  
    8092:	04 33                	add    al,0x33
    8094:	00 00                	add    BYTE PTR [rax],al
    8096:	01 d3                	add    ebx,edx
    8098:	0c 82                	or     al,0x82
    809a:	00 00                	add    BYTE PTR [rax],al
    809c:	00 02                	add    BYTE PTR [rdx],al
    809e:	91                   	xchg   ecx,eax
    809f:	58                   	pop    rax
    80a0:	27                   	(bad)  
    80a1:	ec                   	in     al,dx
    80a2:	32 00                	xor    al,BYTE PTR [rax]
    80a4:	00 01                	add    BYTE PTR [rcx],al
    80a6:	d4                   	(bad)  
    80a7:	0c 82                	or     al,0x82
    80a9:	00 00                	add    BYTE PTR [rax],al
    80ab:	00 02                	add    BYTE PTR [rdx],al
    80ad:	91                   	xchg   ecx,eax
    80ae:	54                   	push   rsp
    80af:	27                   	(bad)  
    80b0:	94                   	xchg   esp,eax
    80b1:	35 00 00 01 d8       	xor    eax,0xd8010000
    80b6:	19 90 0c 00 00 02    	sbb    DWORD PTR [rax+0x200000c],edx
    80bc:	91                   	xchg   ecx,eax
    80bd:	48 27                	rex.W (bad) 
    80bf:	27                   	(bad)  
    80c0:	2e 00 00             	add    BYTE PTR cs:[rax],al
    80c3:	01 e0                	add    eax,esp
    80c5:	18 96 0c 00 00 02    	sbb    BYTE PTR [rsi+0x200000c],dl
    80cb:	91                   	xchg   ecx,eax
    80cc:	40 27                	rex (bad) 
    80ce:	a3 35 00 00 01 ea 17 	movabs ds:0xc9c17ea01000035,eax
    80d5:	9c 0c 
    80d7:	00 00                	add    BYTE PTR [rax],al
    80d9:	03 91 b8 7f 27 77    	add    edx,DWORD PTR [rcx+0x77277fb8]
    80df:	34 00                	xor    al,0x0
    80e1:	00 01                	add    BYTE PTR [rcx],al
    80e3:	fb                   	sti    
    80e4:	0c 8e                	or     al,0x8e
    80e6:	00 00                	add    BYTE PTR [rax],al
    80e8:	00 02                	add    BYTE PTR [rdx],al
    80ea:	91                   	xchg   ecx,eax
    80eb:	68 00 20 08 50       	push   0x50082000
    80f0:	06                   	(bad)  
    80f1:	00 00                	add    BYTE PTR [rax],al
    80f3:	20 08                	and    BYTE PTR [rax],cl
    80f5:	a0 07 00 00 20 08 24 	movabs al,ds:0x8240820000007
    80fc:	08 00 
    80fe:	00 25 9e 09 00 00    	add    BYTE PTR [rip+0x99e],ah        # 8aa2 <stivale_hdr-0x1f755e>
    8104:	c0 77 20 00          	shl    BYTE PTR [rdi+0x20],0x0
    8108:	00 00                	add    BYTE PTR [rax],al
    810a:	00 00                	add    BYTE PTR [rax],al
    810c:	dd 02                	fld    QWORD PTR [rdx]
    810e:	00 00                	add    BYTE PTR [rax],al
    8110:	00 00                	add    BYTE PTR [rax],al
    8112:	00 00                	add    BYTE PTR [rax],al
    8114:	01 9c 77 0d 00 00 26 	add    DWORD PTR [rdi+rsi*2+0x2600000d],ebx
    811b:	87 31                	xchg   DWORD PTR [rcx],esi
    811d:	00 00                	add    BYTE PTR [rax],al
    811f:	01 83 27 b6 00 00    	add    DWORD PTR [rbx+0xb627],eax
    8125:	00 03                	add    BYTE PTR [rbx],al
    8127:	91                   	xchg   ecx,eax
    8128:	a8 7f                	test   al,0x7f
    812a:	26 4c 31 00          	xor    QWORD PTR es:[rax],r8
    812e:	00 01                	add    BYTE PTR [rcx],al
    8130:	83 3b 8e             	cmp    DWORD PTR [rbx],0xffffff8e
    8133:	00 00                	add    BYTE PTR [rax],al
    8135:	00 03                	add    BYTE PTR [rbx],al
    8137:	91                   	xchg   ecx,eax
    8138:	a0 7f 26 2f 31 00 00 	movabs al,ds:0x83010000312f267f
    813f:	01 83 
    8141:	4a 76 00             	rex.WX jbe 8144 <stivale_hdr-0x1f7ebc>
    8144:	00 00                	add    BYTE PTR [rax],al
    8146:	03 91 9c 7f 26 08    	add    edx,DWORD PTR [rcx+0x8267f9c]
    814c:	2d 00 00 01 83       	sub    eax,0x83010000
    8151:	5e                   	pop    rsi
    8152:	b9 0b 00 00 03       	mov    ecx,0x300000b
    8157:	91                   	xchg   ecx,eax
    8158:	90                   	nop
    8159:	7f 27                	jg     8182 <stivale_hdr-0x1f7e7e>
    815b:	fb                   	sti    
    815c:	33 00                	xor    eax,DWORD PTR [rax]
    815e:	00 01                	add    BYTE PTR [rcx],al
    8160:	85 10                	test   DWORD PTR [rax],edx
    8162:	0f 0b                	ud2    
    8164:	00 00                	add    BYTE PTR [rax],al
    8166:	02 91 60 27 b7 2f    	add    dl,BYTE PTR [rcx+0x2fb72760]
    816c:	00 00                	add    BYTE PTR [rax],al
    816e:	01 87 09 a8 00 00    	add    DWORD PTR [rdi+0xa809],eax
    8174:	00 02                	add    BYTE PTR [rdx],al
    8176:	91                   	xchg   ecx,eax
    8177:	5c                   	pop    rsp
    8178:	27                   	(bad)  
    8179:	04 33                	add    al,0x33
    817b:	00 00                	add    BYTE PTR [rax],al
    817d:	01 8c 0c 82 00 00 00 	add    DWORD PTR [rsp+rcx*1+0x82],ecx
    8184:	02 91 58 27 ec 32    	add    dl,BYTE PTR [rcx+0x32ec2758]
    818a:	00 00                	add    BYTE PTR [rax],al
    818c:	01 8d 0c 82 00 00    	add    DWORD PTR [rbp+0x820c],ecx
    8192:	00 02                	add    BYTE PTR [rdx],al
    8194:	91                   	xchg   ecx,eax
    8195:	54                   	push   rsp
    8196:	27                   	(bad)  
    8197:	94                   	xchg   esp,eax
    8198:	35 00 00 01 91       	xor    eax,0x91010000
    819d:	19 90 0c 00 00 02    	sbb    DWORD PTR [rax+0x200000c],edx
    81a3:	91                   	xchg   ecx,eax
    81a4:	48 27                	rex.W (bad) 
    81a6:	27                   	(bad)  
    81a7:	2e 00 00             	add    BYTE PTR cs:[rax],al
    81aa:	01 99 18 96 0c 00    	add    DWORD PTR [rcx+0xc9618],ebx
    81b0:	00 02                	add    BYTE PTR [rdx],al
    81b2:	91                   	xchg   ecx,eax
    81b3:	40 27                	rex (bad) 
    81b5:	a3 35 00 00 01 a3 17 	movabs ds:0xc9c17a301000035,eax
    81bc:	9c 0c 
    81be:	00 00                	add    BYTE PTR [rax],al
    81c0:	03 91 b8 7f 27 77    	add    edx,DWORD PTR [rcx+0x77277fb8]
    81c6:	34 00                	xor    al,0x0
    81c8:	00 01                	add    BYTE PTR [rcx],al
    81ca:	b4 0c                	mov    ah,0xc
    81cc:	8e 00                	mov    es,WORD PTR [rax]
    81ce:	00 00                	add    BYTE PTR [rax],al
    81d0:	02 91 68 00 28 c7    	add    dl,BYTE PTR [rcx-0x38d7ff98]
    81d6:	09 00                	or     DWORD PTR [rax],eax
    81d8:	00 3c 77             	add    BYTE PTR [rdi+rsi*2],bh
    81db:	20 00                	and    BYTE PTR [rax],al
    81dd:	00 00                	add    BYTE PTR [rax],al
    81df:	00 00                	add    BYTE PTR [rax],al
    81e1:	84 00                	test   BYTE PTR [rax],al
    81e3:	00 00                	add    BYTE PTR [rax],al
    81e5:	00 00                	add    BYTE PTR [rax],al
    81e7:	00 00                	add    BYTE PTR [rax],al
    81e9:	01 9c b1 0d 00 00 26 	add    DWORD PTR [rcx+rsi*4+0x2600000d],ebx
    81f0:	87 31                	xchg   DWORD PTR [rcx],esi
    81f2:	00 00                	add    BYTE PTR [rax],al
    81f4:	01 75 28             	add    DWORD PTR [rbp+0x28],esi
    81f7:	b6 00                	mov    dh,0x0
    81f9:	00 00                	add    BYTE PTR [rax],al
    81fb:	02 91 58 27 fb 33    	add    dl,BYTE PTR [rcx+0x33fb2758]
    8201:	00 00                	add    BYTE PTR [rax],al
    8203:	01 77 10             	add    DWORD PTR [rdi+0x10],esi
    8206:	0f 0b                	ud2    
    8208:	00 00                	add    BYTE PTR [rax],al
    820a:	02 91 68 00 28 dd    	add    dl,BYTE PTR [rcx-0x22d7ff98]
    8210:	09 00                	or     DWORD PTR [rax],eax
    8212:	00 cf                	add    bh,cl
    8214:	76 20                	jbe    8236 <stivale_hdr-0x1f7dca>
    8216:	00 00                	add    BYTE PTR [rax],al
    8218:	00 00                	add    BYTE PTR [rax],al
    821a:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    821d:	00 00                	add    BYTE PTR [rax],al
    821f:	00 00                	add    BYTE PTR [rax],al
    8221:	00 00                	add    BYTE PTR [rax],al
    8223:	01 9c eb 0d 00 00 26 	add    DWORD PTR [rbx+rbp*8+0x2600000d],ebx
    822a:	87 31                	xchg   DWORD PTR [rcx],esi
    822c:	00 00                	add    BYTE PTR [rax],al
    822e:	01 6b 29             	add    DWORD PTR [rbx+0x29],ebp
    8231:	b6 00                	mov    dh,0x0
    8233:	00 00                	add    BYTE PTR [rax],al
    8235:	02 91 58 27 fb 33    	add    dl,BYTE PTR [rcx+0x33fb2758]
    823b:	00 00                	add    BYTE PTR [rax],al
    823d:	01 6d 10             	add    DWORD PTR [rbp+0x10],ebp
    8240:	0f 0b                	ud2    
    8242:	00 00                	add    BYTE PTR [rax],al
    8244:	02 91 68 00 25 f3    	add    dl,BYTE PTR [rcx-0xcdaff98]
    824a:	09 00                	or     DWORD PTR [rax],eax
    824c:	00 4e 75             	add    BYTE PTR [rsi+0x75],cl
    824f:	20 00                	and    BYTE PTR [rax],al
    8251:	00 00                	add    BYTE PTR [rax],al
    8253:	00 00                	add    BYTE PTR [rax],al
    8255:	81 01 00 00 00 00    	add    DWORD PTR [rcx],0x0
    825b:	00 00                	add    BYTE PTR [rax],al
    825d:	01 9c a3 0e 00 00 26 	add    DWORD PTR [rbx+riz*4+0x2600000e],ebx
    8264:	87 31                	xchg   DWORD PTR [rcx],esi
    8266:	00 00                	add    BYTE PTR [rax],al
    8268:	01 4d 2a             	add    DWORD PTR [rbp+0x2a],ecx
    826b:	b6 00                	mov    dh,0x0
    826d:	00 00                	add    BYTE PTR [rax],al
    826f:	03 91 a8 7f 27 fb    	add    edx,DWORD PTR [rcx-0x4d88058]
    8275:	33 00                	xor    eax,DWORD PTR [rax]
    8277:	00 01                	add    BYTE PTR [rcx],al
    8279:	4f 10 0f             	rex.WRXB adc BYTE PTR [r15],r9b
    827c:	0b 00                	or     eax,DWORD PTR [rax]
    827e:	00 02                	add    BYTE PTR [rdx],al
    8280:	91                   	xchg   ecx,eax
    8281:	60                   	(bad)  
    8282:	27                   	(bad)  
    8283:	35 2e 00 00 01       	xor    eax,0x100002e
    8288:	53                   	push   rbx
    8289:	0b b9 0b 00 00 02    	or     edi,DWORD PTR [rcx+0x200000b]
    828f:	91                   	xchg   ecx,eax
    8290:	58                   	pop    rax
    8291:	27                   	(bad)  
    8292:	75 31                	jne    82c5 <stivale_hdr-0x1f7d3b>
    8294:	00 00                	add    BYTE PTR [rax],al
    8296:	01 58 0b             	add    DWORD PTR [rax+0xb],ebx
    8299:	b9 0b 00 00 02       	mov    ecx,0x200000b
    829e:	91                   	xchg   ecx,eax
    829f:	50                   	push   rax
    82a0:	27                   	(bad)  
    82a1:	94                   	xchg   esp,eax
    82a2:	35 00 00 01 5d       	xor    eax,0x5d010000
    82a7:	19 90 0c 00 00 02    	sbb    DWORD PTR [rax+0x200000c],edx
    82ad:	91                   	xchg   ecx,eax
    82ae:	48 29 13             	sub    QWORD PTR [rbx],rdx
    82b1:	76 20                	jbe    82d3 <stivale_hdr-0x1f7d2d>
    82b3:	00 00                	add    BYTE PTR [rax],al
    82b5:	00 00                	add    BYTE PTR [rax],al
    82b7:	00 ad 00 00 00 00    	add    BYTE PTR [rbp+0x0],ch
    82bd:	00 00                	add    BYTE PTR [rax],al
    82bf:	00 2a                	add    BYTE PTR [rdx],ch
    82c1:	69 00 01 5f 0e a8    	imul   eax,DWORD PTR [rax],0xa80e5f01
    82c7:	00 00                	add    BYTE PTR [rax],al
    82c9:	00 02                	add    BYTE PTR [rdx],al
    82cb:	91                   	xchg   ecx,eax
    82cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    82cd:	29 24 76             	sub    DWORD PTR [rsi+rsi*2],esp
    82d0:	20 00                	and    BYTE PTR [rax],al
    82d2:	00 00                	add    BYTE PTR [rax],al
    82d4:	00 00                	add    BYTE PTR [rax],al
    82d6:	93                   	xchg   ebx,eax
    82d7:	00 00                	add    BYTE PTR [rax],al
    82d9:	00 00                	add    BYTE PTR [rax],al
    82db:	00 00                	add    BYTE PTR [rax],al
    82dd:	00 27                	add    BYTE PTR [rdi],ah
    82df:	f6 35 00 00 01 61    	div    BYTE PTR [rip+0x61010000]        # 610182e5 <__kernel_end+0x60e062e5>
    82e5:	0f b9 0b             	ud1    ecx,DWORD PTR [rbx]
    82e8:	00 00                	add    BYTE PTR [rax],al
    82ea:	02 91 40 27 8f 22    	add    dl,BYTE PTR [rcx+0x228f2740]
    82f0:	00 00                	add    BYTE PTR [rax],al
    82f2:	01 62 10             	add    DWORD PTR [rdx+0x10],esp
    82f5:	8e 00                	mov    es,WORD PTR [rax]
    82f7:	00 00                	add    BYTE PTR [rax],al
    82f9:	03 91 b8 7f 00 00    	add    edx,DWORD PTR [rcx+0x7fb8]
    82ff:	00 25 09 0a 00 00    	add    BYTE PTR [rip+0xa09],ah        # 8d0e <stivale_hdr-0x1f72f2>
    8305:	35 74 20 00 00       	xor    eax,0x2074
    830a:	00 00                	add    BYTE PTR [rax],al
    830c:	00 19                	add    BYTE PTR [rcx],bl
    830e:	01 00                	add    DWORD PTR [rax],eax
    8310:	00 00                	add    BYTE PTR [rax],al
    8312:	00 00                	add    BYTE PTR [rax],al
    8314:	00 01                	add    BYTE PTR [rcx],al
    8316:	9c                   	pushf  
    8317:	0e                   	(bad)  
    8318:	0f 00 00             	sldt   WORD PTR [rax]
    831b:	27                   	(bad)  
    831c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    831d:	30 00                	xor    BYTE PTR [rax],al
    831f:	00 01                	add    BYTE PTR [rcx],al
    8321:	3d 0c 82 00 00       	cmp    eax,0x820c
    8326:	00 02                	add    BYTE PTR [rdx],al
    8328:	91                   	xchg   ecx,eax
    8329:	58                   	pop    rax
    832a:	29 4b 74             	sub    DWORD PTR [rbx+0x74],ecx
    832d:	20 00                	and    BYTE PTR [rax],al
    832f:	00 00                	add    BYTE PTR [rax],al
    8331:	00 00                	add    BYTE PTR [rax],al
    8333:	fc                   	cld    
    8334:	00 00                	add    BYTE PTR [rax],al
    8336:	00 00                	add    BYTE PTR [rax],al
    8338:	00 00                	add    BYTE PTR [rax],al
    833a:	00 2a                	add    BYTE PTR [rdx],ch
    833c:	69 00 01 3e 0e a8    	imul   eax,DWORD PTR [rax],0xa80e3e01
    8342:	00 00                	add    BYTE PTR [rax],al
    8344:	00 02                	add    BYTE PTR [rdx],al
    8346:	91                   	xchg   ecx,eax
    8347:	5c                   	pop    rsp
    8348:	29 75 74             	sub    DWORD PTR [rbp+0x74],esi
    834b:	20 00                	and    BYTE PTR [rax],al
    834d:	00 00                	add    BYTE PTR [rax],al
    834f:	00 00                	add    BYTE PTR [rax],al
    8351:	c9                   	leave  
    8352:	00 00                	add    BYTE PTR [rax],al
    8354:	00 00                	add    BYTE PTR [rax],al
    8356:	00 00                	add    BYTE PTR [rax],al
    8358:	00 27                	add    BYTE PTR [rdi],ah
    835a:	2e 2f                	cs (bad) 
    835c:	00 00                	add    BYTE PTR [rax],al
    835e:	01 40 17             	add    DWORD PTR [rax+0x17],eax
    8361:	b0 02                	mov    al,0x2
    8363:	00 00                	add    BYTE PTR [rax],al
    8365:	02 91 54 00 00 00    	add    dl,BYTE PTR [rcx+0x54]
    836b:	28 15 0a 00 00 9a    	sub    BYTE PTR [rip+0xffffffff9a00000a],dl        # ffffffff9a00837b <__kernel_end+0xffffffff99df637b>
    8371:	73 20                	jae    8393 <stivale_hdr-0x1f7c6d>
    8373:	00 00                	add    BYTE PTR [rax],al
    8375:	00 00                	add    BYTE PTR [rax],al
    8377:	00 9b 00 00 00 00    	add    BYTE PTR [rbx+0x0],bl
    837d:	00 00                	add    BYTE PTR [rax],al
    837f:	00 01                	add    BYTE PTR [rcx],al
    8381:	9c                   	pushf  
    8382:	66 0f 00 00          	data16 sldt WORD PTR [rax]
    8386:	26 fb                	es sti 
    8388:	33 00                	xor    eax,DWORD PTR [rax]
    838a:	00 01                	add    BYTE PTR [rcx],al
    838c:	23 43 ec             	and    eax,DWORD PTR [rbx-0x14]
    838f:	0a 00                	or     al,BYTE PTR [rax]
    8391:	00 02                	add    BYTE PTR [rdx],al
    8393:	91                   	xchg   ecx,eax
    8394:	58                   	pop    rax
    8395:	27                   	(bad)  
    8396:	29 30                	sub    DWORD PTR [rax],esi
    8398:	00 00                	add    BYTE PTR [rax],al
    839a:	01 24 0c             	add    DWORD PTR [rsp+rcx*1],esp
    839d:	82                   	(bad)  
    839e:	00 00                	add    BYTE PTR [rax],al
    83a0:	00 02                	add    BYTE PTR [rdx],al
    83a2:	91                   	xchg   ecx,eax
    83a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    83a4:	27                   	(bad)  
    83a5:	56                   	push   rsi
    83a6:	34 00                	xor    al,0x0
    83a8:	00 01                	add    BYTE PTR [rcx],al
    83aa:	25 0c 6a 00 00       	and    eax,0x6a0c
    83af:	00 02                	add    BYTE PTR [rdx],al
    83b1:	91                   	xchg   ecx,eax
    83b2:	6b 27 af             	imul   esp,DWORD PTR [rdi],0xffffffaf
    83b5:	35 00 00 01 26       	xor    eax,0x26010000
    83ba:	0c 6a                	or     al,0x6a
    83bc:	00 00                	add    BYTE PTR [rax],al
    83be:	00 02                	add    BYTE PTR [rdx],al
    83c0:	91                   	xchg   ecx,eax
    83c1:	6a 00                	push   0x0
    83c3:	25 2f 0a 00 00       	and    eax,0xa2f
    83c8:	24 73                	and    al,0x73
    83ca:	20 00                	and    BYTE PTR [rax],al
    83cc:	00 00                	add    BYTE PTR [rax],al
    83ce:	00 00                	add    BYTE PTR [rax],al
    83d0:	76 00                	jbe    83d2 <stivale_hdr-0x1f7c2e>
    83d2:	00 00                	add    BYTE PTR [rax],al
    83d4:	00 00                	add    BYTE PTR [rax],al
    83d6:	00 00                	add    BYTE PTR [rax],al
    83d8:	01 9c b0 0f 00 00 26 	add    DWORD PTR [rax+rsi*4+0x2600000f],ebx
    83df:	10 2e                	adc    BYTE PTR [rsi],ch
    83e1:	00 00                	add    BYTE PTR [rax],al
    83e3:	01 19                	add    DWORD PTR [rcx],ebx
    83e5:	35 f8 0a 00 00       	xor    eax,0xaf8
    83ea:	02 91 58 29 6e 73    	add    dl,BYTE PTR [rcx+0x736e2958]
    83f0:	20 00                	and    BYTE PTR [rax],al
    83f2:	00 00                	add    BYTE PTR [rax],al
    83f4:	00 00                	add    BYTE PTR [rax],al
    83f6:	29 00                	sub    DWORD PTR [rax],eax
    83f8:	00 00                	add    BYTE PTR [rax],al
    83fa:	00 00                	add    BYTE PTR [rax],al
    83fc:	00 00                	add    BYTE PTR [rax],al
    83fe:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    8401:	01 1f                	add    DWORD PTR [rdi],ebx
    8403:	0e                   	(bad)  
    8404:	a8 00                	test   al,0x0
    8406:	00 00                	add    BYTE PTR [rax],al
    8408:	02 91 6c 00 00 2b    	add    dl,BYTE PTR [rcx+0x2b00006c]
    840e:	dd 2f                	(bad)  [rdi]
    8410:	00 00                	add    BYTE PTR [rax],al
    8412:	01 0d 05 fa 31 00    	add    DWORD PTR [rip+0x31fa05],ecx        # 327e1d <__kernel_end+0x115e1d>
    8418:	00 a8 00 00 00 d9    	add    BYTE PTR [rax-0x27000000],ch
    841e:	72 20                	jb     8440 <stivale_hdr-0x1f7bc0>
    8420:	00 00                	add    BYTE PTR [rax],al
    8422:	00 00                	add    BYTE PTR [rax],al
    8424:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    8427:	00 00                	add    BYTE PTR [rax],al
    8429:	00 00                	add    BYTE PTR [rax],al
    842b:	00 00                	add    BYTE PTR [rax],al
    842d:	01 9c 26 fb 33 00 00 	add    DWORD PTR [rsi+riz*1+0x33fb],ebx
    8434:	01 0d 32 ec 0a 00    	add    DWORD PTR [rip+0xaec32],ecx        # b706c <stivale_hdr-0x148f94>
    843a:	00 02                	add    BYTE PTR [rdx],al
    843c:	91                   	xchg   ecx,eax
    843d:	58                   	pop    rax
    843e:	27                   	(bad)  
    843f:	71 34                	jno    8475 <stivale_hdr-0x1f7b8b>
    8441:	00 00                	add    BYTE PTR [rax],al
    8443:	01 0f                	add    DWORD PTR [rdi],ecx
    8445:	09 82 00 00 00 02    	or     DWORD PTR [rdx+0x2000000],eax
    844b:	91                   	xchg   ecx,eax
    844c:	6c                   	ins    BYTE PTR es:[rdi],dx
    844d:	29 f8                	sub    eax,edi
    844f:	72 20                	jb     8471 <stivale_hdr-0x1f7b8f>
    8451:	00 00                	add    BYTE PTR [rax],al
    8453:	00 00                	add    BYTE PTR [rax],al
    8455:	00 25 00 00 00 00    	add    BYTE PTR [rip+0x0],ah        # 845b <stivale_hdr-0x1f7ba5>
    845b:	00 00                	add    BYTE PTR [rax],al
    845d:	00 2a                	add    BYTE PTR [rdx],ch
    845f:	69 00 01 10 0b a8    	imul   eax,DWORD PTR [rax],0xa80b1001
    8465:	00 00                	add    BYTE PTR [rax],al
    8467:	00 02                	add    BYTE PTR [rdx],al
    8469:	91                   	xchg   ecx,eax
    846a:	68 00 00 00 6b       	push   0x6b000000
    846f:	04 00                	add    al,0x0
    8471:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    8474:	1c 2a                	sbb    al,0x2a
    8476:	00 00                	add    BYTE PTR [rax],al
    8478:	08 01                	or     BYTE PTR [rcx],al
    847a:	7c 00                	jl     847c <stivale_hdr-0x1f7b84>
    847c:	00 00                	add    BYTE PTR [rax],al
    847e:	04 a9                	add    al,0xa9
    8480:	37                   	(bad)  
    8481:	00 00                	add    BYTE PTR [rax],al
    8483:	24 01                	and    al,0x1
    8485:	00 00                	add    BYTE PTR [rax],al
    8487:	7a 7d                	jp     8506 <stivale_hdr-0x1f7afa>
    8489:	20 00                	and    BYTE PTR [rax],al
    848b:	00 00                	add    BYTE PTR [rax],al
    848d:	00 00                	add    BYTE PTR [rax],al
    848f:	da 03                	fiadd  DWORD PTR [rbx]
    8491:	00 00                	add    BYTE PTR [rax],al
    8493:	00 00                	add    BYTE PTR [rax],al
    8495:	00 00                	add    BYTE PTR [rax],al
    8497:	8e 37                	mov    ?,WORD PTR [rdi]
    8499:	00 00                	add    BYTE PTR [rax],al
    849b:	02 08                	add    cl,BYTE PTR [rax]
    849d:	05 6a 01 00 00       	add    eax,0x16a
    84a2:	02 08                	add    cl,BYTE PTR [rax]
    84a4:	07                   	(bad)  
    84a5:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    84a8:	00 02                	add    BYTE PTR [rdx],al
    84aa:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 8615 <stivale_hdr-0x1f79eb>
    84b0:	02 10                	add    dl,BYTE PTR [rax]
    84b2:	04 8f                	add    al,0x8f
    84b4:	01 00                	add    DWORD PTR [rax],eax
    84b6:	00 03                	add    BYTE PTR [rbx],al
    84b8:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    84bb:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    84be:	23 00                	and    eax,DWORD PTR [rax]
    84c0:	00 03                	add    BYTE PTR [rbx],al
    84c2:	04 1d                	add    al,0x1d
    84c4:	5a                   	pop    rdx
    84c5:	00 00                	add    BYTE PTR [rax],al
    84c7:	00 02                	add    BYTE PTR [rdx],al
    84c9:	01 08                	add    DWORD PTR [rax],ecx
    84cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    84cc:	00 00                	add    BYTE PTR [rax],al
    84ce:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
    84d1:	08 00                	or     BYTE PTR [rax],al
    84d3:	00 03                	add    BYTE PTR [rbx],al
    84d5:	05 1d 6d 00 00       	add    eax,0x6d1d
    84da:	00 02                	add    BYTE PTR [rdx],al
    84dc:	02 07                	add    al,BYTE PTR [rdi]
    84de:	9b                   	fwait
    84df:	01 00                	add    DWORD PTR [rax],eax
    84e1:	00 02                	add    BYTE PTR [rdx],al
    84e3:	04 07                	add    al,0x7
    84e5:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    84e8:	00 02                	add    BYTE PTR [rdx],al
    84ea:	10 07                	adc    BYTE PTR [rdi],al
    84ec:	00 00                	add    BYTE PTR [rax],al
    84ee:	00 00                	add    BYTE PTR [rax],al
    84f0:	02 01                	add    al,BYTE PTR [rcx]
    84f2:	06                   	(bad)  
    84f3:	70 00                	jo     84f5 <stivale_hdr-0x1f7b0b>
    84f5:	00 00                	add    BYTE PTR [rax],al
    84f7:	02 02                	add    al,BYTE PTR [rdx]
    84f9:	05 73 01 00 00       	add    eax,0x173
    84fe:	05 04 05 69 6e       	add    eax,0x6e690504
    8503:	74 00                	je     8505 <stivale_hdr-0x1f7afb>
    8505:	02 10                	add    dl,BYTE PTR [rax]
    8507:	05 1b 01 00 00       	add    eax,0x11b
    850c:	06                   	(bad)  
    850d:	69 6f 00 04 08 0b 21 	imul   ebp,DWORD PTR [rdi+0x0],0x210b0804
    8514:	02 00                	add    al,BYTE PTR [rax]
    8516:	00 07                	add    BYTE PTR [rdi],al
    8518:	16                   	(bad)  
    8519:	03 00                	add    eax,DWORD PTR [rax]
    851b:	00 04 09             	add    BYTE PTR [rcx+rcx*1],al
    851e:	0c 0e                	or     al,0xe
    8520:	02 00                	add    al,BYTE PTR [rax]
    8522:	00 08                	add    BYTE PTR [rax],cl
    8524:	7c 16                	jl     853c <stivale_hdr-0x1f7ac4>
    8526:	00 00                	add    BYTE PTR [rax],al
    8528:	02 04 0e             	add    al,BYTE PTR [rsi+rcx*1]
    852b:	0a 53 01             	or     dl,BYTE PTR [rbx+0x1]
    852e:	00 00                	add    BYTE PTR [rax],al
    8530:	09 f4                	or     esp,esi
    8532:	15 00 00 04 0f       	adc    eax,0xf040000
    8537:	12 5a 00             	adc    bl,BYTE PTR [rdx+0x0]
    853a:	00 00                	add    BYTE PTR [rax],al
    853c:	01 08                	add    DWORD PTR [rax],ecx
    853e:	00 00                	add    BYTE PTR [rax],al
    8540:	09 6b 16             	or     DWORD PTR [rbx+0x16],ebp
    8543:	00 00                	add    BYTE PTR [rax],al
    8545:	04 10                	add    al,0x10
    8547:	09 21                	or     DWORD PTR [rcx],esp
    8549:	02 00                	add    al,BYTE PTR [rax]
    854b:	00 01                	add    BYTE PTR [rcx],al
    854d:	01 07                	add    DWORD PTR [rdi],eax
    854f:	01 09                	add    DWORD PTR [rcx],ecx
    8551:	7f 15                	jg     8568 <stivale_hdr-0x1f7a98>
    8553:	00 00                	add    BYTE PTR [rax],al
    8555:	04 11                	add    al,0x11
    8557:	09 21                	or     DWORD PTR [rcx],esp
    8559:	02 00                	add    al,BYTE PTR [rax]
    855b:	00 01                	add    BYTE PTR [rcx],al
    855d:	01 06                	add    DWORD PTR [rsi],eax
    855f:	01 09                	add    DWORD PTR [rcx],ecx
    8561:	0a 16                	or     dl,BYTE PTR [rsi]
    8563:	00 00                	add    BYTE PTR [rax],al
    8565:	04 12                	add    al,0x12
    8567:	09 21                	or     DWORD PTR [rcx],esp
    8569:	02 00                	add    al,BYTE PTR [rax]
    856b:	00 01                	add    BYTE PTR [rcx],al
    856d:	01 05 01 09 c3 15    	add    DWORD PTR [rip+0x15c30901],eax        # 15c38e74 <__kernel_end+0x15a26e74>
    8573:	00 00                	add    BYTE PTR [rax],al
    8575:	04 13                	add    al,0x13
    8577:	09 21                	or     DWORD PTR [rcx],esp
    8579:	02 00                	add    al,BYTE PTR [rax]
    857b:	00 01                	add    BYTE PTR [rcx],al
    857d:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    8580:	09 1e                	or     DWORD PTR [rsi],ebx
    8582:	16                   	(bad)  
    8583:	00 00                	add    BYTE PTR [rax],al
    8585:	04 14                	add    al,0x14
    8587:	09 21                	or     DWORD PTR [rcx],esp
    8589:	02 00                	add    al,BYTE PTR [rax]
    858b:	00 01                	add    BYTE PTR [rcx],al
    858d:	01 03                	add    DWORD PTR [rbx],eax
    858f:	01 09                	add    DWORD PTR [rcx],ecx
    8591:	14 16                	adc    al,0x16
    8593:	00 00                	add    BYTE PTR [rax],al
    8595:	04 15                	add    al,0x15
    8597:	09 21                	or     DWORD PTR [rcx],esp
    8599:	02 00                	add    al,BYTE PTR [rax]
    859b:	00 01                	add    BYTE PTR [rcx],al
    859d:	01 02                	add    DWORD PTR [rdx],eax
    859f:	01 09                	add    DWORD PTR [rcx],ecx
    85a1:	5f                   	pop    rdi
    85a2:	16                   	(bad)  
    85a3:	00 00                	add    BYTE PTR [rax],al
    85a5:	04 16                	add    al,0x16
    85a7:	09 21                	or     DWORD PTR [rcx],esp
    85a9:	02 00                	add    al,BYTE PTR [rax]
    85ab:	00 01                	add    BYTE PTR [rcx],al
    85ad:	01 01                	add    DWORD PTR [rcx],eax
    85af:	01 09                	add    DWORD PTR [rcx],ecx
    85b1:	cc                   	int3   
    85b2:	15 00 00 04 17       	adc    eax,0x17040000
    85b7:	09 21                	or     DWORD PTR [rcx],esp
    85b9:	02 00                	add    al,BYTE PTR [rax]
    85bb:	00 01                	add    BYTE PTR [rcx],al
    85bd:	01 00                	add    DWORD PTR [rax],eax
    85bf:	01 00                	add    DWORD PTR [rax],eax
    85c1:	0a 7f 15             	or     bh,BYTE PTR [rdi+0x15]
    85c4:	00 00                	add    BYTE PTR [rax],al
    85c6:	04 19                	add    al,0x19
    85c8:	0f c1 37             	xadd   DWORD PTR [rdi],esi
    85cb:	00 00                	add    BYTE PTR [rax],al
    85cd:	21 02                	and    DWORD PTR [rdx],eax
    85cf:	00 00                	add    BYTE PTR [rax],al
    85d1:	0a 0a                	or     cl,BYTE PTR [rdx]
    85d3:	16                   	(bad)  
    85d4:	00 00                	add    BYTE PTR [rax],al
    85d6:	04 1a                	add    al,0x1a
    85d8:	0f 93 36             	setae  BYTE PTR [rsi]
    85db:	00 00                	add    BYTE PTR [rax],al
    85dd:	21 02                	and    DWORD PTR [rdx],eax
    85df:	00 00                	add    BYTE PTR [rax],al
    85e1:	0a c3                	or     al,bl
    85e3:	15 00 00 04 1b       	adc    eax,0x1b040000
    85e8:	0f d2 36             	psrld  mm6,QWORD PTR [rsi]
    85eb:	00 00                	add    BYTE PTR [rax],al
    85ed:	21 02                	and    DWORD PTR [rdx],eax
    85ef:	00 00                	add    BYTE PTR [rax],al
    85f1:	0a 1e                	or     bl,BYTE PTR [rsi]
    85f3:	16                   	(bad)  
    85f4:	00 00                	add    BYTE PTR [rax],al
    85f6:	04 1c                	add    al,0x1c
    85f8:	0f 90 37             	seto   BYTE PTR [rdi]
    85fb:	00 00                	add    BYTE PTR [rax],al
    85fd:	21 02                	and    DWORD PTR [rdx],eax
    85ff:	00 00                	add    BYTE PTR [rax],al
    8601:	0a 14 16             	or     dl,BYTE PTR [rsi+rdx*1]
    8604:	00 00                	add    BYTE PTR [rax],al
    8606:	04 1d                	add    al,0x1d
    8608:	0f 4f 38             	cmovg  edi,DWORD PTR [rax]
    860b:	00 00                	add    BYTE PTR [rax],al
    860d:	21 02                	and    DWORD PTR [rdx],eax
    860f:	00 00                	add    BYTE PTR [rax],al
    8611:	0a 5f 16             	or     bl,BYTE PTR [rdi+0x16]
    8614:	00 00                	add    BYTE PTR [rax],al
    8616:	04 1e                	add    al,0x1e
    8618:	0f 23 37             	mov    db6,rdi
    861b:	00 00                	add    BYTE PTR [rax],al
    861d:	21 02                	and    DWORD PTR [rdx],eax
    861f:	00 00                	add    BYTE PTR [rax],al
    8621:	0a cc                	or     cl,ah
    8623:	15 00 00 04 1f       	adc    eax,0x1f040000
    8628:	0f 5b 37             	cvtdq2ps xmm6,XMMWORD PTR [rdi]
    862b:	00 00                	add    BYTE PTR [rax],al
    862d:	21 02                	and    DWORD PTR [rdx],eax
    862f:	00 00                	add    BYTE PTR [rax],al
    8631:	0b a1 09 00 00 02    	or     esp,DWORD PTR [rcx+0x2000009]
    8637:	7d 06                	jge    863f <stivale_hdr-0x1f79c1>
    8639:	da 37                	fidiv  DWORD PTR [rdi]
    863b:	00 00                	add    BYTE PTR [rax],al
    863d:	0c 75                	or     al,0x75
    863f:	37                   	(bad)  
    8640:	00 00                	add    BYTE PTR [rax],al
    8642:	02 1a                	add    bl,BYTE PTR [rdx]
    8644:	06                   	(bad)  
    8645:	6a 38                	push   0x38
    8647:	00 00                	add    BYTE PTR [rax],al
    8649:	e5 01                	in     eax,0x1
    864b:	00 00                	add    BYTE PTR [rax],al
    864d:	0d 38 02 00 00       	or     eax,0x238
    8652:	00 0c 2a             	add    BYTE PTR [rdx+rbp*1],cl
    8655:	16                   	(bad)  
    8656:	00 00                	add    BYTE PTR [rax],al
    8658:	02 14 06             	add    dl,BYTE PTR [rsi+rax*1]
    865b:	f1                   	icebp  
    865c:	37                   	(bad)  
    865d:	00 00                	add    BYTE PTR [rax],al
    865f:	fb                   	sti    
    8660:	01 00                	add    DWORD PTR [rax],eax
    8662:	00 0d 38 02 00 00    	add    BYTE PTR [rip+0x238],cl        # 88a0 <stivale_hdr-0x1f7760>
    8668:	00 0e                	add    BYTE PTR [rsi],cl
    866a:	01 37                	add    DWORD PTR [rdi],esi
    866c:	00 00                	add    BYTE PTR [rax],al
    866e:	02 0c 06             	add    cl,BYTE PTR [rsi+rax*1]
    8671:	52                   	push   rdx
    8672:	36 00 00             	add    BYTE PTR ss:[rax],al
    8675:	0d b5 00 00 00       	or     eax,0xb5
    867a:	00 00                	add    BYTE PTR [rax],al
    867c:	0f 69 6e 62          	punpckhwd mm5,QWORD PTR [rsi+0x62]
    8680:	00 01                	add    BYTE PTR [rcx],al
    8682:	0c 18                	or     al,0x18
    8684:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    8687:	00 0d 61 00 00 00    	add    BYTE PTR [rip+0x61],cl        # 86ee <stivale_hdr-0x1f7912>
    868d:	00 00                	add    BYTE PTR [rax],al
    868f:	02 01                	add    al,BYTE PTR [rcx]
    8691:	02 61 02             	add    ah,BYTE PTR [rcx+0x2]
    8694:	00 00                	add    BYTE PTR [rax],al
    8696:	10 38                	adc    BYTE PTR [rax],bh
    8698:	02 00                	add    al,BYTE PTR [rax]
    869a:	00 38                	add    BYTE PTR [rax],bh
    869c:	02 00                	add    al,BYTE PTR [rax]
    869e:	00 11                	add    BYTE PTR [rcx],dl
    86a0:	34 00                	xor    al,0x0
    86a2:	00 00                	add    BYTE PTR [rax],al
    86a4:	ff 00                	inc    DWORD PTR [rax]
    86a6:	12 08                	adc    cl,BYTE PTR [rax]
    86a8:	3e 02 00             	add    al,BYTE PTR ds:[rax]
    86ab:	00 13                	add    BYTE PTR [rbx],dl
    86ad:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    86b0:	00 0d b5 00 00 00    	add    BYTE PTR [rip+0xb5],cl        # 876b <stivale_hdr-0x1f7895>
    86b6:	00 14 41             	add    BYTE PTR [rcx+rax*2],dl
    86b9:	37                   	(bad)  
    86ba:	00 00                	add    BYTE PTR [rax],al
    86bc:	02 09                	add    cl,BYTE PTR [rcx]
    86be:	08 28                	or     BYTE PTR [rax],ch
    86c0:	02 00                	add    al,BYTE PTR [rax]
    86c2:	00 09                	add    BYTE PTR [rcx],cl
    86c4:	03 20                	add    esp,DWORD PTR [rax]
    86c6:	03 21                	add    esp,DWORD PTR [rcx]
    86c8:	00 00                	add    BYTE PTR [rax],al
    86ca:	00 00                	add    BYTE PTR [rax],al
    86cc:	00 14 ec             	add    BYTE PTR [rsp+rbp*8],dl
    86cf:	36 00 00             	add    BYTE PTR ss:[rax],al
    86d2:	02 0a                	add    cl,BYTE PTR [rdx]
    86d4:	05 90 00 00 00       	add    eax,0x90
    86d9:	09 03                	or     DWORD PTR [rbx],eax
    86db:	20 0b                	and    BYTE PTR [rbx],cl
    86dd:	21 00                	and    DWORD PTR [rax],eax
    86df:	00 00                	add    BYTE PTR [rax],al
    86e1:	00 00                	add    BYTE PTR [rax],al
    86e3:	15 53 01 00 00       	adc    eax,0x153
    86e8:	02 75 06             	add    dh,BYTE PTR [rbp+0x6]
    86eb:	09 03                	or     DWORD PTR [rbx],eax
    86ed:	24 0b                	and    al,0xb
    86ef:	21 00                	and    DWORD PTR [rax],eax
    86f1:	00 00                	add    BYTE PTR [rax],al
    86f3:	00 00                	add    BYTE PTR [rax],al
    86f5:	15 63 01 00 00       	adc    eax,0x163
    86fa:	02 76 06             	add    dh,BYTE PTR [rsi+0x6]
    86fd:	09 03                	or     DWORD PTR [rbx],eax
    86ff:	25 0b 21 00 00       	and    eax,0x210b
    8704:	00 00                	add    BYTE PTR [rax],al
    8706:	00 15 73 01 00 00    	add    BYTE PTR [rip+0x173],dl        # 887f <stivale_hdr-0x1f7781>
    870c:	02 77 06             	add    dh,BYTE PTR [rdi+0x6]
    870f:	09 03                	or     DWORD PTR [rbx],eax
    8711:	26 0b 21             	or     esp,DWORD PTR es:[rcx]
    8714:	00 00                	add    BYTE PTR [rax],al
    8716:	00 00                	add    BYTE PTR [rax],al
    8718:	00 15 83 01 00 00    	add    BYTE PTR [rip+0x183],dl        # 88a1 <stivale_hdr-0x1f775f>
    871e:	02 78 06             	add    bh,BYTE PTR [rax+0x6]
    8721:	09 03                	or     DWORD PTR [rbx],eax
    8723:	27                   	(bad)  
    8724:	0b 21                	or     esp,DWORD PTR [rcx]
    8726:	00 00                	add    BYTE PTR [rax],al
    8728:	00 00                	add    BYTE PTR [rax],al
    872a:	00 15 93 01 00 00    	add    BYTE PTR [rip+0x193],dl        # 88c3 <stivale_hdr-0x1f773d>
    8730:	02 79 06             	add    bh,BYTE PTR [rcx+0x6]
    8733:	09 03                	or     DWORD PTR [rbx],eax
    8735:	28 0b                	sub    BYTE PTR [rbx],cl
    8737:	21 00                	and    DWORD PTR [rax],eax
    8739:	00 00                	add    BYTE PTR [rax],al
    873b:	00 00                	add    BYTE PTR [rax],al
    873d:	15 a3 01 00 00       	adc    eax,0x1a3
    8742:	02 7a 06             	add    bh,BYTE PTR [rdx+0x6]
    8745:	09 03                	or     DWORD PTR [rbx],eax
    8747:	29 0b                	sub    DWORD PTR [rbx],ecx
    8749:	21 00                	and    DWORD PTR [rax],eax
    874b:	00 00                	add    BYTE PTR [rax],al
    874d:	00 00                	add    BYTE PTR [rax],al
    874f:	15 b3 01 00 00       	adc    eax,0x1b3
    8754:	02 7b 06             	add    bh,BYTE PTR [rbx+0x6]
    8757:	09 03                	or     DWORD PTR [rbx],eax
    8759:	2a 0b                	sub    cl,BYTE PTR [rbx]
    875b:	21 00                	and    DWORD PTR [rax],eax
    875d:	00 00                	add    BYTE PTR [rax],al
    875f:	00 00                	add    BYTE PTR [rax],al
    8761:	16                   	(bad)  
    8762:	c3                   	ret    
    8763:	01 00                	add    DWORD PTR [rax],eax
    8765:	00 19                	add    BYTE PTR [rcx],bl
    8767:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    876d:	00 3b                	add    BYTE PTR [rbx],bh
    876f:	00 00                	add    BYTE PTR [rax],al
    8771:	00 00                	add    BYTE PTR [rax],al
    8773:	00 00                	add    BYTE PTR [rax],al
    8775:	00 01                	add    BYTE PTR [rcx],al
    8777:	9c                   	pushf  
    8778:	17                   	(bad)  
    8779:	c2 36 00             	ret    0x36
    877c:	00 02                	add    BYTE PTR [rdx],al
    877e:	2f                   	(bad)  
    877f:	11 e1                	adc    ecx,esp
    8781:	7e 20                	jle    87a3 <stivale_hdr-0x1f785d>
    8783:	00 00                	add    BYTE PTR [rax],al
    8785:	00 00                	add    BYTE PTR [rax],al
    8787:	00 38                	add    BYTE PTR [rax],bh
    8789:	02 00                	add    al,BYTE PTR [rax]
    878b:	00 00                	add    BYTE PTR [rax],al
    878d:	00 00                	add    BYTE PTR [rax],al
    878f:	00 01                	add    BYTE PTR [rcx],al
    8791:	9c                   	pushf  
    8792:	47 03 00             	rex.RXB add r8d,DWORD PTR [r8]
    8795:	00 18                	add    BYTE PTR [rax],bl
    8797:	36 38 00             	cmp    BYTE PTR ss:[rax],al
    879a:	00 02                	add    BYTE PTR [rdx],al
    879c:	31 07                	xor    DWORD PTR [rdi],eax
    879e:	61                   	(bad)  
    879f:	00 00                	add    BYTE PTR [rax],al
    87a1:	00 02                	add    BYTE PTR [rdx],al
    87a3:	91                   	xchg   ecx,eax
    87a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    87a5:	18 1a                	sbb    BYTE PTR [rdx],bl
    87a7:	37                   	(bad)  
    87a8:	00 00                	add    BYTE PTR [rax],al
    87aa:	02 38                	add    bh,BYTE PTR [rax]
    87ac:	27                   	(bad)  
    87ad:	b5 00                	mov    ch,0x0
    87af:	00 00                	add    BYTE PTR [rax],al
    87b1:	02 91 6c 00 19 cf    	add    dl,BYTE PTR [rcx-0x30e6ff94]
    87b7:	01 00                	add    DWORD PTR [rax],eax
    87b9:	00 1c 7e             	add    BYTE PTR [rsi+rdi*2],bl
    87bc:	20 00                	and    BYTE PTR [rax],al
    87be:	00 00                	add    BYTE PTR [rax],al
    87c0:	00 00                	add    BYTE PTR [rax],al
    87c2:	c5 00 00             	(bad)
    87c5:	00 00                	add    BYTE PTR [rax],al
    87c7:	00 00                	add    BYTE PTR [rax],al
    87c9:	00 01                	add    BYTE PTR [rcx],al
    87cb:	9c                   	pushf  
    87cc:	c3                   	ret    
    87cd:	03 00                	add    eax,DWORD PTR [rax]
    87cf:	00 1a                	add    BYTE PTR [rdx],bl
    87d1:	ae                   	scas   al,BYTE PTR es:[rdi]
    87d2:	36 00 00             	add    BYTE PTR ss:[rax],al
    87d5:	02 1a                	add    bl,BYTE PTR [rdx]
    87d7:	36 38 02             	cmp    BYTE PTR ss:[rdx],al
    87da:	00 00                	add    BYTE PTR [rax],al
    87dc:	02 91 58 18 40 38    	add    dl,BYTE PTR [rcx+0x38401858]
    87e2:	00 00                	add    BYTE PTR [rax],al
    87e4:	02 1c 06             	add    bl,BYTE PTR [rsi+rax*1]
    87e7:	90                   	nop
    87e8:	00 00                	add    BYTE PTR [rax],al
    87ea:	00 02                	add    BYTE PTR [rdx],al
    87ec:	91                   	xchg   ecx,eax
    87ed:	6c                   	ins    BYTE PTR es:[rdi],dx
    87ee:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    87f0:	7e 20                	jle    8812 <stivale_hdr-0x1f77ee>
    87f2:	00 00                	add    BYTE PTR [rax],al
    87f4:	00 00                	add    BYTE PTR [rax],al
    87f6:	00 69 00             	add    BYTE PTR [rcx+0x0],ch
    87f9:	00 00                	add    BYTE PTR [rax],al
    87fb:	00 00                	add    BYTE PTR [rax],al
    87fd:	00 00                	add    BYTE PTR [rax],al
    87ff:	a3 03 00 00 1c 69 00 	movabs ds:0x1e0200691c000003,eax
    8806:	02 1e 
    8808:	0b 90 00 00 00 02    	or     edx,DWORD PTR [rax+0x2000000]
    880e:	91                   	xchg   ecx,eax
    880f:	68 00 1d 98 7e       	push   0x7e981d00
    8814:	20 00                	and    BYTE PTR [rax],al
    8816:	00 00                	add    BYTE PTR [rax],al
    8818:	00 00                	add    BYTE PTR [rax],al
    881a:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    881d:	00 00                	add    BYTE PTR [rax],al
    881f:	00 00                	add    BYTE PTR [rax],al
    8821:	00 1c 69             	add    BYTE PTR [rcx+rbp*2],bl
    8824:	00 02                	add    BYTE PTR [rdx],al
    8826:	29 0b                	sub    DWORD PTR [rbx],ecx
    8828:	90                   	nop
    8829:	00 00                	add    BYTE PTR [rax],al
    882b:	00 02                	add    BYTE PTR [rdx],al
    882d:	91                   	xchg   ecx,eax
    882e:	64 00 00             	add    BYTE PTR fs:[rax],al
    8831:	19 e5                	sbb    ebp,esp
    8833:	01 00                	add    DWORD PTR [rax],eax
    8835:	00 df                	add    bh,bl
    8837:	7d 20                	jge    8859 <stivale_hdr-0x1f77a7>
    8839:	00 00                	add    BYTE PTR [rax],al
    883b:	00 00                	add    BYTE PTR [rax],al
    883d:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 8843 <stivale_hdr-0x1f77bd>
    8843:	00 00                	add    BYTE PTR [rax],al
    8845:	00 01                	add    BYTE PTR [rcx],al
    8847:	9c                   	pushf  
    8848:	ee                   	out    dx,al
    8849:	03 00                	add    eax,DWORD PTR [rax]
    884b:	00 1a                	add    BYTE PTR [rdx],bl
    884d:	ae                   	scas   al,BYTE PTR es:[rdi]
    884e:	36 00 00             	add    BYTE PTR ss:[rax],al
    8851:	02 14 34             	add    dl,BYTE PTR [rsp+rsi*1]
    8854:	38 02                	cmp    BYTE PTR [rdx],al
    8856:	00 00                	add    BYTE PTR [rax],al
    8858:	02 91 68 00 1e fb    	add    dl,BYTE PTR [rcx-0x4e1ff98]
    885e:	01 00                	add    DWORD PTR [rax],eax
    8860:	00 98 7d 20 00 00    	add    BYTE PTR [rax+0x207d],bl
    8866:	00 00                	add    BYTE PTR [rax],al
    8868:	00 47 00             	add    BYTE PTR [rdi+0x0],al
    886b:	00 00                	add    BYTE PTR [rax],al
    886d:	00 00                	add    BYTE PTR [rax],al
    886f:	00 00                	add    BYTE PTR [rax],al
    8871:	01 9c 38 04 00 00 1a 	add    DWORD PTR [rax+rdi*1+0x1a000004],ebx
    8878:	1a 37                	sbb    dh,BYTE PTR [rdi]
    887a:	00 00                	add    BYTE PTR [rax],al
    887c:	02 0c 44             	add    cl,BYTE PTR [rsp+rax*2]
    887f:	b5 00                	mov    ch,0x0
    8881:	00 00                	add    BYTE PTR [rax],al
    8883:	02 91 5e 1d a4 7d    	add    dl,BYTE PTR [rcx+0x7da41d5e]
    8889:	20 00                	and    BYTE PTR [rax],al
    888b:	00 00                	add    BYTE PTR [rax],al
    888d:	00 00                	add    BYTE PTR [rax],al
    888f:	38 00                	cmp    BYTE PTR [rax],al
    8891:	00 00                	add    BYTE PTR [rax],al
    8893:	00 00                	add    BYTE PTR [rax],al
    8895:	00 00                	add    BYTE PTR [rax],al
    8897:	1c 69                	sbb    al,0x69
    8899:	00 02                	add    BYTE PTR [rdx],al
    889b:	0e                   	(bad)  
    889c:	0b 90 00 00 00 02    	or     edx,DWORD PTR [rax+0x2000000]
    88a2:	91                   	xchg   ecx,eax
    88a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    88a4:	00 00                	add    BYTE PTR [rax],al
    88a6:	1f                   	(bad)  
    88a7:	0e                   	(bad)  
    88a8:	02 00                	add    al,BYTE PTR [rax]
    88aa:	00 7a 7d             	add    BYTE PTR [rdx+0x7d],bh
    88ad:	20 00                	and    BYTE PTR [rax],al
    88af:	00 00                	add    BYTE PTR [rax],al
    88b1:	00 00                	add    BYTE PTR [rax],al
    88b3:	1e                   	(bad)  
    88b4:	00 00                	add    BYTE PTR [rax],al
    88b6:	00 00                	add    BYTE PTR [rax],al
    88b8:	00 00                	add    BYTE PTR [rax],al
    88ba:	00 01                	add    BYTE PTR [rcx],al
    88bc:	9c                   	pushf  
    88bd:	1a fb                	sbb    bh,bl
    88bf:	33 00                	xor    eax,DWORD PTR [rax]
    88c1:	00 01                	add    BYTE PTR [rcx],al
    88c3:	0c 21                	or     al,0x21
    88c5:	61                   	(bad)  
    88c6:	00 00                	add    BYTE PTR [rax],al
    88c8:	00 02                	add    BYTE PTR [rdx],al
    88ca:	91                   	xchg   ecx,eax
    88cb:	5c                   	pop    rsp
    88cc:	1c 72                	sbb    al,0x72
    88ce:	65 74 00             	gs je  88d1 <stivale_hdr-0x1f772f>
    88d1:	01 0e                	add    DWORD PTR [rsi],ecx
    88d3:	0e                   	(bad)  
    88d4:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    88d7:	00 02                	add    BYTE PTR [rdx],al
    88d9:	91                   	xchg   ecx,eax
    88da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    88db:	00 00                	add    BYTE PTR [rax],al
    88dd:	1a 03                	sbb    al,BYTE PTR [rbx]
    88df:	00 00                	add    BYTE PTR [rax],al
    88e1:	04 00                	add    al,0x0
    88e3:	f3 2b 00             	repz sub eax,DWORD PTR [rax]
    88e6:	00 08                	add    BYTE PTR [rax],cl
    88e8:	01 7c 00 00          	add    DWORD PTR [rax+rax*1+0x0],edi
    88ec:	00 04 49             	add    BYTE PTR [rcx+rcx*2],al
    88ef:	39 00                	cmp    DWORD PTR [rax],eax
    88f1:	00 24 01             	add    BYTE PTR [rcx+rax*1],ah
    88f4:	00 00                	add    BYTE PTR [rax],al
    88f6:	54                   	push   rsp
    88f7:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    88fd:	00 05 02 00 00 00    	add    BYTE PTR [rip+0x2],al        # 8905 <stivale_hdr-0x1f76fb>
    8903:	00 00                	add    BYTE PTR [rax],al
    8905:	00 bd 39 00 00 02    	add    BYTE PTR [rbp+0x2000039],bh
    890b:	08 05 6a 01 00 00    	or     BYTE PTR [rip+0x16a],al        # 8a7b <stivale_hdr-0x1f7585>
    8911:	02 08                	add    cl,BYTE PTR [rax]
    8913:	07                   	(bad)  
    8914:	3e 29 00             	sub    DWORD PTR ds:[rax],eax
    8917:	00 02                	add    BYTE PTR [rdx],al
    8919:	08 05 65 01 00 00    	or     BYTE PTR [rip+0x165],al        # 8a84 <stivale_hdr-0x1f757c>
    891f:	02 10                	add    dl,BYTE PTR [rax]
    8921:	04 8f                	add    al,0x8f
    8923:	01 00                	add    DWORD PTR [rax],eax
    8925:	00 03                	add    BYTE PTR [rbx],al
    8927:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    892a:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    892d:	23 00                	and    eax,DWORD PTR [rax]
    892f:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    8932:	1d 5a 00 00 00       	sbb    eax,0x5a
    8937:	02 01                	add    al,BYTE PTR [rcx]
    8939:	08 6e 00             	or     BYTE PTR [rsi+0x0],ch
    893c:	00 00                	add    BYTE PTR [rax],al
    893e:	04 eb                	add    al,0xeb
    8940:	08 00                	or     BYTE PTR [rax],al
    8942:	00 04 05 1d 6d 00 00 	add    BYTE PTR [rax*1+0x6d1d],al
    8949:	00 02                	add    BYTE PTR [rdx],al
    894b:	02 07                	add    al,BYTE PTR [rdi]
    894d:	9b                   	fwait
    894e:	01 00                	add    DWORD PTR [rax],eax
    8950:	00 02                	add    BYTE PTR [rdx],al
    8952:	04 07                	add    al,0x7
    8954:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    8957:	00 02                	add    BYTE PTR [rdx],al
    8959:	10 07                	adc    BYTE PTR [rdi],al
    895b:	00 00                	add    BYTE PTR [rax],al
    895d:	00 00                	add    BYTE PTR [rax],al
    895f:	04 25                	add    al,0x25
    8961:	00 00                	add    BYTE PTR [rax],al
    8963:	00 04 0d 1d 34 00 00 	add    BYTE PTR [rcx*1+0x341d],al
    896a:	00 02                	add    BYTE PTR [rdx],al
    896c:	01 06                	add    DWORD PTR [rsi],eax
    896e:	70 00                	jo     8970 <stivale_hdr-0x1f7690>
    8970:	00 00                	add    BYTE PTR [rax],al
    8972:	02 02                	add    al,BYTE PTR [rdx]
    8974:	05 73 01 00 00       	add    eax,0x173
    8979:	05 04 05 69 6e       	add    eax,0x6e690504
    897e:	74 00                	je     8980 <stivale_hdr-0x1f7680>
    8980:	02 10                	add    dl,BYTE PTR [rax]
    8982:	05 1b 01 00 00       	add    eax,0x11b
    8987:	04 3b                	add    al,0x3b
    8989:	02 00                	add    al,BYTE PTR [rax]
    898b:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
    898e:	1d 82 00 00 00       	sbb    eax,0x82
    8993:	06                   	(bad)  
    8994:	c7 00 00 00 c7 00    	mov    DWORD PTR [rax],0xc70000
    899a:	00 00                	add    BYTE PTR [rax],al
    899c:	07                   	(bad)  
    899d:	34 00                	xor    al,0x0
    899f:	00 00                	add    BYTE PTR [rax],al
    89a1:	ff 01                	inc    DWORD PTR [rcx]
    89a3:	00 02                	add    BYTE PTR [rdx],al
    89a5:	01 06                	add    DWORD PTR [rsi],eax
    89a7:	77 00                	ja     89a9 <stivale_hdr-0x1f7657>
    89a9:	00 00                	add    BYTE PTR [rax],al
    89ab:	08 c7                	or     bh,al
    89ad:	00 00                	add    BYTE PTR [rax],al
    89af:	00 09                	add    BYTE PTR [rcx],cl
    89b1:	65 39 00             	cmp    DWORD PTR gs:[rax],eax
    89b4:	00 03                	add    BYTE PTR [rbx],al
    89b6:	07                   	(bad)  
    89b7:	06                   	(bad)  
    89b8:	b6 00                	mov    dh,0x0
    89ba:	00 00                	add    BYTE PTR [rax],al
    89bc:	09 03                	or     DWORD PTR [rbx],eax
    89be:	40 0b 21             	rex or esp,DWORD PTR [rcx]
    89c1:	00 00                	add    BYTE PTR [rax],al
    89c3:	00 00                	add    BYTE PTR [rax],al
    89c5:	00 09                	add    BYTE PTR [rcx],cl
    89c7:	93                   	xchg   ebx,eax
    89c8:	1e                   	(bad)  
    89c9:	00 00                	add    BYTE PTR [rax],al
    89cb:	03 08                	add    ecx,DWORD PTR [rax]
    89cd:	05 9c 00 00 00       	add    eax,0x9c
    89d2:	09 03                	or     DWORD PTR [rbx],eax
    89d4:	40 0d 21 00 00 00    	rex or eax,0x21
    89da:	00 00                	add    BYTE PTR [rax],al
    89dc:	0a 69 6f             	or     ch,BYTE PTR [rcx+0x6f]
    89df:	00 01                	add    BYTE PTR [rcx],al
    89e1:	04 0b                	add    al,0xb
    89e3:	86 01                	xchg   BYTE PTR [rcx],al
    89e5:	00 00                	add    BYTE PTR [rax],al
    89e7:	0b a4 23 00 00 02 05 	or     esp,DWORD PTR [rbx+riz*1+0x5020000]
    89ee:	0f 5c 01             	subps  xmm0,XMMWORD PTR [rcx]
    89f1:	00 00                	add    BYTE PTR [rax],al
    89f3:	0b ed                	or     ebp,ebp
    89f5:	38 00                	cmp    BYTE PTR [rax],al
    89f7:	00 02                	add    BYTE PTR [rdx],al
    89f9:	0b 13                	or     edx,DWORD PTR [rbx]
    89fb:	3b 01                	cmp    eax,DWORD PTR [rcx]
    89fd:	00 00                	add    BYTE PTR [rax],al
    89ff:	0c 3a                	or     al,0x3a
    8a01:	39 00                	cmp    DWORD PTR [rax],eax
    8a03:	00 03                	add    BYTE PTR [rbx],al
    8a05:	2f                   	(bad)  
    8a06:	06                   	(bad)  
    8a07:	f5                   	cmc    
    8a08:	38 00                	cmp    BYTE PTR [rax],al
    8a0a:	00 0c a1             	add    BYTE PTR [rcx+riz*4],cl
    8a0d:	09 00                	or     DWORD PTR [rax],eax
    8a0f:	00 03                	add    BYTE PTR [rbx],al
    8a11:	25 06 d0 38 00       	and    eax,0x38d006
    8a16:	00 00                	add    BYTE PTR [rax],al
    8a18:	0d 1d 39 00 00       	or     eax,0x391d
    8a1d:	03 12                	add    edx,DWORD PTR [rdx]
    8a1f:	11 4d 01             	adc    DWORD PTR [rbp+0x1],ecx
    8a22:	00 00                	add    BYTE PTR [rax],al
    8a24:	0e                   	(bad)  
    8a25:	14 02                	adc    al,0x2
    8a27:	00 00                	add    BYTE PTR [rax],al
    8a29:	00 0f                	add    BYTE PTR [rdi],cl
    8a2b:	e9 23 00 00 02       	jmp    2008a53 <__kernel_end+0x1df6a53>
    8a30:	07                   	(bad)  
    8a31:	1d 0e 4e 00 00       	sbb    eax,0x4e0e
    8a36:	00 00                	add    BYTE PTR [rax],al
    8a38:	00 10                	add    BYTE PTR [rax],dl
    8a3a:	69 6e 62 00 01 0c 18 	imul   ebp,DWORD PTR [rsi+0x62],0x180c0100
    8a41:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    8a44:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    8a47:	00 00                	add    BYTE PTR [rax],al
    8a49:	0e                   	(bad)  
    8a4a:	61                   	(bad)  
    8a4b:	00 00                	add    BYTE PTR [rax],al
    8a4d:	00 00                	add    BYTE PTR [rax],al
    8a4f:	0f 78 0c 00          	vmread QWORD PTR [rax+rax*1],rcx
    8a53:	00 01                	add    BYTE PTR [rcx],al
    8a55:	05 18 0e 61 00       	add    eax,0x610e18
    8a5a:	00 00                	add    BYTE PTR [rax],al
    8a5c:	0e                   	(bad)  
    8a5d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    8a60:	00 00                	add    BYTE PTR [rax],al
    8a62:	00 11                	add    BYTE PTR [rcx],dl
    8a64:	22 01                	and    al,BYTE PTR [rcx]
    8a66:	00 00                	add    BYTE PTR [rax],al
    8a68:	98                   	cwde   
    8a69:	82                   	(bad)  
    8a6a:	20 00                	and    BYTE PTR [rax],al
    8a6c:	00 00                	add    BYTE PTR [rax],al
    8a6e:	00 00                	add    BYTE PTR [rax],al
    8a70:	c1 00 00             	rol    DWORD PTR [rax],0x0
    8a73:	00 00                	add    BYTE PTR [rax],al
    8a75:	00 00                	add    BYTE PTR [rax],al
    8a77:	00 01                	add    BYTE PTR [rcx],al
    8a79:	9c                   	pushf  
    8a7a:	11 2e                	adc    DWORD PTR [rsi],ebp
    8a7c:	01 00                	add    DWORD PTR [rax],eax
    8a7e:	00 6e 82             	add    BYTE PTR [rsi-0x7e],ch
    8a81:	20 00                	and    BYTE PTR [rax],al
    8a83:	00 00                	add    BYTE PTR [rax],al
    8a85:	00 00                	add    BYTE PTR [rax],al
    8a87:	2a 00                	sub    al,BYTE PTR [rax]
    8a89:	00 00                	add    BYTE PTR [rax],al
    8a8b:	00 00                	add    BYTE PTR [rax],al
    8a8d:	00 00                	add    BYTE PTR [rax],al
    8a8f:	01 9c 12 73 39 00 00 	add    DWORD PTR [rdx+rdx*1+0x3973],ebx
    8a96:	03 1d 06 b1 38 00    	add    ebx,DWORD PTR [rip+0x38b106]        # 393ba2 <__kernel_end+0x181ba2>
    8a9c:	00 3d 82 20 00 00    	add    BYTE PTR [rip+0x2082],bh        # ab24 <stivale_hdr-0x1f54dc>
    8aa2:	00 00                	add    BYTE PTR [rax],al
    8aa4:	00 31                	add    BYTE PTR [rcx],dh
    8aa6:	00 00                	add    BYTE PTR [rax],al
    8aa8:	00 00                	add    BYTE PTR [rax],al
    8aaa:	00 00                	add    BYTE PTR [rax],al
    8aac:	00 01                	add    BYTE PTR [rcx],al
    8aae:	9c                   	pushf  
    8aaf:	f6 01 00             	test   BYTE PTR [rcx],0x0
    8ab2:	00 13                	add    BYTE PTR [rbx],dl
    8ab4:	45 82                	rex.RB (bad) 
    8ab6:	20 00                	and    BYTE PTR [rax],al
    8ab8:	00 00                	add    BYTE PTR [rax],al
    8aba:	00 00                	add    BYTE PTR [rax],al
    8abc:	26 00 00             	add    BYTE PTR es:[rax],al
    8abf:	00 00                	add    BYTE PTR [rax],al
    8ac1:	00 00                	add    BYTE PTR [rax],al
    8ac3:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
    8ac6:	00 03                	add    BYTE PTR [rbx],al
    8ac8:	1f                   	(bad)  
    8ac9:	0e                   	(bad)  
    8aca:	9c                   	pushf  
    8acb:	00 00                	add    BYTE PTR [rax],al
    8acd:	00 02                	add    BYTE PTR [rdx],al
    8acf:	91                   	xchg   ecx,eax
    8ad0:	6c                   	ins    BYTE PTR es:[rdi],dx
    8ad1:	00 00                	add    BYTE PTR [rax],al
    8ad3:	15 16 1f 00 00       	adc    eax,0x1f16
    8ad8:	03 18                	add    ebx,DWORD PTR [rax]
    8ada:	06                   	(bad)  
    8adb:	80 39 00             	cmp    BYTE PTR [rcx],0x0
    8ade:	00 2a                	add    BYTE PTR [rdx],ch
    8ae0:	82                   	(bad)  
    8ae1:	20 00                	and    BYTE PTR [rax],al
    8ae3:	00 00                	add    BYTE PTR [rax],al
    8ae5:	00 00                	add    BYTE PTR [rax],al
    8ae7:	13 00                	adc    eax,DWORD PTR [rax]
    8ae9:	00 00                	add    BYTE PTR [rax],al
    8aeb:	00 00                	add    BYTE PTR [rax],al
    8aed:	00 00                	add    BYTE PTR [rax],al
    8aef:	01 9c 16 08 ce 00 00 	add    DWORD PTR [rsi+rdx*1+0xce08],ebx
    8af6:	00 17                	add    BYTE PTR [rdi],dl
    8af8:	3b 01                	cmp    eax,DWORD PTR [rcx]
    8afa:	00 00                	add    BYTE PTR [rax],al
    8afc:	dd 81 20 00 00 00    	fld    QWORD PTR [rcx+0x20]
    8b02:	00 00                	add    BYTE PTR [rax],al
    8b04:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    8b07:	00 00                	add    BYTE PTR [rax],al
    8b09:	00 00                	add    BYTE PTR [rax],al
    8b0b:	00 01                	add    BYTE PTR [rcx],al
    8b0d:	9c                   	pushf  
    8b0e:	64 02 00             	add    al,BYTE PTR fs:[rax]
    8b11:	00 18                	add    BYTE PTR [rax],bl
    8b13:	76 61                	jbe    8b76 <stivale_hdr-0x1f748a>
    8b15:	6c                   	ins    BYTE PTR es:[rdi],dx
    8b16:	00 03                	add    BYTE PTR [rbx],al
    8b18:	12 34 14             	adc    dh,BYTE PTR [rsp+rdx*1]
    8b1b:	02 00                	add    al,BYTE PTR [rax]
    8b1d:	00 02                	add    BYTE PTR [rdx],al
    8b1f:	91                   	xchg   ecx,eax
    8b20:	58                   	pop    rax
    8b21:	13 e9                	adc    ebp,ecx
    8b23:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    8b29:	00 3e                	add    BYTE PTR [rsi],bh
    8b2b:	00 00                	add    BYTE PTR [rax],al
    8b2d:	00 00                	add    BYTE PTR [rax],al
    8b2f:	00 00                	add    BYTE PTR [rax],al
    8b31:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
    8b34:	00 03                	add    BYTE PTR [rbx],al
    8b36:	13 0c aa             	adc    ecx,DWORD PTR [rdx+rbp*4]
    8b39:	00 00                	add    BYTE PTR [rax],al
    8b3b:	00 02                	add    BYTE PTR [rdx],al
    8b3d:	91                   	xchg   ecx,eax
    8b3e:	68 00 00 15 c3       	push   0xffffffffc3150000
    8b43:	38 00                	cmp    BYTE PTR [rax],al
    8b45:	00 03                	add    BYTE PTR [rbx],al
    8b47:	0a 06                	or     al,BYTE PTR [rsi]
    8b49:	28 39                	sub    BYTE PTR [rcx],bh
    8b4b:	00 00                	add    BYTE PTR [rax],al
    8b4d:	b3 81                	mov    bl,0x81
    8b4f:	20 00                	and    BYTE PTR [rax],al
    8b51:	00 00                	add    BYTE PTR [rax],al
    8b53:	00 00                	add    BYTE PTR [rax],al
    8b55:	2a 00                	sub    al,BYTE PTR [rax]
    8b57:	00 00                	add    BYTE PTR [rax],al
    8b59:	00 00                	add    BYTE PTR [rax],al
    8b5b:	00 00                	add    BYTE PTR [rax],al
    8b5d:	01 9c 17 4d 01 00 00 	add    DWORD PTR [rdi+rdx*1+0x14d],ebx
    8b64:	93                   	xchg   ebx,eax
    8b65:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    8b6b:	00 20                	add    BYTE PTR [rax],ah
    8b6d:	00 00                	add    BYTE PTR [rax],al
    8b6f:	00 00                	add    BYTE PTR [rax],al
    8b71:	00 00                	add    BYTE PTR [rax],al
    8b73:	00 01                	add    BYTE PTR [rcx],al
    8b75:	9c                   	pushf  
    8b76:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    8b77:	02 00                	add    al,BYTE PTR [rax]
    8b79:	00 18                	add    BYTE PTR [rax],bl
    8b7b:	76 61                	jbe    8bde <stivale_hdr-0x1f7422>
    8b7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    8b7e:	00 02                	add    BYTE PTR [rdx],al
    8b80:	07                   	(bad)  
    8b81:	2e 4e 00 00          	rex.WRX add BYTE PTR cs:[rax],r8b
    8b85:	00 02                	add    BYTE PTR [rdx],al
    8b87:	91                   	xchg   ecx,eax
    8b88:	6c                   	ins    BYTE PTR es:[rdi],dx
    8b89:	00 19                	add    BYTE PTR [rcx],bl
    8b8b:	5c                   	pop    rsp
    8b8c:	01 00                	add    DWORD PTR [rax],eax
    8b8e:	00 75 81             	add    BYTE PTR [rbp-0x7f],dh
    8b91:	20 00                	and    BYTE PTR [rax],al
    8b93:	00 00                	add    BYTE PTR [rax],al
    8b95:	00 00                	add    BYTE PTR [rax],al
    8b97:	1e                   	(bad)  
    8b98:	00 00                	add    BYTE PTR [rax],al
    8b9a:	00 00                	add    BYTE PTR [rax],al
    8b9c:	00 00                	add    BYTE PTR [rax],al
    8b9e:	00 01                	add    BYTE PTR [rcx],al
    8ba0:	9c                   	pushf  
    8ba1:	e7 02                	out    0x2,eax
    8ba3:	00 00                	add    BYTE PTR [rax],al
    8ba5:	1a fb                	sbb    bh,bl
    8ba7:	33 00                	xor    eax,DWORD PTR [rax]
    8ba9:	00 01                	add    BYTE PTR [rcx],al
    8bab:	0c 21                	or     al,0x21
    8bad:	61                   	(bad)  
    8bae:	00 00                	add    BYTE PTR [rax],al
    8bb0:	00 02                	add    BYTE PTR [rdx],al
    8bb2:	91                   	xchg   ecx,eax
    8bb3:	5c                   	pop    rsp
    8bb4:	14 72                	adc    al,0x72
    8bb6:	65 74 00             	gs je  8bb9 <stivale_hdr-0x1f7447>
    8bb9:	01 0e                	add    DWORD PTR [rsi],ecx
    8bbb:	0e                   	(bad)  
    8bbc:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    8bbf:	00 02                	add    BYTE PTR [rdx],al
    8bc1:	91                   	xchg   ecx,eax
    8bc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8bc3:	00 1b                	add    BYTE PTR [rbx],bl
    8bc5:	72 01                	jb     8bc8 <stivale_hdr-0x1f7438>
    8bc7:	00 00                	add    BYTE PTR [rax],al
    8bc9:	54                   	push   rsp
    8bca:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    8bd0:	00 21                	add    BYTE PTR [rcx],ah
    8bd2:	00 00                	add    BYTE PTR [rax],al
    8bd4:	00 00                	add    BYTE PTR [rax],al
    8bd6:	00 00                	add    BYTE PTR [rax],al
    8bd8:	00 01                	add    BYTE PTR [rcx],al
    8bda:	9c                   	pushf  
    8bdb:	1a fb                	sbb    bh,bl
    8bdd:	33 00                	xor    eax,DWORD PTR [rax]
    8bdf:	00 01                	add    BYTE PTR [rcx],al
    8be1:	05 22 61 00 00       	add    eax,0x6122
    8be6:	00 02                	add    BYTE PTR [rdx],al
    8be8:	91                   	xchg   ecx,eax
    8be9:	6c                   	ins    BYTE PTR es:[rdi],dx
    8bea:	18 76 61             	sbb    BYTE PTR [rsi+0x61],dh
    8bed:	6c                   	ins    BYTE PTR es:[rdi],dx
    8bee:	00 01                	add    BYTE PTR [rcx],al
    8bf0:	05 2d 4e 00 00       	add    eax,0x4e2d
    8bf5:	00 02                	add    BYTE PTR [rdx],al
    8bf7:	91                   	xchg   ecx,eax
    8bf8:	68 00 00 51 00       	push   0x510000
    8bfd:	00 00                	add    BYTE PTR [rax],al
    8bff:	03 00                	add    eax,DWORD PTR [rax]
    8c01:	8b 2d 00 00 08 01    	mov    ebp,DWORD PTR [rip+0x1080000]        # 1088c07 <__kernel_end+0xe76c07>
    8c07:	60                   	(bad)  
    8c08:	83 20 00             	and    DWORD PTR [rax],0x0
    8c0b:	00 00                	add    BYTE PTR [rax],al
    8c0d:	00 00                	add    BYTE PTR [rax],al
    8c0f:	a0 83 20 00 00 00 00 	movabs al,ds:0x1000000000002083
    8c16:	00 10 
    8c18:	3b 00                	cmp    eax,DWORD PTR [rax]
    8c1a:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    8c1d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    8c1f:	62                   	(bad)  
    8c20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8c21:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8c22:	74 2f                	je     8c53 <stivale_hdr-0x1f73ad>
    8c24:	6b 65 6e 74          	imul   esp,DWORD PTR [rbp+0x6e],0x74
    8c28:	72 79                	jb     8ca3 <stivale_hdr-0x1f735d>
    8c2a:	2e 61                	cs (bad) 
    8c2c:	73 6d                	jae    8c9b <stivale_hdr-0x1f7365>
    8c2e:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8c31:	53                   	push   rbx
    8c32:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8c35:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8c39:	30 32                	xor    BYTE PTR [rdx],dh
    8c3b:	00 01                	add    BYTE PTR [rcx],al
    8c3d:	80 02 60             	add    BYTE PTR [rdx],0x60
    8c40:	83 20 00             	and    DWORD PTR [rax],0x0
	...
    8c4f:	00 54 00 00          	add    BYTE PTR [rax+rax*1+0x0],dl
    8c53:	00 03                	add    BYTE PTR [rbx],al
    8c55:	00 a6 2d 00 00 08    	add    BYTE PTR [rsi+0x800002d],ah
    8c5b:	01 a0 83 20 00 00    	add    DWORD PTR [rax+0x2083],esp
    8c61:	00 00                	add    BYTE PTR [rax],al
    8c63:	00 c5                	add    ch,al
    8c65:	86 20                	xchg   BYTE PTR [rax],ah
    8c67:	00 00                	add    BYTE PTR [rax],al
    8c69:	00 00                	add    BYTE PTR [rax],al
    8c6b:	00 66 3b             	add    BYTE PTR [rsi+0x3b],ah
    8c6e:	00 00                	add    BYTE PTR [rax],al
    8c70:	73 72                	jae    8ce4 <stivale_hdr-0x1f731c>
    8c72:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    8c74:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    8c77:	2f                   	(bad)  
    8c78:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    8c7f:	70 74                	jo     8cf5 <stivale_hdr-0x1f730b>
    8c81:	73 2e                	jae    8cb1 <stivale_hdr-0x1f734f>
    8c83:	61                   	(bad)  
    8c84:	73 6d                	jae    8cf3 <stivale_hdr-0x1f730d>
    8c86:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8c89:	53                   	push   rbx
    8c8a:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8c8d:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8c91:	30 32                	xor    BYTE PTR [rdx],dh
    8c93:	00 01                	add    BYTE PTR [rcx],al
    8c95:	80 02 a0             	add    BYTE PTR [rdx],0xa0
    8c98:	83 20 00             	and    DWORD PTR [rax],0x0
	...
    8ca7:	00 4d 00             	add    BYTE PTR [rbp+0x0],cl
    8caa:	00 00                	add    BYTE PTR [rax],al
    8cac:	03 00                	add    eax,DWORD PTR [rax]
    8cae:	c1 2d 00 00 08 01 d0 	shr    DWORD PTR [rip+0x1080000],0xd0        # 1088cb5 <__kernel_end+0xe76cb5>
    8cb5:	86 20                	xchg   BYTE PTR [rax],ah
    8cb7:	00 00                	add    BYTE PTR [rax],al
    8cb9:	00 00                	add    BYTE PTR [rax],al
    8cbb:	00 eb                	add    bl,ch
    8cbd:	86 20                	xchg   BYTE PTR [rax],ah
    8cbf:	00 00                	add    BYTE PTR [rax],al
    8cc1:	00 00                	add    BYTE PTR [rax],al
    8cc3:	00 b4 3c 00 00 73 72 	add    BYTE PTR [rsp+rdi*1+0x72730000],dh
    8cca:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    8ccc:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    8ccf:	2f                   	(bad)  
    8cd0:	67 64 74 2e          	addr32 fs je 8d02 <stivale_hdr-0x1f72fe>
    8cd4:	61                   	(bad)  
    8cd5:	73 6d                	jae    8d44 <stivale_hdr-0x1f72bc>
    8cd7:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8cda:	53                   	push   rbx
    8cdb:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8cde:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8ce2:	30 32                	xor    BYTE PTR [rdx],dh
    8ce4:	00 01                	add    BYTE PTR [rcx],al
    8ce6:	80 02 d0             	add    BYTE PTR [rdx],0xd0
    8ce9:	86 20                	xchg   BYTE PTR [rax],ah
	...
    8cf7:	00 00                	add    BYTE PTR [rax],al
    8cf9:	50                   	push   rax
    8cfa:	00 00                	add    BYTE PTR [rax],al
    8cfc:	00 03                	add    BYTE PTR [rbx],al
    8cfe:	00 dc                	add    ah,bl
    8d00:	2d 00 00 08 01       	sub    eax,0x1080000
    8d05:	f0 86 20             	lock xchg BYTE PTR [rax],ah
    8d08:	00 00                	add    BYTE PTR [rax],al
    8d0a:	00 00                	add    BYTE PTR [rax],al
    8d0c:	00 0a                	add    BYTE PTR [rdx],cl
    8d0e:	87 20                	xchg   DWORD PTR [rax],esp
    8d10:	00 00                	add    BYTE PTR [rax],al
    8d12:	00 00                	add    BYTE PTR [rax],al
    8d14:	00 01                	add    BYTE PTR [rcx],al
    8d16:	3d 00 00 73 72       	cmp    eax,0x72730000
    8d1b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    8d1d:	6d                   	ins    DWORD PTR es:[rdi],dx
    8d1e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    8d20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8d21:	72 79                	jb     8d9c <stivale_hdr-0x1f7264>
    8d23:	2f                   	(bad)  
    8d24:	70 61                	jo     8d87 <stivale_hdr-0x1f7279>
    8d26:	74 2e                	je     8d56 <stivale_hdr-0x1f72aa>
    8d28:	61                   	(bad)  
    8d29:	73 6d                	jae    8d98 <stivale_hdr-0x1f7268>
    8d2b:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8d2e:	53                   	push   rbx
    8d2f:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8d32:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8d36:	30 32                	xor    BYTE PTR [rdx],dh
    8d38:	00 01                	add    BYTE PTR [rcx],al
    8d3a:	80 02 f0             	add    BYTE PTR [rdx],0xf0
    8d3d:	86 20                	xchg   BYTE PTR [rax],ah
	...
    8d4b:	00 00                	add    BYTE PTR [rax],al
    8d4d:	56                   	push   rsi
    8d4e:	00 00                	add    BYTE PTR [rax],al
    8d50:	00 03                	add    BYTE PTR [rbx],al
    8d52:	00 f7                	add    bh,dh
    8d54:	2d 00 00 08 01       	sub    eax,0x1080000
    8d59:	10 87 20 00 00 00    	adc    BYTE PTR [rdi+0x20],al
    8d5f:	00 00                	add    BYTE PTR [rax],al
    8d61:	41 87 20             	xchg   DWORD PTR [r8],esp
    8d64:	00 00                	add    BYTE PTR [rax],al
    8d66:	00 00                	add    BYTE PTR [rax],al
    8d68:	00 50 3d             	add    BYTE PTR [rax+0x3d],dl
    8d6b:	00 00                	add    BYTE PTR [rax],al
    8d6d:	73 72                	jae    8de1 <stivale_hdr-0x1f721f>
    8d6f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    8d71:	73 63                	jae    8dd6 <stivale_hdr-0x1f722a>
    8d73:	68 65 64 75 6c       	push   0x6c756465
    8d78:	69 6e 67 2f 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656c732f
    8d7f:	65 70 2e             	gs jo  8db0 <stivale_hdr-0x1f7250>
    8d82:	61                   	(bad)  
    8d83:	73 6d                	jae    8df2 <stivale_hdr-0x1f720e>
    8d85:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8d88:	53                   	push   rbx
    8d89:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8d8c:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8d90:	30 32                	xor    BYTE PTR [rdx],dh
    8d92:	00 01                	add    BYTE PTR [rcx],al
    8d94:	80 02 10             	add    BYTE PTR [rdx],0x10
    8d97:	87 20                	xchg   DWORD PTR [rax],esp
	...
    8da5:	00 00                	add    BYTE PTR [rax],al
    8da7:	58                   	pop    rax
    8da8:	00 00                	add    BYTE PTR [rax],al
    8daa:	00 03                	add    BYTE PTR [rbx],al
    8dac:	00 12                	add    BYTE PTR [rdx],dl
    8dae:	2e 00 00             	add    BYTE PTR cs:[rax],al
    8db1:	08 01                	or     BYTE PTR [rcx],al
    8db3:	50                   	push   rax
    8db4:	87 20                	xchg   DWORD PTR [rax],esp
    8db6:	00 00                	add    BYTE PTR [rax],al
    8db8:	00 00                	add    BYTE PTR [rax],al
    8dba:	00 01                	add    BYTE PTR [rcx],al
    8dbc:	88 20                	mov    BYTE PTR [rax],ah
    8dbe:	00 00                	add    BYTE PTR [rax],al
    8dc0:	00 00                	add    BYTE PTR [rax],al
    8dc2:	00 b1 3d 00 00 73    	add    BYTE PTR [rcx+0x7300003d],dh
    8dc8:	72 63                	jb     8e2d <stivale_hdr-0x1f71d3>
    8dca:	2f                   	(bad)  
    8dcb:	75 73                	jne    8e40 <stivale_hdr-0x1f71c0>
    8dcd:	65 72 73             	gs jb  8e43 <stivale_hdr-0x1f71bd>
    8dd0:	70 61                	jo     8e33 <stivale_hdr-0x1f71cd>
    8dd2:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    8dd5:	73 79                	jae    8e50 <stivale_hdr-0x1f71b0>
    8dd7:	73 63                	jae    8e3c <stivale_hdr-0x1f71c4>
    8dd9:	61                   	(bad)  
    8dda:	6c                   	ins    BYTE PTR es:[rdi],dx
    8ddb:	6c                   	ins    BYTE PTR es:[rdi],dx
    8ddc:	73 2e                	jae    8e0c <stivale_hdr-0x1f71f4>
    8dde:	61                   	(bad)  
    8ddf:	73 6d                	jae    8e4e <stivale_hdr-0x1f71b2>
    8de1:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8de4:	53                   	push   rbx
    8de5:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8de8:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8dec:	30 32                	xor    BYTE PTR [rdx],dh
    8dee:	00 01                	add    BYTE PTR [rcx],al
    8df0:	80 02 50             	add    BYTE PTR [rdx],0x50
    8df3:	87 20                	xchg   DWORD PTR [rax],esp
	...
    8e01:	00 00                	add    BYTE PTR [rax],al
    8e03:	5c                   	pop    rsp
    8e04:	00 00                	add    BYTE PTR [rax],al
    8e06:	00 03                	add    BYTE PTR [rbx],al
    8e08:	00 2d 2e 00 00 08    	add    BYTE PTR [rip+0x800002e],ch        # 8008e3c <__kernel_end+0x7df6e3c>
    8e0e:	01 10                	add    DWORD PTR [rax],edx
    8e10:	88 20                	mov    BYTE PTR [rax],ah
    8e12:	00 00                	add    BYTE PTR [rax],al
    8e14:	00 00                	add    BYTE PTR [rax],al
    8e16:	00 5d 88             	add    BYTE PTR [rbp-0x78],bl
    8e19:	20 00                	and    BYTE PTR [rax],al
    8e1b:	00 00                	add    BYTE PTR [rax],al
    8e1d:	00 00                	add    BYTE PTR [rax],al
    8e1f:	2d 3e 00 00 73       	sub    eax,0x7300003e
    8e24:	72 63                	jb     8e89 <stivale_hdr-0x1f7177>
    8e26:	2f                   	(bad)  
    8e27:	75 73                	jne    8e9c <stivale_hdr-0x1f7164>
    8e29:	65 72 73             	gs jb  8e9f <stivale_hdr-0x1f7161>
    8e2c:	70 61                	jo     8e8f <stivale_hdr-0x1f7171>
    8e2e:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    8e31:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    8e33:	74 72                	je     8ea7 <stivale_hdr-0x1f7159>
    8e35:	79 2f                	jns    8e66 <stivale_hdr-0x1f719a>
    8e37:	75 65                	jne    8e9e <stivale_hdr-0x1f7162>
    8e39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8e3a:	74 72                	je     8eae <stivale_hdr-0x1f7152>
    8e3c:	79 2e                	jns    8e6c <stivale_hdr-0x1f7194>
    8e3e:	61                   	(bad)  
    8e3f:	73 6d                	jae    8eae <stivale_hdr-0x1f7152>
    8e41:	00 4e 41             	add    BYTE PTR [rsi+0x41],cl
    8e44:	53                   	push   rbx
    8e45:	4d 20 32             	rex.WRB and BYTE PTR [r10],r14b
    8e48:	2e 31 34 2e          	xor    DWORD PTR cs:[rsi+rbp*1],esi
    8e4c:	30 32                	xor    BYTE PTR [rdx],dh
    8e4e:	00 01                	add    BYTE PTR [rcx],al
    8e50:	80 02 10             	add    BYTE PTR [rdx],0x10
    8e53:	88 20                	mov    BYTE PTR [rax],ah
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 11                	add    DWORD PTR [rcx],edx
       2:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1316 <__kernel_end+0x2e9f316>
       8:	0e                   	(bad)  
       9:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
       b:	10 17                	adc    BYTE PTR [rdi],dl
       d:	00 00                	add    BYTE PTR [rax],al
       f:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
      12:	0b 0b                	or     ecx,DWORD PTR [rbx]
      14:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      17:	0e                   	(bad)  
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	03 3b                	add    edi,DWORD PTR [rbx]
      1c:	00 03                	add    BYTE PTR [rbx],al
      1e:	0e                   	(bad)  
      1f:	00 00                	add    BYTE PTR [rax],al
      21:	04 16                	add    al,0x16
      23:	00 03                	add    BYTE PTR [rbx],al
      25:	0e                   	(bad)  
      26:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      28:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      2a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      2c:	49 13 00             	adc    rax,QWORD PTR [r8]
      2f:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b0059 <__kernel_end+0xae9e059>
      35:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      38:	08 00                	or     BYTE PTR [rax],al
      3a:	00 06                	add    BYTE PTR [rsi],al
      3c:	39 01                	cmp    DWORD PTR [rcx],eax
      3e:	03 08                	add    ecx,DWORD PTR [rax]
      40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      44:	39 0b                	cmp    DWORD PTR [rbx],ecx
      46:	01 13                	add    DWORD PTR [rbx],edx
      48:	00 00                	add    BYTE PTR [rax],al
      4a:	07                   	(bad)  
      4b:	39 00                	cmp    DWORD PTR [rax],eax
      4d:	03 0e                	add    ecx,DWORD PTR [rsi]
      4f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      51:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      53:	39 0b                	cmp    DWORD PTR [rbx],ecx
      55:	00 00                	add    BYTE PTR [rax],al
      57:	08 13                	or     BYTE PTR [rbx],dl
      59:	01 03                	add    DWORD PTR [rbx],eax
      5b:	0e                   	(bad)  
      5c:	0b 0b                	or     ecx,DWORD PTR [rbx]
      5e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      60:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      62:	39 0b                	cmp    DWORD PTR [rbx],ecx
      64:	01 13                	add    DWORD PTR [rbx],edx
      66:	00 00                	add    BYTE PTR [rax],al
      68:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e036e <__kernel_end+0x39ece36e>
      6e:	0b 3b                	or     edi,DWORD PTR [rbx]
      70:	0b 39                	or     edi,DWORD PTR [rcx]
      72:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      75:	38 0b                	cmp    BYTE PTR [rbx],cl
      77:	00 00                	add    BYTE PTR [rax],al
      79:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
      7c:	03 0e                	add    ecx,DWORD PTR [rsi]
      7e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      80:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      82:	39 0b                	cmp    DWORD PTR [rbx],ecx
      84:	49 13 3f             	adc    rdi,QWORD PTR [r15]
      87:	19 02                	sbb    DWORD PTR [rdx],eax
      89:	18 00                	sbb    BYTE PTR [rax],al
      8b:	00 00                	add    BYTE PTR [rax],al
      8d:	01 11                	add    DWORD PTR [rcx],edx
      8f:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b13a3 <__kernel_end+0x2e9f3a3>
      95:	0e                   	(bad)  
      96:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
      98:	11 01                	adc    DWORD PTR [rcx],eax
      9a:	12 07                	adc    al,BYTE PTR [rdi]
      9c:	10 17                	adc    BYTE PTR [rdi],dl
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
      a3:	0b 0b                	or     ecx,DWORD PTR [rbx]
      a5:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      a8:	0e                   	(bad)  
      a9:	00 00                	add    BYTE PTR [rax],al
      ab:	03 3b                	add    edi,DWORD PTR [rbx]
      ad:	00 03                	add    BYTE PTR [rbx],al
      af:	0e                   	(bad)  
      b0:	00 00                	add    BYTE PTR [rax],al
      b2:	04 16                	add    al,0x16
      b4:	00 03                	add    BYTE PTR [rbx],al
      b6:	0e                   	(bad)  
      b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
      bd:	49 13 00             	adc    rax,QWORD PTR [r8]
      c0:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b00ea <__kernel_end+0xae9e0ea>
      c6:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
      c9:	08 00                	or     BYTE PTR [rax],al
      cb:	00 06                	add    BYTE PTR [rsi],al
      cd:	39 01                	cmp    DWORD PTR [rcx],eax
      cf:	03 08                	add    ecx,DWORD PTR [rax]
      d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d5:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d7:	01 13                	add    DWORD PTR [rbx],edx
      d9:	00 00                	add    BYTE PTR [rax],al
      db:	07                   	(bad)  
      dc:	39 00                	cmp    DWORD PTR [rax],eax
      de:	03 0e                	add    ecx,DWORD PTR [rsi]
      e0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      e2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      e4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      e6:	00 00                	add    BYTE PTR [rax],al
      e8:	08 39                	or     BYTE PTR [rcx],bh
      ea:	00 03                	add    BYTE PTR [rbx],al
      ec:	08 3a                	or     BYTE PTR [rdx],bh
      ee:	0b 3b                	or     edi,DWORD PTR [rbx]
      f0:	0b 39                	or     edi,DWORD PTR [rcx]
      f2:	0b 00                	or     eax,DWORD PTR [rax]
      f4:	00 09                	add    BYTE PTR [rcx],cl
      f6:	39 01                	cmp    DWORD PTR [rcx],eax
      f8:	03 0e                	add    ecx,DWORD PTR [rsi]
      fa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      fc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      fe:	39 0b                	cmp    DWORD PTR [rbx],ecx
     100:	00 00                	add    BYTE PTR [rax],al
     102:	0a 39                	or     bh,BYTE PTR [rcx]
     104:	01 03                	add    DWORD PTR [rbx],eax
     106:	0e                   	(bad)  
     107:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     109:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     10b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     10d:	01 13                	add    DWORD PTR [rbx],edx
     10f:	00 00                	add    BYTE PTR [rax],al
     111:	0b 13                	or     edx,DWORD PTR [rbx]
     113:	01 03                	add    DWORD PTR [rbx],eax
     115:	0e                   	(bad)  
     116:	0b 0b                	or     ecx,DWORD PTR [rbx]
     118:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     11a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     11c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     11e:	01 13                	add    DWORD PTR [rbx],edx
     120:	00 00                	add    BYTE PTR [rax],al
     122:	0c 0d                	or     al,0xd
     124:	00 03                	add    BYTE PTR [rbx],al
     126:	0e                   	(bad)  
     127:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     129:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     12b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     12d:	49 13 38             	adc    rdi,QWORD PTR [r8]
     130:	0b 00                	or     eax,DWORD PTR [rax]
     132:	00 0d 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],cl        # e03024b <__kernel_end+0xde1e24b>
     138:	0b 0b                	or     ecx,DWORD PTR [rbx]
     13a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     13c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     13e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     140:	00 00                	add    BYTE PTR [rax],al
     142:	0e                   	(bad)  
     143:	0d 00 03 08 3a       	or     eax,0x3a080300
     148:	0b 3b                	or     edi,DWORD PTR [rbx]
     14a:	0b 39                	or     edi,DWORD PTR [rcx]
     14c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     14f:	38 0b                	cmp    BYTE PTR [rbx],cl
     151:	00 00                	add    BYTE PTR [rax],al
     153:	0f 01 01             	sgdt   [rcx]
     156:	49 13 01             	adc    rax,QWORD PTR [r9]
     159:	13 00                	adc    eax,DWORD PTR [rax]
     15b:	00 10                	add    BYTE PTR [rax],dl
     15d:	21 00                	and    DWORD PTR [rax],eax
     15f:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     162:	0b 00                	or     eax,DWORD PTR [rax]
     164:	00 11                	add    BYTE PTR [rcx],dl
     166:	0f 00 0b             	str    WORD PTR [rbx]
     169:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	12 2e                	adc    ch,BYTE PTR [rsi]
     170:	01 3f                	add    DWORD PTR [rdi],edi
     172:	19 03                	sbb    DWORD PTR [rbx],eax
     174:	0e                   	(bad)  
     175:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     177:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     179:	39 0b                	cmp    DWORD PTR [rbx],ecx
     17b:	11 01                	adc    DWORD PTR [rcx],eax
     17d:	12 07                	adc    al,BYTE PTR [rdi]
     17f:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     186:	00 00                	add    BYTE PTR [rax],al
     188:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e048e <__kernel_end+0x39ece48e>
     18e:	0b 3b                	or     edi,DWORD PTR [rbx]
     190:	0b 39                	or     edi,DWORD PTR [rcx]
     192:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     195:	02 18                	add    bl,BYTE PTR [rax]
     197:	00 00                	add    BYTE PTR [rax],al
     199:	00 01                	add    BYTE PTR [rcx],al
     19b:	11 01                	adc    DWORD PTR [rcx],eax
     19d:	25 0e 13 0b 03       	and    eax,0x30b130e
     1a2:	0e                   	(bad)  
     1a3:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     1a5:	11 01                	adc    DWORD PTR [rcx],eax
     1a7:	12 07                	adc    al,BYTE PTR [rdi]
     1a9:	10 17                	adc    BYTE PTR [rdi],dl
     1ab:	00 00                	add    BYTE PTR [rax],al
     1ad:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     1b0:	0b 0b                	or     ecx,DWORD PTR [rbx]
     1b2:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     1b5:	0e                   	(bad)  
     1b6:	00 00                	add    BYTE PTR [rax],al
     1b8:	03 3b                	add    edi,DWORD PTR [rbx]
     1ba:	00 03                	add    BYTE PTR [rbx],al
     1bc:	0e                   	(bad)  
     1bd:	00 00                	add    BYTE PTR [rax],al
     1bf:	04 16                	add    al,0x16
     1c1:	00 03                	add    BYTE PTR [rbx],al
     1c3:	0e                   	(bad)  
     1c4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1c6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     1ca:	49 13 00             	adc    rax,QWORD PTR [r8]
     1cd:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b01f7 <__kernel_end+0xae9e1f7>
     1d3:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     1d6:	08 00                	or     BYTE PTR [rax],al
     1d8:	00 06                	add    BYTE PTR [rsi],al
     1da:	39 01                	cmp    DWORD PTR [rcx],eax
     1dc:	03 08                	add    ecx,DWORD PTR [rax]
     1de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1e2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     1e4:	01 13                	add    DWORD PTR [rbx],edx
     1e6:	00 00                	add    BYTE PTR [rax],al
     1e8:	07                   	(bad)  
     1e9:	39 01                	cmp    DWORD PTR [rcx],eax
     1eb:	03 0e                	add    ecx,DWORD PTR [rsi]
     1ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     1f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     1f3:	01 13                	add    DWORD PTR [rbx],edx
     1f5:	00 00                	add    BYTE PTR [rax],al
     1f7:	08 13                	or     BYTE PTR [rbx],dl
     1f9:	01 03                	add    DWORD PTR [rbx],eax
     1fb:	0e                   	(bad)  
     1fc:	0b 0b                	or     ecx,DWORD PTR [rbx]
     1fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     200:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     202:	39 0b                	cmp    DWORD PTR [rbx],ecx
     204:	01 13                	add    DWORD PTR [rbx],edx
     206:	00 00                	add    BYTE PTR [rax],al
     208:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e050e <__kernel_end+0x39ece50e>
     20e:	0b 3b                	or     edi,DWORD PTR [rbx]
     210:	0b 39                	or     edi,DWORD PTR [rcx]
     212:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     215:	38 0b                	cmp    BYTE PTR [rbx],cl
     217:	00 00                	add    BYTE PTR [rax],al
     219:	0a 0d 00 03 08 3a    	or     cl,BYTE PTR [rip+0x3a080300]        # 3a08051f <__kernel_end+0x39e6e51f>
     21f:	0b 3b                	or     edi,DWORD PTR [rbx]
     221:	0b 39                	or     edi,DWORD PTR [rcx]
     223:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     226:	38 0b                	cmp    BYTE PTR [rbx],cl
     228:	00 00                	add    BYTE PTR [rax],al
     22a:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
     22d:	03 0e                	add    ecx,DWORD PTR [rsi]
     22f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     231:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     233:	39 0b                	cmp    DWORD PTR [rbx],ecx
     235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     236:	0e                   	(bad)  
     237:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     23a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     23d:	00 00                	add    BYTE PTR [rax],al
     23f:	0c 39                	or     al,0x39
     241:	01 03                	add    DWORD PTR [rbx],eax
     243:	0e                   	(bad)  
     244:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     246:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     248:	39 0b                	cmp    DWORD PTR [rbx],ecx
     24a:	00 00                	add    BYTE PTR [rax],al
     24c:	0d 34 00 03 0e       	or     eax,0xe030034
     251:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     253:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     255:	39 0b                	cmp    DWORD PTR [rbx],ecx
     257:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     25a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     25d:	00 00                	add    BYTE PTR [rax],al
     25f:	0e                   	(bad)  
     260:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
     263:	19 03                	sbb    DWORD PTR [rbx],eax
     265:	0e                   	(bad)  
     266:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     268:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     26a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     26c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     26d:	0e                   	(bad)  
     26e:	3c 19                	cmp    al,0x19
     270:	00 00                	add    BYTE PTR [rax],al
     272:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     275:	3f                   	(bad)  
     276:	19 03                	sbb    DWORD PTR [rbx],eax
     278:	0e                   	(bad)  
     279:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     27b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     27d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     27f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     280:	0e                   	(bad)  
     281:	3c 19                	cmp    al,0x19
     283:	01 13                	add    DWORD PTR [rbx],edx
     285:	00 00                	add    BYTE PTR [rax],al
     287:	10 05 00 49 13 00    	adc    BYTE PTR [rip+0x134900],al        # 134b8d <stivale_hdr-0xcb473>
     28d:	00 11                	add    BYTE PTR [rcx],dl
     28f:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     292:	19 03                	sbb    DWORD PTR [rbx],eax
     294:	0e                   	(bad)  
     295:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     297:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     299:	39 0b                	cmp    DWORD PTR [rbx],ecx
     29b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     29c:	0e                   	(bad)  
     29d:	3c 19                	cmp    al,0x19
     29f:	00 00                	add    BYTE PTR [rax],al
     2a1:	12 01                	adc    al,BYTE PTR [rcx]
     2a3:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     2a6:	01 13                	add    DWORD PTR [rbx],edx
     2a8:	00 00                	add    BYTE PTR [rax],al
     2aa:	13 21                	adc    esp,DWORD PTR [rcx]
     2ac:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     2af:	2f                   	(bad)  
     2b0:	0b 00                	or     eax,DWORD PTR [rax]
     2b2:	00 14 0f             	add    BYTE PTR [rdi+rcx*1],dl
     2b5:	00 0b                	add    BYTE PTR [rbx],cl
     2b7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2ba:	00 00                	add    BYTE PTR [rax],al
     2bc:	15 39 00 03 08       	adc    eax,0x8030039
     2c1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2c3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2c5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2c7:	00 00                	add    BYTE PTR [rax],al
     2c9:	16                   	(bad)  
     2ca:	04 01                	add    al,0x1
     2cc:	03 0e                	add    ecx,DWORD PTR [rsi]
     2ce:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
     2d1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2d8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2da:	01 13                	add    DWORD PTR [rbx],edx
     2dc:	00 00                	add    BYTE PTR [rax],al
     2de:	17                   	(bad)  
     2df:	28 00                	sub    BYTE PTR [rax],al
     2e1:	03 0e                	add    ecx,DWORD PTR [rsi]
     2e3:	1c 0b                	sbb    al,0xb
     2e5:	00 00                	add    BYTE PTR [rax],al
     2e7:	18 28                	sbb    BYTE PTR [rax],ch
     2e9:	00 03                	add    BYTE PTR [rbx],al
     2eb:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
     2ee:	00 00                	add    BYTE PTR [rax],al
     2f0:	19 2e                	sbb    DWORD PTR [rsi],ebp
     2f2:	01 3f                	add    DWORD PTR [rdi],edi
     2f4:	19 03                	sbb    DWORD PTR [rbx],eax
     2f6:	0e                   	(bad)  
     2f7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2f9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2fb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2fe:	0e                   	(bad)  
     2ff:	3c 19                	cmp    al,0x19
     301:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
     304:	13 00                	adc    eax,DWORD PTR [rax]
     306:	00 1a                	add    BYTE PTR [rdx],bl
     308:	05 00 49 13 34       	add    eax,0x34134900
     30d:	19 00                	sbb    DWORD PTR [rax],eax
     30f:	00 1b                	add    BYTE PTR [rbx],bl
     311:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     314:	19 03                	sbb    DWORD PTR [rbx],eax
     316:	0e                   	(bad)  
     317:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     319:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     31b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     31d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     31e:	0e                   	(bad)  
     31f:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     323:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
     326:	13 00                	adc    eax,DWORD PTR [rax]
     328:	00 1c 2e             	add    BYTE PTR [rsi+rbp*1],bl
     32b:	01 3f                	add    DWORD PTR [rdi],edi
     32d:	19 03                	sbb    DWORD PTR [rbx],eax
     32f:	0e                   	(bad)  
     330:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     332:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     334:	39 0b                	cmp    DWORD PTR [rbx],ecx
     336:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     337:	0e                   	(bad)  
     338:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     33c:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
     33f:	00 1d 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],bl        # e030458 <__kernel_end+0xde1e458>
     345:	0b 05 88 01 05 3a    	or     eax,DWORD PTR [rip+0x3a050188]        # 3a0504d3 <__kernel_end+0x39e3e4d3>
     34b:	0b 3b                	or     edi,DWORD PTR [rbx]
     34d:	0b 39                	or     edi,DWORD PTR [rcx]
     34f:	0b 01                	or     eax,DWORD PTR [rcx]
     351:	13 00                	adc    eax,DWORD PTR [rax]
     353:	00 1e                	add    BYTE PTR [rsi],bl
     355:	39 00                	cmp    DWORD PTR [rax],eax
     357:	03 0e                	add    ecx,DWORD PTR [rsi]
     359:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     35b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     35d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     35f:	00 00                	add    BYTE PTR [rax],al
     361:	1f                   	(bad)  
     362:	21 00                	and    DWORD PTR [rax],eax
     364:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     367:	05 00 00 20 34       	add    eax,0x34200000
     36c:	00 03                	add    BYTE PTR [rbx],al
     36e:	08 3a                	or     BYTE PTR [rdx],bh
     370:	0b 3b                	or     edi,DWORD PTR [rbx]
     372:	0b 39                	or     edi,DWORD PTR [rcx]
     374:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     377:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     37a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	21 34 00             	and    DWORD PTR [rax+rax*1],esi
     382:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
     385:	0b 39                	or     edi,DWORD PTR [rcx]
     387:	0b 02                	or     eax,DWORD PTR [rdx]
     389:	18 00                	sbb    BYTE PTR [rax],al
     38b:	00 22                	add    BYTE PTR [rdx],ah
     38d:	34 00                	xor    al,0x0
     38f:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
     392:	0b 3b                	or     edi,DWORD PTR [rbx]
     394:	0b 39                	or     edi,DWORD PTR [rcx]
     396:	0b 02                	or     eax,DWORD PTR [rdx]
     398:	18 00                	sbb    BYTE PTR [rax],al
     39a:	00 23                	add    BYTE PTR [rbx],ah
     39c:	2e 00 47 13          	add    BYTE PTR cs:[rdi+0x13],al
     3a0:	11 01                	adc    DWORD PTR [rcx],eax
     3a2:	12 07                	adc    al,BYTE PTR [rdi]
     3a4:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     3ab:	24 2e                	and    al,0x2e
     3ad:	00 47 13             	add    BYTE PTR [rdi+0x13],al
     3b0:	11 01                	adc    DWORD PTR [rcx],eax
     3b2:	12 07                	adc    al,BYTE PTR [rdi]
     3b4:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     3bb:	25 2e 01 47 13       	and    eax,0x1347012e
     3c0:	11 01                	adc    DWORD PTR [rcx],eax
     3c2:	12 07                	adc    al,BYTE PTR [rdi]
     3c4:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     3cb:	00 00                	add    BYTE PTR [rax],al
     3cd:	26 05 00 03 0e 3a    	es add eax,0x3a0e0300
     3d3:	0b 3b                	or     edi,DWORD PTR [rbx]
     3d5:	0b 39                	or     edi,DWORD PTR [rcx]
     3d7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3da:	02 18                	add    bl,BYTE PTR [rax]
     3dc:	00 00                	add    BYTE PTR [rax],al
     3de:	27                   	(bad)  
     3df:	34 00                	xor    al,0x0
     3e1:	03 0e                	add    ecx,DWORD PTR [rsi]
     3e3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3e5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3e7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3e9:	49 13 02             	adc    rax,QWORD PTR [r10]
     3ec:	18 00                	sbb    BYTE PTR [rax],al
     3ee:	00 28                	add    BYTE PTR [rax],ch
     3f0:	0b 01                	or     eax,DWORD PTR [rcx]
     3f2:	11 01                	adc    DWORD PTR [rcx],eax
     3f4:	12 07                	adc    al,BYTE PTR [rdi]
     3f6:	00 00                	add    BYTE PTR [rax],al
     3f8:	29 34 00             	sub    DWORD PTR [rax+rax*1],esi
     3fb:	03 08                	add    ecx,DWORD PTR [rax]
     3fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     401:	39 0b                	cmp    DWORD PTR [rbx],ecx
     403:	49 13 02             	adc    rax,QWORD PTR [r10]
     406:	18 00                	sbb    BYTE PTR [rax],al
     408:	00 2a                	add    BYTE PTR [rdx],ch
     40a:	0f 00 0b             	str    WORD PTR [rbx]
     40d:	0b 00                	or     eax,DWORD PTR [rax]
     40f:	00 2b                	add    BYTE PTR [rbx],ch
     411:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     415:	11 01                	adc    DWORD PTR [rcx],eax
     417:	12 07                	adc    al,BYTE PTR [rdi]
     419:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     420:	2c 0b                	sub    al,0xb
     422:	01 11                	add    DWORD PTR [rcx],edx
     424:	01 12                	add    DWORD PTR [rdx],edx
     426:	07                   	(bad)  
     427:	01 13                	add    DWORD PTR [rbx],edx
     429:	00 00                	add    BYTE PTR [rax],al
     42b:	00 01                	add    BYTE PTR [rcx],al
     42d:	11 01                	adc    DWORD PTR [rcx],eax
     42f:	25 0e 13 0b 03       	and    eax,0x30b130e
     434:	0e                   	(bad)  
     435:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     437:	11 01                	adc    DWORD PTR [rcx],eax
     439:	12 07                	adc    al,BYTE PTR [rdi]
     43b:	10 17                	adc    BYTE PTR [rdi],dl
     43d:	00 00                	add    BYTE PTR [rax],al
     43f:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     442:	0b 0b                	or     ecx,DWORD PTR [rbx]
     444:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     447:	0e                   	(bad)  
     448:	00 00                	add    BYTE PTR [rax],al
     44a:	03 3b                	add    edi,DWORD PTR [rbx]
     44c:	00 03                	add    BYTE PTR [rbx],al
     44e:	0e                   	(bad)  
     44f:	00 00                	add    BYTE PTR [rax],al
     451:	04 16                	add    al,0x16
     453:	00 03                	add    BYTE PTR [rbx],al
     455:	0e                   	(bad)  
     456:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     458:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     45a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     45c:	49 13 00             	adc    rax,QWORD PTR [r8]
     45f:	00 05 26 00 49 13    	add    BYTE PTR [rip+0x13490026],al        # 1349048b <__kernel_end+0x1327e48b>
     465:	00 00                	add    BYTE PTR [rax],al
     467:	06                   	(bad)  
     468:	24 00                	and    al,0x0
     46a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     46c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     46f:	08 00                	or     BYTE PTR [rax],al
     471:	00 07                	add    BYTE PTR [rdi],al
     473:	39 01                	cmp    DWORD PTR [rcx],eax
     475:	03 08                	add    ecx,DWORD PTR [rax]
     477:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     479:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     47b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     47d:	01 13                	add    DWORD PTR [rbx],edx
     47f:	00 00                	add    BYTE PTR [rax],al
     481:	08 13                	or     BYTE PTR [rbx],dl
     483:	01 03                	add    DWORD PTR [rbx],eax
     485:	08 0b                	or     BYTE PTR [rbx],cl
     487:	0b 3a                	or     edi,DWORD PTR [rdx]
     489:	0b 3b                	or     edi,DWORD PTR [rbx]
     48b:	0b 39                	or     edi,DWORD PTR [rcx]
     48d:	0b 01                	or     eax,DWORD PTR [rcx]
     48f:	13 00                	adc    eax,DWORD PTR [rax]
     491:	00 09                	add    BYTE PTR [rcx],cl
     493:	0d 00 03 08 3a       	or     eax,0x3a080300
     498:	0b 3b                	or     edi,DWORD PTR [rbx]
     49a:	0b 39                	or     edi,DWORD PTR [rcx]
     49c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     49f:	38 0b                	cmp    BYTE PTR [rbx],cl
     4a1:	00 00                	add    BYTE PTR [rax],al
     4a3:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e07a9 <__kernel_end+0x39ece7a9>
     4a9:	0b 3b                	or     edi,DWORD PTR [rbx]
     4ab:	0b 39                	or     edi,DWORD PTR [rcx]
     4ad:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     4b0:	38 0b                	cmp    BYTE PTR [rbx],cl
     4b2:	00 00                	add    BYTE PTR [rax],al
     4b4:	0b 2e                	or     ebp,DWORD PTR [rsi]
     4b6:	01 3f                	add    DWORD PTR [rdi],edi
     4b8:	19 03                	sbb    DWORD PTR [rbx],eax
     4ba:	0e                   	(bad)  
     4bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4bd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4bf:	39 0b                	cmp    DWORD PTR [rbx],ecx
     4c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4c2:	0e                   	(bad)  
     4c3:	3c 19                	cmp    al,0x19
     4c5:	01 13                	add    DWORD PTR [rbx],edx
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	0c 05                	or     al,0x5
     4cb:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     4ce:	00 00                	add    BYTE PTR [rax],al
     4d0:	0d 2e 01 3f 19       	or     eax,0x193f012e
     4d5:	03 0e                	add    ecx,DWORD PTR [rsi]
     4d7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4d9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4db:	39 0b                	cmp    DWORD PTR [rbx],ecx
     4dd:	3c 19                	cmp    al,0x19
     4df:	01 13                	add    DWORD PTR [rbx],edx
     4e1:	00 00                	add    BYTE PTR [rax],al
     4e3:	0e                   	(bad)  
     4e4:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
     4e7:	19 03                	sbb    DWORD PTR [rbx],eax
     4e9:	0e                   	(bad)  
     4ea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4ec:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4ee:	39 0b                	cmp    DWORD PTR [rbx],ecx
     4f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4f1:	0e                   	(bad)  
     4f2:	3c 19                	cmp    al,0x19
     4f4:	00 00                	add    BYTE PTR [rax],al
     4f6:	0f 39                	(bad)  
     4f8:	01 03                	add    DWORD PTR [rbx],eax
     4fa:	08 3a                	or     BYTE PTR [rdx],bh
     4fc:	0b 3b                	or     edi,DWORD PTR [rbx]
     4fe:	0b 39                	or     edi,DWORD PTR [rcx]
     500:	0b 00                	or     eax,DWORD PTR [rax]
     502:	00 10                	add    BYTE PTR [rax],dl
     504:	34 00                	xor    al,0x0
     506:	03 0e                	add    ecx,DWORD PTR [rsi]
     508:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     50a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     50c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     50e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     512:	1c 0b                	sbb    al,0xb
     514:	6c                   	ins    BYTE PTR es:[rdi],dx
     515:	19 00                	sbb    DWORD PTR [rax],eax
     517:	00 11                	add    BYTE PTR [rcx],dl
     519:	01 01                	add    DWORD PTR [rcx],eax
     51b:	49 13 01             	adc    rax,QWORD PTR [r9]
     51e:	13 00                	adc    eax,DWORD PTR [rax]
     520:	00 12                	add    BYTE PTR [rdx],dl
     522:	21 00                	and    DWORD PTR [rax],eax
     524:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     527:	0b 00                	or     eax,DWORD PTR [rax]
     529:	00 13                	add    BYTE PTR [rbx],dl
     52b:	34 00                	xor    al,0x0
     52d:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
     530:	00 14 39             	add    BYTE PTR [rcx+rdi*1],dl
     533:	00 03                	add    BYTE PTR [rbx],al
     535:	0e                   	(bad)  
     536:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     538:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     53a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     53c:	00 00                	add    BYTE PTR [rax],al
     53e:	15 39 01 03 0e       	adc    eax,0xe030139
     543:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     545:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     547:	39 0b                	cmp    DWORD PTR [rbx],ecx
     549:	01 13                	add    DWORD PTR [rbx],edx
     54b:	00 00                	add    BYTE PTR [rax],al
     54d:	16                   	(bad)  
     54e:	39 00                	cmp    DWORD PTR [rax],eax
     550:	03 08                	add    ecx,DWORD PTR [rax]
     552:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     554:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     556:	39 0b                	cmp    DWORD PTR [rbx],ecx
     558:	00 00                	add    BYTE PTR [rax],al
     55a:	17                   	(bad)  
     55b:	34 00                	xor    al,0x0
     55d:	03 0e                	add    ecx,DWORD PTR [rsi]
     55f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     561:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     563:	39 0b                	cmp    DWORD PTR [rbx],ecx
     565:	49 13 02             	adc    rax,QWORD PTR [r10]
     568:	18 00                	sbb    BYTE PTR [rax],al
     56a:	00 18                	add    BYTE PTR [rax],bl
     56c:	0f 00 0b             	str    WORD PTR [rbx]
     56f:	0b 00                	or     eax,DWORD PTR [rax]
     571:	00 19                	add    BYTE PTR [rcx],bl
     573:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
     576:	19 03                	sbb    DWORD PTR [rbx],eax
     578:	0e                   	(bad)  
     579:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     57b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     57d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     57f:	11 01                	adc    DWORD PTR [rcx],eax
     581:	12 07                	adc    al,BYTE PTR [rdi]
     583:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     58a:	1a 2e                	sbb    ch,BYTE PTR [rsi]
     58c:	01 3f                	add    DWORD PTR [rdi],edi
     58e:	19 03                	sbb    DWORD PTR [rbx],eax
     590:	0e                   	(bad)  
     591:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     593:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     595:	39 0b                	cmp    DWORD PTR [rbx],ecx
     597:	49 13 11             	adc    rdx,QWORD PTR [r9]
     59a:	01 12                	add    DWORD PTR [rdx],edx
     59c:	07                   	(bad)  
     59d:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     5a4:	00 00                	add    BYTE PTR [rax],al
     5a6:	1b 05 00 03 0e 3a    	sbb    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e08ac <__kernel_end+0x39ece8ac>
     5ac:	0b 3b                	or     edi,DWORD PTR [rbx]
     5ae:	0b 39                	or     edi,DWORD PTR [rcx]
     5b0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     5b3:	02 18                	add    bl,BYTE PTR [rax]
     5b5:	00 00                	add    BYTE PTR [rax],al
     5b7:	1c 0f                	sbb    al,0xf
     5b9:	00 0b                	add    BYTE PTR [rbx],cl
     5bb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     5be:	00 00                	add    BYTE PTR [rax],al
     5c0:	1d 2e 01 47 13       	sbb    eax,0x1347012e
     5c5:	11 01                	adc    DWORD PTR [rcx],eax
     5c7:	12 07                	adc    al,BYTE PTR [rdi]
     5c9:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     5d0:	00 00                	add    BYTE PTR [rax],al
     5d2:	1e                   	(bad)  
     5d3:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     5d7:	11 01                	adc    DWORD PTR [rcx],eax
     5d9:	12 07                	adc    al,BYTE PTR [rdi]
     5db:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     5e2:	00 00                	add    BYTE PTR [rax],al
     5e4:	1f                   	(bad)  
     5e5:	2e 00 47 13          	add    BYTE PTR cs:[rdi+0x13],al
     5e9:	11 01                	adc    DWORD PTR [rcx],eax
     5eb:	12 07                	adc    al,BYTE PTR [rdi]
     5ed:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     5f4:	00 01                	add    BYTE PTR [rcx],al
     5f6:	11 01                	adc    DWORD PTR [rcx],eax
     5f8:	25 0e 13 0b 03       	and    eax,0x30b130e
     5fd:	0e                   	(bad)  
     5fe:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     600:	11 01                	adc    DWORD PTR [rcx],eax
     602:	12 07                	adc    al,BYTE PTR [rdi]
     604:	10 17                	adc    BYTE PTR [rdi],dl
     606:	00 00                	add    BYTE PTR [rax],al
     608:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     60b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     60d:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     610:	0e                   	(bad)  
     611:	00 00                	add    BYTE PTR [rax],al
     613:	03 3b                	add    edi,DWORD PTR [rbx]
     615:	00 03                	add    BYTE PTR [rbx],al
     617:	0e                   	(bad)  
     618:	00 00                	add    BYTE PTR [rax],al
     61a:	04 16                	add    al,0x16
     61c:	00 03                	add    BYTE PTR [rbx],al
     61e:	0e                   	(bad)  
     61f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     621:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     623:	39 0b                	cmp    DWORD PTR [rbx],ecx
     625:	49 13 00             	adc    rax,QWORD PTR [r8]
     628:	00 05 26 00 49 13    	add    BYTE PTR [rip+0x13490026],al        # 13490654 <__kernel_end+0x1327e654>
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	06                   	(bad)  
     631:	24 00                	and    al,0x0
     633:	0b 0b                	or     ecx,DWORD PTR [rbx]
     635:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     638:	08 00                	or     BYTE PTR [rax],al
     63a:	00 07                	add    BYTE PTR [rdi],al
     63c:	39 01                	cmp    DWORD PTR [rcx],eax
     63e:	03 08                	add    ecx,DWORD PTR [rax]
     640:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     642:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     644:	39 0b                	cmp    DWORD PTR [rbx],ecx
     646:	01 13                	add    DWORD PTR [rbx],edx
     648:	00 00                	add    BYTE PTR [rax],al
     64a:	08 39                	or     BYTE PTR [rcx],bh
     64c:	01 03                	add    DWORD PTR [rbx],eax
     64e:	08 3a                	or     BYTE PTR [rdx],bh
     650:	0b 3b                	or     edi,DWORD PTR [rbx]
     652:	0b 39                	or     edi,DWORD PTR [rcx]
     654:	0b 00                	or     eax,DWORD PTR [rax]
     656:	00 09                	add    BYTE PTR [rcx],cl
     658:	34 00                	xor    al,0x0
     65a:	03 0e                	add    ecx,DWORD PTR [rsi]
     65c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     65e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     660:	39 0b                	cmp    DWORD PTR [rbx],ecx
     662:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     666:	1c 0b                	sbb    al,0xb
     668:	6c                   	ins    BYTE PTR es:[rdi],dx
     669:	19 00                	sbb    DWORD PTR [rax],eax
     66b:	00 0a                	add    BYTE PTR [rdx],cl
     66d:	13 01                	adc    eax,DWORD PTR [rcx]
     66f:	03 0e                	add    ecx,DWORD PTR [rsi]
     671:	0b 0b                	or     ecx,DWORD PTR [rbx]
     673:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     675:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     677:	39 0b                	cmp    DWORD PTR [rbx],ecx
     679:	01 13                	add    DWORD PTR [rbx],edx
     67b:	00 00                	add    BYTE PTR [rax],al
     67d:	0b 0d 00 03 0e 3a    	or     ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e0983 <__kernel_end+0x39ece983>
     683:	0b 3b                	or     edi,DWORD PTR [rbx]
     685:	0b 39                	or     edi,DWORD PTR [rcx]
     687:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     68a:	38 0b                	cmp    BYTE PTR [rbx],cl
     68c:	00 00                	add    BYTE PTR [rax],al
     68e:	0c 13                	or     al,0x13
     690:	01 03                	add    DWORD PTR [rbx],eax
     692:	08 0b                	or     BYTE PTR [rbx],cl
     694:	0b 3a                	or     edi,DWORD PTR [rdx]
     696:	0b 3b                	or     edi,DWORD PTR [rbx]
     698:	0b 39                	or     edi,DWORD PTR [rcx]
     69a:	0b 01                	or     eax,DWORD PTR [rcx]
     69c:	13 00                	adc    eax,DWORD PTR [rax]
     69e:	00 0d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],cl        # 193f07d2 <__kernel_end+0x191de7d2>
     6a4:	03 0e                	add    ecx,DWORD PTR [rsi]
     6a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6aa:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6ad:	0e                   	(bad)  
     6ae:	3c 19                	cmp    al,0x19
     6b0:	01 13                	add    DWORD PTR [rbx],edx
     6b2:	00 00                	add    BYTE PTR [rax],al
     6b4:	0e                   	(bad)  
     6b5:	05 00 49 13 00       	add    eax,0x134900
     6ba:	00 0f                	add    BYTE PTR [rdi],cl
     6bc:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
     6bf:	19 03                	sbb    DWORD PTR [rbx],eax
     6c1:	0e                   	(bad)  
     6c2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6c4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6c6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6c8:	3c 19                	cmp    al,0x19
     6ca:	00 00                	add    BYTE PTR [rax],al
     6cc:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     6cf:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
     6d2:	00 11                	add    BYTE PTR [rcx],dl
     6d4:	01 01                	add    DWORD PTR [rcx],eax
     6d6:	49 13 01             	adc    rax,QWORD PTR [r9]
     6d9:	13 00                	adc    eax,DWORD PTR [rax]
     6db:	00 12                	add    BYTE PTR [rdx],dl
     6dd:	21 00                	and    DWORD PTR [rax],eax
     6df:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     6e2:	0b 00                	or     eax,DWORD PTR [rax]
     6e4:	00 13                	add    BYTE PTR [rbx],dl
     6e6:	34 00                	xor    al,0x0
     6e8:	03 0e                	add    ecx,DWORD PTR [rsi]
     6ea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6ec:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6ee:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6f0:	49 13 88 01 05 02 18 	adc    rcx,QWORD PTR [r8+0x18020501]
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	14 34                	adc    al,0x34
     6fb:	00 03                	add    BYTE PTR [rbx],al
     6fd:	0e                   	(bad)  
     6fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     700:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     702:	39 0b                	cmp    DWORD PTR [rbx],ecx
     704:	49 13 02             	adc    rax,QWORD PTR [r10]
     707:	18 00                	sbb    BYTE PTR [rax],al
     709:	00 15 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],dl        # e030743 <__kernel_end+0xde1e743>
     70f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     711:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     713:	39 0b                	cmp    DWORD PTR [rbx],ecx
     715:	49 13 6c 19 02       	adc    rbp,QWORD PTR [r9+rbx*1+0x2]
     71a:	18 00                	sbb    BYTE PTR [rax],al
     71c:	00 16                	add    BYTE PTR [rsi],dl
     71e:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     722:	11 01                	adc    DWORD PTR [rcx],eax
     724:	12 07                	adc    al,BYTE PTR [rdi]
     726:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     72d:	00 00                	add    BYTE PTR [rax],al
     72f:	17                   	(bad)  
     730:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     735:	0b 3b                	or     edi,DWORD PTR [rbx]
     737:	0b 39                	or     edi,DWORD PTR [rcx]
     739:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     73c:	02 18                	add    bl,BYTE PTR [rax]
     73e:	00 00                	add    BYTE PTR [rax],al
     740:	18 0f                	sbb    BYTE PTR [rdi],cl
     742:	00 0b                	add    BYTE PTR [rbx],cl
     744:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     747:	00 00                	add    BYTE PTR [rax],al
     749:	19 2e                	sbb    DWORD PTR [rsi],ebp
     74b:	00 47 13             	add    BYTE PTR [rdi+0x13],al
     74e:	11 01                	adc    DWORD PTR [rcx],eax
     750:	12 07                	adc    al,BYTE PTR [rdi]
     752:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     759:	00 01                	add    BYTE PTR [rcx],al
     75b:	11 01                	adc    DWORD PTR [rcx],eax
     75d:	25 0e 13 0b 03       	and    eax,0x30b130e
     762:	0e                   	(bad)  
     763:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     765:	11 01                	adc    DWORD PTR [rcx],eax
     767:	12 07                	adc    al,BYTE PTR [rdi]
     769:	10 17                	adc    BYTE PTR [rdi],dl
     76b:	00 00                	add    BYTE PTR [rax],al
     76d:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     770:	0b 0b                	or     ecx,DWORD PTR [rbx]
     772:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     775:	0e                   	(bad)  
     776:	00 00                	add    BYTE PTR [rax],al
     778:	03 3b                	add    edi,DWORD PTR [rbx]
     77a:	00 03                	add    BYTE PTR [rbx],al
     77c:	0e                   	(bad)  
     77d:	00 00                	add    BYTE PTR [rax],al
     77f:	04 16                	add    al,0x16
     781:	00 03                	add    BYTE PTR [rbx],al
     783:	0e                   	(bad)  
     784:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     786:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     788:	39 0b                	cmp    DWORD PTR [rbx],ecx
     78a:	49 13 00             	adc    rax,QWORD PTR [r8]
     78d:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b07b7 <__kernel_end+0xae9e7b7>
     793:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     796:	08 00                	or     BYTE PTR [rax],al
     798:	00 06                	add    BYTE PTR [rsi],al
     79a:	39 01                	cmp    DWORD PTR [rcx],eax
     79c:	03 08                	add    ecx,DWORD PTR [rax]
     79e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7a2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7a4:	01 13                	add    DWORD PTR [rbx],edx
     7a6:	00 00                	add    BYTE PTR [rax],al
     7a8:	07                   	(bad)  
     7a9:	39 01                	cmp    DWORD PTR [rcx],eax
     7ab:	03 08                	add    ecx,DWORD PTR [rax]
     7ad:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7af:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7b1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7b3:	00 00                	add    BYTE PTR [rax],al
     7b5:	08 13                	or     BYTE PTR [rbx],dl
     7b7:	01 0b                	add    DWORD PTR [rbx],ecx
     7b9:	0b 3a                	or     edi,DWORD PTR [rdx]
     7bb:	0b 3b                	or     edi,DWORD PTR [rbx]
     7bd:	0b 39                	or     edi,DWORD PTR [rcx]
     7bf:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     7c2:	01 13                	add    DWORD PTR [rbx],edx
     7c4:	00 00                	add    BYTE PTR [rax],al
     7c6:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e0acc <__kernel_end+0x39eceacc>
     7cc:	0b 3b                	or     edi,DWORD PTR [rbx]
     7ce:	0b 39                	or     edi,DWORD PTR [rcx]
     7d0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7d3:	38 0b                	cmp    BYTE PTR [rbx],cl
     7d5:	00 00                	add    BYTE PTR [rax],al
     7d7:	0a 2e                	or     ch,BYTE PTR [rsi]
     7d9:	00 3f                	add    BYTE PTR [rdi],bh
     7db:	19 03                	sbb    DWORD PTR [rbx],eax
     7dd:	0e                   	(bad)  
     7de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7e2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7e4:	3c 19                	cmp    al,0x19
     7e6:	00 00                	add    BYTE PTR [rax],al
     7e8:	0b 39                	or     edi,DWORD PTR [rcx]
     7ea:	00 03                	add    BYTE PTR [rbx],al
     7ec:	0e                   	(bad)  
     7ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7f3:	00 00                	add    BYTE PTR [rax],al
     7f5:	0c 39                	or     al,0x39
     7f7:	01 03                	add    DWORD PTR [rbx],eax
     7f9:	0e                   	(bad)  
     7fa:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7fc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7fe:	39 0b                	cmp    DWORD PTR [rbx],ecx
     800:	01 13                	add    DWORD PTR [rbx],edx
     802:	00 00                	add    BYTE PTR [rax],al
     804:	0d 34 00 03 0e       	or     eax,0xe030034
     809:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     80b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     80d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     80f:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     812:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     815:	00 00                	add    BYTE PTR [rax],al
     817:	0e                   	(bad)  
     818:	39 01                	cmp    DWORD PTR [rcx],eax
     81a:	03 0e                	add    ecx,DWORD PTR [rsi]
     81c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     81e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     820:	39 0b                	cmp    DWORD PTR [rbx],ecx
     822:	00 00                	add    BYTE PTR [rax],al
     824:	0f 26                	(bad)  
     826:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     829:	00 00                	add    BYTE PTR [rax],al
     82b:	10 39                	adc    BYTE PTR [rcx],bh
     82d:	00 03                	add    BYTE PTR [rbx],al
     82f:	08 3a                	or     BYTE PTR [rdx],bh
     831:	0b 3b                	or     edi,DWORD PTR [rbx]
     833:	0b 39                	or     edi,DWORD PTR [rcx]
     835:	0b 00                	or     eax,DWORD PTR [rax]
     837:	00 11                	add    BYTE PTR [rcx],dl
     839:	34 00                	xor    al,0x0
     83b:	03 0e                	add    ecx,DWORD PTR [rsi]
     83d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     83f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     841:	39 0b                	cmp    DWORD PTR [rbx],ecx
     843:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     844:	0e                   	(bad)  
     845:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     848:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     84b:	00 00                	add    BYTE PTR [rax],al
     84d:	12 2e                	adc    ch,BYTE PTR [rsi]
     84f:	01 03                	add    DWORD PTR [rbx],eax
     851:	0e                   	(bad)  
     852:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     854:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     856:	39 0b                	cmp    DWORD PTR [rbx],ecx
     858:	3c 19                	cmp    al,0x19
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	13 05 00 49 13 00    	adc    eax,DWORD PTR [rip+0x134900]        # 135162 <stivale_hdr-0xcae9e>
     862:	00 14 0f             	add    BYTE PTR [rdi+rcx*1],dl
     865:	00 0b                	add    BYTE PTR [rbx],cl
     867:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     86a:	00 00                	add    BYTE PTR [rax],al
     86c:	15 01 01 49 13       	adc    eax,0x13490101
     871:	01 13                	add    DWORD PTR [rbx],edx
     873:	00 00                	add    BYTE PTR [rax],al
     875:	16                   	(bad)  
     876:	21 00                	and    DWORD PTR [rax],eax
     878:	00 00                	add    BYTE PTR [rax],al
     87a:	17                   	(bad)  
     87b:	21 00                	and    DWORD PTR [rax],eax
     87d:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     880:	0b 00                	or     eax,DWORD PTR [rax]
     882:	00 18                	add    BYTE PTR [rax],bl
     884:	34 00                	xor    al,0x0
     886:	03 0e                	add    ecx,DWORD PTR [rsi]
     888:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     88a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     88c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     88e:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     891:	19 02                	sbb    DWORD PTR [rdx],eax
     893:	18 00                	sbb    BYTE PTR [rax],al
     895:	00 19                	add    BYTE PTR [rcx],bl
     897:	13 01                	adc    eax,DWORD PTR [rcx]
     899:	03 0e                	add    ecx,DWORD PTR [rsi]
     89b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     89d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     89f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8a1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8a3:	01 13                	add    DWORD PTR [rbx],edx
     8a5:	00 00                	add    BYTE PTR [rax],al
     8a7:	1a 0d 00 03 08 3a    	sbb    cl,BYTE PTR [rip+0x3a080300]        # 3a080bad <__kernel_end+0x39e6ebad>
     8ad:	0b 3b                	or     edi,DWORD PTR [rbx]
     8af:	0b 39                	or     edi,DWORD PTR [rcx]
     8b1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8b4:	38 0b                	cmp    BYTE PTR [rbx],cl
     8b6:	00 00                	add    BYTE PTR [rax],al
     8b8:	1b 04 01             	sbb    eax,DWORD PTR [rcx+rax*1]
     8bb:	03 0e                	add    ecx,DWORD PTR [rsi]
     8bd:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
     8c0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8c3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8c5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8c7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8c9:	01 13                	add    DWORD PTR [rbx],edx
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	1c 28                	sbb    al,0x28
     8cf:	00 03                	add    BYTE PTR [rbx],al
     8d1:	0e                   	(bad)  
     8d2:	1c 0b                	sbb    al,0xb
     8d4:	00 00                	add    BYTE PTR [rax],al
     8d6:	1d 2e 00 47 13       	sbb    eax,0x1347002e
     8db:	11 01                	adc    DWORD PTR [rcx],eax
     8dd:	12 07                	adc    al,BYTE PTR [rdi]
     8df:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
     8e6:	1e                   	(bad)  
     8e7:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     8ea:	19 03                	sbb    DWORD PTR [rbx],eax
     8ec:	0e                   	(bad)  
     8ed:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     8ef:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8f3:	11 01                	adc    DWORD PTR [rcx],eax
     8f5:	12 07                	adc    al,BYTE PTR [rdi]
     8f7:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     8fe:	00 00                	add    BYTE PTR [rax],al
     900:	1f                   	(bad)  
     901:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     906:	0b 3b                	or     edi,DWORD PTR [rbx]
     908:	0b 39                	or     edi,DWORD PTR [rcx]
     90a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     90d:	02 18                	add    bl,BYTE PTR [rax]
     90f:	00 00                	add    BYTE PTR [rax],al
     911:	20 2e                	and    BYTE PTR [rsi],ch
     913:	01 3f                	add    DWORD PTR [rdi],edi
     915:	19 03                	sbb    DWORD PTR [rbx],eax
     917:	0e                   	(bad)  
     918:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     91a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     91c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     91e:	11 01                	adc    DWORD PTR [rcx],eax
     920:	12 07                	adc    al,BYTE PTR [rdi]
     922:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     929:	00 00                	add    BYTE PTR [rax],al
     92b:	21 10                	and    DWORD PTR [rax],edx
     92d:	00 0b                	add    BYTE PTR [rbx],cl
     92f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     932:	00 00                	add    BYTE PTR [rax],al
     934:	22 34 00             	and    dh,BYTE PTR [rax+rax*1]
     937:	03 0e                	add    ecx,DWORD PTR [rsi]
     939:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     93b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     93d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     93f:	49 13 02             	adc    rax,QWORD PTR [r10]
     942:	18 00                	sbb    BYTE PTR [rax],al
     944:	00 23                	add    BYTE PTR [rbx],ah
     946:	34 00                	xor    al,0x0
     948:	03 08                	add    ecx,DWORD PTR [rax]
     94a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     94c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     94e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     950:	49 13 02             	adc    rax,QWORD PTR [r10]
     953:	18 00                	sbb    BYTE PTR [rax],al
     955:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     958:	01 3f                	add    DWORD PTR [rdi],edi
     95a:	19 03                	sbb    DWORD PTR [rbx],eax
     95c:	0e                   	(bad)  
     95d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     95f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     961:	39 0b                	cmp    DWORD PTR [rbx],ecx
     963:	49 13 11             	adc    rdx,QWORD PTR [r9]
     966:	01 12                	add    DWORD PTR [rdx],edx
     968:	07                   	(bad)  
     969:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     970:	00 00                	add    BYTE PTR [rax],al
     972:	25 0b 01 11 01       	and    eax,0x111010b
     977:	12 07                	adc    al,BYTE PTR [rdi]
     979:	00 00                	add    BYTE PTR [rax],al
     97b:	26 2e 01 47 13       	es add DWORD PTR cs:[rdi+0x13],eax
     980:	11 01                	adc    DWORD PTR [rcx],eax
     982:	12 07                	adc    al,BYTE PTR [rdi]
     984:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     98b:	27                   	(bad)  
     98c:	05 00 03 08 3a       	add    eax,0x3a080300
     991:	0b 3b                	or     edi,DWORD PTR [rbx]
     993:	0b 39                	or     edi,DWORD PTR [rcx]
     995:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     998:	02 18                	add    bl,BYTE PTR [rax]
     99a:	00 00                	add    BYTE PTR [rax],al
     99c:	00 01                	add    BYTE PTR [rcx],al
     99e:	11 01                	adc    DWORD PTR [rcx],eax
     9a0:	25 0e 13 0b 03       	and    eax,0x30b130e
     9a5:	0e                   	(bad)  
     9a6:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     9a8:	11 01                	adc    DWORD PTR [rcx],eax
     9aa:	12 07                	adc    al,BYTE PTR [rdi]
     9ac:	10 17                	adc    BYTE PTR [rdi],dl
     9ae:	00 00                	add    BYTE PTR [rax],al
     9b0:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     9b3:	0b 0b                	or     ecx,DWORD PTR [rbx]
     9b5:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     9b8:	0e                   	(bad)  
     9b9:	00 00                	add    BYTE PTR [rax],al
     9bb:	03 3b                	add    edi,DWORD PTR [rbx]
     9bd:	00 03                	add    BYTE PTR [rbx],al
     9bf:	0e                   	(bad)  
     9c0:	00 00                	add    BYTE PTR [rax],al
     9c2:	04 16                	add    al,0x16
     9c4:	00 03                	add    BYTE PTR [rbx],al
     9c6:	0e                   	(bad)  
     9c7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9c9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9cb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     9cd:	49 13 00             	adc    rax,QWORD PTR [r8]
     9d0:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b09fa <__kernel_end+0xae9e9fa>
     9d6:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     9d9:	08 00                	or     BYTE PTR [rax],al
     9db:	00 06                	add    BYTE PTR [rsi],al
     9dd:	39 01                	cmp    DWORD PTR [rcx],eax
     9df:	03 08                	add    ecx,DWORD PTR [rax]
     9e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9e3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9e5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     9e7:	01 13                	add    DWORD PTR [rbx],edx
     9e9:	00 00                	add    BYTE PTR [rax],al
     9eb:	07                   	(bad)  
     9ec:	39 00                	cmp    DWORD PTR [rax],eax
     9ee:	03 0e                	add    ecx,DWORD PTR [rsi]
     9f0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9f2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     9f4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     9f6:	00 00                	add    BYTE PTR [rax],al
     9f8:	08 39                	or     BYTE PTR [rcx],bh
     9fa:	01 03                	add    DWORD PTR [rbx],eax
     9fc:	0e                   	(bad)  
     9fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a01:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a03:	01 13                	add    DWORD PTR [rbx],edx
     a05:	00 00                	add    BYTE PTR [rax],al
     a07:	09 13                	or     DWORD PTR [rbx],edx
     a09:	01 03                	add    DWORD PTR [rbx],eax
     a0b:	0e                   	(bad)  
     a0c:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a0e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a10:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a12:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a14:	01 13                	add    DWORD PTR [rbx],edx
     a16:	00 00                	add    BYTE PTR [rax],al
     a18:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e0d1e <__kernel_end+0x39eced1e>
     a1e:	0b 3b                	or     edi,DWORD PTR [rbx]
     a20:	0b 39                	or     edi,DWORD PTR [rcx]
     a22:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     a25:	38 0b                	cmp    BYTE PTR [rbx],cl
     a27:	00 00                	add    BYTE PTR [rax],al
     a29:	0b 2e                	or     ebp,DWORD PTR [rsi]
     a2b:	01 3f                	add    DWORD PTR [rdi],edi
     a2d:	19 03                	sbb    DWORD PTR [rbx],eax
     a2f:	0e                   	(bad)  
     a30:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a32:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a34:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a36:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a37:	0e                   	(bad)  
     a38:	3c 19                	cmp    al,0x19
     a3a:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
     a3d:	13 00                	adc    eax,DWORD PTR [rax]
     a3f:	00 0c 05 00 49 13 34 	add    BYTE PTR [rax*1+0x34134900],cl
     a46:	19 00                	sbb    DWORD PTR [rax],eax
     a48:	00 0d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],cl        # 193f0b7c <__kernel_end+0x191deb7c>
     a4e:	03 0e                	add    ecx,DWORD PTR [rsi]
     a50:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a52:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a54:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a57:	0e                   	(bad)  
     a58:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a5c:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
     a5f:	00 0e                	add    BYTE PTR [rsi],cl
     a61:	05 00 49 13 00       	add    eax,0x134900
     a66:	00 0f                	add    BYTE PTR [rdi],cl
     a68:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     a6b:	19 03                	sbb    DWORD PTR [rbx],eax
     a6d:	0e                   	(bad)  
     a6e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a70:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a72:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a75:	0e                   	(bad)  
     a76:	3c 19                	cmp    al,0x19
     a78:	01 13                	add    DWORD PTR [rbx],edx
     a7a:	00 00                	add    BYTE PTR [rax],al
     a7c:	10 2e                	adc    BYTE PTR [rsi],ch
     a7e:	01 3f                	add    DWORD PTR [rdi],edi
     a80:	19 03                	sbb    DWORD PTR [rbx],eax
     a82:	0e                   	(bad)  
     a83:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a85:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a87:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a8a:	0e                   	(bad)  
     a8b:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a8f:	01 13                	add    DWORD PTR [rbx],edx
     a91:	00 00                	add    BYTE PTR [rax],al
     a93:	11 2e                	adc    DWORD PTR [rsi],ebp
     a95:	01 3f                	add    DWORD PTR [rdi],edi
     a97:	19 03                	sbb    DWORD PTR [rbx],eax
     a99:	0e                   	(bad)  
     a9a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a9c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a9e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     aa0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aa1:	0e                   	(bad)  
     aa2:	3c 19                	cmp    al,0x19
     aa4:	00 00                	add    BYTE PTR [rax],al
     aa6:	12 39                	adc    bh,BYTE PTR [rcx]
     aa8:	00 03                	add    BYTE PTR [rbx],al
     aaa:	08 3a                	or     BYTE PTR [rdx],bh
     aac:	0b 3b                	or     edi,DWORD PTR [rbx]
     aae:	0b 39                	or     edi,DWORD PTR [rcx]
     ab0:	0b 00                	or     eax,DWORD PTR [rax]
     ab2:	00 13                	add    BYTE PTR [rbx],dl
     ab4:	0f 00 0b             	str    WORD PTR [rbx]
     ab7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	14 26                	adc    al,0x26
     abe:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     ac1:	00 00                	add    BYTE PTR [rax],al
     ac3:	15 34 00 03 0e       	adc    eax,0xe030034
     ac8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     aca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     acc:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ace:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     ad1:	19 02                	sbb    DWORD PTR [rdx],eax
     ad3:	18 00                	sbb    BYTE PTR [rax],al
     ad5:	00 16                	add    BYTE PTR [rsi],dl
     ad7:	0f 00 0b             	str    WORD PTR [rbx]
     ada:	0b 00                	or     eax,DWORD PTR [rax]
     adc:	00 17                	add    BYTE PTR [rdi],dl
     ade:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     ae2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ae4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ae6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ae8:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
     aeb:	01 12                	add    DWORD PTR [rdx],edx
     aed:	07                   	(bad)  
     aee:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     af5:	00 00                	add    BYTE PTR [rax],al
     af7:	18 05 00 03 0e 49    	sbb    BYTE PTR [rip+0x490e0300],al        # 490e0dfd <__kernel_end+0x48ecedfd>
     afd:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
     b00:	02 18                	add    bl,BYTE PTR [rax]
     b02:	00 00                	add    BYTE PTR [rax],al
     b04:	19 2e                	sbb    DWORD PTR [rsi],ebp
     b06:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
     b09:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b0b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b0d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b0f:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
     b12:	01 12                	add    DWORD PTR [rdx],edx
     b14:	07                   	(bad)  
     b15:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     b1c:	00 00                	add    BYTE PTR [rax],al
     b1e:	1a 05 00 03 0e 3a    	sbb    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0e24 <__kernel_end+0x39ecee24>
     b24:	0b 3b                	or     edi,DWORD PTR [rbx]
     b26:	0b 39                	or     edi,DWORD PTR [rcx]
     b28:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b2b:	02 18                	add    bl,BYTE PTR [rax]
     b2d:	00 00                	add    BYTE PTR [rax],al
     b2f:	1b 34 00             	sbb    esi,DWORD PTR [rax+rax*1]
     b32:	03 0e                	add    ecx,DWORD PTR [rsi]
     b34:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b36:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b38:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b3a:	49 13 02             	adc    rax,QWORD PTR [r10]
     b3d:	18 00                	sbb    BYTE PTR [rax],al
     b3f:	00 1c 2e             	add    BYTE PTR [rsi+rbp*1],bl
     b42:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
     b45:	11 01                	adc    DWORD PTR [rcx],eax
     b47:	12 07                	adc    al,BYTE PTR [rdi]
     b49:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     b50:	00 00                	add    BYTE PTR [rax],al
     b52:	1d 2e 01 47 13       	sbb    eax,0x1347012e
     b57:	49 13 11             	adc    rdx,QWORD PTR [r9]
     b5a:	01 12                	add    DWORD PTR [rdx],edx
     b5c:	07                   	(bad)  
     b5d:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     b64:	00 00                	add    BYTE PTR [rax],al
     b66:	1e                   	(bad)  
     b67:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     b6b:	11 01                	adc    DWORD PTR [rcx],eax
     b6d:	12 07                	adc    al,BYTE PTR [rdi]
     b6f:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     b76:	00 01                	add    BYTE PTR [rcx],al
     b78:	11 01                	adc    DWORD PTR [rcx],eax
     b7a:	25 0e 13 0b 03       	and    eax,0x30b130e
     b7f:	0e                   	(bad)  
     b80:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     b82:	11 01                	adc    DWORD PTR [rcx],eax
     b84:	12 07                	adc    al,BYTE PTR [rdi]
     b86:	10 17                	adc    BYTE PTR [rdi],dl
     b88:	00 00                	add    BYTE PTR [rax],al
     b8a:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     b8d:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b8f:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     b92:	0e                   	(bad)  
     b93:	00 00                	add    BYTE PTR [rax],al
     b95:	03 3b                	add    edi,DWORD PTR [rbx]
     b97:	00 03                	add    BYTE PTR [rbx],al
     b99:	0e                   	(bad)  
     b9a:	00 00                	add    BYTE PTR [rax],al
     b9c:	04 16                	add    al,0x16
     b9e:	00 03                	add    BYTE PTR [rbx],al
     ba0:	0e                   	(bad)  
     ba1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ba3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ba5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ba7:	49 13 00             	adc    rax,QWORD PTR [r8]
     baa:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b0bd4 <__kernel_end+0xae9ebd4>
     bb0:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     bb3:	08 00                	or     BYTE PTR [rax],al
     bb5:	00 06                	add    BYTE PTR [rsi],al
     bb7:	39 01                	cmp    DWORD PTR [rcx],eax
     bb9:	03 08                	add    ecx,DWORD PTR [rax]
     bbb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bbd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bbf:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bc1:	01 13                	add    DWORD PTR [rbx],edx
     bc3:	00 00                	add    BYTE PTR [rax],al
     bc5:	07                   	(bad)  
     bc6:	39 00                	cmp    DWORD PTR [rax],eax
     bc8:	03 0e                	add    ecx,DWORD PTR [rsi]
     bca:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bcc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bce:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bd0:	00 00                	add    BYTE PTR [rax],al
     bd2:	08 39                	or     BYTE PTR [rcx],bh
     bd4:	01 03                	add    DWORD PTR [rbx],eax
     bd6:	0e                   	(bad)  
     bd7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bd9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bdb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bdd:	00 00                	add    BYTE PTR [rax],al
     bdf:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
     be2:	03 0e                	add    ecx,DWORD PTR [rsi]
     be4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     be6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     be8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bea:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     bed:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     bf0:	00 00                	add    BYTE PTR [rax],al
     bf2:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     bf5:	03 0e                	add    ecx,DWORD PTR [rsi]
     bf7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bf9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bfb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bfd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bfe:	0e                   	(bad)  
     bff:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     c02:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     c05:	00 00                	add    BYTE PTR [rax],al
     c07:	0b 26                	or     esp,DWORD PTR [rsi]
     c09:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     c0c:	00 00                	add    BYTE PTR [rax],al
     c0e:	0c 13                	or     al,0x13
     c10:	01 03                	add    DWORD PTR [rbx],eax
     c12:	0e                   	(bad)  
     c13:	0b 0b                	or     ecx,DWORD PTR [rbx]
     c15:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c17:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c19:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c1b:	01 13                	add    DWORD PTR [rbx],edx
     c1d:	00 00                	add    BYTE PTR [rax],al
     c1f:	0d 0d 00 03 0e       	or     eax,0xe03000d
     c24:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c26:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c28:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c2a:	49 13 38             	adc    rdi,QWORD PTR [r8]
     c2d:	0b 00                	or     eax,DWORD PTR [rax]
     c2f:	00 0e                	add    BYTE PTR [rsi],cl
     c31:	39 01                	cmp    DWORD PTR [rcx],eax
     c33:	03 0e                	add    ecx,DWORD PTR [rsi]
     c35:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c37:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c39:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c3b:	01 13                	add    DWORD PTR [rbx],edx
     c3d:	00 00                	add    BYTE PTR [rax],al
     c3f:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     c42:	3f                   	(bad)  
     c43:	19 03                	sbb    DWORD PTR [rbx],eax
     c45:	0e                   	(bad)  
     c46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c4c:	3c 19                	cmp    al,0x19
     c4e:	01 13                	add    DWORD PTR [rbx],edx
     c50:	00 00                	add    BYTE PTR [rax],al
     c52:	10 05 00 49 13 00    	adc    BYTE PTR [rip+0x134900],al        # 135558 <stivale_hdr-0xcaaa8>
     c58:	00 11                	add    BYTE PTR [rcx],dl
     c5a:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     c5d:	19 03                	sbb    DWORD PTR [rbx],eax
     c5f:	0e                   	(bad)  
     c60:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c62:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c64:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c66:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c6a:	01 13                	add    DWORD PTR [rbx],edx
     c6c:	00 00                	add    BYTE PTR [rax],al
     c6e:	12 2e                	adc    ch,BYTE PTR [rsi]
     c70:	00 3f                	add    BYTE PTR [rdi],bh
     c72:	19 03                	sbb    DWORD PTR [rbx],eax
     c74:	0e                   	(bad)  
     c75:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c77:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c79:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c7b:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c7f:	00 00                	add    BYTE PTR [rax],al
     c81:	13 2e                	adc    ebp,DWORD PTR [rsi]
     c83:	01 3f                	add    DWORD PTR [rdi],edi
     c85:	19 03                	sbb    DWORD PTR [rbx],eax
     c87:	0e                   	(bad)  
     c88:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c8a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c8c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c8f:	0e                   	(bad)  
     c90:	3c 19                	cmp    al,0x19
     c92:	01 13                	add    DWORD PTR [rbx],edx
     c94:	00 00                	add    BYTE PTR [rax],al
     c96:	14 2e                	adc    al,0x2e
     c98:	01 3f                	add    DWORD PTR [rdi],edi
     c9a:	19 03                	sbb    DWORD PTR [rbx],eax
     c9c:	0e                   	(bad)  
     c9d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c9f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ca1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ca3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ca4:	0e                   	(bad)  
     ca5:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ca9:	00 00                	add    BYTE PTR [rax],al
     cab:	15 02 01 03 0e       	adc    eax,0xe030102
     cb0:	0b 0b                	or     ecx,DWORD PTR [rbx]
     cb2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cb4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cb6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     cb8:	00 00                	add    BYTE PTR [rax],al
     cba:	16                   	(bad)  
     cbb:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     cc0:	0b 3b                	or     edi,DWORD PTR [rbx]
     cc2:	0b 39                	or     edi,DWORD PTR [rcx]
     cc4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     cc7:	38 0b                	cmp    BYTE PTR [rbx],cl
     cc9:	32 0b                	xor    cl,BYTE PTR [rbx]
     ccb:	00 00                	add    BYTE PTR [rax],al
     ccd:	17                   	(bad)  
     cce:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     cd1:	19 03                	sbb    DWORD PTR [rbx],eax
     cd3:	0e                   	(bad)  
     cd4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cd6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cd8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     cda:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cdb:	0e                   	(bad)  
     cdc:	49 13 32             	adc    rsi,QWORD PTR [r10]
     cdf:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
     ce2:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
     ce5:	13 00                	adc    eax,DWORD PTR [rax]
     ce7:	00 18                	add    BYTE PTR [rax],bl
     ce9:	05 00 49 13 34       	add    eax,0x34134900
     cee:	19 00                	sbb    DWORD PTR [rax],eax
     cf0:	00 19                	add    BYTE PTR [rcx],bl
     cf2:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     cf5:	19 03                	sbb    DWORD PTR [rbx],eax
     cf7:	08 3a                	or     BYTE PTR [rdx],bh
     cf9:	0b 3b                	or     edi,DWORD PTR [rbx]
     cfb:	0b 39                	or     edi,DWORD PTR [rcx]
     cfd:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     d00:	49 13 32             	adc    rsi,QWORD PTR [r10]
     d03:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
     d06:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
     d09:	13 00                	adc    eax,DWORD PTR [rax]
     d0b:	00 1a                	add    BYTE PTR [rdx],bl
     d0d:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     d10:	19 03                	sbb    DWORD PTR [rbx],eax
     d12:	08 3a                	or     BYTE PTR [rdx],bh
     d14:	0b 3b                	or     edi,DWORD PTR [rbx]
     d16:	0b 39                	or     edi,DWORD PTR [rcx]
     d18:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     d1b:	32 0b                	xor    cl,BYTE PTR [rbx]
     d1d:	3c 19                	cmp    al,0x19
     d1f:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
     d22:	00 1b                	add    BYTE PTR [rbx],bl
     d24:	0f 00 0b             	str    WORD PTR [rbx]
     d27:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d2a:	00 00                	add    BYTE PTR [rax],al
     d2c:	1c 34                	sbb    al,0x34
     d2e:	00 47 13             	add    BYTE PTR [rdi+0x13],al
     d31:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d33:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d35:	39 0b                	cmp    DWORD PTR [rbx],ecx
     d37:	02 18                	add    bl,BYTE PTR [rax]
     d39:	00 00                	add    BYTE PTR [rax],al
     d3b:	1d 34 00 03 0e       	sbb    eax,0xe030034
     d40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d44:	39 0b                	cmp    DWORD PTR [rbx],ecx
     d46:	49 13 3f             	adc    rdi,QWORD PTR [r15]
     d49:	19 02                	sbb    DWORD PTR [rdx],eax
     d4b:	18 00                	sbb    BYTE PTR [rax],al
     d4d:	00 1e                	add    BYTE PTR [rsi],bl
     d4f:	0f 00 0b             	str    WORD PTR [rbx]
     d52:	0b 00                	or     eax,DWORD PTR [rax]
     d54:	00 1f                	add    BYTE PTR [rdi],bl
     d56:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     d5a:	11 01                	adc    DWORD PTR [rcx],eax
     d5c:	12 07                	adc    al,BYTE PTR [rdi]
     d5e:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     d65:	00 00                	add    BYTE PTR [rax],al
     d67:	20 05 00 03 0e 3a    	and    BYTE PTR [rip+0x3a0e0300],al        # 3a0e106d <__kernel_end+0x39ecf06d>
     d6d:	0b 3b                	or     edi,DWORD PTR [rbx]
     d6f:	0b 39                	or     edi,DWORD PTR [rcx]
     d71:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d74:	02 18                	add    bl,BYTE PTR [rax]
     d76:	00 00                	add    BYTE PTR [rax],al
     d78:	21 0b                	and    DWORD PTR [rbx],ecx
     d7a:	01 11                	add    DWORD PTR [rcx],edx
     d7c:	01 12                	add    DWORD PTR [rdx],edx
     d7e:	07                   	(bad)  
     d7f:	00 00                	add    BYTE PTR [rax],al
     d81:	22 34 00             	and    dh,BYTE PTR [rax+rax*1]
     d84:	03 08                	add    ecx,DWORD PTR [rax]
     d86:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d88:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d8a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     d8c:	49 13 02             	adc    rax,QWORD PTR [r10]
     d8f:	18 00                	sbb    BYTE PTR [rax],al
     d91:	00 23                	add    BYTE PTR [rbx],ah
     d93:	34 00                	xor    al,0x0
     d95:	03 0e                	add    ecx,DWORD PTR [rsi]
     d97:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d99:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d9b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     d9d:	49 13 02             	adc    rax,QWORD PTR [r10]
     da0:	18 00                	sbb    BYTE PTR [rax],al
     da2:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     da5:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
     da8:	49 13 11             	adc    rdx,QWORD PTR [r9]
     dab:	01 12                	add    DWORD PTR [rdx],edx
     dad:	07                   	(bad)  
     dae:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     db5:	00 00                	add    BYTE PTR [rax],al
     db7:	25 2e 01 3f 19       	and    eax,0x193f012e
     dbc:	03 0e                	add    ecx,DWORD PTR [rsi]
     dbe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     dc0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     dc2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     dc4:	11 01                	adc    DWORD PTR [rcx],eax
     dc6:	12 07                	adc    al,BYTE PTR [rdi]
     dc8:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     dcf:	00 00                	add    BYTE PTR [rax],al
     dd1:	26 2e 01 3f          	es add DWORD PTR cs:[rdi],edi
     dd5:	19 03                	sbb    DWORD PTR [rbx],eax
     dd7:	0e                   	(bad)  
     dd8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     dda:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ddc:	39 0b                	cmp    DWORD PTR [rbx],ecx
     dde:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ddf:	0e                   	(bad)  
     de0:	11 01                	adc    DWORD PTR [rcx],eax
     de2:	12 07                	adc    al,BYTE PTR [rdi]
     de4:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
     deb:	00 00                	add    BYTE PTR [rax],al
     ded:	27                   	(bad)  
     dee:	0b 01                	or     eax,DWORD PTR [rcx]
     df0:	11 01                	adc    DWORD PTR [rcx],eax
     df2:	12 07                	adc    al,BYTE PTR [rdi]
     df4:	01 13                	add    DWORD PTR [rbx],edx
     df6:	00 00                	add    BYTE PTR [rax],al
     df8:	28 2e                	sub    BYTE PTR [rsi],ch
     dfa:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
     dfd:	11 01                	adc    DWORD PTR [rcx],eax
     dff:	12 07                	adc    al,BYTE PTR [rdi]
     e01:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     e08:	00 00                	add    BYTE PTR [rax],al
     e0a:	29 2e                	sub    DWORD PTR [rsi],ebp
     e0c:	01 3f                	add    DWORD PTR [rdi],edi
     e0e:	19 03                	sbb    DWORD PTR [rbx],eax
     e10:	0e                   	(bad)  
     e11:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e13:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e15:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e17:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e18:	0e                   	(bad)  
     e19:	11 01                	adc    DWORD PTR [rcx],eax
     e1b:	12 07                	adc    al,BYTE PTR [rdi]
     e1d:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     e24:	00 00                	add    BYTE PTR [rax],al
     e26:	2a 2e                	sub    ch,BYTE PTR [rsi]
     e28:	01 3f                	add    DWORD PTR [rdi],edi
     e2a:	19 03                	sbb    DWORD PTR [rbx],eax
     e2c:	0e                   	(bad)  
     e2d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e2f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e31:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e34:	0e                   	(bad)  
     e35:	49 13 11             	adc    rdx,QWORD PTR [r9]
     e38:	01 12                	add    DWORD PTR [rdx],edx
     e3a:	07                   	(bad)  
     e3b:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     e42:	00 00                	add    BYTE PTR [rax],al
     e44:	00 01                	add    BYTE PTR [rcx],al
     e46:	11 01                	adc    DWORD PTR [rcx],eax
     e48:	25 0e 13 0b 03       	and    eax,0x30b130e
     e4d:	0e                   	(bad)  
     e4e:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     e50:	11 01                	adc    DWORD PTR [rcx],eax
     e52:	12 07                	adc    al,BYTE PTR [rdi]
     e54:	10 17                	adc    BYTE PTR [rdi],dl
     e56:	00 00                	add    BYTE PTR [rax],al
     e58:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     e5b:	0b 0b                	or     ecx,DWORD PTR [rbx]
     e5d:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     e60:	0e                   	(bad)  
     e61:	00 00                	add    BYTE PTR [rax],al
     e63:	03 3b                	add    edi,DWORD PTR [rbx]
     e65:	00 03                	add    BYTE PTR [rbx],al
     e67:	0e                   	(bad)  
     e68:	00 00                	add    BYTE PTR [rax],al
     e6a:	04 16                	add    al,0x16
     e6c:	00 03                	add    BYTE PTR [rbx],al
     e6e:	0e                   	(bad)  
     e6f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e71:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e73:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e75:	49 13 00             	adc    rax,QWORD PTR [r8]
     e78:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b0ea2 <__kernel_end+0xae9eea2>
     e7e:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     e81:	08 00                	or     BYTE PTR [rax],al
     e83:	00 06                	add    BYTE PTR [rsi],al
     e85:	39 01                	cmp    DWORD PTR [rcx],eax
     e87:	03 0e                	add    ecx,DWORD PTR [rsi]
     e89:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e8b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e8d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e8f:	01 13                	add    DWORD PTR [rbx],edx
     e91:	00 00                	add    BYTE PTR [rax],al
     e93:	07                   	(bad)  
     e94:	39 01                	cmp    DWORD PTR [rcx],eax
     e96:	03 0e                	add    ecx,DWORD PTR [rsi]
     e98:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e9a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e9c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e9e:	00 00                	add    BYTE PTR [rax],al
     ea0:	08 2e                	or     BYTE PTR [rsi],ch
     ea2:	01 3f                	add    DWORD PTR [rdi],edi
     ea4:	19 03                	sbb    DWORD PTR [rbx],eax
     ea6:	0e                   	(bad)  
     ea7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ea9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     eab:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ead:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     eae:	0e                   	(bad)  
     eaf:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     eb3:	01 13                	add    DWORD PTR [rbx],edx
     eb5:	00 00                	add    BYTE PTR [rax],al
     eb7:	09 05 00 49 13 00    	or     DWORD PTR [rip+0x134900],eax        # 1357bd <stivale_hdr-0xca843>
     ebd:	00 0a                	add    BYTE PTR [rdx],cl
     ebf:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
     ec2:	19 03                	sbb    DWORD PTR [rbx],eax
     ec4:	0e                   	(bad)  
     ec5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ec7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ec9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ecb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ecc:	0e                   	(bad)  
     ecd:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ed1:	00 00                	add    BYTE PTR [rax],al
     ed3:	0b 0f                	or     ecx,DWORD PTR [rdi]
     ed5:	00 0b                	add    BYTE PTR [rbx],cl
     ed7:	0b 00                	or     eax,DWORD PTR [rax]
     ed9:	00 0c 37             	add    BYTE PTR [rdi+rsi*1],cl
     edc:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     edf:	00 00                	add    BYTE PTR [rax],al
     ee1:	0d 2e 01 47 13       	or     eax,0x1347012e
     ee6:	49 13 11             	adc    rdx,QWORD PTR [r9]
     ee9:	01 12                	add    DWORD PTR [rdx],edx
     eeb:	07                   	(bad)  
     eec:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
     ef3:	00 00                	add    BYTE PTR [rax],al
     ef5:	0e                   	(bad)  
     ef6:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     efb:	0b 3b                	or     edi,DWORD PTR [rbx]
     efd:	0b 39                	or     edi,DWORD PTR [rcx]
     eff:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f02:	02 18                	add    bl,BYTE PTR [rax]
     f04:	00 00                	add    BYTE PTR [rax],al
     f06:	0f 34                	sysenter 
     f08:	00 03                	add    BYTE PTR [rbx],al
     f0a:	08 3a                	or     BYTE PTR [rdx],bh
     f0c:	0b 3b                	or     edi,DWORD PTR [rbx]
     f0e:	0b 39                	or     edi,DWORD PTR [rcx]
     f10:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f13:	02 18                	add    bl,BYTE PTR [rax]
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	10 0b                	adc    BYTE PTR [rbx],cl
     f19:	01 11                	add    DWORD PTR [rcx],edx
     f1b:	01 12                	add    DWORD PTR [rdx],edx
     f1d:	07                   	(bad)  
     f1e:	00 00                	add    BYTE PTR [rax],al
     f20:	11 0f                	adc    DWORD PTR [rdi],ecx
     f22:	00 0b                	add    BYTE PTR [rbx],cl
     f24:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f27:	00 00                	add    BYTE PTR [rax],al
     f29:	12 26                	adc    ah,BYTE PTR [rsi]
     f2b:	00 00                	add    BYTE PTR [rax],al
     f2d:	00 13                	add    BYTE PTR [rbx],dl
     f2f:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
     f33:	49 13 11             	adc    rdx,QWORD PTR [r9]
     f36:	01 12                	add    DWORD PTR [rdx],edx
     f38:	07                   	(bad)  
     f39:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
     f40:	14 05                	adc    al,0x5
     f42:	00 03                	add    BYTE PTR [rbx],al
     f44:	08 3a                	or     BYTE PTR [rdx],bh
     f46:	0b 3b                	or     edi,DWORD PTR [rbx]
     f48:	0b 39                	or     edi,DWORD PTR [rcx]
     f4a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f4d:	02 18                	add    bl,BYTE PTR [rax]
     f4f:	00 00                	add    BYTE PTR [rax],al
     f51:	00 01                	add    BYTE PTR [rcx],al
     f53:	11 01                	adc    DWORD PTR [rcx],eax
     f55:	25 0e 13 0b 03       	and    eax,0x30b130e
     f5a:	0e                   	(bad)  
     f5b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
     f5d:	11 01                	adc    DWORD PTR [rcx],eax
     f5f:	12 07                	adc    al,BYTE PTR [rdi]
     f61:	10 17                	adc    BYTE PTR [rdi],dl
     f63:	00 00                	add    BYTE PTR [rax],al
     f65:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
     f68:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f6a:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     f6d:	0e                   	(bad)  
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	03 3b                	add    edi,DWORD PTR [rbx]
     f72:	00 03                	add    BYTE PTR [rbx],al
     f74:	0e                   	(bad)  
     f75:	00 00                	add    BYTE PTR [rax],al
     f77:	04 16                	add    al,0x16
     f79:	00 03                	add    BYTE PTR [rbx],al
     f7b:	0e                   	(bad)  
     f7c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f7e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f80:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f82:	49 13 00             	adc    rax,QWORD PTR [r8]
     f85:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b0faf <__kernel_end+0xae9efaf>
     f8b:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
     f8e:	08 00                	or     BYTE PTR [rax],al
     f90:	00 06                	add    BYTE PTR [rsi],al
     f92:	39 01                	cmp    DWORD PTR [rcx],eax
     f94:	03 08                	add    ecx,DWORD PTR [rax]
     f96:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f98:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f9a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f9c:	01 13                	add    DWORD PTR [rbx],edx
     f9e:	00 00                	add    BYTE PTR [rax],al
     fa0:	07                   	(bad)  
     fa1:	39 00                	cmp    DWORD PTR [rax],eax
     fa3:	03 0e                	add    ecx,DWORD PTR [rsi]
     fa5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fa7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fa9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	08 39                	or     BYTE PTR [rcx],bh
     faf:	01 03                	add    DWORD PTR [rbx],eax
     fb1:	0e                   	(bad)  
     fb2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fb4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fb6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fb8:	01 13                	add    DWORD PTR [rbx],edx
     fba:	00 00                	add    BYTE PTR [rax],al
     fbc:	09 39                	or     DWORD PTR [rcx],edi
     fbe:	00 03                	add    BYTE PTR [rbx],al
     fc0:	08 3a                	or     BYTE PTR [rdx],bh
     fc2:	0b 3b                	or     edi,DWORD PTR [rbx]
     fc4:	0b 39                	or     edi,DWORD PTR [rcx]
     fc6:	0b 00                	or     eax,DWORD PTR [rax]
     fc8:	00 0a                	add    BYTE PTR [rdx],cl
     fca:	39 01                	cmp    DWORD PTR [rcx],eax
     fcc:	03 0e                	add    ecx,DWORD PTR [rsi]
     fce:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fd0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fd2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fd4:	00 00                	add    BYTE PTR [rax],al
     fd6:	0b 04 01             	or     eax,DWORD PTR [rcx+rax*1]
     fd9:	03 0e                	add    ecx,DWORD PTR [rsi]
     fdb:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
     fde:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     fe1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fe3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fe5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fe7:	01 13                	add    DWORD PTR [rbx],edx
     fe9:	00 00                	add    BYTE PTR [rax],al
     feb:	0c 28                	or     al,0x28
     fed:	00 03                	add    BYTE PTR [rbx],al
     fef:	0e                   	(bad)  
     ff0:	1c 0b                	sbb    al,0xb
     ff2:	00 00                	add    BYTE PTR [rax],al
     ff4:	0d 28 00 03 08       	or     eax,0x8030028
     ff9:	1c 0b                	sbb    al,0xb
     ffb:	00 00                	add    BYTE PTR [rax],al
     ffd:	0e                   	(bad)  
     ffe:	13 01                	adc    eax,DWORD PTR [rcx]
    1000:	03 0e                	add    ecx,DWORD PTR [rsi]
    1002:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1004:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1006:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1008:	39 0b                	cmp    DWORD PTR [rbx],ecx
    100a:	01 13                	add    DWORD PTR [rbx],edx
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	0f 0d 00             	prefetch BYTE PTR [rax]
    1011:	03 0e                	add    ecx,DWORD PTR [rsi]
    1013:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1015:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1017:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1019:	49 13 38             	adc    rdi,QWORD PTR [r8]
    101c:	0b 00                	or     eax,DWORD PTR [rax]
    101e:	00 10                	add    BYTE PTR [rax],dl
    1020:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    1023:	19 03                	sbb    DWORD PTR [rbx],eax
    1025:	0e                   	(bad)  
    1026:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1028:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    102a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    102c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    102d:	0e                   	(bad)  
    102e:	3c 19                	cmp    al,0x19
    1030:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1033:	13 00                	adc    eax,DWORD PTR [rax]
    1035:	00 11                	add    BYTE PTR [rcx],dl
    1037:	05 00 49 13 34       	add    eax,0x34134900
    103c:	19 00                	sbb    DWORD PTR [rax],eax
    103e:	00 12                	add    BYTE PTR [rdx],dl
    1040:	05 00 49 13 00       	add    eax,0x134900
    1045:	00 13                	add    BYTE PTR [rbx],dl
    1047:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    104a:	19 03                	sbb    DWORD PTR [rbx],eax
    104c:	0e                   	(bad)  
    104d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    104f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1051:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1053:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1054:	0e                   	(bad)  
    1055:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1059:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    105c:	13 00                	adc    eax,DWORD PTR [rax]
    105e:	00 14 2e             	add    BYTE PTR [rsi+rbp*1],dl
    1061:	01 3f                	add    DWORD PTR [rdi],edi
    1063:	19 03                	sbb    DWORD PTR [rbx],eax
    1065:	0e                   	(bad)  
    1066:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1068:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    106a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    106c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    106d:	0e                   	(bad)  
    106e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1072:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
    1075:	00 15 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],dl        # e03118e <__kernel_end+0xde1f18e>
    107b:	0b 05 88 01 05 3a    	or     eax,DWORD PTR [rip+0x3a050188]        # 3a051209 <__kernel_end+0x39e3f209>
    1081:	0b 3b                	or     edi,DWORD PTR [rbx]
    1083:	0b 39                	or     edi,DWORD PTR [rcx]
    1085:	0b 01                	or     eax,DWORD PTR [rcx]
    1087:	13 00                	adc    eax,DWORD PTR [rax]
    1089:	00 16                	add    BYTE PTR [rsi],dl
    108b:	02 01                	add    al,BYTE PTR [rcx]
    108d:	03 0e                	add    ecx,DWORD PTR [rsi]
    108f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1091:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1093:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1095:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1097:	01 13                	add    DWORD PTR [rbx],edx
    1099:	00 00                	add    BYTE PTR [rax],al
    109b:	17                   	(bad)  
    109c:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    109f:	19 03                	sbb    DWORD PTR [rbx],eax
    10a1:	0e                   	(bad)  
    10a2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10a4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10a6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10a9:	0e                   	(bad)  
    10aa:	32 0b                	xor    cl,BYTE PTR [rbx]
    10ac:	3c 19                	cmp    al,0x19
    10ae:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    10b1:	13 00                	adc    eax,DWORD PTR [rax]
    10b3:	00 18                	add    BYTE PTR [rax],bl
    10b5:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    10ba:	0b 3b                	or     edi,DWORD PTR [rbx]
    10bc:	0b 39                	or     edi,DWORD PTR [rcx]
    10be:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    10c1:	38 0b                	cmp    BYTE PTR [rbx],cl
    10c3:	32 0b                	xor    cl,BYTE PTR [rbx]
    10c5:	00 00                	add    BYTE PTR [rax],al
    10c7:	19 0d 00 03 08 3a    	sbb    DWORD PTR [rip+0x3a080300],ecx        # 3a0813cd <__kernel_end+0x39e6f3cd>
    10cd:	0b 3b                	or     edi,DWORD PTR [rbx]
    10cf:	0b 39                	or     edi,DWORD PTR [rcx]
    10d1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    10d4:	38 0b                	cmp    BYTE PTR [rbx],cl
    10d6:	32 0b                	xor    cl,BYTE PTR [rbx]
    10d8:	00 00                	add    BYTE PTR [rax],al
    10da:	1a 34 00             	sbb    dh,BYTE PTR [rax+rax*1]
    10dd:	03 0e                	add    ecx,DWORD PTR [rsi]
    10df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10e3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10e6:	0e                   	(bad)  
    10e7:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    10ea:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    10ed:	00 00                	add    BYTE PTR [rax],al
    10ef:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    10f1:	01 3f                	add    DWORD PTR [rdi],edi
    10f3:	19 03                	sbb    DWORD PTR [rbx],eax
    10f5:	0e                   	(bad)  
    10f6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    10f8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10fa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    10fc:	3c 19                	cmp    al,0x19
    10fe:	01 13                	add    DWORD PTR [rbx],edx
    1100:	00 00                	add    BYTE PTR [rax],al
    1102:	1c 2e                	sbb    al,0x2e
    1104:	01 3f                	add    DWORD PTR [rdi],edi
    1106:	19 03                	sbb    DWORD PTR [rbx],eax
    1108:	0e                   	(bad)  
    1109:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    110b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    110d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    110f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1110:	0e                   	(bad)  
    1111:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1115:	01 13                	add    DWORD PTR [rbx],edx
    1117:	00 00                	add    BYTE PTR [rax],al
    1119:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
    111e:	03 0e                	add    ecx,DWORD PTR [rsi]
    1120:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1122:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1124:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1126:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1127:	0e                   	(bad)  
    1128:	3c 19                	cmp    al,0x19
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	1e                   	(bad)  
    112d:	0f 00 0b             	str    WORD PTR [rbx]
    1130:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1133:	00 00                	add    BYTE PTR [rax],al
    1135:	1f                   	(bad)  
    1136:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
    113a:	00 00                	add    BYTE PTR [rax],al
    113c:	20 01                	and    BYTE PTR [rcx],al
    113e:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    1141:	01 13                	add    DWORD PTR [rbx],edx
    1143:	00 00                	add    BYTE PTR [rax],al
    1145:	21 21                	and    DWORD PTR [rcx],esp
    1147:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    114a:	2f                   	(bad)  
    114b:	05 00 00 22 34       	add    eax,0x34220000
    1150:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1153:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1155:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1157:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1159:	02 18                	add    bl,BYTE PTR [rax]
    115b:	00 00                	add    BYTE PTR [rax],al
    115d:	23 2e                	and    ebp,DWORD PTR [rsi]
    115f:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1162:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1164:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1166:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1168:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
    116b:	01 12                	add    DWORD PTR [rdx],edx
    116d:	07                   	(bad)  
    116e:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1175:	00 00                	add    BYTE PTR [rax],al
    1177:	24 05                	and    al,0x5
    1179:	00 03                	add    BYTE PTR [rbx],al
    117b:	0e                   	(bad)  
    117c:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    1180:	02 18                	add    bl,BYTE PTR [rax]
    1182:	00 00                	add    BYTE PTR [rax],al
    1184:	25 05 00 03 0e       	and    eax,0xe030005
    1189:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    118b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    118d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    118f:	49 13 02             	adc    rax,QWORD PTR [r10]
    1192:	18 00                	sbb    BYTE PTR [rax],al
    1194:	00 26                	add    BYTE PTR [rsi],ah
    1196:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    119a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    119c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    119e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    11a0:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
    11a3:	01 12                	add    DWORD PTR [rdx],edx
    11a5:	07                   	(bad)  
    11a6:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	27                   	(bad)  
    11b0:	34 00                	xor    al,0x0
    11b2:	03 0e                	add    ecx,DWORD PTR [rsi]
    11b4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11b6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11b8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    11ba:	49 13 02             	adc    rax,QWORD PTR [r10]
    11bd:	18 00                	sbb    BYTE PTR [rax],al
    11bf:	00 28                	add    BYTE PTR [rax],ch
    11c1:	0f 00 0b             	str    WORD PTR [rbx]
    11c4:	0b 00                	or     eax,DWORD PTR [rax]
    11c6:	00 29                	add    BYTE PTR [rcx],ch
    11c8:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    11cc:	11 01                	adc    DWORD PTR [rcx],eax
    11ce:	12 07                	adc    al,BYTE PTR [rdi]
    11d0:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    11d7:	00 00                	add    BYTE PTR [rax],al
    11d9:	2a 34 00             	sub    dh,BYTE PTR [rax+rax*1]
    11dc:	03 08                	add    ecx,DWORD PTR [rax]
    11de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    11e2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    11e4:	49 13 02             	adc    rax,QWORD PTR [r10]
    11e7:	18 00                	sbb    BYTE PTR [rax],al
    11e9:	00 2b                	add    BYTE PTR [rbx],ch
    11eb:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    11ef:	49 13 11             	adc    rdx,QWORD PTR [r9]
    11f2:	01 12                	add    DWORD PTR [rdx],edx
    11f4:	07                   	(bad)  
    11f5:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    11fc:	00 00                	add    BYTE PTR [rax],al
    11fe:	2c 2e                	sub    al,0x2e
    1200:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1203:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1205:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1207:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1209:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    120c:	0b 01                	or     eax,DWORD PTR [rcx]
    120e:	13 00                	adc    eax,DWORD PTR [rax]
    1210:	00 2d 05 00 03 0e    	add    BYTE PTR [rip+0xe030005],ch        # e03121b <__kernel_end+0xde1f21b>
    1216:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    121a:	00 00                	add    BYTE PTR [rax],al
    121c:	2e 05 00 03 0e 3a    	cs add eax,0x3a0e0300
    1222:	0b 3b                	or     edi,DWORD PTR [rbx]
    1224:	0b 39                	or     edi,DWORD PTR [rcx]
    1226:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1229:	00 00                	add    BYTE PTR [rax],al
    122b:	2f                   	(bad)  
    122c:	2e 01 31             	add    DWORD PTR cs:[rcx],esi
    122f:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1232:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
    1235:	01 12                	add    DWORD PTR [rdx],edx
    1237:	07                   	(bad)  
    1238:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    123f:	30 05 00 31 13 02    	xor    BYTE PTR [rip+0x2133100],al        # 2134345 <__kernel_end+0x1f22345>
    1245:	18 00                	sbb    BYTE PTR [rax],al
    1247:	00 00                	add    BYTE PTR [rax],al
    1249:	01 11                	add    DWORD PTR [rcx],edx
    124b:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b255f <__kernel_end+0x2ea055f>
    1251:	0e                   	(bad)  
    1252:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1254:	11 01                	adc    DWORD PTR [rcx],eax
    1256:	12 07                	adc    al,BYTE PTR [rdi]
    1258:	10 17                	adc    BYTE PTR [rdi],dl
    125a:	00 00                	add    BYTE PTR [rax],al
    125c:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    125f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1261:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1264:	0e                   	(bad)  
    1265:	00 00                	add    BYTE PTR [rax],al
    1267:	03 3b                	add    edi,DWORD PTR [rbx]
    1269:	00 03                	add    BYTE PTR [rbx],al
    126b:	0e                   	(bad)  
    126c:	00 00                	add    BYTE PTR [rax],al
    126e:	04 16                	add    al,0x16
    1270:	00 03                	add    BYTE PTR [rbx],al
    1272:	0e                   	(bad)  
    1273:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1275:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1277:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1279:	49 13 00             	adc    rax,QWORD PTR [r8]
    127c:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b12a6 <__kernel_end+0xae9f2a6>
    1282:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1285:	08 00                	or     BYTE PTR [rax],al
    1287:	00 06                	add    BYTE PTR [rsi],al
    1289:	39 01                	cmp    DWORD PTR [rcx],eax
    128b:	03 08                	add    ecx,DWORD PTR [rax]
    128d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    128f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1291:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1293:	01 13                	add    DWORD PTR [rbx],edx
    1295:	00 00                	add    BYTE PTR [rax],al
    1297:	07                   	(bad)  
    1298:	34 00                	xor    al,0x0
    129a:	03 0e                	add    ecx,DWORD PTR [rsi]
    129c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    129e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12a0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a3:	0e                   	(bad)  
    12a4:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    12a7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    12aa:	00 00                	add    BYTE PTR [rax],al
    12ac:	08 2e                	or     BYTE PTR [rsi],ch
    12ae:	01 3f                	add    DWORD PTR [rdi],edi
    12b0:	19 03                	sbb    DWORD PTR [rbx],eax
    12b2:	0e                   	(bad)  
    12b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12b5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12b7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ba:	0e                   	(bad)  
    12bb:	3c 19                	cmp    al,0x19
    12bd:	01 13                	add    DWORD PTR [rbx],edx
    12bf:	00 00                	add    BYTE PTR [rax],al
    12c1:	09 05 00 49 13 00    	or     DWORD PTR [rip+0x134900],eax        # 135bc7 <stivale_hdr-0xca439>
    12c7:	00 0a                	add    BYTE PTR [rdx],cl
    12c9:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    12cc:	19 03                	sbb    DWORD PTR [rbx],eax
    12ce:	0e                   	(bad)  
    12cf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12d1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12d3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12d5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12d6:	0e                   	(bad)  
    12d7:	3c 19                	cmp    al,0x19
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	0b 2e                	or     ebp,DWORD PTR [rsi]
    12dd:	01 03                	add    DWORD PTR [rbx],eax
    12df:	0e                   	(bad)  
    12e0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12e2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12e4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12e6:	3c 19                	cmp    al,0x19
    12e8:	00 00                	add    BYTE PTR [rax],al
    12ea:	0c 39                	or     al,0x39
    12ec:	01 03                	add    DWORD PTR [rbx],eax
    12ee:	0e                   	(bad)  
    12ef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12f1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12f3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	0d 34 00 03 0e       	or     eax,0xe030034
    12fc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12fe:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1300:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1302:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1305:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1308:	00 00                	add    BYTE PTR [rax],al
    130a:	0e                   	(bad)  
    130b:	34 00                	xor    al,0x0
    130d:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    1310:	0b 3b                	or     edi,DWORD PTR [rbx]
    1312:	0b 39                	or     edi,DWORD PTR [rcx]
    1314:	0b 02                	or     eax,DWORD PTR [rdx]
    1316:	18 00                	sbb    BYTE PTR [rax],al
    1318:	00 0f                	add    BYTE PTR [rdi],cl
    131a:	34 00                	xor    al,0x0
    131c:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    131f:	0b 3b                	or     edi,DWORD PTR [rbx]
    1321:	0b 39                	or     edi,DWORD PTR [rcx]
    1323:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1326:	02 18                	add    bl,BYTE PTR [rax]
    1328:	00 00                	add    BYTE PTR [rax],al
    132a:	10 2e                	adc    BYTE PTR [rsi],ch
    132c:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    132f:	11 01                	adc    DWORD PTR [rcx],eax
    1331:	12 07                	adc    al,BYTE PTR [rdi]
    1333:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    133a:	00 00                	add    BYTE PTR [rax],al
    133c:	11 05 00 03 08 3a    	adc    DWORD PTR [rip+0x3a080300],eax        # 3a081642 <__kernel_end+0x39e6f642>
    1342:	0b 3b                	or     edi,DWORD PTR [rbx]
    1344:	0b 39                	or     edi,DWORD PTR [rcx]
    1346:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1349:	02 18                	add    bl,BYTE PTR [rax]
    134b:	00 00                	add    BYTE PTR [rax],al
    134d:	12 2e                	adc    ch,BYTE PTR [rsi]
    134f:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1352:	11 01                	adc    DWORD PTR [rcx],eax
    1354:	12 07                	adc    al,BYTE PTR [rdi]
    1356:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    135d:	13 2e                	adc    ebp,DWORD PTR [rsi]
    135f:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1362:	11 01                	adc    DWORD PTR [rcx],eax
    1364:	12 07                	adc    al,BYTE PTR [rdi]
    1366:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    136d:	14 05                	adc    al,0x5
    136f:	00 03                	add    BYTE PTR [rbx],al
    1371:	0e                   	(bad)  
    1372:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1374:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1376:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1378:	49 13 02             	adc    rax,QWORD PTR [r10]
    137b:	18 00                	sbb    BYTE PTR [rax],al
    137d:	00 00                	add    BYTE PTR [rax],al
    137f:	01 11                	add    DWORD PTR [rcx],edx
    1381:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2695 <__kernel_end+0x2ea0695>
    1387:	0e                   	(bad)  
    1388:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    138a:	11 01                	adc    DWORD PTR [rcx],eax
    138c:	12 07                	adc    al,BYTE PTR [rdi]
    138e:	10 17                	adc    BYTE PTR [rdi],dl
    1390:	00 00                	add    BYTE PTR [rax],al
    1392:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1395:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1397:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    139a:	0e                   	(bad)  
    139b:	00 00                	add    BYTE PTR [rax],al
    139d:	03 3b                	add    edi,DWORD PTR [rbx]
    139f:	00 03                	add    BYTE PTR [rbx],al
    13a1:	0e                   	(bad)  
    13a2:	00 00                	add    BYTE PTR [rax],al
    13a4:	04 16                	add    al,0x16
    13a6:	00 03                	add    BYTE PTR [rbx],al
    13a8:	0e                   	(bad)  
    13a9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13ab:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13ad:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13af:	49 13 00             	adc    rax,QWORD PTR [r8]
    13b2:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b13dc <__kernel_end+0xae9f3dc>
    13b8:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    13bb:	08 00                	or     BYTE PTR [rax],al
    13bd:	00 06                	add    BYTE PTR [rsi],al
    13bf:	39 01                	cmp    DWORD PTR [rcx],eax
    13c1:	03 08                	add    ecx,DWORD PTR [rax]
    13c3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13c5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13c7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13c9:	01 13                	add    DWORD PTR [rbx],edx
    13cb:	00 00                	add    BYTE PTR [rax],al
    13cd:	07                   	(bad)  
    13ce:	39 01                	cmp    DWORD PTR [rcx],eax
    13d0:	03 0e                	add    ecx,DWORD PTR [rsi]
    13d2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13d4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13d6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13d8:	01 13                	add    DWORD PTR [rbx],edx
    13da:	00 00                	add    BYTE PTR [rax],al
    13dc:	08 13                	or     BYTE PTR [rbx],dl
    13de:	01 03                	add    DWORD PTR [rbx],eax
    13e0:	0e                   	(bad)  
    13e1:	0b 0b                	or     ecx,DWORD PTR [rbx]
    13e3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    13e5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    13e7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    13e9:	00 00                	add    BYTE PTR [rax],al
    13eb:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e16f1 <__kernel_end+0x39ecf6f1>
    13f1:	0b 3b                	or     edi,DWORD PTR [rbx]
    13f3:	0b 39                	or     edi,DWORD PTR [rcx]
    13f5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13f8:	0b 0b                	or     ecx,DWORD PTR [rbx]
    13fa:	0d 0b 0c 0b 38       	or     eax,0x380b0c0b
    13ff:	0b 00                	or     eax,DWORD PTR [rax]
    1401:	00 0a                	add    BYTE PTR [rdx],cl
    1403:	39 00                	cmp    DWORD PTR [rax],eax
    1405:	03 08                	add    ecx,DWORD PTR [rax]
    1407:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1409:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    140b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    140d:	00 00                	add    BYTE PTR [rax],al
    140f:	0b 39                	or     edi,DWORD PTR [rcx]
    1411:	00 03                	add    BYTE PTR [rbx],al
    1413:	0e                   	(bad)  
    1414:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1416:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1418:	39 0b                	cmp    DWORD PTR [rbx],ecx
    141a:	00 00                	add    BYTE PTR [rax],al
    141c:	0c 13                	or     al,0x13
    141e:	01 03                	add    DWORD PTR [rbx],eax
    1420:	0e                   	(bad)  
    1421:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1423:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1425:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1427:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1429:	01 13                	add    DWORD PTR [rbx],edx
    142b:	00 00                	add    BYTE PTR [rax],al
    142d:	0d 0d 00 03 0e       	or     eax,0xe03000d
    1432:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1434:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1436:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1438:	49 13 38             	adc    rdi,QWORD PTR [r8]
    143b:	0b 00                	or     eax,DWORD PTR [rax]
    143d:	00 0e                	add    BYTE PTR [rsi],cl
    143f:	34 00                	xor    al,0x0
    1441:	03 0e                	add    ecx,DWORD PTR [rsi]
    1443:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1445:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1447:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1449:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    144a:	0e                   	(bad)  
    144b:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    144e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	0f 34                	sysenter 
    1455:	00 03                	add    BYTE PTR [rbx],al
    1457:	08 3a                	or     BYTE PTR [rdx],bh
    1459:	0b 3b                	or     edi,DWORD PTR [rbx]
    145b:	0b 39                	or     edi,DWORD PTR [rcx]
    145d:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    1460:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1463:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1466:	00 00                	add    BYTE PTR [rax],al
    1468:	10 0f                	adc    BYTE PTR [rdi],cl
    146a:	00 0b                	add    BYTE PTR [rbx],cl
    146c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    146f:	00 00                	add    BYTE PTR [rax],al
    1471:	11 04 01             	adc    DWORD PTR [rcx+rax*1],eax
    1474:	03 0e                	add    ecx,DWORD PTR [rsi]
    1476:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    1479:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    147c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    147e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1480:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1482:	01 13                	add    DWORD PTR [rbx],edx
    1484:	00 00                	add    BYTE PTR [rax],al
    1486:	12 28                	adc    ch,BYTE PTR [rax]
    1488:	00 03                	add    BYTE PTR [rbx],al
    148a:	0e                   	(bad)  
    148b:	1c 0b                	sbb    al,0xb
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	13 2e                	adc    ebp,DWORD PTR [rsi]
    1491:	01 3f                	add    DWORD PTR [rdi],edi
    1493:	19 03                	sbb    DWORD PTR [rbx],eax
    1495:	0e                   	(bad)  
    1496:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1498:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    149a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    149c:	49 13 11             	adc    rdx,QWORD PTR [r9]
    149f:	01 12                	add    DWORD PTR [rdx],edx
    14a1:	07                   	(bad)  
    14a2:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    14a9:	00 00                	add    BYTE PTR [rax],al
    14ab:	14 34                	adc    al,0x34
    14ad:	00 03                	add    BYTE PTR [rbx],al
    14af:	0e                   	(bad)  
    14b0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14b2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14b4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14b6:	49 13 02             	adc    rax,QWORD PTR [r10]
    14b9:	18 00                	sbb    BYTE PTR [rax],al
    14bb:	00 15 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],dl        # b0b14d0 <__kernel_end+0xae9f4d0>
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	16                   	(bad)  
    14c4:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    14c7:	19 03                	sbb    DWORD PTR [rbx],eax
    14c9:	0e                   	(bad)  
    14ca:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14cc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14ce:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14d0:	11 01                	adc    DWORD PTR [rcx],eax
    14d2:	12 07                	adc    al,BYTE PTR [rdi]
    14d4:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    14db:	00 00                	add    BYTE PTR [rax],al
    14dd:	17                   	(bad)  
    14de:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    14e3:	0b 3b                	or     edi,DWORD PTR [rbx]
    14e5:	0b 39                	or     edi,DWORD PTR [rcx]
    14e7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    14ea:	02 18                	add    bl,BYTE PTR [rax]
    14ec:	00 00                	add    BYTE PTR [rax],al
    14ee:	18 2e                	sbb    BYTE PTR [rsi],ch
    14f0:	01 3f                	add    DWORD PTR [rdi],edi
    14f2:	19 03                	sbb    DWORD PTR [rbx],eax
    14f4:	0e                   	(bad)  
    14f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14f7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14f9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14fb:	49 13 11             	adc    rdx,QWORD PTR [r9]
    14fe:	01 12                	add    DWORD PTR [rdx],edx
    1500:	07                   	(bad)  
    1501:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1508:	00 00                	add    BYTE PTR [rax],al
    150a:	19 15 01 01 13 00    	sbb    DWORD PTR [rip+0x130101],edx        # 131611 <stivale_hdr-0xce9ef>
    1510:	00 1a                	add    BYTE PTR [rdx],bl
    1512:	05 00 49 13 00       	add    eax,0x134900
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	01 11                	add    DWORD PTR [rcx],edx
    151b:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b282f <__kernel_end+0x2ea082f>
    1521:	0e                   	(bad)  
    1522:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1524:	55                   	push   rbp
    1525:	17                   	(bad)  
    1526:	11 01                	adc    DWORD PTR [rcx],eax
    1528:	10 17                	adc    BYTE PTR [rdi],dl
    152a:	00 00                	add    BYTE PTR [rax],al
    152c:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    152f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1531:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1534:	0e                   	(bad)  
    1535:	00 00                	add    BYTE PTR [rax],al
    1537:	03 04 01             	add    eax,DWORD PTR [rcx+rax*1]
    153a:	03 0e                	add    ecx,DWORD PTR [rsi]
    153c:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    153f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1542:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1544:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1546:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1548:	01 13                	add    DWORD PTR [rbx],edx
    154a:	00 00                	add    BYTE PTR [rax],al
    154c:	04 28                	add    al,0x28
    154e:	00 03                	add    BYTE PTR [rbx],al
    1550:	0e                   	(bad)  
    1551:	1c 0b                	sbb    al,0xb
    1553:	00 00                	add    BYTE PTR [rax],al
    1555:	05 28 00 03 08       	add    eax,0x8030028
    155a:	1c 0b                	sbb    al,0xb
    155c:	00 00                	add    BYTE PTR [rax],al
    155e:	06                   	(bad)  
    155f:	01 01                	add    DWORD PTR [rcx],eax
    1561:	49 13 01             	adc    rax,QWORD PTR [r9]
    1564:	13 00                	adc    eax,DWORD PTR [rax]
    1566:	00 07                	add    BYTE PTR [rdi],al
    1568:	21 00                	and    DWORD PTR [rax],eax
    156a:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    156d:	0b 00                	or     eax,DWORD PTR [rax]
    156f:	00 08                	add    BYTE PTR [rax],cl
    1571:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
    1575:	00 00                	add    BYTE PTR [rax],al
    1577:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    157a:	03 0e                	add    ecx,DWORD PTR [rsi]
    157c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    157e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1580:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1582:	49 13 02             	adc    rax,QWORD PTR [r10]
    1585:	18 00                	sbb    BYTE PTR [rax],al
    1587:	00 0a                	add    BYTE PTR [rdx],cl
    1589:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    158c:	19 03                	sbb    DWORD PTR [rbx],eax
    158e:	0e                   	(bad)  
    158f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1591:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1593:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1595:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1596:	0e                   	(bad)  
    1597:	49 13 11             	adc    rdx,QWORD PTR [r9]
    159a:	01 12                	add    DWORD PTR [rdx],edx
    159c:	07                   	(bad)  
    159d:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    15a4:	0b 05 00 03 08 3a    	or     eax,DWORD PTR [rip+0x3a080300]        # 3a0818aa <__kernel_end+0x39e6f8aa>
    15aa:	0b 3b                	or     edi,DWORD PTR [rbx]
    15ac:	0b 39                	or     edi,DWORD PTR [rcx]
    15ae:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15b1:	02 18                	add    bl,BYTE PTR [rax]
    15b3:	00 00                	add    BYTE PTR [rax],al
    15b5:	0c 05                	or     al,0x5
    15b7:	00 03                	add    BYTE PTR [rbx],al
    15b9:	0e                   	(bad)  
    15ba:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15bc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15be:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15c0:	49 13 02             	adc    rax,QWORD PTR [r10]
    15c3:	18 00                	sbb    BYTE PTR [rax],al
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	01 11                	add    DWORD PTR [rcx],edx
    15c9:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b28dd <__kernel_end+0x2ea08dd>
    15cf:	0e                   	(bad)  
    15d0:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    15d2:	55                   	push   rbp
    15d3:	17                   	(bad)  
    15d4:	11 01                	adc    DWORD PTR [rcx],eax
    15d6:	10 17                	adc    BYTE PTR [rdi],dl
    15d8:	00 00                	add    BYTE PTR [rax],al
    15da:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15dd:	03 0e                	add    ecx,DWORD PTR [rsi]
    15df:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    15e2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15e5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15e7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15e9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15eb:	01 13                	add    DWORD PTR [rbx],edx
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	03 28                	add    ebp,DWORD PTR [rax]
    15f1:	00 03                	add    BYTE PTR [rbx],al
    15f3:	0e                   	(bad)  
    15f4:	1c 0b                	sbb    al,0xb
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	04 28                	add    al,0x28
    15fa:	00 03                	add    BYTE PTR [rbx],al
    15fc:	0e                   	(bad)  
    15fd:	1c 05                	sbb    al,0x5
    15ff:	00 00                	add    BYTE PTR [rax],al
    1601:	05 28 00 03 0e       	add    eax,0xe030028
    1606:	1c 06                	sbb    al,0x6
    1608:	00 00                	add    BYTE PTR [rax],al
    160a:	06                   	(bad)  
    160b:	28 00                	sub    BYTE PTR [rax],al
    160d:	03 0e                	add    ecx,DWORD PTR [rsi]
    160f:	1c 0d                	sbb    al,0xd
    1611:	00 00                	add    BYTE PTR [rax],al
    1613:	07                   	(bad)  
    1614:	24 00                	and    al,0x0
    1616:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1618:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    161b:	08 00                	or     BYTE PTR [rax],al
    161d:	00 08                	add    BYTE PTR [rax],cl
    161f:	28 00                	sub    BYTE PTR [rax],al
    1621:	03 08                	add    ecx,DWORD PTR [rax]
    1623:	1c 0b                	sbb    al,0xb
    1625:	00 00                	add    BYTE PTR [rax],al
    1627:	09 24 00             	or     DWORD PTR [rax+rax*1],esp
    162a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    162c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    162f:	0e                   	(bad)  
    1630:	00 00                	add    BYTE PTR [rax],al
    1632:	0a 2e                	or     ch,BYTE PTR [rsi]
    1634:	01 3f                	add    DWORD PTR [rdi],edi
    1636:	19 03                	sbb    DWORD PTR [rbx],eax
    1638:	0e                   	(bad)  
    1639:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    163b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    163d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    163f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1640:	0e                   	(bad)  
    1641:	49 13 11             	adc    rdx,QWORD PTR [r9]
    1644:	01 12                	add    DWORD PTR [rdx],edx
    1646:	07                   	(bad)  
    1647:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    164e:	00 00                	add    BYTE PTR [rax],al
    1650:	0b 05 00 03 08 3a    	or     eax,DWORD PTR [rip+0x3a080300]        # 3a081956 <__kernel_end+0x39e6f956>
    1656:	0b 3b                	or     edi,DWORD PTR [rbx]
    1658:	0b 39                	or     edi,DWORD PTR [rcx]
    165a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    165d:	02 18                	add    bl,BYTE PTR [rax]
    165f:	00 00                	add    BYTE PTR [rax],al
    1661:	0c 05                	or     al,0x5
    1663:	00 03                	add    BYTE PTR [rbx],al
    1665:	0e                   	(bad)  
    1666:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1668:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    166a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    166c:	49 13 02             	adc    rax,QWORD PTR [r10]
    166f:	18 00                	sbb    BYTE PTR [rax],al
    1671:	00 0d 34 00 03 08    	add    BYTE PTR [rip+0x8030034],cl        # 80316ab <__kernel_end+0x7e1f6ab>
    1677:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1679:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    167b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    167d:	49 13 02             	adc    rax,QWORD PTR [r10]
    1680:	18 00                	sbb    BYTE PTR [rax],al
    1682:	00 00                	add    BYTE PTR [rax],al
    1684:	01 11                	add    DWORD PTR [rcx],edx
    1686:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b299a <__kernel_end+0x2ea099a>
    168c:	0e                   	(bad)  
    168d:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    168f:	55                   	push   rbp
    1690:	17                   	(bad)  
    1691:	11 01                	adc    DWORD PTR [rcx],eax
    1693:	10 17                	adc    BYTE PTR [rdi],dl
    1695:	00 00                	add    BYTE PTR [rax],al
    1697:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    169a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    169c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    169f:	0e                   	(bad)  
    16a0:	00 00                	add    BYTE PTR [rax],al
    16a2:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    16a5:	0b 0b                	or     ecx,DWORD PTR [rbx]
    16a7:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    16aa:	08 00                	or     BYTE PTR [rax],al
    16ac:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    16af:	00 03                	add    BYTE PTR [rbx],al
    16b1:	0e                   	(bad)  
    16b2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16b6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16b8:	49 13 00             	adc    rax,QWORD PTR [r8]
    16bb:	00 05 13 01 03 0e    	add    BYTE PTR [rip+0xe030113],al        # e0317d4 <__kernel_end+0xde1f7d4>
    16c1:	0b 0b                	or     ecx,DWORD PTR [rbx]
    16c3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16c5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16c7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16c9:	01 13                	add    DWORD PTR [rbx],edx
    16cb:	00 00                	add    BYTE PTR [rax],al
    16cd:	06                   	(bad)  
    16ce:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    16d3:	0b 3b                	or     edi,DWORD PTR [rbx]
    16d5:	0b 39                	or     edi,DWORD PTR [rcx]
    16d7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    16da:	0b 0b                	or     ecx,DWORD PTR [rbx]
    16dc:	0d 0b 0c 0b 38       	or     eax,0x380b0c0b
    16e1:	0b 00                	or     eax,DWORD PTR [rax]
    16e3:	00 07                	add    BYTE PTR [rdi],al
    16e5:	04 01                	add    al,0x1
    16e7:	03 0e                	add    ecx,DWORD PTR [rsi]
    16e9:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    16ec:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    16ef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    16f1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16f3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16f5:	01 13                	add    DWORD PTR [rbx],edx
    16f7:	00 00                	add    BYTE PTR [rax],al
    16f9:	08 28                	or     BYTE PTR [rax],ch
    16fb:	00 03                	add    BYTE PTR [rbx],al
    16fd:	0e                   	(bad)  
    16fe:	1c 0b                	sbb    al,0xb
    1700:	00 00                	add    BYTE PTR [rax],al
    1702:	09 28                	or     DWORD PTR [rax],ebp
    1704:	00 03                	add    BYTE PTR [rbx],al
    1706:	0e                   	(bad)  
    1707:	1c 05                	sbb    al,0x5
    1709:	00 00                	add    BYTE PTR [rax],al
    170b:	0a 28                	or     ch,BYTE PTR [rax]
    170d:	00 03                	add    BYTE PTR [rbx],al
    170f:	0e                   	(bad)  
    1710:	1c 06                	sbb    al,0x6
    1712:	00 00                	add    BYTE PTR [rax],al
    1714:	0b 28                	or     ebp,DWORD PTR [rax]
    1716:	00 03                	add    BYTE PTR [rbx],al
    1718:	0e                   	(bad)  
    1719:	1c 0d                	sbb    al,0xd
    171b:	00 00                	add    BYTE PTR [rax],al
    171d:	0c 28                	or     al,0x28
    171f:	00 03                	add    BYTE PTR [rbx],al
    1721:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
    1724:	00 00                	add    BYTE PTR [rax],al
    1726:	0d 01 01 49 13       	or     eax,0x13490101
    172b:	01 13                	add    DWORD PTR [rbx],edx
    172d:	00 00                	add    BYTE PTR [rax],al
    172f:	0e                   	(bad)  
    1730:	21 00                	and    DWORD PTR [rax],eax
    1732:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    1735:	0b 00                	or     eax,DWORD PTR [rax]
    1737:	00 0f                	add    BYTE PTR [rdi],cl
    1739:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
    173d:	00 00                	add    BYTE PTR [rax],al
    173f:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
    1742:	03 0e                	add    ecx,DWORD PTR [rsi]
    1744:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1746:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1748:	39 0b                	cmp    DWORD PTR [rbx],ecx
    174a:	49 13 02             	adc    rax,QWORD PTR [r10]
    174d:	18 00                	sbb    BYTE PTR [rax],al
    174f:	00 11                	add    BYTE PTR [rcx],dl
    1751:	34 00                	xor    al,0x0
    1753:	03 0e                	add    ecx,DWORD PTR [rsi]
    1755:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1757:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1759:	39 0b                	cmp    DWORD PTR [rbx],ecx
    175b:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    175e:	19 02                	sbb    DWORD PTR [rdx],eax
    1760:	18 00                	sbb    BYTE PTR [rax],al
    1762:	00 12                	add    BYTE PTR [rdx],dl
    1764:	0f 00 0b             	str    WORD PTR [rbx]
    1767:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    176a:	00 00                	add    BYTE PTR [rax],al
    176c:	13 2e                	adc    ebp,DWORD PTR [rsi]
    176e:	01 3f                	add    DWORD PTR [rdi],edi
    1770:	19 03                	sbb    DWORD PTR [rbx],eax
    1772:	0e                   	(bad)  
    1773:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1775:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1777:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1779:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    177a:	0e                   	(bad)  
    177b:	11 01                	adc    DWORD PTR [rcx],eax
    177d:	12 07                	adc    al,BYTE PTR [rdi]
    177f:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1786:	00 00                	add    BYTE PTR [rax],al
    1788:	14 05                	adc    al,0x5
    178a:	00 03                	add    BYTE PTR [rbx],al
    178c:	0e                   	(bad)  
    178d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    178f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1791:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1793:	49 13 02             	adc    rax,QWORD PTR [r10]
    1796:	18 00                	sbb    BYTE PTR [rax],al
    1798:	00 15 2e 00 3f 19    	add    BYTE PTR [rip+0x193f002e],dl        # 193f17cc <__kernel_end+0x191df7cc>
    179e:	03 0e                	add    ecx,DWORD PTR [rsi]
    17a0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17a2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    17a4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    17a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17a7:	0e                   	(bad)  
    17a8:	11 01                	adc    DWORD PTR [rcx],eax
    17aa:	12 07                	adc    al,BYTE PTR [rdi]
    17ac:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    17b3:	16                   	(bad)  
    17b4:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    17b7:	19 03                	sbb    DWORD PTR [rbx],eax
    17b9:	0e                   	(bad)  
    17ba:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17bc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    17be:	39 0b                	cmp    DWORD PTR [rbx],ecx
    17c0:	11 01                	adc    DWORD PTR [rcx],eax
    17c2:	12 07                	adc    al,BYTE PTR [rdi]
    17c4:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    17cb:	17                   	(bad)  
    17cc:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    17cf:	19 03                	sbb    DWORD PTR [rbx],eax
    17d1:	0e                   	(bad)  
    17d2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17d4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    17d6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    17d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17d9:	0e                   	(bad)  
    17da:	49 13 11             	adc    rdx,QWORD PTR [r9]
    17dd:	01 12                	add    DWORD PTR [rdx],edx
    17df:	07                   	(bad)  
    17e0:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    17e7:	00 00                	add    BYTE PTR [rax],al
    17e9:	18 0b                	sbb    BYTE PTR [rbx],cl
    17eb:	01 11                	add    DWORD PTR [rcx],edx
    17ed:	01 12                	add    DWORD PTR [rdx],edx
    17ef:	07                   	(bad)  
    17f0:	00 00                	add    BYTE PTR [rax],al
    17f2:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
    17f5:	03 08                	add    ecx,DWORD PTR [rax]
    17f7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    17f9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    17fb:	39 0b                	cmp    DWORD PTR [rbx],ecx
    17fd:	49 13 02             	adc    rax,QWORD PTR [r10]
    1800:	18 00                	sbb    BYTE PTR [rax],al
    1802:	00 1a                	add    BYTE PTR [rdx],bl
    1804:	0f 00 0b             	str    WORD PTR [rbx]
    1807:	0b 00                	or     eax,DWORD PTR [rax]
    1809:	00 1b                	add    BYTE PTR [rbx],bl
    180b:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    180e:	19 03                	sbb    DWORD PTR [rbx],eax
    1810:	0e                   	(bad)  
    1811:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1813:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1815:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1817:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1818:	0e                   	(bad)  
    1819:	11 01                	adc    DWORD PTR [rcx],eax
    181b:	12 07                	adc    al,BYTE PTR [rdi]
    181d:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1824:	00 00                	add    BYTE PTR [rax],al
    1826:	1c 15                	sbb    al,0x15
    1828:	01 01                	add    DWORD PTR [rcx],eax
    182a:	13 00                	adc    eax,DWORD PTR [rax]
    182c:	00 1d 05 00 49 13    	add    BYTE PTR [rip+0x13490005],bl        # 13491837 <__kernel_end+0x1327f837>
    1832:	00 00                	add    BYTE PTR [rax],al
    1834:	1e                   	(bad)  
    1835:	05 00 03 08 3a       	add    eax,0x3a080300
    183a:	0b 3b                	or     edi,DWORD PTR [rbx]
    183c:	0b 39                	or     edi,DWORD PTR [rcx]
    183e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1841:	02 18                	add    bl,BYTE PTR [rax]
    1843:	00 00                	add    BYTE PTR [rax],al
    1845:	1f                   	(bad)  
    1846:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    1849:	19 03                	sbb    DWORD PTR [rbx],eax
    184b:	0e                   	(bad)  
    184c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    184e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1850:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1852:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1853:	0e                   	(bad)  
    1854:	49 13 11             	adc    rdx,QWORD PTR [r9]
    1857:	01 12                	add    DWORD PTR [rdx],edx
    1859:	07                   	(bad)  
    185a:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1861:	00 01                	add    BYTE PTR [rcx],al
    1863:	11 01                	adc    DWORD PTR [rcx],eax
    1865:	25 0e 13 0b 03       	and    eax,0x30b130e
    186a:	0e                   	(bad)  
    186b:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    186d:	11 01                	adc    DWORD PTR [rcx],eax
    186f:	12 07                	adc    al,BYTE PTR [rdi]
    1871:	10 17                	adc    BYTE PTR [rdi],dl
    1873:	00 00                	add    BYTE PTR [rax],al
    1875:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1878:	0b 0b                	or     ecx,DWORD PTR [rbx]
    187a:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    187d:	0e                   	(bad)  
    187e:	00 00                	add    BYTE PTR [rax],al
    1880:	03 3b                	add    edi,DWORD PTR [rbx]
    1882:	00 03                	add    BYTE PTR [rbx],al
    1884:	0e                   	(bad)  
    1885:	00 00                	add    BYTE PTR [rax],al
    1887:	04 16                	add    al,0x16
    1889:	00 03                	add    BYTE PTR [rbx],al
    188b:	0e                   	(bad)  
    188c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    188e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1890:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1892:	49 13 00             	adc    rax,QWORD PTR [r8]
    1895:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b18bf <__kernel_end+0xae9f8bf>
    189b:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    189e:	08 00                	or     BYTE PTR [rax],al
    18a0:	00 06                	add    BYTE PTR [rsi],al
    18a2:	39 01                	cmp    DWORD PTR [rcx],eax
    18a4:	03 0e                	add    ecx,DWORD PTR [rsi]
    18a6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    18a8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    18aa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    18ac:	01 13                	add    DWORD PTR [rbx],edx
    18ae:	00 00                	add    BYTE PTR [rax],al
    18b0:	07                   	(bad)  
    18b1:	02 01                	add    al,BYTE PTR [rcx]
    18b3:	03 0e                	add    ecx,DWORD PTR [rsi]
    18b5:	0b 0b                	or     ecx,DWORD PTR [rbx]
    18b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    18b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    18bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
    18bd:	00 00                	add    BYTE PTR [rax],al
    18bf:	08 0d 00 03 0e 3a    	or     BYTE PTR [rip+0x3a0e0300],cl        # 3a0e1bc5 <__kernel_end+0x39ecfbc5>
    18c5:	0b 3b                	or     edi,DWORD PTR [rbx]
    18c7:	0b 39                	or     edi,DWORD PTR [rcx]
    18c9:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    18cc:	38 0b                	cmp    BYTE PTR [rbx],cl
    18ce:	32 0b                	xor    cl,BYTE PTR [rbx]
    18d0:	00 00                	add    BYTE PTR [rax],al
    18d2:	09 2e                	or     DWORD PTR [rsi],ebp
    18d4:	01 3f                	add    DWORD PTR [rdi],edi
    18d6:	19 03                	sbb    DWORD PTR [rbx],eax
    18d8:	0e                   	(bad)  
    18d9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    18db:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    18dd:	39 0b                	cmp    DWORD PTR [rbx],ecx
    18df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18e0:	0e                   	(bad)  
    18e1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    18e4:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
    18e7:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    18ea:	13 00                	adc    eax,DWORD PTR [rax]
    18ec:	00 0a                	add    BYTE PTR [rdx],cl
    18ee:	05 00 49 13 34       	add    eax,0x34134900
    18f3:	19 00                	sbb    DWORD PTR [rax],eax
    18f5:	00 0b                	add    BYTE PTR [rbx],cl
    18f7:	05 00 49 13 00       	add    eax,0x134900
    18fc:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    18ff:	01 3f                	add    DWORD PTR [rdi],edi
    1901:	19 03                	sbb    DWORD PTR [rbx],eax
    1903:	08 3a                	or     BYTE PTR [rdx],bh
    1905:	0b 3b                	or     edi,DWORD PTR [rbx]
    1907:	0b 39                	or     edi,DWORD PTR [rcx]
    1909:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    190c:	49 13 32             	adc    rsi,QWORD PTR [r10]
    190f:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
    1912:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1915:	13 00                	adc    eax,DWORD PTR [rax]
    1917:	00 0d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],cl        # 193f1a4b <__kernel_end+0x191dfa4b>
    191d:	03 08                	add    ecx,DWORD PTR [rax]
    191f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1921:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1923:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1925:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1926:	0e                   	(bad)  
    1927:	32 0b                	xor    cl,BYTE PTR [rbx]
    1929:	3c 19                	cmp    al,0x19
    192b:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
    192e:	00 0e                	add    BYTE PTR [rsi],cl
    1930:	0f 00 0b             	str    WORD PTR [rbx]
    1933:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1936:	00 00                	add    BYTE PTR [rax],al
    1938:	0f 26                	(bad)  
    193a:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    193d:	00 00                	add    BYTE PTR [rax],al
    193f:	10 2e                	adc    BYTE PTR [rsi],ch
    1941:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1944:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1946:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1948:	39 0b                	cmp    DWORD PTR [rbx],ecx
    194a:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
    194d:	01 12                	add    DWORD PTR [rdx],edx
    194f:	07                   	(bad)  
    1950:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1957:	00 00                	add    BYTE PTR [rax],al
    1959:	11 05 00 03 0e 49    	adc    DWORD PTR [rip+0x490e0300],eax        # 490e1c5f <__kernel_end+0x48ecfc5f>
    195f:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    1962:	02 18                	add    bl,BYTE PTR [rax]
    1964:	00 00                	add    BYTE PTR [rax],al
    1966:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e1c6c <__kernel_end+0x39ecfc6c>
    196c:	0b 3b                	or     edi,DWORD PTR [rbx]
    196e:	0b 39                	or     edi,DWORD PTR [rcx]
    1970:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1973:	02 18                	add    bl,BYTE PTR [rax]
    1975:	00 00                	add    BYTE PTR [rax],al
    1977:	13 34 00             	adc    esi,DWORD PTR [rax+rax*1]
    197a:	03 0e                	add    ecx,DWORD PTR [rsi]
    197c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    197e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1980:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1982:	49 13 02             	adc    rax,QWORD PTR [r10]
    1985:	18 00                	sbb    BYTE PTR [rax],al
    1987:	00 14 2e             	add    BYTE PTR [rsi+rbp*1],dl
    198a:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    198d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    198f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1991:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1993:	64 13 11             	adc    edx,DWORD PTR fs:[rcx]
    1996:	01 12                	add    DWORD PTR [rdx],edx
    1998:	07                   	(bad)  
    1999:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    19a0:	00 01                	add    BYTE PTR [rcx],al
    19a2:	11 01                	adc    DWORD PTR [rcx],eax
    19a4:	25 0e 13 0b 03       	and    eax,0x30b130e
    19a9:	0e                   	(bad)  
    19aa:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    19ac:	11 01                	adc    DWORD PTR [rcx],eax
    19ae:	12 07                	adc    al,BYTE PTR [rdi]
    19b0:	10 17                	adc    BYTE PTR [rdi],dl
    19b2:	00 00                	add    BYTE PTR [rax],al
    19b4:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    19b7:	0b 0b                	or     ecx,DWORD PTR [rbx]
    19b9:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    19bc:	0e                   	(bad)  
    19bd:	00 00                	add    BYTE PTR [rax],al
    19bf:	03 3b                	add    edi,DWORD PTR [rbx]
    19c1:	00 03                	add    BYTE PTR [rbx],al
    19c3:	0e                   	(bad)  
    19c4:	00 00                	add    BYTE PTR [rax],al
    19c6:	04 16                	add    al,0x16
    19c8:	00 03                	add    BYTE PTR [rbx],al
    19ca:	0e                   	(bad)  
    19cb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19cd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    19cf:	39 0b                	cmp    DWORD PTR [rbx],ecx
    19d1:	49 13 00             	adc    rax,QWORD PTR [r8]
    19d4:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b19fe <__kernel_end+0xae9f9fe>
    19da:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    19dd:	08 00                	or     BYTE PTR [rax],al
    19df:	00 06                	add    BYTE PTR [rsi],al
    19e1:	39 01                	cmp    DWORD PTR [rcx],eax
    19e3:	03 08                	add    ecx,DWORD PTR [rax]
    19e5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19e7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    19e9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    19eb:	01 13                	add    DWORD PTR [rbx],edx
    19ed:	00 00                	add    BYTE PTR [rax],al
    19ef:	07                   	(bad)  
    19f0:	39 00                	cmp    DWORD PTR [rax],eax
    19f2:	03 0e                	add    ecx,DWORD PTR [rsi]
    19f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19f6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    19f8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    19fa:	00 00                	add    BYTE PTR [rax],al
    19fc:	08 26                	or     BYTE PTR [rsi],ah
    19fe:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1a01:	00 00                	add    BYTE PTR [rax],al
    1a03:	09 39                	or     DWORD PTR [rcx],edi
    1a05:	00 03                	add    BYTE PTR [rbx],al
    1a07:	08 3a                	or     BYTE PTR [rdx],bh
    1a09:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a0b:	0b 39                	or     edi,DWORD PTR [rcx]
    1a0d:	0b 00                	or     eax,DWORD PTR [rax]
    1a0f:	00 0a                	add    BYTE PTR [rdx],cl
    1a11:	39 01                	cmp    DWORD PTR [rcx],eax
    1a13:	03 0e                	add    ecx,DWORD PTR [rsi]
    1a15:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a17:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a19:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a1b:	01 13                	add    DWORD PTR [rbx],edx
    1a1d:	00 00                	add    BYTE PTR [rax],al
    1a1f:	0b 2e                	or     ebp,DWORD PTR [rsi]
    1a21:	01 3f                	add    DWORD PTR [rdi],edi
    1a23:	19 03                	sbb    DWORD PTR [rbx],eax
    1a25:	0e                   	(bad)  
    1a26:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a28:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a2a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a2c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a2d:	0e                   	(bad)  
    1a2e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1a32:	01 13                	add    DWORD PTR [rbx],edx
    1a34:	00 00                	add    BYTE PTR [rax],al
    1a36:	0c 05                	or     al,0x5
    1a38:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1a3b:	00 00                	add    BYTE PTR [rax],al
    1a3d:	0d 2e 01 3f 19       	or     eax,0x193f012e
    1a42:	03 0e                	add    ecx,DWORD PTR [rsi]
    1a44:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a46:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a48:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a4b:	0e                   	(bad)  
    1a4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1a50:	00 00                	add    BYTE PTR [rax],al
    1a52:	0e                   	(bad)  
    1a53:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    1a57:	11 01                	adc    DWORD PTR [rcx],eax
    1a59:	12 07                	adc    al,BYTE PTR [rdi]
    1a5b:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1a62:	00 00                	add    BYTE PTR [rax],al
    1a64:	0f 05                	syscall 
    1a66:	00 03                	add    BYTE PTR [rbx],al
    1a68:	08 3a                	or     BYTE PTR [rdx],bh
    1a6a:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a6c:	0b 39                	or     edi,DWORD PTR [rcx]
    1a6e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1a71:	02 18                	add    bl,BYTE PTR [rax]
    1a73:	00 00                	add    BYTE PTR [rax],al
    1a75:	10 0f                	adc    BYTE PTR [rdi],cl
    1a77:	00 0b                	add    BYTE PTR [rbx],cl
    1a79:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1a7c:	00 00                	add    BYTE PTR [rax],al
    1a7e:	11 37                	adc    DWORD PTR [rdi],esi
    1a80:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1a83:	00 00                	add    BYTE PTR [rax],al
    1a85:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
    1a88:	03 08                	add    ecx,DWORD PTR [rax]
    1a8a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a8c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a8e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a90:	49 13 02             	adc    rax,QWORD PTR [r10]
    1a93:	18 00                	sbb    BYTE PTR [rax],al
    1a95:	00 13                	add    BYTE PTR [rbx],dl
    1a97:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1a9c:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a9e:	0b 39                	or     edi,DWORD PTR [rcx]
    1aa0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1aa3:	02 18                	add    bl,BYTE PTR [rax]
    1aa5:	00 00                	add    BYTE PTR [rax],al
    1aa7:	14 01                	adc    al,0x1
    1aa9:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    1aac:	00 00                	add    BYTE PTR [rax],al
    1aae:	15 21 00 49 13       	adc    eax,0x13490021
    1ab3:	2f                   	(bad)  
    1ab4:	0b 00                	or     eax,DWORD PTR [rax]
    1ab6:	00 00                	add    BYTE PTR [rax],al
    1ab8:	01 11                	add    DWORD PTR [rcx],edx
    1aba:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2dce <__kernel_end+0x2ea0dce>
    1ac0:	0e                   	(bad)  
    1ac1:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1ac3:	11 01                	adc    DWORD PTR [rcx],eax
    1ac5:	12 07                	adc    al,BYTE PTR [rdi]
    1ac7:	10 17                	adc    BYTE PTR [rdi],dl
    1ac9:	00 00                	add    BYTE PTR [rax],al
    1acb:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1ace:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1ad0:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1ad3:	0e                   	(bad)  
    1ad4:	00 00                	add    BYTE PTR [rax],al
    1ad6:	03 3b                	add    edi,DWORD PTR [rbx]
    1ad8:	00 03                	add    BYTE PTR [rbx],al
    1ada:	0e                   	(bad)  
    1adb:	00 00                	add    BYTE PTR [rax],al
    1add:	04 16                	add    al,0x16
    1adf:	00 03                	add    BYTE PTR [rbx],al
    1ae1:	0e                   	(bad)  
    1ae2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ae4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ae6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ae8:	49 13 00             	adc    rax,QWORD PTR [r8]
    1aeb:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b1b15 <__kernel_end+0xae9fb15>
    1af1:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1af4:	08 00                	or     BYTE PTR [rax],al
    1af6:	00 06                	add    BYTE PTR [rsi],al
    1af8:	39 01                	cmp    DWORD PTR [rcx],eax
    1afa:	03 08                	add    ecx,DWORD PTR [rax]
    1afc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1afe:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b00:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b02:	01 13                	add    DWORD PTR [rbx],edx
    1b04:	00 00                	add    BYTE PTR [rax],al
    1b06:	07                   	(bad)  
    1b07:	39 00                	cmp    DWORD PTR [rax],eax
    1b09:	03 08                	add    ecx,DWORD PTR [rax]
    1b0b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b0d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b0f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b11:	00 00                	add    BYTE PTR [rax],al
    1b13:	08 2e                	or     BYTE PTR [rsi],ch
    1b15:	01 03                	add    DWORD PTR [rbx],eax
    1b17:	08 3a                	or     BYTE PTR [rdx],bh
    1b19:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b1b:	0b 39                	or     edi,DWORD PTR [rcx]
    1b1d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1b20:	3c 19                	cmp    al,0x19
    1b22:	01 13                	add    DWORD PTR [rbx],edx
    1b24:	00 00                	add    BYTE PTR [rax],al
    1b26:	09 05 00 49 13 00    	or     DWORD PTR [rip+0x134900],eax        # 13642c <stivale_hdr-0xc9bd4>
    1b2c:	00 0a                	add    BYTE PTR [rdx],cl
    1b2e:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
    1b31:	0e                   	(bad)  
    1b32:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b34:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b36:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b38:	3c 19                	cmp    al,0x19
    1b3a:	00 00                	add    BYTE PTR [rax],al
    1b3c:	0b 39                	or     edi,DWORD PTR [rcx]
    1b3e:	00 03                	add    BYTE PTR [rbx],al
    1b40:	0e                   	(bad)  
    1b41:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b43:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b45:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b47:	00 00                	add    BYTE PTR [rax],al
    1b49:	0c 39                	or     al,0x39
    1b4b:	01 03                	add    DWORD PTR [rbx],eax
    1b4d:	0e                   	(bad)  
    1b4e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b50:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b52:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b54:	00 00                	add    BYTE PTR [rax],al
    1b56:	0d 2e 01 3f 19       	or     eax,0x193f012e
    1b5b:	03 0e                	add    ecx,DWORD PTR [rsi]
    1b5d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b5f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b61:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b64:	0e                   	(bad)  
    1b65:	3c 19                	cmp    al,0x19
    1b67:	01 13                	add    DWORD PTR [rbx],edx
    1b69:	00 00                	add    BYTE PTR [rax],al
    1b6b:	0e                   	(bad)  
    1b6c:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    1b6f:	19 03                	sbb    DWORD PTR [rbx],eax
    1b71:	0e                   	(bad)  
    1b72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b76:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b79:	0e                   	(bad)  
    1b7a:	3c 19                	cmp    al,0x19
    1b7c:	00 00                	add    BYTE PTR [rax],al
    1b7e:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    1b81:	47 13 11             	rex.RXB adc r10d,DWORD PTR [r9]
    1b84:	01 12                	add    DWORD PTR [rdx],edx
    1b86:	07                   	(bad)  
    1b87:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1b8e:	00 00                	add    BYTE PTR [rax],al
    1b90:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e1e96 <__kernel_end+0x39ecfe96>
    1b96:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b98:	0b 39                	or     edi,DWORD PTR [rcx]
    1b9a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1b9d:	02 18                	add    bl,BYTE PTR [rax]
    1b9f:	00 00                	add    BYTE PTR [rax],al
    1ba1:	11 2e                	adc    DWORD PTR [rsi],ebp
    1ba3:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1ba6:	11 01                	adc    DWORD PTR [rcx],eax
    1ba8:	12 07                	adc    al,BYTE PTR [rdi]
    1baa:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1bb1:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
    1bb4:	03 08                	add    ecx,DWORD PTR [rax]
    1bb6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1bb8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1bba:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1bbc:	49 13 02             	adc    rax,QWORD PTR [r10]
    1bbf:	18 00                	sbb    BYTE PTR [rax],al
    1bc1:	00 13                	add    BYTE PTR [rbx],dl
    1bc3:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    1bc7:	11 01                	adc    DWORD PTR [rcx],eax
    1bc9:	12 07                	adc    al,BYTE PTR [rdi]
    1bcb:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1bd2:	00 00                	add    BYTE PTR [rax],al
    1bd4:	14 2e                	adc    al,0x2e
    1bd6:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1bd9:	11 01                	adc    DWORD PTR [rcx],eax
    1bdb:	12 07                	adc    al,BYTE PTR [rdi]
    1bdd:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1be4:	15 05 00 03 08       	adc    eax,0x8030005
    1be9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1beb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1bed:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1bef:	49 13 02             	adc    rax,QWORD PTR [r10]
    1bf2:	18 00                	sbb    BYTE PTR [rax],al
    1bf4:	00 00                	add    BYTE PTR [rax],al
    1bf6:	01 11                	add    DWORD PTR [rcx],edx
    1bf8:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2f0c <__kernel_end+0x2ea0f0c>
    1bfe:	0e                   	(bad)  
    1bff:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1c01:	11 01                	adc    DWORD PTR [rcx],eax
    1c03:	12 07                	adc    al,BYTE PTR [rdi]
    1c05:	10 17                	adc    BYTE PTR [rdi],dl
    1c07:	00 00                	add    BYTE PTR [rax],al
    1c09:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1c0c:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1c0e:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1c11:	0e                   	(bad)  
    1c12:	00 00                	add    BYTE PTR [rax],al
    1c14:	03 3b                	add    edi,DWORD PTR [rbx]
    1c16:	00 03                	add    BYTE PTR [rbx],al
    1c18:	0e                   	(bad)  
    1c19:	00 00                	add    BYTE PTR [rax],al
    1c1b:	04 16                	add    al,0x16
    1c1d:	00 03                	add    BYTE PTR [rbx],al
    1c1f:	0e                   	(bad)  
    1c20:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c22:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c24:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c26:	49 13 00             	adc    rax,QWORD PTR [r8]
    1c29:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b1c53 <__kernel_end+0xae9fc53>
    1c2f:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1c32:	08 00                	or     BYTE PTR [rax],al
    1c34:	00 06                	add    BYTE PTR [rsi],al
    1c36:	2e 00 3f             	add    BYTE PTR cs:[rdi],bh
    1c39:	19 03                	sbb    DWORD PTR [rbx],eax
    1c3b:	0e                   	(bad)  
    1c3c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c3e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c40:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c42:	11 01                	adc    DWORD PTR [rcx],eax
    1c44:	12 07                	adc    al,BYTE PTR [rdi]
    1c46:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1c4d:	07                   	(bad)  
    1c4e:	39 01                	cmp    DWORD PTR [rcx],eax
    1c50:	03 08                	add    ecx,DWORD PTR [rax]
    1c52:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c54:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c56:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c58:	01 13                	add    DWORD PTR [rbx],edx
    1c5a:	00 00                	add    BYTE PTR [rax],al
    1c5c:	08 2e                	or     BYTE PTR [rsi],ch
    1c5e:	01 3f                	add    DWORD PTR [rdi],edi
    1c60:	19 03                	sbb    DWORD PTR [rbx],eax
    1c62:	0e                   	(bad)  
    1c63:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c65:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c67:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c69:	3c 19                	cmp    al,0x19
    1c6b:	01 13                	add    DWORD PTR [rbx],edx
    1c6d:	00 00                	add    BYTE PTR [rax],al
    1c6f:	09 05 00 49 13 00    	or     DWORD PTR [rip+0x134900],eax        # 136575 <stivale_hdr-0xc9a8b>
    1c75:	00 0a                	add    BYTE PTR [rdx],cl
    1c77:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    1c7a:	19 03                	sbb    DWORD PTR [rbx],eax
    1c7c:	0e                   	(bad)  
    1c7d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c7f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c81:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c83:	3c 19                	cmp    al,0x19
    1c85:	00 00                	add    BYTE PTR [rax],al
    1c87:	0b 2e                	or     ebp,DWORD PTR [rsi]
    1c89:	00 03                	add    BYTE PTR [rbx],al
    1c8b:	0e                   	(bad)  
    1c8c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1c8e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1c90:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1c92:	3c 19                	cmp    al,0x19
    1c94:	00 00                	add    BYTE PTR [rax],al
    1c96:	0c 2e                	or     al,0x2e
    1c98:	01 03                	add    DWORD PTR [rbx],eax
    1c9a:	08 3a                	or     BYTE PTR [rdx],bh
    1c9c:	0b 3b                	or     edi,DWORD PTR [rbx]
    1c9e:	0b 39                	or     edi,DWORD PTR [rcx]
    1ca0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1ca3:	3c 19                	cmp    al,0x19
    1ca5:	01 13                	add    DWORD PTR [rbx],edx
    1ca7:	00 00                	add    BYTE PTR [rax],al
    1ca9:	0d 2e 01 03 0e       	or     eax,0xe03012e
    1cae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1cb0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1cb2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1cb4:	3c 19                	cmp    al,0x19
    1cb6:	00 00                	add    BYTE PTR [rax],al
    1cb8:	0e                   	(bad)  
    1cb9:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    1cbd:	11 01                	adc    DWORD PTR [rcx],eax
    1cbf:	12 07                	adc    al,BYTE PTR [rdi]
    1cc1:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1cc8:	00 00                	add    BYTE PTR [rax],al
    1cca:	0f 05                	syscall 
    1ccc:	00 03                	add    BYTE PTR [rbx],al
    1cce:	08 3a                	or     BYTE PTR [rdx],bh
    1cd0:	0b 3b                	or     edi,DWORD PTR [rbx]
    1cd2:	0b 39                	or     edi,DWORD PTR [rcx]
    1cd4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1cd7:	02 18                	add    bl,BYTE PTR [rax]
    1cd9:	00 00                	add    BYTE PTR [rax],al
    1cdb:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
    1cde:	03 0e                	add    ecx,DWORD PTR [rsi]
    1ce0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ce2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ce4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ce6:	49 13 02             	adc    rax,QWORD PTR [r10]
    1ce9:	18 00                	sbb    BYTE PTR [rax],al
    1ceb:	00 11                	add    BYTE PTR [rcx],dl
    1ced:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1cf2:	0b 3b                	or     edi,DWORD PTR [rbx]
    1cf4:	0b 39                	or     edi,DWORD PTR [rcx]
    1cf6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1cf9:	02 18                	add    bl,BYTE PTR [rax]
    1cfb:	00 00                	add    BYTE PTR [rax],al
    1cfd:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
    1d00:	03 08                	add    ecx,DWORD PTR [rax]
    1d02:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1d04:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1d06:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1d08:	49 13 02             	adc    rax,QWORD PTR [r10]
    1d0b:	18 00                	sbb    BYTE PTR [rax],al
    1d0d:	00 13                	add    BYTE PTR [rbx],dl
    1d0f:	2e 00 47 13          	add    BYTE PTR cs:[rdi+0x13],al
    1d13:	11 01                	adc    DWORD PTR [rcx],eax
    1d15:	12 07                	adc    al,BYTE PTR [rdi]
    1d17:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1d1e:	14 2e                	adc    al,0x2e
    1d20:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1d23:	11 01                	adc    DWORD PTR [rcx],eax
    1d25:	12 07                	adc    al,BYTE PTR [rdi]
    1d27:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    1d2e:	00 00                	add    BYTE PTR [rax],al
    1d30:	15 2e 01 47 13       	adc    eax,0x1347012e
    1d35:	11 01                	adc    DWORD PTR [rcx],eax
    1d37:	12 07                	adc    al,BYTE PTR [rdi]
    1d39:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1d40:	00 01                	add    BYTE PTR [rcx],al
    1d42:	11 01                	adc    DWORD PTR [rcx],eax
    1d44:	25 0e 13 0b 03       	and    eax,0x30b130e
    1d49:	0e                   	(bad)  
    1d4a:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1d4c:	11 01                	adc    DWORD PTR [rcx],eax
    1d4e:	12 07                	adc    al,BYTE PTR [rdi]
    1d50:	10 17                	adc    BYTE PTR [rdi],dl
    1d52:	00 00                	add    BYTE PTR [rax],al
    1d54:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1d57:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1d59:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1d5c:	0e                   	(bad)  
    1d5d:	00 00                	add    BYTE PTR [rax],al
    1d5f:	03 3b                	add    edi,DWORD PTR [rbx]
    1d61:	00 03                	add    BYTE PTR [rbx],al
    1d63:	0e                   	(bad)  
    1d64:	00 00                	add    BYTE PTR [rax],al
    1d66:	04 16                	add    al,0x16
    1d68:	00 03                	add    BYTE PTR [rbx],al
    1d6a:	0e                   	(bad)  
    1d6b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1d6d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1d6f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1d71:	49 13 00             	adc    rax,QWORD PTR [r8]
    1d74:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b1d9e <__kernel_end+0xae9fd9e>
    1d7a:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1d7d:	08 00                	or     BYTE PTR [rax],al
    1d7f:	00 06                	add    BYTE PTR [rsi],al
    1d81:	39 01                	cmp    DWORD PTR [rcx],eax
    1d83:	03 08                	add    ecx,DWORD PTR [rax]
    1d85:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1d87:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1d89:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1d8b:	01 13                	add    DWORD PTR [rbx],edx
    1d8d:	00 00                	add    BYTE PTR [rax],al
    1d8f:	07                   	(bad)  
    1d90:	39 01                	cmp    DWORD PTR [rcx],eax
    1d92:	03 0e                	add    ecx,DWORD PTR [rsi]
    1d94:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1d96:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1d98:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1d9a:	00 00                	add    BYTE PTR [rax],al
    1d9c:	08 13                	or     BYTE PTR [rbx],dl
    1d9e:	01 03                	add    DWORD PTR [rbx],eax
    1da0:	0e                   	(bad)  
    1da1:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1da3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1da5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1da7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1da9:	01 13                	add    DWORD PTR [rbx],edx
    1dab:	00 00                	add    BYTE PTR [rax],al
    1dad:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e20b3 <__kernel_end+0x39ed00b3>
    1db3:	0b 3b                	or     edi,DWORD PTR [rbx]
    1db5:	0b 39                	or     edi,DWORD PTR [rcx]
    1db7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1dba:	38 0b                	cmp    BYTE PTR [rbx],cl
    1dbc:	00 00                	add    BYTE PTR [rax],al
    1dbe:	0a 13                	or     dl,BYTE PTR [rbx]
    1dc0:	01 03                	add    DWORD PTR [rbx],eax
    1dc2:	0e                   	(bad)  
    1dc3:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1dc5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1dc7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1dc9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1dcb:	00 00                	add    BYTE PTR [rax],al
    1dcd:	0b 0d 00 03 08 3a    	or     ecx,DWORD PTR [rip+0x3a080300]        # 3a0820d3 <__kernel_end+0x39e700d3>
    1dd3:	0b 3b                	or     edi,DWORD PTR [rbx]
    1dd5:	0b 39                	or     edi,DWORD PTR [rcx]
    1dd7:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1dda:	38 0b                	cmp    BYTE PTR [rbx],cl
    1ddc:	00 00                	add    BYTE PTR [rax],al
    1dde:	0c 01                	or     al,0x1
    1de0:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    1de3:	01 13                	add    DWORD PTR [rbx],edx
    1de5:	00 00                	add    BYTE PTR [rax],al
    1de7:	0d 21 00 49 13       	or     eax,0x13490021
    1dec:	2f                   	(bad)  
    1ded:	0b 00                	or     eax,DWORD PTR [rax]
    1def:	00 0e                	add    BYTE PTR [rsi],cl
    1df1:	34 00                	xor    al,0x0
    1df3:	03 0e                	add    ecx,DWORD PTR [rsi]
    1df5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1df7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1df9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1dfb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1dfc:	0e                   	(bad)  
    1dfd:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1e00:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1e03:	00 00                	add    BYTE PTR [rax],al
    1e05:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    1e08:	3f                   	(bad)  
    1e09:	19 03                	sbb    DWORD PTR [rbx],eax
    1e0b:	0e                   	(bad)  
    1e0c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e0e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e10:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e12:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e13:	0e                   	(bad)  
    1e14:	3c 19                	cmp    al,0x19
    1e16:	00 00                	add    BYTE PTR [rax],al
    1e18:	10 39                	adc    BYTE PTR [rcx],bh
    1e1a:	01 03                	add    DWORD PTR [rbx],eax
    1e1c:	0e                   	(bad)  
    1e1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e21:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e23:	01 13                	add    DWORD PTR [rbx],edx
    1e25:	00 00                	add    BYTE PTR [rax],al
    1e27:	11 39                	adc    DWORD PTR [rcx],edi
    1e29:	00 03                	add    BYTE PTR [rbx],al
    1e2b:	0e                   	(bad)  
    1e2c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e2e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e30:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e32:	00 00                	add    BYTE PTR [rax],al
    1e34:	12 39                	adc    bh,BYTE PTR [rcx]
    1e36:	00 03                	add    BYTE PTR [rbx],al
    1e38:	08 3a                	or     BYTE PTR [rdx],bh
    1e3a:	0b 3b                	or     edi,DWORD PTR [rbx]
    1e3c:	0b 39                	or     edi,DWORD PTR [rcx]
    1e3e:	0b 00                	or     eax,DWORD PTR [rax]
    1e40:	00 13                	add    BYTE PTR [rbx],dl
    1e42:	0f 00 0b             	str    WORD PTR [rbx]
    1e45:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1e48:	00 00                	add    BYTE PTR [rax],al
    1e4a:	14 34                	adc    al,0x34
    1e4c:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1e4f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e51:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e53:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e55:	02 18                	add    bl,BYTE PTR [rax]
    1e57:	00 00                	add    BYTE PTR [rax],al
    1e59:	15 2e 01 47 13       	adc    eax,0x1347012e
    1e5e:	11 01                	adc    DWORD PTR [rcx],eax
    1e60:	12 07                	adc    al,BYTE PTR [rdi]
    1e62:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1e69:	00 00                	add    BYTE PTR [rax],al
    1e6b:	16                   	(bad)  
    1e6c:	34 00                	xor    al,0x0
    1e6e:	03 0e                	add    ecx,DWORD PTR [rsi]
    1e70:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e72:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e74:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e76:	49 13 02             	adc    rax,QWORD PTR [r10]
    1e79:	18 00                	sbb    BYTE PTR [rax],al
    1e7b:	00 17                	add    BYTE PTR [rdi],dl
    1e7d:	0b 01                	or     eax,DWORD PTR [rcx]
    1e7f:	11 01                	adc    DWORD PTR [rcx],eax
    1e81:	12 07                	adc    al,BYTE PTR [rdi]
    1e83:	00 00                	add    BYTE PTR [rax],al
    1e85:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
    1e88:	03 08                	add    ecx,DWORD PTR [rax]
    1e8a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e8c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1e8e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1e90:	49 13 02             	adc    rax,QWORD PTR [r10]
    1e93:	18 00                	sbb    BYTE PTR [rax],al
    1e95:	00 19                	add    BYTE PTR [rcx],bl
    1e97:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    1e9a:	19 03                	sbb    DWORD PTR [rbx],eax
    1e9c:	0e                   	(bad)  
    1e9d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1e9f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ea1:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ea3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ea4:	0e                   	(bad)  
    1ea5:	11 01                	adc    DWORD PTR [rcx],eax
    1ea7:	12 07                	adc    al,BYTE PTR [rdi]
    1ea9:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    1eb0:	00 00                	add    BYTE PTR [rax],al
    1eb2:	1a 05 00 03 0e 3a    	sbb    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e21b8 <__kernel_end+0x39ed01b8>
    1eb8:	0b 3b                	or     edi,DWORD PTR [rbx]
    1eba:	0b 39                	or     edi,DWORD PTR [rcx]
    1ebc:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1ebf:	02 18                	add    bl,BYTE PTR [rax]
    1ec1:	00 00                	add    BYTE PTR [rax],al
    1ec3:	1b 05 00 03 08 3a    	sbb    eax,DWORD PTR [rip+0x3a080300]        # 3a0821c9 <__kernel_end+0x39e701c9>
    1ec9:	0b 3b                	or     edi,DWORD PTR [rbx]
    1ecb:	0b 39                	or     edi,DWORD PTR [rcx]
    1ecd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1ed0:	02 18                	add    bl,BYTE PTR [rax]
    1ed2:	00 00                	add    BYTE PTR [rax],al
    1ed4:	1c 2e                	sbb    al,0x2e
    1ed6:	01 3f                	add    DWORD PTR [rdi],edi
    1ed8:	19 03                	sbb    DWORD PTR [rbx],eax
    1eda:	0e                   	(bad)  
    1edb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1edd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1edf:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1ee1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee2:	0e                   	(bad)  
    1ee3:	11 01                	adc    DWORD PTR [rcx],eax
    1ee5:	12 07                	adc    al,BYTE PTR [rdi]
    1ee7:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1eee:	00 01                	add    BYTE PTR [rcx],al
    1ef0:	11 01                	adc    DWORD PTR [rcx],eax
    1ef2:	25 0e 13 0b 03       	and    eax,0x30b130e
    1ef7:	0e                   	(bad)  
    1ef8:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1efa:	11 01                	adc    DWORD PTR [rcx],eax
    1efc:	12 07                	adc    al,BYTE PTR [rdi]
    1efe:	10 17                	adc    BYTE PTR [rdi],dl
    1f00:	00 00                	add    BYTE PTR [rax],al
    1f02:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1f05:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1f07:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1f0a:	0e                   	(bad)  
    1f0b:	00 00                	add    BYTE PTR [rax],al
    1f0d:	03 3b                	add    edi,DWORD PTR [rbx]
    1f0f:	00 03                	add    BYTE PTR [rbx],al
    1f11:	0e                   	(bad)  
    1f12:	00 00                	add    BYTE PTR [rax],al
    1f14:	04 24                	add    al,0x24
    1f16:	00 0b                	add    BYTE PTR [rbx],cl
    1f18:	0b 3e                	or     edi,DWORD PTR [rsi]
    1f1a:	0b 03                	or     eax,DWORD PTR [rbx]
    1f1c:	08 00                	or     BYTE PTR [rax],al
    1f1e:	00 05 39 01 03 08    	add    BYTE PTR [rip+0x8030139],al        # 803205d <__kernel_end+0x7e2005d>
    1f24:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1f26:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1f28:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1f2a:	01 13                	add    DWORD PTR [rbx],edx
    1f2c:	00 00                	add    BYTE PTR [rax],al
    1f2e:	06                   	(bad)  
    1f2f:	39 00                	cmp    DWORD PTR [rax],eax
    1f31:	03 0e                	add    ecx,DWORD PTR [rsi]
    1f33:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1f35:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1f37:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1f39:	00 00                	add    BYTE PTR [rax],al
    1f3b:	07                   	(bad)  
    1f3c:	39 00                	cmp    DWORD PTR [rax],eax
    1f3e:	03 08                	add    ecx,DWORD PTR [rax]
    1f40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1f42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1f44:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1f46:	00 00                	add    BYTE PTR [rax],al
    1f48:	08 39                	or     BYTE PTR [rcx],bh
    1f4a:	01 03                	add    DWORD PTR [rbx],eax
    1f4c:	0e                   	(bad)  
    1f4d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1f4f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1f51:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1f53:	00 00                	add    BYTE PTR [rax],al
    1f55:	09 2e                	or     DWORD PTR [rsi],ebp
    1f57:	00 3f                	add    BYTE PTR [rdi],bh
    1f59:	19 03                	sbb    DWORD PTR [rbx],eax
    1f5b:	0e                   	(bad)  
    1f5c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1f5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1f60:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1f62:	3c 19                	cmp    al,0x19
    1f64:	00 00                	add    BYTE PTR [rax],al
    1f66:	0a 2e                	or     ch,BYTE PTR [rsi]
    1f68:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1f6b:	11 01                	adc    DWORD PTR [rcx],eax
    1f6d:	12 07                	adc    al,BYTE PTR [rdi]
    1f6f:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    1f76:	0b 2e                	or     ebp,DWORD PTR [rsi]
    1f78:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    1f7b:	11 01                	adc    DWORD PTR [rcx],eax
    1f7d:	12 07                	adc    al,BYTE PTR [rdi]
    1f7f:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    1f86:	00 01                	add    BYTE PTR [rcx],al
    1f88:	11 01                	adc    DWORD PTR [rcx],eax
    1f8a:	25 0e 13 0b 03       	and    eax,0x30b130e
    1f8f:	0e                   	(bad)  
    1f90:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    1f92:	11 01                	adc    DWORD PTR [rcx],eax
    1f94:	12 07                	adc    al,BYTE PTR [rdi]
    1f96:	10 17                	adc    BYTE PTR [rdi],dl
    1f98:	00 00                	add    BYTE PTR [rax],al
    1f9a:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    1f9d:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1f9f:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1fa2:	0e                   	(bad)  
    1fa3:	00 00                	add    BYTE PTR [rax],al
    1fa5:	03 3b                	add    edi,DWORD PTR [rbx]
    1fa7:	00 03                	add    BYTE PTR [rbx],al
    1fa9:	0e                   	(bad)  
    1faa:	00 00                	add    BYTE PTR [rax],al
    1fac:	04 16                	add    al,0x16
    1fae:	00 03                	add    BYTE PTR [rbx],al
    1fb0:	0e                   	(bad)  
    1fb1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1fb3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1fb5:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1fb7:	49 13 00             	adc    rax,QWORD PTR [r8]
    1fba:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b1fe4 <__kernel_end+0xae9ffe4>
    1fc0:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    1fc3:	08 00                	or     BYTE PTR [rax],al
    1fc5:	00 06                	add    BYTE PTR [rsi],al
    1fc7:	39 01                	cmp    DWORD PTR [rcx],eax
    1fc9:	03 08                	add    ecx,DWORD PTR [rax]
    1fcb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1fcd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1fcf:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1fd1:	01 13                	add    DWORD PTR [rbx],edx
    1fd3:	00 00                	add    BYTE PTR [rax],al
    1fd5:	07                   	(bad)  
    1fd6:	39 01                	cmp    DWORD PTR [rcx],eax
    1fd8:	03 0e                	add    ecx,DWORD PTR [rsi]
    1fda:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1fdc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1fde:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1fe0:	00 00                	add    BYTE PTR [rax],al
    1fe2:	08 13                	or     BYTE PTR [rbx],dl
    1fe4:	01 03                	add    DWORD PTR [rbx],eax
    1fe6:	0e                   	(bad)  
    1fe7:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1fe9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1feb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1fed:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1fef:	01 13                	add    DWORD PTR [rbx],edx
    1ff1:	00 00                	add    BYTE PTR [rax],al
    1ff3:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e22f9 <__kernel_end+0x39ed02f9>
    1ff9:	0b 3b                	or     edi,DWORD PTR [rbx]
    1ffb:	0b 39                	or     edi,DWORD PTR [rcx]
    1ffd:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2000:	38 0b                	cmp    BYTE PTR [rbx],cl
    2002:	00 00                	add    BYTE PTR [rax],al
    2004:	0a 0d 00 03 08 3a    	or     cl,BYTE PTR [rip+0x3a080300]        # 3a08230a <__kernel_end+0x39e7030a>
    200a:	0b 3b                	or     edi,DWORD PTR [rbx]
    200c:	0b 39                	or     edi,DWORD PTR [rcx]
    200e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2011:	38 0b                	cmp    BYTE PTR [rbx],cl
    2013:	00 00                	add    BYTE PTR [rax],al
    2015:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
    2018:	03 0e                	add    ecx,DWORD PTR [rsi]
    201a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    201c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    201e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2020:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2021:	0e                   	(bad)  
    2022:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2025:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    2028:	00 00                	add    BYTE PTR [rax],al
    202a:	0c 2e                	or     al,0x2e
    202c:	01 3f                	add    DWORD PTR [rdi],edi
    202e:	19 03                	sbb    DWORD PTR [rbx],eax
    2030:	0e                   	(bad)  
    2031:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2033:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2035:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2037:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2038:	0e                   	(bad)  
    2039:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    203d:	00 00                	add    BYTE PTR [rax],al
    203f:	0d 05 00 49 13       	or     eax,0x13490005
    2044:	00 00                	add    BYTE PTR [rax],al
    2046:	0e                   	(bad)  
    2047:	01 01                	add    DWORD PTR [rcx],eax
    2049:	49 13 01             	adc    rax,QWORD PTR [r9]
    204c:	13 00                	adc    eax,DWORD PTR [rax]
    204e:	00 0f                	add    BYTE PTR [rdi],cl
    2050:	21 00                	and    DWORD PTR [rax],eax
    2052:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    2055:	0b 00                	or     eax,DWORD PTR [rax]
    2057:	00 10                	add    BYTE PTR [rax],dl
    2059:	0f 00 0b             	str    WORD PTR [rbx]
    205c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    205f:	00 00                	add    BYTE PTR [rax],al
    2061:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
    2064:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    2067:	0b 3b                	or     edi,DWORD PTR [rbx]
    2069:	0b 39                	or     edi,DWORD PTR [rcx]
    206b:	0b 02                	or     eax,DWORD PTR [rdx]
    206d:	18 00                	sbb    BYTE PTR [rax],al
    206f:	00 12                	add    BYTE PTR [rdx],dl
    2071:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2075:	11 01                	adc    DWORD PTR [rcx],eax
    2077:	12 07                	adc    al,BYTE PTR [rdi]
    2079:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2080:	00 00                	add    BYTE PTR [rax],al
    2082:	13 05 00 03 0e 3a    	adc    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e2388 <__kernel_end+0x39ed0388>
    2088:	0b 3b                	or     edi,DWORD PTR [rbx]
    208a:	0b 39                	or     edi,DWORD PTR [rcx]
    208c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    208f:	02 18                	add    bl,BYTE PTR [rax]
    2091:	00 00                	add    BYTE PTR [rax],al
    2093:	14 34                	adc    al,0x34
    2095:	00 03                	add    BYTE PTR [rbx],al
    2097:	0e                   	(bad)  
    2098:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    209a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    209c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    209e:	49 13 02             	adc    rax,QWORD PTR [r10]
    20a1:	18 00                	sbb    BYTE PTR [rax],al
    20a3:	00 15 0b 01 11 01    	add    BYTE PTR [rip+0x111010b],dl        # 11121b4 <__kernel_end+0xf001b4>
    20a9:	12 07                	adc    al,BYTE PTR [rdi]
    20ab:	00 00                	add    BYTE PTR [rax],al
    20ad:	16                   	(bad)  
    20ae:	34 00                	xor    al,0x0
    20b0:	03 08                	add    ecx,DWORD PTR [rax]
    20b2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    20b4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    20b6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    20b8:	49 13 02             	adc    rax,QWORD PTR [r10]
    20bb:	18 00                	sbb    BYTE PTR [rax],al
    20bd:	00 17                	add    BYTE PTR [rdi],dl
    20bf:	39 01                	cmp    DWORD PTR [rcx],eax
    20c1:	03 0e                	add    ecx,DWORD PTR [rsi]
    20c3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    20c5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    20c7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    20c9:	01 13                	add    DWORD PTR [rbx],edx
    20cb:	00 00                	add    BYTE PTR [rax],al
    20cd:	18 2e                	sbb    BYTE PTR [rsi],ch
    20cf:	01 03                	add    DWORD PTR [rbx],eax
    20d1:	0e                   	(bad)  
    20d2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    20d4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    20d6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    20d8:	3c 19                	cmp    al,0x19
    20da:	00 00                	add    BYTE PTR [rax],al
    20dc:	19 05 00 03 08 3a    	sbb    DWORD PTR [rip+0x3a080300],eax        # 3a0823e2 <__kernel_end+0x39e703e2>
    20e2:	0b 3b                	or     edi,DWORD PTR [rbx]
    20e4:	0b 39                	or     edi,DWORD PTR [rcx]
    20e6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    20e9:	02 18                	add    bl,BYTE PTR [rax]
    20eb:	00 00                	add    BYTE PTR [rax],al
    20ed:	1a 2e                	sbb    ch,BYTE PTR [rsi]
    20ef:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    20f2:	11 01                	adc    DWORD PTR [rcx],eax
    20f4:	12 07                	adc    al,BYTE PTR [rdi]
    20f6:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    20fd:	00 01                	add    BYTE PTR [rcx],al
    20ff:	11 01                	adc    DWORD PTR [rcx],eax
    2101:	25 0e 13 0b 03       	and    eax,0x30b130e
    2106:	0e                   	(bad)  
    2107:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    2109:	11 01                	adc    DWORD PTR [rcx],eax
    210b:	12 07                	adc    al,BYTE PTR [rdi]
    210d:	10 17                	adc    BYTE PTR [rdi],dl
    210f:	00 00                	add    BYTE PTR [rax],al
    2111:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    2114:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2116:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    2119:	0e                   	(bad)  
    211a:	00 00                	add    BYTE PTR [rax],al
    211c:	03 16                	add    edx,DWORD PTR [rsi]
    211e:	00 03                	add    BYTE PTR [rbx],al
    2120:	0e                   	(bad)  
    2121:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2123:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2125:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2127:	49 13 00             	adc    rax,QWORD PTR [r8]
    212a:	00 04 3b             	add    BYTE PTR [rbx+rdi*1],al
    212d:	00 03                	add    BYTE PTR [rbx],al
    212f:	0e                   	(bad)  
    2130:	00 00                	add    BYTE PTR [rax],al
    2132:	05 24 00 0b 0b       	add    eax,0xb0b0024
    2137:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    213a:	08 00                	or     BYTE PTR [rax],al
    213c:	00 06                	add    BYTE PTR [rsi],al
    213e:	39 01                	cmp    DWORD PTR [rcx],eax
    2140:	03 08                	add    ecx,DWORD PTR [rax]
    2142:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2144:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2146:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2148:	01 13                	add    DWORD PTR [rbx],edx
    214a:	00 00                	add    BYTE PTR [rax],al
    214c:	07                   	(bad)  
    214d:	39 00                	cmp    DWORD PTR [rax],eax
    214f:	03 0e                	add    ecx,DWORD PTR [rsi]
    2151:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2153:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2155:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2157:	00 00                	add    BYTE PTR [rax],al
    2159:	08 26                	or     BYTE PTR [rsi],ah
    215b:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    215e:	00 00                	add    BYTE PTR [rax],al
    2160:	09 13                	or     DWORD PTR [rbx],edx
    2162:	01 03                	add    DWORD PTR [rbx],eax
    2164:	0e                   	(bad)  
    2165:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2167:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2169:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    216b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    216d:	01 13                	add    DWORD PTR [rbx],edx
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e2477 <__kernel_end+0x39ed0477>
    2177:	0b 3b                	or     edi,DWORD PTR [rbx]
    2179:	0b 39                	or     edi,DWORD PTR [rcx]
    217b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    217e:	38 0b                	cmp    BYTE PTR [rbx],cl
    2180:	00 00                	add    BYTE PTR [rax],al
    2182:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
    2185:	03 0e                	add    ecx,DWORD PTR [rsi]
    2187:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2189:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    218b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    218d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    218e:	0e                   	(bad)  
    218f:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2192:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    2195:	00 00                	add    BYTE PTR [rax],al
    2197:	0c 34                	or     al,0x34
    2199:	00 03                	add    BYTE PTR [rbx],al
    219b:	08 3a                	or     BYTE PTR [rdx],bh
    219d:	0b 3b                	or     edi,DWORD PTR [rbx]
    219f:	0b 39                	or     edi,DWORD PTR [rcx]
    21a1:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    21a4:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    21a7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    21aa:	00 00                	add    BYTE PTR [rax],al
    21ac:	0d 39 01 03 0e       	or     eax,0xe030139
    21b1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    21b3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    21b5:	39 0b                	cmp    DWORD PTR [rbx],ecx
    21b7:	01 13                	add    DWORD PTR [rbx],edx
    21b9:	00 00                	add    BYTE PTR [rax],al
    21bb:	0e                   	(bad)  
    21bc:	0d 00 03 08 3a       	or     eax,0x3a080300
    21c1:	0b 3b                	or     edi,DWORD PTR [rbx]
    21c3:	0b 39                	or     edi,DWORD PTR [rcx]
    21c5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    21c8:	38 0b                	cmp    BYTE PTR [rbx],cl
    21ca:	00 00                	add    BYTE PTR [rax],al
    21cc:	0f 39                	(bad)  
    21ce:	01 03                	add    DWORD PTR [rbx],eax
    21d0:	0e                   	(bad)  
    21d1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    21d3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    21d5:	39 0b                	cmp    DWORD PTR [rbx],ecx
    21d7:	00 00                	add    BYTE PTR [rax],al
    21d9:	10 2e                	adc    BYTE PTR [rsi],ch
    21db:	01 03                	add    DWORD PTR [rbx],eax
    21dd:	0e                   	(bad)  
    21de:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    21e0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    21e2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    21e4:	3c 19                	cmp    al,0x19
    21e6:	01 13                	add    DWORD PTR [rbx],edx
    21e8:	00 00                	add    BYTE PTR [rax],al
    21ea:	11 05 00 49 13 00    	adc    DWORD PTR [rip+0x134900],eax        # 136af0 <stivale_hdr-0xc9510>
    21f0:	00 12                	add    BYTE PTR [rdx],dl
    21f2:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
    21f5:	0e                   	(bad)  
    21f6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    21f8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    21fa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    21fc:	3c 19                	cmp    al,0x19
    21fe:	00 00                	add    BYTE PTR [rax],al
    2200:	13 0f                	adc    ecx,DWORD PTR [rdi]
    2202:	00 0b                	add    BYTE PTR [rbx],cl
    2204:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2207:	00 00                	add    BYTE PTR [rax],al
    2209:	14 39                	adc    al,0x39
    220b:	01 03                	add    DWORD PTR [rbx],eax
    220d:	08 3a                	or     BYTE PTR [rdx],bh
    220f:	0b 3b                	or     edi,DWORD PTR [rbx]
    2211:	0b 39                	or     edi,DWORD PTR [rcx]
    2213:	0b 00                	or     eax,DWORD PTR [rax]
    2215:	00 15 04 01 03 0e    	add    BYTE PTR [rip+0xe030104],dl        # e03231f <__kernel_end+0xde2031f>
    221b:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    221e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2221:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2223:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2225:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2227:	01 13                	add    DWORD PTR [rbx],edx
    2229:	00 00                	add    BYTE PTR [rax],al
    222b:	16                   	(bad)  
    222c:	28 00                	sub    BYTE PTR [rax],al
    222e:	03 0e                	add    ecx,DWORD PTR [rsi]
    2230:	1c 0b                	sbb    al,0xb
    2232:	00 00                	add    BYTE PTR [rax],al
    2234:	17                   	(bad)  
    2235:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2238:	19 03                	sbb    DWORD PTR [rbx],eax
    223a:	0e                   	(bad)  
    223b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    223d:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2d7c <__kernel_end+0xe4d0d7c>
    2243:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    2247:	01 13                	add    DWORD PTR [rbx],edx
    2249:	00 00                	add    BYTE PTR [rax],al
    224b:	18 2e                	sbb    BYTE PTR [rsi],ch
    224d:	01 3f                	add    DWORD PTR [rdi],edi
    224f:	19 03                	sbb    DWORD PTR [rbx],eax
    2251:	0e                   	(bad)  
    2252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2254:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2d93 <__kernel_end+0xe4d0d93>
    225a:	3c 19                	cmp    al,0x19
    225c:	01 13                	add    DWORD PTR [rbx],edx
    225e:	00 00                	add    BYTE PTR [rax],al
    2260:	19 2e                	sbb    DWORD PTR [rsi],ebp
    2262:	01 3f                	add    DWORD PTR [rdi],edi
    2264:	19 03                	sbb    DWORD PTR [rbx],eax
    2266:	0e                   	(bad)  
    2267:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2269:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    226b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    226d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    226e:	0e                   	(bad)  
    226f:	3c 19                	cmp    al,0x19
    2271:	01 13                	add    DWORD PTR [rbx],edx
    2273:	00 00                	add    BYTE PTR [rax],al
    2275:	1a 2e                	sbb    ch,BYTE PTR [rsi]
    2277:	00 3f                	add    BYTE PTR [rdi],bh
    2279:	19 03                	sbb    DWORD PTR [rbx],eax
    227b:	0e                   	(bad)  
    227c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    227e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2280:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2282:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2283:	0e                   	(bad)  
    2284:	3c 19                	cmp    al,0x19
    2286:	00 00                	add    BYTE PTR [rax],al
    2288:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    228a:	01 3f                	add    DWORD PTR [rdi],edi
    228c:	19 03                	sbb    DWORD PTR [rbx],eax
    228e:	0e                   	(bad)  
    228f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2291:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2293:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2295:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2296:	0e                   	(bad)  
    2297:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    229b:	01 13                	add    DWORD PTR [rbx],edx
    229d:	00 00                	add    BYTE PTR [rax],al
    229f:	1c 2e                	sbb    al,0x2e
    22a1:	01 03                	add    DWORD PTR [rbx],eax
    22a3:	0e                   	(bad)  
    22a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    22a6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    22a8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    22aa:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    22ae:	00 00                	add    BYTE PTR [rax],al
    22b0:	1d 39 00 03 08       	sbb    eax,0x8030039
    22b5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    22b7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    22b9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    22bb:	00 00                	add    BYTE PTR [rax],al
    22bd:	1e                   	(bad)  
    22be:	34 00                	xor    al,0x0
    22c0:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    22c3:	0b 3b                	or     edi,DWORD PTR [rbx]
    22c5:	0b 39                	or     edi,DWORD PTR [rcx]
    22c7:	0b 02                	or     eax,DWORD PTR [rdx]
    22c9:	18 00                	sbb    BYTE PTR [rax],al
    22cb:	00 1f                	add    BYTE PTR [rdi],bl
    22cd:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    22d0:	19 03                	sbb    DWORD PTR [rbx],eax
    22d2:	0e                   	(bad)  
    22d3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    22d5:	3b 05 39 0b 11 01    	cmp    eax,DWORD PTR [rip+0x1110b39]        # 1112e14 <__kernel_end+0xf00e14>
    22db:	12 07                	adc    al,BYTE PTR [rdi]
    22dd:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    22e4:	00 00                	add    BYTE PTR [rax],al
    22e6:	20 05 00 03 0e 3a    	and    BYTE PTR [rip+0x3a0e0300],al        # 3a0e25ec <__kernel_end+0x39ed05ec>
    22ec:	0b 3b                	or     edi,DWORD PTR [rbx]
    22ee:	05 39 0b 49 13       	add    eax,0x13490b39
    22f3:	02 18                	add    bl,BYTE PTR [rax]
    22f5:	00 00                	add    BYTE PTR [rax],al
    22f7:	21 2e                	and    DWORD PTR [rsi],ebp
    22f9:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    22fc:	11 01                	adc    DWORD PTR [rcx],eax
    22fe:	12 07                	adc    al,BYTE PTR [rdi]
    2300:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    2307:	00 00                	add    BYTE PTR [rax],al
    2309:	22 34 00             	and    dh,BYTE PTR [rax+rax*1]
    230c:	03 0e                	add    ecx,DWORD PTR [rsi]
    230e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2310:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492e4f <__kernel_end+0x13280e4f>
    2316:	02 18                	add    bl,BYTE PTR [rax]
    2318:	00 00                	add    BYTE PTR [rax],al
    231a:	23 2e                	and    ebp,DWORD PTR [rsi]
    231c:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    231f:	11 01                	adc    DWORD PTR [rcx],eax
    2321:	12 07                	adc    al,BYTE PTR [rdi]
    2323:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    232a:	00 00                	add    BYTE PTR [rax],al
    232c:	24 0b                	and    al,0xb
    232e:	01 11                	add    DWORD PTR [rcx],edx
    2330:	01 12                	add    DWORD PTR [rdx],edx
    2332:	07                   	(bad)  
    2333:	01 13                	add    DWORD PTR [rbx],edx
    2335:	00 00                	add    BYTE PTR [rax],al
    2337:	25 34 00 03 08       	and    eax,0x8030034
    233c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    233e:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492e7d <__kernel_end+0x13280e7d>
    2344:	02 18                	add    bl,BYTE PTR [rax]
    2346:	00 00                	add    BYTE PTR [rax],al
    2348:	26 0b 01             	or     eax,DWORD PTR es:[rcx]
    234b:	11 01                	adc    DWORD PTR [rcx],eax
    234d:	12 07                	adc    al,BYTE PTR [rdi]
    234f:	00 00                	add    BYTE PTR [rax],al
    2351:	27                   	(bad)  
    2352:	01 01                	add    DWORD PTR [rcx],eax
    2354:	49 13 01             	adc    rax,QWORD PTR [r9]
    2357:	13 00                	adc    eax,DWORD PTR [rax]
    2359:	00 28                	add    BYTE PTR [rax],ch
    235b:	21 00                	and    DWORD PTR [rax],eax
    235d:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    2360:	0b 00                	or     eax,DWORD PTR [rax]
    2362:	00 29                	add    BYTE PTR [rcx],ch
    2364:	05 00 03 08 3a       	add    eax,0x3a080300
    2369:	0b 3b                	or     edi,DWORD PTR [rbx]
    236b:	0b 39                	or     edi,DWORD PTR [rcx]
    236d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2370:	02 18                	add    bl,BYTE PTR [rax]
    2372:	00 00                	add    BYTE PTR [rax],al
    2374:	2a 05 00 03 0e 3a    	sub    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e267a <__kernel_end+0x39ed067a>
    237a:	0b 3b                	or     edi,DWORD PTR [rbx]
    237c:	0b 39                	or     edi,DWORD PTR [rcx]
    237e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2381:	02 18                	add    bl,BYTE PTR [rax]
    2383:	00 00                	add    BYTE PTR [rax],al
    2385:	2b 34 00             	sub    esi,DWORD PTR [rax+rax*1]
    2388:	03 08                	add    ecx,DWORD PTR [rax]
    238a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    238c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    238e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2390:	49 13 02             	adc    rax,QWORD PTR [r10]
    2393:	18 00                	sbb    BYTE PTR [rax],al
    2395:	00 2c 34             	add    BYTE PTR [rsp+rsi*1],ch
    2398:	00 03                	add    BYTE PTR [rbx],al
    239a:	0e                   	(bad)  
    239b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    239d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    239f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    23a1:	49 13 02             	adc    rax,QWORD PTR [r10]
    23a4:	18 00                	sbb    BYTE PTR [rax],al
    23a6:	00 2d 2e 01 47 13    	add    BYTE PTR [rip+0x1347012e],ch        # 134724da <__kernel_end+0x132604da>
    23ac:	11 01                	adc    DWORD PTR [rcx],eax
    23ae:	12 07                	adc    al,BYTE PTR [rdi]
    23b0:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    23b7:	00 01                	add    BYTE PTR [rcx],al
    23b9:	11 01                	adc    DWORD PTR [rcx],eax
    23bb:	25 0e 13 0b 03       	and    eax,0x30b130e
    23c0:	0e                   	(bad)  
    23c1:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    23c3:	11 01                	adc    DWORD PTR [rcx],eax
    23c5:	12 07                	adc    al,BYTE PTR [rdi]
    23c7:	10 17                	adc    BYTE PTR [rdi],dl
    23c9:	00 00                	add    BYTE PTR [rax],al
    23cb:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    23ce:	0b 0b                	or     ecx,DWORD PTR [rbx]
    23d0:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    23d3:	0e                   	(bad)  
    23d4:	00 00                	add    BYTE PTR [rax],al
    23d6:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
    23d9:	0b 0b                	or     ecx,DWORD PTR [rbx]
    23db:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    23de:	08 00                	or     BYTE PTR [rax],al
    23e0:	00 04 16             	add    BYTE PTR [rsi+rdx*1],al
    23e3:	00 03                	add    BYTE PTR [rbx],al
    23e5:	0e                   	(bad)  
    23e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    23e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    23ea:	39 0b                	cmp    DWORD PTR [rbx],ecx
    23ec:	49 13 00             	adc    rax,QWORD PTR [r8]
    23ef:	00 05 3b 00 03 0e    	add    BYTE PTR [rip+0xe03003b],al        # e032430 <__kernel_end+0xde20430>
    23f5:	00 00                	add    BYTE PTR [rax],al
    23f7:	06                   	(bad)  
    23f8:	16                   	(bad)  
    23f9:	00 03                	add    BYTE PTR [rbx],al
    23fb:	0e                   	(bad)  
    23fc:	49 13 00             	adc    rax,QWORD PTR [r8]
    23ff:	00 07                	add    BYTE PTR [rdi],al
    2401:	01 01                	add    DWORD PTR [rcx],eax
    2403:	49 13 01             	adc    rax,QWORD PTR [r9]
    2406:	13 00                	adc    eax,DWORD PTR [rax]
    2408:	00 08                	add    BYTE PTR [rax],cl
    240a:	21 00                	and    DWORD PTR [rax],eax
    240c:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    240f:	0b 00                	or     eax,DWORD PTR [rax]
    2411:	00 09                	add    BYTE PTR [rcx],cl
    2413:	13 01                	adc    eax,DWORD PTR [rcx]
    2415:	03 0e                	add    ecx,DWORD PTR [rsi]
    2417:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2419:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    241b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    241d:	01 13                	add    DWORD PTR [rbx],edx
    241f:	00 00                	add    BYTE PTR [rax],al
    2421:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e2727 <__kernel_end+0x39ed0727>
    2427:	0b 3b                	or     edi,DWORD PTR [rbx]
    2429:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    242c:	38 0b                	cmp    BYTE PTR [rbx],cl
    242e:	00 00                	add    BYTE PTR [rax],al
    2430:	0b 0f                	or     ecx,DWORD PTR [rdi]
    2432:	00 0b                	add    BYTE PTR [rbx],cl
    2434:	0b 00                	or     eax,DWORD PTR [rax]
    2436:	00 0c 39             	add    BYTE PTR [rcx+rdi*1],cl
    2439:	01 03                	add    DWORD PTR [rbx],eax
    243b:	08 3a                	or     BYTE PTR [rdx],bh
    243d:	0b 3b                	or     edi,DWORD PTR [rbx]
    243f:	0b 39                	or     edi,DWORD PTR [rcx]
    2441:	0b 01                	or     eax,DWORD PTR [rcx]
    2443:	13 00                	adc    eax,DWORD PTR [rax]
    2445:	00 0d 39 00 03 0e    	add    BYTE PTR [rip+0xe030039],cl        # e032484 <__kernel_end+0xde20484>
    244b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    244d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    244f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2451:	00 00                	add    BYTE PTR [rax],al
    2453:	0e                   	(bad)  
    2454:	26 00 49 13          	add    BYTE PTR es:[rcx+0x13],cl
    2458:	00 00                	add    BYTE PTR [rax],al
    245a:	0f 39                	(bad)  
    245c:	01 03                	add    DWORD PTR [rbx],eax
    245e:	0e                   	(bad)  
    245f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2461:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2463:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2465:	01 13                	add    DWORD PTR [rbx],edx
    2467:	00 00                	add    BYTE PTR [rax],al
    2469:	10 39                	adc    BYTE PTR [rcx],bh
    246b:	00 03                	add    BYTE PTR [rbx],al
    246d:	08 3a                	or     BYTE PTR [rdx],bh
    246f:	0b 3b                	or     edi,DWORD PTR [rbx]
    2471:	0b 39                	or     edi,DWORD PTR [rcx]
    2473:	0b 00                	or     eax,DWORD PTR [rax]
    2475:	00 11                	add    BYTE PTR [rcx],dl
    2477:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    247a:	19 03                	sbb    DWORD PTR [rbx],eax
    247c:	0e                   	(bad)  
    247d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    247f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492fbe <__kernel_end+0x13280fbe>
    2485:	11 01                	adc    DWORD PTR [rcx],eax
    2487:	12 07                	adc    al,BYTE PTR [rdi]
    2489:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2490:	00 00                	add    BYTE PTR [rax],al
    2492:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e2798 <__kernel_end+0x39ed0798>
    2498:	0b 3b                	or     edi,DWORD PTR [rbx]
    249a:	05 39 0b 49 13       	add    eax,0x13490b39
    249f:	02 18                	add    bl,BYTE PTR [rax]
    24a1:	00 00                	add    BYTE PTR [rax],al
    24a3:	13 18                	adc    ebx,DWORD PTR [rax]
    24a5:	00 00                	add    BYTE PTR [rax],al
    24a7:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
    24aa:	00 03                	add    BYTE PTR [rbx],al
    24ac:	0e                   	(bad)  
    24ad:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    24af:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492fee <__kernel_end+0x13280fee>
    24b5:	02 18                	add    bl,BYTE PTR [rax]
    24b7:	00 00                	add    BYTE PTR [rax],al
    24b9:	15 34 00 03 08       	adc    eax,0x8030034
    24be:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    24c0:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492fff <__kernel_end+0x13280fff>
    24c6:	02 18                	add    bl,BYTE PTR [rax]
    24c8:	00 00                	add    BYTE PTR [rax],al
    24ca:	16                   	(bad)  
    24cb:	0f 00 0b             	str    WORD PTR [rbx]
    24ce:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    24d1:	00 00                	add    BYTE PTR [rax],al
    24d3:	17                   	(bad)  
    24d4:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    24d7:	19 03                	sbb    DWORD PTR [rbx],eax
    24d9:	0e                   	(bad)  
    24da:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    24dc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    24de:	39 0b                	cmp    DWORD PTR [rbx],ecx
    24e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24e1:	0e                   	(bad)  
    24e2:	49 13 11             	adc    rdx,QWORD PTR [r9]
    24e5:	01 12                	add    DWORD PTR [rdx],edx
    24e7:	07                   	(bad)  
    24e8:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    24ef:	00 00                	add    BYTE PTR [rax],al
    24f1:	18 05 00 03 0e 3a    	sbb    BYTE PTR [rip+0x3a0e0300],al        # 3a0e27f7 <__kernel_end+0x39ed07f7>
    24f7:	0b 3b                	or     edi,DWORD PTR [rbx]
    24f9:	0b 39                	or     edi,DWORD PTR [rcx]
    24fb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    24fe:	02 18                	add    bl,BYTE PTR [rax]
    2500:	00 00                	add    BYTE PTR [rax],al
    2502:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
    2505:	03 0e                	add    ecx,DWORD PTR [rsi]
    2507:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2509:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    250b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    250d:	49 13 02             	adc    rax,QWORD PTR [r10]
    2510:	18 00                	sbb    BYTE PTR [rax],al
    2512:	00 1a                	add    BYTE PTR [rdx],bl
    2514:	0b 01                	or     eax,DWORD PTR [rcx]
    2516:	11 01                	adc    DWORD PTR [rcx],eax
    2518:	12 07                	adc    al,BYTE PTR [rdi]
    251a:	00 00                	add    BYTE PTR [rax],al
    251c:	1b 34 00             	sbb    esi,DWORD PTR [rax+rax*1]
    251f:	03 08                	add    ecx,DWORD PTR [rax]
    2521:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2523:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2525:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2527:	49 13 02             	adc    rax,QWORD PTR [r10]
    252a:	18 00                	sbb    BYTE PTR [rax],al
    252c:	00 1c 0b             	add    BYTE PTR [rbx+rcx*1],bl
    252f:	01 11                	add    DWORD PTR [rcx],edx
    2531:	01 12                	add    DWORD PTR [rdx],edx
    2533:	07                   	(bad)  
    2534:	01 13                	add    DWORD PTR [rbx],edx
    2536:	00 00                	add    BYTE PTR [rax],al
    2538:	1d 0b 01 55 17       	sbb    eax,0x1755010b
    253d:	00 00                	add    BYTE PTR [rax],al
    253f:	1e                   	(bad)  
    2540:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2543:	19 03                	sbb    DWORD PTR [rbx],eax
    2545:	0e                   	(bad)  
    2546:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2548:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    254a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    254c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    254d:	0e                   	(bad)  
    254e:	11 01                	adc    DWORD PTR [rcx],eax
    2550:	12 07                	adc    al,BYTE PTR [rdi]
    2552:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2559:	00 00                	add    BYTE PTR [rax],al
    255b:	1f                   	(bad)  
    255c:	05 00 03 08 3a       	add    eax,0x3a080300
    2561:	0b 3b                	or     edi,DWORD PTR [rbx]
    2563:	0b 39                	or     edi,DWORD PTR [rcx]
    2565:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2568:	02 18                	add    bl,BYTE PTR [rax]
    256a:	00 00                	add    BYTE PTR [rax],al
    256c:	20 01                	and    BYTE PTR [rcx],al
    256e:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    2571:	00 00                	add    BYTE PTR [rax],al
    2573:	00 01                	add    BYTE PTR [rcx],al
    2575:	11 01                	adc    DWORD PTR [rcx],eax
    2577:	25 0e 13 0b 03       	and    eax,0x30b130e
    257c:	0e                   	(bad)  
    257d:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    257f:	11 01                	adc    DWORD PTR [rcx],eax
    2581:	12 07                	adc    al,BYTE PTR [rdi]
    2583:	10 17                	adc    BYTE PTR [rdi],dl
    2585:	00 00                	add    BYTE PTR [rax],al
    2587:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    258a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    258c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    258f:	0e                   	(bad)  
    2590:	00 00                	add    BYTE PTR [rax],al
    2592:	03 3b                	add    edi,DWORD PTR [rbx]
    2594:	00 03                	add    BYTE PTR [rbx],al
    2596:	0e                   	(bad)  
    2597:	00 00                	add    BYTE PTR [rax],al
    2599:	04 16                	add    al,0x16
    259b:	00 03                	add    BYTE PTR [rbx],al
    259d:	0e                   	(bad)  
    259e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    25a0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    25a2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    25a4:	49 13 00             	adc    rax,QWORD PTR [r8]
    25a7:	00 05 26 00 49 13    	add    BYTE PTR [rip+0x13490026],al        # 134925d3 <__kernel_end+0x132805d3>
    25ad:	00 00                	add    BYTE PTR [rax],al
    25af:	06                   	(bad)  
    25b0:	24 00                	and    al,0x0
    25b2:	0b 0b                	or     ecx,DWORD PTR [rbx]
    25b4:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    25b7:	08 00                	or     BYTE PTR [rax],al
    25b9:	00 07                	add    BYTE PTR [rdi],al
    25bb:	39 01                	cmp    DWORD PTR [rcx],eax
    25bd:	03 08                	add    ecx,DWORD PTR [rax]
    25bf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    25c1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    25c3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    25c5:	01 13                	add    DWORD PTR [rbx],edx
    25c7:	00 00                	add    BYTE PTR [rax],al
    25c9:	08 39                	or     BYTE PTR [rcx],bh
    25cb:	00 03                	add    BYTE PTR [rbx],al
    25cd:	0e                   	(bad)  
    25ce:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    25d0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    25d2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    25d4:	00 00                	add    BYTE PTR [rax],al
    25d6:	09 13                	or     DWORD PTR [rbx],edx
    25d8:	01 03                	add    DWORD PTR [rbx],eax
    25da:	0e                   	(bad)  
    25db:	0b 0b                	or     ecx,DWORD PTR [rbx]
    25dd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    25df:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    25e1:	39 0b                	cmp    DWORD PTR [rbx],ecx
    25e3:	01 13                	add    DWORD PTR [rbx],edx
    25e5:	00 00                	add    BYTE PTR [rax],al
    25e7:	0a 0d 00 03 0e 3a    	or     cl,BYTE PTR [rip+0x3a0e0300]        # 3a0e28ed <__kernel_end+0x39ed08ed>
    25ed:	0b 3b                	or     edi,DWORD PTR [rbx]
    25ef:	0b 39                	or     edi,DWORD PTR [rcx]
    25f1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    25f4:	38 0b                	cmp    BYTE PTR [rbx],cl
    25f6:	00 00                	add    BYTE PTR [rax],al
    25f8:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
    25fb:	03 0e                	add    ecx,DWORD PTR [rsi]
    25fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    25ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2601:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2603:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2604:	0e                   	(bad)  
    2605:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2608:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    260b:	00 00                	add    BYTE PTR [rax],al
    260d:	0c 34                	or     al,0x34
    260f:	00 03                	add    BYTE PTR [rbx],al
    2611:	08 3a                	or     BYTE PTR [rdx],bh
    2613:	0b 3b                	or     edi,DWORD PTR [rbx]
    2615:	0b 39                	or     edi,DWORD PTR [rcx]
    2617:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    261a:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    261d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    2620:	00 00                	add    BYTE PTR [rax],al
    2622:	0d 39 01 03 0e       	or     eax,0xe030139
    2627:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2629:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    262b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    262d:	01 13                	add    DWORD PTR [rbx],edx
    262f:	00 00                	add    BYTE PTR [rax],al
    2631:	0e                   	(bad)  
    2632:	0d 00 03 08 3a       	or     eax,0x3a080300
    2637:	0b 3b                	or     edi,DWORD PTR [rbx]
    2639:	0b 39                	or     edi,DWORD PTR [rcx]
    263b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    263e:	38 0b                	cmp    BYTE PTR [rbx],cl
    2640:	00 00                	add    BYTE PTR [rax],al
    2642:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    2645:	3f                   	(bad)  
    2646:	19 03                	sbb    DWORD PTR [rbx],eax
    2648:	0e                   	(bad)  
    2649:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    264b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    264d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    264f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2650:	0e                   	(bad)  
    2651:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    2655:	01 13                	add    DWORD PTR [rbx],edx
    2657:	00 00                	add    BYTE PTR [rax],al
    2659:	10 05 00 49 13 00    	adc    BYTE PTR [rip+0x134900],al        # 136f5f <stivale_hdr-0xc90a1>
    265f:	00 11                	add    BYTE PTR [rcx],dl
    2661:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2664:	19 03                	sbb    DWORD PTR [rbx],eax
    2666:	0e                   	(bad)  
    2667:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2669:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    266b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    266d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    266e:	0e                   	(bad)  
    266f:	3c 19                	cmp    al,0x19
    2671:	01 13                	add    DWORD PTR [rbx],edx
    2673:	00 00                	add    BYTE PTR [rax],al
    2675:	12 2e                	adc    ch,BYTE PTR [rsi]
    2677:	01 3f                	add    DWORD PTR [rdi],edi
    2679:	19 03                	sbb    DWORD PTR [rbx],eax
    267b:	08 3a                	or     BYTE PTR [rdx],bh
    267d:	0b 3b                	or     edi,DWORD PTR [rbx]
    267f:	0b 39                	or     edi,DWORD PTR [rcx]
    2681:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    2684:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    2688:	00 00                	add    BYTE PTR [rax],al
    268a:	13 2e                	adc    ebp,DWORD PTR [rsi]
    268c:	01 3f                	add    DWORD PTR [rdi],edi
    268e:	19 03                	sbb    DWORD PTR [rbx],eax
    2690:	0e                   	(bad)  
    2691:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2693:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e31d2 <__kernel_end+0xe4d11d2>
    2699:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    269d:	00 00                	add    BYTE PTR [rax],al
    269f:	14 39                	adc    al,0x39
    26a1:	01 03                	add    DWORD PTR [rbx],eax
    26a3:	0e                   	(bad)  
    26a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    26a6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    26a8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    26aa:	00 00                	add    BYTE PTR [rax],al
    26ac:	15 2e 00 3f 19       	adc    eax,0x193f002e
    26b1:	03 0e                	add    ecx,DWORD PTR [rsi]
    26b3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    26b5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    26b7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    26b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26ba:	0e                   	(bad)  
    26bb:	3c 19                	cmp    al,0x19
    26bd:	00 00                	add    BYTE PTR [rax],al
    26bf:	16                   	(bad)  
    26c0:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
    26c3:	0e                   	(bad)  
    26c4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    26c6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    26c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    26ca:	3c 19                	cmp    al,0x19
    26cc:	00 00                	add    BYTE PTR [rax],al
    26ce:	17                   	(bad)  
    26cf:	0f 00 0b             	str    WORD PTR [rbx]
    26d2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    26d5:	00 00                	add    BYTE PTR [rax],al
    26d7:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
    26da:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    26dd:	0b 3b                	or     edi,DWORD PTR [rbx]
    26df:	0b 39                	or     edi,DWORD PTR [rcx]
    26e1:	0b 02                	or     eax,DWORD PTR [rdx]
    26e3:	18 00                	sbb    BYTE PTR [rax],al
    26e5:	00 19                	add    BYTE PTR [rcx],bl
    26e7:	01 01                	add    DWORD PTR [rcx],eax
    26e9:	49 13 01             	adc    rax,QWORD PTR [r9]
    26ec:	13 00                	adc    eax,DWORD PTR [rax]
    26ee:	00 1a                	add    BYTE PTR [rdx],bl
    26f0:	21 00                	and    DWORD PTR [rax],eax
    26f2:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    26f5:	0b 00                	or     eax,DWORD PTR [rax]
    26f7:	00 1b                	add    BYTE PTR [rbx],bl
    26f9:	34 00                	xor    al,0x0
    26fb:	03 0e                	add    ecx,DWORD PTR [rsi]
    26fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    26ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2701:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2703:	49 13 02             	adc    rax,QWORD PTR [r10]
    2706:	18 00                	sbb    BYTE PTR [rax],al
    2708:	00 1c 2e             	add    BYTE PTR [rsi+rbp*1],bl
    270b:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    270e:	11 01                	adc    DWORD PTR [rcx],eax
    2710:	12 07                	adc    al,BYTE PTR [rdi]
    2712:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    2719:	00 00                	add    BYTE PTR [rax],al
    271b:	1d 05 00 03 08       	sbb    eax,0x8030005
    2720:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2722:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13493261 <__kernel_end+0x13281261>
    2728:	02 18                	add    bl,BYTE PTR [rax]
    272a:	00 00                	add    BYTE PTR [rax],al
    272c:	1e                   	(bad)  
    272d:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2731:	11 01                	adc    DWORD PTR [rcx],eax
    2733:	12 07                	adc    al,BYTE PTR [rdi]
    2735:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    273c:	00 00                	add    BYTE PTR [rax],al
    273e:	1f                   	(bad)  
    273f:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    2744:	0b 3b                	or     edi,DWORD PTR [rbx]
    2746:	0b 39                	or     edi,DWORD PTR [rcx]
    2748:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    274b:	02 18                	add    bl,BYTE PTR [rax]
    274d:	00 00                	add    BYTE PTR [rax],al
    274f:	20 2e                	and    BYTE PTR [rsi],ch
    2751:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    2754:	11 01                	adc    DWORD PTR [rcx],eax
    2756:	12 07                	adc    al,BYTE PTR [rdi]
    2758:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    275f:	21 0b                	and    DWORD PTR [rbx],ecx
    2761:	01 11                	add    DWORD PTR [rcx],edx
    2763:	01 12                	add    DWORD PTR [rdx],edx
    2765:	07                   	(bad)  
    2766:	00 00                	add    BYTE PTR [rax],al
    2768:	22 34 00             	and    dh,BYTE PTR [rax+rax*1]
    276b:	03 08                	add    ecx,DWORD PTR [rax]
    276d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    276f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2771:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2773:	49 13 02             	adc    rax,QWORD PTR [r10]
    2776:	18 00                	sbb    BYTE PTR [rax],al
    2778:	00 23                	add    BYTE PTR [rbx],ah
    277a:	05 00 03 08 3a       	add    eax,0x3a080300
    277f:	0b 3b                	or     edi,DWORD PTR [rbx]
    2781:	0b 39                	or     edi,DWORD PTR [rcx]
    2783:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2786:	02 18                	add    bl,BYTE PTR [rax]
    2788:	00 00                	add    BYTE PTR [rax],al
    278a:	24 2e                	and    al,0x2e
    278c:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    278f:	11 01                	adc    DWORD PTR [rcx],eax
    2791:	12 07                	adc    al,BYTE PTR [rdi]
    2793:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    279a:	00 01                	add    BYTE PTR [rcx],al
    279c:	11 01                	adc    DWORD PTR [rcx],eax
    279e:	25 0e 13 0b 03       	and    eax,0x30b130e
    27a3:	0e                   	(bad)  
    27a4:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    27a6:	11 01                	adc    DWORD PTR [rcx],eax
    27a8:	12 07                	adc    al,BYTE PTR [rdi]
    27aa:	10 17                	adc    BYTE PTR [rdi],dl
    27ac:	00 00                	add    BYTE PTR [rax],al
    27ae:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    27b1:	0b 0b                	or     ecx,DWORD PTR [rbx]
    27b3:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    27b6:	0e                   	(bad)  
    27b7:	00 00                	add    BYTE PTR [rax],al
    27b9:	03 3b                	add    edi,DWORD PTR [rbx]
    27bb:	00 03                	add    BYTE PTR [rbx],al
    27bd:	0e                   	(bad)  
    27be:	00 00                	add    BYTE PTR [rax],al
    27c0:	04 16                	add    al,0x16
    27c2:	00 03                	add    BYTE PTR [rbx],al
    27c4:	0e                   	(bad)  
    27c5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    27c7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    27c9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    27cb:	49 13 00             	adc    rax,QWORD PTR [r8]
    27ce:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b27f8 <__kernel_end+0xaea07f8>
    27d4:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    27d7:	08 00                	or     BYTE PTR [rax],al
    27d9:	00 06                	add    BYTE PTR [rsi],al
    27db:	39 01                	cmp    DWORD PTR [rcx],eax
    27dd:	03 08                	add    ecx,DWORD PTR [rax]
    27df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    27e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    27e3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    27e5:	01 13                	add    DWORD PTR [rbx],edx
    27e7:	00 00                	add    BYTE PTR [rax],al
    27e9:	07                   	(bad)  
    27ea:	39 00                	cmp    DWORD PTR [rax],eax
    27ec:	03 0e                	add    ecx,DWORD PTR [rsi]
    27ee:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    27f0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    27f2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    27f4:	00 00                	add    BYTE PTR [rax],al
    27f6:	08 01                	or     BYTE PTR [rcx],al
    27f8:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    27fb:	01 13                	add    DWORD PTR [rbx],edx
    27fd:	00 00                	add    BYTE PTR [rax],al
    27ff:	09 21                	or     DWORD PTR [rcx],esp
    2801:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    2804:	2f                   	(bad)  
    2805:	0b 00                	or     eax,DWORD PTR [rax]
    2807:	00 0a                	add    BYTE PTR [rdx],cl
    2809:	13 01                	adc    eax,DWORD PTR [rcx]
    280b:	03 0e                	add    ecx,DWORD PTR [rsi]
    280d:	0b 0b                	or     ecx,DWORD PTR [rbx]
    280f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2811:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2813:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2815:	01 13                	add    DWORD PTR [rbx],edx
    2817:	00 00                	add    BYTE PTR [rax],al
    2819:	0b 0d 00 03 0e 3a    	or     ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e2b1f <__kernel_end+0x39ed0b1f>
    281f:	0b 3b                	or     edi,DWORD PTR [rbx]
    2821:	0b 39                	or     edi,DWORD PTR [rcx]
    2823:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2826:	38 0b                	cmp    BYTE PTR [rbx],cl
    2828:	00 00                	add    BYTE PTR [rax],al
    282a:	0c 13                	or     al,0x13
    282c:	01 03                	add    DWORD PTR [rbx],eax
    282e:	0e                   	(bad)  
    282f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2831:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2833:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2835:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2837:	00 00                	add    BYTE PTR [rax],al
    2839:	0d 0d 00 03 08       	or     eax,0x803000d
    283e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2840:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2842:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2844:	49 13 38             	adc    rdi,QWORD PTR [r8]
    2847:	0b 00                	or     eax,DWORD PTR [rax]
    2849:	00 0e                	add    BYTE PTR [rsi],cl
    284b:	39 01                	cmp    DWORD PTR [rcx],eax
    284d:	03 0e                	add    ecx,DWORD PTR [rsi]
    284f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2851:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2853:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2855:	01 13                	add    DWORD PTR [rbx],edx
    2857:	00 00                	add    BYTE PTR [rax],al
    2859:	0f 39                	(bad)  
    285b:	01 03                	add    DWORD PTR [rbx],eax
    285d:	0e                   	(bad)  
    285e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2860:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2862:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2864:	00 00                	add    BYTE PTR [rax],al
    2866:	10 04 01             	adc    BYTE PTR [rcx+rax*1],al
    2869:	03 0e                	add    ecx,DWORD PTR [rsi]
    286b:	3e 0b 0b             	or     ecx,DWORD PTR ds:[rbx]
    286e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2871:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2873:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2875:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2877:	01 13                	add    DWORD PTR [rbx],edx
    2879:	00 00                	add    BYTE PTR [rax],al
    287b:	11 28                	adc    DWORD PTR [rax],ebp
    287d:	00 03                	add    BYTE PTR [rbx],al
    287f:	0e                   	(bad)  
    2880:	1c 0b                	sbb    al,0xb
    2882:	00 00                	add    BYTE PTR [rax],al
    2884:	12 28                	adc    ch,BYTE PTR [rax]
    2886:	00 03                	add    BYTE PTR [rbx],al
    2888:	08 1c 0b             	or     BYTE PTR [rbx+rcx*1],bl
    288b:	00 00                	add    BYTE PTR [rax],al
    288d:	13 28                	adc    ebp,DWORD PTR [rax]
    288f:	00 03                	add    BYTE PTR [rbx],al
    2891:	0e                   	(bad)  
    2892:	1c 06                	sbb    al,0x6
    2894:	00 00                	add    BYTE PTR [rax],al
    2896:	14 28                	adc    al,0x28
    2898:	00 03                	add    BYTE PTR [rbx],al
    289a:	0e                   	(bad)  
    289b:	1c 05                	sbb    al,0x5
    289d:	00 00                	add    BYTE PTR [rax],al
    289f:	15 13 01 03 0e       	adc    eax,0xe030113
    28a4:	0b 05 3a 0b 3b 0b    	or     eax,DWORD PTR [rip+0xb3b0b3a]        # b3b33e4 <__kernel_end+0xb1a13e4>
    28aa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    28ac:	01 13                	add    DWORD PTR [rbx],edx
    28ae:	00 00                	add    BYTE PTR [rax],al
    28b0:	16                   	(bad)  
    28b1:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    28b6:	0b 3b                	or     edi,DWORD PTR [rbx]
    28b8:	0b 39                	or     edi,DWORD PTR [rcx]
    28ba:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    28bd:	38 05 00 00 17 0d    	cmp    BYTE PTR [rip+0xd170000],al        # d1728c3 <__kernel_end+0xcf608c3>
    28c3:	00 03                	add    BYTE PTR [rbx],al
    28c5:	0e                   	(bad)  
    28c6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    28c8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    28ca:	39 0b                	cmp    DWORD PTR [rbx],ecx
    28cc:	49 13 0b             	adc    rcx,QWORD PTR [r11]
    28cf:	0b 0d 0b 0c 0b 38    	or     ecx,DWORD PTR [rip+0x380b0c0b]        # 380b34e0 <__kernel_end+0x37ea14e0>
    28d5:	0b 00                	or     eax,DWORD PTR [rax]
    28d7:	00 18                	add    BYTE PTR [rax],bl
    28d9:	0d 00 03 08 3a       	or     eax,0x3a080300
    28de:	0b 3b                	or     edi,DWORD PTR [rbx]
    28e0:	0b 39                	or     edi,DWORD PTR [rcx]
    28e2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    28e5:	0b 0b                	or     ecx,DWORD PTR [rbx]
    28e7:	0d 0b 0c 0b 38       	or     eax,0x380b0c0b
    28ec:	0b 00                	or     eax,DWORD PTR [rax]
    28ee:	00 19                	add    BYTE PTR [rcx],bl
    28f0:	34 00                	xor    al,0x0
    28f2:	03 0e                	add    ecx,DWORD PTR [rsi]
    28f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    28f6:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e3435 <__kernel_end+0xe4d1435>
    28fc:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    28ff:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    2902:	00 00                	add    BYTE PTR [rax],al
    2904:	1a 2e                	sbb    ch,BYTE PTR [rsi]
    2906:	01 3f                	add    DWORD PTR [rdi],edi
    2908:	19 03                	sbb    DWORD PTR [rbx],eax
    290a:	0e                   	(bad)  
    290b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    290d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    290f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2911:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2912:	0e                   	(bad)  
    2913:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    2917:	01 13                	add    DWORD PTR [rbx],edx
    2919:	00 00                	add    BYTE PTR [rax],al
    291b:	1b 05 00 49 13 00    	sbb    eax,DWORD PTR [rip+0x134900]        # 137221 <stivale_hdr-0xc8ddf>
    2921:	00 1c 2e             	add    BYTE PTR [rsi+rbp*1],bl
    2924:	01 3f                	add    DWORD PTR [rdi],edi
    2926:	19 03                	sbb    DWORD PTR [rbx],eax
    2928:	0e                   	(bad)  
    2929:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    292b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    292d:	39 0b                	cmp    DWORD PTR [rbx],ecx
    292f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2930:	0e                   	(bad)  
    2931:	3c 19                	cmp    al,0x19
    2933:	01 13                	add    DWORD PTR [rbx],edx
    2935:	00 00                	add    BYTE PTR [rax],al
    2937:	1d 2e 00 3f 19       	sbb    eax,0x193f002e
    293c:	03 0e                	add    ecx,DWORD PTR [rsi]
    293e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2940:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2942:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2944:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2945:	0e                   	(bad)  
    2946:	3c 19                	cmp    al,0x19
    2948:	00 00                	add    BYTE PTR [rax],al
    294a:	1e                   	(bad)  
    294b:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    294e:	19 03                	sbb    DWORD PTR [rbx],eax
    2950:	0e                   	(bad)  
    2951:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2953:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2955:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2957:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2958:	0e                   	(bad)  
    2959:	3c 19                	cmp    al,0x19
    295b:	00 00                	add    BYTE PTR [rax],al
    295d:	1f                   	(bad)  
    295e:	39 00                	cmp    DWORD PTR [rax],eax
    2960:	03 08                	add    ecx,DWORD PTR [rax]
    2962:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2964:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2966:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2968:	00 00                	add    BYTE PTR [rax],al
    296a:	20 0f                	and    BYTE PTR [rdi],cl
    296c:	00 0b                	add    BYTE PTR [rbx],cl
    296e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2971:	00 00                	add    BYTE PTR [rax],al
    2973:	21 21                	and    DWORD PTR [rcx],esp
    2975:	00 00                	add    BYTE PTR [rax],al
    2977:	00 22                	add    BYTE PTR [rdx],ah
    2979:	34 00                	xor    al,0x0
    297b:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    297e:	0b 3b                	or     edi,DWORD PTR [rbx]
    2980:	0b 39                	or     edi,DWORD PTR [rcx]
    2982:	0b 02                	or     eax,DWORD PTR [rdx]
    2984:	18 00                	sbb    BYTE PTR [rax],al
    2986:	00 23                	add    BYTE PTR [rbx],ah
    2988:	34 00                	xor    al,0x0
    298a:	47 13 3a             	rex.RXB adc r15d,DWORD PTR [r10]
    298d:	0b 3b                	or     edi,DWORD PTR [rbx]
    298f:	0b 39                	or     edi,DWORD PTR [rcx]
    2991:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2994:	02 18                	add    bl,BYTE PTR [rax]
    2996:	00 00                	add    BYTE PTR [rax],al
    2998:	24 0f                	and    al,0xf
    299a:	00 0b                	add    BYTE PTR [rbx],cl
    299c:	0b 00                	or     eax,DWORD PTR [rax]
    299e:	00 25 2e 01 47 13    	add    BYTE PTR [rip+0x1347012e],ah        # 13472ad2 <__kernel_end+0x13260ad2>
    29a4:	11 01                	adc    DWORD PTR [rcx],eax
    29a6:	12 07                	adc    al,BYTE PTR [rdi]
    29a8:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    29af:	00 00                	add    BYTE PTR [rax],al
    29b1:	26 05 00 03 0e 3a    	es add eax,0x3a0e0300
    29b7:	0b 3b                	or     edi,DWORD PTR [rbx]
    29b9:	0b 39                	or     edi,DWORD PTR [rcx]
    29bb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    29be:	02 18                	add    bl,BYTE PTR [rax]
    29c0:	00 00                	add    BYTE PTR [rax],al
    29c2:	27                   	(bad)  
    29c3:	34 00                	xor    al,0x0
    29c5:	03 0e                	add    ecx,DWORD PTR [rsi]
    29c7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    29c9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    29cb:	39 0b                	cmp    DWORD PTR [rbx],ecx
    29cd:	49 13 02             	adc    rax,QWORD PTR [r10]
    29d0:	18 00                	sbb    BYTE PTR [rax],al
    29d2:	00 28                	add    BYTE PTR [rax],ch
    29d4:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    29d8:	11 01                	adc    DWORD PTR [rcx],eax
    29da:	12 07                	adc    al,BYTE PTR [rdi]
    29dc:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    29e3:	00 00                	add    BYTE PTR [rax],al
    29e5:	29 0b                	sub    DWORD PTR [rbx],ecx
    29e7:	01 11                	add    DWORD PTR [rcx],edx
    29e9:	01 12                	add    DWORD PTR [rdx],edx
    29eb:	07                   	(bad)  
    29ec:	00 00                	add    BYTE PTR [rax],al
    29ee:	2a 34 00             	sub    dh,BYTE PTR [rax+rax*1]
    29f1:	03 08                	add    ecx,DWORD PTR [rax]
    29f3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    29f5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    29f7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    29f9:	49 13 02             	adc    rax,QWORD PTR [r10]
    29fc:	18 00                	sbb    BYTE PTR [rax],al
    29fe:	00 2b                	add    BYTE PTR [rbx],ch
    2a00:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2a03:	19 03                	sbb    DWORD PTR [rbx],eax
    2a05:	0e                   	(bad)  
    2a06:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2a08:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2a0a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2a0c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a0d:	0e                   	(bad)  
    2a0e:	49 13 11             	adc    rdx,QWORD PTR [r9]
    2a11:	01 12                	add    DWORD PTR [rdx],edx
    2a13:	07                   	(bad)  
    2a14:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    2a1b:	00 01                	add    BYTE PTR [rcx],al
    2a1d:	11 01                	adc    DWORD PTR [rcx],eax
    2a1f:	25 0e 13 0b 03       	and    eax,0x30b130e
    2a24:	0e                   	(bad)  
    2a25:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    2a27:	11 01                	adc    DWORD PTR [rcx],eax
    2a29:	12 07                	adc    al,BYTE PTR [rdi]
    2a2b:	10 17                	adc    BYTE PTR [rdi],dl
    2a2d:	00 00                	add    BYTE PTR [rax],al
    2a2f:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    2a32:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2a34:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    2a37:	0e                   	(bad)  
    2a38:	00 00                	add    BYTE PTR [rax],al
    2a3a:	03 3b                	add    edi,DWORD PTR [rbx]
    2a3c:	00 03                	add    BYTE PTR [rbx],al
    2a3e:	0e                   	(bad)  
    2a3f:	00 00                	add    BYTE PTR [rax],al
    2a41:	04 16                	add    al,0x16
    2a43:	00 03                	add    BYTE PTR [rbx],al
    2a45:	0e                   	(bad)  
    2a46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2a48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2a4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2a4c:	49 13 00             	adc    rax,QWORD PTR [r8]
    2a4f:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b2a79 <__kernel_end+0xaea0a79>
    2a55:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    2a58:	08 00                	or     BYTE PTR [rax],al
    2a5a:	00 06                	add    BYTE PTR [rsi],al
    2a5c:	39 01                	cmp    DWORD PTR [rcx],eax
    2a5e:	03 08                	add    ecx,DWORD PTR [rax]
    2a60:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2a62:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2a64:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2a66:	01 13                	add    DWORD PTR [rbx],edx
    2a68:	00 00                	add    BYTE PTR [rax],al
    2a6a:	07                   	(bad)  
    2a6b:	39 01                	cmp    DWORD PTR [rcx],eax
    2a6d:	03 0e                	add    ecx,DWORD PTR [rsi]
    2a6f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2a71:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2a73:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2a75:	01 13                	add    DWORD PTR [rbx],edx
    2a77:	00 00                	add    BYTE PTR [rax],al
    2a79:	08 13                	or     BYTE PTR [rbx],dl
    2a7b:	01 03                	add    DWORD PTR [rbx],eax
    2a7d:	0e                   	(bad)  
    2a7e:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2a80:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2a82:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2a84:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2a86:	01 13                	add    DWORD PTR [rbx],edx
    2a88:	00 00                	add    BYTE PTR [rax],al
    2a8a:	09 0d 00 03 0e 3a    	or     DWORD PTR [rip+0x3a0e0300],ecx        # 3a0e2d90 <__kernel_end+0x39ed0d90>
    2a90:	0b 3b                	or     edi,DWORD PTR [rbx]
    2a92:	0b 39                	or     edi,DWORD PTR [rcx]
    2a94:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2a97:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2a99:	0d 0b 0c 0b 38       	or     eax,0x380b0c0b
    2a9e:	0b 00                	or     eax,DWORD PTR [rax]
    2aa0:	00 0a                	add    BYTE PTR [rdx],cl
    2aa2:	34 00                	xor    al,0x0
    2aa4:	03 0e                	add    ecx,DWORD PTR [rsi]
    2aa6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2aa8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2aaa:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2aac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aad:	0e                   	(bad)  
    2aae:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2ab1:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    2ab4:	00 00                	add    BYTE PTR [rax],al
    2ab6:	0b 2e                	or     ebp,DWORD PTR [rsi]
    2ab8:	00 3f                	add    BYTE PTR [rdi],bh
    2aba:	19 03                	sbb    DWORD PTR [rbx],eax
    2abc:	0e                   	(bad)  
    2abd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2abf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2ac1:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2ac3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ac4:	0e                   	(bad)  
    2ac5:	3c 19                	cmp    al,0x19
    2ac7:	00 00                	add    BYTE PTR [rax],al
    2ac9:	0c 2e                	or     al,0x2e
    2acb:	01 3f                	add    DWORD PTR [rdi],edi
    2acd:	19 03                	sbb    DWORD PTR [rbx],eax
    2acf:	0e                   	(bad)  
    2ad0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2ad2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2ad4:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2ad6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ad7:	0e                   	(bad)  
    2ad8:	3c 19                	cmp    al,0x19
    2ada:	01 13                	add    DWORD PTR [rbx],edx
    2adc:	00 00                	add    BYTE PTR [rax],al
    2ade:	0d 05 00 49 13       	or     eax,0x13490005
    2ae3:	00 00                	add    BYTE PTR [rax],al
    2ae5:	0e                   	(bad)  
    2ae6:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2ae9:	19 03                	sbb    DWORD PTR [rbx],eax
    2aeb:	0e                   	(bad)  
    2aec:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2aee:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2af0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2af2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2af3:	0e                   	(bad)  
    2af4:	3c 19                	cmp    al,0x19
    2af6:	00 00                	add    BYTE PTR [rax],al
    2af8:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    2afb:	03 08                	add    ecx,DWORD PTR [rax]
    2afd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2aff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2b01:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2b03:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    2b07:	00 00                	add    BYTE PTR [rax],al
    2b09:	10 01                	adc    BYTE PTR [rcx],al
    2b0b:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    2b0e:	01 13                	add    DWORD PTR [rbx],edx
    2b10:	00 00                	add    BYTE PTR [rax],al
    2b12:	11 21                	adc    DWORD PTR [rcx],esp
    2b14:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    2b17:	2f                   	(bad)  
    2b18:	0b 00                	or     eax,DWORD PTR [rax]
    2b1a:	00 12                	add    BYTE PTR [rdx],dl
    2b1c:	0f 00 0b             	str    WORD PTR [rbx]
    2b1f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2b22:	00 00                	add    BYTE PTR [rax],al
    2b24:	13 15 01 01 13 00    	adc    edx,DWORD PTR [rip+0x130101]        # 132c2b <stivale_hdr-0xcd3d5>
    2b2a:	00 14 34             	add    BYTE PTR [rsp+rsi*1],dl
    2b2d:	00 03                	add    BYTE PTR [rbx],al
    2b2f:	0e                   	(bad)  
    2b30:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2b32:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2b34:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2b36:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2b39:	19 02                	sbb    DWORD PTR [rdx],eax
    2b3b:	18 00                	sbb    BYTE PTR [rax],al
    2b3d:	00 15 34 00 47 13    	add    BYTE PTR [rip+0x13470034],dl        # 13472b77 <__kernel_end+0x13260b77>
    2b43:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2b45:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2b47:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2b49:	02 18                	add    bl,BYTE PTR [rax]
    2b4b:	00 00                	add    BYTE PTR [rax],al
    2b4d:	16                   	(bad)  
    2b4e:	2e 00 47 13          	add    BYTE PTR cs:[rdi+0x13],al
    2b52:	11 01                	adc    DWORD PTR [rcx],eax
    2b54:	12 07                	adc    al,BYTE PTR [rdi]
    2b56:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    2b5d:	17                   	(bad)  
    2b5e:	2e 01 3f             	add    DWORD PTR cs:[rdi],edi
    2b61:	19 03                	sbb    DWORD PTR [rbx],eax
    2b63:	0e                   	(bad)  
    2b64:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2b66:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2b68:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2b6a:	11 01                	adc    DWORD PTR [rcx],eax
    2b6c:	12 07                	adc    al,BYTE PTR [rdi]
    2b6e:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2b75:	00 00                	add    BYTE PTR [rax],al
    2b77:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
    2b7a:	03 0e                	add    ecx,DWORD PTR [rsi]
    2b7c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2b7e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2b80:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2b82:	49 13 02             	adc    rax,QWORD PTR [r10]
    2b85:	18 00                	sbb    BYTE PTR [rax],al
    2b87:	00 19                	add    BYTE PTR [rcx],bl
    2b89:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2b8d:	11 01                	adc    DWORD PTR [rcx],eax
    2b8f:	12 07                	adc    al,BYTE PTR [rdi]
    2b91:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    2b98:	00 00                	add    BYTE PTR [rax],al
    2b9a:	1a 05 00 03 0e 3a    	sbb    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e2ea0 <__kernel_end+0x39ed0ea0>
    2ba0:	0b 3b                	or     edi,DWORD PTR [rbx]
    2ba2:	0b 39                	or     edi,DWORD PTR [rcx]
    2ba4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2ba7:	02 18                	add    bl,BYTE PTR [rax]
    2ba9:	00 00                	add    BYTE PTR [rax],al
    2bab:	1b 0b                	sbb    ecx,DWORD PTR [rbx]
    2bad:	01 11                	add    DWORD PTR [rcx],edx
    2baf:	01 12                	add    DWORD PTR [rdx],edx
    2bb1:	07                   	(bad)  
    2bb2:	01 13                	add    DWORD PTR [rbx],edx
    2bb4:	00 00                	add    BYTE PTR [rax],al
    2bb6:	1c 34                	sbb    al,0x34
    2bb8:	00 03                	add    BYTE PTR [rbx],al
    2bba:	08 3a                	or     BYTE PTR [rdx],bh
    2bbc:	0b 3b                	or     edi,DWORD PTR [rbx]
    2bbe:	0b 39                	or     edi,DWORD PTR [rcx]
    2bc0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2bc3:	02 18                	add    bl,BYTE PTR [rax]
    2bc5:	00 00                	add    BYTE PTR [rax],al
    2bc7:	1d 0b 01 11 01       	sbb    eax,0x111010b
    2bcc:	12 07                	adc    al,BYTE PTR [rdi]
    2bce:	00 00                	add    BYTE PTR [rax],al
    2bd0:	1e                   	(bad)  
    2bd1:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2bd5:	11 01                	adc    DWORD PTR [rcx],eax
    2bd7:	12 07                	adc    al,BYTE PTR [rdi]
    2bd9:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2be0:	00 00                	add    BYTE PTR [rax],al
    2be2:	1f                   	(bad)  
    2be3:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2be7:	11 01                	adc    DWORD PTR [rcx],eax
    2be9:	12 07                	adc    al,BYTE PTR [rdi]
    2beb:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    2bf2:	00 01                	add    BYTE PTR [rcx],al
    2bf4:	11 01                	adc    DWORD PTR [rcx],eax
    2bf6:	25 0e 13 0b 03       	and    eax,0x30b130e
    2bfb:	0e                   	(bad)  
    2bfc:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    2bfe:	11 01                	adc    DWORD PTR [rcx],eax
    2c00:	12 07                	adc    al,BYTE PTR [rdi]
    2c02:	10 17                	adc    BYTE PTR [rdi],dl
    2c04:	00 00                	add    BYTE PTR [rax],al
    2c06:	02 24 00             	add    ah,BYTE PTR [rax+rax*1]
    2c09:	0b 0b                	or     ecx,DWORD PTR [rbx]
    2c0b:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    2c0e:	0e                   	(bad)  
    2c0f:	00 00                	add    BYTE PTR [rax],al
    2c11:	03 3b                	add    edi,DWORD PTR [rbx]
    2c13:	00 03                	add    BYTE PTR [rbx],al
    2c15:	0e                   	(bad)  
    2c16:	00 00                	add    BYTE PTR [rax],al
    2c18:	04 16                	add    al,0x16
    2c1a:	00 03                	add    BYTE PTR [rbx],al
    2c1c:	0e                   	(bad)  
    2c1d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c1f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c21:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c23:	49 13 00             	adc    rax,QWORD PTR [r8]
    2c26:	00 05 24 00 0b 0b    	add    BYTE PTR [rip+0xb0b0024],al        # b0b2c50 <__kernel_end+0xaea0c50>
    2c2c:	3e 0b 03             	or     eax,DWORD PTR ds:[rbx]
    2c2f:	08 00                	or     BYTE PTR [rax],al
    2c31:	00 06                	add    BYTE PTR [rsi],al
    2c33:	01 01                	add    DWORD PTR [rcx],eax
    2c35:	49 13 01             	adc    rax,QWORD PTR [r9]
    2c38:	13 00                	adc    eax,DWORD PTR [rax]
    2c3a:	00 07                	add    BYTE PTR [rdi],al
    2c3c:	21 00                	and    DWORD PTR [rax],eax
    2c3e:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    2c41:	05 00 00 08 26       	add    eax,0x26080000
    2c46:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    2c49:	00 00                	add    BYTE PTR [rax],al
    2c4b:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    2c4e:	03 0e                	add    ecx,DWORD PTR [rsi]
    2c50:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c52:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c54:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c56:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    2c59:	19 02                	sbb    DWORD PTR [rdx],eax
    2c5b:	18 00                	sbb    BYTE PTR [rax],al
    2c5d:	00 0a                	add    BYTE PTR [rdx],cl
    2c5f:	39 01                	cmp    DWORD PTR [rcx],eax
    2c61:	03 08                	add    ecx,DWORD PTR [rax]
    2c63:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c65:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c67:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c69:	01 13                	add    DWORD PTR [rbx],edx
    2c6b:	00 00                	add    BYTE PTR [rax],al
    2c6d:	0b 39                	or     edi,DWORD PTR [rcx]
    2c6f:	01 03                	add    DWORD PTR [rbx],eax
    2c71:	0e                   	(bad)  
    2c72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c76:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c78:	01 13                	add    DWORD PTR [rbx],edx
    2c7a:	00 00                	add    BYTE PTR [rax],al
    2c7c:	0c 2e                	or     al,0x2e
    2c7e:	00 3f                	add    BYTE PTR [rdi],bh
    2c80:	19 03                	sbb    DWORD PTR [rbx],eax
    2c82:	0e                   	(bad)  
    2c83:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c85:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c87:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c8a:	0e                   	(bad)  
    2c8b:	3c 19                	cmp    al,0x19
    2c8d:	00 00                	add    BYTE PTR [rax],al
    2c8f:	0d 2e 01 3f 19       	or     eax,0x193f012e
    2c94:	03 0e                	add    ecx,DWORD PTR [rsi]
    2c96:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2c98:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2c9a:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2c9c:	3c 19                	cmp    al,0x19
    2c9e:	01 13                	add    DWORD PTR [rbx],edx
    2ca0:	00 00                	add    BYTE PTR [rax],al
    2ca2:	0e                   	(bad)  
    2ca3:	05 00 49 13 00       	add    eax,0x134900
    2ca8:	00 0f                	add    BYTE PTR [rdi],cl
    2caa:	2e 01 03             	add    DWORD PTR cs:[rbx],eax
    2cad:	0e                   	(bad)  
    2cae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2cb0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2cb2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2cb4:	3c 19                	cmp    al,0x19
    2cb6:	00 00                	add    BYTE PTR [rax],al
    2cb8:	10 2e                	adc    BYTE PTR [rsi],ch
    2cba:	01 03                	add    DWORD PTR [rbx],eax
    2cbc:	08 3a                	or     BYTE PTR [rdx],bh
    2cbe:	0b 3b                	or     edi,DWORD PTR [rbx]
    2cc0:	0b 39                	or     edi,DWORD PTR [rcx]
    2cc2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2cc5:	3c 19                	cmp    al,0x19
    2cc7:	01 13                	add    DWORD PTR [rbx],edx
    2cc9:	00 00                	add    BYTE PTR [rax],al
    2ccb:	11 2e                	adc    DWORD PTR [rsi],ebp
    2ccd:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    2cd0:	11 01                	adc    DWORD PTR [rcx],eax
    2cd2:	12 07                	adc    al,BYTE PTR [rdi]
    2cd4:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    2cdb:	12 2e                	adc    ch,BYTE PTR [rsi]
    2cdd:	01 3f                	add    DWORD PTR [rdi],edi
    2cdf:	19 03                	sbb    DWORD PTR [rbx],eax
    2ce1:	0e                   	(bad)  
    2ce2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2ce4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2ce6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2ce8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ce9:	0e                   	(bad)  
    2cea:	11 01                	adc    DWORD PTR [rcx],eax
    2cec:	12 07                	adc    al,BYTE PTR [rdi]
    2cee:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    2cf5:	00 00                	add    BYTE PTR [rax],al
    2cf7:	13 0b                	adc    ecx,DWORD PTR [rbx]
    2cf9:	01 11                	add    DWORD PTR [rcx],edx
    2cfb:	01 12                	add    DWORD PTR [rdx],edx
    2cfd:	07                   	(bad)  
    2cfe:	00 00                	add    BYTE PTR [rax],al
    2d00:	14 34                	adc    al,0x34
    2d02:	00 03                	add    BYTE PTR [rbx],al
    2d04:	08 3a                	or     BYTE PTR [rdx],bh
    2d06:	0b 3b                	or     edi,DWORD PTR [rbx]
    2d08:	0b 39                	or     edi,DWORD PTR [rcx]
    2d0a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2d0d:	02 18                	add    bl,BYTE PTR [rax]
    2d0f:	00 00                	add    BYTE PTR [rax],al
    2d11:	15 2e 00 3f 19       	adc    eax,0x193f002e
    2d16:	03 0e                	add    ecx,DWORD PTR [rsi]
    2d18:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    2d1a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    2d1c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    2d1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d1f:	0e                   	(bad)  
    2d20:	11 01                	adc    DWORD PTR [rcx],eax
    2d22:	12 07                	adc    al,BYTE PTR [rdi]
    2d24:	40 18 96 42 19 00 00 	sbb    BYTE PTR [rsi+0x1942],dl
    2d2b:	16                   	(bad)  
    2d2c:	0f 00 0b             	str    WORD PTR [rbx]
    2d2f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2d32:	00 00                	add    BYTE PTR [rax],al
    2d34:	17                   	(bad)  
    2d35:	2e 01 47 13          	add    DWORD PTR cs:[rdi+0x13],eax
    2d39:	11 01                	adc    DWORD PTR [rcx],eax
    2d3b:	12 07                	adc    al,BYTE PTR [rdi]
    2d3d:	40 18 96 42 19 01 13 	sbb    BYTE PTR [rsi+0x13011942],dl
    2d44:	00 00                	add    BYTE PTR [rax],al
    2d46:	18 05 00 03 08 3a    	sbb    BYTE PTR [rip+0x3a080300],al        # 3a08304c <__kernel_end+0x39e7104c>
    2d4c:	0b 3b                	or     edi,DWORD PTR [rbx]
    2d4e:	0b 39                	or     edi,DWORD PTR [rcx]
    2d50:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2d53:	02 18                	add    bl,BYTE PTR [rax]
    2d55:	00 00                	add    BYTE PTR [rax],al
    2d57:	19 2e                	sbb    DWORD PTR [rsi],ebp
    2d59:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    2d5c:	11 01                	adc    DWORD PTR [rcx],eax
    2d5e:	12 07                	adc    al,BYTE PTR [rdi]
    2d60:	40 18 97 42 19 01 13 	sbb    BYTE PTR [rdi+0x13011942],dl
    2d67:	00 00                	add    BYTE PTR [rax],al
    2d69:	1a 05 00 03 0e 3a    	sbb    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e306f <__kernel_end+0x39ed106f>
    2d6f:	0b 3b                	or     edi,DWORD PTR [rbx]
    2d71:	0b 39                	or     edi,DWORD PTR [rcx]
    2d73:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    2d76:	02 18                	add    bl,BYTE PTR [rax]
    2d78:	00 00                	add    BYTE PTR [rax],al
    2d7a:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    2d7c:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    2d7f:	11 01                	adc    DWORD PTR [rcx],eax
    2d81:	12 07                	adc    al,BYTE PTR [rdi]
    2d83:	40 18 97 42 19 00 00 	sbb    BYTE PTR [rdi+0x1942],dl
    2d8a:	00 01                	add    BYTE PTR [rcx],al
    2d8c:	11 01                	adc    DWORD PTR [rcx],eax
    2d8e:	11 01                	adc    DWORD PTR [rcx],eax
    2d90:	12 01                	adc    al,BYTE PTR [rcx]
    2d92:	10 06                	adc    BYTE PTR [rsi],al
    2d94:	03 08                	add    ecx,DWORD PTR [rax]
    2d96:	25 08 13 05 00       	and    eax,0x51308
    2d9b:	00 02                	add    BYTE PTR [rdx],al
    2d9d:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2da0:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2da3:	00 00                	add    BYTE PTR [rax],al
    2da5:	00 01                	add    BYTE PTR [rcx],al
    2da7:	11 01                	adc    DWORD PTR [rcx],eax
    2da9:	11 01                	adc    DWORD PTR [rcx],eax
    2dab:	12 01                	adc    al,BYTE PTR [rcx]
    2dad:	10 06                	adc    BYTE PTR [rsi],al
    2daf:	03 08                	add    ecx,DWORD PTR [rax]
    2db1:	25 08 13 05 00       	and    eax,0x51308
    2db6:	00 02                	add    BYTE PTR [rdx],al
    2db8:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2dbb:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2dbe:	00 00                	add    BYTE PTR [rax],al
    2dc0:	00 01                	add    BYTE PTR [rcx],al
    2dc2:	11 01                	adc    DWORD PTR [rcx],eax
    2dc4:	11 01                	adc    DWORD PTR [rcx],eax
    2dc6:	12 01                	adc    al,BYTE PTR [rcx]
    2dc8:	10 06                	adc    BYTE PTR [rsi],al
    2dca:	03 08                	add    ecx,DWORD PTR [rax]
    2dcc:	25 08 13 05 00       	and    eax,0x51308
    2dd1:	00 02                	add    BYTE PTR [rdx],al
    2dd3:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2dd6:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2dd9:	00 00                	add    BYTE PTR [rax],al
    2ddb:	00 01                	add    BYTE PTR [rcx],al
    2ddd:	11 01                	adc    DWORD PTR [rcx],eax
    2ddf:	11 01                	adc    DWORD PTR [rcx],eax
    2de1:	12 01                	adc    al,BYTE PTR [rcx]
    2de3:	10 06                	adc    BYTE PTR [rsi],al
    2de5:	03 08                	add    ecx,DWORD PTR [rax]
    2de7:	25 08 13 05 00       	and    eax,0x51308
    2dec:	00 02                	add    BYTE PTR [rdx],al
    2dee:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2df1:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2df4:	00 00                	add    BYTE PTR [rax],al
    2df6:	00 01                	add    BYTE PTR [rcx],al
    2df8:	11 01                	adc    DWORD PTR [rcx],eax
    2dfa:	11 01                	adc    DWORD PTR [rcx],eax
    2dfc:	12 01                	adc    al,BYTE PTR [rcx]
    2dfe:	10 06                	adc    BYTE PTR [rsi],al
    2e00:	03 08                	add    ecx,DWORD PTR [rax]
    2e02:	25 08 13 05 00       	and    eax,0x51308
    2e07:	00 02                	add    BYTE PTR [rdx],al
    2e09:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2e0c:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2e0f:	00 00                	add    BYTE PTR [rax],al
    2e11:	00 01                	add    BYTE PTR [rcx],al
    2e13:	11 01                	adc    DWORD PTR [rcx],eax
    2e15:	11 01                	adc    DWORD PTR [rcx],eax
    2e17:	12 01                	adc    al,BYTE PTR [rcx]
    2e19:	10 06                	adc    BYTE PTR [rsi],al
    2e1b:	03 08                	add    ecx,DWORD PTR [rax]
    2e1d:	25 08 13 05 00       	and    eax,0x51308
    2e22:	00 02                	add    BYTE PTR [rdx],al
    2e24:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2e27:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2e2a:	00 00                	add    BYTE PTR [rax],al
    2e2c:	00 01                	add    BYTE PTR [rcx],al
    2e2e:	11 01                	adc    DWORD PTR [rcx],eax
    2e30:	11 01                	adc    DWORD PTR [rcx],eax
    2e32:	12 01                	adc    al,BYTE PTR [rcx]
    2e34:	10 06                	adc    BYTE PTR [rsi],al
    2e36:	03 08                	add    ecx,DWORD PTR [rax]
    2e38:	25 08 13 05 00       	and    eax,0x51308
    2e3d:	00 02                	add    BYTE PTR [rdx],al
    2e3f:	2e 00 11             	add    BYTE PTR cs:[rcx],dl
    2e42:	01 40 06             	add    DWORD PTR [rax+0x6],eax
    2e45:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
	...
  20:	2c 00                	sub    al,0x0
  22:	00 00                	add    BYTE PTR [rax],al
  24:	02 00                	add    al,BYTE PTR [rax]
  26:	35 01 00 00 08       	xor    eax,0x8000001
  2b:	00 00                	add    BYTE PTR [rax],al
  2d:	00 00                	add    BYTE PTR [rax],al
  2f:	00 00                	add    BYTE PTR [rax],al
  31:	10 20                	adc    BYTE PTR [rax],ah
  33:	00 00                	add    BYTE PTR [rax],al
  35:	00 00                	add    BYTE PTR [rax],al
  37:	00 88 00 00 00 00    	add    BYTE PTR [rax+0x0],cl
	...
  4d:	00 00                	add    BYTE PTR [rax],al
  4f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  52:	00 00                	add    BYTE PTR [rax],al
  54:	02 00                	add    al,BYTE PTR [rax]
  56:	88 05 00 00 08 00    	mov    BYTE PTR [rip+0x80000],al        # 8005c <stivale_hdr-0x17ffa4>
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	88 10                	mov    BYTE PTR [rax],dl
  62:	20 00                	and    BYTE PTR [rax],al
  64:	00 00                	add    BYTE PTR [rax],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	16                   	(bad)  
  69:	03 00                	add    eax,DWORD PTR [rax]
	...
  7f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  82:	00 00                	add    BYTE PTR [rax],al
  84:	02 00                	add    al,BYTE PTR [rax]
  86:	e8 0c 00 00 08       	call   8000097 <__kernel_end+0x7dee097>
  8b:	00 00                	add    BYTE PTR [rax],al
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 9e 13 20 00 00    	add    BYTE PTR [rsi+0x2013],bl
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 ac 02 00 00 00 00 	add    BYTE PTR [rdx+rax*1+0x0],ch
	...
  ae:	00 00                	add    BYTE PTR [rax],al
  b0:	2c 00                	sub    al,0x0
  b2:	00 00                	add    BYTE PTR [rax],al
  b4:	02 00                	add    al,BYTE PTR [rax]
  b6:	7a 11                	jp     c9 <stivale_hdr-0x1fff37>
  b8:	00 00                	add    BYTE PTR [rax],al
  ba:	08 00                	or     BYTE PTR [rax],al
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	4a 16                	rex.WX (bad) 
  c2:	20 00                	and    BYTE PTR [rax],al
  c4:	00 00                	add    BYTE PTR [rax],al
  c6:	00 00                	add    BYTE PTR [rax],al
  c8:	ca 02 00             	retf   0x2
	...
  df:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  e2:	00 00                	add    BYTE PTR [rax],al
  e4:	02 00                	add    al,BYTE PTR [rax]
  e6:	5a                   	pop    rdx
  e7:	16                   	(bad)  
  e8:	00 00                	add    BYTE PTR [rax],al
  ea:	08 00                	or     BYTE PTR [rax],al
  ec:	00 00                	add    BYTE PTR [rax],al
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	14 19                	adc    al,0x19
  f2:	20 00                	and    BYTE PTR [rax],al
  f4:	00 00                	add    BYTE PTR [rax],al
  f6:	00 00                	add    BYTE PTR [rax],al
  f8:	d3 0a                	ror    DWORD PTR [rdx],cl
	...
 10e:	00 00                	add    BYTE PTR [rax],al
 110:	2c 00                	sub    al,0x0
 112:	00 00                	add    BYTE PTR [rax],al
 114:	02 00                	add    al,BYTE PTR [rax]
 116:	8f                   	(bad)  
 117:	1c 00                	sbb    al,0x0
 119:	00 08                	add    BYTE PTR [rax],cl
 11b:	00 00                	add    BYTE PTR [rax],al
 11d:	00 00                	add    BYTE PTR [rax],al
 11f:	00 e8                	add    al,ch
 121:	23 20                	and    esp,DWORD PTR [rax]
 123:	00 00                	add    BYTE PTR [rax],al
 125:	00 00                	add    BYTE PTR [rax],al
 127:	00 0c 03             	add    BYTE PTR [rbx+rax*1],cl
	...
 13e:	00 00                	add    BYTE PTR [rax],al
 140:	2c 00                	sub    al,0x0
 142:	00 00                	add    BYTE PTR [rax],al
 144:	02 00                	add    al,BYTE PTR [rax]
 146:	f3 1f                	repz (bad) 
 148:	00 00                	add    BYTE PTR [rax],al
 14a:	08 00                	or     BYTE PTR [rax],al
 14c:	00 00                	add    BYTE PTR [rax],al
 14e:	00 00                	add    BYTE PTR [rax],al
 150:	f4                   	hlt    
 151:	26 20 00             	and    BYTE PTR es:[rax],al
 154:	00 00                	add    BYTE PTR [rax],al
 156:	00 00                	add    BYTE PTR [rax],al
 158:	55                   	push   rbp
 159:	08 00                	or     BYTE PTR [rax],al
	...
 16f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 172:	00 00                	add    BYTE PTR [rax],al
 174:	02 00                	add    al,BYTE PTR [rax]
 176:	41 29 00             	sub    DWORD PTR [r8],eax
 179:	00 08                	add    BYTE PTR [rax],cl
 17b:	00 00                	add    BYTE PTR [rax],al
 17d:	00 00                	add    BYTE PTR [rax],al
 17f:	00 49 2f             	add    BYTE PTR [rcx+0x2f],cl
 182:	20 00                	and    BYTE PTR [rax],al
 184:	00 00                	add    BYTE PTR [rax],al
 186:	00 00                	add    BYTE PTR [rax],al
 188:	8e 00                	mov    es,WORD PTR [rax]
	...
 19e:	00 00                	add    BYTE PTR [rax],al
 1a0:	2c 00                	sub    al,0x0
 1a2:	00 00                	add    BYTE PTR [rax],al
 1a4:	02 00                	add    al,BYTE PTR [rax]
 1a6:	17                   	(bad)  
 1a7:	2b 00                	sub    eax,DWORD PTR [rax]
 1a9:	00 08                	add    BYTE PTR [rax],cl
 1ab:	00 00                	add    BYTE PTR [rax],al
 1ad:	00 00                	add    BYTE PTR [rax],al
 1af:	00 d8                	add    al,bl
 1b1:	2f                   	(bad)  
 1b2:	20 00                	and    BYTE PTR [rax],al
 1b4:	00 00                	add    BYTE PTR [rax],al
 1b6:	00 00                	add    BYTE PTR [rax],al
 1b8:	8e 07                	mov    es,WORD PTR [rdi]
	...
 1ce:	00 00                	add    BYTE PTR [rax],al
 1d0:	2c 00                	sub    al,0x0
 1d2:	00 00                	add    BYTE PTR [rax],al
 1d4:	02 00                	add    al,BYTE PTR [rax]
 1d6:	8d 31                	lea    esi,[rcx]
 1d8:	00 00                	add    BYTE PTR [rax],al
 1da:	08 00                	or     BYTE PTR [rax],al
 1dc:	00 00                	add    BYTE PTR [rax],al
 1de:	00 00                	add    BYTE PTR [rax],al
 1e0:	66 37                	data16 (bad) 
 1e2:	20 00                	and    BYTE PTR [rax],al
 1e4:	00 00                	add    BYTE PTR [rax],al
 1e6:	00 00                	add    BYTE PTR [rax],al
 1e8:	0a 01                	or     al,BYTE PTR [rcx]
	...
 1fe:	00 00                	add    BYTE PTR [rax],al
 200:	2c 00                	sub    al,0x0
 202:	00 00                	add    BYTE PTR [rax],al
 204:	02 00                	add    al,BYTE PTR [rax]
 206:	21 34 00             	and    DWORD PTR [rax+rax*1],esi
 209:	00 08                	add    BYTE PTR [rax],cl
 20b:	00 00                	add    BYTE PTR [rax],al
 20d:	00 00                	add    BYTE PTR [rax],al
 20f:	00 70 38             	add    BYTE PTR [rax+0x38],dh
 212:	20 00                	and    BYTE PTR [rax],al
 214:	00 00                	add    BYTE PTR [rax],al
 216:	00 00                	add    BYTE PTR [rax],al
 218:	f2 00 00             	repnz add BYTE PTR [rax],al
	...
 22f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 232:	00 00                	add    BYTE PTR [rax],al
 234:	02 00                	add    al,BYTE PTR [rax]
 236:	b0 37                	mov    al,0x37
 238:	00 00                	add    BYTE PTR [rax],al
 23a:	08 00                	or     BYTE PTR [rax],al
 23c:	00 00                	add    BYTE PTR [rax],al
 23e:	00 00                	add    BYTE PTR [rax],al
 240:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
 246:	00 00                	add    BYTE PTR [rax],al
 248:	99                   	cdq    
	...
 25d:	00 00                	add    BYTE PTR [rax],al
 25f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 262:	00 00                	add    BYTE PTR [rax],al
 264:	02 00                	add    al,BYTE PTR [rax]
 266:	8c 3a                	mov    WORD PTR [rdx],?
 268:	00 00                	add    BYTE PTR [rax],al
 26a:	08 00                	or     BYTE PTR [rax],al
 26c:	00 00                	add    BYTE PTR [rax],al
 26e:	00 00                	add    BYTE PTR [rax],al
 270:	99                   	cdq    
 271:	90                   	nop
 272:	20 00                	and    BYTE PTR [rax],al
 274:	00 00                	add    BYTE PTR [rax],al
 276:	00 00                	add    BYTE PTR [rax],al
 278:	58                   	pop    rax
	...
 28d:	00 00                	add    BYTE PTR [rax],al
 28f:	00 fc                	add    ah,bh
 291:	00 00                	add    BYTE PTR [rax],al
 293:	00 02                	add    BYTE PTR [rdx],al
 295:	00 37                	add    BYTE PTR [rdi],dh
 297:	3d 00 00 08 00       	cmp    eax,0x80000
 29c:	00 00                	add    BYTE PTR [rax],al
 29e:	00 00                	add    BYTE PTR [rax],al
 2a0:	f1                   	icebp  
 2a1:	90                   	nop
 2a2:	20 00                	and    BYTE PTR [rax],al
 2a4:	00 00                	add    BYTE PTR [rax],al
 2a6:	00 00                	add    BYTE PTR [rax],al
 2a8:	79 00                	jns    2aa <stivale_hdr-0x1ffd56>
 2aa:	00 00                	add    BYTE PTR [rax],al
 2ac:	00 00                	add    BYTE PTR [rax],al
 2ae:	00 00                	add    BYTE PTR [rax],al
 2b0:	6a 91                	push   0xffffffffffffff91
 2b2:	20 00                	and    BYTE PTR [rax],al
 2b4:	00 00                	add    BYTE PTR [rax],al
 2b6:	00 00                	add    BYTE PTR [rax],al
 2b8:	61                   	(bad)  
 2b9:	00 00                	add    BYTE PTR [rax],al
 2bb:	00 00                	add    BYTE PTR [rax],al
 2bd:	00 00                	add    BYTE PTR [rax],al
 2bf:	00 cb                	add    bl,cl
 2c1:	91                   	xchg   ecx,eax
 2c2:	20 00                	and    BYTE PTR [rax],al
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	00 00                	add    BYTE PTR [rax],al
 2c8:	16                   	(bad)  
 2c9:	00 00                	add    BYTE PTR [rax],al
 2cb:	00 00                	add    BYTE PTR [rax],al
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	00 e1                	add    cl,ah
 2d1:	91                   	xchg   ecx,eax
 2d2:	20 00                	and    BYTE PTR [rax],al
 2d4:	00 00                	add    BYTE PTR [rax],al
 2d6:	00 00                	add    BYTE PTR [rax],al
 2d8:	1e                   	(bad)  
 2d9:	00 00                	add    BYTE PTR [rax],al
 2db:	00 00                	add    BYTE PTR [rax],al
 2dd:	00 00                	add    BYTE PTR [rax],al
 2df:	00 ff                	add    bh,bh
 2e1:	91                   	xchg   ecx,eax
 2e2:	20 00                	and    BYTE PTR [rax],al
 2e4:	00 00                	add    BYTE PTR [rax],al
 2e6:	00 00                	add    BYTE PTR [rax],al
 2e8:	16                   	(bad)  
 2e9:	00 00                	add    BYTE PTR [rax],al
 2eb:	00 00                	add    BYTE PTR [rax],al
 2ed:	00 00                	add    BYTE PTR [rax],al
 2ef:	00 15 92 20 00 00    	add    BYTE PTR [rip+0x2092],dl        # 2387 <stivale_hdr-0x1fdc79>
 2f5:	00 00                	add    BYTE PTR [rax],al
 2f7:	00 21                	add    BYTE PTR [rcx],ah
 2f9:	00 00                	add    BYTE PTR [rax],al
 2fb:	00 00                	add    BYTE PTR [rax],al
 2fd:	00 00                	add    BYTE PTR [rax],al
 2ff:	00 36                	add    BYTE PTR [rsi],dh
 301:	92                   	xchg   edx,eax
 302:	20 00                	and    BYTE PTR [rax],al
 304:	00 00                	add    BYTE PTR [rax],al
 306:	00 00                	add    BYTE PTR [rax],al
 308:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
 30b:	00 00                	add    BYTE PTR [rax],al
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 83 92 20 00 00    	add    BYTE PTR [rbx+0x2092],al
 315:	00 00                	add    BYTE PTR [rax],al
 317:	00 ed                	add    ch,ch
 319:	00 00                	add    BYTE PTR [rax],al
 31b:	00 00                	add    BYTE PTR [rax],al
 31d:	00 00                	add    BYTE PTR [rax],al
 31f:	00 70 93             	add    BYTE PTR [rax-0x6d],dh
 322:	20 00                	and    BYTE PTR [rax],al
 324:	00 00                	add    BYTE PTR [rax],al
 326:	00 00                	add    BYTE PTR [rax],al
 328:	b3 00                	mov    bl,0x0
 32a:	00 00                	add    BYTE PTR [rax],al
 32c:	00 00                	add    BYTE PTR [rax],al
 32e:	00 00                	add    BYTE PTR [rax],al
 330:	23 94 20 00 00 00 00 	and    edx,DWORD PTR [rax+riz*1+0x0]
 337:	00 48 00             	add    BYTE PTR [rax+0x0],cl
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	00 00                	add    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	6b 94 20 00 00 00 00 	imul   edx,DWORD PTR [rax+riz*1+0x0],0x0
 347:	00 
 348:	ba 00 00 00 00       	mov    edx,0x0
 34d:	00 00                	add    BYTE PTR [rax],al
 34f:	00 25 95 20 00 00    	add    BYTE PTR [rip+0x2095],ah        # 23ea <stivale_hdr-0x1fdc16>
 355:	00 00                	add    BYTE PTR [rax],al
 357:	00 99 01 00 00 00    	add    BYTE PTR [rcx+0x1],bl
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 be 96 20 00 00    	add    BYTE PTR [rsi+0x2096],bh
 365:	00 00                	add    BYTE PTR [rax],al
 367:	00 2b                	add    BYTE PTR [rbx],ch
 369:	00 00                	add    BYTE PTR [rax],al
 36b:	00 00                	add    BYTE PTR [rax],al
 36d:	00 00                	add    BYTE PTR [rax],al
 36f:	00 e9                	add    cl,ch
 371:	96                   	xchg   esi,eax
 372:	20 00                	and    BYTE PTR [rax],al
 374:	00 00                	add    BYTE PTR [rax],al
 376:	00 00                	add    BYTE PTR [rax],al
 378:	85 00                	test   DWORD PTR [rax],eax
	...
 38e:	00 00                	add    BYTE PTR [rax],al
 390:	2c 00                	sub    al,0x0
 392:	00 00                	add    BYTE PTR [rax],al
 394:	02 00                	add    al,BYTE PTR [rax]
 396:	27                   	(bad)  
 397:	45 00 00             	add    BYTE PTR [r8],r8b
 39a:	08 00                	or     BYTE PTR [rax],al
 39c:	00 00                	add    BYTE PTR [rax],al
 39e:	00 00                	add    BYTE PTR [rax],al
 3a0:	62                   	(bad)  
 3a1:	39 20                	cmp    DWORD PTR [rax],esp
 3a3:	00 00                	add    BYTE PTR [rax],al
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 17                	add    BYTE PTR [rdi],dl
 3a9:	01 00                	add    DWORD PTR [rax],eax
	...
 3bf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 3c2:	00 00                	add    BYTE PTR [rax],al
 3c4:	02 00                	add    al,BYTE PTR [rax]
 3c6:	b1 47                	mov    cl,0x47
 3c8:	00 00                	add    BYTE PTR [rax],al
 3ca:	08 00                	or     BYTE PTR [rax],al
 3cc:	00 00                	add    BYTE PTR [rax],al
 3ce:	00 00                	add    BYTE PTR [rax],al
 3d0:	79 3a                	jns    40c <stivale_hdr-0x1ffbf4>
 3d2:	20 00                	and    BYTE PTR [rax],al
 3d4:	00 00                	add    BYTE PTR [rax],al
 3d6:	00 00                	add    BYTE PTR [rax],al
 3d8:	d5                   	(bad)  
 3d9:	01 00                	add    DWORD PTR [rax],eax
	...
 3ef:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	02 00                	add    al,BYTE PTR [rax]
 3f6:	20 4b 00             	and    BYTE PTR [rbx+0x0],cl
 3f9:	00 08                	add    BYTE PTR [rax],cl
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 4e 3c             	add    BYTE PTR [rsi+0x3c],cl
 402:	20 00                	and    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	33 01                	xor    eax,DWORD PTR [rcx]
	...
 41e:	00 00                	add    BYTE PTR [rax],al
 420:	2c 00                	sub    al,0x0
 422:	00 00                	add    BYTE PTR [rax],al
 424:	02 00                	add    al,BYTE PTR [rax]
 426:	c1 4d 00 00          	ror    DWORD PTR [rbp+0x0],0x0
 42a:	08 00                	or     BYTE PTR [rax],al
 42c:	00 00                	add    BYTE PTR [rax],al
 42e:	00 00                	add    BYTE PTR [rax],al
 430:	81 3d 20 00 00 00 00 	cmp    DWORD PTR [rip+0x20],0x23e0000        # 45a <stivale_hdr-0x1ffba6>
 437:	00 3e 02 
	...
 44e:	00 00                	add    BYTE PTR [rax],al
 450:	2c 00                	sub    al,0x0
 452:	00 00                	add    BYTE PTR [rax],al
 454:	02 00                	add    al,BYTE PTR [rax]
 456:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 457:	50                   	push   rax
 458:	00 00                	add    BYTE PTR [rax],al
 45a:	08 00                	or     BYTE PTR [rax],al
 45c:	00 00                	add    BYTE PTR [rax],al
 45e:	00 00                	add    BYTE PTR [rax],al
 460:	bf 3f 20 00 00       	mov    edi,0x203f
 465:	00 00                	add    BYTE PTR [rax],al
 467:	00 64 02 00          	add    BYTE PTR [rdx+rax*1+0x0],ah
	...
 47f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 482:	00 00                	add    BYTE PTR [rax],al
 484:	02 00                	add    al,BYTE PTR [rax]
 486:	1e                   	(bad)  
 487:	56                   	push   rsi
 488:	00 00                	add    BYTE PTR [rax],al
 48a:	08 00                	or     BYTE PTR [rax],al
 48c:	00 00                	add    BYTE PTR [rax],al
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	23 42 20             	and    eax,DWORD PTR [rdx+0x20]
 493:	00 00                	add    BYTE PTR [rax],al
 495:	00 00                	add    BYTE PTR [rax],al
 497:	00 26                	add    BYTE PTR [rsi],ah
	...
 4ad:	00 00                	add    BYTE PTR [rax],al
 4af:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 4b2:	00 00                	add    BYTE PTR [rax],al
 4b4:	02 00                	add    al,BYTE PTR [rax]
 4b6:	5d                   	pop    rbp
 4b7:	57                   	push   rdi
 4b8:	00 00                	add    BYTE PTR [rax],al
 4ba:	08 00                	or     BYTE PTR [rax],al
 4bc:	00 00                	add    BYTE PTR [rax],al
 4be:	00 00                	add    BYTE PTR [rax],al
 4c0:	49                   	rex.WB
 4c1:	42 20 00             	rex.X and BYTE PTR [rax],al
 4c4:	00 00                	add    BYTE PTR [rax],al
 4c6:	00 00                	add    BYTE PTR [rax],al
 4c8:	fe 00                	inc    BYTE PTR [rax]
	...
 4de:	00 00                	add    BYTE PTR [rax],al
 4e0:	2c 00                	sub    al,0x0
 4e2:	00 00                	add    BYTE PTR [rax],al
 4e4:	02 00                	add    al,BYTE PTR [rax]
 4e6:	19 5b 00             	sbb    DWORD PTR [rbx+0x0],ebx
 4e9:	00 08                	add    BYTE PTR [rax],cl
 4eb:	00 00                	add    BYTE PTR [rax],al
 4ed:	00 00                	add    BYTE PTR [rax],al
 4ef:	00 47 43             	add    BYTE PTR [rdi+0x43],al
 4f2:	20 00                	and    BYTE PTR [rax],al
 4f4:	00 00                	add    BYTE PTR [rax],al
 4f6:	00 00                	add    BYTE PTR [rax],al
 4f8:	6b 0d 00 00 00 00 00 	imul   ecx,DWORD PTR [rip+0x0],0x0        # 4ff <stivale_hdr-0x1ffb01>
	...
 50f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 512:	00 00                	add    BYTE PTR [rax],al
 514:	02 00                	add    al,BYTE PTR [rax]
 516:	22 67 00             	and    ah,BYTE PTR [rdi+0x0]
 519:	00 08                	add    BYTE PTR [rax],cl
 51b:	00 00                	add    BYTE PTR [rax],al
 51d:	00 00                	add    BYTE PTR [rax],al
 51f:	00 b2 50 20 00 00    	add    BYTE PTR [rdx+0x2050],dh
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 76 1f             	add    BYTE PTR [rsi+0x1f],dh
	...
 53e:	00 00                	add    BYTE PTR [rax],al
 540:	2c 00                	sub    al,0x0
 542:	00 00                	add    BYTE PTR [rax],al
 544:	02 00                	add    al,BYTE PTR [rax]
 546:	33 6f 00             	xor    ebp,DWORD PTR [rdi+0x0]
 549:	00 08                	add    BYTE PTR [rax],cl
 54b:	00 00                	add    BYTE PTR [rax],al
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 28                	add    BYTE PTR [rax],ch
 551:	70 20                	jo     573 <stivale_hdr-0x1ffa8d>
 553:	00 00                	add    BYTE PTR [rax],al
 555:	00 00                	add    BYTE PTR [rax],al
 557:	00 b1 02 00 00 00    	add    BYTE PTR [rcx+0x2],dh
	...
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 572:	00 00                	add    BYTE PTR [rax],al
 574:	02 00                	add    al,BYTE PTR [rax]
 576:	5d                   	pop    rbp
 577:	74 00                	je     579 <stivale_hdr-0x1ffa87>
 579:	00 08                	add    BYTE PTR [rax],cl
 57b:	00 00                	add    BYTE PTR [rax],al
 57d:	00 00                	add    BYTE PTR [rax],al
 57f:	00 d9                	add    cl,bl
 581:	72 20                	jb     5a3 <stivale_hdr-0x1ffa5d>
 583:	00 00                	add    BYTE PTR [rax],al
 585:	00 00                	add    BYTE PTR [rax],al
 587:	00 a1 0a 00 00 00    	add    BYTE PTR [rcx+0xa],ah
	...
 59d:	00 00                	add    BYTE PTR [rax],al
 59f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 5a2:	00 00                	add    BYTE PTR [rax],al
 5a4:	02 00                	add    al,BYTE PTR [rax]
 5a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 5a7:	84 00                	test   BYTE PTR [rax],al
 5a9:	00 08                	add    BYTE PTR [rax],cl
 5ab:	00 00                	add    BYTE PTR [rax],al
 5ad:	00 00                	add    BYTE PTR [rax],al
 5af:	00 7a 7d             	add    BYTE PTR [rdx+0x7d],bh
 5b2:	20 00                	and    BYTE PTR [rax],al
 5b4:	00 00                	add    BYTE PTR [rax],al
 5b6:	00 00                	add    BYTE PTR [rax],al
 5b8:	da 03                	fiadd  DWORD PTR [rbx]
	...
 5ce:	00 00                	add    BYTE PTR [rax],al
 5d0:	2c 00                	sub    al,0x0
 5d2:	00 00                	add    BYTE PTR [rax],al
 5d4:	02 00                	add    al,BYTE PTR [rax]
 5d6:	dd 88 00 00 08 00    	fisttp QWORD PTR [rax+0x80000]
 5dc:	00 00                	add    BYTE PTR [rax],al
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	54                   	push   rsp
 5e1:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
 5e7:	00 05 02 00 00 00    	add    BYTE PTR [rip+0x2],al        # 5ef <stivale_hdr-0x1ffa11>
	...
 5fd:	00 00                	add    BYTE PTR [rax],al
 5ff:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 602:	00 00                	add    BYTE PTR [rax],al
 604:	03 00                	add    eax,DWORD PTR [rax]
 606:	fb                   	sti    
 607:	8b 00                	mov    eax,DWORD PTR [rax]
 609:	00 08                	add    BYTE PTR [rax],cl
 60b:	00 00                	add    BYTE PTR [rax],al
 60d:	00 00                	add    BYTE PTR [rax],al
 60f:	00 60 83             	add    BYTE PTR [rax-0x7d],ah
 612:	20 00                	and    BYTE PTR [rax],al
 614:	00 00                	add    BYTE PTR [rax],al
 616:	00 00                	add    BYTE PTR [rax],al
 618:	40 00 00             	add    BYTE PTR [rax],al
	...
 62f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 632:	00 00                	add    BYTE PTR [rax],al
 634:	03 00                	add    eax,DWORD PTR [rax]
 636:	50                   	push   rax
 637:	8c 00                	mov    WORD PTR [rax],es
 639:	00 08                	add    BYTE PTR [rax],cl
 63b:	00 00                	add    BYTE PTR [rax],al
 63d:	00 00                	add    BYTE PTR [rax],al
 63f:	00 a0 83 20 00 00    	add    BYTE PTR [rax+0x2083],ah
 645:	00 00                	add    BYTE PTR [rax],al
 647:	00 25 03 00 00 00    	add    BYTE PTR [rip+0x3],ah        # 650 <stivale_hdr-0x1ff9b0>
	...
 65d:	00 00                	add    BYTE PTR [rax],al
 65f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 662:	00 00                	add    BYTE PTR [rax],al
 664:	03 00                	add    eax,DWORD PTR [rax]
 666:	a8 8c                	test   al,0x8c
 668:	00 00                	add    BYTE PTR [rax],al
 66a:	08 00                	or     BYTE PTR [rax],al
 66c:	00 00                	add    BYTE PTR [rax],al
 66e:	00 00                	add    BYTE PTR [rax],al
 670:	d0 86 20 00 00 00    	rol    BYTE PTR [rsi+0x20],1
 676:	00 00                	add    BYTE PTR [rax],al
 678:	1b 00                	sbb    eax,DWORD PTR [rax]
	...
 68e:	00 00                	add    BYTE PTR [rax],al
 690:	2c 00                	sub    al,0x0
 692:	00 00                	add    BYTE PTR [rax],al
 694:	03 00                	add    eax,DWORD PTR [rax]
 696:	f9                   	stc    
 697:	8c 00                	mov    WORD PTR [rax],es
 699:	00 08                	add    BYTE PTR [rax],cl
 69b:	00 00                	add    BYTE PTR [rax],al
 69d:	00 00                	add    BYTE PTR [rax],al
 69f:	00 f0                	add    al,dh
 6a1:	86 20                	xchg   BYTE PTR [rax],ah
 6a3:	00 00                	add    BYTE PTR [rax],al
 6a5:	00 00                	add    BYTE PTR [rax],al
 6a7:	00 1a                	add    BYTE PTR [rdx],bl
	...
 6bd:	00 00                	add    BYTE PTR [rax],al
 6bf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 6c2:	00 00                	add    BYTE PTR [rax],al
 6c4:	03 00                	add    eax,DWORD PTR [rax]
 6c6:	4d 8d 00             	lea    r8,[r8]
 6c9:	00 08                	add    BYTE PTR [rax],cl
 6cb:	00 00                	add    BYTE PTR [rax],al
 6cd:	00 00                	add    BYTE PTR [rax],al
 6cf:	00 10                	add    BYTE PTR [rax],dl
 6d1:	87 20                	xchg   DWORD PTR [rax],esp
 6d3:	00 00                	add    BYTE PTR [rax],al
 6d5:	00 00                	add    BYTE PTR [rax],al
 6d7:	00 31                	add    BYTE PTR [rcx],dh
	...
 6ed:	00 00                	add    BYTE PTR [rax],al
 6ef:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 6f2:	00 00                	add    BYTE PTR [rax],al
 6f4:	03 00                	add    eax,DWORD PTR [rax]
 6f6:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 6f7:	8d 00                	lea    eax,[rax]
 6f9:	00 08                	add    BYTE PTR [rax],cl
 6fb:	00 00                	add    BYTE PTR [rax],al
 6fd:	00 00                	add    BYTE PTR [rax],al
 6ff:	00 50 87             	add    BYTE PTR [rax-0x79],dl
 702:	20 00                	and    BYTE PTR [rax],al
 704:	00 00                	add    BYTE PTR [rax],al
 706:	00 00                	add    BYTE PTR [rax],al
 708:	b1 00                	mov    cl,0x0
	...
 71e:	00 00                	add    BYTE PTR [rax],al
 720:	2c 00                	sub    al,0x0
 722:	00 00                	add    BYTE PTR [rax],al
 724:	03 00                	add    eax,DWORD PTR [rax]
 726:	03 8e 00 00 08 00    	add    ecx,DWORD PTR [rsi+0x80000]
 72c:	00 00                	add    BYTE PTR [rax],al
 72e:	00 00                	add    BYTE PTR [rax],al
 730:	10 88 20 00 00 00    	adc    BYTE PTR [rax+0x20],cl
 736:	00 00                	add    BYTE PTR [rax],al
 738:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	62                   	(bad)  
       1:	00 00                	add    BYTE PTR [rax],al
       3:	00 03                	add    BYTE PTR [rbx],al
       5:	00 5c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bl
       9:	00 01                	add    BYTE PTR [rcx],al
       b:	01 fb                	add    ebx,edi
       d:	0e                   	(bad)  
       e:	0d 00 01 01 01       	or     eax,0x1010100
      13:	01 00                	add    DWORD PTR [rax],eax
      15:	00 00                	add    BYTE PTR [rax],al
      17:	01 00                	add    DWORD PTR [rax],eax
      19:	00 01                	add    BYTE PTR [rcx],al
      1b:	73 72                	jae    8f <stivale_hdr-0x1fff71>
      1d:	63 00                	movsxd eax,DWORD PTR [rax]
      1f:	73 72                	jae    93 <stivale_hdr-0x1fff6d>
      21:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      23:	62                   	(bad)  
      24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      26:	74 00                	je     28 <stivale_hdr-0x1fffd8>
      28:	73 72                	jae    9c <stivale_hdr-0x1fff64>
      2a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      2c:	64 72 69             	fs jb  98 <stivale_hdr-0x1fff68>
      2f:	76 65                	jbe    96 <stivale_hdr-0x1fff6a>
      31:	72 73                	jb     a6 <stivale_hdr-0x1fff5a>
      33:	2f                   	(bad)  
      34:	61                   	(bad)  
      35:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	74 79                	je     b5 <stivale_hdr-0x1fff4b>
      3c:	70 65                	jo     a3 <stivale_hdr-0x1fff5d>
      3e:	73 2e                	jae    6e <stivale_hdr-0x1fff92>
      40:	68 00 01 00 00       	push   0x100
      45:	62                   	(bad)  
      46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      48:	74 2e                	je     78 <stivale_hdr-0x1fff88>
      4a:	68 00 02 00 00       	push   0x200
      4f:	61                   	(bad)  
      50:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
      53:	2e 68 00 03 00 00    	cs push 0x300
      59:	62                   	(bad)  
      5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5c:	74 2e                	je     8c <stivale_hdr-0x1fff74>
      5e:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
      61:	00 02                	add    BYTE PTR [rdx],al
      63:	00 00                	add    BYTE PTR [rax],al
      65:	00 46 01             	add    BYTE PTR [rsi+0x1],al
      68:	00 00                	add    BYTE PTR [rax],al
      6a:	03 00                	add    eax,DWORD PTR [rax]
      6c:	02 01                	add    al,BYTE PTR [rcx]
      6e:	00 00                	add    BYTE PTR [rax],al
      70:	01 01                	add    DWORD PTR [rcx],eax
      72:	fb                   	sti    
      73:	0e                   	(bad)  
      74:	0d 00 01 01 01       	or     eax,0x1010100
      79:	01 00                	add    DWORD PTR [rax],eax
      7b:	00 00                	add    BYTE PTR [rax],al
      7d:	01 00                	add    DWORD PTR [rax],eax
      7f:	00 01                	add    BYTE PTR [rcx],al
      81:	73 72                	jae    f5 <stivale_hdr-0x1fff0b>
      83:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      85:	62                   	(bad)  
      86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      88:	74 00                	je     8a <stivale_hdr-0x1fff76>
      8a:	73 72                	jae    fe <stivale_hdr-0x1fff02>
      8c:	63 00                	movsxd eax,DWORD PTR [rax]
      8e:	73 72                	jae    102 <stivale_hdr-0x1ffefe>
      90:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      92:	73 63                	jae    f7 <stivale_hdr-0x1fff09>
      94:	68 65 64 75 6c       	push   0x6c756465
      99:	69 6e 67 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63727300
      a0:	2f                   	(bad)  
      a1:	64 72 69             	fs jb  10d <stivale_hdr-0x1ffef3>
      a4:	76 65                	jbe    10b <stivale_hdr-0x1ffef5>
      a6:	72 73                	jb     11b <stivale_hdr-0x1ffee5>
      a8:	2f                   	(bad)  
      a9:	61                   	(bad)  
      aa:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
      ad:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
      b0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      b2:	64 72 69             	fs jb  11e <stivale_hdr-0x1ffee2>
      b5:	76 65                	jbe    11c <stivale_hdr-0x1ffee4>
      b7:	72 73                	jb     12c <stivale_hdr-0x1ffed4>
      b9:	2f                   	(bad)  
      ba:	6b 62 64 00          	imul   esp,DWORD PTR [rdx+0x64],0x0
      be:	73 72                	jae    132 <stivale_hdr-0x1ffece>
      c0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      c2:	64 72 69             	fs jb  12e <stivale_hdr-0x1ffed2>
      c5:	76 65                	jbe    12c <stivale_hdr-0x1ffed4>
      c7:	72 73                	jb     13c <stivale_hdr-0x1ffec4>
      c9:	2f                   	(bad)  
      ca:	64 69 73 6b 2f 61 68 	imul   esi,DWORD PTR fs:[rbx+0x6b],0x6368612f
      d1:	63 
      d2:	69 00 73 72 63 2f    	imul   eax,DWORD PTR [rax],0x2f637273
      d8:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
      db:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
      de:	63 2f                	movsxd ebp,DWORD PTR [rdi]
      e0:	64 72 69             	fs jb  14c <stivale_hdr-0x1ffeb4>
      e3:	76 65                	jbe    14a <stivale_hdr-0x1ffeb6>
      e5:	72 73                	jb     15a <stivale_hdr-0x1ffea6>
      e7:	2f                   	(bad)  
      e8:	67 66 78 2f          	addr32 data16 js 11b <stivale_hdr-0x1ffee5>
      ec:	67 6f                	outs   dx,DWORD PTR ds:[esi]
      ee:	70 00                	jo     f0 <stivale_hdr-0x1fff10>
      f0:	00 6b 6d             	add    BYTE PTR [rbx+0x6d],ch
      f3:	61                   	(bad)  
      f4:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
      fb:	01 00                	add    DWORD PTR [rax],eax
      fd:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
     101:	65 73 2e             	gs jae 132 <stivale_hdr-0x1ffece>
     104:	68 00 02 00 00       	push   0x200
     109:	74 69                	je     174 <stivale_hdr-0x1ffe8c>
     10b:	6d                   	ins    DWORD PTR es:[rdi],dx
     10c:	65 72 2e             	gs jb  13d <stivale_hdr-0x1ffec3>
     10f:	68 00 03 00 00       	push   0x300
     114:	70 63                	jo     179 <stivale_hdr-0x1ffe87>
     116:	69 2e 68 00 04 00    	imul   ebp,DWORD PTR [rsi],0x40068
     11c:	00 6b 62             	add    BYTE PTR [rbx+0x62],ch
     11f:	64 2e 68 00 05 00 00 	fs cs push 0x500
     126:	61                   	(bad)  
     127:	68 63 69 2e 68       	push   0x682e6963
     12c:	00 06                	add    BYTE PTR [rsi],al
     12e:	00 00                	add    BYTE PTR [rax],al
     130:	61                   	(bad)  
     131:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     134:	2e 68 00 04 00 00    	cs push 0x400
     13a:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
     13e:	66 2e 68 00 01       	cs pushw 0x100
     143:	00 00                	add    BYTE PTR [rax],al
     145:	62                   	(bad)  
     146:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     147:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     148:	74 2e                	je     178 <stivale_hdr-0x1ffe88>
     14a:	68 00 01 00 00       	push   0x100
     14f:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     156:	70 74                	jo     1cc <stivale_hdr-0x1ffe34>
     158:	73 2e                	jae    188 <stivale_hdr-0x1ffe78>
     15a:	68 00 07 00 00       	push   0x700
     15f:	74 73                	je     1d4 <stivale_hdr-0x1ffe2c>
     161:	73 2e                	jae    191 <stivale_hdr-0x1ffe6f>
     163:	68 00 07 00 00       	push   0x700
     168:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     16a:	70 2e                	jo     19a <stivale_hdr-0x1ffe66>
     16c:	68 00 08 00 00       	push   0x800
     171:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2090178 <__kernel_end+0x1e7e178>
     177:	00 10                	add    BYTE PTR [rax],dl
     179:	20 00                	and    BYTE PTR [rax],al
     17b:	00 00                	add    BYTE PTR [rax],al
     17d:	00 00                	add    BYTE PTR [rax],al
     17f:	03 13                	add    edx,DWORD PTR [rbx]
     181:	01 05 24 f4 05 1f    	add    DWORD PTR [rip+0x1f05f424],eax        # 1f05f5ab <__kernel_end+0x1ee4d5ab>
     187:	59                   	pop    rcx
     188:	05 17 08 9f 05       	add    eax,0x59f0817
     18d:	14 08                	adc    al,0x8
     18f:	13 05 02 59 05 21    	adc    eax,DWORD PTR [rip+0x21055902]        # 21055a97 <__kernel_end+0x20e43a97>
     195:	21 05 1c f3 05 1b    	and    DWORD PTR [rip+0x1b05f31c],eax        # 1b05f4b7 <__kernel_end+0x1ae4d4b7>
     19b:	f4                   	hlt    
     19c:	05 13 9f 05 19       	add    eax,0x19059f13
     1a1:	5a                   	pop    rdx
     1a2:	05 14 5a 05 22       	add    eax,0x22055a14
     1a7:	5a                   	pop    rdx
     1a8:	05 01 59 02 03       	add    eax,0x3025901
     1ad:	00 01                	add    BYTE PTR [rcx],al
     1af:	01 34 02             	add    DWORD PTR [rdx+rax*1],esi
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	03 00                	add    eax,DWORD PTR [rax]
     1b6:	f9                   	stc    
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	00 01                	add    BYTE PTR [rcx],al
     1bb:	01 fb                	add    ebx,edi
     1bd:	0e                   	(bad)  
     1be:	0d 00 01 01 01       	or     eax,0x1010100
     1c3:	01 00                	add    DWORD PTR [rax],eax
     1c5:	00 00                	add    BYTE PTR [rax],al
     1c7:	01 00                	add    DWORD PTR [rax],eax
     1c9:	00 01                	add    BYTE PTR [rcx],al
     1cb:	73 72                	jae    23f <stivale_hdr-0x1ffdc1>
     1cd:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1cf:	62                   	(bad)  
     1d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d2:	74 00                	je     1d4 <stivale_hdr-0x1ffe2c>
     1d4:	73 72                	jae    248 <stivale_hdr-0x1ffdb8>
     1d6:	63 00                	movsxd eax,DWORD PTR [rax]
     1d8:	73 72                	jae    24c <stivale_hdr-0x1ffdb4>
     1da:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1dc:	64 72 69             	fs jb  248 <stivale_hdr-0x1ffdb8>
     1df:	76 65                	jbe    246 <stivale_hdr-0x1ffdba>
     1e1:	72 73                	jb     256 <stivale_hdr-0x1ffdaa>
     1e3:	2f                   	(bad)  
     1e4:	61                   	(bad)  
     1e5:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     1e8:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     1eb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1ed:	64 72 69             	fs jb  259 <stivale_hdr-0x1ffda7>
     1f0:	76 65                	jbe    257 <stivale_hdr-0x1ffda9>
     1f2:	72 73                	jb     267 <stivale_hdr-0x1ffd99>
     1f4:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     1f7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     1f9:	6d                   	ins    DWORD PTR es:[rdi],dx
     1fa:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     1fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1fd:	72 79                	jb     278 <stivale_hdr-0x1ffd88>
     1ff:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     202:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     204:	64 72 69             	fs jb  270 <stivale_hdr-0x1ffd90>
     207:	76 65                	jbe    26e <stivale_hdr-0x1ffd92>
     209:	72 73                	jb     27e <stivale_hdr-0x1ffd82>
     20b:	2f                   	(bad)  
     20c:	74 74                	je     282 <stivale_hdr-0x1ffd7e>
     20e:	79 00                	jns    210 <stivale_hdr-0x1ffdf0>
     210:	73 72                	jae    284 <stivale_hdr-0x1ffd7c>
     212:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     214:	64 72 69             	fs jb  280 <stivale_hdr-0x1ffd80>
     217:	76 65                	jbe    27e <stivale_hdr-0x1ffd82>
     219:	72 73                	jb     28e <stivale_hdr-0x1ffd72>
     21b:	2f                   	(bad)  
     21c:	67 66 78 2f          	addr32 data16 js 24f <stivale_hdr-0x1ffdb1>
     220:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     222:	70 00                	jo     224 <stivale_hdr-0x1ffddc>
     224:	73 72                	jae    298 <stivale_hdr-0x1ffd68>
     226:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     228:	75 74                	jne    29e <stivale_hdr-0x1ffd62>
     22a:	69 6c 00 00 6b 63 6f 	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e6f636b
     231:	6e 
     232:	66 2e 63 70 70       	movsxd si,DWORD PTR cs:[rax+0x70]
     237:	00 01                	add    BYTE PTR [rcx],al
     239:	00 00                	add    BYTE PTR [rax],al
     23b:	74 79                	je     2b6 <stivale_hdr-0x1ffd4a>
     23d:	70 65                	jo     2a4 <stivale_hdr-0x1ffd5c>
     23f:	73 2e                	jae    26f <stivale_hdr-0x1ffd91>
     241:	68 00 02 00 00       	push   0x200
     246:	61                   	(bad)  
     247:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     24a:	2e 68 00 03 00 00    	cs push 0x300
     250:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
     254:	66 2e 68 00 01       	cs pushw 0x100
     259:	00 00                	add    BYTE PTR [rax],al
     25b:	62                   	(bad)  
     25c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     25d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     25e:	74 2e                	je     28e <stivale_hdr-0x1ffd72>
     260:	68 00 01 00 00       	push   0x100
     265:	69 6f 2e 68 00 04 00 	imul   ebp,DWORD PTR [rdi+0x2e],0x40068
     26c:	00 70 63             	add    BYTE PTR [rax+0x63],dh
     26f:	69 2e 68 00 03 00    	imul   ebp,DWORD PTR [rsi],0x30068
     275:	00 70 61             	add    BYTE PTR [rax+0x61],dh
     278:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x500682e
     27f:	05 
     280:	00 00                	add    BYTE PTR [rax],al
     282:	74 74                	je     2f8 <stivale_hdr-0x1ffd08>
     284:	79 2e                	jns    2b4 <stivale_hdr-0x1ffd4c>
     286:	68 00 06 00 00       	push   0x600
     28b:	70 6d                	jo     2fa <stivale_hdr-0x1ffd06>
     28d:	6d                   	ins    DWORD PTR es:[rdi],dx
     28e:	2e 68 00 05 00 00    	cs push 0x500
     294:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     296:	70 2e                	jo     2c6 <stivale_hdr-0x1ffd3a>
     298:	68 00 07 00 00       	push   0x700
     29d:	68 65 61 70 2e       	push   0x2e706165
     2a2:	68 00 05 00 00       	push   0x500
     2a7:	6b 75 74 69          	imul   esi,DWORD PTR [rbp+0x74],0x69
     2ab:	6c                   	ins    BYTE PTR es:[rdi],dx
     2ac:	2e 68 00 08 00 00    	cs push 0x800
     2b2:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 20902b9 <__kernel_end+0x1e7e2b9>
     2b8:	88 10                	mov    BYTE PTR [rax],dl
     2ba:	20 00                	and    BYTE PTR [rax],al
     2bc:	00 00                	add    BYTE PTR [rax],al
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	03 15 01 05 12 bb    	add    edx,DWORD PTR [rip+0xffffffffbb120501]        # ffffffffbb1207c7 <__kernel_end+0xffffffffbaf0e7c7>
     2c6:	05 51 5a 05 18       	add    eax,0x18055a51
     2cb:	58                   	pop    rax
     2cc:	05 1c a0 05 1f       	add    eax,0x1f05a01c
     2d1:	08 ae 05 0f 02 24    	or     BYTE PTR [rsi+0x24020f05],ch
     2d7:	14 05                	adc    al,0x5
     2d9:	3e 00 02             	add    BYTE PTR ds:[rdx],al
     2dc:	04 03                	add    al,0x3
     2de:	82                   	(bad)  
     2df:	05 1a 00 02 04       	add    eax,0x402001a
     2e4:	03 08                	add    ecx,DWORD PTR [rax]
     2e6:	3c 05                	cmp    al,0x5
     2e8:	22 00                	and    al,BYTE PTR [rax]
     2ea:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     2ed:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     2ee:	05 50 00 02 04       	add    eax,0x4020050
     2f3:	02 08                	add    cl,BYTE PTR [rax]
     2f5:	73 05                	jae    2fc <stivale_hdr-0x1ffd04>
     2f7:	02 00                	add    al,BYTE PTR [rax]
     2f9:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     2fc:	82                   	(bad)  
     2fd:	05 0a 31 05 2d       	add    eax,0x2d05310a
     302:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     303:	05 18 82 05 4e       	add    eax,0x4e058218
     308:	3c 05                	cmp    al,0x5
     30a:	3f                   	(bad)  
     30b:	ac                   	lods   al,BYTE PTR ds:[rsi]
     30c:	05 71 4a 05 81       	add    eax,0x81054a71
     311:	01 82 05 61 74 05    	add    DWORD PTR [rdx+0x5746105],eax
     317:	0c 4a                	or     al,0x4a
     319:	05 11 a0 05 2a       	add    eax,0x2a05a011
     31e:	00 02                	add    BYTE PTR [rdx],al
     320:	04 03                	add    al,0x3
     322:	82                   	(bad)  
     323:	05 20 00 02 04       	add    eax,0x4020020
     328:	03 ac 05 25 00 02 04 	add    ebp,DWORD PTR [rbp+rax*1+0x4020025]
     32f:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
     332:	36 00 02             	add    BYTE PTR ss:[rdx],al
     335:	04 02                	add    al,0x2
     337:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     33a:	05 00 02 04 02       	add    eax,0x2040200
     33f:	82                   	(bad)  
     340:	05 02 31 05 01       	add    eax,0x1053102
     345:	c9                   	leave  
     346:	3f                   	(bad)  
     347:	05 32 f3 05 1c       	add    eax,0x1c05f332
     34c:	74 05                	je     353 <stivale_hdr-0x1ffcad>
     34e:	35 08 21 05 1c       	xor    eax,0x1c052108
     353:	82                   	(bad)  
     354:	05 1e 02 24 14       	add    eax,0x1424021e
     359:	05 0e bc 05 17       	add    eax,0x1705bc0e
     35e:	00 02                	add    BYTE PTR [rdx],al
     360:	04 03                	add    al,0x3
     362:	74 05                	je     369 <stivale_hdr-0x1ffc97>
     364:	0f 00 02             	sldt   WORD PTR [rdx]
     367:	04 02                	add    al,0x2
     369:	91                   	xchg   ecx,eax
     36a:	05 23 00 02 04       	add    eax,0x4020023
     36f:	02 d7                	add    dl,bh
     371:	00 02                	add    BYTE PTR [rdx],al
     373:	04 02                	add    al,0x2
     375:	08 ad 05 0d 00 02    	or     BYTE PTR [rbp+0x2000d05],ch
     37b:	04 02                	add    al,0x2
     37d:	9e                   	sahf   
     37e:	05 05 00 02 04       	add    eax,0x4020005
     383:	02 47 05             	add    al,BYTE PTR [rdi+0x5]
     386:	22 6c 05 01          	and    ch,BYTE PTR [rbp+rax*1+0x1]
     38a:	08 3d 3f 05 0e bb    	or     BYTE PTR [rip+0xffffffffbb0e053f],bh        # ffffffffbb0e08cf <__kernel_end+0xffffffffbaece8cf>
     390:	05 3e 08 84 05       	add    eax,0x584083e
     395:	5b                   	pop    rbx
     396:	d6                   	(bad)  
     397:	05 50 d6 05 7a       	add    eax,0x7a05d650
     39c:	3c 05                	cmp    al,0x5
     39e:	8a 01                	mov    al,BYTE PTR [rcx]
     3a0:	ac                   	lods   al,BYTE PTR ds:[rsi]
     3a1:	05 6e 74 05 8f       	add    eax,0x8f05746e
     3a6:	01 3c 05 98 01 d6 05 	add    DWORD PTR [rax*1+0x5d60198],edi
     3ad:	34 3c                	xor    al,0x3c
     3af:	05 0e 9e 05 15       	add    eax,0x15059e0e
     3b4:	a0 05 01 59 3f 05 15 	movabs al,ds:0x5bb15053f590105
     3bb:	bb 05 
     3bd:	52                   	push   rdx
     3be:	d7                   	xlat   BYTE PTR ds:[rbx]
     3bf:	05 13 f3 05 1b       	add    eax,0x1b05f313
     3c4:	d7                   	xlat   BYTE PTR ds:[rbx]
     3c5:	05 01 59 3f 05       	add    eax,0x53f5901
     3ca:	2c 4b                	sub    al,0x4b
     3cc:	05 13 08 90 05       	add    eax,0x5900813
     3d1:	2c 75                	sub    al,0x75
     3d3:	05 33 ac 05 14       	add    eax,0x1405ac33
     3d8:	4a 05 01 75 40 05    	rex.WX add rax,0x5407501
     3de:	28 4b 05             	sub    BYTE PTR [rbx+0x5],cl
     3e1:	01 e5                	add    ebp,esp
     3e3:	02 03                	add    al,BYTE PTR [rbx]
     3e5:	00 01                	add    BYTE PTR [rcx],al
     3e7:	01 2a                	add    DWORD PTR [rdx],ebp
     3e9:	01 00                	add    DWORD PTR [rax],eax
     3eb:	00 03                	add    BYTE PTR [rbx],al
     3ed:	00 82 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],al
     3f3:	01 fb                	add    ebx,edi
     3f5:	0e                   	(bad)  
     3f6:	0d 00 01 01 01       	or     eax,0x1010100
     3fb:	01 00                	add    DWORD PTR [rax],eax
     3fd:	00 00                	add    BYTE PTR [rax],al
     3ff:	01 00                	add    DWORD PTR [rax],eax
     401:	00 01                	add    BYTE PTR [rcx],al
     403:	73 72                	jae    477 <stivale_hdr-0x1ffb89>
     405:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     407:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     40a:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     40d:	63 00                	movsxd eax,DWORD PTR [rax]
     40f:	73 72                	jae    483 <stivale_hdr-0x1ffb7d>
     411:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     413:	64 72 69             	fs jb  47f <stivale_hdr-0x1ffb81>
     416:	76 65                	jbe    47d <stivale_hdr-0x1ffb83>
     418:	72 73                	jb     48d <stivale_hdr-0x1ffb73>
     41a:	2f                   	(bad)  
     41b:	61                   	(bad)  
     41c:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     41f:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     422:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     424:	6d                   	ins    DWORD PTR es:[rdi],dx
     425:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     428:	72 79                	jb     4a3 <stivale_hdr-0x1ffb5d>
     42a:	00 00                	add    BYTE PTR [rax],al
     42c:	74 73                	je     4a1 <stivale_hdr-0x1ffb5f>
     42e:	73 2e                	jae    45e <stivale_hdr-0x1ffba2>
     430:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     433:	00 01                	add    BYTE PTR [rcx],al
     435:	00 00                	add    BYTE PTR [rax],al
     437:	74 79                	je     4b2 <stivale_hdr-0x1ffb4e>
     439:	70 65                	jo     4a0 <stivale_hdr-0x1ffb60>
     43b:	73 2e                	jae    46b <stivale_hdr-0x1ffb95>
     43d:	68 00 02 00 00       	push   0x200
     442:	74 73                	je     4b7 <stivale_hdr-0x1ffb49>
     444:	73 2e                	jae    474 <stivale_hdr-0x1ffb8c>
     446:	68 00 01 00 00       	push   0x100
     44b:	67 64 74 2e          	addr32 fs je 47d <stivale_hdr-0x1ffb83>
     44f:	68 00 01 00 00       	push   0x100
     454:	61                   	(bad)  
     455:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     458:	2e 68 00 03 00 00    	cs push 0x300
     45e:	70 61                	jo     4c1 <stivale_hdr-0x1ffb3f>
     460:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x400682e
     467:	04 
     468:	00 00                	add    BYTE PTR [rax],al
     46a:	70 6d                	jo     4d9 <stivale_hdr-0x1ffb27>
     46c:	6d                   	ins    DWORD PTR es:[rdi],dx
     46d:	2e 68 00 04 00 00    	cs push 0x400
     473:	00 05 1b 00 09 02    	add    BYTE PTR [rip+0x209001b],al        # 2090494 <__kernel_end+0x1e7e494>
     479:	9e                   	sahf   
     47a:	13 20                	adc    esp,DWORD PTR [rax]
     47c:	00 00                	add    BYTE PTR [rax],al
     47e:	00 00                	add    BYTE PTR [rax],al
     480:	00 03                	add    BYTE PTR [rbx],al
     482:	0c 01                	or     al,0x1
     484:	05 1f 4b 05 01       	add    eax,0x1054b1f
     489:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
     48c:	38 3e                	cmp    BYTE PTR [rsi],bh
     48e:	05 3c e5 05 3f       	add    eax,0x3f05e53c
     493:	58                   	pop    rax
     494:	05 0f 66 05 3c       	add    eax,0x3c05660f
     499:	75 05                	jne    4a0 <stivale_hdr-0x1ffb60>
     49b:	3f                   	(bad)  
     49c:	58                   	pop    rax
     49d:	05 0f 66 05 3c       	add    eax,0x3c05660f
     4a2:	75 05                	jne    4a9 <stivale_hdr-0x1ffb57>
     4a4:	3f                   	(bad)  
     4a5:	58                   	pop    rax
     4a6:	05 0f 66 05 63       	add    eax,0x6305660f
     4ab:	76 05                	jbe    4b2 <stivale_hdr-0x1ffb4e>
     4ad:	1f                   	(bad)  
     4ae:	c8 05 3c 3c          	enter  0x3c05,0x3c
     4b2:	05 1f c8 05 63       	add    eax,0x6305c81f
     4b7:	f3 05 1f c8 05 3c    	repz add eax,0x3c05c81f
     4bd:	3c 05                	cmp    al,0x5
     4bf:	1f                   	(bad)  
     4c0:	c8 05 63 f3          	enter  0x6305,0xf3
     4c4:	05 1f c8 05 3c       	add    eax,0x3c05c81f
     4c9:	3c 05                	cmp    al,0x5
     4cb:	1f                   	(bad)  
     4cc:	c8 05 21 f4          	enter  0x2105,0xf4
     4d0:	05 0d 02 24 12       	add    eax,0x1224020d
     4d5:	05 1f 4b 05 1e       	add    eax,0x1e054b1f
     4da:	08 5a 05             	or     BYTE PTR [rdx+0x5],bl
     4dd:	27                   	(bad)  
     4de:	08 14 02             	or     BYTE PTR [rdx+rax*1],dl
     4e1:	2d 13 02 2a 13       	sub    eax,0x132a0213
     4e6:	02 33                	add    dh,BYTE PTR [rbx]
     4e8:	13 02                	adc    eax,DWORD PTR [rdx]
     4ea:	33 13                	xor    edx,DWORD PTR [rbx]
     4ec:	05 17 02 33 14       	add    eax,0x14330217
     4f1:	05 01 9f 05 39       	add    eax,0x39059f01
     4f6:	3e 05 27 e5 05 01    	ds add eax,0x105e527
     4fc:	02 2d 13 05 32 3e    	add    ch,BYTE PTR [rip+0x3e320513]        # 3e320a15 <__kernel_end+0x3e10ea15>
     502:	05 26 ad 05 01       	add    eax,0x105ad26
     507:	02 24 13             	add    ah,BYTE PTR [rbx+rdx*1]
     50a:	31 05 05 4b 05 01    	xor    DWORD PTR [rip+0x1054b05],eax        # 1055015 <__kernel_end+0xe43015>
     510:	21 02                	and    DWORD PTR [rdx],eax
     512:	02 00                	add    al,BYTE PTR [rax]
     514:	01 01                	add    DWORD PTR [rcx],eax
     516:	0e                   	(bad)  
     517:	01 00                	add    DWORD PTR [rax],eax
     519:	00 03                	add    BYTE PTR [rbx],al
     51b:	00 3e                	add    BYTE PTR [rsi],bh
     51d:	00 00                	add    BYTE PTR [rax],al
     51f:	00 01                	add    BYTE PTR [rcx],al
     521:	01 fb                	add    ebx,edi
     523:	0e                   	(bad)  
     524:	0d 00 01 01 01       	or     eax,0x1010100
     529:	01 00                	add    DWORD PTR [rax],eax
     52b:	00 00                	add    BYTE PTR [rax],al
     52d:	01 00                	add    DWORD PTR [rax],eax
     52f:	00 01                	add    BYTE PTR [rcx],al
     531:	73 72                	jae    5a5 <stivale_hdr-0x1ffa5b>
     533:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     535:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     538:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     53b:	63 00                	movsxd eax,DWORD PTR [rax]
     53d:	00 67 64             	add    BYTE PTR [rdi+0x64],ah
     540:	74 2e                	je     570 <stivale_hdr-0x1ffa90>
     542:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     545:	00 01                	add    BYTE PTR [rcx],al
     547:	00 00                	add    BYTE PTR [rax],al
     549:	74 79                	je     5c4 <stivale_hdr-0x1ffa3c>
     54b:	70 65                	jo     5b2 <stivale_hdr-0x1ffa4e>
     54d:	73 2e                	jae    57d <stivale_hdr-0x1ffa83>
     54f:	68 00 02 00 00       	push   0x200
     554:	67 64 74 2e          	addr32 fs je 586 <stivale_hdr-0x1ffa7a>
     558:	68 00 01 00 00       	push   0x100
     55d:	00 05 26 00 09 02    	add    BYTE PTR [rip+0x2090026],al        # 2090589 <__kernel_end+0x1e7e589>
     563:	4a 16                	rex.WX (bad) 
     565:	20 00                	and    BYTE PTR [rax],al
     567:	00 00                	add    BYTE PTR [rax],al
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	03 09                	add    ecx,DWORD PTR [rcx]
     56d:	01 05 11 4b 05 10    	add    DWORD PTR [rip+0x10054b11],eax        # 10055084 <__kernel_end+0xfe43084>
     573:	91                   	xchg   ecx,eax
     574:	05 1b d9 08 85       	add    eax,0x8508d91b
     579:	08 85 08 85 08 85    	or     BYTE PTR [rbp-0x7af77af8],al
     57f:	05 0d 08 84 05       	add    eax,0x584080d
     584:	01 bb 05 63 3e 05    	add    DWORD PTR [rbx+0x53e6305],edi
     58a:	15 08 75 05 05       	adc    eax,0x5057508
     58f:	66 05 24 93          	add    ax,0x9324
     593:	05 2d 66 05 3c       	add    eax,0x3c05662d
     598:	08 9f 05 24 ac 05    	or     BYTE PTR [rdi+0x5ac2405],bl
     59e:	2d 66 05 3d 08       	sub    eax,0x83d0566
     5a3:	59                   	pop    rcx
     5a4:	05 24 ac 05 2e       	add    eax,0x2e05ac24
     5a9:	66 05 24 08          	add    ax,0x824
     5ad:	59                   	pop    rcx
     5ae:	05 2a 66 05 24       	add    eax,0x2405662a
     5b3:	08 a0 05 2a 66 05    	or     BYTE PTR [rax+0x5662a05],ah
     5b9:	40 08 75 05          	or     BYTE PTR [rbp+0x5],sil
     5bd:	47 82                	rex.RXB (bad) 
     5bf:	05 24 2e 05 47       	add    eax,0x47052e24
     5c4:	66 05 30 58          	add    ax,0x5830
     5c8:	08 3d 05 3f 08 9e    	or     BYTE PTR [rip+0xffffffff9e083f05],bh        # ffffffff9e0844d3 <__kernel_end+0xffffffff9de724d3>
     5ce:	05 30 90 05 10       	add    eax,0x10059030
     5d3:	08 ae 05 09 03 75    	or     BYTE PTR [rsi+0x75030905],ch
     5d9:	08 12                	or     BYTE PTR [rdx],dl
     5db:	05 01 03 0c 20       	add    eax,0x200c0301
     5e0:	05 3b 30 05 0a       	add    eax,0xa05303b
     5e5:	f3 05 6a 67 05 22    	repz add eax,0x2205676a
     5eb:	66 05 15 08          	add    ax,0x815
     5ef:	76 05                	jbe    5f6 <stivale_hdr-0x1ffa0a>
     5f1:	05 66 05 16 93       	add    eax,0x93160566
     5f6:	ca 05 2a             	retf   0x2a05
     5f9:	d7                   	xlat   BYTE PTR ds:[rbx]
     5fa:	05 16 82 05 2c       	add    eax,0x2c058216
     5ff:	91                   	xchg   ecx,eax
     600:	05 16 82 05 1d       	add    eax,0x1d058216
     605:	91                   	xchg   ecx,eax
     606:	05 16 82 05 17       	add    eax,0x17058216
     60b:	92                   	xchg   edx,eax
     60c:	05 2b c9 05 17       	add    eax,0x1705c92b
     611:	c8 05 18 76          	enter  0x1805,0x76
     615:	05 11 ae 05 09       	add    eax,0x905ae11
     61a:	03 72 08             	add    esi,DWORD PTR [rdx+0x8]
     61d:	12 05 01 03 0f 20    	adc    al,BYTE PTR [rip+0x200f0301]        # 200f0924 <__kernel_end+0x1fede924>
     623:	02 02                	add    al,BYTE PTR [rdx]
     625:	00 01                	add    BYTE PTR [rcx],al
     627:	01 3a                	add    DWORD PTR [rdx],edi
     629:	03 00                	add    eax,DWORD PTR [rax]
     62b:	00 03                	add    BYTE PTR [rbx],al
     62d:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000634 <__kernel_end+0xdee634>
     633:	01 fb                	add    ebx,edi
     635:	0e                   	(bad)  
     636:	0d 00 01 01 01       	or     eax,0x1010100
     63b:	01 00                	add    DWORD PTR [rax],eax
     63d:	00 00                	add    BYTE PTR [rax],al
     63f:	01 00                	add    DWORD PTR [rax],eax
     641:	00 01                	add    BYTE PTR [rcx],al
     643:	73 72                	jae    6b7 <stivale_hdr-0x1ff949>
     645:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     647:	64 72 69             	fs jb  6b3 <stivale_hdr-0x1ff94d>
     64a:	76 65                	jbe    6b1 <stivale_hdr-0x1ff94f>
     64c:	72 73                	jb     6c1 <stivale_hdr-0x1ff93f>
     64e:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     651:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     653:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     656:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     659:	63 00                	movsxd eax,DWORD PTR [rax]
     65b:	73 72                	jae    6cf <stivale_hdr-0x1ff931>
     65d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     65f:	64 72 69             	fs jb  6cb <stivale_hdr-0x1ff935>
     662:	76 65                	jbe    6c9 <stivale_hdr-0x1ff937>
     664:	72 73                	jb     6d9 <stivale_hdr-0x1ff927>
     666:	2f                   	(bad)  
     667:	61                   	(bad)  
     668:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     66b:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     66e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     670:	73 63                	jae    6d5 <stivale_hdr-0x1ff92b>
     672:	68 65 64 75 6c       	push   0x6c756465
     677:	69 6e 67 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63727300
     67e:	2f                   	(bad)  
     67f:	62                   	(bad)  
     680:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     681:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     682:	74 00                	je     684 <stivale_hdr-0x1ff97c>
     684:	73 72                	jae    6f8 <stivale_hdr-0x1ff908>
     686:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     688:	64 72 69             	fs jb  6f4 <stivale_hdr-0x1ff90c>
     68b:	76 65                	jbe    6f2 <stivale_hdr-0x1ff90e>
     68d:	72 73                	jb     702 <stivale_hdr-0x1ff8fe>
     68f:	2f                   	(bad)  
     690:	67 66 78 2f          	addr32 data16 js 6c3 <stivale_hdr-0x1ff93d>
     694:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     696:	70 00                	jo     698 <stivale_hdr-0x1ff968>
     698:	73 72                	jae    70c <stivale_hdr-0x1ff8f4>
     69a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     69c:	64 72 69             	fs jb  708 <stivale_hdr-0x1ff8f8>
     69f:	76 65                	jbe    706 <stivale_hdr-0x1ff8fa>
     6a1:	72 73                	jb     716 <stivale_hdr-0x1ff8ea>
     6a3:	2f                   	(bad)  
     6a4:	74 74                	je     71a <stivale_hdr-0x1ff8e6>
     6a6:	79 00                	jns    6a8 <stivale_hdr-0x1ff958>
     6a8:	73 72                	jae    71c <stivale_hdr-0x1ff8e4>
     6aa:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     6ac:	64 72 69             	fs jb  718 <stivale_hdr-0x1ff8e8>
     6af:	76 65                	jbe    716 <stivale_hdr-0x1ff8ea>
     6b1:	72 73                	jb     726 <stivale_hdr-0x1ff8da>
     6b3:	2f                   	(bad)  
     6b4:	6b 62 64 00          	imul   esp,DWORD PTR [rdx+0x64],0x0
     6b8:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
     6bb:	2e 68 00 01 00 00    	cs push 0x100
     6c1:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     6c8:	70 74                	jo     73e <stivale_hdr-0x1ff8c2>
     6ca:	73 2e                	jae    6fa <stivale_hdr-0x1ff906>
     6cc:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     6cf:	00 02                	add    BYTE PTR [rdx],al
     6d1:	00 00                	add    BYTE PTR [rax],al
     6d3:	74 79                	je     74e <stivale_hdr-0x1ff8b2>
     6d5:	70 65                	jo     73c <stivale_hdr-0x1ff8c4>
     6d7:	73 2e                	jae    707 <stivale_hdr-0x1ff8f9>
     6d9:	68 00 03 00 00       	push   0x300
     6de:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     6e5:	70 74                	jo     75b <stivale_hdr-0x1ff8a5>
     6e7:	73 2e                	jae    717 <stivale_hdr-0x1ff8e9>
     6e9:	68 00 02 00 00       	push   0x200
     6ee:	61                   	(bad)  
     6ef:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     6f2:	2e 68 00 04 00 00    	cs push 0x400
     6f8:	74 69                	je     763 <stivale_hdr-0x1ff89d>
     6fa:	6d                   	ins    DWORD PTR es:[rdi],dx
     6fb:	65 72 2e             	gs jb  72c <stivale_hdr-0x1ff8d4>
     6fe:	68 00 05 00 00       	push   0x500
     703:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
     707:	66 2e 68 00 06       	cs pushw 0x600
     70c:	00 00                	add    BYTE PTR [rax],al
     70e:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     710:	70 2e                	jo     740 <stivale_hdr-0x1ff8c0>
     712:	68 00 07 00 00       	push   0x700
     717:	74 74                	je     78d <stivale_hdr-0x1ff873>
     719:	79 2e                	jns    749 <stivale_hdr-0x1ff8b7>
     71b:	68 00 08 00 00       	push   0x800
     720:	6b 62 64 2e          	imul   esp,DWORD PTR [rdx+0x64],0x2e
     724:	68 00 09 00 00       	push   0x900
     729:	73 79                	jae    7a4 <stivale_hdr-0x1ff85c>
     72b:	6d                   	ins    DWORD PTR es:[rdi],dx
     72c:	62                   	(bad)  
     72d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     72e:	6c                   	ins    BYTE PTR es:[rdi],dx
     72f:	73 2e                	jae    75f <stivale_hdr-0x1ff8a1>
     731:	68 00 03 00 00       	push   0x300
     736:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2090741 <__kernel_end+0x1e7e741>
     73c:	14 19                	adc    al,0x19
     73e:	20 00                	and    BYTE PTR [rax],al
     740:	00 00                	add    BYTE PTR [rax],al
     742:	00 00                	add    BYTE PTR [rax],al
     744:	17                   	(bad)  
     745:	05 09 08 4b 05       	add    eax,0x54b0809
     74a:	05 93 04 02 05       	add    eax,0x5020493
     74f:	01 03                	add    DWORD PTR [rbx],eax
     751:	fc                   	cld    
     752:	00 3c 05 0b bb 05 32 	add    BYTE PTR [rax*1+0x3205bb0b],bh
     759:	00 02                	add    BYTE PTR [rdx],al
     75b:	04 01                	add    al,0x1
     75d:	74 05                	je     764 <stivale_hdr-0x1ff89c>
     75f:	37                   	(bad)  
     760:	00 02                	add    BYTE PTR [rdx],al
     762:	04 01                	add    al,0x1
     764:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     767:	2f                   	(bad)  
     768:	68 05 03 08 58       	push   0x58080305
     76d:	05 2a 68 05 2f       	add    eax,0x2f05682a
     772:	66 05 04 08          	add    ax,0x804
     776:	2d 05 09 69 05       	sub    eax,0x5690905
     77b:	04 73                	add    al,0x73
     77d:	05 2b 69 05 02       	add    eax,0x205692b
     782:	00 02                	add    BYTE PTR [rdx],al
     784:	04 02                	add    al,0x2
     786:	03 78 08             	add    edi,DWORD PTR [rax+0x8]
     789:	ac                   	lods   al,BYTE PTR ds:[rsi]
     78a:	05 11 03 0a 90       	add    eax,0x900a0311
     78f:	05 01 75 31 05       	add    eax,0x5317501
     794:	10 bb 05 4b 5a 05    	adc    BYTE PTR [rbx+0x55a4b05],bh
     79a:	08 82 02 27 13 05    	or     BYTE PTR [rdx+0x5132702],al
     7a0:	0b 08                	or     ecx,DWORD PTR [rax]
     7a2:	ae                   	scas   al,BYTE PTR es:[rdi]
     7a3:	05 02 82 05 09       	add    eax,0x9058202
     7a8:	a0 05 31 08 ae 05 58 	movabs al,ds:0x5825805ae083105
     7af:	82 05 
     7b1:	09 3c 00             	or     DWORD PTR [rax+rax*1],edi
     7b4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7b7:	06                   	(bad)  
     7b8:	58                   	pop    rax
     7b9:	00 02                	add    BYTE PTR [rdx],al
     7bb:	04 02                	add    al,0x2
     7bd:	90                   	nop
     7be:	00 02                	add    BYTE PTR [rdx],al
     7c0:	04 04                	add    al,0x4
     7c2:	74 05                	je     7c9 <stivale_hdr-0x1ff837>
     7c4:	0d 00 02 04 04       	or     eax,0x4040200
     7c9:	06                   	(bad)  
     7ca:	08 3e                	or     BYTE PTR [rsi],bh
     7cc:	05 37 00 02 04       	add    eax,0x4020037
     7d1:	04 82                	add    al,0x82
     7d3:	05 03 00 02 04       	add    eax,0x4020003
     7d8:	04 3c                	add    al,0x3c
     7da:	05 0a 59 05 2a       	add    eax,0x2a05590a
     7df:	08 14 05 4f 82 05 09 	or     BYTE PTR [rax*1+0x905824f],dl
     7e6:	3c 00                	cmp    al,0x0
     7e8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7eb:	06                   	(bad)  
     7ec:	58                   	pop    rax
     7ed:	00 02                	add    BYTE PTR [rdx],al
     7ef:	04 02                	add    al,0x2
     7f1:	90                   	nop
     7f2:	00 02                	add    BYTE PTR [rdx],al
     7f4:	04 04                	add    al,0x4
     7f6:	74 05                	je     7fd <stivale_hdr-0x1ff803>
     7f8:	2a 00                	sub    al,BYTE PTR [rax]
     7fa:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
     7fd:	06                   	(bad)  
     7fe:	08 3d 05 4e 00 02    	or     BYTE PTR [rip+0x2004e05],bh        # 2005609 <__kernel_end+0x1df3609>
     804:	04 04                	add    al,0x4
     806:	82                   	(bad)  
     807:	05 09 00 02 04       	add    eax,0x4020009
     80c:	04 3c                	add    al,0x3c
     80e:	00 02                	add    BYTE PTR [rdx],al
     810:	04 01                	add    al,0x1
     812:	06                   	(bad)  
     813:	58                   	pop    rax
     814:	00 02                	add    BYTE PTR [rdx],al
     816:	04 02                	add    al,0x2
     818:	90                   	nop
     819:	00 02                	add    BYTE PTR [rdx],al
     81b:	04 04                	add    al,0x4
     81d:	74 05                	je     824 <stivale_hdr-0x1ff7dc>
     81f:	3e 06                	ds (bad) 
     821:	08 40 05             	or     BYTE PTR [rax+0x5],al
     824:	09 74 05 08          	or     DWORD PTR [rbp+rax*1+0x8],esi
     828:	a0 05 21 08 13 05 08 	movabs al,ds:0x882080513082105
     82f:	82 08 
     831:	76 05                	jbe    838 <stivale_hdr-0x1ff7c8>
     833:	32 08                	xor    cl,BYTE PTR [rax]
     835:	14 05                	adc    al,0x5
     837:	08 82 05 09 08 e6    	or     BYTE PTR [rdx-0x19f7f6fb],al
     83d:	05 03 bd 05 40       	add    eax,0x4005bd03
     842:	77 05                	ja     849 <stivale_hdr-0x1ff7b7>
     844:	2f                   	(bad)  
     845:	82                   	(bad)  
     846:	05 09 3c 08 e5       	add    eax,0xe5083c09
     84b:	05 07 4a 05 03       	add    eax,0x3054a07
     850:	70 05                	jo     857 <stivale_hdr-0x1ff7a9>
     852:	04 2f                	add    al,0x2f
     854:	05 02 26 05 1a       	add    eax,0x1a052602
     859:	2f                   	(bad)  
     85a:	05 01 59 3f 05       	add    eax,0x53f5901
     85f:	16                   	(bad)  
     860:	bb 05 01 bb 44       	mov    ebx,0x44bb0105
     865:	05 0b bb 05 02       	add    eax,0x205bb0b
     86a:	82                   	(bad)  
     86b:	05 18 68 05 0f       	add    eax,0xf056818
     870:	08 75 05             	or     BYTE PTR [rbp+0x5],dh
     873:	14 e5                	adc    al,0xe5
     875:	05 03 e4 05 11       	add    eax,0x1105e403
     87a:	4c 05 0b 9f 08 24    	rex.WR add rax,0x24089f0b
     880:	05 02 82 05 12       	add    eax,0x12058202
     885:	67 05 0b 5a 05 02    	addr32 add eax,0x2055a0b
     88b:	82                   	(bad)  
     88c:	05 26 67 05 0e       	add    eax,0xe056726
     891:	5a                   	pop    rdx
     892:	05 05 82 05 11       	add    eax,0x11058205
     897:	67 05 0d e5 05 01    	addr32 add eax,0x105e50d
     89d:	e5 05                	in     eax,0x5
     89f:	46                   	rex.RX
     8a0:	3e 05 08 08 ca 05    	ds add eax,0x5ca0808
     8a6:	18 4a 05             	sbb    BYTE PTR [rdx+0x5],cl
     8a9:	20 08                	and    BYTE PTR [rax],cl
     8ab:	91                   	xchg   ecx,eax
     8ac:	05 08 ac 05 18       	add    eax,0x1805ac08
     8b1:	4a 05 21 08 59 05    	rex.WX add rax,0x5590821
     8b7:	08 ac 05 19 4a 05 08 	or     BYTE PTR [rbp+rax*1+0x8054a19],ch
     8be:	08 4d 05             	or     BYTE PTR [rbp+0x5],cl
     8c1:	19 4a 05             	sbb    DWORD PTR [rdx+0x5],ecx
     8c4:	08 08                	or     BYTE PTR [rax],cl
     8c6:	75 05                	jne    8cd <stivale_hdr-0x1ff733>
     8c8:	16                   	(bad)  
     8c9:	4a 05 02 08 6a 05    	rex.WX add rax,0x56a0802
     8cf:	09 67 05             	or     DWORD PTR [rdi+0x5],esp
     8d2:	1d 4a 05 07 08       	sbb    eax,0x807054a
     8d7:	59                   	pop    rcx
     8d8:	05 09 67 05 1d       	add    eax,0x1d056709
     8dd:	4a 05 09 08 5a 05    	rex.WX add rax,0x55a0809
     8e3:	1d 4a 05 08 08       	sbb    eax,0x808054a
     8e8:	3f                   	(bad)  
     8e9:	05 19 4a 05 01       	add    eax,0x1054a19
     8ee:	08 67 3f             	or     BYTE PTR [rdi+0x3f],ah
     8f1:	05 13 4b 91 05       	add    eax,0x5914b13
     8f6:	1c d8                	sbb    al,0xd8
     8f8:	05 09 08 5a 08       	add    eax,0x85a0809
     8fd:	c9                   	leave  
     8fe:	08 c9                	or     cl,cl
     900:	08 c9                	or     cl,cl
     902:	08 c9                	or     cl,cl
     904:	08 c9                	or     cl,cl
     906:	08 c9                	or     cl,cl
     908:	08 c9                	or     cl,cl
     90a:	08 c9                	or     cl,cl
     90c:	08 c9                	or     cl,cl
     90e:	08 c9                	or     cl,cl
     910:	08 c9                	or     cl,cl
     912:	08 c9                	or     cl,cl
     914:	08 c9                	or     cl,cl
     916:	08 c9                	or     cl,cl
     918:	08 c9                	or     cl,cl
     91a:	08 c9                	or     cl,cl
     91c:	08 c9                	or     cl,cl
     91e:	08 c9                	or     cl,cl
     920:	08 c9                	or     cl,cl
     922:	08 c9                	or     cl,cl
     924:	08 c9                	or     cl,cl
     926:	08 c9                	or     cl,cl
     928:	08 c9                	or     cl,cl
     92a:	08 c9                	or     cl,cl
     92c:	08 c9                	or     cl,cl
     92e:	08 c9                	or     cl,cl
     930:	08 c9                	or     cl,cl
     932:	08 c9                	or     cl,cl
     934:	08 c9                	or     cl,cl
     936:	08 c9                	or     cl,cl
     938:	08 c9                	or     cl,cl
     93a:	08 c9                	or     cl,cl
     93c:	08 c9                	or     cl,cl
     93e:	08 c9                	or     cl,cl
     940:	08 c9                	or     cl,cl
     942:	08 c9                	or     cl,cl
     944:	08 c9                	or     cl,cl
     946:	08 c9                	or     cl,cl
     948:	08 c9                	or     cl,cl
     94a:	08 c9                	or     cl,cl
     94c:	08 c9                	or     cl,cl
     94e:	08 c9                	or     cl,cl
     950:	08 c9                	or     cl,cl
     952:	08 c9                	or     cl,cl
     954:	08 c9                	or     cl,cl
     956:	08 c9                	or     cl,cl
     958:	08 c9                	or     cl,cl
     95a:	05 06 08 ca 05       	add    eax,0x5ca0806
     95f:	01 e5                	add    ebp,esp
     961:	02 03                	add    al,BYTE PTR [rbx]
     963:	00 01                	add    BYTE PTR [rcx],al
     965:	01 f6                	add    esi,esi
     967:	01 00                	add    DWORD PTR [rax],eax
     969:	00 03                	add    BYTE PTR [rbx],al
     96b:	00 67 00             	add    BYTE PTR [rdi+0x0],ah
     96e:	00 00                	add    BYTE PTR [rax],al
     970:	01 01                	add    DWORD PTR [rcx],eax
     972:	fb                   	sti    
     973:	0e                   	(bad)  
     974:	0d 00 01 01 01       	or     eax,0x1010100
     979:	01 00                	add    DWORD PTR [rax],eax
     97b:	00 00                	add    BYTE PTR [rax],al
     97d:	01 00                	add    DWORD PTR [rax],eax
     97f:	00 01                	add    BYTE PTR [rcx],al
     981:	73 72                	jae    9f5 <stivale_hdr-0x1ff60b>
     983:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     985:	6d                   	ins    DWORD PTR es:[rdi],dx
     986:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     988:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     989:	72 79                	jb     a04 <stivale_hdr-0x1ff5fc>
     98b:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     98e:	63 00                	movsxd eax,DWORD PTR [rax]
     990:	73 72                	jae    a04 <stivale_hdr-0x1ff5fc>
     992:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     994:	64 72 69             	fs jb  a00 <stivale_hdr-0x1ff600>
     997:	76 65                	jbe    9fe <stivale_hdr-0x1ff602>
     999:	72 73                	jb     a0e <stivale_hdr-0x1ff5f2>
     99b:	2f                   	(bad)  
     99c:	61                   	(bad)  
     99d:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     9a0:	00 00                	add    BYTE PTR [rax],al
     9a2:	68 65 61 70 2e       	push   0x2e706165
     9a7:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     9aa:	00 01                	add    BYTE PTR [rcx],al
     9ac:	00 00                	add    BYTE PTR [rax],al
     9ae:	68 65 61 70 2e       	push   0x2e706165
     9b3:	68 00 01 00 00       	push   0x100
     9b8:	74 79                	je     a33 <stivale_hdr-0x1ff5cd>
     9ba:	70 65                	jo     a21 <stivale_hdr-0x1ff5df>
     9bc:	73 2e                	jae    9ec <stivale_hdr-0x1ff614>
     9be:	68 00 02 00 00       	push   0x200
     9c3:	61                   	(bad)  
     9c4:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     9c7:	2e 68 00 03 00 00    	cs push 0x300
     9cd:	70 6d                	jo     a3c <stivale_hdr-0x1ff5c4>
     9cf:	6d                   	ins    DWORD PTR es:[rdi],dx
     9d0:	2e 68 00 01 00 00    	cs push 0x100
     9d6:	00 05 4c 00 09 02    	add    BYTE PTR [rip+0x209004c],al        # 2090a28 <__kernel_end+0x1e7ea28>
     9dc:	e8 23 20 00 00       	call   2a04 <stivale_hdr-0x1fd5fc>
     9e1:	00 00                	add    BYTE PTR [rax],al
     9e3:	00 18                	add    BYTE PTR [rax],bl
     9e5:	05 10 f3 05 2b       	add    eax,0x2b05f310
     9ea:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     9eb:	05 0e 08 12 05       	add    eax,0x512080e
     9f0:	1a 75 05             	sbb    dh,BYTE PTR [rbp+0x5]
     9f3:	29 83 05 1b 82 05    	sub    DWORD PTR [rbx+0x5821b05],eax
     9f9:	19 75 bb             	sbb    DWORD PTR [rbp-0x45],esi
     9fc:	bb 05 01 83 05       	mov    ebx,0x5830105
     a01:	29 3e                	sub    DWORD PTR [rsi],edi
     a03:	05 05 bb 05 1b       	add    eax,0x1b05bb05
     a08:	00 02                	add    BYTE PTR [rdx],al
     a0a:	04 01                	add    al,0x1
     a0c:	74 05                	je     a13 <stivale_hdr-0x1ff5ed>
     a0e:	0e                   	(bad)  
     a0f:	9f                   	lahf   
     a10:	05 05 74 05 27       	add    eax,0x27057405
     a15:	00 02                	add    BYTE PTR [rdx],al
     a17:	04 01                	add    al,0x1
     a19:	58                   	pop    rax
     a1a:	05 20 00 02 04       	add    eax,0x4020020
     a1f:	01 74 05 1a          	add    DWORD PTR [rbp+rax*1+0x1a],esi
     a23:	84 05 1e ae 05 09    	test   BYTE PTR [rip+0x905ae1e],al        # 905b847 <__kernel_end+0x8e49847>
     a29:	82                   	(bad)  
     a2a:	05 22 4c 05 0d       	add    eax,0xd054c22
     a2f:	74 05                	je     a36 <stivale_hdr-0x1ff5ca>
     a31:	27                   	(bad)  
     a32:	67 08 2f             	or     BYTE PTR [edi],ch
     a35:	05 18 83 05 22       	add    eax,0x22058318
     a3a:	68 05 0d 74 05       	push   0x5740d05
     a3f:	27                   	(bad)  
     a40:	67 05 18 83 05 1e    	addr32 add eax,0x1e058318
     a46:	69 05 09 82 05 19 59 	imul   eax,DWORD PTR [rip+0x19058209],0x3090559        # 19058c59 <__kernel_end+0x18e46c59>
     a4d:	05 09 03 
     a50:	73 ba                	jae    a0c <stivale_hdr-0x1ff5f4>
     a52:	05 2c 03 0c 2e       	add    eax,0x2e0c032c
     a57:	05 0c 23 05 01       	add    eax,0x105230c
     a5c:	59                   	pop    rcx
     a5d:	05 25 30 05 1a       	add    eax,0x1a053025
     a62:	bb 05 1b 83 05       	mov    ebx,0x5831b05
     a67:	1a 83 05 05 82 05    	sbb    al,BYTE PTR [rbx+0x5820505]
     a6d:	3b 00                	cmp    eax,DWORD PTR [rax]
     a6f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a72:	58                   	pop    rax
     a73:	05 41 00 02 04       	add    eax,0x4020041
     a78:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     a7e:	04 01                	add    al,0x1
     a80:	4a 05 66 00 02 04    	rex.WX add rax,0x4020066
     a86:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
     a89:	1a bb 05 05 82 05    	sbb    bh,BYTE PTR [rbx+0x5820505]
     a8f:	3b 00                	cmp    eax,DWORD PTR [rax]
     a91:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a94:	58                   	pop    rax
     a95:	05 41 00 02 04       	add    eax,0x4020041
     a9a:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     aa0:	04 01                	add    al,0x1
     aa2:	4a 05 67 00 02 04    	rex.WX add rax,0x4020067
     aa8:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
     aab:	01 bb 05 62 4c 05    	add    DWORD PTR [rbx+0x54c6205],edi
     ab1:	05 f3 05 25 00       	add    eax,0x2505f3
     ab6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     ab9:	74 05                	je     ac0 <stivale_hdr-0x1ff540>
     abb:	1d 9f 05 24 74       	sbb    eax,0x7424059f
     ac0:	05 0c 4a 05 05       	add    eax,0x5054a0c
     ac5:	83 05 26 00 02 04 01 	add    DWORD PTR [rip+0x4020026],0x1        # 4020af2 <__kernel_end+0x3e0eaf2>
     acc:	74 05                	je     ad3 <stivale_hdr-0x1ff52d>
     ace:	52                   	push   rdx
     acf:	75 05                	jne    ad6 <stivale_hdr-0x1ff52a>
     ad1:	61                   	(bad)  
     ad2:	ac                   	lods   al,BYTE PTR ds:[rsi]
     ad3:	05 1a 4a 05 05       	add    eax,0x5054a1a
     ad8:	4b 05 10 82 05 1e    	rex.WXB add rax,0x1e058210
     ade:	83 05 1c 82 05 0a 83 	add    DWORD PTR [rip+0xa05821c],0xffffff83        # a058d01 <__kernel_end+0x9e46d01>
     ae5:	05 1c bb 05 1e       	add    eax,0x1e05bb1c
     aea:	bb ad 05 1c 82       	mov    ebx,0x821c05ad
     aef:	05 0c 75 ad 05       	add    eax,0x5ad750c
     af4:	01 4b 05             	add    DWORD PTR [rbx+0x5],ecx
     af7:	3b 30                	cmp    esi,DWORD PTR [rax]
     af9:	05 09 bb 05 05       	add    eax,0x505bb09
     afe:	82                   	(bad)  
     aff:	05 0a 59 05 10       	add    eax,0x1005590a
     b04:	82                   	(bad)  
     b05:	05 09 4a 05 05       	add    eax,0x5054a09
     b0a:	3c 05                	cmp    al,0x5
     b0c:	09 4c 05 0f          	or     DWORD PTR [rbp+rax*1+0xf],ecx
     b10:	82                   	(bad)  
     b11:	05 05 4a 05 09       	add    eax,0x9054a05
     b16:	59                   	pop    rcx
     b17:	05 0f 82 05 1a       	add    eax,0x1a05820f
     b1c:	4a 05 0e 84 05 17    	rex.WX add rax,0x1705840e
     b22:	74 05                	je     b29 <stivale_hdr-0x1ff4d7>
     b24:	1d 82 05 15 3c       	sbb    eax,0x3c150582
     b29:	05 24 3c 05 0c       	add    eax,0xc053c24
     b2e:	4a 76 05             	rex.WX jbe b36 <stivale_hdr-0x1ff4ca>
     b31:	12 82 05 0a 4a 05    	adc    al,BYTE PTR [rdx+0x54a0a05]
     b37:	17                   	(bad)  
     b38:	03 78 9e             	add    edi,DWORD PTR [rax-0x62]
     b3b:	05 16 3d 05 01       	add    eax,0x1053d16
     b40:	28 05 3c 3e 05 09    	sub    BYTE PTR [rip+0x9053e3c],al        # 9054982 <__kernel_end+0x8e42982>
     b46:	bb 05 05 82 05       	mov    ebx,0x5820505
     b4b:	17                   	(bad)  
     b4c:	00 02                	add    BYTE PTR [rdx],al
     b4e:	04 01                	add    al,0x1
     b50:	58                   	pop    rax
     b51:	05 2c 00 02 04       	add    eax,0x402002c
     b56:	01 82 05 01 83 02    	add    DWORD PTR [rdx+0x2830105],eax
     b5c:	03 00                	add    eax,DWORD PTR [rax]
     b5e:	01 01                	add    DWORD PTR [rcx],eax
     b60:	44 04 00             	rex.R add al,0x0
     b63:	00 03                	add    BYTE PTR [rbx],al
     b65:	00 a6 00 00 00 01    	add    BYTE PTR [rsi+0x1000000],ah
     b6b:	01 fb                	add    ebx,edi
     b6d:	0e                   	(bad)  
     b6e:	0d 00 01 01 01       	or     eax,0x1010100
     b73:	01 00                	add    DWORD PTR [rax],eax
     b75:	00 00                	add    BYTE PTR [rax],al
     b77:	01 00                	add    DWORD PTR [rax],eax
     b79:	00 01                	add    BYTE PTR [rcx],al
     b7b:	73 72                	jae    bef <stivale_hdr-0x1ff411>
     b7d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     b7f:	6d                   	ins    DWORD PTR es:[rdi],dx
     b80:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     b82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b83:	72 79                	jb     bfe <stivale_hdr-0x1ff402>
     b85:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     b88:	63 00                	movsxd eax,DWORD PTR [rax]
     b8a:	73 72                	jae    bfe <stivale_hdr-0x1ff402>
     b8c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     b8e:	62                   	(bad)  
     b8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b90:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b91:	74 00                	je     b93 <stivale_hdr-0x1ff46d>
     b93:	73 72                	jae    c07 <stivale_hdr-0x1ff3f9>
     b95:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     b97:	64 72 69             	fs jb  c03 <stivale_hdr-0x1ff3fd>
     b9a:	76 65                	jbe    c01 <stivale_hdr-0x1ff3ff>
     b9c:	72 73                	jb     c11 <stivale_hdr-0x1ff3ef>
     b9e:	2f                   	(bad)  
     b9f:	61                   	(bad)  
     ba0:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     ba3:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     ba6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     ba8:	75 74                	jne    c1e <stivale_hdr-0x1ff3e2>
     baa:	69 6c 00 00 70 6d 6d 	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x2e6d6d70
     bb1:	2e 
     bb2:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     bb5:	00 01                	add    BYTE PTR [rcx],al
     bb7:	00 00                	add    BYTE PTR [rax],al
     bb9:	74 79                	je     c34 <stivale_hdr-0x1ff3cc>
     bbb:	70 65                	jo     c22 <stivale_hdr-0x1ff3de>
     bbd:	73 2e                	jae    bed <stivale_hdr-0x1ff413>
     bbf:	68 00 02 00 00       	push   0x200
     bc4:	62                   	(bad)  
     bc5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bc7:	74 2e                	je     bf7 <stivale_hdr-0x1ff409>
     bc9:	68 00 03 00 00       	push   0x300
     bce:	61                   	(bad)  
     bcf:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     bd2:	2e 68 00 04 00 00    	cs push 0x400
     bd8:	70 6d                	jo     c47 <stivale_hdr-0x1ff3b9>
     bda:	6d                   	ins    DWORD PTR es:[rdi],dx
     bdb:	2e 68 00 01 00 00    	cs push 0x100
     be1:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
     be5:	66 2e 68 00 03       	cs pushw 0x300
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	70 61                	jo     c4f <stivale_hdr-0x1ff3b1>
     bee:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x100682e
     bf5:	01 
     bf6:	00 00                	add    BYTE PTR [rax],al
     bf8:	6b 75 74 69          	imul   esi,DWORD PTR [rbp+0x74],0x69
     bfc:	6c                   	ins    BYTE PTR es:[rdi],dx
     bfd:	2e 68 00 05 00 00    	cs push 0x500
     c03:	62                   	(bad)  
     c04:	69 74 6d 61 70 2e 68 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x682e70
     c0b:	00 
     c0c:	05 00 00 00 05       	add    eax,0x5000000
     c11:	01 00                	add    DWORD PTR [rax],eax
     c13:	09 02                	or     DWORD PTR [rdx],eax
     c15:	f4                   	hlt    
     c16:	26 20 00             	and    BYTE PTR es:[rax],al
     c19:	00 00                	add    BYTE PTR [rax],al
     c1b:	00 00                	add    BYTE PTR [rax],al
     c1d:	03 0f                	add    ecx,DWORD PTR [rdi]
     c1f:	01 05 0d d7 05 05    	add    DWORD PTR [rip+0x505d70d],eax        # 505e332 <__kernel_end+0x4e4c332>
     c25:	4a 05 26 02 39 14    	rex.WX add rax,0x14390226
     c2b:	91                   	xchg   ecx,eax
     c2c:	91                   	xchg   ecx,eax
     c2d:	91                   	xchg   ecx,eax
     c2e:	91                   	xchg   ecx,eax
     c2f:	05 27 91 05 29       	add    eax,0x29059127
     c34:	91                   	xchg   ecx,eax
     c35:	05 27 91 05 01       	add    eax,0x1059127
     c3a:	77 31                	ja     c6d <stivale_hdr-0x1ff393>
     c3c:	05 17 f3 05 1c       	add    eax,0x1c05f317
     c41:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     c42:	05 11 ad 05 1a       	add    eax,0x1a05ad11
     c47:	00 02                	add    BYTE PTR [rdx],al
     c49:	04 03                	add    al,0x3
     c4b:	82                   	(bad)  
     c4c:	05 23 00 02 04       	add    eax,0x4020023
     c51:	02 9f 05 2a 00 02    	add    bl,BYTE PTR [rdi+0x2002a05]
     c57:	04 02                	add    al,0x2
     c59:	74 05                	je     c60 <stivale_hdr-0x1ff3a0>
     c5b:	2f                   	(bad)  
     c5c:	00 02                	add    BYTE PTR [rdx],al
     c5e:	04 02                	add    al,0x2
     c60:	74 05                	je     c67 <stivale_hdr-0x1ff399>
     c62:	05 00 02 04 02       	add    eax,0x2040200
     c67:	3b 05 01 76 3f 05    	cmp    eax,DWORD PTR [rip+0x53f7601]        # 53f826e <__kernel_end+0x51e626e>
     c6d:	1b 08                	sbb    ecx,DWORD PTR [rax]
     c6f:	3e 05 05 74 05 27    	ds add eax,0x27057405
     c75:	00 02                	add    BYTE PTR [rdx],al
     c77:	04 01                	add    al,0x1
     c79:	58                   	pop    rax
     c7a:	05 0c bc 05 0f       	add    eax,0xf05bc0c
     c7f:	08 14 05 18 00 02 04 	or     BYTE PTR [rax*1+0x4020018],dl
     c86:	01 82 05 50 9f 05    	add    DWORD PTR [rdx+0x59f5005],eax
     c8c:	65 74 05             	gs je  c94 <stivale_hdr-0x1ff36c>
     c8f:	60                   	(bad)  
     c90:	90                   	nop
     c91:	05 1d 3c 05 13       	add    eax,0x13053c1d
     c96:	4c 05 09 74 05 27    	rex.WR add rax,0x27057409
     c9c:	59                   	pop    rcx
     c9d:	05 34 74 05 2c       	add    eax,0x2c057434
     ca2:	82                   	(bad)  
     ca3:	05 1f 3c 05 05       	add    eax,0x5053c1f
     ca8:	00 02                	add    BYTE PTR [rdx],al
     caa:	04 02                	add    al,0x2
     cac:	70 05                	jo     cb3 <stivale_hdr-0x1ff34d>
     cae:	17                   	(bad)  
     caf:	7b 08                	jnp    cb9 <stivale_hdr-0x1ff347>
     cb1:	21 05 0c 08 22 05    	and    DWORD PTR [rip+0x522080c],eax        # 52214c3 <__kernel_end+0x500f4c3>
     cb7:	01 75 33             	add    DWORD PTR [rbp+0x33],esi
     cba:	05 05 08 3d 05       	add    eax,0x53d0805
     cbf:	11 e6                	adc    esi,esp
     cc1:	05 0a 76 05 0b       	add    eax,0xb05760a
     cc6:	08 14 05 0a 83 05 0f 	or     BYTE PTR [rax*1+0xf05830a],dl
     ccd:	84 05 18 00 02 04    	test   BYTE PTR [rip+0x4020018],al        # 4020ceb <__kernel_end+0x3e0eceb>
     cd3:	01 82 05 50 d7 05    	add    DWORD PTR [rdx+0x5d75005],eax
     cd9:	65 74 05             	gs je  ce1 <stivale_hdr-0x1ff31f>
     cdc:	60                   	(bad)  
     cdd:	90                   	nop
     cde:	05 1d 3c 05 13       	add    eax,0x13053c1d
     ce3:	4b 05 09 74 05 18    	rex.WXB add rax,0x18057409
     ce9:	59                   	pop    rcx
     cea:	05 29 82 05 0d       	add    eax,0xd058229
     cef:	66 05 3d 68          	add    ax,0x683d
     cf3:	05 2d 74 05 3b       	add    eax,0x3b05742d
     cf8:	4b 05 32 82 05 1f    	rex.WXB add rax,0x1f058232
     cfe:	00 02                	add    BYTE PTR [rdx],al
     d00:	04 02                	add    al,0x2
     d02:	a2 05 31 00 02 04 02 	movabs ds:0x5bb020402003105,al
     d09:	bb 05 
     d0b:	2a 00                	sub    al,BYTE PTR [rax]
     d0d:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     d10:	74 05                	je     d17 <stivale_hdr-0x1ff2e9>
     d12:	1f                   	(bad)  
     d13:	00 02                	add    BYTE PTR [rdx],al
     d15:	04 02                	add    al,0x2
     d17:	c8 00 02 04          	enter  0x200,0x4
     d1b:	02 83 05 33 00 02    	add    al,BYTE PTR [rbx+0x2003305]
     d21:	04 02                	add    al,0x2
     d23:	bb 05 1f 00 02       	mov    ebx,0x2001f05
     d28:	04 02                	add    al,0x2
     d2a:	74 00                	je     d2c <stivale_hdr-0x1ff2d4>
     d2c:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
     d2f:	08 21                	or     BYTE PTR [rcx],ah
     d31:	05 32 00 02 04       	add    eax,0x4020032
     d36:	02 bb 05 3a 00 02    	add    bh,BYTE PTR [rbx+0x2003a05]
     d3c:	04 02                	add    al,0x2
     d3e:	82                   	(bad)  
     d3f:	05 2a 00 02 04       	add    eax,0x402002a
     d44:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
     d47:	1f                   	(bad)  
     d48:	00 02                	add    BYTE PTR [rdx],al
     d4a:	04 02                	add    al,0x2
     d4c:	c8 00 02 04          	enter  0x200,0x4
     d50:	02 83 05 05 00 02    	add    al,BYTE PTR [rbx+0x2000505]
     d56:	04 02                	add    al,0x2
     d58:	03 70 ba             	add    esi,DWORD PTR [rax-0x46]
     d5b:	05 2d 03 13 9e       	add    eax,0x9e13032d
     d60:	05 17 08 9f 05       	add    eax,0x59f0817
     d65:	16                   	(bad)  
     d66:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     d67:	05 2f ad 05 0a       	add    eax,0xa05ad2f
     d6c:	82                   	(bad)  
     d6d:	05 1b 84 05 33       	add    eax,0x3305841b
     d72:	bb 05 26 82 05       	mov    ebx,0x5822605
     d77:	1b c8                	sbb    ecx,eax
     d79:	83 05 26 bb 05 1b 08 	add    DWORD PTR [rip+0x1b05bb26],0x8        # 1b05c8a6 <__kernel_end+0x1ae4a8a6>
     d80:	12 83 05 10 bc 05    	adc    al,BYTE PTR [rbx+0x5bc1005]
     d86:	0f 08                	invd   
     d88:	30 05 18 00 02 04    	xor    BYTE PTR [rip+0x4020018],al        # 4020da6 <__kernel_end+0x3e0eda6>
     d8e:	01 82 05 50 9f 05    	add    DWORD PTR [rdx+0x59f5005],eax
     d94:	65 74 05             	gs je  d9c <stivale_hdr-0x1ff264>
     d97:	60                   	(bad)  
     d98:	90                   	nop
     d99:	05 1d 3c 05 13       	add    eax,0x13053c1d
     d9e:	4b 05 09 74 05 26    	rex.WXB add rax,0x26057409
     da4:	00 02                	add    BYTE PTR [rdx],al
     da6:	04 01                	add    al,0x1
     da8:	58                   	pop    rax
     da9:	05 1d 00 02 04       	add    eax,0x402001d
     dae:	01 74 05 36          	add    DWORD PTR [rbp+rax*1+0x36],esi
     db2:	67 05 1a 82 05 29    	addr32 add eax,0x2905821a
     db8:	4a 05 1a 74 05 05    	rex.WX add rax,0x505741a
     dbe:	00 02                	add    BYTE PTR [rdx],al
     dc0:	04 02                	add    al,0x2
     dc2:	a9 05 38 7a 05       	test   eax,0x57a3805
     dc7:	3d 74 05 0f 4a       	cmp    eax,0x4a0f0574
     dcc:	05 20 4a 05 0f       	add    eax,0xf054a20
     dd1:	74 05                	je     dd8 <stivale_hdr-0x1ff228>
     dd3:	12 ae e5 05 16 03    	adc    ch,BYTE PTR [rsi+0x31605e5]
     dd9:	4e 08 c8             	rex.WRX or al,r9b
     ddc:	05 01 03 33 20       	add    eax,0x20330301
     de1:	05 25 30 bc 05       	add    eax,0x5bc3025
     de6:	0c 4a                	or     al,0x4a
     de8:	05 1e 84 05 20       	add    eax,0x2005841e
     ded:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     df0:	05 58 05 18 4d       	add    eax,0x4d180558
     df5:	05 23 08 75 05       	add    eax,0x5750823
     dfa:	27                   	(bad)  
     dfb:	08 3d 05 03 08 54    	or     BYTE PTR [rip+0x54080305],bh        # 54081106 <__kernel_end+0x53e6f106>
     e01:	05 01 25 05 38       	add    eax,0x38052501
     e06:	30 05 0f f4 05 18    	xor    BYTE PTR [rip+0x1805f40f],al        # 1806021b <__kernel_end+0x17e4e21b>
     e0c:	00 02                	add    BYTE PTR [rdx],al
     e0e:	04 03                	add    al,0x3
     e10:	82                   	(bad)  
     e11:	05 36 00 02 04       	add    eax,0x4020036
     e16:	02 9f 05 31 00 02    	add    bl,BYTE PTR [rdi+0x2003105]
     e1c:	04 02                	add    al,0x2
     e1e:	ac                   	lods   al,BYTE PTR ds:[rsi]
     e1f:	05 17 00 02 04       	add    eax,0x4020017
     e24:	02 74 05 05          	add    dh,BYTE PTR [rbp+rax*1+0x5]
     e28:	00 02                	add    BYTE PTR [rdx],al
     e2a:	04 02                	add    al,0x2
     e2c:	81 05 01 76 3f 05 25 	add    DWORD PTR [rip+0x53f7601],0xc05bb25        # 53f8437 <__kernel_end+0x51e6437>
     e33:	bb 05 0c 
     e36:	4a 05 1e 84 05 20    	rex.WX add rax,0x2005841e
     e3c:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     e3f:	05 66 05 18 4d       	add    eax,0x4d180566
     e44:	05 23 08 75 05       	add    eax,0x5750823
     e49:	27                   	(bad)  
     e4a:	08 3d 05 03 08 54    	or     BYTE PTR [rip+0x54080305],bh        # 54081155 <__kernel_end+0x53e6f155>
     e50:	05 01 25 05 41       	add    eax,0x41052501
     e55:	30 05 0f f4 05 18    	xor    BYTE PTR [rip+0x1805f40f],al        # 1806026a <__kernel_end+0x17e4e26a>
     e5b:	00 02                	add    BYTE PTR [rdx],al
     e5d:	04 03                	add    al,0x3
     e5f:	82                   	(bad)  
     e60:	05 35 00 02 04       	add    eax,0x4020035
     e65:	02 9f 05 30 00 02    	add    bl,BYTE PTR [rdi+0x2003005]
     e6b:	04 02                	add    al,0x2
     e6d:	ac                   	lods   al,BYTE PTR ds:[rsi]
     e6e:	05 15 00 02 04       	add    eax,0x4020015
     e73:	02 74 05 05          	add    dh,BYTE PTR [rbp+rax*1+0x5]
     e77:	00 02                	add    BYTE PTR [rdx],al
     e79:	04 02                	add    al,0x2
     e7b:	81 05 01 76 05 2e 3e 	add    DWORD PTR [rip+0x2e057601],0x840f053e        # 2e058486 <__kernel_end+0x2de46486>
     e82:	05 0f 84 
     e85:	05 32 00 02 04       	add    eax,0x4020032
     e8a:	01 82 05 37 00 02    	add    DWORD PTR [rdx+0x2003705],eax
     e90:	04 01                	add    al,0x1
     e92:	74 05                	je     e99 <stivale_hdr-0x1ff167>
     e94:	20 00                	and    BYTE PTR [rax],al
     e96:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e99:	4a 05 22 68 05 24    	rex.WX add rax,0x24056822
     e9f:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     ea2:	09 66 05             	or     DWORD PTR [rsi+0x5],esp
     ea5:	2e 51                	cs push rcx
     ea7:	05 1f 82 05 1e       	add    eax,0x1e05821f
     eac:	84 05 24 82 05 04    	test   BYTE PTR [rip+0x4058224],al        # 40590d6 <__kernel_end+0x3e470d6>
     eb2:	03 78 2e             	add    edi,DWORD PTR [rax+0x2e]
     eb5:	05 05 1d 05 0c       	add    eax,0xc051d05
     eba:	03 0e                	add    ecx,DWORD PTR [rsi]
     ebc:	74 05                	je     ec3 <stivale_hdr-0x1ff13d>
     ebe:	01 59 31             	add    DWORD PTR [rcx+0x31],ebx
     ec1:	05 05 bb 05 10       	add    eax,0x1005bb05
     ec6:	75 05                	jne    ecd <stivale_hdr-0x1ff133>
     ec8:	23 76 05             	and    esi,DWORD PTR [rsi+0x5]
     ecb:	0f 91 05 17 5a 05 0f 	setno  BYTE PTR [rip+0xf055a17]        # f0568e9 <__kernel_end+0xee448e9>
     ed2:	08 76 05             	or     BYTE PTR [rsi+0x5],dh
     ed5:	18 00                	sbb    BYTE PTR [rax],al
     ed7:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     eda:	82                   	(bad)  
     edb:	05 26 00 02 04       	add    eax,0x4020026
     ee0:	02 a0 05 3c 00 02    	add    ah,BYTE PTR [rax+0x2003c05]
     ee6:	04 02                	add    al,0x2
     ee8:	91                   	xchg   ecx,eax
     ee9:	05 37 00 02 04       	add    eax,0x4020037
     eee:	02 ac 05 1b 00 02 04 	add    ch,BYTE PTR [rbp+rax*1+0x402001b]
     ef5:	02 74 05 05          	add    dh,BYTE PTR [rbp+rax*1+0x5]
     ef9:	00 02                	add    BYTE PTR [rdx],al
     efb:	04 02                	add    al,0x2
     efd:	08 63 05             	or     BYTE PTR [rbx+0x5],ah
     f00:	0c 7a                	or     al,0x7a
     f02:	05 01 4b 05 38       	add    eax,0x38054b01
     f07:	30 05 23 bc 05 0a    	xor    BYTE PTR [rip+0xa05bc23],al        # a05cb30 <__kernel_end+0x9e4ab30>
     f0d:	4a 05 1e 83 05 20    	rex.WX add rax,0x2005831e
     f13:	08 58 05             	or     BYTE PTR [rax+0x5],bl
     f16:	05 58 05 18 4b       	add    eax,0x4b180558
     f1b:	05 16 08 75 08       	add    eax,0x8750816
     f20:	3d 05 2a 08 55       	cmp    eax,0x55082a05
     f25:	05 01 24 05 4c       	add    eax,0x4c052401
     f2a:	30 05 11 f4 05 1a    	xor    BYTE PTR [rip+0x1a05f411],al        # 1a060341 <__kernel_end+0x19e4e341>
     f30:	00 02                	add    BYTE PTR [rdx],al
     f32:	04 03                	add    al,0x3
     f34:	82                   	(bad)  
     f35:	05 3f 00 02 04       	add    eax,0x402003f
     f3a:	02 9f 05 3a 00 02    	add    bl,BYTE PTR [rdi+0x2003a05]
     f40:	04 02                	add    al,0x2
     f42:	ac                   	lods   al,BYTE PTR ds:[rsi]
     f43:	05 1f 00 02 04       	add    eax,0x402001f
     f48:	02 74 05 05          	add    dh,BYTE PTR [rbp+rax*1+0x5]
     f4c:	00 02                	add    BYTE PTR [rdx],al
     f4e:	04 02                	add    al,0x2
     f50:	81 05 01 76 05 38 3e 	add    DWORD PTR [rip+0x38057601],0xbb23053e        # 3805855b <__kernel_end+0x37e4655b>
     f57:	05 23 bb 
     f5a:	05 0a 4a 05 1e       	add    eax,0x1e054a0a
     f5f:	83 05 20 08 58 05 05 	add    DWORD PTR [rip+0x5580820],0x5        # 5581786 <__kernel_end+0x536f786>
     f66:	66 05 18 4b          	add    ax,0x4b18
     f6a:	05 16 08 75 08       	add    eax,0x8750816
     f6f:	3d 05 29 08 55       	cmp    eax,0x55082905
     f74:	05 01 24 05 4c       	add    eax,0x4c052401
     f79:	30 05 0f f4 05 18    	xor    BYTE PTR [rip+0x1805f40f],al        # 1806038e <__kernel_end+0x17e4e38e>
     f7f:	00 02                	add    BYTE PTR [rdx],al
     f81:	04 03                	add    al,0x3
     f83:	82                   	(bad)  
     f84:	05 3e 00 02 04       	add    eax,0x402003e
     f89:	02 9f 05 39 00 02    	add    bl,BYTE PTR [rdi+0x2003905]
     f8f:	04 02                	add    al,0x2
     f91:	ac                   	lods   al,BYTE PTR ds:[rsi]
     f92:	05 1f 00 02 04       	add    eax,0x402001f
     f97:	02 74 05 05          	add    dh,BYTE PTR [rbp+rax*1+0x5]
     f9b:	00 02                	add    BYTE PTR [rdx],al
     f9d:	04 02                	add    al,0x2
     f9f:	81 05 01 76 02 03 00 	add    DWORD PTR [rip+0x3027601],0xa0010100        # 30285aa <__kernel_end+0x2e165aa>
     fa6:	01 01 a0 
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	00 03                	add    BYTE PTR [rbx],al
     fad:	00 4f 00             	add    BYTE PTR [rdi+0x0],cl
     fb0:	00 00                	add    BYTE PTR [rax],al
     fb2:	01 01                	add    DWORD PTR [rcx],eax
     fb4:	fb                   	sti    
     fb5:	0e                   	(bad)  
     fb6:	0d 00 01 01 01       	or     eax,0x1010100
     fbb:	01 00                	add    DWORD PTR [rax],eax
     fbd:	00 00                	add    BYTE PTR [rax],al
     fbf:	01 00                	add    DWORD PTR [rax],eax
     fc1:	00 01                	add    BYTE PTR [rcx],al
     fc3:	73 72                	jae    1037 <stivale_hdr-0x1fefc9>
     fc5:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     fc7:	6d                   	ins    DWORD PTR es:[rdi],dx
     fc8:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     fca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fcb:	72 79                	jb     1046 <stivale_hdr-0x1fefba>
     fcd:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     fd0:	63 00                	movsxd eax,DWORD PTR [rax]
     fd2:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
     fd5:	65 72 61             	gs jb  1039 <stivale_hdr-0x1fefc7>
     fd8:	74 69                	je     1043 <stivale_hdr-0x1fefbd>
     fda:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fdb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fdc:	73 2e                	jae    100c <stivale_hdr-0x1feff4>
     fde:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     fe1:	00 01                	add    BYTE PTR [rcx],al
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	74 79                	je     1060 <stivale_hdr-0x1fefa0>
     fe7:	70 65                	jo     104e <stivale_hdr-0x1fefb2>
     fe9:	73 2e                	jae    1019 <stivale_hdr-0x1fefe7>
     feb:	68 00 02 00 00       	push   0x200
     ff0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff1:	70 65                	jo     1058 <stivale_hdr-0x1fefa8>
     ff3:	72 61                	jb     1056 <stivale_hdr-0x1fefaa>
     ff5:	74 69                	je     1060 <stivale_hdr-0x1fefa0>
     ff7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ff9:	73 2e                	jae    1029 <stivale_hdr-0x1fefd7>
     ffb:	68 00 01 00 00       	push   0x100
    1000:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2091007 <__kernel_end+0x1e7f007>
    1006:	49 2f                	rex.WB (bad) 
    1008:	20 00                	and    BYTE PTR [rax],al
    100a:	00 00                	add    BYTE PTR [rax],al
    100c:	00 00                	add    BYTE PTR [rax],al
    100e:	15 05 02 08 3d       	adc    eax,0x3d080205
    1013:	05 09 02 27 13       	add    eax,0x13270209
    1018:	05 01 4b 05 49       	add    eax,0x49054b01
    101d:	30 05 08 08 4b 05    	xor    BYTE PTR [rip+0x54b0808],al        # 54b182b <__kernel_end+0x529f82b>
    1023:	0e                   	(bad)  
    1024:	83 05 17 00 02 04 03 	add    DWORD PTR [rip+0x4020017],0x3        # 4021042 <__kernel_end+0x3e0f042>
    102b:	82                   	(bad)  
    102c:	05 08 00 02 04       	add    eax,0x4020008
    1031:	02 9f 05 0a 00 02    	add    bl,BYTE PTR [rdi+0x2000a05]
    1037:	04 02                	add    al,0x2
    1039:	ac                   	lods   al,BYTE PTR ds:[rsi]
    103a:	05 02 00 02 04       	add    eax,0x4020002
    103f:	02 65 05             	add    ah,BYTE PTR [rbp+0x5]
    1042:	09 76 05             	or     DWORD PTR [rsi+0x5],esi
    1045:	01 4b 02             	add    DWORD PTR [rbx+0x2],ecx
    1048:	02 00                	add    al,BYTE PTR [rax]
    104a:	01 01                	add    DWORD PTR [rcx],eax
    104c:	f3 02 00             	repz add al,BYTE PTR [rax]
    104f:	00 03                	add    BYTE PTR [rbx],al
    1051:	00 93 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],dl
    1057:	01 fb                	add    ebx,edi
    1059:	0e                   	(bad)  
    105a:	0d 00 01 01 01       	or     eax,0x1010100
    105f:	01 00                	add    DWORD PTR [rax],eax
    1061:	00 00                	add    BYTE PTR [rax],al
    1063:	01 00                	add    DWORD PTR [rax],eax
    1065:	00 01                	add    BYTE PTR [rcx],al
    1067:	73 72                	jae    10db <stivale_hdr-0x1fef25>
    1069:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    106b:	6d                   	ins    DWORD PTR es:[rdi],dx
    106c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    106e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    106f:	72 79                	jb     10ea <stivale_hdr-0x1fef16>
    1071:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1074:	63 00                	movsxd eax,DWORD PTR [rax]
    1076:	73 72                	jae    10ea <stivale_hdr-0x1fef16>
    1078:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    107a:	64 72 69             	fs jb  10e6 <stivale_hdr-0x1fef1a>
    107d:	76 65                	jbe    10e4 <stivale_hdr-0x1fef1c>
    107f:	72 73                	jb     10f4 <stivale_hdr-0x1fef0c>
    1081:	2f                   	(bad)  
    1082:	61                   	(bad)  
    1083:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1086:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1089:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    108b:	62                   	(bad)  
    108c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    108d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    108e:	74 00                	je     1090 <stivale_hdr-0x1fef70>
    1090:	73 72                	jae    1104 <stivale_hdr-0x1feefc>
    1092:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1094:	75 74                	jne    110a <stivale_hdr-0x1feef6>
    1096:	69 6c 00 00 70 61 67 	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x69676170
    109d:	69 
    109e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    109f:	67 2e 63 70 70       	movsxd esi,DWORD PTR cs:[eax+0x70]
    10a4:	00 01                	add    BYTE PTR [rcx],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	74 79                	je     1123 <stivale_hdr-0x1feedd>
    10aa:	70 65                	jo     1111 <stivale_hdr-0x1feeef>
    10ac:	73 2e                	jae    10dc <stivale_hdr-0x1fef24>
    10ae:	68 00 02 00 00       	push   0x200
    10b3:	61                   	(bad)  
    10b4:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    10b7:	2e 68 00 03 00 00    	cs push 0x300
    10bd:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
    10c1:	66 2e 68 00 04       	cs pushw 0x400
    10c6:	00 00                	add    BYTE PTR [rax],al
    10c8:	70 61                	jo     112b <stivale_hdr-0x1feed5>
    10ca:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x100682e
    10d1:	01 
    10d2:	00 00                	add    BYTE PTR [rax],al
    10d4:	6b 75 74 69          	imul   esi,DWORD PTR [rbp+0x74],0x69
    10d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d9:	2e 68 00 05 00 00    	cs push 0x500
    10df:	70 6d                	jo     114e <stivale_hdr-0x1feeb2>
    10e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    10e2:	2e 68 00 01 00 00    	cs push 0x100
    10e8:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 20910ef <__kernel_end+0x1e7f0ef>
    10ee:	d8 2f                	fsubr  DWORD PTR [rdi]
    10f0:	20 00                	and    BYTE PTR [rax],al
    10f2:	00 00                	add    BYTE PTR [rax],al
    10f4:	00 00                	add    BYTE PTR [rax],al
    10f6:	03 18                	add    ebx,DWORD PTR [rax]
    10f8:	01 05 15 f4 05 1b    	add    DWORD PTR [rip+0x1b05f415],eax        # 1b060513 <__kernel_end+0x1ae4e513>
    10fe:	59                   	pop    rcx
    10ff:	05 09 ba 05 15       	add    eax,0x1505ba09
    1104:	83 05 1c 59 05 0a ba 	add    DWORD PTR [rip+0xa05591c],0xffffffba        # a056a27 <__kernel_end+0x9e44a27>
    110b:	05 15 83 05 1c       	add    eax,0x1c058315
    1110:	59                   	pop    rcx
    1111:	05 0a ba 05 15       	add    eax,0x1505ba0a
    1116:	83 05 1d 59 05 0b ba 	add    DWORD PTR [rip+0xb05591d],0xffffffba        # b056a3a <__kernel_end+0xae44a3a>
    111d:	05 01 75 3f 05       	add    eax,0x53f7501
    1122:	47 08 4b 05          	rex.RXB or BYTE PTR [r11+0x5],r9b
    1126:	27                   	(bad)  
    1127:	08 31                	or     BYTE PTR [rcx],dh
    1129:	05 22 74 05 09       	add    eax,0x9057422
    112e:	4a 05 16 84 05 09    	rex.WX add rax,0x9058416
    1134:	08 12                	or     BYTE PTR [rdx],dl
    1136:	05 05 3c 05 2d       	add    eax,0x2d053c05
    113b:	84 05 23 91 05 18    	test   BYTE PTR [rip+0x18059123],al        # 1805a264 <__kernel_end+0x17e48264>
    1141:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
    1144:	15 08 91 08 59       	adc    eax,0x59089108
    1149:	05 27 08 59 05       	add    eax,0x5590827
    114e:	20 74 05 27          	and    BYTE PTR [rbp+rax*1+0x27],dh
    1152:	4a 05 23 83 05 34    	rex.WX add rax,0x34058323
    1158:	08 93 05 37 ba 05    	or     BYTE PTR [rbx+0x5ba3705],dl
    115e:	0d 4a 05 20 4d       	or     eax,0x4d20054a
    1163:	05 09 4a 05 16       	add    eax,0x16054a09
    1168:	bc 05 09 08 12       	mov    esp,0x12080905
    116d:	05 05 3c 05 2c       	add    eax,0x2c053c05
    1172:	84 05 23 91 05 18    	test   BYTE PTR [rip+0x18059123],al        # 1805a29b <__kernel_end+0x17e4829b>
    1178:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
    117b:	15 08 91 08 59       	adc    eax,0x59089108
    1180:	05 1e 08 59 05       	add    eax,0x559081e
    1185:	24 4a                	and    al,0x4a
    1187:	05 23 bb 05 33       	add    eax,0x3305bb23
    118c:	08 93 05 36 ba 05    	or     BYTE PTR [rbx+0x5ba3605],dl
    1192:	0c 4a                	or     al,0x4a
    1194:	05 1f 4c 05 09       	add    eax,0x9054c1f
    1199:	4a 05 16 bc 05 09    	rex.WX add rax,0x905bc16
    119f:	08 12                	or     BYTE PTR [rdx],dl
    11a1:	05 05 3c 05 2c       	add    eax,0x2c053c05
    11a6:	84 05 23 91 05 18    	test   BYTE PTR [rip+0x18059123],al        # 1805a2cf <__kernel_end+0x17e482cf>
    11ac:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
    11af:	15 08 91 08 59       	adc    eax,0x59089108
    11b4:	05 1d 08 59 05       	add    eax,0x559081d
    11b9:	23 4a bb             	and    ecx,DWORD PTR [rdx-0x45]
    11bc:	05 33 08 93 05       	add    eax,0x5930833
    11c1:	36 ba 05 0c 4a 05    	ss mov edx,0x54a0c05
    11c7:	1f                   	(bad)  
    11c8:	4d 05 09 4a 05 14    	rex.WRB add rax,0x14054a09
    11ce:	bb 05 11 08 91       	mov    ebx,0x91081105
    11d3:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
    11d6:	10 08                	adc    BYTE PTR [rax],cl
    11d8:	59                   	pop    rcx
    11d9:	05 19 08 21 05       	add    eax,0x5210819
    11de:	1e                   	(bad)  
    11df:	4a 05 01 bb 3f 05    	rex.WX add rax,0x53fbb01
    11e5:	48 bb 05 3d 08 31 05 	movabs rbx,0x54a0c0531083d05
    11ec:	0c 4a 05 
    11ef:	1f                   	(bad)  
    11f0:	83 05 15 74 05 27 4c 	add    DWORD PTR [rip+0x27057415],0x4c        # 2705860c <__kernel_end+0x26e4660c>
    11f7:	05 22 74 05 09       	add    eax,0x9057422
    11fc:	4a 05 16 85 05 09    	rex.WX add rax,0x9058516
    1202:	08 12                	or     BYTE PTR [rdx],dl
    1204:	05 05 3c 05 19       	add    eax,0x19053c05
    1209:	4b 05 30 bc 05 33    	rex.WXB add rax,0x3305bc30
    120f:	ba 05 09 4a 05       	mov    edx,0x54a0905
    1214:	20 4d 05             	and    BYTE PTR [rbp+0x5],cl
    1217:	09 4a 05             	or     DWORD PTR [rdx+0x5],ecx
    121a:	16                   	(bad)  
    121b:	bd 05 09 08 12       	mov    ebp,0x12080905
    1220:	05 05 3c 05 19       	add    eax,0x19053c05
    1225:	4b 05 2f bc 05 32    	rex.WXB add rax,0x3205bc2f
    122b:	ba 05 08 4a 05       	mov    edx,0x54a0805
    1230:	1f                   	(bad)  
    1231:	4c 05 09 4a 05 16    	rex.WR add rax,0x16054a09
    1237:	bd 05 09 08 12       	mov    ebp,0x12080905
    123c:	05 05 3c 05 19       	add    eax,0x19053c05
    1241:	4b 05 2f 92 05 32    	rex.WXB add rax,0x3205922f
    1247:	ba 05 08 4a 05       	mov    edx,0x54a0805
    124c:	1f                   	(bad)  
    124d:	4c 05 09 4a 05 16    	rex.WR add rax,0x16054a09
    1253:	bc 05 09 08 12       	mov    esp,0x12080905
    1258:	05 05 3c 05 19       	add    eax,0x19053c05
    125d:	4b 05 24 92 05 29    	rex.WXB add rax,0x29059224
    1263:	ba 05 27 4a 05       	mov    edx,0x54a2705
    1268:	01 00                	add    DWORD PTR [rax],eax
    126a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    126d:	3d 31 05 48 bb       	cmp    eax,0xbb480531
    1272:	05 27 08 30 05       	add    eax,0x5300827
    1277:	22 74 05 09          	and    dh,BYTE PTR [rbp+rax*1+0x9]
    127b:	4a 05 21 83 05 1c    	rex.WX add rax,0x1c058321
    1281:	74 05                	je     1288 <stivale_hdr-0x1fed78>
    1283:	2b 4a 05             	sub    ecx,DWORD PTR [rdx+0x5]
    1286:	3c 08                	cmp    al,0x8
    1288:	83 05 3f ba 05 44 4a 	add    DWORD PTR [rip+0x4405ba3f],0x4a        # 4405ccce <__kernel_end+0x43e4acce>
    128f:	05 1a 4b 05 28       	add    eax,0x28054b1a
    1294:	4a 05 20 08 f3 05    	rex.WX add rax,0x5f30820
    129a:	09 4a 05             	or     DWORD PTR [rdx+0x5],ecx
    129d:	3b bb 05 3e ba 05    	cmp    edi,DWORD PTR [rbx+0x5ba3e05]
    12a3:	43                   	rex.XB
    12a4:	4a 05 19 4b 05 27    	rex.WX add rax,0x27054b19
    12aa:	4a 05 1f 08 f3 05    	rex.WX add rax,0x5f3081f
    12b0:	09 4a 05             	or     DWORD PTR [rdx+0x5],ecx
    12b3:	3b bb 05 3e ba 05    	cmp    edi,DWORD PTR [rbx+0x5ba3e05]
    12b9:	43                   	rex.XB
    12ba:	4a 05 19 4b 05 26    	rex.WX add rax,0x26054b19
    12c0:	4a 05 01 08 f3 05    	rex.WX add rax,0x5f30801
    12c6:	51                   	push   rcx
    12c7:	3e 05 28 08 3e 05    	ds add eax,0x53e0828
    12cd:	0c 3c                	or     al,0x3c
    12cf:	05 0b 08 13 05       	add    eax,0x513080b
    12d4:	0e                   	(bad)  
    12d5:	74 05                	je     12dc <stivale_hdr-0x1fed24>
    12d7:	0b 74 05 05          	or     esi,DWORD PTR [rbp+rax*1+0x5]
    12db:	9f                   	lahf   
    12dc:	05 0f 67 05 01       	add    eax,0x105670f
    12e1:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    12e4:	43                   	rex.XB
    12e5:	3e 05 28 e6 05 0c    	ds add eax,0xc05e628
    12eb:	3c 05                	cmp    al,0x5
    12ed:	0d 08 13 05 13       	or     eax,0x13051308
    12f2:	74 05                	je     12f9 <stivale_hdr-0x1fed07>
    12f4:	30 4a 05             	xor    BYTE PTR [rdx+0x5],cl
    12f7:	01 67 05             	add    DWORD PTR [rdi+0x5],esp
    12fa:	3c 30                	cmp    al,0x30
    12fc:	05 0d bc 05 27       	add    eax,0x2705bc0d
    1301:	74 05                	je     1308 <stivale_hdr-0x1fecf8>
    1303:	01 c9                	add    ecx,ecx
    1305:	05 4a 30 05 0e       	add    eax,0xe05304a
    130a:	f4                   	hlt    
    130b:	05 0b d7 08 9f       	add    eax,0x9f08d70b
    1310:	05 18 74 05 0b       	add    eax,0xb057418
    1315:	82                   	(bad)  
    1316:	05 01 9f 05 42       	add    eax,0x42059f01
    131b:	4c 05 0b 08 14 05    	rex.WR add rax,0x514080b
    1321:	2c 4b                	sub    al,0x4b
    1323:	05 0d 74 05 0b       	add    eax,0xb05740d
    1328:	08 83 05 2d 3d 05    	or     BYTE PTR [rbx+0x53d2d05],al
    132e:	0d 74 05 0b 08       	or     eax,0x80b0574
    1333:	83 05 2b 3d 05 0d 74 	add    DWORD PTR [rip+0xd053d2b],0x74        # d055065 <__kernel_end+0xce43065>
    133a:	05 01 08 83 02       	add    eax,0x2830801
    133f:	03 00                	add    eax,DWORD PTR [rax]
    1341:	01 01                	add    DWORD PTR [rcx],eax
    1343:	c2 00 00             	ret    0x0
    1346:	00 03                	add    BYTE PTR [rbx],al
    1348:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    134b:	00 00                	add    BYTE PTR [rax],al
    134d:	01 01                	add    DWORD PTR [rcx],eax
    134f:	fb                   	sti    
    1350:	0e                   	(bad)  
    1351:	0d 00 01 01 01       	or     eax,0x1010100
    1356:	01 00                	add    DWORD PTR [rax],eax
    1358:	00 00                	add    BYTE PTR [rax],al
    135a:	01 00                	add    DWORD PTR [rax],eax
    135c:	00 01                	add    BYTE PTR [rcx],al
    135e:	73 72                	jae    13d2 <stivale_hdr-0x1fec2e>
    1360:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1362:	64 72 69             	fs jb  13ce <stivale_hdr-0x1fec32>
    1365:	76 65                	jbe    13cc <stivale_hdr-0x1fec34>
    1367:	72 73                	jb     13dc <stivale_hdr-0x1fec24>
    1369:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    136c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    136e:	73 63                	jae    13d3 <stivale_hdr-0x1fec2d>
    1370:	68 65 64 75 6c       	push   0x6c756465
    1375:	69 6e 67 00 73 72 63 	imul   ebp,DWORD PTR [rsi+0x67],0x63727300
    137c:	00 00                	add    BYTE PTR [rax],al
    137e:	69 6f 2e 68 00 01 00 	imul   ebp,DWORD PTR [rdi+0x2e],0x10068
    1385:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    1389:	65 72 2e             	gs jb  13ba <stivale_hdr-0x1fec46>
    138c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    138f:	00 02                	add    BYTE PTR [rdx],al
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	74 79                	je     140e <stivale_hdr-0x1febf2>
    1395:	70 65                	jo     13fc <stivale_hdr-0x1fec04>
    1397:	73 2e                	jae    13c7 <stivale_hdr-0x1fec39>
    1399:	68 00 03 00 00       	push   0x300
    139e:	74 69                	je     1409 <stivale_hdr-0x1febf7>
    13a0:	6d                   	ins    DWORD PTR es:[rdi],dx
    13a1:	65 72 2e             	gs jb  13d2 <stivale_hdr-0x1fec2e>
    13a4:	68 00 02 00 00       	push   0x200
    13a9:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 20913b4 <__kernel_end+0x1e7f3b4>
    13af:	66 37                	data16 (bad) 
    13b1:	20 00                	and    BYTE PTR [rax],al
    13b3:	00 00                	add    BYTE PTR [rax],al
    13b5:	00 00                	add    BYTE PTR [rax],al
    13b7:	17                   	(bad)  
    13b8:	05 09 08 4b 05       	add    eax,0x54b0809
    13bd:	05 93 04 02 05       	add    eax,0x5020493
    13c2:	01 3c 05 18 4b 05 01 	add    DWORD PTR [rax*1+0x1054b18],edi
    13c9:	9f                   	lahf   
    13ca:	3f                   	(bad)  
    13cb:	05 05 ad 05 12       	add    eax,0x1205ad05
    13d0:	21 05 17 91 05 0d    	and    DWORD PTR [rip+0xd059117],eax        # d05a4ed <__kernel_end+0xce484ed>
    13d6:	c8 75 e5 05          	enter  0xe575,0x5
    13da:	1c 08                	sbb    al,0x8
    13dc:	59                   	pop    rcx
    13dd:	05 0d ac 05 05       	add    eax,0x505ac0d
    13e2:	e5 05                	in     eax,0x5
    13e4:	01 21                	add    DWORD PTR [rcx],esp
    13e6:	3f                   	(bad)  
    13e7:	05 05 ad 05 15       	add    eax,0x1505ad05
    13ec:	21 05 1a 91 05 10    	and    DWORD PTR [rip+0x1005911a],eax        # 1005a50c <__kernel_end+0xfe4850c>
    13f2:	c8 05 0d 75          	enter  0xd05,0x75
    13f6:	e5 05                	in     eax,0x5
    13f8:	1c 08                	sbb    al,0x8
    13fa:	59                   	pop    rcx
    13fb:	05 0d ac 05 05       	add    eax,0x505ac0d
    1400:	e5 05                	in     eax,0x5
    1402:	01 21                	add    DWORD PTR [rcx],esp
    1404:	02 03                	add    al,BYTE PTR [rbx]
    1406:	00 01                	add    BYTE PTR [rcx],al
    1408:	01 58 01             	add    DWORD PTR [rax+0x1],ebx
    140b:	00 00                	add    BYTE PTR [rax],al
    140d:	03 00                	add    eax,DWORD PTR [rax]
    140f:	f1                   	icebp  
    1410:	00 00                	add    BYTE PTR [rax],al
    1412:	00 01                	add    BYTE PTR [rcx],al
    1414:	01 fb                	add    ebx,edi
    1416:	0e                   	(bad)  
    1417:	0d 00 01 01 01       	or     eax,0x1010100
    141c:	01 00                	add    DWORD PTR [rax],eax
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	01 00                	add    DWORD PTR [rax],eax
    1422:	00 01                	add    BYTE PTR [rcx],al
    1424:	73 72                	jae    1498 <stivale_hdr-0x1feb68>
    1426:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1428:	75 73                	jne    149d <stivale_hdr-0x1feb63>
    142a:	65 72 73             	gs jb  14a0 <stivale_hdr-0x1feb60>
    142d:	70 61                	jo     1490 <stivale_hdr-0x1feb70>
    142f:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1432:	73 72                	jae    14a6 <stivale_hdr-0x1feb5a>
    1434:	63 00                	movsxd eax,DWORD PTR [rax]
    1436:	73 72                	jae    14aa <stivale_hdr-0x1feb56>
    1438:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    143a:	64 72 69             	fs jb  14a6 <stivale_hdr-0x1feb5a>
    143d:	76 65                	jbe    14a4 <stivale_hdr-0x1feb5c>
    143f:	72 73                	jb     14b4 <stivale_hdr-0x1feb4c>
    1441:	2f                   	(bad)  
    1442:	6b 62 64 00          	imul   esp,DWORD PTR [rdx+0x64],0x0
    1446:	73 72                	jae    14ba <stivale_hdr-0x1feb46>
    1448:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    144a:	64 72 69             	fs jb  14b6 <stivale_hdr-0x1feb4a>
    144d:	76 65                	jbe    14b4 <stivale_hdr-0x1feb4c>
    144f:	72 73                	jb     14c4 <stivale_hdr-0x1feb3c>
    1451:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1454:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1456:	64 72 69             	fs jb  14c2 <stivale_hdr-0x1feb3e>
    1459:	76 65                	jbe    14c0 <stivale_hdr-0x1feb40>
    145b:	72 73                	jb     14d0 <stivale_hdr-0x1feb30>
    145d:	2f                   	(bad)  
    145e:	61                   	(bad)  
    145f:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1462:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1465:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1467:	62                   	(bad)  
    1468:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1469:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    146a:	74 00                	je     146c <stivale_hdr-0x1feb94>
    146c:	73 72                	jae    14e0 <stivale_hdr-0x1feb20>
    146e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1470:	6d                   	ins    DWORD PTR es:[rdi],dx
    1471:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1473:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1474:	72 79                	jb     14ef <stivale_hdr-0x1feb11>
    1476:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1479:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    147b:	64 72 69             	fs jb  14e7 <stivale_hdr-0x1feb19>
    147e:	76 65                	jbe    14e5 <stivale_hdr-0x1feb1b>
    1480:	72 73                	jb     14f5 <stivale_hdr-0x1feb0b>
    1482:	2f                   	(bad)  
    1483:	67 66 78 2f          	addr32 data16 js 14b6 <stivale_hdr-0x1feb4a>
    1487:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    1489:	70 00                	jo     148b <stivale_hdr-0x1feb75>
    148b:	73 72                	jae    14ff <stivale_hdr-0x1feb01>
    148d:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    148f:	64 72 69             	fs jb  14fb <stivale_hdr-0x1feb05>
    1492:	76 65                	jbe    14f9 <stivale_hdr-0x1feb07>
    1494:	72 73                	jb     1509 <stivale_hdr-0x1feaf7>
    1496:	2f                   	(bad)  
    1497:	74 74                	je     150d <stivale_hdr-0x1feaf3>
    1499:	79 00                	jns    149b <stivale_hdr-0x1feb65>
    149b:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    149e:	73 63                	jae    1503 <stivale_hdr-0x1feafd>
    14a0:	61                   	(bad)  
    14a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    14a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    14a3:	73 2e                	jae    14d3 <stivale_hdr-0x1feb2d>
    14a5:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    14a8:	00 01                	add    BYTE PTR [rcx],al
    14aa:	00 00                	add    BYTE PTR [rax],al
    14ac:	74 79                	je     1527 <stivale_hdr-0x1fead9>
    14ae:	70 65                	jo     1515 <stivale_hdr-0x1feaeb>
    14b0:	73 2e                	jae    14e0 <stivale_hdr-0x1feb20>
    14b2:	68 00 02 00 00       	push   0x200
    14b7:	6b 62 64 2e          	imul   esp,DWORD PTR [rdx+0x64],0x2e
    14bb:	68 00 03 00 00       	push   0x300
    14c0:	69 6f 2e 68 00 04 00 	imul   ebp,DWORD PTR [rdi+0x2e],0x40068
    14c7:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
    14ca:	70 69                	jo     1535 <stivale_hdr-0x1feacb>
    14cc:	2e 68 00 05 00 00    	cs push 0x500
    14d2:	62                   	(bad)  
    14d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14d5:	74 2e                	je     1505 <stivale_hdr-0x1feafb>
    14d7:	68 00 06 00 00       	push   0x600
    14dc:	70 6d                	jo     154b <stivale_hdr-0x1feab5>
    14de:	6d                   	ins    DWORD PTR es:[rdi],dx
    14df:	2e 68 00 07 00 00    	cs push 0x700
    14e5:	70 61                	jo     1548 <stivale_hdr-0x1feab8>
    14e7:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x700682e
    14ee:	07 
    14ef:	00 00                	add    BYTE PTR [rax],al
    14f1:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    14f3:	70 2e                	jo     1523 <stivale_hdr-0x1feadd>
    14f5:	68 00 08 00 00       	push   0x800
    14fa:	74 74                	je     1570 <stivale_hdr-0x1fea90>
    14fc:	79 2e                	jns    152c <stivale_hdr-0x1fead4>
    14fe:	68 00 09 00 00       	push   0x900
    1503:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 209150a <__kernel_end+0x1e7f50a>
    1509:	70 38                	jo     1543 <stivale_hdr-0x1feabd>
    150b:	20 00                	and    BYTE PTR [rax],al
    150d:	00 00                	add    BYTE PTR [rax],al
    150f:	00 00                	add    BYTE PTR [rax],al
    1511:	03 0a                	add    ecx,DWORD PTR [rdx]
    1513:	01 05 2b bb 05 01    	add    DWORD PTR [rip+0x105bb2b],eax        # 105d044 <__kernel_end+0xe4b044>
    1519:	bb 3f 05 12 c1       	mov    ebx,0xc112053f
    151e:	05 14 d7 05 09       	add    eax,0x905d714
    1523:	d6                   	(bad)  
    1524:	05 14 3d 05 09       	add    eax,0x9053d14
    1529:	d6                   	(bad)  
    152a:	05 20 03 78 3c       	add    eax,0x3c780320
    152f:	05 1a 3e 05 20       	add    eax,0x20053e1a
    1534:	9c                   	pushf  
    1535:	05 01 03 0b 08       	add    eax,0x80b0301
    153a:	20 44 05 0d          	and    BYTE PTR [rbp+rax*1+0xd],al
    153e:	c9                   	leave  
    153f:	05 05 4a 05 21       	add    eax,0x21054a05
    1544:	af                   	scas   eax,DWORD PTR es:[rdi]
    1545:	bc 05 14 bc 05       	mov    esp,0x5bc1405
    154a:	01 5a 31             	add    DWORD PTR [rdx+0x31],ebx
    154d:	05 13 bb 05 01       	add    eax,0x105bb13
    1552:	bb 3f 05 2b 83       	mov    ebx,0x832b053f
    1557:	05 28 91 05 0c       	add    eax,0xc059128
    155c:	bb 05 01 4b 02       	mov    ebx,0x24b0105
    1561:	02 00                	add    al,BYTE PTR [rax]
    1563:	01 01                	add    DWORD PTR [rcx],eax
    1565:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	00 03                	add    BYTE PTR [rbx],al
    156a:	00 44 00 00          	add    BYTE PTR [rax+rax*1+0x0],al
    156e:	00 01                	add    BYTE PTR [rcx],al
    1570:	01 fb                	add    ebx,edi
    1572:	0e                   	(bad)  
    1573:	0d 00 01 01 01       	or     eax,0x1010100
    1578:	01 00                	add    DWORD PTR [rax],eax
    157a:	00 00                	add    BYTE PTR [rax],al
    157c:	01 00                	add    DWORD PTR [rax],eax
    157e:	00 01                	add    BYTE PTR [rcx],al
    1580:	73 72                	jae    15f4 <stivale_hdr-0x1fea0c>
    1582:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1584:	75 73                	jne    15f9 <stivale_hdr-0x1fea07>
    1586:	65 72 73             	gs jb  15fc <stivale_hdr-0x1fea04>
    1589:	70 61                	jo     15ec <stivale_hdr-0x1fea14>
    158b:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    158e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1590:	74 72                	je     1604 <stivale_hdr-0x1fe9fc>
    1592:	79 00                	jns    1594 <stivale_hdr-0x1fea6c>
    1594:	00 6b 63             	add    BYTE PTR [rbx+0x63],ch
    1597:	61                   	(bad)  
    1598:	73 63                	jae    15fd <stivale_hdr-0x1fea03>
    159a:	69 69 2e 63 70 70 00 	imul   ebp,DWORD PTR [rcx+0x2e],0x707063
    15a1:	01 00                	add    DWORD PTR [rax],eax
    15a3:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    15a6:	79 62                	jns    160a <stivale_hdr-0x1fe9f6>
    15a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15a9:	61                   	(bad)  
    15aa:	72 64                	jb     1610 <stivale_hdr-0x1fe9f0>
    15ac:	2e 68 00 01 00 00    	cs push 0x100
    15b2:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 20915b9 <__kernel_end+0x1e7f5b9>
    15b8:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	03 3c 01             	add    edi,DWORD PTR [rcx+rax*1]
    15c3:	05 05 08 83 05       	add    eax,0x5830805
    15c8:	10 67 05             	adc    BYTE PTR [rdi+0x5],ah
    15cb:	09 76 05             	or     DWORD PTR [rsi+0x5],esi
    15ce:	05 74 05 13 00       	add    eax,0x130574
    15d3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15d6:	4a 05 10 00 02 04    	rex.WX add rax,0x4020010
    15dc:	01 74 05 16          	add    DWORD PTR [rbp+rax*1+0x16],esi
    15e0:	4b 05 18 4a 05 05    	rex.WXB add rax,0x5054a18
    15e6:	e6 05                	out    0x5,al
    15e8:	12 00                	adc    al,BYTE PTR [rax]
    15ea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15ed:	66 05 0f 00          	add    ax,0xf
    15f1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15f4:	74 05                	je     15fb <stivale_hdr-0x1fea05>
    15f6:	18 4b 05             	sbb    BYTE PTR [rbx+0x5],cl
    15f9:	1a 4a 05             	sbb    cl,BYTE PTR [rdx+0x5]
    15fc:	05 e6 05 0f 00       	add    eax,0xf05e6
    1601:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1604:	66 05 19 67          	add    ax,0x6719
    1608:	05 1b 4a 05 0c       	add    eax,0xc054a1b
    160d:	e6 05                	out    0x5,al
    160f:	01 59 02             	add    DWORD PTR [rcx+0x2],ebx
    1612:	02 00                	add    al,BYTE PTR [rax]
    1614:	01 01                	add    DWORD PTR [rcx],eax
    1616:	79 00                	jns    1618 <stivale_hdr-0x1fe9e8>
    1618:	00 00                	add    BYTE PTR [rax],al
    161a:	03 00                	add    eax,DWORD PTR [rax]
    161c:	40 00 00             	add    BYTE PTR [rax],al
    161f:	00 01                	add    BYTE PTR [rcx],al
    1621:	01 fb                	add    ebx,edi
    1623:	0e                   	(bad)  
    1624:	0d 00 01 01 01       	or     eax,0x1010100
    1629:	01 00                	add    DWORD PTR [rax],eax
    162b:	00 00                	add    BYTE PTR [rax],al
    162d:	01 00                	add    DWORD PTR [rax],eax
    162f:	00 01                	add    BYTE PTR [rcx],al
    1631:	73 72                	jae    16a5 <stivale_hdr-0x1fe95b>
    1633:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1635:	75 73                	jne    16aa <stivale_hdr-0x1fe956>
    1637:	65 72 73             	gs jb  16ad <stivale_hdr-0x1fe953>
    163a:	70 61                	jo     169d <stivale_hdr-0x1fe963>
    163c:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    163f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1641:	74 72                	je     16b5 <stivale_hdr-0x1fe94b>
    1643:	79 00                	jns    1645 <stivale_hdr-0x1fe9bb>
    1645:	00 63 70             	add    BYTE PTR [rbx+0x70],ah
    1648:	75 69                	jne    16b3 <stivale_hdr-0x1fe94d>
    164a:	64 2e 63 70 70       	fs movsxd esi,DWORD PTR cs:[rax+0x70]
    164f:	00 01                	add    BYTE PTR [rcx],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	65 63 70 75          	movsxd esi,DWORD PTR gs:[rax+0x75]
    1657:	69 64 2e 68 00 01 00 	imul   esp,DWORD PTR [rsi+rbp*1+0x68],0x100
    165e:	00 
    165f:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2091666 <__kernel_end+0x1e7f666>
    1665:	99                   	cdq    
    1666:	90                   	nop
    1667:	20 00                	and    BYTE PTR [rax],al
    1669:	00 00                	add    BYTE PTR [rax],al
    166b:	00 00                	add    BYTE PTR [rax],al
    166d:	16                   	(bad)  
    166e:	05 05 e6 05 0d       	add    eax,0xd05e605
    1673:	08 4c 05 05          	or     BYTE PTR [rbp+rax*1+0x5],cl
    1677:	3c 05                	cmp    al,0x5
    1679:	1a bd 05 18 3c 05    	sbb    bh,BYTE PTR [rbp+0x53c1805]
    167f:	1a 3c 77             	sbb    bh,BYTE PTR [rdi+rsi*2]
    1682:	05 18 3c 05 1a       	add    eax,0x1a053c18
    1687:	3c 05                	cmp    al,0x5
    1689:	14 77                	adc    al,0x77
    168b:	05 01 5a 02 06       	add    eax,0x6025a01
    1690:	00 01                	add    BYTE PTR [rcx],al
    1692:	01 a6 03 00 00 03    	add    DWORD PTR [rsi+0x3000003],esp
    1698:	00 96 00 00 00 01    	add    BYTE PTR [rsi+0x1000000],dl
    169e:	01 fb                	add    ebx,edi
    16a0:	0e                   	(bad)  
    16a1:	0d 00 01 01 01       	or     eax,0x1010100
    16a6:	01 00                	add    DWORD PTR [rax],eax
    16a8:	00 00                	add    BYTE PTR [rax],al
    16aa:	01 00                	add    DWORD PTR [rax],eax
    16ac:	00 01                	add    BYTE PTR [rcx],al
    16ae:	73 72                	jae    1722 <stivale_hdr-0x1fe8de>
    16b0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    16b2:	75 73                	jne    1727 <stivale_hdr-0x1fe8d9>
    16b4:	65 72 73             	gs jb  172a <stivale_hdr-0x1fe8d6>
    16b7:	70 61                	jo     171a <stivale_hdr-0x1fe8e6>
    16b9:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    16bc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    16be:	74 72                	je     1732 <stivale_hdr-0x1fe8ce>
    16c0:	79 00                	jns    16c2 <stivale_hdr-0x1fe93e>
    16c2:	2f                   	(bad)  
    16c3:	68 6f 6d 65 2f       	push   0x2f656d6f
    16c8:	72 69                	jb     1733 <stivale_hdr-0x1fe8cd>
    16ca:	7a 65                	jp     1731 <stivale_hdr-0x1fe8cf>
    16cc:	74 2f                	je     16fd <stivale_hdr-0x1fe903>
    16ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16cf:	70 74                	jo     1745 <stivale_hdr-0x1fe8bb>
    16d1:	2f                   	(bad)  
    16d2:	63 72 6f             	movsxd esi,DWORD PTR [rdx+0x6f]
    16d5:	73 73                	jae    174a <stivale_hdr-0x1fe8b6>
    16d7:	2f                   	(bad)  
    16d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    16d9:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
    16e0:	78 38                	js     171a <stivale_hdr-0x1fe8e6>
    16e2:	36 5f                	ss pop rdi
    16e4:	36 34 2d             	ss xor al,0x2d
    16e7:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    16e9:	66 2f                	data16 (bad) 
    16eb:	31 30                	xor    DWORD PTR [rax],esi
    16ed:	2e 32 2e             	xor    ch,BYTE PTR cs:[rsi]
    16f0:	30 2f                	xor    BYTE PTR [rdi],ch
    16f2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    16f9:	00 00                	add    BYTE PTR [rax],al
    16fb:	75 6d                	jne    176a <stivale_hdr-0x1fe896>
    16fd:	61                   	(bad)  
    16fe:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
    1705:	01 00                	add    DWORD PTR [rax],eax
    1707:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    170a:	64 69 6e 74 2d 67 63 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6363672d
    1711:	63 
    1712:	2e 68 00 02 00 00    	cs push 0x200
    1718:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
    171c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    171d:	61                   	(bad)  
    171e:	72 64                	jb     1784 <stivale_hdr-0x1fe87c>
    1720:	2e 68 00 01 00 00    	cs push 0x100
    1726:	65 63 70 75          	movsxd esi,DWORD PTR gs:[rax+0x75]
    172a:	69 64 2e 68 00 01 00 	imul   esp,DWORD PTR [rsi+rbp*1+0x68],0x100
    1731:	00 
    1732:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2091739 <__kernel_end+0x1e7f739>
    1738:	f1                   	icebp  
    1739:	90                   	nop
    173a:	20 00                	and    BYTE PTR [rax],al
    173c:	00 00                	add    BYTE PTR [rax],al
    173e:	00 00                	add    BYTE PTR [rax],al
    1740:	03 1a                	add    ebx,DWORD PTR [rdx]
    1742:	01 05 06 e5 05 0c    	add    DWORD PTR [rip+0xc05e506],eax        # c05fc4e <__kernel_end+0xbe4dc4e>
    1748:	00 02                	add    BYTE PTR [rdx],al
    174a:	04 03                	add    al,0x3
    174c:	76 00                	jbe    174e <stivale_hdr-0x1fe8b2>
    174e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1751:	06                   	(bad)  
    1752:	74 05                	je     1759 <stivale_hdr-0x1fe8a7>
    1754:	27                   	(bad)  
    1755:	00 02                	add    BYTE PTR [rdx],al
    1757:	04 02                	add    al,0x2
    1759:	06                   	(bad)  
    175a:	68 05 25 00 02       	push   0x2002505
    175f:	04 02                	add    al,0x2
    1761:	66 05 2b 00          	add    ax,0x2b
    1765:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1768:	90                   	nop
    1769:	05 0f 00 02 04       	add    eax,0x402000f
    176e:	02 ac 05 02 00 02 04 	add    ch,BYTE PTR [rbp+rax*1+0x4020002]
    1775:	02 e2                	add    ah,dl
    1777:	05 1f 00 02 04       	add    eax,0x402001f
    177c:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    177f:	1c 00                	sbb    al,0x0
    1781:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1784:	66 05 02 00          	add    ax,0x2
    1788:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    178b:	c8 05 14 32          	enter  0x1405,0x32
    178f:	05 16 66 05 01       	add    eax,0x1056616
    1794:	bb 32 05 11 f3       	mov    ebx,0xf3110532
    1799:	05 09 00 02 04       	add    eax,0x4020009
    179e:	01 84 05 07 ae 05 0f 	add    DWORD PTR [rbp+rax*1+0xf05ae07],eax
    17a5:	74 05                	je     17ac <stivale_hdr-0x1fe854>
    17a7:	03 74 05 0b          	add    esi,DWORD PTR [rbp+rax*1+0xb]
    17ab:	4b 05 06 76 05 02    	rex.WXB add rax,0x2057606
    17b1:	53                   	push   rbx
    17b2:	05 0a 7c 05 05       	add    eax,0x5057c0a
    17b7:	74 05                	je     17be <stivale_hdr-0x1fe842>
    17b9:	18 00                	sbb    BYTE PTR [rax],al
    17bb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    17be:	4a 05 09 76 05 01    	rex.WX add rax,0x1057609
    17c4:	59                   	pop    rcx
    17c5:	32 05 05 bb 05 01    	xor    al,BYTE PTR [rip+0x105bb05]        # 105d2d0 <__kernel_end+0xe4b2d0>
    17cb:	75 40                	jne    180d <stivale_hdr-0x1fe7f3>
    17cd:	05 05 ca 05 0c       	add    eax,0xc05ca05
    17d2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    17d3:	05 01 4b 32 05       	add    eax,0x5324b01
    17d8:	05 bb 05 01 75       	add    eax,0x750105bb
    17dd:	03 0f                	add    ecx,DWORD PTR [rdi]
    17df:	3c 05                	cmp    al,0x5
    17e1:	0e                   	(bad)  
    17e2:	83 05 05 83 05 14 ad 	add    DWORD PTR [rip+0x14058305],0xffffffad        # 14059aee <__kernel_end+0x13e47aee>
    17e9:	05 01 4b 32 05       	add    eax,0x5324b01
    17ee:	11 08                	adc    DWORD PTR [rax],ecx
    17f0:	4b 05 15 83 05 1e    	rex.WXB add rax,0x1e058315
    17f6:	00 02                	add    BYTE PTR [rdx],al
    17f8:	04 03                	add    al,0x3
    17fa:	82                   	(bad)  
    17fb:	05 0c 00 02 04       	add    eax,0x402000c
    1800:	02 9f 05 0e 00 02    	add    bl,BYTE PTR [rdi+0x2000e05]
    1806:	04 02                	add    al,0x2
    1808:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1809:	05 02 00 02 04       	add    eax,0x4020002
    180e:	02 65 05             	add    ah,BYTE PTR [rbp+0x5]
    1811:	09 76 05             	or     DWORD PTR [rsi+0x5],esi
    1814:	01 4b 32             	add    DWORD PTR [rbx+0x32],ecx
    1817:	05 15 bb 05 09       	add    eax,0x905bb15
    181c:	74 05                	je     1823 <stivale_hdr-0x1fe7dd>
    181e:	05 3c 05 52 85       	add    eax,0x8552053c
    1823:	05 1d 9e 05 3e       	add    eax,0x3e059e1d
    1828:	3c 05                	cmp    al,0x5
    182a:	1d 90 05 29 3c       	sbb    eax,0x3c290590
    182f:	05 1d 4a 05 05       	add    eax,0x5054a1d
    1834:	e6 05                	out    0x5,al
    1836:	36 68 05 3a 08 12    	ss push 0x12083a05
    183c:	05 3f 3c 05 1e       	add    eax,0x1e053c3f
    1841:	3c 05                	cmp    al,0x5
    1843:	09 67 05             	or     DWORD PTR [rdi+0x5],esp
    1846:	05 31 05 1d 68       	add    eax,0x681d0531
    184b:	05 2d e5 05 19       	add    eax,0x1905e52d
    1850:	74 05                	je     1857 <stivale_hdr-0x1fe7a9>
    1852:	2d 82 05 2f 3c       	sub    eax,0x3c2f0582
    1857:	05 1d 3d 05 09       	add    eax,0x9053d1d
    185c:	75 05                	jne    1863 <stivale_hdr-0x1fe79d>
    185e:	05 31 05 18 68       	add    eax,0x68180531
    1863:	05 09 75 05 05       	add    eax,0x5057509
    1868:	31 05 29 69 05 15    	xor    DWORD PTR [rip+0x15056929],eax        # 15058197 <__kernel_end+0x14e46197>
    186e:	74 05                	je     1875 <stivale_hdr-0x1fe78b>
    1870:	29 82 05 2b 3c 05    	sub    DWORD PTR [rdx+0x53c2b05],eax
    1876:	19 67 05             	sbb    DWORD PTR [rdi+0x5],esp
    1879:	13 e6                	adc    esp,esi
    187b:	05 05 76 05 09       	add    eax,0x9057605
    1880:	03 60 2e             	add    esp,DWORD PTR [rax+0x2e]
    1883:	03 19                	add    ebx,DWORD PTR [rcx]
    1885:	3c 05                	cmp    al,0x5
    1887:	01 28                	add    DWORD PTR [rax],ebp
    1889:	34 05                	xor    al,0x5
    188b:	0b 4b 05             	or     ecx,DWORD PTR [rbx+0x5]
    188e:	14 bb                	adc    al,0xbb
    1890:	05 05 75 05 09       	add    eax,0x9057505
    1895:	ae                   	scas   al,BYTE PTR es:[rdi]
    1896:	05 13 ae 05 26       	add    eax,0x2605ae13
    189b:	74 05                	je     18a2 <stivale_hdr-0x1fe75e>
    189d:	3e 82                	ds (bad) 
    189f:	05 14 4a 05 13       	add    eax,0x13054a14
    18a4:	3c 05                	cmp    al,0x5
    18a6:	1b 83 05 09 77 05    	sbb    eax,DWORD PTR [rbx+0x5770905]
    18ac:	13 ae 05 21 bb 05    	adc    ebp,DWORD PTR [rsi+0x5bb2105]
    18b2:	05 03 75 74 05       	add    eax,0x5747503
    18b7:	0b 03                	or     eax,DWORD PTR [rbx]
    18b9:	0f 2e 05 15 bc 05 0c 	ucomiss xmm0,DWORD PTR [rip+0xc05bc15]        # c05d4d5 <__kernel_end+0xbe4b4d5>
    18c0:	e6 05                	out    0x5,al
    18c2:	1a 08                	sbb    cl,BYTE PTR [rax]
    18c4:	83 05 01 9f 41 05 0b 	add    DWORD PTR [rip+0x5419f01],0xb        # 541b7cc <__kernel_end+0x52097cc>
    18cb:	4b 05 1e bc 05 2d    	rex.WXB add rax,0x2d05bc1e
    18d1:	bc 05 15 58 05       	mov    esp,0x5581505
    18d6:	0c 75                	or     al,0x75
    18d8:	05 10 00 02 04       	add    eax,0x4020010
    18dd:	01 08                	add    DWORD PTR [rax],ecx
    18df:	85 05 01 03 0e 74    	test   DWORD PTR [rip+0x740e0301],eax        # 740e1be6 <__kernel_end+0x73ecfbe6>
    18e5:	05 1a 85 05 19       	add    eax,0x1905851a
    18ea:	d7                   	xlat   BYTE PTR ds:[rbx]
    18eb:	05 0e d7 05 0b       	add    eax,0xb05d70e
    18f0:	bc 05 10 bb 05       	mov    esp,0x5bb1005
    18f5:	0b 08                	or     ecx,DWORD PTR [rax]
    18f7:	4a 83 05 10 bb 05 0b 	rex.WX add QWORD PTR [rip+0xb05bb10],0x8        # b05d40f <__kernel_end+0xae4b40f>
    18fe:	08 
    18ff:	4a 83 05 10 bb 05 0b 	rex.WX add QWORD PTR [rip+0xb05bb10],0x8        # b05d417 <__kernel_end+0xae4b417>
    1906:	08 
    1907:	4a 83 05 01 bb 40 05 	rex.WX add QWORD PTR [rip+0x540bb01],0xb        # 540d410 <__kernel_end+0x51fb410>
    190e:	0b 
    190f:	4b bb bb 05 1b bb 05 	rex.WXB movabs r11,0xe40b05bb1b05bb
    1916:	0b e4 00 
    1919:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    191c:	06                   	(bad)  
    191d:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1920:	04 02                	add    al,0x2
    1922:	90                   	nop
    1923:	00 02                	add    BYTE PTR [rdx],al
    1925:	04 04                	add    al,0x4
    1927:	74 00                	je     1929 <stivale_hdr-0x1fe6d7>
    1929:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    192c:	06                   	(bad)  
    192d:	83 00 02             	add    DWORD PTR [rax],0x2
    1930:	04 04                	add    al,0x4
    1932:	bb 00 02 04 04       	mov    ebx,0x4040200
    1937:	bb 00 02 04 04       	mov    ebx,0x4040200
    193c:	bb 00 02 04 04       	mov    ebx,0x4040200
    1941:	bb 05 1b 00 02       	mov    ebx,0x2001b05
    1946:	04 04                	add    al,0x4
    1948:	bb 05 0b 00 02       	mov    ebx,0x2000b05
    194d:	04 04                	add    al,0x4
    194f:	e4 00                	in     al,0x0
    1951:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1954:	06                   	(bad)  
    1955:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1958:	04 02                	add    al,0x2
    195a:	90                   	nop
    195b:	00 02                	add    BYTE PTR [rdx],al
    195d:	04 04                	add    al,0x4
    195f:	74 00                	je     1961 <stivale_hdr-0x1fe69f>
    1961:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1964:	06                   	(bad)  
    1965:	83 05 1b 00 02 04 04 	add    DWORD PTR [rip+0x402001b],0x4        # 4021987 <__kernel_end+0x3e0f987>
    196c:	bb 05 0b 00 02       	mov    ebx,0x2000b05
    1971:	04 04                	add    al,0x4
    1973:	e4 00                	in     al,0x0
    1975:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1978:	06                   	(bad)  
    1979:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    197c:	04 02                	add    al,0x2
    197e:	90                   	nop
    197f:	00 02                	add    BYTE PTR [rdx],al
    1981:	04 04                	add    al,0x4
    1983:	74 00                	je     1985 <stivale_hdr-0x1fe67b>
    1985:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    1988:	06                   	(bad)  
    1989:	83 05 1b 00 02 04 04 	add    DWORD PTR [rip+0x402001b],0x4        # 40219ab <__kernel_end+0x3e0f9ab>
    1990:	bb 05 0b 00 02       	mov    ebx,0x2000b05
    1995:	04 04                	add    al,0x4
    1997:	e4 00                	in     al,0x0
    1999:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    199c:	06                   	(bad)  
    199d:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    19a0:	04 02                	add    al,0x2
    19a2:	90                   	nop
    19a3:	00 02                	add    BYTE PTR [rdx],al
    19a5:	04 04                	add    al,0x4
    19a7:	74 00                	je     19a9 <stivale_hdr-0x1fe657>
    19a9:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    19ac:	06                   	(bad)  
    19ad:	83 05 1b 00 02 04 04 	add    DWORD PTR [rip+0x402001b],0x4        # 40219cf <__kernel_end+0x3e0f9cf>
    19b4:	bb 05 0b 00 02       	mov    ebx,0x2000b05
    19b9:	04 04                	add    al,0x4
    19bb:	e4 00                	in     al,0x0
    19bd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19c0:	06                   	(bad)  
    19c1:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    19c4:	04 02                	add    al,0x2
    19c6:	90                   	nop
    19c7:	00 02                	add    BYTE PTR [rdx],al
    19c9:	04 04                	add    al,0x4
    19cb:	74 00                	je     19cd <stivale_hdr-0x1fe633>
    19cd:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    19d0:	06                   	(bad)  
    19d1:	83 05 1b 00 02 04 04 	add    DWORD PTR [rip+0x402001b],0x4        # 40219f3 <__kernel_end+0x3e0f9f3>
    19d8:	bb 05 0b 00 02       	mov    ebx,0x2000b05
    19dd:	04 04                	add    al,0x4
    19df:	e4 00                	in     al,0x0
    19e1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    19e4:	06                   	(bad)  
    19e5:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    19e8:	04 02                	add    al,0x2
    19ea:	90                   	nop
    19eb:	00 02                	add    BYTE PTR [rdx],al
    19ed:	04 04                	add    al,0x4
    19ef:	74 05                	je     19f6 <stivale_hdr-0x1fe60a>
    19f1:	01 00                	add    DWORD PTR [rax],eax
    19f3:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    19f6:	06                   	(bad)  
    19f7:	83 40 05 0b          	add    DWORD PTR [rax+0x5],0xb
    19fb:	4b bb bb 05 01 bb 40 	rex.WXB movabs r11,0xbb100540bb0105bb
    1a02:	05 10 bb 
    1a05:	05 05 08 2e 05       	add    eax,0x52e0805
    1a0a:	13 4c 05 09          	adc    ecx,DWORD PTR [rbp+rax*1+0x9]
    1a0e:	59                   	pop    rcx
    1a0f:	05 10 31 05 05       	add    eax,0x5053110
    1a14:	08 2e                	or     BYTE PTR [rsi],ch
    1a16:	05 12 4c 05 09       	add    eax,0x9054c12
    1a1b:	59                   	pop    rcx
    1a1c:	05 10 31 05 05       	add    eax,0x5053110
    1a21:	08 2e                	or     BYTE PTR [rsi],ch
    1a23:	05 0f 4c 05 09       	add    eax,0x9054c0f
    1a28:	59                   	pop    rcx
    1a29:	05 0a 31 05 05       	add    eax,0x505310a
    1a2e:	9e                   	sahf   
    1a2f:	05 0b 4c 05 1c       	add    eax,0x1c054c0b
    1a34:	d4                   	(bad)  
    1a35:	05 01 23 02 02       	add    eax,0x2022301
    1a3a:	00 01                	add    BYTE PTR [rcx],al
    1a3c:	01 be 00 00 00 03    	add    DWORD PTR [rsi+0x3000000],edi
    1a42:	00 45 00             	add    BYTE PTR [rbp+0x0],al
    1a45:	00 00                	add    BYTE PTR [rax],al
    1a47:	01 01                	add    DWORD PTR [rcx],eax
    1a49:	fb                   	sti    
    1a4a:	0e                   	(bad)  
    1a4b:	0d 00 01 01 01       	or     eax,0x1010100
    1a50:	01 00                	add    DWORD PTR [rax],eax
    1a52:	00 00                	add    BYTE PTR [rax],al
    1a54:	01 00                	add    DWORD PTR [rax],eax
    1a56:	00 01                	add    BYTE PTR [rcx],al
    1a58:	73 72                	jae    1acc <stivale_hdr-0x1fe534>
    1a5a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1a5c:	75 74                	jne    1ad2 <stivale_hdr-0x1fe52e>
    1a5e:	69 6c 00 73 72 63 00 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x6372
    1a65:	00 
    1a66:	62                   	(bad)  
    1a67:	69 74 6d 61 70 2e 63 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x70632e70
    1a6e:	70 
    1a6f:	70 00                	jo     1a71 <stivale_hdr-0x1fe58f>
    1a71:	01 00                	add    DWORD PTR [rax],eax
    1a73:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    1a77:	65 73 2e             	gs jae 1aa8 <stivale_hdr-0x1fe558>
    1a7a:	68 00 02 00 00       	push   0x200
    1a7f:	62                   	(bad)  
    1a80:	69 74 6d 61 70 2e 68 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x682e70
    1a87:	00 
    1a88:	01 00                	add    DWORD PTR [rax],eax
    1a8a:	00 00                	add    BYTE PTR [rax],al
    1a8c:	05 2d 00 09 02       	add    eax,0x209002d
    1a91:	62                   	(bad)  
    1a92:	39 20                	cmp    DWORD PTR [rax],esp
    1a94:	00 00                	add    BYTE PTR [rax],al
    1a96:	00 00                	add    BYTE PTR [rax],al
    1a98:	00 14 05 0f f3 05 01 	add    BYTE PTR [rax*1+0x105f30f],dl
    1a9f:	08 2f                	or     BYTE PTR [rdi],ch
    1aa1:	05 26 3e 05 0a       	add    eax,0xa053e26
    1aa6:	f4                   	hlt    
    1aa7:	05 1e bb 05 0c       	add    eax,0xc05bb1e
    1aac:	4a 05 28 67 05 25    	rex.WX add rax,0x25056728
    1ab2:	4a 05 0c ac 05 0d    	rex.WX add rax,0xd05ac0c
    1ab8:	3e 05 1e 82 05 20    	ds add eax,0x2005821e
    1abe:	9e                   	sahf   
    1abf:	05 2d 3c 05 01       	add    eax,0x1053c2d
    1ac4:	59                   	pop    rcx
    1ac5:	05 32 30 05 0c       	add    eax,0xc053032
    1aca:	08 4c 05 1e          	or     BYTE PTR [rbp+rax*1+0x1e],cl
    1ace:	bb 05 0c 4a 05       	mov    ebx,0x54a0c05
    1ad3:	28 67 05             	sub    BYTE PTR [rdi+0x5],ah
    1ad6:	25 4a 05 0c ac       	and    eax,0xac0c054a
    1adb:	05 05 3d 05 18       	add    eax,0x18053d05
    1ae0:	82                   	(bad)  
    1ae1:	05 05 08 58 05       	add    eax,0x5580805
    1ae6:	18 82 05 05 ae 05    	sbb    BYTE PTR [rdx+0x5ae0505],al
    1aec:	09 67 05             	or     DWORD PTR [rdi+0x5],esp
    1aef:	1c 82                	sbb    al,0x82
    1af1:	05 09 9e 05 1c       	add    eax,0x1c059e09
    1af6:	82                   	(bad)  
    1af7:	05 01 bb 02 03       	add    eax,0x302bb01
    1afc:	00 01                	add    BYTE PTR [rcx],al
    1afe:	01 c0                	add    eax,eax
    1b00:	01 00                	add    DWORD PTR [rax],eax
    1b02:	00 03                	add    BYTE PTR [rbx],al
    1b04:	00 94 00 00 00 01 01 	add    BYTE PTR [rax+rax*1+0x1010000],dl
    1b0b:	fb                   	sti    
    1b0c:	0e                   	(bad)  
    1b0d:	0d 00 01 01 01       	or     eax,0x1010100
    1b12:	01 00                	add    DWORD PTR [rax],eax
    1b14:	00 00                	add    BYTE PTR [rax],al
    1b16:	01 00                	add    DWORD PTR [rax],eax
    1b18:	00 01                	add    BYTE PTR [rcx],al
    1b1a:	73 72                	jae    1b8e <stivale_hdr-0x1fe472>
    1b1c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1b1e:	75 74                	jne    1b94 <stivale_hdr-0x1fe46c>
    1b20:	69 6c 00 73 72 63 00 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x73006372
    1b27:	73 
    1b28:	72 63                	jb     1b8d <stivale_hdr-0x1fe473>
    1b2a:	2f                   	(bad)  
    1b2b:	64 72 69             	fs jb  1b97 <stivale_hdr-0x1fe469>
    1b2e:	76 65                	jbe    1b95 <stivale_hdr-0x1fe46b>
    1b30:	72 73                	jb     1ba5 <stivale_hdr-0x1fe45b>
    1b32:	2f                   	(bad)  
    1b33:	61                   	(bad)  
    1b34:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1b37:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1b3a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1b3c:	64 72 69             	fs jb  1ba8 <stivale_hdr-0x1fe458>
    1b3f:	76 65                	jbe    1ba6 <stivale_hdr-0x1fe45a>
    1b41:	72 73                	jb     1bb6 <stivale_hdr-0x1fe44a>
    1b43:	2f                   	(bad)  
    1b44:	67 66 78 2f          	addr32 data16 js 1b77 <stivale_hdr-0x1fe489>
    1b48:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    1b4a:	70 00                	jo     1b4c <stivale_hdr-0x1fe4b4>
    1b4c:	73 72                	jae    1bc0 <stivale_hdr-0x1fe440>
    1b4e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1b50:	64 72 69             	fs jb  1bbc <stivale_hdr-0x1fe444>
    1b53:	76 65                	jbe    1bba <stivale_hdr-0x1fe446>
    1b55:	72 73                	jb     1bca <stivale_hdr-0x1fe436>
    1b57:	2f                   	(bad)  
    1b58:	74 74                	je     1bce <stivale_hdr-0x1fe432>
    1b5a:	79 00                	jns    1b5c <stivale_hdr-0x1fe4a4>
    1b5c:	00 6b 75             	add    BYTE PTR [rbx+0x75],ch
    1b5f:	74 69                	je     1bca <stivale_hdr-0x1fe436>
    1b61:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b62:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    1b66:	00 01                	add    BYTE PTR [rcx],al
    1b68:	00 00                	add    BYTE PTR [rax],al
    1b6a:	74 79                	je     1be5 <stivale_hdr-0x1fe41b>
    1b6c:	70 65                	jo     1bd3 <stivale_hdr-0x1fe42d>
    1b6e:	73 2e                	jae    1b9e <stivale_hdr-0x1fe462>
    1b70:	68 00 02 00 00       	push   0x200
    1b75:	61                   	(bad)  
    1b76:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1b79:	2e 68 00 03 00 00    	cs push 0x300
    1b7f:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    1b81:	70 2e                	jo     1bb1 <stivale_hdr-0x1fe44f>
    1b83:	68 00 04 00 00       	push   0x400
    1b88:	74 74                	je     1bfe <stivale_hdr-0x1fe402>
    1b8a:	79 2e                	jns    1bba <stivale_hdr-0x1fe446>
    1b8c:	68 00 05 00 00       	push   0x500
    1b91:	6b 75 74 69          	imul   esi,DWORD PTR [rbp+0x74],0x69
    1b95:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b96:	2e 68 00 01 00 00    	cs push 0x100
    1b9c:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2091ba3 <__kernel_end+0x1e7fba3>
    1ba2:	79 3a                	jns    1bde <stivale_hdr-0x1fe422>
    1ba4:	20 00                	and    BYTE PTR [rax],al
    1ba6:	00 00                	add    BYTE PTR [rax],al
    1ba8:	00 00                	add    BYTE PTR [rax],al
    1baa:	17                   	(bad)  
    1bab:	05 07 e7 05 0c       	add    eax,0xc05e707
    1bb0:	00 02                	add    BYTE PTR [rdx],al
    1bb2:	04 03                	add    al,0x3
    1bb4:	84 00                	test   BYTE PTR [rax],al
    1bb6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1bb9:	06                   	(bad)  
    1bba:	74 05                	je     1bc1 <stivale_hdr-0x1fe43f>
    1bbc:	25 00 02 04 02       	and    eax,0x2040200
    1bc1:	06                   	(bad)  
    1bc2:	76 05                	jbe    1bc9 <stivale_hdr-0x1fe437>
    1bc4:	23 00                	and    eax,DWORD PTR [rax]
    1bc6:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1bc9:	66 05 29 00          	add    ax,0x29
    1bcd:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1bd0:	90                   	nop
    1bd1:	05 0a 00 02 04       	add    eax,0x402000a
    1bd6:	02 ac 05 02 00 02 04 	add    ch,BYTE PTR [rbp+rax*1+0x4020002]
    1bdd:	02 f0                	add    dh,al
    1bdf:	05 1f 00 02 04       	add    eax,0x402001f
    1be4:	02 58 05             	add    bl,BYTE PTR [rax+0x5]
    1be7:	1c 00                	sbb    al,0x0
    1be9:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1bec:	66 05 02 00          	add    ax,0x2
    1bf0:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1bf3:	c8 05 0f 32          	enter  0xf05,0x32
    1bf7:	05 11 82 05 01       	add    eax,0x1058211
    1bfc:	9f                   	lahf   
    1bfd:	32 05 09 00 02 04    	xor    al,BYTE PTR [rip+0x4020009]        # 4021c0c <__kernel_end+0x3e0fc0c>
    1c03:	01 f3                	add    ebx,esi
    1c05:	05 07 ae 05 0f       	add    eax,0xf05ae07
    1c0a:	74 05                	je     1c11 <stivale_hdr-0x1fe3ef>
    1c0c:	03 74 05 0b          	add    esi,DWORD PTR [rbp+rax*1+0xb]
    1c10:	4b 05 06 76 05 02    	rex.WXB add rax,0x2057606
    1c16:	53                   	push   rbx
    1c17:	05 09 7b 05 01       	add    eax,0x1057b09
    1c1c:	59                   	pop    rcx
    1c1d:	31 05 07 bb 05 10    	xor    DWORD PTR [rip+0x1005bb07],eax        # 1005d72a <__kernel_end+0xfe4b72a>
    1c23:	83 05 12 d6 05 1c 00 	add    DWORD PTR [rip+0x1c05d612],0x0        # 1c05f23c <__kernel_end+0x1be4d23c>
    1c2a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c2d:	4a 05 12 00 02 04    	rex.WX add rax,0x4020012
    1c33:	01 d6                	add    esi,edx
    1c35:	05 06 4b 05 02       	add    eax,0x2054b06
    1c3a:	57                   	push   rdi
    1c3b:	05 09 30 05 01       	add    eax,0x1053009
    1c40:	4b 05 31 30 05 09    	rex.WXB add rax,0x9053031
    1c46:	f4                   	hlt    
    1c47:	83 05 0e 74 05 03 4b 	add    DWORD PTR [rip+0x305740e],0x4b        # 305905c <__kernel_end+0x2e4705c>
    1c4e:	05 02 57 05 09       	add    eax,0x9055702
    1c53:	31 05 0a ad 05 08    	xor    DWORD PTR [rip+0x805ad0a],eax        # 805c963 <__kernel_end+0x7e4a963>
    1c59:	74 05                	je     1c60 <stivale_hdr-0x1fe3a0>
    1c5b:	06                   	(bad)  
    1c5c:	67 59                	addr32 pop rcx
    1c5e:	05 02 55 05 07       	add    eax,0x7055502
    1c63:	33 05 09 75 05 01    	xor    eax,DWORD PTR [rip+0x1057509]        # 1059172 <__kernel_end+0xe47172>
    1c69:	4b 05 48 30 05 09    	rex.WXB add rax,0x9053048
    1c6f:	f4                   	hlt    
    1c70:	05 0f 00 02 04       	add    eax,0x402000f
    1c75:	02 83 05 0e 00 02    	add    al,BYTE PTR [rbx+0x2000e05]
    1c7b:	04 02                	add    al,0x2
    1c7d:	74 05                	je     1c84 <stivale_hdr-0x1fe37c>
    1c7f:	0a 00                	or     al,BYTE PTR [rax]
    1c81:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1c84:	66 05 0e 00          	add    ax,0xe
    1c88:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1c8b:	74 05                	je     1c92 <stivale_hdr-0x1fe36e>
    1c8d:	02 00                	add    al,BYTE PTR [rax]
    1c8f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c92:	90                   	nop
    1c93:	05 09 bb 05 01       	add    eax,0x105bb09
    1c98:	4b 05 1b 30 05 13    	rex.WXB add rax,0x1305301b
    1c9e:	ca 00 02             	retf   0x200
    1ca1:	04 01                	add    al,0x1
    1ca3:	06                   	(bad)  
    1ca4:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ca7:	04 03                	add    al,0x3
    1ca9:	66 00 02             	data16 add BYTE PTR [rdx],al
    1cac:	04 04                	add    al,0x4
    1cae:	74 05                	je     1cb5 <stivale_hdr-0x1fe34b>
    1cb0:	1e                   	(bad)  
    1cb1:	00 02                	add    BYTE PTR [rdx],al
    1cb3:	04 06                	add    al,0x6
    1cb5:	06                   	(bad)  
    1cb6:	58                   	pop    rax
    1cb7:	05 01 00 02 04       	add    eax,0x4020001
    1cbc:	06                   	(bad)  
    1cbd:	3d 02 02 00 01       	cmp    eax,0x1000202
    1cc2:	01 0b                	add    DWORD PTR [rbx],ecx
    1cc4:	01 00                	add    DWORD PTR [rax],eax
    1cc6:	00 03                	add    BYTE PTR [rbx],al
    1cc8:	00 83 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],al
    1cce:	01 fb                	add    ebx,edi
    1cd0:	0e                   	(bad)  
    1cd1:	0d 00 01 01 01       	or     eax,0x1010100
    1cd6:	01 00                	add    DWORD PTR [rax],eax
    1cd8:	00 00                	add    BYTE PTR [rax],al
    1cda:	01 00                	add    DWORD PTR [rax],eax
    1cdc:	00 01                	add    BYTE PTR [rcx],al
    1cde:	73 72                	jae    1d52 <stivale_hdr-0x1fe2ae>
    1ce0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1ce2:	64 72 69             	fs jb  1d4e <stivale_hdr-0x1fe2b2>
    1ce5:	76 65                	jbe    1d4c <stivale_hdr-0x1fe2b4>
    1ce7:	72 73                	jb     1d5c <stivale_hdr-0x1fe2a4>
    1ce9:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1cec:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1cee:	64 72 69             	fs jb  1d5a <stivale_hdr-0x1fe2a6>
    1cf1:	76 65                	jbe    1d58 <stivale_hdr-0x1fe2a8>
    1cf3:	72 73                	jb     1d68 <stivale_hdr-0x1fe298>
    1cf5:	2f                   	(bad)  
    1cf6:	61                   	(bad)  
    1cf7:	75 64                	jne    1d5d <stivale_hdr-0x1fe2a3>
    1cf9:	69 6f 2f 62 65 65 70 	imul   ebp,DWORD PTR [rdi+0x2f],0x70656562
    1d00:	65 72 00             	gs jb  1d03 <stivale_hdr-0x1fe2fd>
    1d03:	73 72                	jae    1d77 <stivale_hdr-0x1fe289>
    1d05:	63 00                	movsxd eax,DWORD PTR [rax]
    1d07:	73 72                	jae    1d7b <stivale_hdr-0x1fe285>
    1d09:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1d0b:	73 63                	jae    1d70 <stivale_hdr-0x1fe290>
    1d0d:	68 65 64 75 6c       	push   0x6c756465
    1d12:	69 6e 67 00 00 69 6f 	imul   ebp,DWORD PTR [rsi+0x67],0x6f690000
    1d19:	2e 68 00 01 00 00    	cs push 0x100
    1d1f:	62                   	(bad)  
    1d20:	65 65 70 65          	gs gs jo 1d89 <stivale_hdr-0x1fe277>
    1d24:	72 2e                	jb     1d54 <stivale_hdr-0x1fe2ac>
    1d26:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    1d29:	00 02                	add    BYTE PTR [rdx],al
    1d2b:	00 00                	add    BYTE PTR [rax],al
    1d2d:	74 79                	je     1da8 <stivale_hdr-0x1fe258>
    1d2f:	70 65                	jo     1d96 <stivale_hdr-0x1fe26a>
    1d31:	73 2e                	jae    1d61 <stivale_hdr-0x1fe29f>
    1d33:	68 00 03 00 00       	push   0x300
    1d38:	74 69                	je     1da3 <stivale_hdr-0x1fe25d>
    1d3a:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d3b:	65 72 2e             	gs jb  1d6c <stivale_hdr-0x1fe294>
    1d3e:	68 00 04 00 00       	push   0x400
    1d43:	62                   	(bad)  
    1d44:	65 65 70 65          	gs gs jo 1dad <stivale_hdr-0x1fe253>
    1d48:	72 2e                	jb     1d78 <stivale_hdr-0x1fe288>
    1d4a:	68 00 02 00 00       	push   0x200
    1d4f:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2091d5a <__kernel_end+0x1e7fd5a>
    1d55:	4e 3c 20             	rex.WRX cmp al,0x20
    1d58:	00 00                	add    BYTE PTR [rax],al
    1d5a:	00 00                	add    BYTE PTR [rax],al
    1d5c:	00 17                	add    BYTE PTR [rdi],dl
    1d5e:	05 09 08 4b 05       	add    eax,0x54b0809
    1d63:	05 93 3f 05 09       	add    eax,0x9053f93
    1d68:	d8 05 10 a1 05 05    	fadd   DWORD PTR [rip+0x505a110]        # 505be7e <__kernel_end+0x4e49e7e>
    1d6e:	4b 04 02             	rex.WXB add al,0x2
    1d71:	05 01 03 71 2e       	add    eax,0x2e710301
    1d76:	05 1b 4b 05 22       	add    eax,0x22054b1b
    1d7b:	9e                   	sahf   
    1d7c:	05 0d 3c 05 01       	add    eax,0x1053c0d
    1d81:	e5 05                	in     eax,0x5
    1d83:	36 3e 05 1e af 05 12 	ss ds add eax,0x1205af1e
    1d8a:	a0 05 15 c9 05 05 74 	movabs al,ds:0x1c05740505c91505
    1d91:	05 1c 
    1d93:	59                   	pop    rcx
    1d94:	05 11 74 05 01       	add    eax,0x1057411
    1d99:	e6 05                	out    0x5,al
    1d9b:	26 3e 05 17 83 05 20 	es ds add eax,0x20058317
    1da2:	9e                   	sahf   
    1da3:	05 0d 68 05 01       	add    eax,0x105680d
    1da8:	f3 05 20 3e 05 0f    	repz add eax,0xf053e20
    1dae:	4b 05 17 9f 05 0f    	rex.WXB add rax,0xf059f17
    1db4:	9f                   	lahf   
    1db5:	05 1e 59 05 01       	add    eax,0x105591e
    1dba:	9f                   	lahf   
    1dbb:	05 41 3e 05 0f       	add    eax,0xf053e41
    1dc0:	d7                   	xlat   BYTE PTR ds:[rbx]
    1dc1:	05 17 9f 05 0f       	add    eax,0xf059f17
    1dc6:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1dc7:	05 1e 59 05 01       	add    eax,0x105591e
    1dcc:	9f                   	lahf   
    1dcd:	02 03                	add    al,BYTE PTR [rbx]
    1dcf:	00 01                	add    BYTE PTR [rcx],al
    1dd1:	01 33                	add    DWORD PTR [rbx],esi
    1dd3:	01 00                	add    DWORD PTR [rax],eax
    1dd5:	00 03                	add    BYTE PTR [rbx],al
    1dd7:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    1dda:	00 00                	add    BYTE PTR [rax],al
    1ddc:	01 01                	add    DWORD PTR [rcx],eax
    1dde:	fb                   	sti    
    1ddf:	0e                   	(bad)  
    1de0:	0d 00 01 01 01       	or     eax,0x1010100
    1de5:	01 00                	add    DWORD PTR [rax],eax
    1de7:	00 00                	add    BYTE PTR [rax],al
    1de9:	01 00                	add    DWORD PTR [rax],eax
    1deb:	00 01                	add    BYTE PTR [rcx],al
    1ded:	73 72                	jae    1e61 <stivale_hdr-0x1fe19f>
    1def:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1df1:	64 72 69             	fs jb  1e5d <stivale_hdr-0x1fe1a3>
    1df4:	76 65                	jbe    1e5b <stivale_hdr-0x1fe1a5>
    1df6:	72 73                	jb     1e6b <stivale_hdr-0x1fe195>
    1df8:	2f                   	(bad)  
    1df9:	38 32                	cmp    BYTE PTR [rdx],dh
    1dfb:	35 39 2f 2e 2e       	xor    eax,0x2e2e2f39
    1e00:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1e03:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1e05:	64 72 69             	fs jb  1e71 <stivale_hdr-0x1fe18f>
    1e08:	76 65                	jbe    1e6f <stivale_hdr-0x1fe191>
    1e0a:	72 73                	jb     1e7f <stivale_hdr-0x1fe181>
    1e0c:	2f                   	(bad)  
    1e0d:	38 32                	cmp    BYTE PTR [rdx],dh
    1e0f:	35 39 00 73 72       	xor    eax,0x72730039
    1e14:	63 00                	movsxd eax,DWORD PTR [rax]
    1e16:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
    1e19:	2e 68 00 01 00 00    	cs push 0x100
    1e1f:	70 69                	jo     1e8a <stivale_hdr-0x1fe176>
    1e21:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    1e23:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    1e26:	00 02                	add    BYTE PTR [rdx],al
    1e28:	00 00                	add    BYTE PTR [rax],al
    1e2a:	74 79                	je     1ea5 <stivale_hdr-0x1fe15b>
    1e2c:	70 65                	jo     1e93 <stivale_hdr-0x1fe16d>
    1e2e:	73 2e                	jae    1e5e <stivale_hdr-0x1fe1a2>
    1e30:	68 00 03 00 00       	push   0x300
    1e35:	70 69                	jo     1ea0 <stivale_hdr-0x1fe160>
    1e37:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    1e39:	68 00 02 00 00       	push   0x200
    1e3e:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2091e49 <__kernel_end+0x1e7fe49>
    1e44:	81 3d 20 00 00 00 00 	cmp    DWORD PTR [rip+0x20],0x5170000        # 1e6e <stivale_hdr-0x1fe192>
    1e4b:	00 17 05 
    1e4e:	09 08                	or     DWORD PTR [rax],ecx
    1e50:	4b 05 05 93 3f 05    	rex.WXB add rax,0x53f9305
    1e56:	09 d8                	or     eax,ebx
    1e58:	05 10 a1 05 05       	add    eax,0x505a110
    1e5d:	4b 03 23             	rex.WXB add rsp,QWORD PTR [r11]
    1e60:	2e 05 09 4b 05 05    	cs add eax,0x5054b09
    1e66:	75 04                	jne    1e6c <stivale_hdr-0x1fe194>
    1e68:	02 05 01 03 4d 3c    	add    al,BYTE PTR [rip+0x3c4d0301]        # 3c4d216f <__kernel_end+0x3c2c016f>
    1e6e:	05 02 c9 05 0b       	add    eax,0xb05c902
    1e73:	67 05 0a e6 05 01    	addr32 add eax,0x105e60a
    1e79:	e5 3f                	in     eax,0x3f
    1e7b:	05 0e 08 23 c9       	add    eax,0xc923080e
    1e80:	05 0a ca 05 0d       	add    eax,0xd05ca0a
    1e85:	e5 05                	in     eax,0x5
    1e87:	0a 59 05             	or     bl,BYTE PTR [rcx+0x5]
    1e8a:	0d e5 05 0a 59       	or     eax,0x590a05e5
    1e8f:	05 0d f3 05 0a       	add    eax,0xa05f30d
    1e94:	59                   	pop    rcx
    1e95:	05 0d f3 05 0a       	add    eax,0xa05f30d
    1e9a:	59                   	pop    rcx
    1e9b:	05 0d e5 05 0a       	add    eax,0xa05e50d
    1ea0:	59                   	pop    rcx
    1ea1:	05 0d e5 05 0a       	add    eax,0xa05e50d
    1ea6:	5a                   	pop    rdx
    1ea7:	05 0d e5 05 0a       	add    eax,0xa05e50d
    1eac:	59                   	pop    rcx
    1ead:	05 0d e5 05 0a       	add    eax,0xa05e50d
    1eb2:	5a                   	pop    rdx
    1eb3:	f3 05 01 f3 05 22    	repz add eax,0x2205f301
    1eb9:	3e 05 05 cc 05 0e    	ds add eax,0xe05cc05
    1ebf:	67 84 05 0d 67 05 14 	test   BYTE PTR [eip+0x1405670d],al        # 140585d3 <__kernel_end+0x13e465d3>
    1ec6:	4c 05 23 c8 05 20    	rex.WR add rax,0x2005c823
    1ecc:	4a 05 1b ac 05 0b    	rex.WX add rax,0xb05ac1b
    1ed2:	2e 05 0d 3d 05 01    	cs add eax,0x1053d0d
    1ed8:	08 13                	or     BYTE PTR [rbx],dl
    1eda:	3f                   	(bad)  
    1edb:	05 05 cc 05 0e       	add    eax,0xe05cc05
    1ee0:	67 84 05 0d 67 05 14 	test   BYTE PTR [eip+0x1405670d],al        # 140585f4 <__kernel_end+0x13e465f4>
    1ee7:	4c 05 24 c8 05 21    	rex.WR add rax,0x2105c824
    1eed:	4a 05 1b ac 05 0b    	rex.WX add rax,0xb05ac1b
    1ef3:	4a 05 0d 3d 05 01    	rex.WX add rax,0x1053d0d
    1ef9:	08 13                	or     BYTE PTR [rbx],dl
    1efb:	05 21 3e 05 14       	add    eax,0x14053e21
    1f00:	4b 05 01 e5 02 03    	rex.WXB add rax,0x302e501
    1f06:	00 01                	add    BYTE PTR [rcx],al
    1f08:	01 e8                	add    eax,ebp
    1f0a:	01 00                	add    DWORD PTR [rax],eax
    1f0c:	00 03                	add    BYTE PTR [rbx],al
    1f0e:	00 ce                	add    dh,cl
    1f10:	00 00                	add    BYTE PTR [rax],al
    1f12:	00 01                	add    BYTE PTR [rcx],al
    1f14:	01 fb                	add    ebx,edi
    1f16:	0e                   	(bad)  
    1f17:	0d 00 01 01 01       	or     eax,0x1010100
    1f1c:	01 00                	add    DWORD PTR [rax],eax
    1f1e:	00 00                	add    BYTE PTR [rax],al
    1f20:	01 00                	add    DWORD PTR [rax],eax
    1f22:	00 01                	add    BYTE PTR [rcx],al
    1f24:	73 72                	jae    1f98 <stivale_hdr-0x1fe068>
    1f26:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1f28:	64 72 69             	fs jb  1f94 <stivale_hdr-0x1fe06c>
    1f2b:	76 65                	jbe    1f92 <stivale_hdr-0x1fe06e>
    1f2d:	72 73                	jb     1fa2 <stivale_hdr-0x1fe05e>
    1f2f:	2f                   	(bad)  
    1f30:	61                   	(bad)  
    1f31:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1f34:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1f37:	63 00                	movsxd eax,DWORD PTR [rax]
    1f39:	73 72                	jae    1fad <stivale_hdr-0x1fe053>
    1f3b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1f3d:	64 72 69             	fs jb  1fa9 <stivale_hdr-0x1fe057>
    1f40:	76 65                	jbe    1fa7 <stivale_hdr-0x1fe059>
    1f42:	72 73                	jb     1fb7 <stivale_hdr-0x1fe049>
    1f44:	2f                   	(bad)  
    1f45:	61                   	(bad)  
    1f46:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1f49:	2f                   	(bad)  
    1f4a:	2e 2e 2f             	cs cs (bad) 
    1f4d:	64 69 73 6b 2f 61 68 	imul   esi,DWORD PTR fs:[rbx+0x6b],0x6368612f
    1f54:	63 
    1f55:	69 00 73 72 63 2f    	imul   eax,DWORD PTR [rax],0x2f637273
    1f5b:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f5c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1f5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f5f:	72 79                	jb     1fda <stivale_hdr-0x1fe026>
    1f61:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1f64:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1f66:	64 72 69             	fs jb  1fd2 <stivale_hdr-0x1fe02e>
    1f69:	76 65                	jbe    1fd0 <stivale_hdr-0x1fe030>
    1f6b:	72 73                	jb     1fe0 <stivale_hdr-0x1fe020>
    1f6d:	2f                   	(bad)  
    1f6e:	67 66 78 2f          	addr32 data16 js 1fa1 <stivale_hdr-0x1fe05f>
    1f72:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    1f74:	70 00                	jo     1f76 <stivale_hdr-0x1fe08a>
    1f76:	73 72                	jae    1fea <stivale_hdr-0x1fe016>
    1f78:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1f7a:	64 72 69             	fs jb  1fe6 <stivale_hdr-0x1fe01a>
    1f7d:	76 65                	jbe    1fe4 <stivale_hdr-0x1fe01c>
    1f7f:	72 73                	jb     1ff4 <stivale_hdr-0x1fe00c>
    1f81:	2f                   	(bad)  
    1f82:	61                   	(bad)  
    1f83:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1f86:	2f                   	(bad)  
    1f87:	2e 2e 2f             	cs cs (bad) 
    1f8a:	74 74                	je     2000 <stivale_hdr-0x1fe000>
    1f8c:	79 00                	jns    1f8e <stivale_hdr-0x1fe072>
    1f8e:	00 70 63             	add    BYTE PTR [rax+0x63],dh
    1f91:	69 2e 63 70 70 00    	imul   ebp,DWORD PTR [rsi],0x707063
    1f97:	01 00                	add    DWORD PTR [rax],eax
    1f99:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    1f9d:	65 73 2e             	gs jae 1fce <stivale_hdr-0x1fe032>
    1fa0:	68 00 02 00 00       	push   0x200
    1fa5:	61                   	(bad)  
    1fa6:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    1fa9:	2e 68 00 01 00 00    	cs push 0x100
    1faf:	70 63                	jo     2014 <stivale_hdr-0x1fdfec>
    1fb1:	69 2e 68 00 01 00    	imul   ebp,DWORD PTR [rsi],0x10068
    1fb7:	00 61 68             	add    BYTE PTR [rcx+0x68],ah
    1fba:	63 69 2e             	movsxd ebp,DWORD PTR [rcx+0x2e]
    1fbd:	68 00 03 00 00       	push   0x300
    1fc2:	70 61                	jo     2025 <stivale_hdr-0x1fdfdb>
    1fc4:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x400682e
    1fcb:	04 
    1fcc:	00 00                	add    BYTE PTR [rax],al
    1fce:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    1fd0:	70 2e                	jo     2000 <stivale_hdr-0x1fe000>
    1fd2:	68 00 05 00 00       	push   0x500
    1fd7:	74 74                	je     204d <stivale_hdr-0x1fdfb3>
    1fd9:	79 2e                	jns    2009 <stivale_hdr-0x1fdff7>
    1fdb:	68 00 06 00 00       	push   0x600
    1fe0:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2091fe7 <__kernel_end+0x1e7ffe7>
    1fe6:	bf 3f 20 00 00       	mov    edi,0x203f
    1feb:	00 00                	add    BYTE PTR [rax],al
    1fed:	00 1a                	add    BYTE PTR [rdx],bl
    1fef:	05 0c f3 05 0d       	add    eax,0xd05f30c
    1ff4:	bb 05 1f e5 05       	mov    ebx,0x5e51f05
    1ff9:	1d 08 76 05 19       	sbb    eax,0x19057608
    1ffe:	84 05 05 82 05 18    	test   BYTE PTR [rip+0x18058205],al        # 1805a209 <__kernel_end+0x17e48209>
    2004:	5a                   	pop    rdx
    2005:	05 05 82 05 1c       	add    eax,0x1c058205
    200a:	69 05 05 ac 05 24 5a 	imul   eax,DWORD PTR [rip+0x2405ac05],0x2c055a        # 2405cc19 <__kernel_end+0x23e4ac19>
    2011:	05 2c 00 
    2014:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2017:	f4                   	hlt    
    2018:	05 37 f4 05 1d       	add    eax,0x1d05f437
    201d:	bb 05 09 03 75       	mov    ebx,0x75030905
    2022:	2e 3e 05 01 03 0d 20 	cs ds add eax,0x200d0301
    2029:	31 05 0c f3 05 0d    	xor    DWORD PTR [rip+0xd05f30c],eax        # d06133b <__kernel_end+0xce4f33b>
    202f:	bb 05 1f e5 05       	mov    ebx,0x5e51f05
    2034:	1d 08 76 05 19       	sbb    eax,0x19057608
    2039:	84 05 05 82 05 18    	test   BYTE PTR [rip+0x18058205],al        # 1805a244 <__kernel_end+0x17e48244>
    203f:	5a                   	pop    rdx
    2040:	05 05 82 05 0e       	add    eax,0xe058205
    2045:	69 05 25 00 02 04 03 	imul   eax,DWORD PTR [rip+0x4020025],0x1b057403        # 4022074 <__kernel_end+0x3e10074>
    204c:	74 05 1b 
    204f:	00 02                	add    BYTE PTR [rdx],al
    2051:	04 02                	add    al,0x2
    2053:	67 05 05 00 02 04    	addr32 add eax,0x4020005
    2059:	02 08                	add    cl,BYTE PTR [rax]
    205b:	49 05 09 62 3e 05    	rex.WB add rax,0x53e6209
    2061:	01 24 31             	add    DWORD PTR [rcx+rsi*1],esp
    2064:	05 0c f3 05 0d       	add    eax,0xd05f30c
    2069:	bb 05 1f e5 05       	mov    ebx,0x5e51f05
    206e:	1d 08 76 05 19       	sbb    eax,0x19057608
    2073:	84 05 05 82 05 18    	test   BYTE PTR [rip+0x18058205],al        # 1805a27e <__kernel_end+0x17e4827e>
    2079:	5a                   	pop    rdx
    207a:	05 05 82 05 0e       	add    eax,0xe058205
    207f:	69 05 21 00 02 04 03 	imul   eax,DWORD PTR [rip+0x4020021],0x19057403        # 40220aa <__kernel_end+0x3e100aa>
    2086:	74 05 19 
    2089:	00 02                	add    BYTE PTR [rdx],al
    208b:	04 02                	add    al,0x2
    208d:	67 05 05 00 02 04    	addr32 add eax,0x4020005
    2093:	02 08                	add    cl,BYTE PTR [rax]
    2095:	49 05 09 62 3e 05    	rex.WB add rax,0x53e6209
    209b:	01 24 31             	add    DWORD PTR [rcx+rsi*1],esp
    209e:	05 27 83 05 2f       	add    eax,0x2f058327
    20a3:	ba 05 51 4a 05       	mov    edx,0x54a5105
    20a8:	09 4a 05             	or     DWORD PTR [rdx+0x5],ecx
    20ab:	0e                   	(bad)  
    20ac:	3d 05 17 00 02       	cmp    eax,0x2001705
    20b1:	04 01                	add    al,0x1
    20b3:	74 05                	je     20ba <stivale_hdr-0x1fdf46>
    20b5:	b4 01                	mov    ah,0x1
    20b7:	84 05 b2 01 58 05    	test   BYTE PTR [rip+0x55801b2],al        # 558226f <__kernel_end+0x537026f>
    20bd:	89 01                	mov    DWORD PTR [rcx],eax
    20bf:	74 05                	je     20c6 <stivale_hdr-0x1fdf3a>
    20c1:	28 d6                	sub    dh,dl
    20c3:	05 29 4b 05 13       	add    eax,0x13054b29
    20c8:	82                   	(bad)  
    20c9:	05 4a 00 02 04       	add    eax,0x402004a
    20ce:	03 74 05 38          	add    esi,DWORD PTR [rbp+rax*1+0x38]
    20d2:	00 02                	add    BYTE PTR [rdx],al
    20d4:	04 03                	add    al,0x3
    20d6:	ac                   	lods   al,BYTE PTR ds:[rsi]
    20d7:	05 1a 00 02 04       	add    eax,0x402001a
    20dc:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
    20df:	09 00                	or     DWORD PTR [rax],eax
    20e1:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    20e4:	08 57 05             	or     BYTE PTR [rdi+0x5],dl
    20e7:	05 00 02 04 02       	add    eax,0x2040200
    20ec:	71 05                	jno    20f3 <stivale_hdr-0x1fdf0d>
    20ee:	01 6c 02 03          	add    DWORD PTR [rdx+rax*1+0x3],ebp
    20f2:	00 01                	add    BYTE PTR [rcx],al
    20f4:	01 b2 00 00 00 03    	add    DWORD PTR [rdx+0x3000000],esi
    20fa:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
    20fe:	00 01                	add    BYTE PTR [rcx],al
    2100:	01 fb                	add    ebx,edi
    2102:	0e                   	(bad)  
    2103:	0d 00 01 01 01       	or     eax,0x1010100
    2108:	01 00                	add    DWORD PTR [rax],eax
    210a:	00 00                	add    BYTE PTR [rax],al
    210c:	01 00                	add    DWORD PTR [rax],eax
    210e:	00 01                	add    BYTE PTR [rcx],al
    2110:	73 72                	jae    2184 <stivale_hdr-0x1fde7c>
    2112:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2114:	64 72 69             	fs jb  2180 <stivale_hdr-0x1fde80>
    2117:	76 65                	jbe    217e <stivale_hdr-0x1fde82>
    2119:	72 73                	jb     218e <stivale_hdr-0x1fde72>
    211b:	2f                   	(bad)  
    211c:	61                   	(bad)  
    211d:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2120:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2123:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2125:	64 72 69             	fs jb  2191 <stivale_hdr-0x1fde6f>
    2128:	76 65                	jbe    218f <stivale_hdr-0x1fde71>
    212a:	72 73                	jb     219f <stivale_hdr-0x1fde61>
    212c:	2f                   	(bad)  
    212d:	67 66 78 2f          	addr32 data16 js 2160 <stivale_hdr-0x1fdea0>
    2131:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2133:	70 00                	jo     2135 <stivale_hdr-0x1fdecb>
    2135:	73 72                	jae    21a9 <stivale_hdr-0x1fde57>
    2137:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2139:	64 72 69             	fs jb  21a5 <stivale_hdr-0x1fde5b>
    213c:	76 65                	jbe    21a3 <stivale_hdr-0x1fde5d>
    213e:	72 73                	jb     21b3 <stivale_hdr-0x1fde4d>
    2140:	2f                   	(bad)  
    2141:	74 74                	je     21b7 <stivale_hdr-0x1fde49>
    2143:	79 00                	jns    2145 <stivale_hdr-0x1fdebb>
    2145:	00 70 6f             	add    BYTE PTR [rax+0x6f],dh
    2148:	77 65                	ja     21af <stivale_hdr-0x1fde51>
    214a:	72 2e                	jb     217a <stivale_hdr-0x1fde86>
    214c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    214f:	00 01                	add    BYTE PTR [rcx],al
    2151:	00 00                	add    BYTE PTR [rax],al
    2153:	61                   	(bad)  
    2154:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2157:	2e 68 00 01 00 00    	cs push 0x100
    215d:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    215f:	70 2e                	jo     218f <stivale_hdr-0x1fde71>
    2161:	68 00 02 00 00       	push   0x200
    2166:	74 74                	je     21dc <stivale_hdr-0x1fde24>
    2168:	79 2e                	jns    2198 <stivale_hdr-0x1fde68>
    216a:	68 00 03 00 00       	push   0x300
    216f:	70 6f                	jo     21e0 <stivale_hdr-0x1fde20>
    2171:	77 65                	ja     21d8 <stivale_hdr-0x1fde28>
    2173:	72 2e                	jb     21a3 <stivale_hdr-0x1fde5d>
    2175:	68 00 01 00 00       	push   0x100
    217a:	00 05 1d 00 09 02    	add    BYTE PTR [rip+0x209001d],al        # 209219d <__kernel_end+0x1e8019d>
    2180:	23 42 20             	and    eax,DWORD PTR [rdx+0x20]
    2183:	00 00                	add    BYTE PTR [rax],al
    2185:	00 00                	add    BYTE PTR [rax],al
    2187:	00 03                	add    BYTE PTR [rbx],al
    2189:	0b 01                	or     eax,DWORD PTR [rcx]
    218b:	05 10 4b 05 02       	add    eax,0x2054b10
    2190:	59                   	pop    rcx
    2191:	05 01 2f 05 21       	add    eax,0x21052f01
    2196:	3e 05 02 4b 05 01    	ds add eax,0x1054b02
    219c:	59                   	pop    rcx
    219d:	05 21 3e 05 02       	add    eax,0x2053e21
    21a2:	4b 05 01 59 02 03    	rex.WXB add rax,0x3025901
    21a8:	00 01                	add    BYTE PTR [rcx],al
    21aa:	01 19                	add    DWORD PTR [rcx],ebx
    21ac:	01 00                	add    DWORD PTR [rax],eax
    21ae:	00 03                	add    BYTE PTR [rbx],al
    21b0:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    21b6:	01 fb                	add    ebx,edi
    21b8:	0e                   	(bad)  
    21b9:	0d 00 01 01 01       	or     eax,0x1010100
    21be:	01 00                	add    DWORD PTR [rax],eax
    21c0:	00 00                	add    BYTE PTR [rax],al
    21c2:	01 00                	add    DWORD PTR [rax],eax
    21c4:	00 01                	add    BYTE PTR [rcx],al
    21c6:	73 72                	jae    223a <stivale_hdr-0x1fddc6>
    21c8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    21ca:	64 72 69             	fs jb  2236 <stivale_hdr-0x1fddca>
    21cd:	76 65                	jbe    2234 <stivale_hdr-0x1fddcc>
    21cf:	72 73                	jb     2244 <stivale_hdr-0x1fddbc>
    21d1:	2f                   	(bad)  
    21d2:	61                   	(bad)  
    21d3:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    21d6:	2f                   	(bad)  
    21d7:	2e 2e 00 73 72       	cs add BYTE PTR cs:[rbx+0x72],dh
    21dc:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    21de:	64 72 69             	fs jb  224a <stivale_hdr-0x1fddb6>
    21e1:	76 65                	jbe    2248 <stivale_hdr-0x1fddb8>
    21e3:	72 73                	jb     2258 <stivale_hdr-0x1fdda8>
    21e5:	2f                   	(bad)  
    21e6:	61                   	(bad)  
    21e7:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    21ea:	2f                   	(bad)  
    21eb:	2e 2e 2f             	cs cs (bad) 
    21ee:	75 61                	jne    2251 <stivale_hdr-0x1fddaf>
    21f0:	72 74                	jb     2266 <stivale_hdr-0x1fdd9a>
    21f2:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    21f5:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    21f7:	64 72 69             	fs jb  2263 <stivale_hdr-0x1fdd9d>
    21fa:	76 65                	jbe    2261 <stivale_hdr-0x1fdd9f>
    21fc:	72 73                	jb     2271 <stivale_hdr-0x1fdd8f>
    21fe:	2f                   	(bad)  
    21ff:	61                   	(bad)  
    2200:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2203:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2206:	63 00                	movsxd eax,DWORD PTR [rax]
    2208:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
    220b:	2e 68 00 01 00 00    	cs push 0x100
    2211:	73 65                	jae    2278 <stivale_hdr-0x1fdd88>
    2213:	72 69                	jb     227e <stivale_hdr-0x1fdd82>
    2215:	61                   	(bad)  
    2216:	6c                   	ins    BYTE PTR es:[rdi],dx
    2217:	2e 68 00 02 00 00    	cs push 0x200
    221d:	61                   	(bad)  
    221e:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2221:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    2225:	00 03                	add    BYTE PTR [rbx],al
    2227:	00 00                	add    BYTE PTR [rax],al
    2229:	74 79                	je     22a4 <stivale_hdr-0x1fdd5c>
    222b:	70 65                	jo     2292 <stivale_hdr-0x1fdd6e>
    222d:	73 2e                	jae    225d <stivale_hdr-0x1fdda3>
    222f:	68 00 04 00 00       	push   0x400
    2234:	61                   	(bad)  
    2235:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2238:	2e 68 00 03 00 00    	cs push 0x300
    223e:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2092249 <__kernel_end+0x1e80249>
    2244:	49                   	rex.WB
    2245:	42 20 00             	rex.X and BYTE PTR [rax],al
    2248:	00 00                	add    BYTE PTR [rax],al
    224a:	00 00                	add    BYTE PTR [rax],al
    224c:	17                   	(bad)  
    224d:	05 09 08 4b 05       	add    eax,0x54b0809
    2252:	05 93 04 02 05       	add    eax,0x5020493
    2257:	33 39                	xor    edi,DWORD PTR [rcx]
    2259:	05 15 c9 05 09       	add    eax,0x905c915
    225e:	f3 04 03             	repz add al,0x3
    2261:	05 01 3b 05 1c       	add    eax,0x1c053b01
    2266:	bb 05 20 9f 05       	mov    ebx,0x59f2005
    226b:	26 ac                	lods   al,BYTE PTR es:[rsi]
    226d:	05 2d 58 05 0a       	add    eax,0xa05582d
    2272:	4a 05 0f 83 05 18    	rex.WX add rax,0x1805830f
    2278:	00 02                	add    BYTE PTR [rdx],al
    227a:	04 01                	add    al,0x1
    227c:	82                   	(bad)  
    227d:	05 70 a0 05 95       	add    eax,0x9505a070
    2282:	01 ac 05 9a 01 3c 05 	add    DWORD PTR [rbp+rax*1+0x53c019a],ebp
    2289:	95                   	xchg   ebp,eax
    228a:	01 82 05 55 74 05    	add    DWORD PTR [rdx+0x5745505],eax
    2290:	27                   	(bad)  
    2291:	3c 05                	cmp    al,0x5
    2293:	12 4b 05             	adc    cl,BYTE PTR [rbx+0x5]
    2296:	1b 00                	sbb    eax,DWORD PTR [rax]
    2298:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    229b:	74 67                	je     2304 <stivale_hdr-0x1fdcfc>
    229d:	05 1c 66 05 40       	add    eax,0x4005661c
    22a2:	c8 05 0d f2          	enter  0xd05,0xf2
    22a6:	4c 05 18 67 05 09    	rex.WR add rax,0x9056718
    22ac:	00 02                	add    BYTE PTR [rdx],al
    22ae:	04 02                	add    al,0x2
    22b0:	62                   	(bad)  
    22b1:	05 11 68 05 05       	add    eax,0x5056811
    22b6:	00 02                	add    BYTE PTR [rdx],al
    22b8:	04 02                	add    al,0x2
    22ba:	1b 05 0c 03 0a 74    	sbb    eax,DWORD PTR [rip+0x740a030c]        # 740a25cc <__kernel_end+0x73e905cc>
    22c0:	05 01 59 02 02       	add    eax,0x2025901
    22c5:	00 01                	add    BYTE PTR [rcx],al
    22c7:	01 c9                	add    ecx,ecx
    22c9:	06                   	(bad)  
    22ca:	00 00                	add    BYTE PTR [rax],al
    22cc:	03 00                	add    eax,DWORD PTR [rax]
    22ce:	fd                   	std    
    22cf:	00 00                	add    BYTE PTR [rax],al
    22d1:	00 01                	add    BYTE PTR [rcx],al
    22d3:	01 fb                	add    ebx,edi
    22d5:	0e                   	(bad)  
    22d6:	0d 00 01 01 01       	or     eax,0x1010100
    22db:	01 00                	add    DWORD PTR [rax],eax
    22dd:	00 00                	add    BYTE PTR [rax],al
    22df:	01 00                	add    DWORD PTR [rax],eax
    22e1:	00 01                	add    BYTE PTR [rcx],al
    22e3:	73 72                	jae    2357 <stivale_hdr-0x1fdca9>
    22e5:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    22e7:	64 72 69             	fs jb  2353 <stivale_hdr-0x1fdcad>
    22ea:	76 65                	jbe    2351 <stivale_hdr-0x1fdcaf>
    22ec:	72 73                	jb     2361 <stivale_hdr-0x1fdc9f>
    22ee:	2f                   	(bad)  
    22ef:	67 66 78 2f          	addr32 data16 js 2322 <stivale_hdr-0x1fdcde>
    22f3:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    22f5:	70 00                	jo     22f7 <stivale_hdr-0x1fdd09>
    22f7:	73 72                	jae    236b <stivale_hdr-0x1fdc95>
    22f9:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    22fb:	64 72 69             	fs jb  2367 <stivale_hdr-0x1fdc99>
    22fe:	76 65                	jbe    2365 <stivale_hdr-0x1fdc9b>
    2300:	72 73                	jb     2375 <stivale_hdr-0x1fdc8b>
    2302:	2f                   	(bad)  
    2303:	74 74                	je     2379 <stivale_hdr-0x1fdc87>
    2305:	79 00                	jns    2307 <stivale_hdr-0x1fdcf9>
    2307:	73 72                	jae    237b <stivale_hdr-0x1fdc85>
    2309:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    230b:	75 74                	jne    2381 <stivale_hdr-0x1fdc7f>
    230d:	69 6c 00 2f 68 6f 6d 	imul   ebp,DWORD PTR [rax+rax*1+0x2f],0x656d6f68
    2314:	65 
    2315:	2f                   	(bad)  
    2316:	72 69                	jb     2381 <stivale_hdr-0x1fdc7f>
    2318:	7a 65                	jp     237f <stivale_hdr-0x1fdc81>
    231a:	74 2f                	je     234b <stivale_hdr-0x1fdcb5>
    231c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    231d:	70 74                	jo     2393 <stivale_hdr-0x1fdc6d>
    231f:	2f                   	(bad)  
    2320:	63 72 6f             	movsxd esi,DWORD PTR [rdx+0x6f]
    2323:	73 73                	jae    2398 <stivale_hdr-0x1fdc68>
    2325:	2f                   	(bad)  
    2326:	6c                   	ins    BYTE PTR es:[rdi],dx
    2327:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
    232e:	78 38                	js     2368 <stivale_hdr-0x1fdc98>
    2330:	36 5f                	ss pop rdi
    2332:	36 34 2d             	ss xor al,0x2d
    2335:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2337:	66 2f                	data16 (bad) 
    2339:	31 30                	xor    DWORD PTR [rax],esi
    233b:	2e 32 2e             	xor    ch,BYTE PTR cs:[rsi]
    233e:	30 2f                	xor    BYTE PTR [rdi],ch
    2340:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    2347:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    234a:	63 00                	movsxd eax,DWORD PTR [rax]
    234c:	73 72                	jae    23c0 <stivale_hdr-0x1fdc40>
    234e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2350:	62                   	(bad)  
    2351:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2352:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2353:	74 00                	je     2355 <stivale_hdr-0x1fdcab>
    2355:	73 72                	jae    23c9 <stivale_hdr-0x1fdc37>
    2357:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2359:	64 72 69             	fs jb  23c5 <stivale_hdr-0x1fdc3b>
    235c:	76 65                	jbe    23c3 <stivale_hdr-0x1fdc3d>
    235e:	72 73                	jb     23d3 <stivale_hdr-0x1fdc2d>
    2360:	2f                   	(bad)  
    2361:	61                   	(bad)  
    2362:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2365:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2368:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    236a:	6d                   	ins    DWORD PTR es:[rdi],dx
    236b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    236d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    236e:	72 79                	jb     23e9 <stivale_hdr-0x1fdc17>
    2370:	00 00                	add    BYTE PTR [rax],al
    2372:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2374:	70 2e                	jo     23a4 <stivale_hdr-0x1fdc5c>
    2376:	68 00 01 00 00       	push   0x100
    237b:	74 74                	je     23f1 <stivale_hdr-0x1fdc0f>
    237d:	79 2e                	jns    23ad <stivale_hdr-0x1fdc53>
    237f:	68 00 02 00 00       	push   0x200
    2384:	6b 75 74 69          	imul   esi,DWORD PTR [rbp+0x74],0x69
    2388:	6c                   	ins    BYTE PTR es:[rdi],dx
    2389:	2e 68 00 03 00 00    	cs push 0x300
    238f:	74 74                	je     2405 <stivale_hdr-0x1fdbfb>
    2391:	79 2e                	jns    23c1 <stivale_hdr-0x1fdc3f>
    2393:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    2396:	00 02                	add    BYTE PTR [rdx],al
    2398:	00 00                	add    BYTE PTR [rax],al
    239a:	73 74                	jae    2410 <stivale_hdr-0x1fdbf0>
    239c:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x400
    23a3:	04 
    23a4:	00 00                	add    BYTE PTR [rax],al
    23a6:	74 79                	je     2421 <stivale_hdr-0x1fdbdf>
    23a8:	70 65                	jo     240f <stivale_hdr-0x1fdbf1>
    23aa:	73 2e                	jae    23da <stivale_hdr-0x1fdc26>
    23ac:	68 00 05 00 00       	push   0x500
    23b1:	62                   	(bad)  
    23b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23b4:	74 2e                	je     23e4 <stivale_hdr-0x1fdc1c>
    23b6:	68 00 06 00 00       	push   0x600
    23bb:	61                   	(bad)  
    23bc:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    23bf:	2e 68 00 07 00 00    	cs push 0x700
    23c5:	70 6d                	jo     2434 <stivale_hdr-0x1fdbcc>
    23c7:	6d                   	ins    DWORD PTR es:[rdi],dx
    23c8:	2e 68 00 08 00 00    	cs push 0x800
    23ce:	00 05 03 00 09 02    	add    BYTE PTR [rip+0x2090003],al        # 20923d7 <__kernel_end+0x1e803d7>
    23d4:	47                   	rex.RXB
    23d5:	43 20 00             	rex.XB and BYTE PTR [r8],al
    23d8:	00 00                	add    BYTE PTR [rax],al
    23da:	00 00                	add    BYTE PTR [rax],al
    23dc:	03 21                	add    esp,DWORD PTR [rcx]
    23de:	01 05 28 e5 05 41    	add    DWORD PTR [rip+0x4105e528],eax        # 4106090c <__kernel_end+0x40e4e90c>
    23e4:	d6                   	(bad)  
    23e5:	05 3a 3c 05 4a       	add    eax,0x4a053c3a
    23ea:	3c 05                	cmp    al,0x5
    23ec:	43 3c 05             	rex.XB cmp al,0x5
    23ef:	4b                   	rex.WXB
    23f0:	4a 05 12 82 05 4b    	rex.WX add rax,0x4b058212
    23f6:	9e                   	sahf   
    23f7:	05 4d 66 05 03       	add    eax,0x305664d
    23fc:	59                   	pop    rcx
    23fd:	3f                   	(bad)  
    23fe:	05 28 e5 05 41       	add    eax,0x4105e528
    2403:	d6                   	(bad)  
    2404:	05 3a 3c 05 4a       	add    eax,0x4a053c3a
    2409:	3c 05                	cmp    al,0x5
    240b:	43 3c 05             	rex.XB cmp al,0x5
    240e:	4b                   	rex.WXB
    240f:	4a 05 12 82 05 4b    	rex.WX add rax,0x4b058212
    2415:	9e                   	sahf   
    2416:	05 4d 66 05 03       	add    eax,0x305664d
    241b:	59                   	pop    rcx
    241c:	04 02                	add    al,0x2
    241e:	05 09 03 6d 3c       	add    eax,0x3c6d0309
    2423:	05 1b 08 20 05       	add    eax,0x520081b
    2428:	1d 4a 05 29 4a       	sbb    eax,0x4a29054a
    242d:	05 1b 3c 05 2f       	add    eax,0x2f053c1b
    2432:	2e 04 03             	cs add al,0x3
    2435:	05 02 03 72 2e       	add    eax,0x2e720302
    243a:	05 15 08 13 05       	add    eax,0x5130815
    243f:	12 4a 05             	adc    cl,BYTE PTR [rdx+0x5]
    2442:	1c ba                	sbb    al,0xba
    2444:	05 02 3d 04 04       	add    eax,0x4043d02
    2449:	05 01 03 0f 2e       	add    eax,0x2e0f0301
    244e:	05 06 83 05 09       	add    eax,0x9058306
    2453:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2454:	05 69 ae 05 7c       	add    eax,0x7c05ae69
    2459:	ac                   	lods   al,BYTE PTR ds:[rsi]
    245a:	05 4d 3c 05 7c       	add    eax,0x7c053c4d
    245f:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2460:	05 13 08 76 05       	add    eax,0x5760813
    2465:	0c 58                	or     al,0x58
    2467:	05 14 75 05 0d       	add    eax,0xd057514
    246c:	58                   	pop    rax
    246d:	05 31 76 05 0e       	add    eax,0xe057631
    2472:	58                   	pop    rax
    2473:	05 3a 76 05 43       	add    eax,0x4305763a
    2478:	3c 05                	cmp    al,0x5
    247a:	3c 3c                	cmp    al,0x3c
    247c:	05 45 3c 05 1c       	add    eax,0x1c053c45
    2481:	2e 05 3e 08 59 05    	cs add eax,0x559083e
    2487:	5b                   	pop    rbx
    2488:	d6                   	(bad)  
    2489:	05 50 d6 05 7a       	add    eax,0x7a05d650
    248e:	3c 05                	cmp    al,0x5
    2490:	8a 01                	mov    al,BYTE PTR [rcx]
    2492:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2493:	05 6e 74 05 1c       	add    eax,0x1c05746e
    2498:	3c 05                	cmp    al,0x5
    249a:	4c 08 91 05 69 d6 05 	rex.WR or BYTE PTR [rcx+0x5d66905],r10b
    24a1:	5e                   	pop    rsi
    24a2:	d6                   	(bad)  
    24a3:	05 88 01 3c 05       	add    eax,0x53c0188
    24a8:	98                   	cwde   
    24a9:	01 ac 05 7c 74 05 1c 	add    DWORD PTR [rbp+rax*1+0x1c05747c],ebp
    24b0:	3c 05                	cmp    al,0x5
    24b2:	2e 2e 05 1c 9e 05 18 	cs cs add eax,0x18059e1c
    24b9:	08 30                	or     BYTE PTR [rax],dh
    24bb:	05 23 bb 05 18       	add    eax,0x1805bb23
    24c0:	08 3c 05 01 83 3f 05 	or     BYTE PTR [rax*1+0x53f8301],bh
    24c7:	14 83                	adc    al,0x83
    24c9:	05 1b 00 02 04       	add    eax,0x402001b
    24ce:	01 74 05 1d          	add    DWORD PTR [rbp+rax*1+0x1d],esi
    24d2:	00 02                	add    BYTE PTR [rdx],al
    24d4:	04 01                	add    al,0x1
    24d6:	3c 05                	cmp    al,0x5
    24d8:	15 bb 05 1c 00       	adc    eax,0x1c05bb
    24dd:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    24e0:	74 05                	je     24e7 <stivale_hdr-0x1fdb19>
    24e2:	1e                   	(bad)  
    24e3:	00 02                	add    BYTE PTR [rdx],al
    24e5:	04 03                	add    al,0x3
    24e7:	3c 05                	cmp    al,0x5
    24e9:	10 00                	adc    BYTE PTR [rax],al
    24eb:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    24ee:	bb 05 03 00 02       	mov    ebx,0x2000305
    24f3:	04 02                	add    al,0x2
    24f5:	08 9d 05 02 00 02    	or     BYTE PTR [rbp+0x2000205],bl
    24fb:	04 02                	add    al,0x2
    24fd:	65 05 0c 6a 05 01    	gs add eax,0x1056a0c
    2503:	e5 3f                	in     eax,0x3f
    2505:	05 0b 08 9f 05       	add    eax,0x59f080b
    250a:	02 74 05 0b          	add    dh,BYTE PTR [rbp+rax*1+0xb]
    250e:	69 05 02 74 05 34 69 	imul   eax,DWORD PTR [rip+0x34057402],0x4a350569        # 3405991a <__kernel_end+0x33e4791a>
    2515:	05 35 4a 
    2518:	05 34 4a 05 27       	add    eax,0x27054a34
    251d:	3c 05                	cmp    al,0x5
    251f:	14 74                	adc    al,0x74
    2521:	05 20 e4 05 27       	add    eax,0x2705e420
    2526:	74 05                	je     252d <stivale_hdr-0x1fdad3>
    2528:	34 74                	xor    al,0x74
    252a:	05 29 90 05 11       	add    eax,0x11059029
    252f:	3e 05 03 03 79 08    	ds add eax,0x8790303
    2535:	82                   	(bad)  
    2536:	3f                   	(bad)  
    2537:	05 01 25 69 05       	add    eax,0x5692501
    253c:	08 c9                	or     cl,cl
    253e:	05 0a 75 02 2f       	add    eax,0x2f02750a
    2543:	15 05 04 75 05       	adc    eax,0x5750405
    2548:	0a 5b 05             	or     bl,BYTE PTR [rbx+0x5]
    254b:	04 75                	add    al,0x75
    254d:	05 0a 31 05 04       	add    eax,0x405310a
    2552:	75 05                	jne    2559 <stivale_hdr-0x1fdaa7>
    2554:	0a 31                	or     dh,BYTE PTR [rcx]
    2556:	05 04 75 05 0a       	add    eax,0xa057504
    255b:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a65 <__kernel_end+0x9e47a65>
    2561:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a6b <__kernel_end+0x9e47a6b>
    2567:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a71 <__kernel_end+0x9e47a71>
    256d:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a77 <__kernel_end+0x9e47a77>
    2573:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a7d <__kernel_end+0x9e47a7d>
    2579:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a83 <__kernel_end+0x9e47a83>
    257f:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a89 <__kernel_end+0x9e47a89>
    2585:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a8f <__kernel_end+0x9e47a8f>
    258b:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a95 <__kernel_end+0x9e47a95>
    2591:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059a9b <__kernel_end+0x9e47a9b>
    2597:	31 05 04 75 05 0a    	xor    DWORD PTR [rip+0xa057504],eax        # a059aa1 <__kernel_end+0x9e47aa1>
    259d:	31 05 04 75 05 09    	xor    DWORD PTR [rip+0x9057504],eax        # 9059aa7 <__kernel_end+0x8e47aa7>
    25a3:	23 05 01 3d 31 05    	and    eax,DWORD PTR [rip+0x5313d01]        # 53162aa <__kernel_end+0x51042aa>
    25a9:	34 08                	xor    al,0x8
    25ab:	cc                   	int3   
    25ac:	05 1c 74 05 21       	add    eax,0x2105741c
    25b1:	74 05                	je     25b8 <stivale_hdr-0x1fda48>
    25b3:	2f                   	(bad)  
    25b4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    25b5:	05 2d 74 05 34       	add    eax,0x3405742d
    25ba:	3c 05                	cmp    al,0x5
    25bc:	07                   	(bad)  
    25bd:	66 05 27 76          	add    ax,0x7627
    25c1:	05 07 82 05 1d       	add    eax,0x1d058207
    25c6:	67 05 07 82 3e 05    	addr32 add eax,0x53e8207
    25cc:	1f                   	(bad)  
    25cd:	76 d7                	jbe    25a6 <stivale_hdr-0x1fda5a>
    25cf:	05 39 d8 05 0e       	add    eax,0xe05d839
    25d4:	e8 05 17 00 02       	call   2003cde <__kernel_end+0x1df1cde>
    25d9:	04 03                	add    al,0x3
    25db:	4a 05 1e 00 02 04    	rex.WX add rax,0x402001e
    25e1:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
    25e4:	08 00                	or     BYTE PTR [rax],al
    25e6:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    25e9:	4a 05 0a 00 02 04    	rex.WX add rax,0x402000a
    25ef:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    25f2:	1e                   	(bad)  
    25f3:	00 02                	add    BYTE PTR [rdx],al
    25f5:	04 02                	add    al,0x2
    25f7:	3c 05                	cmp    al,0x5
    25f9:	0f 00 02             	sldt   WORD PTR [rdx]
    25fc:	04 02                	add    al,0x2
    25fe:	d6                   	(bad)  
    25ff:	05 02 00 02 04       	add    eax,0x4020002
    2604:	02 9d 05 0c be 05    	add    bl,BYTE PTR [rbp+0x5be0c05]
    260a:	19 82 05 1e 74 05    	sbb    DWORD PTR [rdx+0x5741e05],eax
    2610:	13 74 05 26          	adc    esi,DWORD PTR [rbp+rax*1+0x26]
    2614:	00 02                	add    BYTE PTR [rdx],al
    2616:	04 01                	add    al,0x1
    2618:	66 05 0e ad          	add    ax,0xad0e
    261c:	05 1b 82 05 20       	add    eax,0x2005821b
    2621:	74 05                	je     2628 <stivale_hdr-0x1fd9d8>
    2623:	15 3c 05 28 00       	adc    eax,0x28053c
    2628:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    262b:	66 05 10 75          	add    ax,0x7510
    262f:	05 15 ba 05 18       	add    eax,0x1805ba15
    2634:	74 05                	je     263b <stivale_hdr-0x1fd9c5>
    2636:	04 82                	add    al,0x82
    2638:	05 1c 4b 02 25       	add    eax,0x25024b1c
    263d:	14 05                	adc    al,0x5
    263f:	04 00                	add    al,0x0
    2641:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2644:	02 23                	add    ah,BYTE PTR [rbx]
    2646:	0e                   	(bad)  
    2647:	05 02 00 02 04       	add    eax,0x4020002
    264c:	02 b9 05 01 03 09    	add    bh,BYTE PTR [rcx+0x9030105]
    2652:	e4 77                	in     al,0x77
    2654:	05 34 08 cc 05       	add    eax,0x5cc0834
    2659:	1c 74                	sbb    al,0x74
    265b:	05 21 74 05 2f       	add    eax,0x2f057421
    2660:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2661:	05 2d 74 05 34       	add    eax,0x3405742d
    2666:	3c 05                	cmp    al,0x5
    2668:	07                   	(bad)  
    2669:	66 05 27 76          	add    ax,0x7627
    266d:	05 07 82 05 1d       	add    eax,0x1d058207
    2672:	67 05 07 82 3e 05    	addr32 add eax,0x53e8207
    2678:	1f                   	(bad)  
    2679:	76 d7                	jbe    2652 <stivale_hdr-0x1fd9ae>
    267b:	05 39 d8 05 0e       	add    eax,0xe05d839
    2680:	e8 05 17 00 02       	call   2003d8a <__kernel_end+0x1df1d8a>
    2685:	04 03                	add    al,0x3
    2687:	4a 05 1e 00 02 04    	rex.WX add rax,0x402001e
    268d:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
    2690:	08 00                	or     BYTE PTR [rax],al
    2692:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2695:	4a 05 0a 00 02 04    	rex.WX add rax,0x402000a
    269b:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    269e:	1e                   	(bad)  
    269f:	00 02                	add    BYTE PTR [rdx],al
    26a1:	04 02                	add    al,0x2
    26a3:	3c 05                	cmp    al,0x5
    26a5:	0f 00 02             	sldt   WORD PTR [rdx]
    26a8:	04 02                	add    al,0x2
    26aa:	d6                   	(bad)  
    26ab:	05 02 00 02 04       	add    eax,0x4020002
    26b0:	02 9d 05 0c be 05    	add    bl,BYTE PTR [rbp+0x5be0c05]
    26b6:	19 82 05 1e 74 05    	sbb    DWORD PTR [rdx+0x5741e05],eax
    26bc:	13 74 05 26          	adc    esi,DWORD PTR [rbp+rax*1+0x26]
    26c0:	00 02                	add    BYTE PTR [rdx],al
    26c2:	04 01                	add    al,0x1
    26c4:	66 05 0d ad          	add    ax,0xad0d
    26c8:	05 1a 82 05 1f       	add    eax,0x1f05821a
    26cd:	74 05                	je     26d4 <stivale_hdr-0x1fd92c>
    26cf:	14 3c                	adc    al,0x3c
    26d1:	05 27 00 02 04       	add    eax,0x4020027
    26d6:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
    26d9:	10 75 05             	adc    BYTE PTR [rbp+0x5],dh
    26dc:	15 ba 05 18 74       	adc    eax,0x741805ba
    26e1:	05 04 82 05 23       	add    eax,0x23058204
    26e6:	4b 02 25 14 05 03 00 	rex.WXB add spl,BYTE PTR [rip+0x30514]        # 32c01 <stivale_hdr-0x1cd3ff>
    26ed:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    26f0:	02 23                	add    ah,BYTE PTR [rbx]
    26f2:	0e                   	(bad)  
    26f3:	05 33 00 02 04       	add    eax,0x4020033
    26f8:	02 58 05             	add    bl,BYTE PTR [rax+0x5]
    26fb:	03 00                	add    eax,DWORD PTR [rax]
    26fd:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2700:	58                   	pop    rax
    2701:	05 02 00 02 04       	add    eax,0x4020002
    2706:	02 2d 05 32 00 02    	add    ch,BYTE PTR [rip+0x2003205]        # 2005911 <__kernel_end+0x1df3911>
    270c:	04 02                	add    al,0x2
    270e:	58                   	pop    rax
    270f:	05 02 00 02 04       	add    eax,0x4020002
    2714:	02 58 05             	add    bl,BYTE PTR [rax+0x5]
    2717:	01 03                	add    DWORD PTR [rbx],eax
    2719:	09 58 77             	or     DWORD PTR [rax+0x77],ebx
    271c:	05 0e 83 05 18       	add    eax,0x1805830e
    2721:	00 02                	add    BYTE PTR [rdx],al
    2723:	04 01                	add    al,0x1
    2725:	66 05 1d 00          	add    ax,0x1d
    2729:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    272c:	4a 05 0f bc 05 19    	rex.WX add rax,0x1905bc0f
    2732:	00 02                	add    BYTE PTR [rdx],al
    2734:	04 03                	add    al,0x3
    2736:	66 05 1e 00          	add    ax,0x1e
    273a:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    273d:	4a 05 13 00 02 04    	rex.WX add rax,0x4020013
    2743:	02 bc 05 03 00 02 04 	add    bh,BYTE PTR [rbp+rax*1+0x4020003]
    274a:	02 fe                	add    bh,dh
    274c:	05 02 00 02 04       	add    eax,0x4020002
    2751:	02 c6                	add    al,dh
    2753:	05 01 03 09 c8       	add    eax,0xc8090301
    2758:	3f                   	(bad)  
    2759:	05 11 91 05 1a       	add    eax,0x1a059111
    275e:	00 02                	add    BYTE PTR [rdx],al
    2760:	04 03                	add    al,0x3
    2762:	82                   	(bad)  
    2763:	05 16 00 02 04       	add    eax,0x4020016
    2768:	02 ca                	add    cl,dl
    276a:	05 23 00 02 04       	add    eax,0x4020023
    276f:	02 08                	add    cl,BYTE PTR [rax]
    2771:	20 05 18 00 02 04    	and    BYTE PTR [rip+0x4020018],al        # 402278f <__kernel_end+0x3e1078f>
    2777:	02 e4                	add    ah,ah
    2779:	05 05 00 02 04       	add    eax,0x4020005
    277e:	02 3a                	add    bh,BYTE PTR [rdx]
    2780:	05 11 79 05 1a       	add    eax,0x1a057911
    2785:	00 02                	add    BYTE PTR [rdx],al
    2787:	04 01                	add    al,0x1
    2789:	82                   	(bad)  
    278a:	05 15 ca 05 2c       	add    eax,0x2c05ca15
    278f:	00 02                	add    BYTE PTR [rdx],al
    2791:	04 03                	add    al,0x3
    2793:	82                   	(bad)  
    2794:	05 1e 00 02 04       	add    eax,0x402001e
    2799:	03 08                	add    ecx,DWORD PTR [rax]
    279b:	20 05 2f 00 02 04    	and    BYTE PTR [rip+0x402002f],al        # 40227d0 <__kernel_end+0x3e107d0>
    27a1:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
    27a4:	1a 00                	sbb    al,BYTE PTR [rax]
    27a6:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    27a9:	08 4a 05             	or     BYTE PTR [rdx+0x5],cl
    27ac:	2f                   	(bad)  
    27ad:	00 02                	add    BYTE PTR [rdx],al
    27af:	04 02                	add    al,0x2
    27b1:	08 12                	or     BYTE PTR [rdx],dl
    27b3:	05 1c 00 02 04       	add    eax,0x402001c
    27b8:	02 3c 05 09 00 02 04 	add    bh,BYTE PTR [rax*1+0x4020009]
    27bf:	02 3b                	add    bh,BYTE PTR [rbx]
    27c1:	05 05 00 02 04       	add    eax,0x4020005
    27c6:	02 72 7a             	add    dh,BYTE PTR [rdx+0x7a]
    27c9:	05 0f 08 22 05       	add    eax,0x522080f
    27ce:	01 59 77             	add    DWORD PTR [rcx+0x77],ebx
    27d1:	05 02 08 21 a1       	add    eax,0xa1210802
    27d6:	05 14 68 05 18       	add    eax,0x18056814
    27db:	ac                   	lods   al,BYTE PTR ds:[rsi]
    27dc:	05 1d 4a 05 0a       	add    eax,0xa054a1d
    27e1:	4a 05 03 75 05 02    	rex.WX add rax,0x2057503
    27e7:	5b                   	pop    rbx
    27e8:	05 0e 68 05 03       	add    eax,0x305680e
    27ed:	74 05                	je     27f4 <stivale_hdr-0x1fd80c>
    27ef:	0c 5a                	or     al,0x5a
    27f1:	05 04 74 05 19       	add    eax,0x19057404
    27f6:	5a                   	pop    rdx
    27f7:	05 0c ac 05 08       	add    eax,0x805ac0c
    27fc:	75 05                	jne    2803 <stivale_hdr-0x1fd7fd>
    27fe:	0a 08                	or     cl,BYTE PTR [rax]
    2800:	40 05 0f 08 22 05    	rex add eax,0x522080f
    2806:	03 02                	add    eax,DWORD PTR [rdx]
    2808:	23 13                	and    edx,DWORD PTR [rbx]
    280a:	05 02 5b 05 0f       	add    eax,0xf055b02
    280f:	67 05 06 08 bc 05    	addr32 add eax,0x5bc0806
    2815:	0f ac 05 06 74 05 0f 	shrd   DWORD PTR [rip+0xf057406],eax,0x74        # f059c23 <__kernel_end+0xee47c23>
    281c:	74 
    281d:	05 02 c8 05 0a       	add    eax,0xa05c802
    2822:	4c 05 07 ad 05 0d    	rex.WR add rax,0xd05ad07
    2828:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2829:	05 07 74 05 0d       	add    eax,0xd057407
    282e:	74 05                	je     2835 <stivale_hdr-0x1fd7cb>
    2830:	03 c8                	add    ecx,eax
    2832:	05 09 4c 05 02       	add    eax,0x2054c09
    2837:	5b                   	pop    rbx
    2838:	05 07 68 05 0d       	add    eax,0xd056807
    283d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    283e:	05 07 74 05 0d       	add    eax,0xd057407
    2843:	74 05                	je     284a <stivale_hdr-0x1fd7b6>
    2845:	03 c8                	add    ecx,eax
    2847:	05 09 4c 05 0a       	add    eax,0xa054c09
    284c:	5a                   	pop    rdx
    284d:	05 03 03 56 c8       	add    eax,0xc8560303
    2852:	05 01 03 2c 20       	add    eax,0x202c0301
    2857:	31 05 07 bb 05 13    	xor    DWORD PTR [rip+0x1305bb07],eax        # 1305e364 <__kernel_end+0x12e4c364>
    285d:	4d 05 02 08 2e 05    	rex.WRB add rax,0x52e0802
    2863:	0d 4c 05 16 00       	or     eax,0x16054c
    2868:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    286b:	82                   	(bad)  
    286c:	05 0c 08 14 05       	add    eax,0x514080c
    2871:	04 74                	add    al,0x74
    2873:	05 0d 59 08 14       	add    eax,0x1408590d
    2878:	05 03 00 02 04       	add    eax,0x4020003
    287d:	02 df                	add    bl,bh
    287f:	05 09 00 02 04       	add    eax,0x4020009
    2884:	01 03                	add    DWORD PTR [rbx],eax
    2886:	0a 74 05 0f          	or     dh,BYTE PTR [rbp+rax*1+0xf]
    288a:	00 02                	add    BYTE PTR [rdx],al
    288c:	04 01                	add    al,0x1
    288e:	74 05                	je     2895 <stivale_hdr-0x1fd76b>
    2890:	07                   	(bad)  
    2891:	84 05 03 74 05 08    	test   BYTE PTR [rip+0x8057403],al        # 8059c9a <__kernel_end+0x7e47c9a>
    2897:	84 75 05             	test   BYTE PTR [rbp+0x5],dh
    289a:	09 5b 05             	or     DWORD PTR [rbx+0x5],ebx
    289d:	05 74 05 18 4c       	add    eax,0x4c180574
    28a2:	05 16 74 05 0a       	add    eax,0xa057416
    28a7:	91                   	xchg   ecx,eax
    28a8:	4b 78 05             	rex.WXB js 28b0 <stivale_hdr-0x1fd750>
    28ab:	06                   	(bad)  
    28ac:	59                   	pop    rcx
    28ad:	05 13 23 05 18       	add    eax,0x18052313
    28b2:	66 05 04 75          	add    ax,0x7504
    28b6:	00 02                	add    BYTE PTR [rdx],al
    28b8:	04 02                	add    al,0x2
    28ba:	06                   	(bad)  
    28bb:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28be:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28c1:	04 02                	add    al,0x2
    28c3:	06                   	(bad)  
    28c4:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28c7:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28ca:	04 02                	add    al,0x2
    28cc:	06                   	(bad)  
    28cd:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28d0:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28d3:	04 02                	add    al,0x2
    28d5:	06                   	(bad)  
    28d6:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28d9:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28dc:	04 02                	add    al,0x2
    28de:	06                   	(bad)  
    28df:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28e2:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28e5:	04 02                	add    al,0x2
    28e7:	06                   	(bad)  
    28e8:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28eb:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28ee:	04 02                	add    al,0x2
    28f0:	06                   	(bad)  
    28f1:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28f4:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    28f7:	04 02                	add    al,0x2
    28f9:	06                   	(bad)  
    28fa:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    28fd:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2900:	04 02                	add    al,0x2
    2902:	06                   	(bad)  
    2903:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    2906:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2909:	04 02                	add    al,0x2
    290b:	06                   	(bad)  
    290c:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    290f:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2912:	04 02                	add    al,0x2
    2914:	06                   	(bad)  
    2915:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    2918:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    291b:	04 02                	add    al,0x2
    291d:	06                   	(bad)  
    291e:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    2921:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2924:	04 02                	add    al,0x2
    2926:	06                   	(bad)  
    2927:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    292a:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    292d:	04 02                	add    al,0x2
    292f:	06                   	(bad)  
    2930:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    2933:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    2936:	04 02                	add    al,0x2
    2938:	06                   	(bad)  
    2939:	08 66 06             	or     BYTE PTR [rsi+0x6],ah
    293c:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    293f:	04 02                	add    al,0x2
    2941:	06                   	(bad)  
    2942:	08 66 05             	or     BYTE PTR [rsi+0x5],ah
    2945:	0b 06                	or     eax,DWORD PTR [rsi]
    2947:	4c 05 0c 4a 05 0b    	rex.WR add rax,0xb054a0c
    294d:	74 05                	je     2954 <stivale_hdr-0x1fd6ac>
    294f:	02 03                	add    al,BYTE PTR [rbx]
    2951:	5a                   	pop    rdx
    2952:	ba 05 03 9b 05       	mov    edx,0x59b0305
    2957:	01 03                	add    DWORD PTR [rbx],eax
    2959:	2b 20                	sub    esp,DWORD PTR [rax]
    295b:	31 05 09 f3 05 06    	xor    DWORD PTR [rip+0x605f309],eax        # 6061c6a <__kernel_end+0x5e4fc6a>
    2961:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2962:	05 01 ad 3f 05       	add    eax,0x53fad01
    2967:	07                   	(bad)  
    2968:	bb bb 05 01 bb       	mov    ebx,0xbb0105bb
    296d:	05 57 3e 05 1c       	add    eax,0x1c053e57
    2972:	bd 05 1e 3c 05       	mov    ebp,0x53c1e05
    2977:	0e                   	(bad)  
    2978:	3c 05                	cmp    al,0x5
    297a:	1c 3d                	sbb    al,0x3d
    297c:	05 1e 3c 05 0e       	add    eax,0xe053c1e
    2981:	e4 05                	in     al,0x5
    2983:	09 3e                	or     DWORD PTR [rsi],edi
    2985:	05 01 4b 31 05       	add    eax,0x5314b01
    298a:	08 bb 05 01 08 75    	or     BYTE PTR [rbx+0x75080105],bh
    2990:	02 03                	add    al,BYTE PTR [rbx]
    2992:	00 01                	add    BYTE PTR [rcx],al
    2994:	01 aa 06 00 00 03    	add    DWORD PTR [rdx+0x3000006],ebp
    299a:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 10029a1 <__kernel_end+0xdf09a1>
    29a0:	01 fb                	add    ebx,edi
    29a2:	0e                   	(bad)  
    29a3:	0d 00 01 01 01       	or     eax,0x1010100
    29a8:	01 00                	add    DWORD PTR [rax],eax
    29aa:	00 00                	add    BYTE PTR [rax],al
    29ac:	01 00                	add    DWORD PTR [rax],eax
    29ae:	00 01                	add    BYTE PTR [rcx],al
    29b0:	73 72                	jae    2a24 <stivale_hdr-0x1fd5dc>
    29b2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    29b4:	64 72 69             	fs jb  2a20 <stivale_hdr-0x1fd5e0>
    29b7:	76 65                	jbe    2a1e <stivale_hdr-0x1fd5e2>
    29b9:	72 73                	jb     2a2e <stivale_hdr-0x1fd5d2>
    29bb:	2f                   	(bad)  
    29bc:	74 74                	je     2a32 <stivale_hdr-0x1fd5ce>
    29be:	79 00                	jns    29c0 <stivale_hdr-0x1fd640>
    29c0:	2f                   	(bad)  
    29c1:	68 6f 6d 65 2f       	push   0x2f656d6f
    29c6:	72 69                	jb     2a31 <stivale_hdr-0x1fd5cf>
    29c8:	7a 65                	jp     2a2f <stivale_hdr-0x1fd5d1>
    29ca:	74 2f                	je     29fb <stivale_hdr-0x1fd605>
    29cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29cd:	70 74                	jo     2a43 <stivale_hdr-0x1fd5bd>
    29cf:	2f                   	(bad)  
    29d0:	63 72 6f             	movsxd esi,DWORD PTR [rdx+0x6f]
    29d3:	73 73                	jae    2a48 <stivale_hdr-0x1fd5b8>
    29d5:	2f                   	(bad)  
    29d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    29d7:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
    29de:	78 38                	js     2a18 <stivale_hdr-0x1fd5e8>
    29e0:	36 5f                	ss pop rdi
    29e2:	36 34 2d             	ss xor al,0x2d
    29e5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    29e7:	66 2f                	data16 (bad) 
    29e9:	31 30                	xor    DWORD PTR [rax],esi
    29eb:	2e 32 2e             	xor    ch,BYTE PTR cs:[rsi]
    29ee:	30 2f                	xor    BYTE PTR [rdi],ch
    29f0:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
    29f7:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    29fa:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    29fc:	64 72 69             	fs jb  2a68 <stivale_hdr-0x1fd598>
    29ff:	76 65                	jbe    2a66 <stivale_hdr-0x1fd59a>
    2a01:	72 73                	jb     2a76 <stivale_hdr-0x1fd58a>
    2a03:	2f                   	(bad)  
    2a04:	61                   	(bad)  
    2a05:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2a08:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2a0b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2a0d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2a0e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2a10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a11:	72 79                	jb     2a8c <stivale_hdr-0x1fd574>
    2a13:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2a16:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2a18:	64 72 69             	fs jb  2a84 <stivale_hdr-0x1fd57c>
    2a1b:	76 65                	jbe    2a82 <stivale_hdr-0x1fd57e>
    2a1d:	72 73                	jb     2a92 <stivale_hdr-0x1fd56e>
    2a1f:	2f                   	(bad)  
    2a20:	67 66 78 2f          	addr32 data16 js 2a53 <stivale_hdr-0x1fd5ad>
    2a24:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2a26:	70 00                	jo     2a28 <stivale_hdr-0x1fd5d8>
    2a28:	00 70 72             	add    BYTE PTR [rax+0x72],dh
    2a2b:	69 6e 74 66 2e 63 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70632e66
    2a32:	70 00                	jo     2a34 <stivale_hdr-0x1fd5cc>
    2a34:	01 00                	add    DWORD PTR [rax],eax
    2a36:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2a39:	64 69 6e 74 2d 67 63 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x6363672d
    2a40:	63 
    2a41:	2e 68 00 02 00 00    	cs push 0x200
    2a47:	73 74                	jae    2abd <stivale_hdr-0x1fd543>
    2a49:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x200
    2a50:	02 
    2a51:	00 00                	add    BYTE PTR [rax],al
    2a53:	73 74                	jae    2ac9 <stivale_hdr-0x1fd537>
    2a55:	64 61                	fs (bad) 
    2a57:	72 67                	jb     2ac0 <stivale_hdr-0x1fd540>
    2a59:	2e 68 00 02 00 00    	cs push 0x200
    2a5f:	3c 62                	cmp    al,0x62
    2a61:	75 69                	jne    2acc <stivale_hdr-0x1fd534>
    2a63:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a64:	74 2d                	je     2a93 <stivale_hdr-0x1fd56d>
    2a66:	69 6e 3e 00 00 00 00 	imul   ebp,DWORD PTR [rsi+0x3e],0x0
    2a6d:	61                   	(bad)  
    2a6e:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2a71:	2e 68 00 03 00 00    	cs push 0x300
    2a77:	68 65 61 70 2e       	push   0x2e706165
    2a7c:	68 00 04 00 00       	push   0x400
    2a81:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2a83:	70 2e                	jo     2ab3 <stivale_hdr-0x1fd54d>
    2a85:	68 00 05 00 00       	push   0x500
    2a8a:	74 74                	je     2b00 <stivale_hdr-0x1fd500>
    2a8c:	79 2e                	jns    2abc <stivale_hdr-0x1fd544>
    2a8e:	68 00 01 00 00       	push   0x100
    2a93:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a94:	70 65                	jo     2afb <stivale_hdr-0x1fd505>
    2a96:	72 61                	jb     2af9 <stivale_hdr-0x1fd507>
    2a98:	74 69                	je     2b03 <stivale_hdr-0x1fd4fd>
    2a9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a9b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a9c:	73 2e                	jae    2acc <stivale_hdr-0x1fd534>
    2a9e:	68 00 04 00 00       	push   0x400
    2aa3:	00 05 3c 00 09 02    	add    BYTE PTR [rip+0x209003c],al        # 2092ae5 <__kernel_end+0x1e80ae5>
    2aa9:	b2 50                	mov    dl,0x50
    2aab:	20 00                	and    BYTE PTR [rax],al
    2aad:	00 00                	add    BYTE PTR [rax],al
    2aaf:	00 00                	add    BYTE PTR [rax],al
    2ab1:	03 0b                	add    ecx,DWORD PTR [rbx]
    2ab3:	01 05 0a 02 50 14    	add    DWORD PTR [rip+0x1450020a],eax        # 14502cc3 <__kernel_end+0x142f0cc3>
    2ab9:	05 1f 08 e5 05       	add    eax,0x5e5081f
    2abe:	11 08                	adc    DWORD PTR [rax],ecx
    2ac0:	59                   	pop    rcx
    2ac1:	05 05 08 30 05       	add    eax,0x5300805
    2ac6:	15 91 05 0c 08       	adc    eax,0x80c0591
    2acb:	4b 05 15 91 05 0e    	rex.WXB add rax,0xe059115
    2ad1:	08 2f                	or     BYTE PTR [rdi],ch
    2ad3:	05 0b a1 05 05       	add    eax,0x505a10b
    2ad8:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2ad9:	05 0b 9f 05 0e       	add    eax,0xe059f0b
    2ade:	ba 05 0b 3d 05       	mov    edx,0x53d0b05
    2ae3:	0c 91                	or     al,0x91
    2ae5:	05 0b 91 05 0e       	add    eax,0xe05910b
    2aea:	ba 05 10 59 05       	mov    edx,0x5591005
    2aef:	0c 9e                	or     al,0x9e
    2af1:	05 22 00 02 04       	add    eax,0x4020022
    2af6:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    2af9:	0b 91 05 0e ba 3f    	or     edx,DWORD PTR [rcx+0x3fba0e05]
    2aff:	05 09 ae 05 1d       	add    eax,0x1d05ae09
    2b04:	59                   	pop    rcx
    2b05:	05 11 90 05 0e       	add    eax,0xe059011
    2b0a:	c9                   	leave  
    2b0b:	05 05 71 05 08       	add    eax,0x8057105
    2b10:	33 05 1a 76 05 18    	xor    eax,DWORD PTR [rip+0x1805761a]        # 1805a130 <__kernel_end+0x17e48130>
    2b16:	90                   	nop
    2b17:	05 1e e4 05 0e       	add    eax,0xe05e41e
    2b1c:	58                   	pop    rax
    2b1d:	05 11 ad 05 0b       	add    eax,0xb05ad11
    2b22:	90                   	nop
    2b23:	05 0e 08 2f 05       	add    eax,0x52f080e
    2b28:	05 9b 05 30 33       	add    eax,0x3330059b
    2b2d:	05 1d e4 05 32       	add    eax,0x3205e41d
    2b32:	2e 05 05 ad 05 1e    	cs add eax,0x1e05ad05
    2b38:	00 02                	add    BYTE PTR [rdx],al
    2b3a:	04 01                	add    al,0x1
    2b3c:	66 05 05 76          	add    ax,0x7605
    2b40:	05 17 91 05 0d       	add    eax,0xd059117
    2b45:	08 59 05             	or     BYTE PTR [rcx+0x5],bl
    2b48:	11 91 05 1f 74 05    	adc    DWORD PTR [rcx+0x5741f05],edx
    2b4e:	22 e4                	and    ah,ah
    2b50:	05 24 3c 05 11       	add    eax,0x11053c24
    2b55:	5a                   	pop    rdx
    2b56:	05 1f 74 05 22       	add    eax,0x2205741f
    2b5b:	e4 05                	in     al,0x5
    2b5d:	24 3c                	and    al,0x3c
    2b5f:	05 09 38 05 0e       	add    eax,0xe053809
    2b64:	03 09                	add    ecx,DWORD PTR [rcx]
    2b66:	2e 05 17 02 ce 02    	cs add eax,0x2ce0217
    2b6c:	13 05 0d 08 21 05    	adc    eax,DWORD PTR [rip+0x521080d]        # 521337f <__kernel_end+0x500137f>
    2b72:	1f                   	(bad)  
    2b73:	91                   	xchg   ecx,eax
    2b74:	05 24 e4 05 1f       	add    eax,0x1f05e424
    2b79:	a0 05 24 e4 05 09 7e 	movabs al,ds:0x15057e0905e42405
    2b80:	05 15 
    2b82:	35 08 83 05 0c       	xor    eax,0xc058308
    2b87:	08 85 05 01 75 05    	or     BYTE PTR [rbp+0x5750105],al
    2b8d:	27                   	(bad)  
    2b8e:	68 05 16 08 13       	push   0x13081605
    2b93:	05 08 f3 05 01       	add    eax,0x105f308
    2b98:	e5 05                	in     eax,0x5
    2b9a:	25 3e 05 0e f3       	and    eax,0xf30e053e
    2b9f:	05 17 00 02 04       	add    eax,0x4020017
    2ba4:	03 74 05 18          	add    esi,DWORD PTR [rbp+rax*1+0x18]
    2ba8:	00 02                	add    BYTE PTR [rdx],al
    2baa:	04 03                	add    al,0x3
    2bac:	66 05 1c 00          	add    ax,0x1c
    2bb0:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2bb3:	d7                   	xlat   BYTE PTR ds:[rbx]
    2bb4:	05 1d 00 02 04       	add    eax,0x402001d
    2bb9:	02 66 05             	add    ah,BYTE PTR [rsi+0x5]
    2bbc:	19 00                	sbb    DWORD PTR [rax],eax
    2bbe:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2bc1:	9e                   	sahf   
    2bc2:	05 05 00 02 04       	add    eax,0x4020005
    2bc7:	02 ff                	add    bh,bh
    2bc9:	05 01 69 3f 05       	add    eax,0x53f6901
    2bce:	09 08                	or     DWORD PTR [rax],ecx
    2bd0:	83 05 0a 9f 05 0e 02 	add    DWORD PTR [rip+0xe059f0a],0x2        # e05cae1 <__kernel_end+0xde4aae1>
    2bd7:	e0 02                	loopne 2bdb <stivale_hdr-0x1fd425>
    2bd9:	14 05                	adc    al,0x5
    2bdb:	1c 00                	sbb    al,0x0
    2bdd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2be0:	74 05                	je     2be7 <stivale_hdr-0x1fd419>
    2be2:	1d 00 02 04 01       	sbb    eax,0x1040200
    2be7:	66 05 0e 08          	add    ax,0x80e
    2beb:	4c                   	rex.WR
    2bec:	4b                   	rex.WXB
    2bed:	4c 75 75             	rex.WR jne 2c65 <stivale_hdr-0x1fd39b>
    2bf0:	4b                   	rex.WXB
    2bf1:	4b                   	rex.WXB
    2bf2:	4b                   	rex.WXB
    2bf3:	4b                   	rex.WXB
    2bf4:	4b                   	rex.WXB
    2bf5:	4b 05 14 76 05 15    	rex.WXB add rax,0x15057614
    2bfb:	66 05 09 c8          	add    ax,0xc809
    2bff:	05 0d 83 05 12       	add    eax,0x1205830d
    2c04:	4c 05 20 4d 05 21    	rex.WR add rax,0x21054d20
    2c0a:	66 05 25 02          	add    ax,0x225
    2c0e:	3a 14 05 19 4b 4b 05 	cmp    dl,BYTE PTR [rax*1+0x54b4b19]
    2c15:	22 31                	and    dh,BYTE PTR [rcx]
    2c17:	05 19 4b 4b 05       	add    eax,0x54b4b19
    2c1c:	21 31                	and    DWORD PTR [rcx],esi
    2c1e:	05 19 4b 4b 05       	add    eax,0x54b4b19
    2c23:	25 31 05 19 4b       	and    eax,0x4b190531
    2c28:	4b 05 21 31 05 19    	rex.WXB add rax,0x19053121
    2c2e:	4b                   	rex.WXB
    2c2f:	4b 05 22 31 05 19    	rex.WXB add rax,0x19053122
    2c35:	4b 05 11 23 05 29    	rex.WXB add rax,0x29052311
    2c3b:	69 05 2a 66 05 21 c8 	imul   eax,DWORD PTR [rip+0x2105662a],0x81c05c8        # 2105926f <__kernel_end+0x20e4726f>
    2c42:	05 1c 08 
    2c45:	2f                   	(bad)  
    2c46:	05 26 e5 05 27       	add    eax,0x2705e526
    2c4b:	66 05 29 f2          	add    ax,0xf229
    2c4f:	05 1c 3c 05 11       	add    eax,0x11053c1c
    2c54:	3d 05 0d 47 05       	cmp    eax,0x5470d05
    2c59:	18 34 05 19 66 05 0d 	sbb    BYTE PTR [rax*1+0xd056619],dh
    2c60:	c8 05 1c 4b          	enter  0x1c05,0x4b
    2c64:	05 11 02 5d 13       	add    eax,0x135d0211
    2c69:	05 18 4d 05 19       	add    eax,0x19054d18
    2c6e:	66 05 0d c8          	add    ax,0xc80d
    2c72:	05 11 83 05 2d       	add    eax,0x2d058311
    2c77:	4b 05 2e 66 05 25    	rex.WXB add rax,0x2505662e
    2c7d:	c8 05 1e 08          	enter  0x1e05,0x8
    2c81:	2f                   	(bad)  
    2c82:	05 28 e5 05 29       	add    eax,0x2905e528
    2c87:	66 05 2b f2          	add    ax,0xf22b
    2c8b:	05 1e 3c 05 15       	add    eax,0x15053c1e
    2c90:	3d 05 11 47 05       	cmp    eax,0x5471105
    2c95:	1c 34                	sbb    al,0x34
    2c97:	05 1d 66 05 11       	add    eax,0x1105661d
    2c9c:	c8 05 1e 4b          	enter  0x1e05,0x4b
    2ca0:	05 15 02 5d 13       	add    eax,0x135d0215
    2ca5:	05 1a 69 05 18       	add    eax,0x1805691a
    2caa:	77 05                	ja     2cb1 <stivale_hdr-0x1fd34f>
    2cac:	19 66 05             	sbb    DWORD PTR [rsi+0x5],esp
    2caf:	0d c8 05 2c 00       	or     eax,0x2c05c8
    2cb4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cb7:	4a 05 2d 00 02 04    	rex.WX add rax,0x402002d
    2cbd:	01 66 05             	add    DWORD PTR [rsi+0x5],esp
    2cc0:	22 00                	and    al,BYTE PTR [rax]
    2cc2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cc5:	c8 05 40 00          	enter  0x4005,0x0
    2cc9:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2ccc:	4a 05 41 00 02 04    	rex.WX add rax,0x4020041
    2cd2:	02 66 05             	add    ah,BYTE PTR [rsi+0x5]
    2cd5:	36 00 02             	add    BYTE PTR ss:[rdx],al
    2cd8:	04 02                	add    al,0x2
    2cda:	c8 05 1b 00          	enter  0x1b05,0x0
    2cde:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2ce1:	4b 05 1c 00 02 04    	rex.WXB add rax,0x402001c
    2ce7:	03 66 05             	add    esp,DWORD PTR [rsi+0x5]
    2cea:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    2ced:	04 03                	add    al,0x3
    2cef:	c7 05 2f 4b 05 30 66 	mov    DWORD PTR [rip+0x30054b2f],0xc8250566        # 30057828 <__kernel_end+0x2fe45828>
    2cf6:	05 25 c8 
    2cf9:	05 43 00 02 04       	add    eax,0x4020043
    2cfe:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    2d01:	44 00 02             	add    BYTE PTR [rdx],r8b
    2d04:	04 01                	add    al,0x1
    2d06:	66 05 39 00          	add    ax,0x39
    2d0a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d0d:	c8 05 21 4b          	enter  0x2105,0x4b
    2d11:	05 22 66 05 18       	add    eax,0x18056622
    2d16:	9e                   	sahf   
    2d17:	05 11 67 05 1c       	add    eax,0x1c056711
    2d1c:	4b 05 1d 66 05 11    	rex.WXB add rax,0x1105661d
    2d22:	c8 05 1c 4b          	enter  0x1c05,0x4b
    2d26:	05 23 67 05 24       	add    eax,0x24056723
    2d2b:	66 05 18 c8          	add    ax,0xc818
    2d2f:	05 1c 4b 05 15       	add    eax,0x15054b1c
    2d34:	4b 05 20 4d 05 21    	rex.WXB add rax,0x21054d20
    2d3a:	66 05 17 9e          	add    ax,0x9e17
    2d3e:	05 27 68 05 11       	add    eax,0x11056827
    2d43:	08 84 05 0d 75 05 16 	or     BYTE PTR [rbp+rax*1+0x1605750d],al
    2d4a:	67 05 1b 75 05 11    	addr32 add eax,0x1105751b
    2d50:	4b 05 22 67 05 0d    	rex.WXB add rax,0xd056722
    2d56:	08 5b 05             	or     BYTE PTR [rbx+0x5],bl
    2d59:	16                   	(bad)  
    2d5a:	67 05 18 75 05 1b    	addr32 add eax,0x1b057518
    2d60:	4b 05 15 4c 05 1a    	rex.WXB add rax,0x1a054c15
    2d66:	02 32                	add    dh,BYTE PTR [rdx]
    2d68:	14 05                	adc    al,0x5
    2d6a:	27                   	(bad)  
    2d6b:	76 00                	jbe    2d6d <stivale_hdr-0x1fd293>
    2d6d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d70:	06                   	(bad)  
    2d71:	66 00 02             	data16 add BYTE PTR [rdx],al
    2d74:	04 02                	add    al,0x2
    2d76:	58                   	pop    rax
    2d77:	05 1a 00 02 04       	add    eax,0x402001a
    2d7c:	04 06                	add    al,0x6
    2d7e:	58                   	pop    rax
    2d7f:	05 15 00 02 04       	add    eax,0x4020015
    2d84:	04 3d                	add    al,0x3d
    2d86:	05 26 67 05 1d       	add    eax,0x1d056726
    2d8b:	08 5d 05             	or     BYTE PTR [rbp+0x5],bl
    2d8e:	34 02                	xor    al,0x2
    2d90:	50                   	push   rax
    2d91:	15 05 26 02 60       	adc    eax,0x60022605
    2d96:	13 05 2a 02 38 13    	adc    eax,DWORD PTR [rip+0x1338022a]        # 13382fc6 <__kernel_end+0x13170fc6>
    2d9c:	05 1d 08 83 05       	add    eax,0x583081d
    2da1:	45 5c                	rex.RB pop r12
    2da3:	05 26 02 60 13       	add    eax,0x13600226
    2da8:	05 2a 02 39 13       	add    eax,0x1339022a
    2dad:	05 1d 08 83 05       	add    eax,0x583081d
    2db2:	3a 5c 05 26          	cmp    bl,BYTE PTR [rbp+rax*1+0x26]
    2db6:	02 61 13             	add    ah,BYTE PTR [rcx+0x13]
    2db9:	05 2a 02 39 13       	add    eax,0x1339022a
    2dbe:	05 1d 08 83 05       	add    eax,0x583081d
    2dc3:	35 5c 05 26 02       	xor    eax,0x226055c
    2dc8:	62 13 05 2a 02       	(bad)
    2dcd:	39 13                	cmp    DWORD PTR [rbx],edx
    2dcf:	05 1d 08 83 05       	add    eax,0x583081d
    2dd4:	3a 5c 05 26          	cmp    bl,BYTE PTR [rbp+rax*1+0x26]
    2dd8:	02 62 13             	add    ah,BYTE PTR [rdx+0x13]
    2ddb:	05 2a 02 39 13       	add    eax,0x1339022a
    2de0:	05 1d 08 83 05       	add    eax,0x583081d
    2de5:	31 5c 05 26          	xor    DWORD PTR [rbp+rax*1+0x26],ebx
    2de9:	02 62 13             	add    ah,BYTE PTR [rdx+0x13]
    2dec:	05 2a 02 39 13       	add    eax,0x1339022a
    2df1:	05 1d 08 83 05       	add    eax,0x583081d
    2df6:	2e 5c                	cs pop rsp
    2df8:	05 26 02 5f 13       	add    eax,0x135f0226
    2dfd:	05 2a 02 36 13       	add    eax,0x1336022a
    2e02:	05 1d 08 83 05       	add    eax,0x583081d
    2e07:	31 5c 05 26          	xor    DWORD PTR [rbp+rax*1+0x26],ebx
    2e0b:	02 5f 13             	add    bl,BYTE PTR [rdi+0x13]
    2e0e:	05 2a 02 36 13       	add    eax,0x1336022a
    2e13:	05 1d 08 83 31       	add    eax,0x3183081d
    2e18:	05 15 22 05 1d       	add    eax,0x1d052215
    2e1d:	5e                   	pop    rsi
    2e1e:	05 27 02 50 15       	add    eax,0x15500227
    2e23:	05 22 02 5d 13       	add    eax,0x135d0222
    2e28:	05 26 02 37 13       	add    eax,0x13370226
    2e2d:	05 19 08 83 05       	add    eax,0x5830819
    2e32:	3d 5c 05 22 02       	cmp    eax,0x222055c
    2e37:	5d                   	pop    rbp
    2e38:	13 05 26 02 37 13    	adc    eax,DWORD PTR [rip+0x13370226]        # 13373064 <__kernel_end+0x13161064>
    2e3e:	05 19 08 83 05       	add    eax,0x5830819
    2e43:	2d 5c 05 22 02       	sub    eax,0x222055c
    2e48:	5e                   	pop    rsi
    2e49:	13 05 26 02 37 13    	adc    eax,DWORD PTR [rip+0x13370226]        # 13373075 <__kernel_end+0x13161075>
    2e4f:	05 19 08 83 05       	add    eax,0x5830819
    2e54:	28 5c 05 22          	sub    BYTE PTR [rbp+rax*1+0x22],bl
    2e58:	02 5f 13             	add    bl,BYTE PTR [rdi+0x13]
    2e5b:	05 26 02 36 13       	add    eax,0x13360226
    2e60:	05 19 08 83 05       	add    eax,0x5830819
    2e65:	2d 5c 05 22 02       	sub    eax,0x222055c
    2e6a:	5f                   	pop    rdi
    2e6b:	13 05 26 02 36 13    	adc    eax,DWORD PTR [rip+0x13360226]        # 13363097 <__kernel_end+0x13151097>
    2e71:	05 19 08 83 05       	add    eax,0x5830819
    2e76:	2c 5c                	sub    al,0x5c
    2e78:	05 22 02 5f 13       	add    eax,0x135f0222
    2e7d:	05 26 02 36 13       	add    eax,0x13360226
    2e82:	05 19 08 83 05       	add    eax,0x5830819
    2e87:	2a 5c 05 22          	sub    bl,BYTE PTR [rbp+rax*1+0x22]
    2e8b:	02 5f 13             	add    bl,BYTE PTR [rdi+0x13]
    2e8e:	05 26 02 36 13       	add    eax,0x13360226
    2e93:	05 19 08 83 05       	add    eax,0x5830819
    2e98:	2d 5c 05 22 02       	sub    eax,0x222055c
    2e9d:	5f                   	pop    rdi
    2e9e:	13 05 26 02 36 13    	adc    eax,DWORD PTR [rip+0x13360226]        # 133630ca <__kernel_end+0x131510ca>
    2ea4:	05 19 08 83 31       	add    eax,0x31830819
    2ea9:	05 15 22 5d 05       	add    eax,0x55d2215
    2eae:	2a 67 05             	sub    ah,BYTE PTR [rdi+0x5]
    2eb1:	29 02                	sub    DWORD PTR [rdx],eax
    2eb3:	5b                   	pop    rbx
    2eb4:	12 05 15 08 41 05    	adc    al,BYTE PTR [rip+0x5410815]        # 54136cf <__kernel_end+0x52016cf>
    2eba:	2a 55 05             	sub    dl,BYTE PTR [rbp+0x5]
    2ebd:	29 02                	sub    DWORD PTR [rdx],eax
    2ebf:	5a                   	pop    rdx
    2ec0:	12 05 15 08 3f 05    	adc    al,BYTE PTR [rip+0x53f0815]        # 53f36db <__kernel_end+0x51e16db>
    2ec6:	22 5d 05             	and    bl,BYTE PTR [rbp+0x5]
    2ec9:	15 02 6d 13 05       	adc    eax,0x5136d02
    2ece:	1d 5d 05 3b 02       	sbb    eax,0x23b055d
    2ed3:	54                   	push   rsp
    2ed4:	14 05                	adc    al,0x5
    2ed6:	1f                   	(bad)  
    2ed7:	82                   	(bad)  
    2ed8:	05 3b 02 5b 12       	add    eax,0x125b023b
    2edd:	05 1d 3d 05 39       	add    eax,0x39053d1d
    2ee2:	5a                   	pop    rdx
    2ee3:	05 1f 82 05 39       	add    eax,0x3905821f
    2ee8:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2eeb:	05 1d 3d 05 26       	add    eax,0x26053d1d
    2ef0:	5b                   	pop    rbx
    2ef1:	05 20 02 5f 13       	add    eax,0x135f0220
    2ef6:	05 1d bb 05 36       	add    eax,0x3605bb1d
    2efb:	5c                   	pop    rsp
    2efc:	05 1f 90 05 34       	add    eax,0x3405901f
    2f01:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2f04:	05 1d 3d 05 3b       	add    eax,0x3b053d1d
    2f09:	5a                   	pop    rdx
    2f0a:	05 1f 90 05 39       	add    eax,0x3905901f
    2f0f:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2f12:	05 1d 3d 05 3a       	add    eax,0x3a053d1d
    2f17:	5a                   	pop    rdx
    2f18:	05 1f 90 05 38       	add    eax,0x3805901f
    2f1d:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2f20:	05 1d 3d 05 38       	add    eax,0x38053d1d
    2f25:	5a                   	pop    rdx
    2f26:	05 1f 90 05 36       	add    eax,0x3605901f
    2f2b:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2f2e:	05 1d 3d 05 3b       	add    eax,0x3b053d1d
    2f33:	30 05 1f 90 05 39    	xor    BYTE PTR [rip+0x3905901f],al        # 3905bf58 <__kernel_end+0x38e49f58>
    2f39:	02 5b 12             	add    bl,BYTE PTR [rbx+0x12]
    2f3c:	05 1d 3d 30 05       	add    eax,0x5303d1d
    2f41:	15 22 05 1b 5d       	adc    eax,0x5d1b0522
    2f46:	05 27 51 05 22       	add    eax,0x22055127
    2f4b:	02 67 14             	add    ah,BYTE PTR [rdi+0x14]
    2f4e:	05 2e 00 02 04       	add    eax,0x402002e
    2f53:	01 ac 05 22 00 02 04 	add    DWORD PTR [rbp+rax*1+0x4020022],ebp
    2f5a:	01 08                	add    DWORD PTR [rax],ecx
    2f5c:	2e 4b 05 19 08 59 05 	cs rex.WXB add rax,0x5590819
    2f63:	15 48 05 2b 33       	adc    eax,0x332b0548
    2f68:	05 36 66 05 54       	add    eax,0x54056636
    2f6d:	3c 05                	cmp    al,0x5
    2f6f:	49 00 02             	rex.WB add BYTE PTR [r10],al
    2f72:	04 02                	add    al,0x2
    2f74:	66 05 54 00          	add    ax,0x54
    2f78:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2f7b:	66 00 02             	data16 add BYTE PTR [rdx],al
    2f7e:	04 04                	add    al,0x4
    2f80:	06                   	(bad)  
    2f81:	74 05                	je     2f88 <stivale_hdr-0x1fd078>
    2f83:	19 00                	sbb    DWORD PTR [rax],eax
    2f85:	02 04 06             	add    al,BYTE PTR [rsi+rax*1]
    2f88:	06                   	(bad)  
    2f89:	58                   	pop    rax
    2f8a:	05 15 00 02 04       	add    eax,0x4020015
    2f8f:	06                   	(bad)  
    2f90:	59                   	pop    rcx
    2f91:	05 1e 67 05 15       	add    eax,0x1505671e
    2f96:	4c 05 1e 67 77 05    	rex.WR add rax,0x577671e
    2f9c:	22 02                	and    al,BYTE PTR [rdx]
    2f9e:	3c 15                	cmp    al,0x15
    2fa0:	05 21 08 84 05       	add    eax,0x5840821
    2fa5:	1e                   	(bad)  
    2fa6:	90                   	nop
    2fa7:	08 5a 05             	or     BYTE PTR [rdx+0x5],bl
    2faa:	27                   	(bad)  
    2fab:	00 02                	add    BYTE PTR [rdx],al
    2fad:	04 03                	add    al,0x3
    2faf:	74 05                	je     2fb6 <stivale_hdr-0x1fd04a>
    2fb1:	22 00                	and    al,BYTE PTR [rax]
    2fb3:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2fb6:	83 05 15 00 02 04 02 	add    DWORD PTR [rip+0x4020015],0x2        # 4022fd2 <__kernel_end+0x3e10fd2>
    2fbd:	08 57 05             	or     BYTE PTR [rdi+0x5],dl
    2fc0:	3f                   	(bad)  
    2fc1:	69 05 1e 08 12 05 15 	imul   eax,DWORD PTR [rip+0x512081e],0x2905bc15        # 51237e9 <__kernel_end+0x4f117e9>
    2fc8:	bc 05 29 
    2fcb:	67 05 22 08 3d 05    	addr32 add eax,0x53d0822
    2fd1:	30 02                	xor    BYTE PTR [rdx],al
    2fd3:	34 13                	xor    al,0x13
    2fd5:	05 26 c9 05 15       	add    eax,0x1505c926
    2fda:	08 87 05 1c 2a 05    	or     BYTE PTR [rdi+0x52a1c05],al
    2fe0:	29 67 05             	sub    DWORD PTR [rdi+0x5],esp
    2fe3:	15 08 3f 03 0a       	adc    eax,0xa033f08
    2fe8:	2e 03 76 3c          	add    esi,DWORD PTR cs:[rsi+0x3c]
    2fec:	05 0d 03 0d 20       	add    eax,0x200d030d
    2ff1:	05 1e 67 05 14       	add    eax,0x1405671e
    2ff6:	08 75 05             	or     BYTE PTR [rbp+0x5],dh
    2ff9:	1e                   	(bad)  
    2ffa:	67 05 0d 08 5b 05    	addr32 add eax,0x55b080d
    3000:	22 00                	and    al,BYTE PTR [rax]
    3002:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3005:	66 05 1a 67          	add    ax,0x671a
    3009:	05 1e 02 32 13       	add    eax,0x1332021e
    300e:	05 25 08 a2 05       	add    eax,0x5a20825
    3013:	26 66 05 1d c8       	es add ax,0xc81d
    3018:	05 05 00 02 04       	add    eax,0x4020005
    301d:	02 03                	add    al,BYTE PTR [rbx]
    301f:	8a 7d 08             	mov    bh,BYTE PTR [rbp+0x8]
    3022:	3c 05                	cmp    al,0x5
    3024:	0c 03                	or     al,0x3
    3026:	fa                   	cli    
    3027:	02 90 05 01 67 31    	add    dl,BYTE PTR [rax+0x31670105]
    302d:	05 05 02 59 14       	add    eax,0x14590205
    3032:	05 15 02 2d 13       	add    eax,0x132d0215
    3037:	05 0c 08 d8 05       	add    eax,0x5d8080c
    303c:	01 68 02             	add    DWORD PTR [rax+0x2],ebp
    303f:	02 00                	add    al,BYTE PTR [rax]
    3041:	01 01                	add    DWORD PTR [rcx],eax
    3043:	0d 02 00 00 03       	or     eax,0x3000002
    3048:	00 78 00             	add    BYTE PTR [rax+0x0],bh
    304b:	00 00                	add    BYTE PTR [rax],al
    304d:	01 01                	add    DWORD PTR [rcx],eax
    304f:	fb                   	sti    
    3050:	0e                   	(bad)  
    3051:	0d 00 01 01 01       	or     eax,0x1010100
    3056:	01 00                	add    DWORD PTR [rax],eax
    3058:	00 00                	add    BYTE PTR [rax],al
    305a:	01 00                	add    DWORD PTR [rax],eax
    305c:	00 01                	add    BYTE PTR [rcx],al
    305e:	73 72                	jae    30d2 <stivale_hdr-0x1fcf2e>
    3060:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3062:	64 72 69             	fs jb  30ce <stivale_hdr-0x1fcf32>
    3065:	76 65                	jbe    30cc <stivale_hdr-0x1fcf34>
    3067:	72 73                	jb     30dc <stivale_hdr-0x1fcf24>
    3069:	2f                   	(bad)  
    306a:	67 66 78 2f          	addr32 data16 js 309d <stivale_hdr-0x1fcf63>
    306e:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    3070:	70 00                	jo     3072 <stivale_hdr-0x1fcf8e>
    3072:	73 72                	jae    30e6 <stivale_hdr-0x1fcf1a>
    3074:	63 00                	movsxd eax,DWORD PTR [rax]
    3076:	73 72                	jae    30ea <stivale_hdr-0x1fcf16>
    3078:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    307a:	62                   	(bad)  
    307b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    307c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    307d:	74 00                	je     307f <stivale_hdr-0x1fcf81>
    307f:	73 72                	jae    30f3 <stivale_hdr-0x1fcf0d>
    3081:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3083:	64 72 69             	fs jb  30ef <stivale_hdr-0x1fcf11>
    3086:	76 65                	jbe    30ed <stivale_hdr-0x1fcf13>
    3088:	72 73                	jb     30fd <stivale_hdr-0x1fcf03>
    308a:	2f                   	(bad)  
    308b:	61                   	(bad)  
    308c:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    308f:	00 00                	add    BYTE PTR [rax],al
    3091:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    3093:	70 2e                	jo     30c3 <stivale_hdr-0x1fcf3d>
    3095:	68 00 01 00 00       	push   0x100
    309a:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    309c:	70 2e                	jo     30cc <stivale_hdr-0x1fcf34>
    309e:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    30a1:	00 01                	add    BYTE PTR [rcx],al
    30a3:	00 00                	add    BYTE PTR [rax],al
    30a5:	74 79                	je     3120 <stivale_hdr-0x1fcee0>
    30a7:	70 65                	jo     310e <stivale_hdr-0x1fcef2>
    30a9:	73 2e                	jae    30d9 <stivale_hdr-0x1fcf27>
    30ab:	68 00 02 00 00       	push   0x200
    30b0:	62                   	(bad)  
    30b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30b3:	74 2e                	je     30e3 <stivale_hdr-0x1fcf1d>
    30b5:	68 00 03 00 00       	push   0x300
    30ba:	61                   	(bad)  
    30bb:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    30be:	2e 68 00 04 00 00    	cs push 0x400
    30c4:	00 05 03 00 09 02    	add    BYTE PTR [rip+0x2090003],al        # 20930cd <__kernel_end+0x1e810cd>
    30ca:	28 70 20             	sub    BYTE PTR [rax+0x20],dh
    30cd:	00 00                	add    BYTE PTR [rax],al
    30cf:	00 00                	add    BYTE PTR [rax],al
    30d1:	00 03                	add    BYTE PTR [rbx],al
    30d3:	21 01                	and    DWORD PTR [rcx],eax
    30d5:	05 28 e5 05 41       	add    eax,0x4105e528
    30da:	9e                   	sahf   
    30db:	05 3a 3c 05 4a       	add    eax,0x4a053c3a
    30e0:	3c 05                	cmp    al,0x5
    30e2:	43 3c 05             	rex.XB cmp al,0x5
    30e5:	4b                   	rex.WXB
    30e6:	4a 05 12 82 05 4b    	rex.WX add rax,0x4b058212
    30ec:	74 05                	je     30f3 <stivale_hdr-0x1fcf0d>
    30ee:	4d                   	rex.WRB
    30ef:	66 05 03 59          	add    ax,0x5903
    30f3:	04 02                	add    al,0x2
    30f5:	05 44 03 64 3c       	add    eax,0x3c640344
    30fa:	05 09 d9 67 67       	add    eax,0x6767d909
    30ff:	05 01 4b 05 3f       	add    eax,0x3f054b01
    3104:	30 05 0b d9 67 05    	xor    BYTE PTR [rip+0x567d90b],al        # 5680a15 <__kernel_end+0x546ea15>
    310a:	09 67 05             	or     DWORD PTR [rdi+0x5],esp
    310d:	01 4b 05             	add    DWORD PTR [rbx+0x5],ecx
    3110:	6a 30                	push   0x30
    3112:	05 72 08 3e 05       	add    eax,0x53e0872
    3117:	09 02                	or     DWORD PTR [rdx],eax
    3119:	30 14 05 21 3c 05 09 	xor    BYTE PTR [rax*1+0x9053c21],dl
    3120:	3c 59                	cmp    al,0x59
    3122:	05 21 3c 05 09       	add    eax,0x9053c21
    3127:	3c 05                	cmp    al,0x5
    3129:	61                   	(bad)  
    312a:	5a                   	pop    rdx
    312b:	05 7a 3c 05 7b       	add    eax,0x7b053c7a
    3130:	3c 05                	cmp    al,0x5
    3132:	40                   	rex
    3133:	2e 05 59 3c 05 7b    	cs add eax,0x7b053c59
    3139:	3c 05                	cmp    al,0x5
    313b:	27                   	(bad)  
    313c:	e6 05                	out    0x5,al
    313e:	33 3c 05 35 3c 05 29 	xor    edi,DWORD PTR [rax*1+0x29053c35]
    3145:	2e 05 0c 2e 05 59    	cs add eax,0x59052e0c
    314b:	00 02                	add    BYTE PTR [rdx],al
    314d:	04 01                	add    al,0x1
    314f:	66 05 65 00          	add    ax,0x65
    3153:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3156:	3c 05                	cmp    al,0x5
    3158:	67 00 02             	add    BYTE PTR [edx],al
    315b:	04 01                	add    al,0x1
    315d:	3c 05                	cmp    al,0x5
    315f:	5b                   	pop    rbx
    3160:	00 02                	add    BYTE PTR [rdx],al
    3162:	04 01                	add    al,0x1
    3164:	2e 05 6e 00 02 04    	cs add eax,0x402006e
    316a:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    316d:	7b 00                	jnp    316f <stivale_hdr-0x1fce91>
    316f:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3172:	66 05 6e 00          	add    ax,0x6e
    3176:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3179:	9e                   	sahf   
    317a:	05 28 67 05 34       	add    eax,0x34056728
    317f:	3c 05                	cmp    al,0x5
    3181:	36 3c 05             	ss cmp al,0x5
    3184:	2a 2e                	sub    ch,BYTE PTR [rsi]
    3186:	05 0d 2e 05 59       	add    eax,0x59052e0d
    318b:	00 02                	add    BYTE PTR [rdx],al
    318d:	04 04                	add    al,0x4
    318f:	66 05 65 00          	add    ax,0x65
    3193:	02 04 04             	add    al,BYTE PTR [rsp+rax*1]
    3196:	3c 05                	cmp    al,0x5
    3198:	67 00 02             	add    BYTE PTR [edx],al
    319b:	04 04                	add    al,0x4
    319d:	3c 05                	cmp    al,0x5
    319f:	5b                   	pop    rbx
    31a0:	00 02                	add    BYTE PTR [rdx],al
    31a2:	04 04                	add    al,0x4
    31a4:	2e 05 6d 00 02 04    	cs add eax,0x402006d
    31aa:	04 4a                	add    al,0x4a
    31ac:	05 7a 00 02 04       	add    eax,0x402007a
    31b1:	02 66 05             	add    ah,BYTE PTR [rsi+0x5]
    31b4:	6d                   	ins    DWORD PTR es:[rdi],dx
    31b5:	00 02                	add    BYTE PTR [rdx],al
    31b7:	04 02                	add    al,0x2
    31b9:	9e                   	sahf   
    31ba:	05 1b 00 02 04       	add    eax,0x402001b
    31bf:	03 67 05             	add    esp,DWORD PTR [rdi+0x5]
    31c2:	03 00                	add    eax,DWORD PTR [rax]
    31c4:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    31c7:	02 23                	add    ah,BYTE PTR [rbx]
    31c9:	11 05 02 00 02 04    	adc    DWORD PTR [rip+0x4020002],eax        # 40231d1 <__kernel_end+0x3e111d1>
    31cf:	03 73 05             	add    esi,DWORD PTR [rbx+0x5]
    31d2:	13 a2 05 01 59 77    	adc    esp,DWORD PTR [rdx+0x77590105]
    31d8:	05 46 4b 05 5e       	add    eax,0x5e054b46
    31dd:	9e                   	sahf   
    31de:	05 58 9e 05 71       	add    eax,0x71059e58
    31e3:	3c 05                	cmp    al,0x5
    31e5:	1c 3c                	sbb    al,0x3c
    31e7:	05 28 9e 05 1c       	add    eax,0x1c059e28
    31ec:	74 05                	je     31f3 <stivale_hdr-0x1fce0d>
    31ee:	01 ad 3f 05 47 4b    	add    DWORD PTR [rbp+0x4b47053f],ebp
    31f4:	05 5f 9e 05 59       	add    eax,0x59059e5f
    31f9:	9e                   	sahf   
    31fa:	05 72 3c 05 1c       	add    eax,0x1c053c72
    31ff:	3c 05                	cmp    al,0x5
    3201:	31 3c 05 1c 74 05 01 	xor    DWORD PTR [rax*1+0x105741c],edi
    3208:	08 4b 3f             	or     BYTE PTR [rbx+0x3f],cl
    320b:	05 47 4b 05 5f       	add    eax,0x5f054b47
    3210:	9e                   	sahf   
    3211:	05 59 9e 05 72       	add    eax,0x72059e59
    3216:	3c 05                	cmp    al,0x5
    3218:	1c 3c                	sbb    al,0x3c
    321a:	05 29 9e 05 1c       	add    eax,0x1c059e29
    321f:	74 05                	je     3226 <stivale_hdr-0x1fcdda>
    3221:	01 ad 3f 05 3a f3    	add    DWORD PTR [rbp-0xcc5fac1],ebp
    3227:	05 44 3c 05 3c       	add    eax,0x3c053c44
    322c:	3c 05                	cmp    al,0x5
    322e:	4a                   	rex.WX
    322f:	2e 05 21 4a 05 2b    	cs add eax,0x2b054a21
    3235:	3c 05                	cmp    al,0x5
    3237:	23 3c 05 4a 2e 05 01 	and    edi,DWORD PTR [rax*1+0x1052e4a]
    323e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    323f:	05 2e 03 86 02       	add    eax,0x286032e
    3244:	2e 05 43 c8 05 49    	cs add eax,0x4905c843
    324a:	4a 05 4c 08 4a 02    	rex.WX add rax,0x24a084c
    3250:	02 00                	add    al,BYTE PTR [rax]
    3252:	01 01                	add    DWORD PTR [rcx],eax
    3254:	36 05 00 00 03 00    	ss add eax,0x30000
    325a:	d2 00                	rol    BYTE PTR [rax],cl
    325c:	00 00                	add    BYTE PTR [rax],al
    325e:	01 01                	add    DWORD PTR [rcx],eax
    3260:	fb                   	sti    
    3261:	0e                   	(bad)  
    3262:	0d 00 01 01 01       	or     eax,0x1010100
    3267:	01 00                	add    DWORD PTR [rax],eax
    3269:	00 00                	add    BYTE PTR [rax],al
    326b:	01 00                	add    DWORD PTR [rax],eax
    326d:	00 01                	add    BYTE PTR [rcx],al
    326f:	73 72                	jae    32e3 <stivale_hdr-0x1fcd1d>
    3271:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3273:	64 72 69             	fs jb  32df <stivale_hdr-0x1fcd21>
    3276:	76 65                	jbe    32dd <stivale_hdr-0x1fcd23>
    3278:	72 73                	jb     32ed <stivale_hdr-0x1fcd13>
    327a:	2f                   	(bad)  
    327b:	64 69 73 6b 2f 61 68 	imul   esi,DWORD PTR fs:[rbx+0x6b],0x6368612f
    3282:	63 
    3283:	69 00 73 72 63 00    	imul   eax,DWORD PTR [rax],0x637273
    3289:	73 72                	jae    32fd <stivale_hdr-0x1fcd03>
    328b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    328d:	64 72 69             	fs jb  32f9 <stivale_hdr-0x1fcd07>
    3290:	76 65                	jbe    32f7 <stivale_hdr-0x1fcd09>
    3292:	72 73                	jb     3307 <stivale_hdr-0x1fccf9>
    3294:	2f                   	(bad)  
    3295:	61                   	(bad)  
    3296:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    3299:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    329c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    329e:	64 72 69             	fs jb  330a <stivale_hdr-0x1fccf6>
    32a1:	76 65                	jbe    3308 <stivale_hdr-0x1fccf8>
    32a3:	72 73                	jb     3318 <stivale_hdr-0x1fcce8>
    32a5:	2f                   	(bad)  
    32a6:	67 66 78 2f          	addr32 data16 js 32d9 <stivale_hdr-0x1fcd27>
    32aa:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    32ac:	70 00                	jo     32ae <stivale_hdr-0x1fcd52>
    32ae:	73 72                	jae    3322 <stivale_hdr-0x1fccde>
    32b0:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    32b2:	6d                   	ins    DWORD PTR es:[rdi],dx
    32b3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    32b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32b6:	72 79                	jb     3331 <stivale_hdr-0x1fcccf>
    32b8:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    32bb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    32bd:	64 72 69             	fs jb  3329 <stivale_hdr-0x1fccd7>
    32c0:	76 65                	jbe    3327 <stivale_hdr-0x1fccd9>
    32c2:	72 73                	jb     3337 <stivale_hdr-0x1fccc9>
    32c4:	2f                   	(bad)  
    32c5:	74 74                	je     333b <stivale_hdr-0x1fccc5>
    32c7:	79 00                	jns    32c9 <stivale_hdr-0x1fcd37>
    32c9:	00 61 68             	add    BYTE PTR [rcx+0x68],ah
    32cc:	63 69 2e             	movsxd ebp,DWORD PTR [rcx+0x2e]
    32cf:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    32d2:	00 01                	add    BYTE PTR [rcx],al
    32d4:	00 00                	add    BYTE PTR [rax],al
    32d6:	74 79                	je     3351 <stivale_hdr-0x1fccaf>
    32d8:	70 65                	jo     333f <stivale_hdr-0x1fccc1>
    32da:	73 2e                	jae    330a <stivale_hdr-0x1fccf6>
    32dc:	68 00 02 00 00       	push   0x200
    32e1:	61                   	(bad)  
    32e2:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    32e5:	2e 68 00 03 00 00    	cs push 0x300
    32eb:	70 63                	jo     3350 <stivale_hdr-0x1fccb0>
    32ed:	69 2e 68 00 03 00    	imul   ebp,DWORD PTR [rsi],0x30068
    32f3:	00 61 68             	add    BYTE PTR [rcx+0x68],ah
    32f6:	63 69 2e             	movsxd ebp,DWORD PTR [rcx+0x2e]
    32f9:	68 00 01 00 00       	push   0x100
    32fe:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    3300:	70 2e                	jo     3330 <stivale_hdr-0x1fccd0>
    3302:	68 00 04 00 00       	push   0x400
    3307:	70 61                	jo     336a <stivale_hdr-0x1fcc96>
    3309:	67 69 6e 67 2e 68 00 	imul   ebp,DWORD PTR [esi+0x67],0x500682e
    3310:	05 
    3311:	00 00                	add    BYTE PTR [rax],al
    3313:	74 74                	je     3389 <stivale_hdr-0x1fcc77>
    3315:	79 2e                	jns    3345 <stivale_hdr-0x1fccbb>
    3317:	68 00 06 00 00       	push   0x600
    331c:	70 6d                	jo     338b <stivale_hdr-0x1fcc75>
    331e:	6d                   	ins    DWORD PTR es:[rdi],dx
    331f:	2e 68 00 05 00 00    	cs push 0x500
    3325:	68 65 61 70 2e       	push   0x2e706165
    332a:	68 00 05 00 00       	push   0x500
    332f:	00 05 01 00 09 02    	add    BYTE PTR [rip+0x2090001],al        # 2093336 <__kernel_end+0x1e81336>
    3335:	d9 72 20             	fnstenv [rdx+0x20]
    3338:	00 00                	add    BYTE PTR [rax],al
    333a:	00 00                	add    BYTE PTR [rax],al
    333c:	00 03                	add    BYTE PTR [rbx],al
    333e:	0d 01 05 18 bb       	or     eax,0xbb180501
    3343:	05 2c 74 05 09       	add    eax,0x905742c
    3348:	74 05                	je     334f <stivale_hdr-0x1fccb1>
    334a:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    334d:	14 00                	adc    al,0x0
    334f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3352:	74 05                	je     3359 <stivale_hdr-0x1fcca7>
    3354:	0e                   	(bad)  
    3355:	68 05 03 66 05       	push   0x5660305
    335a:	0b 4b 05             	or     ecx,DWORD PTR [rbx+0x5]
    335d:	09 00                	or     DWORD PTR [rax],eax
    335f:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3362:	59                   	pop    rcx
    3363:	05 02 00 02 04       	add    eax,0x4020002
    3368:	02 38                	add    bh,BYTE PTR [rax]
    336a:	05 0a 6c 05 01       	add    eax,0x1056c0a
    336f:	59                   	pop    rcx
    3370:	05 49 30 05 15       	add    eax,0x15053049
    3375:	bb 05 5f ad 05       	mov    ebx,0x5ad5f05
    337a:	0a 90 05 1f 75 05    	or     dl,BYTE PTR [rax+0x5751f05]
    3380:	10 08                	adc    BYTE PTR [rax],cl
    3382:	c9                   	leave  
    3383:	05 0e 5a 05 19       	add    eax,0x19055a0e
    3388:	00 02                	add    BYTE PTR [rdx],al
    338a:	04 03                	add    al,0x3
    338c:	74 05                	je     3393 <stivale_hdr-0x1fcc6d>
    338e:	17                   	(bad)  
    338f:	00 02                	add    BYTE PTR [rdx],al
    3391:	04 03                	add    al,0x3
    3393:	9e                   	sahf   
    3394:	00 02                	add    BYTE PTR [rdx],al
    3396:	04 02                	add    al,0x2
    3398:	59                   	pop    rcx
    3399:	05 05 00 02 04       	add    eax,0x4020005
    339e:	02 c7                	add    al,bh
    33a0:	05 01 68 05 49       	add    eax,0x49056801
    33a5:	3e 05 0c bb 05 36    	ds add eax,0x3605bb0c
    33ab:	9f                   	lahf   
    33ac:	05 0c 66 05 2b       	add    eax,0x2b05660c
    33b1:	67 05 0c 3c 05 05    	addr32 add eax,0x5053c0c
    33b7:	68 05 10 67 05       	push   0x5671005
    33bc:	05 75 05 10 67       	add    eax,0x67100575
    33c1:	05 13 76 05 05       	add    eax,0x5057613
    33c6:	74 05                	je     33cd <stivale_hdr-0x1fcc33>
    33c8:	1f                   	(bad)  
    33c9:	02 2c 15 76 76 76 76 	add    ch,BYTE PTR [rdx*1+0x76767676]
    33d0:	05 01 5a 05 24       	add    eax,0x24055a01
    33d5:	30 05 26 91 05 0c    	xor    BYTE PTR [rip+0xc059126],al        # c05c501 <__kernel_end+0xbe4a501>
    33db:	74 05                	je     33e2 <stivale_hdr-0x1fcc1e>
    33dd:	0e                   	(bad)  
    33de:	67 05 17 00 02 04    	addr32 add eax,0x4020017
    33e4:	01 74 05 24          	add    DWORD PTR [rbp+rax*1+0x24],esi
    33e8:	9f                   	lahf   
    33e9:	05 1f d6 05 09       	add    eax,0x905d61f
    33ee:	3c 05                	cmp    al,0x5
    33f0:	47 83 05 38 74 05 0d 	rex.RXB add DWORD PTR [rip+0xd057438],0x8        # d05a830 <__kernel_end+0xce48830>
    33f7:	08 
    33f8:	a0 05 17 a0 05 48 9e 	movabs al,ds:0x25059e4805a01705
    33ff:	05 25 
    3401:	9e                   	sahf   
    3402:	05 3b 08 59 05       	add    eax,0x559083b
    3407:	17                   	(bad)  
    3408:	74 05                	je     340f <stivale_hdr-0x1fcbf1>
    340a:	23 9e 05 2d 08 4a    	and    ebx,DWORD PTR [rsi+0x4a082d05]
    3410:	05 2b 08 12 05       	add    eax,0x512082b
    3415:	17                   	(bad)  
    3416:	3d 05 23 9e 05       	cmp    eax,0x59e2305
    341b:	37                   	(bad)  
    341c:	08 4a 05             	or     BYTE PTR [rdx+0x5],cl
    341f:	1d 9f 05 05 00       	sbb    eax,0x5059f
    3424:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3427:	03 77 f2             	add    esi,DWORD PTR [rdi-0xe]
    342a:	05 01 03 0d 90       	add    eax,0x900d0301
    342f:	77 05                	ja     3436 <stivale_hdr-0x1fcbca>
    3431:	10 bb 05 11 08 a0    	adc    BYTE PTR [rbx-0x5ff7eefb],bh
    3437:	05 34 bc 05 23       	add    eax,0x2305bc34
    343c:	91                   	xchg   ecx,eax
    343d:	05 0b 4a 05 23       	add    eax,0x23054a0b
    3442:	74 05                	je     3449 <stivale_hdr-0x1fcbb7>
    3444:	4a 2f                	rex.WX (bad) 
    3446:	05 0b ac 05 29       	add    eax,0x2905ac0b
    344b:	74 05                	je     3452 <stivale_hdr-0x1fcbae>
    344d:	1f                   	(bad)  
    344e:	3d 05 33 08 5a       	cmp    eax,0x5a083305
    3453:	05 1a 91 05 0b       	add    eax,0xb05911a
    3458:	4a 05 1a 74 05 40    	rex.WX add rax,0x4005741a
    345e:	3d 05 0b ac 05       	cmp    eax,0x5ac0b05
    3463:	20 74 05 1f          	and    BYTE PTR [rbp+rax*1+0x1f],dh
    3467:	3d 05 48 08 5a       	cmp    eax,0x5a084805
    346c:	05 4e 74 05 61       	add    eax,0x6105744e
    3471:	2e 05 19 2e 05 0e    	cs add eax,0xe052e19
    3477:	4c 05 17 00 02 04    	rex.WR add rax,0x4020017
    347d:	03 74 05 18          	add    esi,DWORD PTR [rbp+rax*1+0x18]
    3481:	00 02                	add    BYTE PTR [rdx],al
    3483:	04 02                	add    al,0x2
    3485:	9f                   	lahf   
    3486:	05 19 00 02 04       	add    eax,0x4020019
    348b:	02 58 05             	add    bl,BYTE PTR [rax+0x5]
    348e:	27                   	(bad)  
    348f:	00 02                	add    BYTE PTR [rdx],al
    3491:	04 02                	add    al,0x2
    3493:	d6                   	(bad)  
    3494:	05 40 00 02 04       	add    eax,0x4020040
    3499:	02 67 05             	add    ah,BYTE PTR [rdi+0x5]
    349c:	3d 00 02 04 02       	cmp    eax,0x2040200
    34a1:	91                   	xchg   ecx,eax
    34a2:	05 38 00 02 04       	add    eax,0x4020038
    34a7:	02 90 05 10 00 02    	add    dl,BYTE PTR [rax+0x2001005]
    34ad:	04 02                	add    al,0x2
    34af:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    34b5:	02 75 05             	add    dh,BYTE PTR [rbp+0x5]
    34b8:	19 00                	sbb    DWORD PTR [rax],eax
    34ba:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    34bd:	58                   	pop    rax
    34be:	05 2e 00 02 04       	add    eax,0x402002e
    34c3:	02 d6                	add    dl,dh
    34c5:	05 34 00 02 04       	add    eax,0x4020034
    34ca:	02 75 05             	add    dh,BYTE PTR [rbp+0x5]
    34cd:	23 00                	and    eax,DWORD PTR [rax]
    34cf:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    34d2:	02 2d 13 05 05 00    	add    ch,BYTE PTR [rip+0x50513]        # 539eb <stivale_hdr-0x1ac615>
    34d8:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    34db:	03 7a 08             	add    edi,DWORD PTR [rdx+0x8]
    34de:	58                   	pop    rax
    34df:	05 12 03 09 90       	add    eax,0x90090312
    34e4:	05 01 bb 3f 05       	add    eax,0x53fbb01
    34e9:	10 bb 05 12 08 a0    	adc    BYTE PTR [rbx-0x5ff7edfb],bh
    34ef:	05 18 74 05 27       	add    eax,0x27057418
    34f4:	3c 05                	cmp    al,0x5
    34f6:	05 90 05 0b 30       	add    eax,0x300b0590
    34fb:	05 20 74 05 0b       	add    eax,0xb057420
    3500:	3c 05                	cmp    al,0x5
    3502:	20 74 05 0b          	and    BYTE PTR [rbp+rax*1+0xb],dh
    3506:	67 05 20 74 05 0b    	addr32 add eax,0xb057420
    350c:	3c 05                	cmp    al,0x5
    350e:	20 74 05 01          	and    BYTE PTR [rbp+rax*1+0x1],dh
    3512:	67 3f                	addr32 (bad) 
    3514:	05 10 bb 05 0b       	add    eax,0xb05bb10
    3519:	08 a0 05 20 74 05    	or     BYTE PTR [rax+0x5742005],ah
    351f:	0b 3c 05 20 74 05 0b 	or     edi,DWORD PTR [rax*1+0xb057420]
    3526:	67 05 20 74 05 0b    	addr32 add eax,0xb057420
    352c:	3c 05                	cmp    al,0x5
    352e:	20 74 05 13          	and    BYTE PTR [rbp+rax*1+0x13],dh
    3532:	69 05 19 74 05 28 3c 	imul   eax,DWORD PTR [rip+0x28057419],0x5809053c        # 2805a955 <__kernel_end+0x27e48955>
    3539:	05 09 58 
    353c:	05 13 4b 05 19       	add    eax,0x19054b13
    3541:	74 05                	je     3548 <stivale_hdr-0x1fcab8>
    3543:	28 3c 05 09 58 05 4a 	sub    BYTE PTR [rax*1+0x4a055809],bh
    354a:	4a 2d 05 09 20 30    	rex.WX sub rax,0x30200905
    3550:	05 01 22 3f 05       	add    eax,0x53f2201
    3555:	10 08                	adc    BYTE PTR [rax],cl
    3557:	91                   	xchg   ecx,eax
    3558:	05 2f 08 a0 05       	add    eax,0x5a0082f
    355d:	05 08 22 05 22       	add    eax,0x22052208
    3562:	67 05 0c a0 05 2a    	addr32 add eax,0x2a05a00c
    3568:	75 05                	jne    356f <stivale_hdr-0x1fca91>
    356a:	0c 82                	or     al,0x82
    356c:	05 0b 3e 05 22       	add    eax,0x22053e0b
    3571:	74 05                	je     3578 <stivale_hdr-0x1fca88>
    3573:	46 76 05             	rex.RX jbe 357b <stivale_hdr-0x1fca85>
    3576:	4c 74 05             	rex.WR je 357e <stivale_hdr-0x1fca82>
    3579:	19 4a 05             	sbb    DWORD PTR [rdx+0x5],ecx
    357c:	58                   	pop    rax
    357d:	4b 05 5e 74 05 4a    	rex.WXB add rax,0x4a05745e
    3583:	3c 05                	cmp    al,0x5
    3585:	77 2e                	ja     35b5 <stivale_hdr-0x1fca4b>
    3587:	05 46 74 05 14       	add    eax,0x14057446
    358c:	74 05                	je     3593 <stivale_hdr-0x1fca6d>
    358e:	17                   	(bad)  
    358f:	4b 05 14 58 05 28    	rex.WXB add rax,0x28055814
    3595:	84 05 1b e5 05 21    	test   BYTE PTR [rip+0x2105e51b],al        # 21061ab6 <__kernel_end+0x20e4fab6>
    359b:	bb 05 4d a0 05       	mov    ebx,0x5a04d05
    35a0:	18 90 05 5f 4b 05    	sbb    BYTE PTR [rax+0x54b5f05],dl
    35a6:	47 74 05             	rex.RXB je 35ae <stivale_hdr-0x1fca52>
    35a9:	79 2e                	jns    35d9 <stivale_hdr-0x1fca27>
    35ab:	05 43 74 05 13       	add    eax,0x13057443
    35b0:	74 05                	je     35b7 <stivale_hdr-0x1fca49>
    35b2:	5f                   	pop    rdi
    35b3:	4c 05 6b ac 05 4c    	rex.WR add rax,0x4c05ac6b
    35b9:	58                   	pop    rax
    35ba:	05 1f 4a 05 36       	add    eax,0x36054a1f
    35bf:	08 76 05             	or     BYTE PTR [rsi+0x5],dh
    35c2:	57                   	push   rdi
    35c3:	f3 05 3c 82 05 32    	repz add eax,0x3205823c
    35c9:	bb 05 3f 4a 05       	mov    ebx,0x54a3f05
    35ce:	45 3c 05             	rex.RB cmp al,0x5
    35d1:	2f                   	(bad)  
    35d2:	9e                   	sahf   
    35d3:	05 3c 08 e5 05       	add    eax,0x5e5083c
    35d8:	17                   	(bad)  
    35d9:	08 3e                	or     BYTE PTR [rsi],bh
    35db:	05 1b 83 05 15       	add    eax,0x1505831b
    35e0:	75 05                	jne    35e7 <stivale_hdr-0x1fca19>
    35e2:	1a d7                	sbb    dl,bh
    35e4:	05 17 84 05 19       	add    eax,0x19058417
    35e9:	bb 05 2c 66 05       	mov    ebx,0x5662c05
    35ee:	17                   	(bad)  
    35ef:	3c 05                	cmp    al,0x5
    35f1:	19 91 05 2c 66 05    	sbb    DWORD PTR [rcx+0x5662c05],edx
    35f7:	17                   	(bad)  
    35f8:	3c 05                	cmp    al,0x5
    35fa:	19 91 05 2c 66 05    	sbb    DWORD PTR [rcx+0x5662c05],edx
    3600:	17                   	(bad)  
    3601:	3c 91                	cmp    al,0x91
    3603:	05 19 bb 05 2d       	add    eax,0x2d05bb19
    3608:	66 05 17 3c          	add    ax,0x3c17
    360c:	05 19 92 05 1c       	add    eax,0x1c059219
    3611:	84 05 2d c9 05 1d    	test   BYTE PTR [rip+0x1d05c92d],al        # 1d05ff44 <__kernel_end+0x1ce4df44>
    3617:	82                   	(bad)  
    3618:	05 0c 92 05 13       	add    eax,0x1305920c
    361d:	84 05 19 74 05 28    	test   BYTE PTR [rip+0x28057419],al        # 2805aa3c <__kernel_end+0x27e48a3c>
    3623:	3c 05                	cmp    al,0x5
    3625:	54                   	push   rsp
    3626:	58                   	pop    rax
    3627:	00 02                	add    BYTE PTR [rdx],al
    3629:	04 01                	add    al,0x1
    362b:	06                   	(bad)  
    362c:	4a 05 11 06 9f 05    	rex.WX add rax,0x59f0611
    3632:	05 57 31 05 22       	add    eax,0x22053157
    3637:	9f                   	lahf   
    3638:	05 0b 76 05 1f       	add    eax,0x1f05760b
    363d:	74 05                	je     3644 <stivale_hdr-0x1fc9bc>
    363f:	24 3c                	and    al,0x3c
    3641:	05 0b f2 05 1f       	add    eax,0x1f05f20b
    3646:	74 05                	je     364d <stivale_hdr-0x1fc9b3>
    3648:	16                   	(bad)  
    3649:	5c                   	pop    rsp
    364a:	05 1c 74 05 2a       	add    eax,0x2a05741c
    364f:	3c 05                	cmp    al,0x5
    3651:	40 90                	rex xchg eax,eax
    3653:	05 09 3c 05 13       	add    eax,0x13053c09
    3658:	4d 05 19 74 05 2a    	rex.WRB add rax,0x2a057419
    365e:	3c 05                	cmp    al,0x5
    3660:	09 58 05             	or     DWORD PTR [rax+0x5],ebx
    3663:	26 4b 05 0d 71 05 1e 	es rex.WXB add rax,0x1e05710d
    366a:	26 05 01 59 31 05    	es add eax,0x5315901
    3670:	10 08                	adc    BYTE PTR [rax],cl
    3672:	91                   	xchg   ecx,eax
    3673:	05 2f 08 a0 05       	add    eax,0x5a0082f
    3678:	05 08 22 05 23       	add    eax,0x23052208
    367d:	67 05 0c a0 05 2a    	addr32 add eax,0x2a05a00c
    3683:	75 05                	jne    368a <stivale_hdr-0x1fc976>
    3685:	0c 82                	or     al,0x82
    3687:	05 0b 3e 05 22       	add    eax,0x22053e0b
    368c:	74 05                	je     3693 <stivale_hdr-0x1fc96d>
    368e:	46 76 05             	rex.RX jbe 3696 <stivale_hdr-0x1fc96a>
    3691:	4c 74 05             	rex.WR je 3699 <stivale_hdr-0x1fc967>
    3694:	19 4a 05             	sbb    DWORD PTR [rdx+0x5],ecx
    3697:	58                   	pop    rax
    3698:	4b 05 5e 74 05 4a    	rex.WXB add rax,0x4a05745e
    369e:	3c 05                	cmp    al,0x5
    36a0:	77 2e                	ja     36d0 <stivale_hdr-0x1fc930>
    36a2:	05 46 74 05 14       	add    eax,0x14057446
    36a7:	74 05                	je     36ae <stivale_hdr-0x1fc952>
    36a9:	17                   	(bad)  
    36aa:	4b 05 14 58 05 28    	rex.WXB add rax,0x28055814
    36b0:	84 05 1b e5 05 21    	test   BYTE PTR [rip+0x2105e51b],al        # 21061bd1 <__kernel_end+0x20e4fbd1>
    36b6:	bb 05 4d a0 05       	mov    ebx,0x5a04d05
    36bb:	18 90 05 5f 4b 05    	sbb    BYTE PTR [rax+0x54b5f05],dl
    36c1:	47 74 05             	rex.RXB je 36c9 <stivale_hdr-0x1fc937>
    36c4:	79 2e                	jns    36f4 <stivale_hdr-0x1fc90c>
    36c6:	05 43 74 05 13       	add    eax,0x13057443
    36cb:	74 05                	je     36d2 <stivale_hdr-0x1fc92e>
    36cd:	5f                   	pop    rdi
    36ce:	4c 05 6b ac 05 4c    	rex.WR add rax,0x4c05ac6b
    36d4:	58                   	pop    rax
    36d5:	05 1f 4a 05 36       	add    eax,0x36054a1f
    36da:	08 76 05             	or     BYTE PTR [rsi+0x5],dh
    36dd:	55                   	push   rbp
    36de:	f3 05 3c 82 05 32    	repz add eax,0x3205823c
    36e4:	bb 05 3f 4a 05       	mov    ebx,0x54a3f05
    36e9:	45 3c 05             	rex.RB cmp al,0x5
    36ec:	2f                   	(bad)  
    36ed:	9e                   	sahf   
    36ee:	05 3c 08 e5 05       	add    eax,0x5e5083c
    36f3:	17                   	(bad)  
    36f4:	08 3e                	or     BYTE PTR [rsi],bh
    36f6:	05 1b 83 05 15       	add    eax,0x1505831b
    36fb:	75 05                	jne    3702 <stivale_hdr-0x1fc8fe>
    36fd:	1a d7                	sbb    dl,bh
    36ff:	05 17 84 05 19       	add    eax,0x19058417
    3704:	bb 05 2c 66 05       	mov    ebx,0x5662c05
    3709:	17                   	(bad)  
    370a:	3c 05                	cmp    al,0x5
    370c:	19 91 05 2c 66 05    	sbb    DWORD PTR [rcx+0x5662c05],edx
    3712:	17                   	(bad)  
    3713:	3c 05                	cmp    al,0x5
    3715:	19 91 05 2c 66 05    	sbb    DWORD PTR [rcx+0x5662c05],edx
    371b:	17                   	(bad)  
    371c:	3c 91                	cmp    al,0x91
    371e:	05 19 bb 05 2d       	add    eax,0x2d05bb19
    3723:	66 05 17 3c          	add    ax,0x3c17
    3727:	05 19 92 05 1c       	add    eax,0x1c059219
    372c:	84 05 2d c9 05 1d    	test   BYTE PTR [rip+0x1d05c92d],al        # 1d06005f <__kernel_end+0x1ce4e05f>
    3732:	82                   	(bad)  
    3733:	05 0c 92 05 13       	add    eax,0x1305920c
    3738:	84 05 19 74 05 28    	test   BYTE PTR [rip+0x28057419],al        # 2805ab57 <__kernel_end+0x27e48b57>
    373e:	3c 05                	cmp    al,0x5
    3740:	54                   	push   rsp
    3741:	58                   	pop    rax
    3742:	00 02                	add    BYTE PTR [rdx],al
    3744:	04 01                	add    al,0x1
    3746:	06                   	(bad)  
    3747:	4a 05 11 06 9f 05    	rex.WX add rax,0x59f0611
    374d:	05 57 31 05 23       	add    eax,0x23053157
    3752:	9f                   	lahf   
    3753:	05 0b 76 05 1f       	add    eax,0x1f05760b
    3758:	74 05                	je     375f <stivale_hdr-0x1fc8a1>
    375a:	24 3c                	and    al,0x3c
    375c:	05 0b f2 05 1f       	add    eax,0x1f05f20b
    3761:	74 05                	je     3768 <stivale_hdr-0x1fc898>
    3763:	16                   	(bad)  
    3764:	5c                   	pop    rsp
    3765:	05 1c 74 05 2a       	add    eax,0x2a05741c
    376a:	3c 05                	cmp    al,0x5
    376c:	40 90                	rex xchg eax,eax
    376e:	05 09 3c 05 13       	add    eax,0x13053c09
    3773:	4d 05 19 74 05 2a    	rex.WRB add rax,0x2a057419
    3779:	3c 05                	cmp    al,0x5
    377b:	09 58 05             	or     DWORD PTR [rax+0x5],ebx
    377e:	27                   	(bad)  
    377f:	4b 05 0d 71 05 1f    	rex.WXB add rax,0x1f05710d
    3785:	26 05 01 59 02 02    	es add eax,0x2025901
    378b:	00 01                	add    BYTE PTR [rcx],al
    378d:	01 2b                	add    DWORD PTR [rbx],ebp
    378f:	02 00                	add    al,BYTE PTR [rax]
    3791:	00 03                	add    BYTE PTR [rbx],al
    3793:	00 61 00             	add    BYTE PTR [rcx+0x0],ah
    3796:	00 00                	add    BYTE PTR [rax],al
    3798:	01 01                	add    DWORD PTR [rcx],eax
    379a:	fb                   	sti    
    379b:	0e                   	(bad)  
    379c:	0d 00 01 01 01       	or     eax,0x1010100
    37a1:	01 00                	add    DWORD PTR [rax],eax
    37a3:	00 00                	add    BYTE PTR [rax],al
    37a5:	01 00                	add    DWORD PTR [rax],eax
    37a7:	00 01                	add    BYTE PTR [rcx],al
    37a9:	73 72                	jae    381d <stivale_hdr-0x1fc7e3>
    37ab:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    37ad:	64 72 69             	fs jb  3819 <stivale_hdr-0x1fc7e7>
    37b0:	76 65                	jbe    3817 <stivale_hdr-0x1fc7e9>
    37b2:	72 73                	jb     3827 <stivale_hdr-0x1fc7d9>
    37b4:	2f                   	(bad)  
    37b5:	6b 62 64 2f          	imul   esp,DWORD PTR [rdx+0x64],0x2f
    37b9:	2e 2e 00 73 72       	cs add BYTE PTR cs:[rbx+0x72],dh
    37be:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    37c0:	64 72 69             	fs jb  382c <stivale_hdr-0x1fc7d4>
    37c3:	76 65                	jbe    382a <stivale_hdr-0x1fc7d6>
    37c5:	72 73                	jb     383a <stivale_hdr-0x1fc7c6>
    37c7:	2f                   	(bad)  
    37c8:	6b 62 64 00          	imul   esp,DWORD PTR [rdx+0x64],0x0
    37cc:	73 72                	jae    3840 <stivale_hdr-0x1fc7c0>
    37ce:	63 00                	movsxd eax,DWORD PTR [rax]
    37d0:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
    37d3:	2e 68 00 01 00 00    	cs push 0x100
    37d9:	6b 62 64 2e          	imul   esp,DWORD PTR [rdx+0x64],0x2e
    37dd:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    37e0:	00 02                	add    BYTE PTR [rdx],al
    37e2:	00 00                	add    BYTE PTR [rax],al
    37e4:	74 79                	je     385f <stivale_hdr-0x1fc7a1>
    37e6:	70 65                	jo     384d <stivale_hdr-0x1fc7b3>
    37e8:	73 2e                	jae    3818 <stivale_hdr-0x1fc7e8>
    37ea:	68 00 03 00 00       	push   0x300
    37ef:	6b 62 64 2e          	imul   esp,DWORD PTR [rdx+0x64],0x2e
    37f3:	68 00 02 00 00       	push   0x200
    37f8:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2093803 <__kernel_end+0x1e81803>
    37fe:	7a 7d                	jp     387d <stivale_hdr-0x1fc783>
    3800:	20 00                	and    BYTE PTR [rax],al
    3802:	00 00                	add    BYTE PTR [rax],al
    3804:	00 00                	add    BYTE PTR [rax],al
    3806:	03 0c 01             	add    ecx,DWORD PTR [rcx+rax*1]
    3809:	05 09 d8 05 10       	add    eax,0x1005d809
    380e:	a1 05 05 4b 04 02 05 	movabs eax,ds:0x3010502044b0505
    3815:	01 03 
    3817:	7a 2e                	jp     3847 <stivale_hdr-0x1fc7b9>
    3819:	05 0b bb 05 14       	add    eax,0x1405bb0b
    381e:	00 02                	add    BYTE PTR [rdx],al
    3820:	04 03                	add    al,0x3
    3822:	74 05                	je     3829 <stivale_hdr-0x1fc7d7>
    3824:	1e                   	(bad)  
    3825:	00 02                	add    BYTE PTR [rdx],al
    3827:	04 02                	add    al,0x2
    3829:	ae                   	scas   al,BYTE PTR es:[rdi]
    382a:	05 1f 00 02 04       	add    eax,0x402001f
    382f:	02 08                	add    cl,BYTE PTR [rax]
    3831:	74 05                	je     3838 <stivale_hdr-0x1fc7c8>
    3833:	02 00                	add    al,BYTE PTR [rax]
    3835:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3838:	80 05 01 6a 3f 05 30 	add    BYTE PTR [rip+0x53f6a01],0x30        # 53fa240 <__kernel_end+0x51e8240>
    383f:	bb 05 32 66 05       	mov    ebx,0x5663205
    3844:	16                   	(bad)  
    3845:	08 83 05 01 e5 3f    	or     BYTE PTR [rbx+0x3fe50105],al
    384b:	05 06 bb 05 0b       	add    eax,0xb05bb06
    3850:	76 05                	jbe    3857 <stivale_hdr-0x1fc7a9>
    3852:	14 00                	adc    al,0x0
    3854:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3857:	74 05                	je     385e <stivale_hdr-0x1fc7a2>
    3859:	22 ae 05 03 08 74    	and    ch,BYTE PTR [rsi+0x74080305]
    385f:	05 21 68 05 18       	add    eax,0x18056821
    3864:	08 ad 05 13 e5 05    	or     BYTE PTR [rbp+0x5e51305],ch
    386a:	04 67                	add    al,0x67
    386c:	05 02 00 02 04       	add    eax,0x4020002
    3871:	02 03                	add    al,BYTE PTR [rbx]
    3873:	79 2e                	jns    38a3 <stivale_hdr-0x1fc75d>
    3875:	05 0b 03 0b 66       	add    eax,0x660b030b
    387a:	05 21 00 02 04       	add    eax,0x4020021
    387f:	03 66 05             	add    esp,DWORD PTR [rsi+0x5]
    3882:	3e 00 02             	add    BYTE PTR ds:[rdx],al
    3885:	04 02                	add    al,0x2
    3887:	68 05 41 00 02       	push   0x2004105
    388c:	04 02                	add    al,0x2
    388e:	66 05 20 00          	add    ax,0x20
    3892:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    3895:	08 4a 05             	or     BYTE PTR [rdx+0x5],cl
    3898:	02 00                	add    al,BYTE PTR [rax]
    389a:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    389d:	08 80 05 01 6a 3f    	or     BYTE PTR [rax+0x3f6a0105],al
    38a3:	05 1a 83 05 1f       	add    eax,0x1f05831a
    38a8:	9e                   	sahf   
    38a9:	05 02 75 05 0d       	add    eax,0xd057502
    38ae:	84 05 17 59 05 0d    	test   BYTE PTR [rip+0xd055917],al        # d0591cb <__kernel_end+0xce471cb>
    38b4:	9e                   	sahf   
    38b5:	05 11 79 05 02       	add    eax,0x2057911
    38ba:	82                   	(bad)  
    38bb:	05 0d 68 67 05       	add    eax,0x567680d
    38c0:	03 59 05             	add    ebx,DWORD PTR [rcx+0x5]
    38c3:	1e                   	(bad)  
    38c4:	76 be                	jbe    3884 <stivale_hdr-0x1fc77c>
    38c6:	05 0e 9f 05 0d       	add    eax,0xd059f0e
    38cb:	5a                   	pop    rdx
    38cc:	05 15 59 05 03       	add    eax,0x3055915
    38d1:	94                   	xchg   esp,eax
    38d2:	05 1e 76 05 16       	add    eax,0x1605761e
    38d7:	9f                   	lahf   
    38d8:	05 1e 94 05 22       	add    eax,0x2205941e
    38dd:	9f                   	lahf   
    38de:	05 16 74 05 0f       	add    eax,0xf057416
    38e3:	40 05 02 4a 05 2c    	rex add eax,0x2c054a02
    38e9:	00 02                	add    BYTE PTR [rdx],al
    38eb:	04 01                	add    al,0x1
    38ed:	4a 05 20 00 02 04    	rex.WX add rax,0x4020020
    38f3:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    38f6:	26 4b 05 1b 74 05 0f 	es rex.WXB add rax,0xf05741b
    38fd:	68 05 02 4a 05       	push   0x54a0205
    3902:	2c 00                	sub    al,0x0
    3904:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3907:	4a 05 20 00 02 04    	rex.WX add rax,0x4020020
    390d:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    3910:	25 4b 05 1a 74       	and    eax,0x741a054b
    3915:	05 0f 68 05 02       	add    eax,0x205680f
    391a:	4a 05 2c 00 02 04    	rex.WX add rax,0x402002c
    3920:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    3923:	20 00                	and    BYTE PTR [rax],al
    3925:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3928:	4a 05 24 4b 05 19    	rex.WX add rax,0x19054b24
    392e:	74 05                	je     3935 <stivale_hdr-0x1fc6cb>
    3930:	0f 68 05 02 4a 05 2c 	punpckhbw mm0,QWORD PTR [rip+0x2c054a02]        # 2c058339 <__kernel_end+0x2be46339>
    3937:	00 02                	add    BYTE PTR [rdx],al
    3939:	04 01                	add    al,0x1
    393b:	4a 05 20 00 02 04    	rex.WX add rax,0x4020020
    3941:	01 74 05 1c          	add    DWORD PTR [rbp+rax*1+0x1c],esi
    3945:	4b 05 1b 9e 05 0f    	rex.WXB add rax,0xf059e1b
    394b:	68 05 02 4a 05       	push   0x54a0205
    3950:	2c 00                	sub    al,0x0
    3952:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    3955:	4a 05 20 00 02 04    	rex.WX add rax,0x4020020
    395b:	01 74 05 1b          	add    DWORD PTR [rbp+rax*1+0x1b],esi
    395f:	4b 05 1a 9e 05 0f    	rex.WXB add rax,0xf059e1a
    3965:	68 05 02 4a 05       	push   0x54a0205
    396a:	2c 00                	sub    al,0x0
    396c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    396f:	4a 05 20 00 02 04    	rex.WX add rax,0x4020020
    3975:	01 74 05 1e          	add    DWORD PTR [rbp+rax*1+0x1e],esi
    3979:	4b 05 1d 9e 05 14    	rex.WXB add rax,0x14059e1d
    397f:	68 05 15 08 bb       	push   0xffffffffbb081505
    3984:	05 13 08 bb 08       	add    eax,0x8bb0813
    3989:	9f                   	lahf   
    398a:	05 15 08 83 05       	add    eax,0x5830815
    398f:	14 08                	adc    al,0x8
    3991:	9f                   	lahf   
    3992:	05 17 08 75 05       	add    eax,0x5750817
    3997:	28 08                	sub    BYTE PTR [rax],cl
    3999:	a0 05 01 ad 03 0b 3c 	movabs al,ds:0x19053c0b03ad0105
    39a0:	05 19 
    39a2:	4b 05 1a 75 05 1c    	rex.WXB add rax,0x1c05751a
    39a8:	75 05                	jne    39af <stivale_hdr-0x1fc651>
    39aa:	19 75 05             	sbb    DWORD PTR [rbp+0x5],esi
    39ad:	1a 75 05             	sbb    dh,BYTE PTR [rbp+0x5]
    39b0:	18 75 05             	sbb    BYTE PTR [rbp+0x5],dh
    39b3:	15 75 05 01 9f       	adc    eax,0x9f010575
    39b8:	02 03                	add    al,BYTE PTR [rbx]
    39ba:	00 01                	add    BYTE PTR [rcx],al
    39bc:	01 4f 01             	add    DWORD PTR [rdi+0x1],ecx
    39bf:	00 00                	add    BYTE PTR [rax],al
    39c1:	03 00                	add    eax,DWORD PTR [rax]
    39c3:	69 00 00 00 01 01    	imul   eax,DWORD PTR [rax],0x1010000
    39c9:	fb                   	sti    
    39ca:	0e                   	(bad)  
    39cb:	0d 00 01 01 01       	or     eax,0x1010100
    39d0:	01 00                	add    DWORD PTR [rax],eax
    39d2:	00 00                	add    BYTE PTR [rax],al
    39d4:	01 00                	add    DWORD PTR [rax],eax
    39d6:	00 01                	add    BYTE PTR [rcx],al
    39d8:	73 72                	jae    3a4c <stivale_hdr-0x1fc5b4>
    39da:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    39dc:	64 72 69             	fs jb  3a48 <stivale_hdr-0x1fc5b8>
    39df:	76 65                	jbe    3a46 <stivale_hdr-0x1fc5ba>
    39e1:	72 73                	jb     3a56 <stivale_hdr-0x1fc5aa>
    39e3:	2f                   	(bad)  
    39e4:	75 61                	jne    3a47 <stivale_hdr-0x1fc5b9>
    39e6:	72 74                	jb     3a5c <stivale_hdr-0x1fc5a4>
    39e8:	2f                   	(bad)  
    39e9:	2e 2e 00 73 72       	cs add BYTE PTR cs:[rbx+0x72],dh
    39ee:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    39f0:	64 72 69             	fs jb  3a5c <stivale_hdr-0x1fc5a4>
    39f3:	76 65                	jbe    3a5a <stivale_hdr-0x1fc5a6>
    39f5:	72 73                	jb     3a6a <stivale_hdr-0x1fc596>
    39f7:	2f                   	(bad)  
    39f8:	75 61                	jne    3a5b <stivale_hdr-0x1fc5a5>
    39fa:	72 74                	jb     3a70 <stivale_hdr-0x1fc590>
    39fc:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    39ff:	63 00                	movsxd eax,DWORD PTR [rax]
    3a01:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
    3a04:	2e 68 00 01 00 00    	cs push 0x100
    3a0a:	73 65                	jae    3a71 <stivale_hdr-0x1fc58f>
    3a0c:	72 69                	jb     3a77 <stivale_hdr-0x1fc589>
    3a0e:	61                   	(bad)  
    3a0f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3a10:	2e 68 00 02 00 00    	cs push 0x200
    3a16:	73 65                	jae    3a7d <stivale_hdr-0x1fc583>
    3a18:	72 69                	jb     3a83 <stivale_hdr-0x1fc57d>
    3a1a:	61                   	(bad)  
    3a1b:	6c                   	ins    BYTE PTR es:[rdi],dx
    3a1c:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    3a20:	00 02                	add    BYTE PTR [rdx],al
    3a22:	00 00                	add    BYTE PTR [rax],al
    3a24:	74 79                	je     3a9f <stivale_hdr-0x1fc561>
    3a26:	70 65                	jo     3a8d <stivale_hdr-0x1fc573>
    3a28:	73 2e                	jae    3a58 <stivale_hdr-0x1fc5a8>
    3a2a:	68 00 03 00 00       	push   0x300
    3a2f:	00 05 05 00 09 02    	add    BYTE PTR [rip+0x2090005],al        # 2093a3a <__kernel_end+0x1e81a3a>
    3a35:	54                   	push   rsp
    3a36:	81 20 00 00 00 00    	and    DWORD PTR [rax],0x0
    3a3c:	00 17                	add    BYTE PTR [rdi],dl
    3a3e:	05 09 08 4b 05       	add    eax,0x54b0809
    3a43:	05 93 3f 05 09       	add    eax,0x9053f93
    3a48:	d8 05 10 a1 05 05    	fadd   DWORD PTR [rip+0x505a110]        # 505db5e <__kernel_end+0x4e4bb5e>
    3a4e:	4b 04 02             	rex.WXB add al,0x2
    3a51:	05 33 03 74 2e       	add    eax,0x2e740333
    3a56:	05 15 c9 05 09       	add    eax,0x905c915
    3a5b:	f3 04 03             	repz add al,0x3
    3a5e:	05 01 3e 05 16       	add    eax,0x16053e01
    3a63:	4b 05 05 08 2e 05    	rex.WXB add rax,0x52e0805
    3a69:	1f                   	(bad)  
    3a6a:	4c 05 01 bc 05 39    	rex.WR add rax,0x3905bc01
    3a70:	3e 05 0c bb 05 23    	ds add eax,0x2305bb0c
    3a76:	00 02                	add    BYTE PTR [rdx],al
    3a78:	04 03                	add    al,0x3
    3a7a:	82                   	(bad)  
    3a7b:	05 15 00 02 04       	add    eax,0x4020015
    3a80:	03 ba 05 14 00 02    	add    edi,DWORD PTR [rdx+0x2001405]
    3a86:	04 02                	add    al,0x2
    3a88:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3a89:	05 0e 00 02 04       	add    eax,0x402000e
    3a8e:	02 d6                	add    dl,dh
    3a90:	05 02 00 02 04       	add    eax,0x4020002
    3a95:	02 9d 05 01 77 3f    	add    bl,BYTE PTR [rbp+0x3f770105]
    3a9b:	05 1b 4b 05 01       	add    eax,0x1054b1b
    3aa0:	bb 3f 05 0e 83       	mov    ebx,0x830e053f
    3aa5:	05 17 00 02 04       	add    eax,0x4020017
    3aaa:	03 74 05 1a          	add    esi,DWORD PTR [rbp+rax*1+0x1a]
    3aae:	00 02                	add    BYTE PTR [rdx],al
    3ab0:	04 02                	add    al,0x2
    3ab2:	92                   	xchg   edx,eax
    3ab3:	05 05 00 02 04       	add    eax,0x4020005
    3ab8:	02 f0                	add    dh,al
    3aba:	05 01 6a 3f 05       	add    eax,0x53f6a01
    3abf:	09 4b 05             	or     DWORD PTR [rbx+0x5],ecx
    3ac2:	18 e7                	sbb    bh,ah
    3ac4:	05 11 9f 05 0b       	add    eax,0xb059f11
    3ac9:	59                   	pop    rcx
    3aca:	05 01 59 3f 05       	add    eax,0x53f5901
    3acf:	26 4b 05 1f ba 05 26 	es rex.WXB add rax,0x2605ba1f
    3ad6:	66 05 21 2e          	add    ax,0x2e21
    3ada:	05 23 bc 05 05       	add    eax,0x505bc23
    3adf:	08 2e                	or     BYTE PTR [rsi],ch
    3ae1:	05 23 4c 05 25       	add    eax,0x25054c23
    3ae6:	66 05 1f c9          	add    ax,0xc91f
    3aea:	05 15 bb 59 05       	add    eax,0x559bb15
    3aef:	16                   	(bad)  
    3af0:	59                   	pop    rcx
    3af1:	05 0f 9f 05 3b       	add    eax,0x3b059f0f
    3af6:	59                   	pop    rcx
    3af7:	05 20 08 2e 05       	add    eax,0x52e0820
    3afc:	01 a5 05 3b 2b 05    	add    DWORD PTR [rbp+0x52b3b05],esp
    3b02:	20 08                	and    BYTE PTR [rax],cl
    3b04:	2e 05 15 9f 05 01    	cs add eax,0x1059f15
    3b0a:	e6 02                	out    0x2,al
    3b0c:	03 00                	add    eax,DWORD PTR [rax]
    3b0e:	01 01                	add    DWORD PTR [rcx],eax
    3b10:	52                   	push   rdx
    3b11:	00 00                	add    BYTE PTR [rax],al
    3b13:	00 03                	add    BYTE PTR [rbx],al
    3b15:	00 2a                	add    BYTE PTR [rdx],ch
    3b17:	00 00                	add    BYTE PTR [rax],al
    3b19:	00 01                	add    BYTE PTR [rcx],al
    3b1b:	01 fb                	add    ebx,edi
    3b1d:	0e                   	(bad)  
    3b1e:	0d 00 01 01 01       	or     eax,0x1010100
    3b23:	01 00                	add    DWORD PTR [rax],eax
    3b25:	00 00                	add    BYTE PTR [rax],al
    3b27:	01 00                	add    DWORD PTR [rax],eax
    3b29:	00 01                	add    BYTE PTR [rcx],al
    3b2b:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3b2e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3b30:	62                   	(bad)  
    3b31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3b32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3b33:	74 2f                	je     3b64 <stivale_hdr-0x1fc49c>
    3b35:	6b 65 6e 74          	imul   esp,DWORD PTR [rbp+0x6e],0x74
    3b39:	72 79                	jb     3bb4 <stivale_hdr-0x1fc44c>
    3b3b:	2e 61                	cs (bad) 
    3b3d:	73 6d                	jae    3bac <stivale_hdr-0x1fc454>
    3b3f:	00 00                	add    BYTE PTR [rax],al
    3b41:	00 00                	add    BYTE PTR [rax],al
    3b43:	00 00                	add    BYTE PTR [rax],al
    3b45:	09 02                	or     DWORD PTR [rdx],eax
    3b47:	60                   	(bad)  
    3b48:	83 20 00             	and    DWORD PTR [rax],0x0
    3b4b:	00 00                	add    BYTE PTR [rax],al
    3b4d:	00 00                	add    BYTE PTR [rax],al
    3b4f:	03 0a                	add    ecx,DWORD PTR [rdx]
    3b51:	01 3e                	add    DWORD PTR [rsi],edi
    3b53:	76 3d                	jbe    3b92 <stivale_hdr-0x1fc46e>
    3b55:	21 41 23             	and    DWORD PTR [rcx+0x23],eax
    3b58:	75 3f                	jne    3b99 <stivale_hdr-0x1fc467>
    3b5a:	75 3e                	jne    3b9a <stivale_hdr-0x1fc466>
    3b5c:	3d 3e 75 3e 75       	cmp    eax,0x753e753e
    3b61:	02 03                	add    al,BYTE PTR [rbx]
    3b63:	00 01                	add    BYTE PTR [rcx],al
    3b65:	01 4a 01             	add    DWORD PTR [rdx+0x1],ecx
    3b68:	00 00                	add    BYTE PTR [rax],al
    3b6a:	03 00                	add    eax,DWORD PTR [rax]
    3b6c:	2d 00 00 00 01       	sub    eax,0x1000000
    3b71:	01 fb                	add    ebx,edi
    3b73:	0e                   	(bad)  
    3b74:	0d 00 01 01 01       	or     eax,0x1010100
    3b79:	01 00                	add    DWORD PTR [rax],eax
    3b7b:	00 00                	add    BYTE PTR [rax],al
    3b7d:	01 00                	add    DWORD PTR [rax],eax
    3b7f:	00 01                	add    BYTE PTR [rcx],al
    3b81:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3b84:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3b86:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    3b89:	2f                   	(bad)  
    3b8a:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    3b91:	70 74                	jo     3c07 <stivale_hdr-0x1fc3f9>
    3b93:	73 2e                	jae    3bc3 <stivale_hdr-0x1fc43d>
    3b95:	61                   	(bad)  
    3b96:	73 6d                	jae    3c05 <stivale_hdr-0x1fc3fb>
    3b98:	00 00                	add    BYTE PTR [rax],al
    3b9a:	00 00                	add    BYTE PTR [rax],al
    3b9c:	00 00                	add    BYTE PTR [rax],al
    3b9e:	09 02                	or     DWORD PTR [rdx],eax
    3ba0:	a0 83 20 00 00 00 00 	movabs al,ds:0x300000000002083
    3ba7:	00 03 
    3ba9:	09 01                	or     DWORD PTR [rcx],eax
    3bab:	3d 03 c4 00 02       	cmp    eax,0x200c403
    3bb0:	01 01                	add    DWORD PTR [rcx],eax
    3bb2:	2f                   	(bad)  
    3bb3:	2f                   	(bad)  
    3bb4:	75 03                	jne    3bb9 <stivale_hdr-0x1fc447>
    3bb6:	0c 02                	or     al,0x2
    3bb8:	03 01                	add    eax,DWORD PTR [rcx]
    3bba:	32 2f                	xor    ch,BYTE PTR [rdi]
    3bbc:	2f                   	(bad)  
    3bbd:	75 41                	jne    3c00 <stivale_hdr-0x1fc400>
    3bbf:	2f                   	(bad)  
    3bc0:	2f                   	(bad)  
    3bc1:	75 41                	jne    3c04 <stivale_hdr-0x1fc3fc>
    3bc3:	2f                   	(bad)  
    3bc4:	2f                   	(bad)  
    3bc5:	75 41                	jne    3c08 <stivale_hdr-0x1fc3f8>
    3bc7:	2f                   	(bad)  
    3bc8:	2f                   	(bad)  
    3bc9:	75 41                	jne    3c0c <stivale_hdr-0x1fc3f4>
    3bcb:	2f                   	(bad)  
    3bcc:	2f                   	(bad)  
    3bcd:	75 41                	jne    3c10 <stivale_hdr-0x1fc3f0>
    3bcf:	2f                   	(bad)  
    3bd0:	2f                   	(bad)  
    3bd1:	75 41                	jne    3c14 <stivale_hdr-0x1fc3ec>
    3bd3:	2f                   	(bad)  
    3bd4:	75 41                	jne    3c17 <stivale_hdr-0x1fc3e9>
    3bd6:	2f                   	(bad)  
    3bd7:	2f                   	(bad)  
    3bd8:	75 41                	jne    3c1b <stivale_hdr-0x1fc3e5>
    3bda:	2f                   	(bad)  
    3bdb:	75 41                	jne    3c1e <stivale_hdr-0x1fc3e2>
    3bdd:	2f                   	(bad)  
    3bde:	75 41                	jne    3c21 <stivale_hdr-0x1fc3df>
    3be0:	2f                   	(bad)  
    3be1:	75 41                	jne    3c24 <stivale_hdr-0x1fc3dc>
    3be3:	2f                   	(bad)  
    3be4:	75 41                	jne    3c27 <stivale_hdr-0x1fc3d9>
    3be6:	2f                   	(bad)  
    3be7:	75 41                	jne    3c2a <stivale_hdr-0x1fc3d6>
    3be9:	2f                   	(bad)  
    3bea:	2f                   	(bad)  
    3beb:	75 41                	jne    3c2e <stivale_hdr-0x1fc3d2>
    3bed:	2f                   	(bad)  
    3bee:	2f                   	(bad)  
    3bef:	75 41                	jne    3c32 <stivale_hdr-0x1fc3ce>
    3bf1:	2f                   	(bad)  
    3bf2:	2f                   	(bad)  
    3bf3:	75 41                	jne    3c36 <stivale_hdr-0x1fc3ca>
    3bf5:	2f                   	(bad)  
    3bf6:	2f                   	(bad)  
    3bf7:	75 41                	jne    3c3a <stivale_hdr-0x1fc3c6>
    3bf9:	2f                   	(bad)  
    3bfa:	2f                   	(bad)  
    3bfb:	75 41                	jne    3c3e <stivale_hdr-0x1fc3c2>
    3bfd:	2f                   	(bad)  
    3bfe:	2f                   	(bad)  
    3bff:	75 41                	jne    3c42 <stivale_hdr-0x1fc3be>
    3c01:	2f                   	(bad)  
    3c02:	2f                   	(bad)  
    3c03:	75 41                	jne    3c46 <stivale_hdr-0x1fc3ba>
    3c05:	2f                   	(bad)  
    3c06:	2f                   	(bad)  
    3c07:	75 41                	jne    3c4a <stivale_hdr-0x1fc3b6>
    3c09:	2f                   	(bad)  
    3c0a:	2f                   	(bad)  
    3c0b:	75 41                	jne    3c4e <stivale_hdr-0x1fc3b2>
    3c0d:	2f                   	(bad)  
    3c0e:	2f                   	(bad)  
    3c0f:	75 41                	jne    3c52 <stivale_hdr-0x1fc3ae>
    3c11:	2f                   	(bad)  
    3c12:	2f                   	(bad)  
    3c13:	75 41                	jne    3c56 <stivale_hdr-0x1fc3aa>
    3c15:	2f                   	(bad)  
    3c16:	2f                   	(bad)  
    3c17:	75 41                	jne    3c5a <stivale_hdr-0x1fc3a6>
    3c19:	2f                   	(bad)  
    3c1a:	2f                   	(bad)  
    3c1b:	75 41                	jne    3c5e <stivale_hdr-0x1fc3a2>
    3c1d:	2f                   	(bad)  
    3c1e:	2f                   	(bad)  
    3c1f:	75 41                	jne    3c62 <stivale_hdr-0x1fc39e>
    3c21:	2f                   	(bad)  
    3c22:	2f                   	(bad)  
    3c23:	75 41                	jne    3c66 <stivale_hdr-0x1fc39a>
    3c25:	2f                   	(bad)  
    3c26:	2f                   	(bad)  
    3c27:	75 41                	jne    3c6a <stivale_hdr-0x1fc396>
    3c29:	2f                   	(bad)  
    3c2a:	2f                   	(bad)  
    3c2b:	75 44                	jne    3c71 <stivale_hdr-0x1fc38f>
    3c2d:	2f                   	(bad)  
    3c2e:	2f                   	(bad)  
    3c2f:	75 40                	jne    3c71 <stivale_hdr-0x1fc38f>
    3c31:	2f                   	(bad)  
    3c32:	2f                   	(bad)  
    3c33:	75 40                	jne    3c75 <stivale_hdr-0x1fc38b>
    3c35:	2f                   	(bad)  
    3c36:	2f                   	(bad)  
    3c37:	75 40                	jne    3c79 <stivale_hdr-0x1fc387>
    3c39:	2f                   	(bad)  
    3c3a:	2f                   	(bad)  
    3c3b:	75 40                	jne    3c7d <stivale_hdr-0x1fc383>
    3c3d:	2f                   	(bad)  
    3c3e:	2f                   	(bad)  
    3c3f:	75 40                	jne    3c81 <stivale_hdr-0x1fc37f>
    3c41:	2f                   	(bad)  
    3c42:	2f                   	(bad)  
    3c43:	75 40                	jne    3c85 <stivale_hdr-0x1fc37b>
    3c45:	2f                   	(bad)  
    3c46:	2f                   	(bad)  
    3c47:	75 40                	jne    3c89 <stivale_hdr-0x1fc377>
    3c49:	2f                   	(bad)  
    3c4a:	2f                   	(bad)  
    3c4b:	75 40                	jne    3c8d <stivale_hdr-0x1fc373>
    3c4d:	2f                   	(bad)  
    3c4e:	2f                   	(bad)  
    3c4f:	75 40                	jne    3c91 <stivale_hdr-0x1fc36f>
    3c51:	2f                   	(bad)  
    3c52:	2f                   	(bad)  
    3c53:	75 40                	jne    3c95 <stivale_hdr-0x1fc36b>
    3c55:	2f                   	(bad)  
    3c56:	2f                   	(bad)  
    3c57:	75 40                	jne    3c99 <stivale_hdr-0x1fc367>
    3c59:	2f                   	(bad)  
    3c5a:	2f                   	(bad)  
    3c5b:	75 40                	jne    3c9d <stivale_hdr-0x1fc363>
    3c5d:	2f                   	(bad)  
    3c5e:	2f                   	(bad)  
    3c5f:	75 40                	jne    3ca1 <stivale_hdr-0x1fc35f>
    3c61:	2f                   	(bad)  
    3c62:	2f                   	(bad)  
    3c63:	75 40                	jne    3ca5 <stivale_hdr-0x1fc35b>
    3c65:	2f                   	(bad)  
    3c66:	2f                   	(bad)  
    3c67:	75 40                	jne    3ca9 <stivale_hdr-0x1fc357>
    3c69:	2f                   	(bad)  
    3c6a:	2f                   	(bad)  
    3c6b:	75 03                	jne    3c70 <stivale_hdr-0x1fc390>
    3c6d:	1b 02                	sbb    eax,DWORD PTR [rdx]
    3c6f:	03 01                	add    eax,DWORD PTR [rcx]
    3c71:	75 3d                	jne    3cb0 <stivale_hdr-0x1fc350>
    3c73:	21 4b 2f             	and    DWORD PTR [rbx+0x2f],ecx
    3c76:	2f                   	(bad)  
    3c77:	2f                   	(bad)  
    3c78:	30 3d 21 3d 21 3d    	xor    BYTE PTR [rip+0x3d213d21],bh        # 3d21799f <__kernel_end+0x3d00599f>
    3c7e:	21 3d 26 3f 21 5b    	and    DWORD PTR [rip+0x5b213f26],edi        # 5b217baa <__kernel_end+0x5b005baa>
    3c84:	21 21                	and    DWORD PTR [rcx],esp
    3c86:	21 21                	and    DWORD PTR [rcx],esp
    3c88:	21 2f                	and    DWORD PTR [rdi],ebp
    3c8a:	2f                   	(bad)  
    3c8b:	2f                   	(bad)  
    3c8c:	2f                   	(bad)  
    3c8d:	75 4b                	jne    3cda <stivale_hdr-0x1fc326>
    3c8f:	36 75 3d             	ss jne 3ccf <stivale_hdr-0x1fc331>
    3c92:	21 4b 2f             	and    DWORD PTR [rbx+0x2f],ecx
    3c95:	2f                   	(bad)  
    3c96:	2f                   	(bad)  
    3c97:	30 3d 21 3d 21 3d    	xor    BYTE PTR [rip+0x3d213d21],bh        # 3d2179be <__kernel_end+0x3d0059be>
    3c9d:	21 3d 26 3f 21 75    	and    DWORD PTR [rip+0x75213f26],edi        # 75217bc9 <__kernel_end+0x75005bc9>
    3ca3:	3f                   	(bad)  
    3ca4:	21 21                	and    DWORD PTR [rcx],esp
    3ca6:	21 21                	and    DWORD PTR [rcx],esp
    3ca8:	21 2f                	and    DWORD PTR [rdi],ebp
    3caa:	2f                   	(bad)  
    3cab:	2f                   	(bad)  
    3cac:	2f                   	(bad)  
    3cad:	75 4b                	jne    3cfa <stivale_hdr-0x1fc306>
    3caf:	02 02                	add    al,BYTE PTR [rdx]
    3cb1:	00 01                	add    BYTE PTR [rcx],al
    3cb3:	01 49 00             	add    DWORD PTR [rcx+0x0],ecx
    3cb6:	00 00                	add    BYTE PTR [rax],al
    3cb8:	03 00                	add    eax,DWORD PTR [rax]
    3cba:	26 00 00             	add    BYTE PTR es:[rax],al
    3cbd:	00 01                	add    BYTE PTR [rcx],al
    3cbf:	01 fb                	add    ebx,edi
    3cc1:	0e                   	(bad)  
    3cc2:	0d 00 01 01 01       	or     eax,0x1010100
    3cc7:	01 00                	add    DWORD PTR [rax],eax
    3cc9:	00 00                	add    BYTE PTR [rax],al
    3ccb:	01 00                	add    DWORD PTR [rax],eax
    3ccd:	00 01                	add    BYTE PTR [rcx],al
    3ccf:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3cd2:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3cd4:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    3cd7:	2f                   	(bad)  
    3cd8:	67 64 74 2e          	addr32 fs je 3d0a <stivale_hdr-0x1fc2f6>
    3cdc:	61                   	(bad)  
    3cdd:	73 6d                	jae    3d4c <stivale_hdr-0x1fc2b4>
    3cdf:	00 00                	add    BYTE PTR [rax],al
    3ce1:	00 00                	add    BYTE PTR [rax],al
    3ce3:	00 00                	add    BYTE PTR [rax],al
    3ce5:	09 02                	or     DWORD PTR [rdx],eax
    3ce7:	d0 86 20 00 00 00    	rol    BYTE PTR [rsi+0x20],1
    3ced:	00 00                	add    BYTE PTR [rax],al
    3cef:	18 3d 4b 2f 2f 2f    	sbb    BYTE PTR [rip+0x2f2f2f4b],bh        # 2f2f6c40 <__kernel_end+0x2f0e4c40>
    3cf5:	2f                   	(bad)  
    3cf6:	2f                   	(bad)  
    3cf7:	21 2f                	and    DWORD PTR [rdi],ebp
    3cf9:	21 31                	and    DWORD PTR [rcx],esi
    3cfb:	3d 02 01 00 01       	cmp    eax,0x1000102
    3d00:	01 4b 00             	add    DWORD PTR [rbx+0x0],ecx
    3d03:	00 00                	add    BYTE PTR [rax],al
    3d05:	03 00                	add    eax,DWORD PTR [rax]
    3d07:	29 00                	sub    DWORD PTR [rax],eax
    3d09:	00 00                	add    BYTE PTR [rax],al
    3d0b:	01 01                	add    DWORD PTR [rcx],eax
    3d0d:	fb                   	sti    
    3d0e:	0e                   	(bad)  
    3d0f:	0d 00 01 01 01       	or     eax,0x1010100
    3d14:	01 00                	add    DWORD PTR [rax],eax
    3d16:	00 00                	add    BYTE PTR [rax],al
    3d18:	01 00                	add    DWORD PTR [rax],eax
    3d1a:	00 01                	add    BYTE PTR [rcx],al
    3d1c:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3d1f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3d21:	6d                   	ins    DWORD PTR es:[rdi],dx
    3d22:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    3d24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d25:	72 79                	jb     3da0 <stivale_hdr-0x1fc260>
    3d27:	2f                   	(bad)  
    3d28:	70 61                	jo     3d8b <stivale_hdr-0x1fc275>
    3d2a:	74 2e                	je     3d5a <stivale_hdr-0x1fc2a6>
    3d2c:	61                   	(bad)  
    3d2d:	73 6d                	jae    3d9c <stivale_hdr-0x1fc264>
    3d2f:	00 00                	add    BYTE PTR [rax],al
    3d31:	00 00                	add    BYTE PTR [rax],al
    3d33:	00 00                	add    BYTE PTR [rax],al
    3d35:	09 02                	or     DWORD PTR [rdx],eax
    3d37:	f0 86 20             	lock xchg BYTE PTR [rax],ah
    3d3a:	00 00                	add    BYTE PTR [rax],al
    3d3c:	00 00                	add    BYTE PTR [rax],al
    3d3e:	00 15 21 3d 3d 2f    	add    BYTE PTR [rip+0x2f3d3d21],dl        # 2f3d7a65 <__kernel_end+0x2f1c5a65>
    3d44:	2f                   	(bad)  
    3d45:	2f                   	(bad)  
    3d46:	3d 2f 4b 2f 21       	cmp    eax,0x212f4b2f
    3d4b:	02 01                	add    al,BYTE PTR [rcx]
    3d4d:	00 01                	add    BYTE PTR [rcx],al
    3d4f:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    3d52:	00 00                	add    BYTE PTR [rax],al
    3d54:	03 00                	add    eax,DWORD PTR [rax]
    3d56:	2f                   	(bad)  
    3d57:	00 00                	add    BYTE PTR [rax],al
    3d59:	00 01                	add    BYTE PTR [rcx],al
    3d5b:	01 fb                	add    ebx,edi
    3d5d:	0e                   	(bad)  
    3d5e:	0d 00 01 01 01       	or     eax,0x1010100
    3d63:	01 00                	add    DWORD PTR [rax],eax
    3d65:	00 00                	add    BYTE PTR [rax],al
    3d67:	01 00                	add    DWORD PTR [rax],eax
    3d69:	00 01                	add    BYTE PTR [rcx],al
    3d6b:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3d6e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3d70:	73 63                	jae    3dd5 <stivale_hdr-0x1fc22b>
    3d72:	68 65 64 75 6c       	push   0x6c756465
    3d77:	69 6e 67 2f 73 6c 65 	imul   ebp,DWORD PTR [rsi+0x67],0x656c732f
    3d7e:	65 70 2e             	gs jo  3daf <stivale_hdr-0x1fc251>
    3d81:	61                   	(bad)  
    3d82:	73 6d                	jae    3df1 <stivale_hdr-0x1fc20f>
    3d84:	00 00                	add    BYTE PTR [rax],al
    3d86:	00 00                	add    BYTE PTR [rax],al
    3d88:	00 00                	add    BYTE PTR [rax],al
    3d8a:	09 02                	or     DWORD PTR [rdx],eax
    3d8c:	10 87 20 00 00 00    	adc    BYTE PTR [rdi+0x20],al
    3d92:	00 00                	add    BYTE PTR [rax],al
    3d94:	18 21                	sbb    BYTE PTR [rcx],ah
    3d96:	3d 21 59 75 3d       	cmp    eax,0x3d755921
    3d9b:	30 21                	xor    BYTE PTR [rcx],ah
    3d9d:	75 3d                	jne    3ddc <stivale_hdr-0x1fc224>
    3d9f:	2f                   	(bad)  
    3da0:	21 21                	and    DWORD PTR [rcx],esp
    3da2:	21 21                	and    DWORD PTR [rcx],esp
    3da4:	21 21                	and    DWORD PTR [rcx],esp
    3da6:	21 21                	and    DWORD PTR [rcx],esp
    3da8:	30 21                	xor    BYTE PTR [rcx],ah
    3daa:	21 21                	and    DWORD PTR [rcx],esp
    3dac:	02 01                	add    al,BYTE PTR [rcx]
    3dae:	00 01                	add    BYTE PTR [rcx],al
    3db0:	01 78 00             	add    DWORD PTR [rax+0x0],edi
    3db3:	00 00                	add    BYTE PTR [rax],al
    3db5:	03 00                	add    eax,DWORD PTR [rax]
    3db7:	31 00                	xor    DWORD PTR [rax],eax
    3db9:	00 00                	add    BYTE PTR [rax],al
    3dbb:	01 01                	add    DWORD PTR [rcx],eax
    3dbd:	fb                   	sti    
    3dbe:	0e                   	(bad)  
    3dbf:	0d 00 01 01 01       	or     eax,0x1010100
    3dc4:	01 00                	add    DWORD PTR [rax],eax
    3dc6:	00 00                	add    BYTE PTR [rax],al
    3dc8:	01 00                	add    DWORD PTR [rax],eax
    3dca:	00 01                	add    BYTE PTR [rcx],al
    3dcc:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3dcf:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3dd1:	75 73                	jne    3e46 <stivale_hdr-0x1fc1ba>
    3dd3:	65 72 73             	gs jb  3e49 <stivale_hdr-0x1fc1b7>
    3dd6:	70 61                	jo     3e39 <stivale_hdr-0x1fc1c7>
    3dd8:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    3ddb:	73 79                	jae    3e56 <stivale_hdr-0x1fc1aa>
    3ddd:	73 63                	jae    3e42 <stivale_hdr-0x1fc1be>
    3ddf:	61                   	(bad)  
    3de0:	6c                   	ins    BYTE PTR es:[rdi],dx
    3de1:	6c                   	ins    BYTE PTR es:[rdi],dx
    3de2:	73 2e                	jae    3e12 <stivale_hdr-0x1fc1ee>
    3de4:	61                   	(bad)  
    3de5:	73 6d                	jae    3e54 <stivale_hdr-0x1fc1ac>
    3de7:	00 00                	add    BYTE PTR [rax],al
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	09 02                	or     DWORD PTR [rdx],eax
    3def:	50                   	push   rax
    3df0:	87 20                	xchg   DWORD PTR [rax],esp
    3df2:	00 00                	add    BYTE PTR [rax],al
    3df4:	00 00                	add    BYTE PTR [rax],al
    3df6:	00 03                	add    BYTE PTR [rbx],al
    3df8:	0b 01                	or     eax,DWORD PTR [rcx]
    3dfa:	85 21                	test   DWORD PTR [rcx],esp
    3dfc:	3e 75 3d             	ds jne 3e3c <stivale_hdr-0x1fc1c4>
    3dff:	4b 3f                	rex.WXB (bad) 
    3e01:	2f                   	(bad)  
    3e02:	31 59 31             	xor    DWORD PTR [rcx+0x31],ebx
    3e05:	59                   	pop    rcx
    3e06:	2f                   	(bad)  
    3e07:	3d 2f 59 2f 59       	cmp    eax,0x592f592f
    3e0c:	30 59 75             	xor    BYTE PTR [rcx+0x75],bl
    3e0f:	3d 75 4b 3e 21       	cmp    eax,0x213e4b75
    3e14:	24 22                	and    al,0x22
    3e16:	21 3e                	and    DWORD PTR [rsi],edi
    3e18:	3d 75 3d 30 22       	cmp    eax,0x22303d75
    3e1d:	75 4b                	jne    3e6a <stivale_hdr-0x1fc196>
    3e1f:	30 21                	xor    BYTE PTR [rcx],ah
    3e21:	21 21                	and    DWORD PTR [rcx],esp
    3e23:	40 83 83 83 83 02 08 	rex add DWORD PTR [rbx+0x8028383],0x0
    3e2a:	00 
    3e2b:	01 01                	add    DWORD PTR [rcx],eax
    3e2d:	63 00                	movsxd eax,DWORD PTR [rax]
    3e2f:	00 00                	add    BYTE PTR [rax],al
    3e31:	03 00                	add    eax,DWORD PTR [rax]
    3e33:	35 00 00 00 01       	xor    eax,0x1000000
    3e38:	01 fb                	add    ebx,edi
    3e3a:	0e                   	(bad)  
    3e3b:	0d 00 01 01 01       	or     eax,0x1010100
    3e40:	01 00                	add    DWORD PTR [rax],eax
    3e42:	00 00                	add    BYTE PTR [rax],al
    3e44:	01 00                	add    DWORD PTR [rax],eax
    3e46:	00 01                	add    BYTE PTR [rcx],al
    3e48:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3e4b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    3e4d:	75 73                	jne    3ec2 <stivale_hdr-0x1fc13e>
    3e4f:	65 72 73             	gs jb  3ec5 <stivale_hdr-0x1fc13b>
    3e52:	70 61                	jo     3eb5 <stivale_hdr-0x1fc14b>
    3e54:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    3e57:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3e59:	74 72                	je     3ecd <stivale_hdr-0x1fc133>
    3e5b:	79 2f                	jns    3e8c <stivale_hdr-0x1fc174>
    3e5d:	75 65                	jne    3ec4 <stivale_hdr-0x1fc13c>
    3e5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e60:	74 72                	je     3ed4 <stivale_hdr-0x1fc12c>
    3e62:	79 2e                	jns    3e92 <stivale_hdr-0x1fc16e>
    3e64:	61                   	(bad)  
    3e65:	73 6d                	jae    3ed4 <stivale_hdr-0x1fc12c>
    3e67:	00 00                	add    BYTE PTR [rax],al
    3e69:	00 00                	add    BYTE PTR [rax],al
    3e6b:	00 00                	add    BYTE PTR [rax],al
    3e6d:	09 02                	or     DWORD PTR [rdx],eax
    3e6f:	10 88 20 00 00 00    	adc    BYTE PTR [rax+0x20],cl
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	03 0a                	add    ecx,DWORD PTR [rdx]
    3e79:	01 21                	add    DWORD PTR [rcx],esp
    3e7b:	3e 75 3d             	ds jne 3ebb <stivale_hdr-0x1fc145>
    3e7e:	3d 75 3d 75 3e       	cmp    eax,0x3e753d75
    3e83:	75 3e                	jne    3ec3 <stivale_hdr-0x1fc13d>
    3e85:	59                   	pop    rcx
    3e86:	2f                   	(bad)  
    3e87:	30 22                	xor    BYTE PTR [rdx],ah
    3e89:	21 21                	and    DWORD PTR [rcx],esp
    3e8b:	59                   	pop    rcx
    3e8c:	2f                   	(bad)  
    3e8d:	75 30                	jne    3ebf <stivale_hdr-0x1fc141>
    3e8f:	02 02                	add    al,BYTE PTR [rdx]
    3e91:	00 01                	add    BYTE PTR [rcx],al
    3e93:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	5f                   	pop    rdi
       2:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
       9:	75 6e                	jne    79 <stivale_hdr-0x1fff87>
       b:	73 69                	jae    76 <stivale_hdr-0x1fff8a>
       d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
       f:	65 64 00 66 72       	gs add BYTE PTR fs:[rsi+0x72],ah
      14:	61                   	(bad)  
      15:	6d                   	ins    DWORD PTR es:[rdi],dx
      16:	65 62                	gs (bad) 
      18:	75 66                	jne    80 <stivale_hdr-0x1fff80>
      1a:	66 65 72 5f          	data16 gs jb 7d <stivale_hdr-0x1fff83>
      1e:	68 65 69 67 68       	push   0x68676965
      23:	74 00                	je     25 <stivale_hdr-0x1fffdb>
      25:	75 69                	jne    90 <stivale_hdr-0x1fff70>
      27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      28:	74 36                	je     60 <stivale_hdr-0x1fffa0>
      2a:	34 00                	xor    al,0x0
      2c:	73 74                	jae    a2 <stivale_hdr-0x1fff5e>
      2e:	69 76 61 6c 65 5f 68 	imul   esi,DWORD PTR [rsi+0x61],0x685f656c
      35:	65 61                	gs (bad) 
      37:	64 65 72 00          	fs gs jb 3b <stivale_hdr-0x1fffc5>
      3b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
      3d:	74 72                	je     b1 <stivale_hdr-0x1fff4f>
      3f:	79 5f                	jns    a0 <stivale_hdr-0x1fff60>
      41:	70 6f                	jo     b2 <stivale_hdr-0x1fff4e>
      43:	69 6e 74 00 64 65 63 	imul   ebp,DWORD PTR [rsi+0x74],0x63656400
      4a:	6c                   	ins    BYTE PTR es:[rdi],dx
      4b:	74 79                	je     c6 <stivale_hdr-0x1fff3a>
      4d:	70 65                	jo     b4 <stivale_hdr-0x1fff4c>
      4f:	28 6e 75             	sub    BYTE PTR [rsi+0x75],ch
      52:	6c                   	ins    BYTE PTR es:[rdi],dx
      53:	6c                   	ins    BYTE PTR es:[rdi],dx
      54:	70 74                	jo     ca <stivale_hdr-0x1fff36>
      56:	72 29                	jb     81 <stivale_hdr-0x1fff7f>
      58:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
      5b:	61                   	(bad)  
      5c:	6d                   	ins    DWORD PTR es:[rdi],dx
      5d:	65 62                	gs (bad) 
      5f:	75 66                	jne    c7 <stivale_hdr-0x1fff39>
      61:	66 65 72 5f          	data16 gs jb c4 <stivale_hdr-0x1fff3c>
      65:	62                   	(bad)  
      66:	70 70                	jo     d8 <stivale_hdr-0x1fff28>
      68:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
      6b:	70 69                	jo     d6 <stivale_hdr-0x1fff2a>
      6d:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
      70:	73 69                	jae    db <stivale_hdr-0x1fff25>
      72:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      74:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
      79:	61                   	(bad)  
      7a:	72 00                	jb     7c <stivale_hdr-0x1fff84>
      7c:	47                   	rex.RXB
      7d:	4e 55                	rex.WRX push rbp
      7f:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
      82:	2b 31                	sub    esi,DWORD PTR [rcx]
      84:	37                   	(bad)  
      85:	20 31                	and    BYTE PTR [rcx],dh
      87:	30 2e                	xor    BYTE PTR [rsi],ch
      89:	32 2e                	xor    ch,BYTE PTR [rsi]
      8b:	30 20                	xor    BYTE PTR [rax],ah
      8d:	2d 6d 6e 6f 2d       	sub    eax,0x2d6f6e6d
      92:	72 65                	jb     f9 <stivale_hdr-0x1fff07>
      94:	64 2d 7a 6f 6e 65    	fs sub eax,0x656e6f7a
      9a:	20 2d 6d 73 73 65    	and    BYTE PTR [rip+0x6573736d],ch        # 6573740d <__kernel_end+0x6552540d>
      a0:	33 20                	xor    esp,DWORD PTR [rax]
      a2:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
      a7:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
      ad:	72 69                	jb     118 <stivale_hdr-0x1ffee8>
      af:	63 20                	movsxd esp,DWORD PTR [rax]
      b1:	2d 6d 61 72 63       	sub    eax,0x6372616d
      b6:	68 3d 78 38 36       	push   0x3638783d
      bb:	2d 36 34 20 2d       	sub    eax,0x2d203436
      c0:	67 64 77 61          	addr32 fs ja 125 <stivale_hdr-0x1ffedb>
      c4:	72 66                	jb     12c <stivale_hdr-0x1ffed4>
      c6:	20 2d 4f 30 20 2d    	and    BYTE PTR [rip+0x2d20304f],ch        # 2d20311b <__kernel_end+0x2cff111b>
      cc:	73 74                	jae    142 <stivale_hdr-0x1ffebe>
      ce:	64 3d 63 2b 2b 32    	fs cmp eax,0x322b2b63
      d4:	61                   	(bad)  
      d5:	20 2d 66 66 72 65    	and    BYTE PTR [rip+0x65726666],ch        # 65726741 <__kernel_end+0x65514741>
      db:	65 73 74             	gs jae 152 <stivale_hdr-0x1ffeae>
      de:	61                   	(bad)  
      df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      e0:	64 69 6e 67 20 2d 66 	imul   ebp,DWORD PTR fs:[rsi+0x67],0x70662d20
      e7:	70 
      e8:	69 65 20 2d 66 6e 6f 	imul   esp,DWORD PTR [rbp+0x20],0x6f6e662d
      ef:	2d 74 68 72 65       	sub    eax,0x65726874
      f4:	61                   	(bad)  
      f5:	64 73 61             	fs jae 159 <stivale_hdr-0x1ffea7>
      f8:	66 65 2d 73 74       	gs sub ax,0x7473
      fd:	61                   	(bad)  
      fe:	74 69                	je     169 <stivale_hdr-0x1ffe97>
     100:	63 73 20             	movsxd esi,DWORD PTR [rbx+0x20]
     103:	2d 66 6e 6f 2d       	sub    eax,0x2d6f6e66
     108:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     109:	6d                   	ins    DWORD PTR es:[rdi],dx
     10a:	69 74 2d 66 72 61 6d 	imul   esi,DWORD PTR [rbp+rbp*1+0x66],0x656d6172
     111:	65 
     112:	2d 70 6f 69 6e       	sub    eax,0x6e696f70
     117:	74 65                	je     17e <stivale_hdr-0x1ffe82>
     119:	72 00                	jb     11b <stivale_hdr-0x1ffee5>
     11b:	5f                   	pop    rdi
     11c:	5f                   	pop    rdi
     11d:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     124:	2f                   	(bad)  
     125:	68 6f 6d 65 2f       	push   0x2f656d6f
     12a:	72 69                	jb     195 <stivale_hdr-0x1ffe6b>
     12c:	7a 65                	jp     193 <stivale_hdr-0x1ffe6d>
     12e:	74 2f                	je     15f <stivale_hdr-0x1ffea1>
     130:	6d                   	ins    DWORD PTR es:[rdi],dx
     131:	69 63 72 6f 4e 45 54 	imul   esp,DWORD PTR [rbx+0x72],0x54454e6f
     138:	2f                   	(bad)  
     139:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     13d:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     13f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     142:	69 76 61 6c 65 5f 68 	imul   esi,DWORD PTR [rsi+0x61],0x685f656c
     149:	64 72 00             	fs jb  14c <stivale_hdr-0x1ffeb4>
     14c:	75 69                	jne    1b7 <stivale_hdr-0x1ffe49>
     14e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     14f:	74 31                	je     182 <stivale_hdr-0x1ffe7e>
     151:	36 00 66 72          	add    BYTE PTR ss:[rsi+0x72],ah
     155:	61                   	(bad)  
     156:	6d                   	ins    DWORD PTR es:[rdi],dx
     157:	65 62                	gs (bad) 
     159:	75 66                	jne    1c1 <stivale_hdr-0x1ffe3f>
     15b:	66 65 72 5f          	data16 gs jb 1be <stivale_hdr-0x1ffe42>
     15f:	77 69                	ja     1ca <stivale_hdr-0x1ffe36>
     161:	64 74 68             	fs je  1cc <stivale_hdr-0x1ffe34>
     164:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     168:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
     16d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
     171:	74 00                	je     173 <stivale_hdr-0x1ffe8d>
     173:	73 68                	jae    1dd <stivale_hdr-0x1ffe23>
     175:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     176:	72 74                	jb     1ec <stivale_hdr-0x1ffe14>
     178:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
     17b:	74 00                	je     17d <stivale_hdr-0x1ffe83>
     17d:	73 72                	jae    1f1 <stivale_hdr-0x1ffe0f>
     17f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     181:	62                   	(bad)  
     182:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     183:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     184:	74 2f                	je     1b5 <stivale_hdr-0x1ffe4b>
     186:	62                   	(bad)  
     187:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     189:	74 2e                	je     1b9 <stivale_hdr-0x1ffe47>
     18b:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     18e:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
     192:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     197:	62                   	(bad)  
     198:	6c                   	ins    BYTE PTR es:[rdi],dx
     199:	65 00 73 68          	add    BYTE PTR gs:[rbx+0x68],dh
     19d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     19e:	72 74                	jb     214 <stivale_hdr-0x1ffdec>
     1a0:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     1a3:	73 69                	jae    20e <stivale_hdr-0x1ffdf2>
     1a5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1a7:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     1ac:	74 00                	je     1ae <stivale_hdr-0x1ffe52>
     1ae:	71 77                	jno    227 <stivale_hdr-0x1ffdd9>
     1b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1b1:	72 64                	jb     217 <stivale_hdr-0x1ffde9>
     1b3:	00 65 70             	add    BYTE PTR [rbp+0x70],ah
     1b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1b7:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     1ba:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
     1bd:	61                   	(bad)  
     1be:	74 6f                	je     22f <stivale_hdr-0x1ffdd1>
     1c0:	72 5f                	jb     221 <stivale_hdr-0x1ffddf>
     1c2:	69 64 00 66 72 61 6d 	imul   esp,DWORD PTR [rax+rax*1+0x66],0x656d6172
     1c9:	65 
     1ca:	62                   	(bad)  
     1cb:	75 66                	jne    233 <stivale_hdr-0x1ffdcd>
     1cd:	66 65 72 5f          	data16 gs jb 230 <stivale_hdr-0x1ffdd0>
     1d1:	61                   	(bad)  
     1d2:	64 64 72 00          	fs fs jb 1d6 <stivale_hdr-0x1ffe2a>
     1d6:	72 73                	jb     24b <stivale_hdr-0x1ffdb5>
     1d8:	64 74 5f             	fs je  23a <stivale_hdr-0x1ffdc6>
     1db:	61                   	(bad)  
     1dc:	64 64 72 65          	fs fs jb 245 <stivale_hdr-0x1ffdbb>
     1e0:	73 73                	jae    255 <stivale_hdr-0x1ffdab>
     1e2:	00 66 62             	add    BYTE PTR [rsi+0x62],ah
     1e5:	5f                   	pop    rdi
     1e6:	6d                   	ins    DWORD PTR es:[rdi],dx
     1e7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     1e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ea:	72 79                	jb     265 <stivale_hdr-0x1ffd9b>
     1ec:	5f                   	pop    rdi
     1ed:	6d                   	ins    DWORD PTR es:[rdi],dx
     1ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1ef:	64 65 6c             	fs gs ins BYTE PTR es:[rdi],dx
     1f2:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     1f5:	72 6f                	jb     266 <stivale_hdr-0x1ffd9a>
     1f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f9:	00 76 65             	add    BYTE PTR [rsi+0x65],dh
     1fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1fd:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
     1ff:	72 5f                	jb     260 <stivale_hdr-0x1ffda0>
     201:	72 65                	jb     268 <stivale_hdr-0x1ffd98>
     203:	76 69                	jbe    26e <stivale_hdr-0x1ffd92>
     205:	73 69                	jae    270 <stivale_hdr-0x1ffd90>
     207:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     208:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     209:	00 78 73             	add    BYTE PTR [rax+0x73],bh
     20c:	64 74 00             	fs je  20f <stivale_hdr-0x1ffdf1>
     20f:	63 6d 64             	movsxd ebp,DWORD PTR [rbp+0x64]
     212:	6c                   	ins    BYTE PTR es:[rdi],dx
     213:	69 6e 65 00 66 62 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f626600
     21a:	67 72 65             	addr32 jb 282 <stivale_hdr-0x1ffd7e>
     21d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     21f:	5f                   	pop    rdi
     220:	6d                   	ins    DWORD PTR es:[rdi],dx
     221:	61                   	(bad)  
     222:	73 6b                	jae    28f <stivale_hdr-0x1ffd71>
     224:	5f                   	pop    rdi
     225:	73 68                	jae    28f <stivale_hdr-0x1ffd71>
     227:	69 66 74 00 62 6f 6f 	imul   esp,DWORD PTR [rsi+0x74],0x6f6f6200
     22e:	74 6c                	je     29c <stivale_hdr-0x1ffd64>
     230:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     231:	61                   	(bad)  
     232:	64 65 72 5f          	fs gs jb 295 <stivale_hdr-0x1ffd6b>
     236:	69 6e 66 6f 00 75 69 	imul   ebp,DWORD PTR [rsi+0x66],0x6975006f
     23d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     23e:	74 00                	je     240 <stivale_hdr-0x1ffdc0>
     240:	6d                   	ins    DWORD PTR es:[rdi],dx
     241:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     242:	64 75 6c             	fs jne 2b1 <stivale_hdr-0x1ffd4f>
     245:	65 73 00             	gs jae 248 <stivale_hdr-0x1ffdb8>
     248:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     24b:	66 69 67 00 66 62    	imul   sp,WORD PTR [rdi+0x0],0x6266
     251:	5f                   	pop    rdi
     252:	72 65                	jb     2b9 <stivale_hdr-0x1ffd47>
     254:	64 5f                	fs pop rdi
     256:	6d                   	ins    DWORD PTR es:[rdi],dx
     257:	61                   	(bad)  
     258:	73 6b                	jae    2c5 <stivale_hdr-0x1ffd3b>
     25a:	5f                   	pop    rdi
     25b:	73 68                	jae    2c5 <stivale_hdr-0x1ffd3b>
     25d:	69 66 74 00 62 6f 6f 	imul   esp,DWORD PTR [rsi+0x74],0x6f6f6200
     264:	6c                   	ins    BYTE PTR es:[rdi],dx
     265:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
     268:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     26a:	62                   	(bad)  
     26b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     26c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     26d:	74 2f                	je     29e <stivale_hdr-0x1ffd62>
     26f:	6b 6d 61 69          	imul   ebp,DWORD PTR [rbp+0x61],0x69
     273:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     274:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
     278:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
     27b:	6d                   	ins    DWORD PTR es:[rdi],dx
     27c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     27d:	72 79                	jb     2f8 <stivale_hdr-0x1ffd08>
     27f:	5f                   	pop    rdi
     280:	6d                   	ins    DWORD PTR es:[rdi],dx
     281:	61                   	(bad)  
     282:	70 5f                	jo     2e3 <stivale_hdr-0x1ffd1d>
     284:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     286:	74 72                	je     2fa <stivale_hdr-0x1ffd06>
     288:	69 65 73 00 72 73 64 	imul   esp,DWORD PTR [rbp+0x73],0x64737200
     28f:	70 00                	jo     291 <stivale_hdr-0x1ffd6f>
     291:	64 69 73 6b 00 6d 65 	imul   esi,DWORD PTR fs:[rbx+0x6b],0x6d656d00
     298:	6d 
     299:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     29a:	72 79                	jb     315 <stivale_hdr-0x1ffceb>
     29c:	5f                   	pop    rdi
     29d:	6d                   	ins    DWORD PTR es:[rdi],dx
     29e:	61                   	(bad)  
     29f:	70 5f                	jo     300 <stivale_hdr-0x1ffd00>
     2a1:	61                   	(bad)  
     2a2:	64 64 72 00          	fs fs jb 2a6 <stivale_hdr-0x1ffd5a>
     2a6:	73 68                	jae    310 <stivale_hdr-0x1ffcf0>
     2a8:	61                   	(bad)  
     2a9:	70 65                	jo     310 <stivale_hdr-0x1ffcf0>
     2ab:	73 00                	jae    2ad <stivale_hdr-0x1ffd53>
     2ad:	61                   	(bad)  
     2ae:	68 63 69 00 66       	push   0x66006963
     2b3:	62                   	(bad)  
     2b4:	5f                   	pop    rdi
     2b5:	72 65                	jb     31c <stivale_hdr-0x1ffce4>
     2b7:	64 5f                	fs pop rdi
     2b9:	6d                   	ins    DWORD PTR es:[rdi],dx
     2ba:	61                   	(bad)  
     2bb:	73 6b                	jae    328 <stivale_hdr-0x1ffcd8>
     2bd:	5f                   	pop    rdi
     2be:	73 69                	jae    329 <stivale_hdr-0x1ffcd7>
     2c0:	7a 65                	jp     327 <stivale_hdr-0x1ffcd9>
     2c2:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
     2c5:	61                   	(bad)  
     2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
     2c7:	65 62                	gs (bad) 
     2c9:	75 66                	jne    331 <stivale_hdr-0x1ffccf>
     2cb:	66 65 72 5f          	data16 gs jb 32e <stivale_hdr-0x1ffcd2>
     2cf:	70 69                	jo     33a <stivale_hdr-0x1ffcc6>
     2d1:	74 63                	je     336 <stivale_hdr-0x1ffcca>
     2d3:	68 00 76 65 6e       	push   0x6e657600
     2d8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
     2da:	72 5f                	jb     33b <stivale_hdr-0x1ffcc5>
     2dc:	74 61                	je     33f <stivale_hdr-0x1ffcc1>
     2de:	62                   	(bad)  
     2df:	6c                   	ins    BYTE PTR es:[rdi],dx
     2e0:	65 5f                	gs pop rdi
     2e2:	69 64 00 75 69 6e 74 	imul   esp,DWORD PTR [rax+rax*1+0x75],0x33746e69
     2e9:	33 
     2ea:	32 00                	xor    al,BYTE PTR [rax]
     2ec:	6d                   	ins    DWORD PTR es:[rdi],dx
     2ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2ee:	64 75 6c             	fs jne 35d <stivale_hdr-0x1ffca3>
     2f1:	65 5f                	gs pop rdi
     2f3:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     2f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2f7:	74 00                	je     2f9 <stivale_hdr-0x1ffd07>
     2f9:	65 63 68 65          	movsxd ebp,DWORD PTR gs:[rax+0x65]
     2fd:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     300:	75 6d                	jne    36f <stivale_hdr-0x1ffc91>
     302:	00 66 62             	add    BYTE PTR [rsi+0x62],ah
     305:	5f                   	pop    rdi
     306:	62                   	(bad)  
     307:	6c                   	ins    BYTE PTR es:[rdi],dx
     308:	75 65                	jne    36f <stivale_hdr-0x1ffc91>
     30a:	5f                   	pop    rdi
     30b:	6d                   	ins    DWORD PTR es:[rdi],dx
     30c:	61                   	(bad)  
     30d:	73 6b                	jae    37a <stivale_hdr-0x1ffc86>
     30f:	5f                   	pop    rdi
     310:	73 68                	jae    37a <stivale_hdr-0x1ffc86>
     312:	69 66 74 00 6b 65 79 	imul   esp,DWORD PTR [rsi+0x74],0x79656b00
     319:	62                   	(bad)  
     31a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     31b:	61                   	(bad)  
     31c:	72 64                	jb     382 <stivale_hdr-0x1ffc7e>
     31e:	00 72 73             	add    BYTE PTR [rdx+0x73],dh
     321:	64 70 32             	fs jo  356 <stivale_hdr-0x1ffcaa>
     324:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     327:	69 76 61 6c 65 5f 73 	imul   esi,DWORD PTR [rsi+0x61],0x735f656c
     32e:	74 72                	je     3a2 <stivale_hdr-0x1ffc5e>
     330:	75 63                	jne    395 <stivale_hdr-0x1ffc6b>
     332:	74 00                	je     334 <stivale_hdr-0x1ffccc>
     334:	6d                   	ins    DWORD PTR es:[rdi],dx
     335:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     336:	6b 6d 61 69          	imul   ebp,DWORD PTR [rbp+0x61],0x69
     33a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     33b:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
     33e:	65 61                	gs (bad) 
     340:	74 6f                	je     3b1 <stivale_hdr-0x1ffc4f>
     342:	72 5f                	jb     3a3 <stivale_hdr-0x1ffc5d>
     344:	72 65                	jb     3ab <stivale_hdr-0x1ffc55>
     346:	76 69                	jbe    3b1 <stivale_hdr-0x1ffc4f>
     348:	73 69                	jae    3b3 <stivale_hdr-0x1ffc4d>
     34a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     34b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     34c:	00 66 62             	add    BYTE PTR [rsi+0x62],ah
     34f:	5f                   	pop    rdi
     350:	62                   	(bad)  
     351:	6c                   	ins    BYTE PTR es:[rdi],dx
     352:	75 65                	jne    3b9 <stivale_hdr-0x1ffc47>
     354:	5f                   	pop    rdi
     355:	6d                   	ins    DWORD PTR es:[rdi],dx
     356:	61                   	(bad)  
     357:	73 6b                	jae    3c4 <stivale_hdr-0x1ffc3c>
     359:	5f                   	pop    rdi
     35a:	73 69                	jae    3c5 <stivale_hdr-0x1ffc3b>
     35c:	7a 65                	jp     3c3 <stivale_hdr-0x1ffc3d>
     35e:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     361:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     362:	74 30                	je     394 <stivale_hdr-0x1ffc6c>
     364:	38 00                	cmp    BYTE PTR [rax],al
     366:	66 62                	data16 (bad) 
     368:	5f                   	pop    rdi
     369:	67 72 65             	addr32 jb 3d1 <stivale_hdr-0x1ffc2f>
     36c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     36e:	5f                   	pop    rdi
     36f:	6d                   	ins    DWORD PTR es:[rdi],dx
     370:	61                   	(bad)  
     371:	73 6b                	jae    3de <stivale_hdr-0x1ffc22>
     373:	5f                   	pop    rdi
     374:	73 69                	jae    3df <stivale_hdr-0x1ffc21>
     376:	7a 65                	jp     3dd <stivale_hdr-0x1ffc23>
     378:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     37b:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     37f:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     381:	5f                   	pop    rdi
     382:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     384:	64 00 63 61          	add    BYTE PTR fs:[rbx+0x61],ah
     388:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
     38b:	5f                   	pop    rdi
     38c:	64 69 73 61 62 6c 65 	imul   esi,DWORD PTR fs:[rbx+0x61],0x64656c62
     393:	64 
     394:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     397:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     398:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     39e:	5f                   	pop    rdi
     39f:	6d                   	ins    DWORD PTR es:[rdi],dx
     3a0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     3a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3a3:	72 79                	jb     41e <stivale_hdr-0x1ffbe2>
     3a5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     3a8:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
     3ac:	33 70 63             	xor    esi,DWORD PTR [rax+0x63]
     3af:	69 34 6d 63 66 67 45 	imul   esi,DWORD PTR [rbp*2+0x45676663],0x4e5a5f00
     3b6:	00 5f 5a 4e 
     3ba:	33 73 79             	xor    esi,DWORD PTR [rbx+0x79]
     3bd:	73 34                	jae    3f3 <stivale_hdr-0x1ffc0d>
     3bf:	61                   	(bad)  
     3c0:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     3c3:	34 72                	xor    al,0x72
     3c5:	73 64                	jae    42b <stivale_hdr-0x1ffbd5>
     3c7:	70 45                	jo     40e <stivale_hdr-0x1ffbf2>
     3c9:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
     3cc:	6c                   	ins    BYTE PTR es:[rdi],dx
     3cd:	63 75 6c             	movsxd esi,DWORD PTR [rbp+0x6c]
     3d0:	61                   	(bad)  
     3d1:	74 65                	je     438 <stivale_hdr-0x1ffbc8>
     3d3:	5f                   	pop    rdi
     3d4:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     3d8:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     3da:	5f                   	pop    rdi
     3db:	73 69                	jae    446 <stivale_hdr-0x1ffbba>
     3dd:	7a 65                	jp     444 <stivale_hdr-0x1ffbbc>
     3df:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     3e2:	4e                   	rex.WRX
     3e3:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     3e5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     3e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3e8:	72 79                	jb     463 <stivale_hdr-0x1ffb9d>
     3ea:	36 70 61             	ss jo  44e <stivale_hdr-0x1ffbb2>
     3ed:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
     3f4:	61 
     3f5:	67 65 5f             	addr32 gs pop rdi
     3f8:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     3ff:	72 
     400:	79 5f                	jns    461 <stivale_hdr-0x1ffb9f>
     402:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     404:	74 72                	je     478 <stivale_hdr-0x1ffb88>
     406:	79 31                	jns    439 <stivale_hdr-0x1ffbc7>
     408:	31 67 65             	xor    DWORD PTR [rdi+0x65],esp
     40b:	74 5f                	je     46c <stivale_hdr-0x1ffb94>
     40d:	61                   	(bad)  
     40e:	64 64 72 65          	fs fs jb 477 <stivale_hdr-0x1ffb89>
     412:	73 73                	jae    487 <stivale_hdr-0x1ffb79>
     414:	45 76 00             	rex.RB jbe 417 <stivale_hdr-0x1ffbe9>
     417:	66 62                	data16 (bad) 
     419:	5f                   	pop    rdi
     41a:	62 61                	(bad)  
     41c:	73 65                	jae    483 <stivale_hdr-0x1ffb7d>
     41e:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     421:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     425:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     427:	5f                   	pop    rdi
     428:	73 74                	jae    49e <stivale_hdr-0x1ffb62>
     42a:	61                   	(bad)  
     42b:	72 74                	jb     4a1 <stivale_hdr-0x1ffb5f>
     42d:	00 6d 63             	add    BYTE PTR [rbp+0x63],ch
     430:	66 67 00 6c 61 72    	data16 add BYTE PTR [ecx+eiz*2+0x72],ch
     436:	67 65 72 5f          	addr32 gs jb 499 <stivale_hdr-0x1ffb67>
     43a:	70 61                	jo     49d <stivale_hdr-0x1ffb63>
     43c:	67 65 73 00          	addr32 gs jae 440 <stivale_hdr-0x1ffbc0>
     440:	70 61                	jo     4a3 <stivale_hdr-0x1ffb5d>
     442:	67 65 5f             	addr32 gs pop rdi
     445:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     44c:	72 
     44d:	79 5f                	jns    4ae <stivale_hdr-0x1ffb52>
     44f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     451:	74 72                	je     4c5 <stivale_hdr-0x1ffb3b>
     453:	79 00                	jns    455 <stivale_hdr-0x1ffbab>
     455:	73 65                	jae    4bc <stivale_hdr-0x1ffb44>
     457:	74 5f                	je     4b8 <stivale_hdr-0x1ffb48>
     459:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     45b:	61                   	(bad)  
     45c:	67 00 73 65          	add    BYTE PTR [ebx+0x65],dh
     460:	74 5f                	je     4c1 <stivale_hdr-0x1ffb3f>
     462:	61                   	(bad)  
     463:	64 64 72 65          	fs fs jb 4cc <stivale_hdr-0x1ffb34>
     467:	73 73                	jae    4dc <stivale_hdr-0x1ffb24>
     469:	00 75 73             	add    BYTE PTR [rbp+0x73],dh
     46c:	65 72 5f             	gs jb  4ce <stivale_hdr-0x1ffb32>
     46f:	73 75                	jae    4e6 <stivale_hdr-0x1ffb1a>
     471:	70 65                	jo     4d8 <stivale_hdr-0x1ffb28>
     473:	72 00                	jb     475 <stivale_hdr-0x1ffb8b>
     475:	5f                   	pop    rdi
     476:	5a                   	pop    rdx
     477:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
     47b:	78 36                	js     4b3 <stivale_hdr-0x1ffb4d>
     47d:	62                   	(bad)  
     47e:	75 66                	jne    4e6 <stivale_hdr-0x1ffb1a>
     480:	66 65 72 45          	data16 gs jb 4c9 <stivale_hdr-0x1ffb37>
     484:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
     487:	74 5f                	je     4e8 <stivale_hdr-0x1ffb18>
     489:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     48b:	61                   	(bad)  
     48c:	67 00 5f 5a          	add    BYTE PTR [edi+0x5a],bl
     490:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     494:	73 36                	jae    4cc <stivale_hdr-0x1ffb34>
     496:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     499:	66 69 67 31 38 63    	imul   sp,WORD PTR [rdi+0x31],0x6338
     49f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4a1:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     4a7:	5f                   	pop    rdi
     4a8:	67 72 61             	addr32 jb 50c <stivale_hdr-0x1ffaf4>
     4ab:	70 68                	jo     515 <stivale_hdr-0x1ffaeb>
     4ad:	69 63 73 45 50 31 39 	imul   esp,DWORD PTR [rbx+0x73],0x39315045
     4b4:	73 74                	jae    52a <stivale_hdr-0x1ffad6>
     4b6:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
     4bd:	72 61                	jb     520 <stivale_hdr-0x1ffae0>
     4bf:	6d                   	ins    DWORD PTR es:[rdi],dx
     4c0:	65 62                	gs (bad) 
     4c2:	75 66                	jne    52a <stivale_hdr-0x1ffad6>
     4c4:	66 65 72 00          	data16 gs jb 4c8 <stivale_hdr-0x1ffb38>
     4c8:	5f                   	pop    rdi
     4c9:	5a                   	pop    rdx
     4ca:	4e                   	rex.WRX
     4cb:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     4cd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     4cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4d0:	72 79                	jb     54b <stivale_hdr-0x1ffab5>
     4d2:	36 70 61             	ss jo  536 <stivale_hdr-0x1ffaca>
     4d5:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
     4dc:	61 
     4dd:	67 65 5f             	addr32 gs pop rdi
     4e0:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     4e7:	72 
     4e8:	79 5f                	jns    549 <stivale_hdr-0x1ffab7>
     4ea:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     4ec:	74 72                	je     560 <stivale_hdr-0x1ffaa0>
     4ee:	79 31                	jns    521 <stivale_hdr-0x1ffadf>
     4f0:	31 73 65             	xor    DWORD PTR [rbx+0x65],esi
     4f3:	74 5f                	je     554 <stivale_hdr-0x1ffaac>
     4f5:	61                   	(bad)  
     4f6:	64 64 72 65          	fs fs jb 55f <stivale_hdr-0x1ffaa1>
     4fa:	73 73                	jae    56f <stivale_hdr-0x1ffa91>
     4fc:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     4fe:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
     501:	74 5f                	je     562 <stivale_hdr-0x1ffa9e>
     503:	70 61                	jo     566 <stivale_hdr-0x1ffa9a>
     505:	74 00                	je     507 <stivale_hdr-0x1ffaf9>
     507:	76 61                	jbe    56a <stivale_hdr-0x1ffa96>
     509:	6c                   	ins    BYTE PTR es:[rdi],dx
     50a:	75 65                	jne    571 <stivale_hdr-0x1ffa8f>
     50c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     50f:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     513:	73 36                	jae    54b <stivale_hdr-0x1ffab5>
     515:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     518:	66 69 67 32 31 63    	imul   sp,WORD PTR [rdi+0x32],0x6331
     51e:	61                   	(bad)  
     51f:	6c                   	ins    BYTE PTR es:[rdi],dx
     520:	63 75 6c             	movsxd esi,DWORD PTR [rbp+0x6c]
     523:	61                   	(bad)  
     524:	74 65                	je     58b <stivale_hdr-0x1ffa75>
     526:	5f                   	pop    rdi
     527:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     52b:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     52d:	5f                   	pop    rdi
     52e:	73 69                	jae    599 <stivale_hdr-0x1ffa67>
     530:	7a 65                	jp     597 <stivale_hdr-0x1ffa69>
     532:	45 76 00             	rex.RB jbe 535 <stivale_hdr-0x1ffacb>
     535:	6d                   	ins    DWORD PTR es:[rdi],dx
     536:	63 66 67             	movsxd esp,DWORD PTR [rsi+0x67]
     539:	5f                   	pop    rdi
     53a:	68 65 61 64 65       	push   0x65646165
     53f:	72 00                	jb     541 <stivale_hdr-0x1ffabf>
     541:	77 72                	ja     5b5 <stivale_hdr-0x1ffa4b>
     543:	69 74 65 5f 74 68 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6f726874
     54a:	6f 
     54b:	75 67                	jne    5b4 <stivale_hdr-0x1ffa4c>
     54d:	68 00 5f 5a 4e       	push   0x4e5a5f00
     552:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     554:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     556:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     557:	72 79                	jb     5d2 <stivale_hdr-0x1ffa2e>
     559:	36 70 61             	ss jo  5bd <stivale_hdr-0x1ffa43>
     55c:	67 69 6e 67 35 70 6d 	imul   ebp,DWORD PTR [esi+0x67],0x6c6d7035
     563:	6c 
     564:	5f                   	pop    rdi
     565:	34 45                	xor    al,0x45
     567:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     56a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     56b:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     571:	5f                   	pop    rdi
     572:	70 63                	jo     5d7 <stivale_hdr-0x1ffa29>
     574:	69 00 63 6f 6e 66    	imul   eax,DWORD PTR [rax],0x666e6f63
     57a:	69 67 75 72 65 5f 67 	imul   esp,DWORD PTR [rdi+0x75],0x675f6572
     581:	72 61                	jb     5e4 <stivale_hdr-0x1ffa1c>
     583:	70 68                	jo     5ed <stivale_hdr-0x1ffa13>
     585:	69 63 73 00 70 72 65 	imul   esp,DWORD PTR [rbx+0x73],0x65727000
     58c:	73 65                	jae    5f3 <stivale_hdr-0x1ffa0d>
     58e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     58f:	74 00                	je     591 <stivale_hdr-0x1ffa6f>
     591:	70 61                	jo     5f4 <stivale_hdr-0x1ffa0c>
     593:	67 65 5f             	addr32 gs pop rdi
     596:	74 61                	je     5f9 <stivale_hdr-0x1ffa07>
     598:	62                   	(bad)  
     599:	6c                   	ins    BYTE PTR es:[rdi],dx
     59a:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     59e:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     5a2:	73 36                	jae    5da <stivale_hdr-0x1ffa26>
     5a4:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     5a7:	66 69 67 31 33 5f    	imul   sp,WORD PTR [rdi+0x31],0x5f33
     5ad:	5f                   	pop    rdi
     5ae:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     5b2:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     5b4:	5f                   	pop    rdi
     5b5:	73 69                	jae    620 <stivale_hdr-0x1ff9e0>
     5b7:	7a 65                	jp     61e <stivale_hdr-0x1ff9e2>
     5b9:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
     5bd:	4e                   	rex.WRX
     5be:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     5c0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     5c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5c3:	72 79                	jb     63e <stivale_hdr-0x1ff9c2>
     5c5:	36 70 61             	ss jo  629 <stivale_hdr-0x1ff9d7>
     5c8:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
     5cf:	61 
     5d0:	67 65 5f             	addr32 gs pop rdi
     5d3:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     5da:	72 
     5db:	79 5f                	jns    63c <stivale_hdr-0x1ff9c4>
     5dd:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5df:	74 72                	je     653 <stivale_hdr-0x1ff9ad>
     5e1:	79 37                	jns    61a <stivale_hdr-0x1ff9e6>
     5e3:	73 65                	jae    64a <stivale_hdr-0x1ff9b6>
     5e5:	74 5f                	je     646 <stivale_hdr-0x1ff9ba>
     5e7:	70 61                	jo     64a <stivale_hdr-0x1ff9b6>
     5e9:	74 45                	je     630 <stivale_hdr-0x1ff9d0>
     5eb:	68 00 5f 5f 6b       	push   0x6b5f5f00
     5f0:	65 72 6e             	gs jb  661 <stivale_hdr-0x1ff99f>
     5f3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     5f5:	5f                   	pop    rdi
     5f6:	73 69                	jae    661 <stivale_hdr-0x1ff99f>
     5f8:	7a 65                	jp     65f <stivale_hdr-0x1ff9a1>
     5fa:	00 70 74             	add    BYTE PTR [rax+0x74],dh
     5fd:	5f                   	pop    rdi
     5fe:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     600:	61                   	(bad)  
     601:	67 00 63 75          	add    BYTE PTR [ebx+0x75],ah
     605:	73 74                	jae    67b <stivale_hdr-0x1ff985>
     607:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     608:	6d                   	ins    DWORD PTR es:[rdi],dx
     609:	5f                   	pop    rdi
     60a:	30 00                	xor    BYTE PTR [rax],al
     60c:	63 75 73             	movsxd esi,DWORD PTR [rbp+0x73]
     60f:	74 6f                	je     680 <stivale_hdr-0x1ff980>
     611:	6d                   	ins    DWORD PTR es:[rdi],dx
     612:	5f                   	pop    rdi
     613:	31 00                	xor    DWORD PTR [rax],eax
     615:	63 75 73             	movsxd esi,DWORD PTR [rbp+0x73]
     618:	74 6f                	je     689 <stivale_hdr-0x1ff977>
     61a:	6d                   	ins    DWORD PTR es:[rdi],dx
     61b:	5f                   	pop    rdi
     61c:	32 00                	xor    al,BYTE PTR [rax]
     61e:	5f                   	pop    rdi
     61f:	5f                   	pop    rdi
     620:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     624:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     626:	5f                   	pop    rdi
     627:	70 61                	jo     68a <stivale_hdr-0x1ff976>
     629:	67 65 73 00          	addr32 gs jae 62d <stivale_hdr-0x1ff9d3>
     62d:	5f                   	pop    rdi
     62e:	5a                   	pop    rdx
     62f:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     633:	73 36                	jae    66b <stivale_hdr-0x1ff995>
     635:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     638:	66 69 67 31 32 73    	imul   sp,WORD PTR [rdi+0x31],0x7332
     63e:	65 74 75             	gs je  6b6 <stivale_hdr-0x1ff94a>
     641:	70 5f                	jo     6a2 <stivale_hdr-0x1ff95e>
     643:	70 61                	jo     6a6 <stivale_hdr-0x1ff95a>
     645:	67 69 6e 67 45 50 31 	imul   ebp,DWORD PTR [esi+0x67],0x39315045
     64c:	39 
     64d:	73 74                	jae    6c3 <stivale_hdr-0x1ff93d>
     64f:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
     656:	72 61                	jb     6b9 <stivale_hdr-0x1ff947>
     658:	6d                   	ins    DWORD PTR es:[rdi],dx
     659:	65 62                	gs (bad) 
     65b:	75 66                	jne    6c3 <stivale_hdr-0x1ff93d>
     65d:	66 65 72 00          	data16 gs jb 661 <stivale_hdr-0x1ff99f>
     661:	73 72                	jae    6d5 <stivale_hdr-0x1ff92b>
     663:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     665:	62                   	(bad)  
     666:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     668:	74 2f                	je     699 <stivale_hdr-0x1ff967>
     66a:	6b 63 6f 6e          	imul   esp,DWORD PTR [rbx+0x6f],0x6e
     66e:	66 2e 63 70 70       	movsxd si,DWORD PTR cs:[rax+0x70]
     673:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
     676:	74 5f                	je     6d7 <stivale_hdr-0x1ff929>
     678:	61                   	(bad)  
     679:	64 64 72 65          	fs fs jb 6e2 <stivale_hdr-0x1ff91e>
     67d:	73 73                	jae    6f2 <stivale_hdr-0x1ff90e>
     67f:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     682:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     683:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     689:	5f                   	pop    rdi
     68a:	75 73                	jne    6ff <stivale_hdr-0x1ff901>
     68c:	65 72 73             	gs jb  702 <stivale_hdr-0x1ff8fe>
     68f:	70 61                	jo     6f2 <stivale_hdr-0x1ff90e>
     691:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
     694:	66 62                	data16 (bad) 
     696:	5f                   	pop    rdi
     697:	73 69                	jae    702 <stivale_hdr-0x1ff8fe>
     699:	7a 65                	jp     700 <stivale_hdr-0x1ff900>
     69b:	00 61 63             	add    BYTE PTR [rcx+0x63],ah
     69e:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
     6a1:	73 65                	jae    708 <stivale_hdr-0x1ff8f8>
     6a3:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     6a7:	4e                   	rex.WRX
     6a8:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     6aa:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     6ad:	72 79                	jb     728 <stivale_hdr-0x1ff8d8>
     6af:	36 70 61             	ss jo  713 <stivale_hdr-0x1ff8ed>
     6b2:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
     6b9:	61 
     6ba:	67 65 5f             	addr32 gs pop rdi
     6bd:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     6c4:	72 
     6c5:	79 5f                	jns    726 <stivale_hdr-0x1ff8da>
     6c7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6c9:	74 72                	je     73d <stivale_hdr-0x1ff8c3>
     6cb:	79 38                	jns    705 <stivale_hdr-0x1ff8fb>
     6cd:	73 65                	jae    734 <stivale_hdr-0x1ff8cc>
     6cf:	74 5f                	je     730 <stivale_hdr-0x1ff8d0>
     6d1:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     6d3:	61                   	(bad)  
     6d4:	67 45                	addr32 rex.RB
     6d6:	4e 53                	rex.WRX push rbx
     6d8:	30 5f 37             	xor    BYTE PTR [rdi+0x37],bl
     6db:	70 74                	jo     751 <stivale_hdr-0x1ff8af>
     6dd:	5f                   	pop    rdi
     6de:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     6e0:	61                   	(bad)  
     6e1:	67 45 62             	addr32 rex.RB (bad) 
     6e4:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
     6e7:	74 75                	je     75e <stivale_hdr-0x1ff8a2>
     6e9:	70 5f                	jo     74a <stivale_hdr-0x1ff8b6>
     6eb:	70 61                	jo     74e <stivale_hdr-0x1ff8b2>
     6ed:	67 69 6e 67 00 5f 5a 	imul   ebp,DWORD PTR [esi+0x67],0x4e5a5f00
     6f4:	4e 
     6f5:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     6f7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     6fa:	72 79                	jb     775 <stivale_hdr-0x1ff88b>
     6fc:	36 70 61             	ss jo  760 <stivale_hdr-0x1ff8a0>
     6ff:	67 69 6e 67 32 30 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703032
     706:	61 
     707:	67 65 5f             	addr32 gs pop rdi
     70a:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
     711:	72 
     712:	79 5f                	jns    773 <stivale_hdr-0x1ff88d>
     714:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     716:	74 72                	je     78a <stivale_hdr-0x1ff876>
     718:	79 38                	jns    752 <stivale_hdr-0x1ff8ae>
     71a:	67 65 74 5f          	addr32 gs je 77d <stivale_hdr-0x1ff883>
     71e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     720:	61                   	(bad)  
     721:	67 45                	addr32 rex.RB
     723:	4e 53                	rex.WRX push rbx
     725:	30 5f 37             	xor    BYTE PTR [rdi+0x37],bl
     728:	70 74                	jo     79e <stivale_hdr-0x1ff862>
     72a:	5f                   	pop    rdi
     72b:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     72d:	61                   	(bad)  
     72e:	67 45 00 5f 5a       	add    BYTE PTR [r15d+0x5a],r11b
     733:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     737:	73 36                	jae    76f <stivale_hdr-0x1ff891>
     739:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     73c:	66 69 67 31 34 5f    	imul   sp,WORD PTR [rdi+0x31],0x5f34
     742:	5f                   	pop    rdi
     743:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     747:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     749:	5f                   	pop    rdi
     74a:	70 61                	jo     7ad <stivale_hdr-0x1ff853>
     74c:	67 65 73 45          	addr32 gs jae 795 <stivale_hdr-0x1ff86b>
     750:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     753:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
     757:	78 33                	js     78c <stivale_hdr-0x1ff874>
     759:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     75b:	70 45                	jo     7a2 <stivale_hdr-0x1ff85e>
     75d:	00 70 6d             	add    BYTE PTR [rax+0x6d],dh
     760:	6c                   	ins    BYTE PTR es:[rdi],dx
     761:	5f                   	pop    rdi
     762:	34 00                	xor    al,0x0
     764:	72 65                	jb     7cb <stivale_hdr-0x1ff835>
     766:	61                   	(bad)  
     767:	64 5f                	fs pop rdi
     769:	77 72                	ja     7dd <stivale_hdr-0x1ff823>
     76b:	69 74 65 00 5f 5a 4e 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x334e5a5f
     772:	33 
     773:	73 79                	jae    7ee <stivale_hdr-0x1ff812>
     775:	73 36                	jae    7ad <stivale_hdr-0x1ff853>
     777:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     77a:	66 69 67 31 39 63    	imul   sp,WORD PTR [rdi+0x31],0x6339
     780:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     781:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     782:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     788:	5f                   	pop    rdi
     789:	75 73                	jne    7fe <stivale_hdr-0x1ff802>
     78b:	65 72 73             	gs jb  801 <stivale_hdr-0x1ff7ff>
     78e:	70 61                	jo     7f1 <stivale_hdr-0x1ff80f>
     790:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
     793:	76 00                	jbe    795 <stivale_hdr-0x1ff86b>
     795:	75 74                	jne    80b <stivale_hdr-0x1ff7f5>
     797:	69 6c 00 5f 5a 4e 33 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x73334e5a
     79e:	73 
     79f:	79 73                	jns    814 <stivale_hdr-0x1ff7ec>
     7a1:	36 63 6f 6e          	movsxd ebp,DWORD PTR ss:[rdi+0x6e]
     7a5:	66 69 67 31 36 63    	imul   sp,WORD PTR [rdi+0x31],0x6336
     7ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7ad:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     7b3:	5f                   	pop    rdi
     7b4:	6d                   	ins    DWORD PTR es:[rdi],dx
     7b5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7b8:	72 79                	jb     833 <stivale_hdr-0x1ff7cd>
     7ba:	45 50                	rex.RB push r8
     7bc:	31 39                	xor    DWORD PTR [rcx],edi
     7be:	73 74                	jae    834 <stivale_hdr-0x1ff7cc>
     7c0:	69 76 61 6c 65 5f 66 	imul   esi,DWORD PTR [rsi+0x61],0x665f656c
     7c7:	72 61                	jb     82a <stivale_hdr-0x1ff7d6>
     7c9:	6d                   	ins    DWORD PTR es:[rdi],dx
     7ca:	65 62                	gs (bad) 
     7cc:	75 66                	jne    834 <stivale_hdr-0x1ff7cc>
     7ce:	66 65 72 50          	data16 gs jb 822 <stivale_hdr-0x1ff7de>
     7d2:	31 38                	xor    DWORD PTR [rax],edi
     7d4:	73 74                	jae    84a <stivale_hdr-0x1ff7b6>
     7d6:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
     7dd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7e0:	72 79                	jb     85b <stivale_hdr-0x1ff7a5>
     7e2:	5f                   	pop    rdi
     7e3:	6d                   	ins    DWORD PTR es:[rdi],dx
     7e4:	61                   	(bad)  
     7e5:	70 00                	jo     7e7 <stivale_hdr-0x1ff819>
     7e7:	5f                   	pop    rdi
     7e8:	5a                   	pop    rdx
     7e9:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
     7ed:	73 36                	jae    825 <stivale_hdr-0x1ff7db>
     7ef:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     7f2:	66 69 67 31 33 63    	imul   sp,WORD PTR [rdi+0x31],0x6333
     7f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fa:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
     800:	5f                   	pop    rdi
     801:	70 63                	jo     866 <stivale_hdr-0x1ff79a>
     803:	69 45 50 4e 53 5f 34 	imul   eax,DWORD PTR [rbp+0x50],0x345f534e
     80a:	61                   	(bad)  
     80b:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
     80e:	35 72 73 64 70       	xor    eax,0x70647372
     813:	32 45 00             	xor    al,BYTE PTR [rbp+0x0]
     816:	47                   	rex.RXB
     817:	44 54                	rex.R push rsp
     819:	5f                   	pop    rdi
     81a:	53                   	push   rbx
     81b:	45                   	rex.RB
     81c:	4c                   	rex.WR
     81d:	45                   	rex.RB
     81e:	43 54                	rex.XB push r12
     820:	4f 52                	rex.WRXB push r10
     822:	5f                   	pop    rdi
     823:	4b                   	rex.WXB
     824:	45 52                	rex.RB push r10
     826:	4e                   	rex.WRX
     827:	45                   	rex.RB
     828:	4c 5f                	rex.WR pop rdi
     82a:	44                   	rex.R
     82b:	41 54                	push   r12
     82d:	41 00 5f 5a          	add    BYTE PTR [r15+0x5a],bl
     831:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
     835:	75 33                	jne    86a <stivale_hdr-0x1ff796>
     837:	74 73                	je     8ac <stivale_hdr-0x1ff754>
     839:	73 31                	jae    86c <stivale_hdr-0x1ff794>
     83b:	32 74 73 73          	xor    dh,BYTE PTR [rbx+rsi*2+0x73]
     83f:	5f                   	pop    rdi
     840:	73 65                	jae    8a7 <stivale_hdr-0x1ff759>
     842:	74 73                	je     8b7 <stivale_hdr-0x1ff749>
     844:	74 61                	je     8a7 <stivale_hdr-0x1ff759>
     846:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
     849:	69 6d 00 6e 75 6d 5f 	imul   ebp,DWORD PTR [rbp+0x0],0x5f6d756e
     850:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     853:	00 47 44             	add    BYTE PTR [rdi+0x44],al
     856:	54                   	push   rsp
     857:	5f                   	pop    rdi
     858:	44                   	rex.R
     859:	45 53                	rex.RB push r11
     85b:	43 5f                	rex.XB pop r15
     85d:	41                   	rex.B
     85e:	43                   	rex.XB
     85f:	43                   	rex.XB
     860:	45 53                	rex.RB push r11
     862:	53                   	push   rbx
     863:	00 74 73 73          	add    BYTE PTR [rbx+rsi*2+0x73],dh
     867:	5f                   	pop    rdi
     868:	62 61                	(bad)  
     86a:	73 65                	jae    8d1 <stivale_hdr-0x1ff72f>
     86c:	00 70 61             	add    BYTE PTR [rax+0x61],dh
     86f:	64 5f                	fs pop rdi
     871:	65 78 5f             	gs js  8d3 <stivale_hdr-0x1ff72d>
     874:	65 78 00             	gs js  877 <stivale_hdr-0x1ff789>
     877:	47                   	rex.RXB
     878:	44 54                	rex.R push rsp
     87a:	5f                   	pop    rdi
     87b:	4d                   	rex.WRB
     87c:	41 58                	pop    r8
     87e:	5f                   	pop    rdi
     87f:	44                   	rex.R
     880:	45 53                	rex.RB push r11
     882:	43 52                	rex.XB push r10
     884:	49 50                	rex.WB push r8
     886:	54                   	push   rsp
     887:	4f 52                	rex.WRXB push r10
     889:	53                   	push   rbx
     88a:	00 74 73 73          	add    BYTE PTR [rbx+rsi*2+0x73],dh
     88e:	5f                   	pop    rdi
     88f:	67 65 74 00          	addr32 gs je 893 <stivale_hdr-0x1ff76d>
     893:	75 73                	jne    908 <stivale_hdr-0x1ff6f8>
     895:	65 72 73             	gs jb  90b <stivale_hdr-0x1ff6f5>
     898:	70 61                	jo     8fb <stivale_hdr-0x1ff705>
     89a:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
     89d:	64 65 62             	fs gs (bad) 
     8a0:	75 67                	jne    909 <stivale_hdr-0x1ff6f7>
     8a2:	5f                   	pop    rdi
     8a3:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
     8a6:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     8a9:	47                   	rex.RXB
     8aa:	44 54                	rex.R push rsp
     8ac:	5f                   	pop    rdi
     8ad:	53                   	push   rbx
     8ae:	45                   	rex.RB
     8af:	4c                   	rex.WR
     8b0:	45                   	rex.RB
     8b1:	43 54                	rex.XB push r12
     8b3:	4f 52                	rex.WRXB push r10
     8b5:	5f                   	pop    rdi
     8b6:	55                   	push   rbp
     8b7:	53                   	push   rbx
     8b8:	45 52                	rex.RB push r10
     8ba:	5f                   	pop    rdi
     8bb:	43                   	rex.XB
     8bc:	4f                   	rex.WRXB
     8bd:	44                   	rex.R
     8be:	45 00 47 44          	add    BYTE PTR [r15+0x44],r8b
     8c2:	54                   	push   rsp
     8c3:	5f                   	pop    rdi
     8c4:	44                   	rex.R
     8c5:	45 53                	rex.RB push r11
     8c7:	43 5f                	rex.XB pop r15
     8c9:	44                   	rex.R
     8ca:	43 00 47 44          	rex.XB add BYTE PTR [r15+0x44],al
     8ce:	54                   	push   rsp
     8cf:	5f                   	pop    rdi
     8d0:	47 52                	rex.RXB push r10
     8d2:	41                   	rex.B
     8d3:	4e 5f                	rex.WRX pop rdi
     8d5:	34 4b                	xor    al,0x4b
     8d7:	00 47 44             	add    BYTE PTR [rdi+0x44],al
     8da:	54                   	push   rsp
     8db:	5f                   	pop    rdi
     8dc:	44                   	rex.R
     8dd:	45 53                	rex.RB push r11
     8df:	43 5f                	rex.XB pop r15
     8e1:	43                   	rex.XB
     8e2:	4f                   	rex.WRXB
     8e3:	44                   	rex.R
     8e4:	45                   	rex.RB
     8e5:	44                   	rex.R
     8e6:	41 54                	push   r12
     8e8:	41 00 64 77 6f       	add    BYTE PTR [r15+rsi*2+0x6f],spl
     8ed:	72 64                	jb     953 <stivale_hdr-0x1ff6ad>
     8ef:	00 47 44             	add    BYTE PTR [rdi+0x44],al
     8f2:	54                   	push   rsp
     8f3:	5f                   	pop    rdi
     8f4:	44                   	rex.R
     8f5:	45 53                	rex.RB push r11
     8f7:	43 5f                	rex.XB pop r15
     8f9:	44 50                	rex.R push rax
     8fb:	4c 00 73 72          	rex.WR add BYTE PTR [rbx+0x72],r14b
     8ff:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     901:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     904:	2f                   	(bad)  
     905:	74 73                	je     97a <stivale_hdr-0x1ff686>
     907:	73 2e                	jae    937 <stivale_hdr-0x1ff6c9>
     909:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     90c:	00 69 6f             	add    BYTE PTR [rcx+0x6f],ch
     90f:	5f                   	pop    rdi
     910:	6d                   	ins    DWORD PTR es:[rdi],dx
     911:	61                   	(bad)  
     912:	70 00                	jo     914 <stivale_hdr-0x1ff6ec>
     914:	69 72 71 5f 73 74 61 	imul   esi,DWORD PTR [rdx+0x71],0x6174735f
     91b:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     91e:	47                   	rex.RXB
     91f:	44 54                	rex.R push rsp
     921:	5f                   	pop    rdi
     922:	44                   	rex.R
     923:	45 53                	rex.RB push r11
     925:	43 5f                	rex.XB pop r15
     927:	45 58                	rex.RB pop r8
     929:	45                   	rex.RB
     92a:	43 55                	rex.XB push r13
     92c:	54                   	push   rsp
     92d:	41                   	rex.B
     92e:	42                   	rex.X
     92f:	4c                   	rex.WR
     930:	45 00 47 44          	add    BYTE PTR [r15+0x44],r8b
     934:	54                   	push   rsp
     935:	5f                   	pop    rdi
     936:	47 52                	rex.RXB push r10
     938:	41                   	rex.B
     939:	4e 5f                	rex.WRX pop rdi
     93b:	36 34 42             	ss xor al,0x42
     93e:	49 54                	rex.WB push r12
     940:	00 47 44             	add    BYTE PTR [rdi+0x44],al
     943:	54                   	push   rsp
     944:	5f                   	pop    rdi
     945:	53                   	push   rbx
     946:	45                   	rex.RB
     947:	4c                   	rex.WR
     948:	45                   	rex.RB
     949:	43 54                	rex.XB push r12
     94b:	4f 52                	rex.WRXB push r10
     94d:	5f                   	pop    rdi
     94e:	4b                   	rex.WXB
     94f:	45 52                	rex.RB push r10
     951:	4e                   	rex.WRX
     952:	45                   	rex.RB
     953:	4c 5f                	rex.WR pop rdi
     955:	43                   	rex.XB
     956:	4f                   	rex.WRXB
     957:	44                   	rex.R
     958:	45 00 73 67          	add    BYTE PTR [r11+0x67],r14b
     95c:	69 5f 73 74 61 63 6b 	imul   ebx,DWORD PTR [rdi+0x73],0x6b636174
     963:	00 70 61             	add    BYTE PTR [rax+0x61],dh
     966:	64 5f                	fs pop rdi
     968:	65 78 00             	gs js  96b <stivale_hdr-0x1ff695>
     96b:	47                   	rex.RXB
     96c:	44 54                	rex.R push rsp
     96e:	5f                   	pop    rdi
     96f:	44                   	rex.R
     970:	45 53                	rex.RB push r11
     972:	43 5f                	rex.XB pop r15
     974:	50                   	push   rax
     975:	52                   	push   rdx
     976:	45 53                	rex.RB push r11
     978:	45                   	rex.RB
     979:	4e 54                	rex.WRX push rsp
     97b:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
     97e:	72 5f                	jb     9df <stivale_hdr-0x1ff621>
     980:	73 74                	jae    9f6 <stivale_hdr-0x1ff60a>
     982:	61                   	(bad)  
     983:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     986:	5f                   	pop    rdi
     987:	5a                   	pop    rdx
     988:	4e 33 63 70          	rex.WRX xor r12,QWORD PTR [rbx+0x70]
     98c:	75 33                	jne    9c1 <stivale_hdr-0x1ff63f>
     98e:	74 73                	je     a03 <stivale_hdr-0x1ff5fd>
     990:	73 38                	jae    9ca <stivale_hdr-0x1ff636>
     992:	74 73                	je     a07 <stivale_hdr-0x1ff5f9>
     994:	73 5f                	jae    9f5 <stivale_hdr-0x1ff60b>
     996:	69 6e 69 74 45 76 00 	imul   ebp,DWORD PTR [rsi+0x69],0x764574
     99d:	74 73                	je     a12 <stivale_hdr-0x1ff5ee>
     99f:	73 5f                	jae    a00 <stivale_hdr-0x1ff600>
     9a1:	69 6e 69 74 00 47 44 	imul   ebp,DWORD PTR [rsi+0x69],0x44470074
     9a8:	54                   	push   rsp
     9a9:	5f                   	pop    rdi
     9aa:	53                   	push   rbx
     9ab:	45                   	rex.RB
     9ac:	4c                   	rex.WR
     9ad:	45                   	rex.RB
     9ae:	43 54                	rex.XB push r12
     9b0:	4f 52                	rex.WRXB push r10
     9b2:	5f                   	pop    rdi
     9b3:	55                   	push   rbp
     9b4:	53                   	push   rbx
     9b5:	45 52                	rex.RB push r10
     9b7:	5f                   	pop    rdi
     9b8:	44                   	rex.R
     9b9:	41 54                	push   r12
     9bb:	41 00 70 61          	add    BYTE PTR [r8+0x61],sil
     9bf:	64 5f                	fs pop rdi
     9c1:	65 78 5f             	gs js  a23 <stivale_hdr-0x1ff5dd>
     9c4:	65 78 5f             	gs js  a26 <stivale_hdr-0x1ff5da>
     9c7:	65 78 00             	gs js  9ca <stivale_hdr-0x1ff636>
     9ca:	47                   	rex.RXB
     9cb:	44 54                	rex.R push rsp
     9cd:	5f                   	pop    rdi
     9ce:	44                   	rex.R
     9cf:	45 53                	rex.RB push r11
     9d1:	43 5f                	rex.XB pop r15
     9d3:	52                   	push   rdx
     9d4:	45                   	rex.RB
     9d5:	41                   	rex.B
     9d6:	44 57                	rex.R push rdi
     9d8:	52                   	push   rdx
     9d9:	49 54                	rex.WB push r12
     9db:	45 00 47 44          	add    BYTE PTR [r15+0x44],r8b
     9df:	54                   	push   rsp
     9e0:	5f                   	pop    rdi
     9e1:	47 52                	rex.RXB push r10
     9e3:	41                   	rex.B
     9e4:	4e 5f                	rex.WRX pop rdi
     9e6:	33 32                	xor    esi,DWORD PTR [rdx]
     9e8:	42                   	rex.X
     9e9:	49 54                	rex.WB push r12
     9eb:	00 74 73 73          	add    BYTE PTR [rbx+rsi*2+0x73],dh
     9ef:	5f                   	pop    rdi
     9f0:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
     9f7:	00 74 73 73          	add    BYTE PTR [rbx+rsi*2+0x73],dh
     9fb:	5f                   	pop    rdi
     9fc:	73 65                	jae    a63 <stivale_hdr-0x1ff59d>
     9fe:	74 73                	je     a73 <stivale_hdr-0x1ff58d>
     a00:	74 61                	je     a63 <stivale_hdr-0x1ff59d>
     a02:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     a05:	47                   	rex.RXB
     a06:	44 54                	rex.R push rsp
     a08:	5f                   	pop    rdi
     a09:	47 52                	rex.RXB push r10
     a0b:	41                   	rex.B
     a0c:	4e 5f                	rex.WRX pop rdi
     a0e:	4f 53                	rex.WRXB push r11
     a10:	00 74 73 73          	add    BYTE PTR [rbx+rsi*2+0x73],dh
     a14:	5f                   	pop    rdi
     a15:	74 00                	je     a17 <stivale_hdr-0x1ff5e9>
     a17:	73 5f                	jae    a78 <stivale_hdr-0x1ff588>
     a19:	74 73                	je     a8e <stivale_hdr-0x1ff572>
     a1b:	73 5f                	jae    a7c <stivale_hdr-0x1ff584>
     a1d:	64 65 73 63          	fs gs jae a84 <stivale_hdr-0x1ff57c>
     a21:	72 69                	jb     a8c <stivale_hdr-0x1ff574>
     a23:	70 74                	jo     a99 <stivale_hdr-0x1ff567>
     a25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a26:	72 73                	jb     a9b <stivale_hdr-0x1ff565>
     a28:	00 47 44             	add    BYTE PTR [rdi+0x44],al
     a2b:	54                   	push   rsp
     a2c:	5f                   	pop    rdi
     a2d:	47 52                	rex.RXB push r10
     a2f:	41                   	rex.B
     a30:	4e 5f                	rex.WRX pop rdi
     a32:	4c                   	rex.WR
     a33:	49                   	rex.WB
     a34:	4d                   	rex.WRB
     a35:	49 54                	rex.WB push r12
     a37:	48                   	rex.W
     a38:	49                   	rex.WB
     a39:	4d                   	rex.WRB
     a3a:	41 53                	push   r11
     a3c:	54                   	push   rsp
     a3d:	00 67 64             	add    BYTE PTR [rdi+0x64],ah
     a40:	74 5f                	je     aa1 <stivale_hdr-0x1ff55f>
     a42:	69 6e 69 74 00 61 64 	imul   ebp,DWORD PTR [rsi+0x69],0x64610074
     a49:	64 72 5f             	fs jb  aab <stivale_hdr-0x1ff555>
     a4c:	31 00                	xor    DWORD PTR [rax],eax
     a4e:	62 61                	(bad)  
     a50:	73 65                	jae    ab7 <stivale_hdr-0x1ff549>
     a52:	5f                   	pop    rdi
     a53:	68 69 67 68 00       	push   0x686769
     a58:	67 64 74 5f          	addr32 fs je abb <stivale_hdr-0x1ff545>
     a5c:	73 79                	jae    ad7 <stivale_hdr-0x1ff529>
     a5e:	73 74                	jae    ad4 <stivale_hdr-0x1ff52c>
     a60:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     a62:	5f                   	pop    rdi
     a63:	64 65 73 63          	fs gs jae aca <stivale_hdr-0x1ff536>
     a67:	5f                   	pop    rdi
     a68:	74 00                	je     a6a <stivale_hdr-0x1ff596>
     a6a:	67 72 61             	addr32 jb ace <stivale_hdr-0x1ff532>
     a6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a6e:	75 6c                	jne    adc <stivale_hdr-0x1ff524>
     a70:	61                   	(bad)  
     a71:	72 69                	jb     adc <stivale_hdr-0x1ff524>
     a73:	74 79                	je     aee <stivale_hdr-0x1ff512>
     a75:	00 67 64             	add    BYTE PTR [rdi+0x64],ah
     a78:	74 5f                	je     ad9 <stivale_hdr-0x1ff527>
     a7a:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
     a81:	5f                   	pop    rdi
     a82:	74 73                	je     af7 <stivale_hdr-0x1ff509>
     a84:	73 00                	jae    a86 <stivale_hdr-0x1ff57a>
     a86:	73 5f                	jae    ae7 <stivale_hdr-0x1ff519>
     a88:	67 64 74 5f          	addr32 fs je aeb <stivale_hdr-0x1ff515>
     a8c:	69 6e 64 65 78 00 42 	imul   ebp,DWORD PTR [rsi+0x64],0x42007865
     a93:	41 53                	push   r11
     a95:	45 5f                	rex.RB pop r15
     a97:	44                   	rex.R
     a98:	45 53                	rex.RB push r11
     a9a:	43 00 73 5f          	rex.XB add BYTE PTR [r11+0x5f],sil
     a9e:	67 64 74 00          	addr32 fs je aa2 <stivale_hdr-0x1ff55e>
     aa2:	73 72                	jae    b16 <stivale_hdr-0x1ff4ea>
     aa4:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     aa6:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     aa9:	2f                   	(bad)  
     aaa:	67 64 74 2e          	addr32 fs je adc <stivale_hdr-0x1ff524>
     aae:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     ab1:	00 6c 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],ch
     ab5:	69 74 5f 30 00 5f 5a 	imul   esi,DWORD PTR [rdi+rbx*2+0x30],0x4e5a5f00
     abc:	4e 
     abd:	33 63 70             	xor    esp,DWORD PTR [rbx+0x70]
     ac0:	75 33                	jne    af5 <stivale_hdr-0x1ff50b>
     ac2:	67 64 74 31          	addr32 fs je af7 <stivale_hdr-0x1ff509>
     ac6:	35 67 64 74 5f       	xor    eax,0x5f746467
     acb:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
     ad2:	5f                   	pop    rdi
     ad3:	74 73                	je     b48 <stivale_hdr-0x1ff4b8>
     ad5:	73 45                	jae    b1c <stivale_hdr-0x1ff4e4>
     ad7:	6d                   	ins    DWORD PTR es:[rdi],dx
     ad8:	6d                   	ins    DWORD PTR es:[rdi],dx
     ad9:	00 6c 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],ch
     add:	69 74 5f 31 00 67 64 	imul   esi,DWORD PTR [rdi+rbx*2+0x31],0x74646700
     ae4:	74 
     ae5:	5f                   	pop    rdi
     ae6:	64 65 73 63          	fs gs jae b4d <stivale_hdr-0x1ff4b3>
     aea:	5f                   	pop    rdi
     aeb:	74 00                	je     aed <stivale_hdr-0x1ff513>
     aed:	67 64 74 5f          	addr32 fs je b50 <stivale_hdr-0x1ff4b0>
     af1:	73 79                	jae    b6c <stivale_hdr-0x1ff494>
     af3:	73 74                	jae    b69 <stivale_hdr-0x1ff497>
     af5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     af7:	5f                   	pop    rdi
     af8:	64 65 73 63          	fs gs jae b5f <stivale_hdr-0x1ff4a1>
     afc:	72 69                	jb     b67 <stivale_hdr-0x1ff499>
     afe:	70 74                	jo     b74 <stivale_hdr-0x1ff48c>
     b00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b01:	72 00                	jb     b03 <stivale_hdr-0x1ff4fd>
     b03:	61                   	(bad)  
     b04:	64 64 72 5f          	fs fs jb b67 <stivale_hdr-0x1ff499>
     b08:	30 00                	xor    BYTE PTR [rax],al
     b0a:	67 64 74 5f          	addr32 fs je b6d <stivale_hdr-0x1ff493>
     b0e:	64 65 73 63          	fs gs jae b75 <stivale_hdr-0x1ff48b>
     b12:	72 69                	jb     b7d <stivale_hdr-0x1ff483>
     b14:	70 74                	jo     b8a <stivale_hdr-0x1ff476>
     b16:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b17:	72 00                	jb     b19 <stivale_hdr-0x1ff4e7>
     b19:	61                   	(bad)  
     b1a:	64 64 72 5f          	fs fs jb b7d <stivale_hdr-0x1ff483>
     b1e:	32 00                	xor    al,BYTE PTR [rax]
     b20:	61                   	(bad)  
     b21:	64 64 72 5f          	fs fs jb b84 <stivale_hdr-0x1ff47c>
     b25:	33 00                	xor    eax,DWORD PTR [rax]
     b27:	67 64 74 5f          	addr32 fs je b8a <stivale_hdr-0x1ff476>
     b2b:	64 65 73 63          	fs gs jae b92 <stivale_hdr-0x1ff46e>
     b2f:	00 67 64             	add    BYTE PTR [rdi+0x64],ah
     b32:	74 5f                	je     b93 <stivale_hdr-0x1ff46d>
     b34:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
     b3b:	5f                   	pop    rdi
     b3c:	64 65 73 63          	fs gs jae ba3 <stivale_hdr-0x1ff45d>
     b40:	72 69                	jb     bab <stivale_hdr-0x1ff455>
     b42:	70 74                	jo     bb8 <stivale_hdr-0x1ff448>
     b44:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b45:	72 00                	jb     b47 <stivale_hdr-0x1ff4b9>
     b47:	72 65                	jb     bae <stivale_hdr-0x1ff452>
     b49:	73 65                	jae    bb0 <stivale_hdr-0x1ff450>
     b4b:	72 76                	jb     bc3 <stivale_hdr-0x1ff43d>
     b4d:	65 64 00 61 63       	gs add BYTE PTR fs:[rcx+0x63],ah
     b52:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
     b55:	73 00                	jae    b57 <stivale_hdr-0x1ff4a9>
     b57:	6c                   	ins    BYTE PTR es:[rdi],dx
     b58:	69 6d 69 74 00 73 5f 	imul   ebp,DWORD PTR [rbp+0x69],0x5f730074
     b5f:	67 64 74 5f          	addr32 fs je bc2 <stivale_hdr-0x1ff43e>
     b63:	64 65 73 63          	fs gs jae bca <stivale_hdr-0x1ff436>
     b67:	72 69                	jb     bd2 <stivale_hdr-0x1ff42e>
     b69:	70 74                	jo     bdf <stivale_hdr-0x1ff421>
     b6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b6c:	72 73                	jb     be1 <stivale_hdr-0x1ff41f>
     b6e:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
     b72:	65 5f                	gs pop rdi
     b74:	30 00                	xor    BYTE PTR [rax],al
     b76:	74 73                	je     beb <stivale_hdr-0x1ff415>
     b78:	73 5f                	jae    bd9 <stivale_hdr-0x1ff427>
     b7a:	74 79                	je     bf5 <stivale_hdr-0x1ff40b>
     b7c:	70 65                	jo     be3 <stivale_hdr-0x1ff41d>
     b7e:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
     b81:	73 65                	jae    be8 <stivale_hdr-0x1ff418>
     b83:	5f                   	pop    rdi
     b84:	6c                   	ins    BYTE PTR es:[rdi],dx
     b85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b86:	77 00                	ja     b88 <stivale_hdr-0x1ff478>
     b88:	62 61                	(bad)  
     b8a:	73 65                	jae    bf1 <stivale_hdr-0x1ff40f>
     b8c:	5f                   	pop    rdi
     b8d:	6d                   	ins    DWORD PTR es:[rdi],dx
     b8e:	69 64 00 5f 5a 4e 33 	imul   esp,DWORD PTR [rax+rax*1+0x5f],0x63334e5a
     b95:	63 
     b96:	70 75                	jo     c0d <stivale_hdr-0x1ff3f3>
     b98:	33 67 64             	xor    esp,DWORD PTR [rdi+0x64]
     b9b:	74 32                	je     bcf <stivale_hdr-0x1ff431>
     b9d:	32 67 64             	xor    ah,BYTE PTR [rdi+0x64]
     ba0:	74 5f                	je     c01 <stivale_hdr-0x1ff3ff>
     ba2:	69 6e 73 74 61 6c 6c 	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
     ba9:	5f                   	pop    rdi
     baa:	64 65 73 63          	fs gs jae c11 <stivale_hdr-0x1ff3ef>
     bae:	72 69                	jb     c19 <stivale_hdr-0x1ff3e7>
     bb0:	70 74                	jo     c26 <stivale_hdr-0x1ff3da>
     bb2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb3:	72 45                	jb     bfa <stivale_hdr-0x1ff406>
     bb5:	6d                   	ins    DWORD PTR es:[rdi],dx
     bb6:	6d                   	ins    DWORD PTR es:[rdi],dx
     bb7:	68 68 00 42 41       	push   0x41420068
     bbc:	53                   	push   rbx
     bbd:	45 5f                	rex.RB pop r15
     bbf:	47 52                	rex.RXB push r10
     bc1:	41                   	rex.B
     bc2:	4e 00 67 64          	rex.WRX add BYTE PTR [rdi+0x64],r12b
     bc6:	74 5f                	je     c27 <stivale_hdr-0x1ff3d9>
     bc8:	74 00                	je     bca <stivale_hdr-0x1ff436>
     bca:	73 72                	jae    c3e <stivale_hdr-0x1ff3c2>
     bcc:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     bce:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
     bd1:	2f                   	(bad)  
     bd2:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
     bd9:	70 74                	jo     c4f <stivale_hdr-0x1ff3b1>
     bdb:	73 2e                	jae    c0b <stivale_hdr-0x1ff3f5>
     bdd:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     be0:	00 65 72             	add    BYTE PTR [rbp+0x72],ah
     be3:	72 6f                	jb     c54 <stivale_hdr-0x1ff3ac>
     be5:	72 5f                	jb     c46 <stivale_hdr-0x1ff3ba>
     be7:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
     bea:	65 00 72 65          	add    BYTE PTR gs:[rdx+0x65],dh
     bee:	73 65                	jae    c55 <stivale_hdr-0x1ff3ab>
     bf0:	72 76                	jb     c68 <stivale_hdr-0x1ff398>
     bf2:	65 64 5f             	gs fs pop rdi
     bf5:	77 72                	ja     c69 <stivale_hdr-0x1ff397>
     bf7:	69 74 65 00 72 65 73 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x65736572
     bfe:	65 
     bff:	72 76                	jb     c77 <stivale_hdr-0x1ff389>
     c01:	65 64 49 73 74       	gs fs rex.WB jae c7a <stivale_hdr-0x1ff386>
     c06:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
     c09:	5f                   	pop    rdi
     c0a:	65 78 65             	gs js  c72 <stivale_hdr-0x1ff38e>
     c0d:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
     c10:	65 00 6d 73          	add    BYTE PTR gs:[rbp+0x73],ch
     c14:	5f                   	pop    rdi
     c15:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     c19:	6b 00 69             	imul   eax,DWORD PTR [rax],0x69
     c1c:	64 74 5f             	fs je  c7e <stivale_hdr-0x1ff382>
     c1f:	73 00                	jae    c21 <stivale_hdr-0x1ff3df>
     c21:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [rsp+rsi*2+0x5f],0x727470
     c28:	00 
     c29:	6c                   	ins    BYTE PTR es:[rdi],dx
     c2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c2b:	61                   	(bad)  
     c2c:	64 5f                	fs pop rdi
     c2e:	69 64 74 00 72 66 6c 	imul   esp,DWORD PTR [rsp+rsi*2+0x0],0x616c6672
     c35:	61 
     c36:	67 73 00             	addr32 jae c39 <stivale_hdr-0x1ff3c7>
     c39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c3a:	61                   	(bad)  
     c3b:	6d                   	ins    DWORD PTR es:[rdi],dx
     c3c:	65 00 73 5f          	add    BYTE PTR gs:[rbx+0x5f],dh
     c40:	72 65                	jb     ca7 <stivale_hdr-0x1ff359>
     c42:	67 69 73 74 65 72 73 	imul   esi,DWORD PTR [ebx+0x74],0x737265
     c49:	00 
     c4a:	69 64 74 50 6f 69 6e 	imul   esp,DWORD PTR [rsp+rsi*2+0x50],0x746e696f
     c51:	74 
     c52:	65 72 00             	gs jb  c55 <stivale_hdr-0x1ff3ab>
     c55:	65 78 63             	gs js  cbb <stivale_hdr-0x1ff345>
     c58:	65 70 74             	gs jo  ccf <stivale_hdr-0x1ff331>
     c5b:	69 6f 6e 5f 6d 65 73 	imul   ebp,DWORD PTR [rdi+0x6e],0x73656d5f
     c62:	73 61                	jae    cc5 <stivale_hdr-0x1ff33b>
     c64:	67 65 73 00          	addr32 gs jae c68 <stivale_hdr-0x1ff398>
     c68:	62 61                	(bad)  
     c6a:	73 65                	jae    cd1 <stivale_hdr-0x1ff32f>
     c6c:	4d 69 64 00 62 61 73 	imul   r12,QWORD PTR [r8+rax*1+0x62],0x4c657361
     c73:	65 4c 
     c75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c76:	77 00                	ja     c78 <stivale_hdr-0x1ff388>
     c78:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c79:	75 74                	jne    cef <stivale_hdr-0x1ff311>
     c7b:	62                   	(bad)  
     c7c:	00 6d 69             	add    BYTE PTR [rbp+0x69],ch
     c7f:	6c                   	ins    BYTE PTR es:[rdi],dx
     c80:	6c                   	ins    BYTE PTR es:[rdi],dx
     c81:	69 73 65 63 6f 6e 64 	imul   esi,DWORD PTR [rbx+0x65],0x646e6f63
     c88:	73 00                	jae    c8a <stivale_hdr-0x1ff376>
     c8a:	75 73                	jne    cff <stivale_hdr-0x1ff301>
     c8c:	65 72 00             	gs jb  c8f <stivale_hdr-0x1ff371>
     c8f:	5f                   	pop    rdi
     c90:	5f                   	pop    rdi
     c91:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
     c95:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     c97:	5f                   	pop    rdi
     c98:	73 79                	jae    d13 <stivale_hdr-0x1ff2ed>
     c9a:	6d                   	ins    DWORD PTR es:[rdi],dx
     c9b:	74 61                	je     cfe <stivale_hdr-0x1ff302>
     c9d:	62                   	(bad)  
     c9e:	00 70 61             	add    BYTE PTR [rax+0x61],dh
     ca1:	67 65 5f             	addr32 gs pop rdi
     ca4:	66 61                	data16 (bad) 
     ca6:	75 6c                	jne    d14 <stivale_hdr-0x1ff2ec>
     ca8:	74 5f                	je     d09 <stivale_hdr-0x1ff2f7>
     caa:	62                   	(bad)  
     cab:	69 74 00 4e 33 63 70 	imul   esi,DWORD PTR [rax+rax*1+0x4e],0x75706333
     cb2:	75 
     cb3:	33 69 64             	xor    ebp,DWORD PTR [rcx+0x64]
     cb6:	74 31                	je     ce9 <stivale_hdr-0x1ff317>
     cb8:	34 69                	xor    al,0x69
     cba:	64 74 5f             	fs je  d1c <stivale_hdr-0x1ff2e4>
     cbd:	64 65 73 63          	fs gs jae d24 <stivale_hdr-0x1ff2dc>
     cc1:	72 69                	jb     d2c <stivale_hdr-0x1ff2d4>
     cc3:	70 74                	jo     d39 <stivale_hdr-0x1ff2c7>
     cc5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc6:	72 45                	jb     d0d <stivale_hdr-0x1ff2f3>
     cc8:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
     ccb:	73 65                	jae    d32 <stivale_hdr-0x1ff2ce>
     ccd:	48 69 67 68 00 4e 33 	imul   rsp,QWORD PTR [rdi+0x68],0x63334e00
     cd4:	63 
     cd5:	70 75                	jo     d4c <stivale_hdr-0x1ff2b4>
     cd7:	33 69 64             	xor    ebp,DWORD PTR [rcx+0x64]
     cda:	74 37                	je     d13 <stivale_hdr-0x1ff2ed>
     cdc:	69 64 74 5f 70 74 72 	imul   esp,DWORD PTR [rsp+rsi*2+0x5f],0x45727470
     ce3:	45 
     ce4:	00 24 67             	add    BYTE PTR [rdi+riz*2],ah
     ce7:	65 74 5f             	gs je  d49 <stivale_hdr-0x1ff2b7>
     cea:	73 79                	jae    d65 <stivale_hdr-0x1ff29b>
     cec:	6d                   	ins    DWORD PTR es:[rdi],dx
     ced:	62                   	(bad)  
     cee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cef:	6c                   	ins    BYTE PTR es:[rdi],dx
     cf0:	5f                   	pop    rdi
     cf1:	6c                   	ins    BYTE PTR es:[rdi],dx
     cf2:	61                   	(bad)  
     cf3:	62                   	(bad)  
     cf4:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     cf6:	00 69 64             	add    BYTE PTR [rcx+0x64],ch
     cf9:	74 5f                	je     d5a <stivale_hdr-0x1ff2a6>
     cfb:	73 65                	jae    d62 <stivale_hdr-0x1ff29e>
     cfd:	74 00                	je     cff <stivale_hdr-0x1ff301>
     cff:	72 65                	jb     d66 <stivale_hdr-0x1ff29a>
     d01:	67 73 00             	addr32 jae d04 <stivale_hdr-0x1ff2fc>
     d04:	6b 61 73 6c          	imul   esp,DWORD PTR [rcx+0x73],0x6c
     d08:	72 5f                	jb     d69 <stivale_hdr-0x1ff297>
     d0a:	73 6c                	jae    d78 <stivale_hdr-0x1ff288>
     d0c:	69 64 65 00 36 73 79 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x6d797336
     d13:	6d 
     d14:	62                   	(bad)  
     d15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d16:	6c                   	ins    BYTE PTR es:[rdi],dx
     d17:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d1a:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
     d1e:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
     d21:	74 31                	je     d54 <stivale_hdr-0x1ff2ac>
     d23:	32 66 72             	xor    ah,BYTE PTR [rsi+0x72]
     d26:	65 71 75             	gs jno d9e <stivale_hdr-0x1ff262>
     d29:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     d2b:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
     d2e:	68 7a 45 00 69       	push   0x6900457a
     d33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d34:	74 65                	je     d9b <stivale_hdr-0x1ff265>
     d36:	72 72                	jb     daa <stivale_hdr-0x1ff256>
     d38:	75 70                	jne    daa <stivale_hdr-0x1ff256>
     d3a:	74 5f                	je     d9b <stivale_hdr-0x1ff265>
     d3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d3d:	75 6d                	jne    dac <stivale_hdr-0x1ff254>
     d3f:	62                   	(bad)  
     d40:	65 72 00             	gs jb  d43 <stivale_hdr-0x1ff2bd>
     d43:	65 78 63             	gs js  da9 <stivale_hdr-0x1ff257>
     d46:	65 70 74             	gs jo  dbd <stivale_hdr-0x1ff243>
     d49:	69 6f 6e 5f 68 61 6e 	imul   ebp,DWORD PTR [rdi+0x6e],0x6e61685f
     d50:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     d52:	65 72 00             	gs jb  d55 <stivale_hdr-0x1ff2ab>
     d55:	69 73 72 5f 68 61 6e 	imul   esi,DWORD PTR [rbx+0x72],0x6e61685f
     d5c:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     d5e:	65 72 00             	gs jb  d61 <stivale_hdr-0x1ff29f>
     d61:	5f                   	pop    rdi
     d62:	5a                   	pop    rdx
     d63:	4e                   	rex.WRX
     d64:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     d66:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     d68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d69:	72 79                	jb     de4 <stivale_hdr-0x1ff21c>
     d6b:	34 68                	xor    al,0x68
     d6d:	65 61                	gs (bad) 
     d6f:	70 31                	jo     da2 <stivale_hdr-0x1ff25e>
     d71:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
     d74:	61                   	(bad)  
     d75:	70 5f                	jo     dd6 <stivale_hdr-0x1ff22a>
     d77:	73 65                	jae    dde <stivale_hdr-0x1ff222>
     d79:	67 6d                	ins    DWORD PTR es:[edi],dx
     d7b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     d7d:	74 5f                	je     dde <stivale_hdr-0x1ff222>
     d7f:	68 65 61 64 65       	push   0x65646165
     d84:	72 31                	jb     db7 <stivale_hdr-0x1ff249>
     d86:	36 63 6f 6d          	movsxd ebp,DWORD PTR ss:[rdi+0x6d]
     d8a:	62                   	(bad)  
     d8b:	69 6e 65 5f 62 61 63 	imul   ebp,DWORD PTR [rsi+0x65],0x6361625f
     d92:	6b 77 61 72          	imul   esi,DWORD PTR [rdi+0x61],0x72
     d96:	64 45 76 00          	fs rex.RB jbe d9a <stivale_hdr-0x1ff266>
     d9a:	73 72                	jae    e0e <stivale_hdr-0x1ff1f2>
     d9c:	63 2f                	movsxd ebp,DWORD PTR [rdi]
     d9e:	6d                   	ins    DWORD PTR es:[rdi],dx
     d9f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     da1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     da2:	72 79                	jb     e1d <stivale_hdr-0x1ff1e3>
     da4:	2f                   	(bad)  
     da5:	68 65 61 70 2e       	push   0x2e706165
     daa:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
     dad:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     db0:	6d                   	ins    DWORD PTR es:[rdi],dx
     db1:	62                   	(bad)  
     db2:	69 6e 65 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x65],0x726f665f
     db9:	77 61                	ja     e1c <stivale_hdr-0x1ff1e4>
     dbb:	72 64                	jb     e21 <stivale_hdr-0x1ff1df>
     dbd:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     dc0:	6d                   	ins    DWORD PTR es:[rdi],dx
     dc1:	62                   	(bad)  
     dc2:	69 6e 65 5f 62 61 63 	imul   ebp,DWORD PTR [rsi+0x65],0x6361625f
     dc9:	6b 77 61 72          	imul   esi,DWORD PTR [rdi+0x61],0x72
     dcd:	64 00 68 65          	add    BYTE PTR fs:[rax+0x65],ch
     dd1:	61                   	(bad)  
     dd2:	70 5f                	jo     e33 <stivale_hdr-0x1ff1cd>
     dd4:	73 65                	jae    e3b <stivale_hdr-0x1ff1c5>
     dd6:	67 6d                	ins    DWORD PTR es:[edi],dx
     dd8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     dda:	74 5f                	je     e3b <stivale_hdr-0x1ff1c5>
     ddc:	68 65 61 64 65       	push   0x65646165
     de1:	72 00                	jb     de3 <stivale_hdr-0x1ff21d>
     de3:	68 65 61 70 5f       	push   0x5f706165
     de8:	73 74                	jae    e5e <stivale_hdr-0x1ff1a2>
     dea:	61                   	(bad)  
     deb:	72 74                	jb     e61 <stivale_hdr-0x1ff19f>
     ded:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     df0:	4e                   	rex.WRX
     df1:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     df3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     df5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     df6:	72 79                	jb     e71 <stivale_hdr-0x1ff18f>
     df8:	34 68                	xor    al,0x68
     dfa:	65 61                	gs (bad) 
     dfc:	70 34                	jo     e32 <stivale_hdr-0x1ff1ce>
     dfe:	66 72 65             	data16 jb e66 <stivale_hdr-0x1ff19a>
     e01:	65 45 50             	gs rex.RB push r8
     e04:	76 00                	jbe    e06 <stivale_hdr-0x1ff1fa>
     e06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e07:	65 77 5f             	gs ja  e69 <stivale_hdr-0x1ff197>
     e0a:	73 70                	jae    e7c <stivale_hdr-0x1ff184>
     e0c:	6c                   	ins    BYTE PTR es:[rdi],dx
     e0d:	69 74 5f 68 65 61 64 	imul   esi,DWORD PTR [rdi+rbx*2+0x68],0x65646165
     e14:	65 
     e15:	72 00                	jb     e17 <stivale_hdr-0x1ff1e9>
     e17:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
     e1e:	69 7a 65 5f 68 65 61 	imul   edi,DWORD PTR [rdx+0x65],0x6165685f
     e25:	70 00                	jo     e27 <stivale_hdr-0x1ff1d9>
     e27:	73 74                	jae    e9d <stivale_hdr-0x1ff163>
     e29:	61                   	(bad)  
     e2a:	72 74                	jb     ea0 <stivale_hdr-0x1ff160>
     e2c:	5f                   	pop    rdi
     e2d:	73 65                	jae    e94 <stivale_hdr-0x1ff16c>
     e2f:	67 6d                	ins    DWORD PTR es:[edi],dx
     e31:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e33:	74 00                	je     e35 <stivale_hdr-0x1ff1cb>
     e35:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     e38:	72 65                	jb     e9f <stivale_hdr-0x1ff161>
     e3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e3b:	74 5f                	je     e9c <stivale_hdr-0x1ff164>
     e3d:	73 65                	jae    ea4 <stivale_hdr-0x1ff15c>
     e3f:	67 6d                	ins    DWORD PTR es:[edi],dx
     e41:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e43:	74 00                	je     e45 <stivale_hdr-0x1ff1bb>
     e45:	66 72 65             	data16 jb ead <stivale_hdr-0x1ff153>
     e48:	65 00 68 65          	add    BYTE PTR gs:[rax+0x65],ch
     e4c:	61                   	(bad)  
     e4d:	70 5f                	jo     eae <stivale_hdr-0x1ff152>
     e4f:	6c                   	ins    BYTE PTR es:[rdi],dx
     e50:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e52:	67 74 68             	addr32 je ebd <stivale_hdr-0x1ff143>
     e55:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     e58:	4e                   	rex.WRX
     e59:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     e5b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     e5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e5e:	72 79                	jb     ed9 <stivale_hdr-0x1ff127>
     e60:	34 68                	xor    al,0x68
     e62:	65 61                	gs (bad) 
     e64:	70 36                	jo     e9c <stivale_hdr-0x1ff164>
     e66:	6d                   	ins    DWORD PTR es:[rdi],dx
     e67:	61                   	(bad)  
     e68:	6c                   	ins    BYTE PTR es:[rdi],dx
     e69:	6c                   	ins    BYTE PTR es:[rdi],dx
     e6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e6b:	63 45 6d             	movsxd eax,DWORD PTR [rbp+0x6d]
     e6e:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
     e71:	6c                   	ins    BYTE PTR es:[rdi],dx
     e72:	6c                   	ins    BYTE PTR es:[rdi],dx
     e73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e74:	63 00                	movsxd eax,DWORD PTR [rax]
     e76:	68 65 61 70 5f       	push   0x5f706165
     e7b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e7d:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     e81:	4e                   	rex.WRX
     e82:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     e84:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     e86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e87:	72 79                	jb     f02 <stivale_hdr-0x1ff0fe>
     e89:	34 68                	xor    al,0x68
     e8b:	65 61                	gs (bad) 
     e8d:	70 31                	jo     ec0 <stivale_hdr-0x1ff140>
     e8f:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
     e92:	61                   	(bad)  
     e93:	70 5f                	jo     ef4 <stivale_hdr-0x1ff10c>
     e95:	73 65                	jae    efc <stivale_hdr-0x1ff104>
     e97:	67 6d                	ins    DWORD PTR es:[edi],dx
     e99:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e9b:	74 5f                	je     efc <stivale_hdr-0x1ff104>
     e9d:	68 65 61 64 65       	push   0x65646165
     ea2:	72 35                	jb     ed9 <stivale_hdr-0x1ff127>
     ea4:	73 70                	jae    f16 <stivale_hdr-0x1ff0ea>
     ea6:	6c                   	ins    BYTE PTR es:[rdi],dx
     ea7:	69 74 45 6d 00 6c 61 	imul   esi,DWORD PTR [rbp+rax*2+0x6d],0x73616c00
     eae:	73 
     eaf:	74 00                	je     eb1 <stivale_hdr-0x1ff14f>
     eb1:	5f                   	pop    rdi
     eb2:	5a                   	pop    rdx
     eb3:	4e                   	rex.WRX
     eb4:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     eb6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     eb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     eb9:	72 79                	jb     f34 <stivale_hdr-0x1ff0cc>
     ebb:	34 68                	xor    al,0x68
     ebd:	65 61                	gs (bad) 
     ebf:	70 31                	jo     ef2 <stivale_hdr-0x1ff10e>
     ec1:	35 69 6e 69 74       	xor    eax,0x74696e69
     ec6:	69 61 6c 69 7a 65 5f 	imul   esp,DWORD PTR [rcx+0x6c],0x5f657a69
     ecd:	68 65 61 70 45       	push   0x45706165
     ed2:	50                   	push   rax
     ed3:	76 6d                	jbe    f42 <stivale_hdr-0x1ff0be>
     ed5:	00 74 68 69          	add    BYTE PTR [rax+rbp*2+0x69],dh
     ed9:	73 00                	jae    edb <stivale_hdr-0x1ff125>
     edb:	68 65 61 70 5f       	push   0x5f706165
     ee0:	61                   	(bad)  
     ee1:	64 64 72 65          	fs fs jb f4a <stivale_hdr-0x1ff0b6>
     ee5:	73 73                	jae    f5a <stivale_hdr-0x1ff0a6>
     ee7:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
     eea:	6c                   	ins    BYTE PTR es:[rdi],dx
     eeb:	69 74 53 65 67 4c 65 	imul   esi,DWORD PTR [rbx+rdx*2+0x65],0x6e654c67
     ef2:	6e 
     ef3:	67 74 68             	addr32 je f5e <stivale_hdr-0x1ff0a2>
     ef6:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
     ef9:	6c                   	ins    BYTE PTR es:[rdi],dx
     efa:	69 74 00 5f 5a 4e 36 	imul   esi,DWORD PTR [rax+rax*1+0x5f],0x6d364e5a
     f01:	6d 
     f02:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f05:	72 79                	jb     f80 <stivale_hdr-0x1ff080>
     f07:	34 68                	xor    al,0x68
     f09:	65 61                	gs (bad) 
     f0b:	70 31                	jo     f3e <stivale_hdr-0x1ff0c2>
     f0d:	39 68 65             	cmp    DWORD PTR [rax+0x65],ebp
     f10:	61                   	(bad)  
     f11:	70 5f                	jo     f72 <stivale_hdr-0x1ff08e>
     f13:	73 65                	jae    f7a <stivale_hdr-0x1ff086>
     f15:	67 6d                	ins    DWORD PTR es:[edi],dx
     f17:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     f19:	74 5f                	je     f7a <stivale_hdr-0x1ff086>
     f1b:	68 65 61 64 65       	push   0x65646165
     f20:	72 31                	jb     f53 <stivale_hdr-0x1ff0ad>
     f22:	35 63 6f 6d 62       	xor    eax,0x626d6f63
     f27:	69 6e 65 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x65],0x726f665f
     f2e:	77 61                	ja     f91 <stivale_hdr-0x1ff06f>
     f30:	72 64                	jb     f96 <stivale_hdr-0x1ff06a>
     f32:	45 76 00             	rex.RB jbe f35 <stivale_hdr-0x1ff0cb>
     f35:	73 70                	jae    fa7 <stivale_hdr-0x1ff059>
     f37:	6c                   	ins    BYTE PTR es:[rdi],dx
     f38:	69 74 5f 6c 65 6e 67 	imul   esi,DWORD PTR [rdi+rbx*2+0x6c],0x74676e65
     f3f:	74 
     f40:	68 00 6e 65 78       	push   0x78656e00
     f45:	74 00                	je     f47 <stivale_hdr-0x1ff0b9>
     f47:	66 72 65             	data16 jb faf <stivale_hdr-0x1ff051>
     f4a:	65 5f                	gs pop rdi
     f4c:	6d                   	ins    DWORD PTR es:[rdi],dx
     f4d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f50:	72 79                	jb     fcb <stivale_hdr-0x1ff035>
     f52:	5f                   	pop    rdi
     f53:	73 69                	jae    fbe <stivale_hdr-0x1ff042>
     f55:	7a 65                	jp     fbc <stivale_hdr-0x1ff044>
     f57:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f5a:	4e                   	rex.WRX
     f5b:	36 6d                	ss ins DWORD PTR es:[rdi],dx
     f5d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f60:	72 79                	jb     fdb <stivale_hdr-0x1ff025>
     f62:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
     f65:	6d                   	ins    DWORD PTR es:[rdi],dx
     f66:	31 30                	xor    DWORD PTR [rax],esi
     f68:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
     f6f:	69 7a 65 45 50 31 38 	imul   edi,DWORD PTR [rdx+0x65],0x38315045
     f76:	73 74                	jae    fec <stivale_hdr-0x1ff014>
     f78:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
     f7f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f82:	72 79                	jb     ffd <stivale_hdr-0x1ff003>
     f84:	5f                   	pop    rdi
     f85:	6d                   	ins    DWORD PTR es:[rdi],dx
     f86:	61                   	(bad)  
     f87:	70 6d                	jo     ff6 <stivale_hdr-0x1ff00a>
     f89:	6d                   	ins    DWORD PTR es:[rdi],dx
     f8a:	00 6c 61 72          	add    BYTE PTR [rcx+riz*2+0x72],ch
     f8e:	67 65 73 74          	addr32 gs jae 1006 <stivale_hdr-0x1feffa>
     f92:	5f                   	pop    rdi
     f93:	66 72 65             	data16 jb ffb <stivale_hdr-0x1ff005>
     f96:	65 5f                	gs pop rdi
     f98:	6d                   	ins    DWORD PTR es:[rdi],dx
     f99:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     f9b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f9c:	72 79                	jb     1017 <stivale_hdr-0x1fefe9>
     f9e:	5f                   	pop    rdi
     f9f:	73 65                	jae    1006 <stivale_hdr-0x1feffa>
     fa1:	67 6d                	ins    DWORD PTR es:[edi],dx
     fa3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     fa5:	74 5f                	je     1006 <stivale_hdr-0x1feffa>
     fa7:	73 69                	jae    1012 <stivale_hdr-0x1fefee>
     fa9:	7a 65                	jp     1010 <stivale_hdr-0x1feff0>
     fab:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
     fae:	69 74 5f 62 69 74 6d 	imul   esi,DWORD PTR [rdi+rbx*2+0x62],0x616d7469
     fb5:	61 
     fb6:	70 00                	jo     fb8 <stivale_hdr-0x1ff048>
     fb8:	6c                   	ins    BYTE PTR es:[rdi],dx
     fb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fba:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     fbd:	70 61                	jo     1020 <stivale_hdr-0x1fefe0>
     fbf:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
     fc4:	31 32                	xor    DWORD PTR [rdx],esi
     fc6:	6d                   	ins    DWORD PTR es:[rdi],dx
     fc7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     fc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fca:	72 79                	jb     1045 <stivale_hdr-0x1fefbb>
     fcc:	5f                   	pop    rdi
     fcd:	74 79                	je     1048 <stivale_hdr-0x1fefb8>
     fcf:	70 65                	jo     1036 <stivale_hdr-0x1fefca>
     fd1:	73 74                	jae    1047 <stivale_hdr-0x1fefb9>
     fd3:	00 70 61             	add    BYTE PTR [rax+0x61],dh
     fd6:	67 65 5f             	addr32 gs pop rdi
     fd9:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     fdc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fdd:	74 00                	je     fdf <stivale_hdr-0x1ff021>
     fdf:	70 61                	jo     1042 <stivale_hdr-0x1fefbe>
     fe1:	67 65 43 6f          	rex.XB outs dx,DWORD PTR gs:[esi]
     fe5:	75 6e                	jne    1055 <stivale_hdr-0x1fefab>
     fe7:	74 00                	je     fe9 <stivale_hdr-0x1ff017>
     fe9:	6c                   	ins    BYTE PTR es:[rdi],dx
     fea:	61                   	(bad)  
     feb:	72 67                	jb     1054 <stivale_hdr-0x1fefac>
     fed:	65 73 74             	gs jae 1064 <stivale_hdr-0x1fef9c>
     ff0:	5f                   	pop    rdi
     ff1:	66 72 65             	data16 jb 1059 <stivale_hdr-0x1fefa7>
     ff4:	65 5f                	gs pop rdi
     ff6:	6d                   	ins    DWORD PTR es:[rdi],dx
     ff7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     ff9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ffa:	72 79                	jb     1075 <stivale_hdr-0x1fef8b>
     ffc:	5f                   	pop    rdi
     ffd:	73 65                	jae    1064 <stivale_hdr-0x1fef9c>
     fff:	67 6d                	ins    DWORD PTR es:[edi],dx
    1001:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1003:	74 00                	je     1005 <stivale_hdr-0x1feffb>
    1005:	5f                   	pop    rdi
    1006:	5a                   	pop    rdx
    1007:	4e                   	rex.WRX
    1008:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    100a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    100c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    100d:	72 79                	jb     1088 <stivale_hdr-0x1fef78>
    100f:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
    1012:	6d                   	ins    DWORD PTR es:[rdi],dx
    1013:	32 31                	xor    dh,BYTE PTR [rcx]
    1015:	67 65 74 5f          	addr32 gs je 1078 <stivale_hdr-0x1fef88>
    1019:	74 6f                	je     108a <stivale_hdr-0x1fef76>
    101b:	74 61                	je     107e <stivale_hdr-0x1fef82>
    101d:	6c                   	ins    BYTE PTR es:[rdi],dx
    101e:	5f                   	pop    rdi
    101f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1020:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1022:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1023:	72 79                	jb     109e <stivale_hdr-0x1fef62>
    1025:	5f                   	pop    rdi
    1026:	73 69                	jae    1091 <stivale_hdr-0x1fef6f>
    1028:	7a 65                	jp     108f <stivale_hdr-0x1fef71>
    102a:	45 50                	rex.RB push r8
    102c:	31 38                	xor    DWORD PTR [rax],edi
    102e:	73 74                	jae    10a4 <stivale_hdr-0x1fef5c>
    1030:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
    1037:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1039:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    103a:	72 79                	jb     10b5 <stivale_hdr-0x1fef4b>
    103c:	5f                   	pop    rdi
    103d:	6d                   	ins    DWORD PTR es:[rdi],dx
    103e:	61                   	(bad)  
    103f:	70 6d                	jo     10ae <stivale_hdr-0x1fef52>
    1041:	6d                   	ins    DWORD PTR es:[rdi],dx
    1042:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    1045:	65 65 5f             	gs gs pop rdi
    1048:	70 61                	jo     10ab <stivale_hdr-0x1fef55>
    104a:	67 65 00 64 65 73    	add    BYTE PTR gs:[ebp+eiz*2+0x73],ah
    1050:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    1053:	69 7a 65 00 5f 5a 4e 	imul   edi,DWORD PTR [rdx+0x65],0x4e5a5f00
    105a:	34 75                	xor    al,0x75
    105c:	74 69                	je     10c7 <stivale_hdr-0x1fef39>
    105e:	6c                   	ins    BYTE PTR es:[rdi],dx
    105f:	36 62                	ss (bad) 
    1061:	69 74 6d 61 70 69 78 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x45786970
    1068:	45 
    1069:	6d                   	ins    DWORD PTR es:[rdi],dx
    106a:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    106d:	71 75                	jno    10e4 <stivale_hdr-0x1fef1c>
    106f:	65 73 74             	gs jae 10e6 <stivale_hdr-0x1fef1a>
    1072:	5f                   	pop    rdi
    1073:	70 61                	jo     10d6 <stivale_hdr-0x1fef2a>
    1075:	67 65 73 00          	addr32 gs jae 1079 <stivale_hdr-0x1fef87>
    1079:	73 74                	jae    10ef <stivale_hdr-0x1fef11>
    107b:	69 76 61 6c 65 5f 6d 	imul   esi,DWORD PTR [rsi+0x61],0x6d5f656c
    1082:	6d                   	ins    DWORD PTR es:[rdi],dx
    1083:	61                   	(bad)  
    1084:	70 5f                	jo     10e5 <stivale_hdr-0x1fef1b>
    1086:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1088:	74 72                	je     10fc <stivale_hdr-0x1fef04>
    108a:	79 00                	jns    108c <stivale_hdr-0x1fef74>
    108c:	76 61                	jbe    10ef <stivale_hdr-0x1fef11>
    108e:	64 64 72 65          	fs fs jb 10f7 <stivale_hdr-0x1fef09>
    1092:	73 73                	jae    1107 <stivale_hdr-0x1feef9>
    1094:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1097:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
    109e:	65 
    109f:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    10a3:	4e                   	rex.WRX
    10a4:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    10a6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    10a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10a9:	72 79                	jb     1124 <stivale_hdr-0x1feedc>
    10ab:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
    10ae:	6d                   	ins    DWORD PTR es:[rdi],dx
    10af:	31 36                	xor    DWORD PTR [rsi],esi
    10b1:	66 72 65             	data16 jb 1119 <stivale_hdr-0x1feee7>
    10b4:	65 5f                	gs pop rdi
    10b6:	6d                   	ins    DWORD PTR es:[rdi],dx
    10b7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    10b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10ba:	72 79                	jb     1135 <stivale_hdr-0x1feecb>
    10bc:	5f                   	pop    rdi
    10bd:	73 69                	jae    1128 <stivale_hdr-0x1feed8>
    10bf:	7a 65                	jp     1126 <stivale_hdr-0x1feeda>
    10c1:	45 00 72 65          	add    BYTE PTR [r10+0x65],r14b
    10c5:	73 65                	jae    112c <stivale_hdr-0x1feed4>
    10c7:	72 76                	jb     113f <stivale_hdr-0x1feec1>
    10c9:	65 64 5f             	gs fs pop rdi
    10cc:	6d                   	ins    DWORD PTR es:[rdi],dx
    10cd:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    10cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10d0:	72 79                	jb     114b <stivale_hdr-0x1feeb5>
    10d2:	5f                   	pop    rdi
    10d3:	73 69                	jae    113e <stivale_hdr-0x1feec2>
    10d5:	7a 65                	jp     113c <stivale_hdr-0x1feec4>
    10d7:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
    10da:	6d                   	ins    DWORD PTR es:[rdi],dx
    10db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10dc:	72 79                	jb     1157 <stivale_hdr-0x1feea9>
    10de:	5f                   	pop    rdi
    10df:	74 79                	je     115a <stivale_hdr-0x1feea6>
    10e1:	70 65                	jo     1148 <stivale_hdr-0x1feeb8>
    10e3:	73 00                	jae    10e5 <stivale_hdr-0x1fef1b>
    10e5:	70 61                	jo     1148 <stivale_hdr-0x1feeb8>
    10e7:	67 65 5f             	addr32 gs pop rdi
    10ea:	62                   	(bad)  
    10eb:	69 74 6d 61 70 5f 6d 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x616d5f70
    10f2:	61 
    10f3:	70 00                	jo     10f5 <stivale_hdr-0x1fef0b>
    10f5:	73 74                	jae    116b <stivale_hdr-0x1fee95>
    10f7:	61                   	(bad)  
    10f8:	72 74                	jb     116e <stivale_hdr-0x1fee92>
    10fa:	5f                   	pop    rdi
    10fb:	70 74                	jo     1171 <stivale_hdr-0x1fee8f>
    10fd:	72 00                	jb     10ff <stivale_hdr-0x1fef01>
    10ff:	72 65                	jb     1166 <stivale_hdr-0x1fee9a>
    1101:	71 75                	jno    1178 <stivale_hdr-0x1fee88>
    1103:	65 73 74             	gs jae 117a <stivale_hdr-0x1fee86>
    1106:	5f                   	pop    rdi
    1107:	70 61                	jo     116a <stivale_hdr-0x1fee96>
    1109:	67 65 00 75 73       	add    BYTE PTR gs:[ebp+0x73],dh
    110e:	65 64 5f             	gs fs pop rdi
    1111:	6d                   	ins    DWORD PTR es:[rdi],dx
    1112:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1114:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1115:	72 79                	jb     1190 <stivale_hdr-0x1fee70>
    1117:	5f                   	pop    rdi
    1118:	73 69                	jae    1183 <stivale_hdr-0x1fee7d>
    111a:	7a 65                	jp     1181 <stivale_hdr-0x1fee7f>
    111c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    111f:	4e 34 75             	rex.WRX xor al,0x75
    1122:	74 69                	je     118d <stivale_hdr-0x1fee73>
    1124:	6c                   	ins    BYTE PTR es:[rdi],dx
    1125:	36 62                	ss (bad) 
    1127:	69 74 6d 61 70 33 67 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x65673370
    112e:	65 
    112f:	74 45                	je     1176 <stivale_hdr-0x1fee8a>
    1131:	6d                   	ins    DWORD PTR es:[rdi],dx
    1132:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    1135:	75 73                	jne    11aa <stivale_hdr-0x1fee56>
    1137:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    113c:	4e                   	rex.WRX
    113d:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    113f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1141:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1142:	72 79                	jb     11bd <stivale_hdr-0x1fee43>
    1144:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
    1147:	6d                   	ins    DWORD PTR es:[rdi],dx
    1148:	31 37                	xor    DWORD PTR [rdi],esi
    114a:	74 6f                	je     11bb <stivale_hdr-0x1fee45>
    114c:	74 61                	je     11af <stivale_hdr-0x1fee51>
    114e:	6c                   	ins    BYTE PTR es:[rdi],dx
    114f:	5f                   	pop    rdi
    1150:	6d                   	ins    DWORD PTR es:[rdi],dx
    1151:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1153:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1154:	72 79                	jb     11cf <stivale_hdr-0x1fee31>
    1156:	5f                   	pop    rdi
    1157:	73 69                	jae    11c2 <stivale_hdr-0x1fee3e>
    1159:	7a 65                	jp     11c0 <stivale_hdr-0x1fee40>
    115b:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    115f:	31 31                	xor    DWORD PTR [rcx],esi
    1161:	69 6e 69 74 5f 62 69 	imul   ebp,DWORD PTR [rsi+0x69],0x69625f74
    1168:	74 6d                	je     11d7 <stivale_hdr-0x1fee29>
    116a:	61                   	(bad)  
    116b:	70 6d                	jo     11da <stivale_hdr-0x1fee26>
    116d:	50                   	push   rax
    116e:	76 00                	jbe    1170 <stivale_hdr-0x1fee90>
    1170:	6c                   	ins    BYTE PTR es:[rdi],dx
    1171:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1172:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    1175:	70 61                	jo     11d8 <stivale_hdr-0x1fee28>
    1177:	67 65 73 00          	addr32 gs jae 117b <stivale_hdr-0x1fee85>
    117b:	67 65 74 5f          	addr32 gs je 11de <stivale_hdr-0x1fee22>
    117f:	74 6f                	je     11f0 <stivale_hdr-0x1fee10>
    1181:	74 61                	je     11e4 <stivale_hdr-0x1fee1c>
    1183:	6c                   	ins    BYTE PTR es:[rdi],dx
    1184:	5f                   	pop    rdi
    1185:	6d                   	ins    DWORD PTR es:[rdi],dx
    1186:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1189:	72 79                	jb     1204 <stivale_hdr-0x1fedfc>
    118b:	5f                   	pop    rdi
    118c:	73 69                	jae    11f7 <stivale_hdr-0x1fee09>
    118e:	7a 65                	jp     11f5 <stivale_hdr-0x1fee0b>
    1190:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    1193:	65 65 5f             	gs gs pop rdi
    1196:	70 61                	jo     11f9 <stivale_hdr-0x1fee07>
    1198:	67 65 73 00          	addr32 gs jae 119c <stivale_hdr-0x1fee64>
    119c:	73 72                	jae    1210 <stivale_hdr-0x1fedf0>
    119e:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    11a0:	6d                   	ins    DWORD PTR es:[rdi],dx
    11a1:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    11a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11a4:	72 79                	jb     121f <stivale_hdr-0x1fede1>
    11a6:	2f                   	(bad)  
    11a7:	70 6d                	jo     1216 <stivale_hdr-0x1fedea>
    11a9:	6d                   	ins    DWORD PTR es:[rdi],dx
    11aa:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    11ae:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    11b1:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
    11b8:	65 
    11b9:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    11bc:	67 65 5f             	addr32 gs pop rdi
    11bf:	70 74                	jo     1235 <stivale_hdr-0x1fedcb>
    11c1:	72 00                	jb     11c3 <stivale_hdr-0x1fee3d>
    11c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    11c4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    11c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11c7:	72 79                	jb     1242 <stivale_hdr-0x1fedbe>
    11c9:	5f                   	pop    rdi
    11ca:	73 69                	jae    1235 <stivale_hdr-0x1fedcb>
    11cc:	7a 65                	jp     1233 <stivale_hdr-0x1fedcd>
    11ce:	5f                   	pop    rdi
    11cf:	62                   	(bad)  
    11d0:	79 74                	jns    1246 <stivale_hdr-0x1fedba>
    11d2:	65 73 00             	gs jae 11d5 <stivale_hdr-0x1fee2b>
    11d5:	5f                   	pop    rdi
    11d6:	5a                   	pop    rdx
    11d7:	31 35 75 6e 72 65    	xor    DWORD PTR [rip+0x65726e75],esi        # 65728052 <__kernel_end+0x65516052>
    11dd:	73 65                	jae    1244 <stivale_hdr-0x1fedbc>
    11df:	72 76                	jb     1257 <stivale_hdr-0x1feda9>
    11e1:	65 5f                	gs pop rdi
    11e3:	70 61                	jo     1246 <stivale_hdr-0x1fedba>
    11e5:	67 65 73 50          	addr32 gs jae 1239 <stivale_hdr-0x1fedc7>
    11e9:	76 6d                	jbe    1258 <stivale_hdr-0x1feda8>
    11eb:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    11ee:	72 65                	jb     1255 <stivale_hdr-0x1fedab>
    11f0:	73 65                	jae    1257 <stivale_hdr-0x1feda9>
    11f2:	72 76                	jb     126a <stivale_hdr-0x1fed96>
    11f4:	65 5f                	gs pop rdi
    11f6:	70 61                	jo     1259 <stivale_hdr-0x1feda7>
    11f8:	67 65 73 00          	addr32 gs jae 11fc <stivale_hdr-0x1fee04>
    11fc:	62                   	(bad)  
    11fd:	69 74 6d 61 70 5f 73 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x69735f70
    1204:	69 
    1205:	7a 65                	jp     126c <stivale_hdr-0x1fed94>
    1207:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    120a:	4e 34 75             	rex.WRX xor al,0x75
    120d:	74 69                	je     1278 <stivale_hdr-0x1fed88>
    120f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1210:	36 62                	ss (bad) 
    1212:	69 74 6d 61 70 33 73 	imul   esi,DWORD PTR [rbp+rbp*2+0x61],0x65733370
    1219:	65 
    121a:	74 45                	je     1261 <stivale_hdr-0x1fed9f>
    121c:	6d                   	ins    DWORD PTR es:[rdi],dx
    121d:	62                   	(bad)  
    121e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1221:	4e                   	rex.WRX
    1222:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    1224:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1226:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1227:	72 79                	jb     12a2 <stivale_hdr-0x1fed5e>
    1229:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
    122c:	6d                   	ins    DWORD PTR es:[rdi],dx
    122d:	32 30                	xor    dh,BYTE PTR [rax]
    122f:	72 65                	jb     1296 <stivale_hdr-0x1fed6a>
    1231:	73 65                	jae    1298 <stivale_hdr-0x1fed68>
    1233:	72 76                	jb     12ab <stivale_hdr-0x1fed55>
    1235:	65 64 5f             	gs fs pop rdi
    1238:	6d                   	ins    DWORD PTR es:[rdi],dx
    1239:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    123b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123c:	72 79                	jb     12b7 <stivale_hdr-0x1fed49>
    123e:	5f                   	pop    rdi
    123f:	73 69                	jae    12aa <stivale_hdr-0x1fed56>
    1241:	7a 65                	jp     12a8 <stivale_hdr-0x1fed58>
    1243:	45 00 6f 70          	add    BYTE PTR [r15+0x70],r13b
    1247:	65 72 61             	gs jb  12ab <stivale_hdr-0x1fed55>
    124a:	74 6f                	je     12bb <stivale_hdr-0x1fed45>
    124c:	72 5b                	jb     12a9 <stivale_hdr-0x1fed57>
    124e:	5d                   	pop    rbp
    124f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1252:	31 34 75 6e 72 65 73 	xor    DWORD PTR [rsi*2+0x7365726e],esi
    1259:	65 72 76             	gs jb  12d2 <stivale_hdr-0x1fed2e>
    125c:	65 5f                	gs pop rdi
    125e:	70 61                	jo     12c1 <stivale_hdr-0x1fed3f>
    1260:	67 65 50             	addr32 gs push rax
    1263:	76 00                	jbe    1265 <stivale_hdr-0x1fed9b>
    1265:	75 6e                	jne    12d5 <stivale_hdr-0x1fed2b>
    1267:	72 65                	jb     12ce <stivale_hdr-0x1fed32>
    1269:	73 65                	jae    12d0 <stivale_hdr-0x1fed30>
    126b:	72 76                	jb     12e3 <stivale_hdr-0x1fed1d>
    126d:	65 5f                	gs pop rdi
    126f:	70 61                	jo     12d2 <stivale_hdr-0x1fed2e>
    1271:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    1276:	4e                   	rex.WRX
    1277:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    1279:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    127b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    127c:	72 79                	jb     12f7 <stivale_hdr-0x1fed09>
    127e:	33 70 6d             	xor    esi,DWORD PTR [rax+0x6d]
    1281:	6d                   	ins    DWORD PTR es:[rdi],dx
    1282:	31 36                	xor    DWORD PTR [rsi],esi
    1284:	75 73                	jne    12f9 <stivale_hdr-0x1fed07>
    1286:	65 64 5f             	gs fs pop rdi
    1289:	6d                   	ins    DWORD PTR es:[rdi],dx
    128a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    128c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    128d:	72 79                	jb     1308 <stivale_hdr-0x1fecf8>
    128f:	5f                   	pop    rdi
    1290:	73 69                	jae    12fb <stivale_hdr-0x1fed05>
    1292:	7a 65                	jp     12f9 <stivale_hdr-0x1fed07>
    1294:	45 00 6f 70          	add    BYTE PTR [r15+0x70],r13b
    1298:	65 72 61             	gs jb  12fc <stivale_hdr-0x1fed04>
    129b:	74 69                	je     1306 <stivale_hdr-0x1fecfa>
    129d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    129f:	73 00                	jae    12a1 <stivale_hdr-0x1fed5f>
    12a1:	73 72                	jae    1315 <stivale_hdr-0x1feceb>
    12a3:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    12a5:	6d                   	ins    DWORD PTR es:[rdi],dx
    12a6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a9:	72 79                	jb     1324 <stivale_hdr-0x1fecdc>
    12ab:	2f                   	(bad)  
    12ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ad:	70 65                	jo     1314 <stivale_hdr-0x1fecec>
    12af:	72 61                	jb     1312 <stivale_hdr-0x1fecee>
    12b1:	74 69                	je     131c <stivale_hdr-0x1fece4>
    12b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12b5:	73 2e                	jae    12e5 <stivale_hdr-0x1fed1b>
    12b7:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    12ba:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    12bd:	4e                   	rex.WRX
    12be:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    12c0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12c3:	72 79                	jb     133e <stivale_hdr-0x1fecc2>
    12c5:	31 30                	xor    DWORD PTR [rax],esi
    12c7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12c8:	70 65                	jo     132f <stivale_hdr-0x1fecd1>
    12ca:	72 61                	jb     132d <stivale_hdr-0x1fecd3>
    12cc:	74 69                	je     1337 <stivale_hdr-0x1fecc9>
    12ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12d0:	73 36                	jae    1308 <stivale_hdr-0x1fecf8>
    12d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    12d3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12d5:	73 65                	jae    133c <stivale_hdr-0x1fecc4>
    12d7:	74 45                	je     131e <stivale_hdr-0x1fece2>
    12d9:	50                   	push   rax
    12da:	76 68                	jbe    1344 <stivale_hdr-0x1fecbc>
    12dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    12dd:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
    12e0:	66 70 74             	data16 jo 1357 <stivale_hdr-0x1feca9>
    12e3:	72 00                	jb     12e5 <stivale_hdr-0x1fed1b>
    12e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    12e6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12e8:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    12eb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    12ee:	4e                   	rex.WRX
    12ef:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    12f1:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    12f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12f4:	72 79                	jb     136f <stivale_hdr-0x1fec91>
    12f6:	31 30                	xor    DWORD PTR [rax],esi
    12f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12f9:	70 65                	jo     1360 <stivale_hdr-0x1feca0>
    12fb:	72 61                	jb     135e <stivale_hdr-0x1feca2>
    12fd:	74 69                	je     1368 <stivale_hdr-0x1fec98>
    12ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1300:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1301:	73 36                	jae    1339 <stivale_hdr-0x1fecc7>
    1303:	6d                   	ins    DWORD PTR es:[rdi],dx
    1304:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1306:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1309:	45 50                	rex.RB push r8
    130b:	76 50                	jbe    135d <stivale_hdr-0x1feca3>
    130d:	4b 76 6d             	rex.WXB jbe 137d <stivale_hdr-0x1fec83>
    1310:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1313:	4e                   	rex.WRX
    1314:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    1316:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1318:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1319:	72 79                	jb     1394 <stivale_hdr-0x1fec6c>
    131b:	36 70 61             	ss jo  137f <stivale_hdr-0x1fec81>
    131e:	67 69 6e 67 31 30 6d 	imul   ebp,DWORD PTR [esi+0x67],0x616d3031
    1325:	61 
    1326:	70 5f                	jo     1387 <stivale_hdr-0x1fec79>
    1328:	6d                   	ins    DWORD PTR es:[rdi],dx
    1329:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    132b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    132c:	72 79                	jb     13a7 <stivale_hdr-0x1fec59>
    132e:	45 50                	rex.RB push r8
    1330:	76 53                	jbe    1385 <stivale_hdr-0x1fec7b>
    1332:	31 5f 62             	xor    DWORD PTR [rdi+0x62],ebx
    1335:	00 76 69             	add    BYTE PTR [rsi+0x69],dh
    1338:	72 74                	jb     13ae <stivale_hdr-0x1fec52>
    133a:	75 61                	jne    139d <stivale_hdr-0x1fec63>
    133c:	6c                   	ins    BYTE PTR es:[rdi],dx
    133d:	5f                   	pop    rdi
    133e:	61                   	(bad)  
    133f:	64 64 72 65          	fs fs jb 13a8 <stivale_hdr-0x1fec58>
    1343:	73 73                	jae    13b8 <stivale_hdr-0x1fec48>
    1345:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    1348:	74 5f                	je     13a9 <stivale_hdr-0x1fec57>
    134a:	70 68                	jo     13b4 <stivale_hdr-0x1fec4c>
    134c:	79 73                	jns    13c1 <stivale_hdr-0x1fec3f>
    134e:	69 63 61 6c 5f 61 64 	imul   esp,DWORD PTR [rbx+0x61],0x64615f6c
    1355:	64 72 65             	fs jb  13bd <stivale_hdr-0x1fec43>
    1358:	73 73                	jae    13cd <stivale_hdr-0x1fec33>
    135a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    135d:	4e                   	rex.WRX
    135e:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    1360:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1362:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1363:	72 79                	jb     13de <stivale_hdr-0x1fec22>
    1365:	36 70 61             	ss jo  13c9 <stivale_hdr-0x1fec37>
    1368:	67 69 6e 67 31 36 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703631
    136f:	61 
    1370:	67 65 5f             	addr32 gs pop rdi
    1373:	6d                   	ins    DWORD PTR es:[rdi],dx
    1374:	61                   	(bad)  
    1375:	70 5f                	jo     13d6 <stivale_hdr-0x1fec2a>
    1377:	69 6e 64 65 78 65 72 	imul   ebp,DWORD PTR [rsi+0x64],0x72657865
    137e:	43 32 45 6d          	rex.XB xor al,BYTE PTR [r13+0x6d]
    1382:	00 70 64             	add    BYTE PTR [rax+0x64],dh
    1385:	70 5f                	jo     13e6 <stivale_hdr-0x1fec1a>
    1387:	69 00 71 75 69 63    	imul   eax,DWORD PTR [rax],0x63697571
    138d:	6b 77 72 69          	imul   esi,DWORD PTR [rdi+0x72],0x69
    1391:	74 65                	je     13f8 <stivale_hdr-0x1fec08>
    1393:	00 70 68             	add    BYTE PTR [rax+0x68],dh
    1396:	79 73                	jns    140b <stivale_hdr-0x1febf5>
    1398:	69 63 61 6c 5f 6d 65 	imul   esp,DWORD PTR [rbx+0x61],0x656d5f6c
    139f:	6d                   	ins    DWORD PTR es:[rdi],dx
    13a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13a1:	72 79                	jb     141c <stivale_hdr-0x1febe4>
    13a3:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
    13a6:	74 5f                	je     1407 <stivale_hdr-0x1febf9>
    13a8:	73 65                	jae    140f <stivale_hdr-0x1febf1>
    13aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    13ab:	65 63 74 6f 72       	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
    13b0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    13b3:	4e                   	rex.WRX
    13b4:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    13b6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    13b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b9:	72 79                	jb     1434 <stivale_hdr-0x1febcc>
    13bb:	36 70 61             	ss jo  141f <stivale_hdr-0x1febe1>
    13be:	67 69 6e 67 32 30 67 	imul   ebp,DWORD PTR [esi+0x67],0x65673032
    13c5:	65 
    13c6:	74 5f                	je     1427 <stivale_hdr-0x1febd9>
    13c8:	70 68                	jo     1432 <stivale_hdr-0x1febce>
    13ca:	79 73                	jns    143f <stivale_hdr-0x1febc1>
    13cc:	69 63 61 6c 5f 61 64 	imul   esp,DWORD PTR [rbx+0x61],0x64615f6c
    13d3:	64 72 65             	fs jb  143b <stivale_hdr-0x1febc5>
    13d6:	73 73                	jae    144b <stivale_hdr-0x1febb5>
    13d8:	45 50                	rex.RB push r8
    13da:	76 00                	jbe    13dc <stivale_hdr-0x1fec24>
    13dc:	70 61                	jo     143f <stivale_hdr-0x1febc1>
    13de:	67 65 5f             	addr32 gs pop rdi
    13e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    13e2:	61                   	(bad)  
    13e3:	70 5f                	jo     1444 <stivale_hdr-0x1febbc>
    13e5:	69 6e 64 65 78 65 72 	imul   ebp,DWORD PTR [rsi+0x64],0x72657865
    13ec:	00 76 69             	add    BYTE PTR [rsi+0x69],dh
    13ef:	72 74                	jb     1465 <stivale_hdr-0x1feb9b>
    13f1:	75 61                	jne    1454 <stivale_hdr-0x1febac>
    13f3:	6c                   	ins    BYTE PTR es:[rdi],dx
    13f4:	5f                   	pop    rdi
    13f5:	6d                   	ins    DWORD PTR es:[rdi],dx
    13f6:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    13f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13f9:	72 79                	jb     1474 <stivale_hdr-0x1feb8c>
    13fb:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
    13fe:	70 5f                	jo     145f <stivale_hdr-0x1feba1>
    1400:	6d                   	ins    DWORD PTR es:[rdi],dx
    1401:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1403:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1404:	72 79                	jb     147f <stivale_hdr-0x1feb81>
    1406:	00 70 74             	add    BYTE PTR [rax+0x74],dh
    1409:	5f                   	pop    rdi
    140a:	69 00 61 64 64 72    	imul   eax,DWORD PTR [rax],0x72646461
    1410:	65 73 73             	gs jae 1486 <stivale_hdr-0x1feb7a>
    1413:	5f                   	pop    rdi
    1414:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1415:	66 66 73 65          	data16 data16 jae 147e <stivale_hdr-0x1feb82>
    1419:	74 00                	je     141b <stivale_hdr-0x1febe5>
    141b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    141d:	61                   	(bad)  
    141e:	62                   	(bad)  
    141f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1420:	65 64 00 70 64       	gs add BYTE PTR fs:[rax+0x64],dh
    1425:	5f                   	pop    rdi
    1426:	69 00 73 72 63 2f    	imul   eax,DWORD PTR [rax],0x2f637273
    142c:	6d                   	ins    DWORD PTR es:[rdi],dx
    142d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    142f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1430:	72 79                	jb     14ab <stivale_hdr-0x1feb55>
    1432:	2f                   	(bad)  
    1433:	70 61                	jo     1496 <stivale_hdr-0x1feb6a>
    1435:	67 69 6e 67 2e 63 70 	imul   ebp,DWORD PTR [esi+0x67],0x7070632e
    143c:	70 
    143d:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    1440:	64 64 72 65          	fs fs jb 14a9 <stivale_hdr-0x1feb57>
    1444:	73 73                	jae    14b9 <stivale_hdr-0x1feb47>
    1446:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1449:	4e                   	rex.WRX
    144a:	36 6d                	ss ins DWORD PTR es:[rdi],dx
    144c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    144e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    144f:	72 79                	jb     14ca <stivale_hdr-0x1feb36>
    1451:	36 70 61             	ss jo  14b5 <stivale_hdr-0x1feb4b>
    1454:	67 69 6e 67 31 36 70 	imul   ebp,DWORD PTR [esi+0x67],0x61703631
    145b:	61 
    145c:	67 65 5f             	addr32 gs pop rdi
    145f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1460:	61                   	(bad)  
    1461:	70 5f                	jo     14c2 <stivale_hdr-0x1feb3e>
    1463:	69 6e 64 65 78 65 72 	imul   ebp,DWORD PTR [rsi+0x64],0x72657865
    146a:	43 34 45             	rex.XB xor al,0x45
    146d:	6d                   	ins    DWORD PTR es:[rdi],dx
    146e:	00 64 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ah
    1472:	61                   	(bad)  
    1473:	74 65                	je     14da <stivale_hdr-0x1feb26>
    1475:	5f                   	pop    rdi
    1476:	74 6f                	je     14e7 <stivale_hdr-0x1feb19>
    1478:	5f                   	pop    rdi
    1479:	75 73                	jne    14ee <stivale_hdr-0x1feb12>
    147b:	65 72 73             	gs jb  14f1 <stivale_hdr-0x1feb0f>
    147e:	70 61                	jo     14e1 <stivale_hdr-0x1feb1f>
    1480:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1483:	5f                   	pop    rdi
    1484:	5a                   	pop    rdx
    1485:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    1489:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    148c:	74 31                	je     14bf <stivale_hdr-0x1feb41>
    148e:	35 63 32 5f 66       	xor    eax,0x665f3263
    1493:	72 65                	jb     14fa <stivale_hdr-0x1feb06>
    1495:	71 75                	jno    150c <stivale_hdr-0x1feaf4>
    1497:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1499:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    149c:	68 7a 45 00 73       	push   0x7300457a
    14a1:	65 74 5f             	gs je  1503 <stivale_hdr-0x1feafd>
    14a4:	63 32                	movsxd esi,DWORD PTR [rdx]
    14a6:	5f                   	pop    rdi
    14a7:	66 72 65             	data16 jb 150f <stivale_hdr-0x1feaf1>
    14aa:	71 75                	jno    1521 <stivale_hdr-0x1feadf>
    14ac:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    14ae:	63 79 00             	movsxd edi,DWORD PTR [rcx+0x0]
    14b1:	63 32                	movsxd esi,DWORD PTR [rdx]
    14b3:	5f                   	pop    rdi
    14b4:	66 72 65             	data16 jb 151c <stivale_hdr-0x1feae4>
    14b7:	71 75                	jno    152e <stivale_hdr-0x1fead2>
    14b9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    14bb:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    14be:	68 7a 00 5f 5a       	push   0x5a5f007a
    14c3:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    14c7:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    14ca:	74 31                	je     14fd <stivale_hdr-0x1feb03>
    14cc:	36 73 65             	ss jae 1534 <stivale_hdr-0x1feacc>
    14cf:	74 5f                	je     1530 <stivale_hdr-0x1fead0>
    14d1:	63 30                	movsxd esi,DWORD PTR [rax]
    14d3:	5f                   	pop    rdi
    14d4:	66 72 65             	data16 jb 153c <stivale_hdr-0x1feac4>
    14d7:	71 75                	jno    154e <stivale_hdr-0x1feab2>
    14d9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    14db:	63 79 45             	movsxd edi,DWORD PTR [rcx+0x45]
    14de:	6a 00                	push   0x0
    14e0:	70 69                	jo     154b <stivale_hdr-0x1feab5>
    14e2:	74 5f                	je     1543 <stivale_hdr-0x1feabd>
    14e4:	69 6e 69 74 00 73 72 	imul   ebp,DWORD PTR [rsi+0x69],0x72730074
    14eb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    14ed:	73 63                	jae    1552 <stivale_hdr-0x1feaae>
    14ef:	68 65 64 75 6c       	push   0x6c756465
    14f4:	69 6e 67 2f 74 69 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d69742f
    14fb:	65 72 2e             	gs jb  152c <stivale_hdr-0x1fead4>
    14fe:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    1501:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1504:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    1508:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    150b:	74 37                	je     1544 <stivale_hdr-0x1feabc>
    150d:	64 69 76 69 73 6f 72 	imul   esi,DWORD PTR fs:[rsi+0x69],0x45726f73
    1514:	45 
    1515:	00 63 32             	add    BYTE PTR [rbx+0x32],ah
    1518:	5f                   	pop    rdi
    1519:	64 69 76 69 73 6f 72 	imul   esi,DWORD PTR fs:[rsi+0x69],0x726f73
    1520:	00 
    1521:	5f                   	pop    rdi
    1522:	5a                   	pop    rdx
    1523:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    1527:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    152a:	74 31                	je     155d <stivale_hdr-0x1feaa3>
    152c:	30 63 32             	xor    BYTE PTR [rbx+0x32],ah
    152f:	5f                   	pop    rdi
    1530:	64 69 76 69 73 6f 72 	imul   esi,DWORD PTR fs:[rsi+0x69],0x45726f73
    1537:	45 
    1538:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    153b:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    153f:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    1542:	74 31                	je     1575 <stivale_hdr-0x1fea8b>
    1544:	36 73 65             	ss jae 15ac <stivale_hdr-0x1fea54>
    1547:	74 5f                	je     15a8 <stivale_hdr-0x1fea58>
    1549:	63 32                	movsxd esi,DWORD PTR [rdx]
    154b:	5f                   	pop    rdi
    154c:	66 72 65             	data16 jb 15b4 <stivale_hdr-0x1fea4c>
    154f:	71 75                	jno    15c6 <stivale_hdr-0x1fea3a>
    1551:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1553:	63 79 45             	movsxd edi,DWORD PTR [rcx+0x45]
    1556:	6a 00                	push   0x0
    1558:	73 65                	jae    15bf <stivale_hdr-0x1fea41>
    155a:	74 5f                	je     15bb <stivale_hdr-0x1fea45>
    155c:	63 30                	movsxd esi,DWORD PTR [rax]
    155e:	5f                   	pop    rdi
    155f:	66 72 65             	data16 jb 15c7 <stivale_hdr-0x1fea39>
    1562:	71 75                	jno    15d9 <stivale_hdr-0x1fea27>
    1564:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1566:	63 79 00             	movsxd edi,DWORD PTR [rcx+0x0]
    1569:	5f                   	pop    rdi
    156a:	5a                   	pop    rdx
    156b:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    156f:	33 70 69             	xor    esi,DWORD PTR [rax+0x69]
    1572:	74 38                	je     15ac <stivale_hdr-0x1fea54>
    1574:	70 69                	jo     15df <stivale_hdr-0x1fea21>
    1576:	74 5f                	je     15d7 <stivale_hdr-0x1fea29>
    1578:	69 6e 69 74 45 76 00 	imul   ebp,DWORD PTR [rsi+0x69],0x764574
    157f:	73 68                	jae    15e9 <stivale_hdr-0x1fea17>
    1581:	69 66 74 65 64 00 73 	imul   esp,DWORD PTR [rsi+0x74],0x73006465
    1588:	79 73                	jns    15fd <stivale_hdr-0x1fea03>
    158a:	5f                   	pop    rdi
    158b:	69 6e 66 6f 5f 66 69 	imul   ebp,DWORD PTR [rsi+0x66],0x69665f6f
    1592:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1594:	64 00 73 79          	add    BYTE PTR fs:[rbx+0x79],dh
    1598:	73 5f                	jae    15f9 <stivale_hdr-0x1fea07>
    159a:	61                   	(bad)  
    159b:	6c                   	ins    BYTE PTR es:[rdi],dx
    159c:	6c                   	ins    BYTE PTR es:[rdi],dx
    159d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    159e:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    15a1:	65 5f                	gs pop rdi
    15a3:	70 61                	jo     1606 <stivale_hdr-0x1fe9fa>
    15a5:	67 65 00 73 72       	add    BYTE PTR gs:[ebx+0x72],dh
    15aa:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    15ac:	75 73                	jne    1621 <stivale_hdr-0x1fe9df>
    15ae:	65 72 73             	gs jb  1624 <stivale_hdr-0x1fe9dc>
    15b1:	70 61                	jo     1614 <stivale_hdr-0x1fe9ec>
    15b3:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    15b6:	73 79                	jae    1631 <stivale_hdr-0x1fe9cf>
    15b8:	73 63                	jae    161d <stivale_hdr-0x1fe9e3>
    15ba:	61                   	(bad)  
    15bb:	6c                   	ins    BYTE PTR es:[rdi],dx
    15bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    15bd:	73 2e                	jae    15ed <stivale_hdr-0x1fea13>
    15bf:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    15c2:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    15c5:	74 5f                	je     1626 <stivale_hdr-0x1fe9da>
    15c7:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    15c9:	77 6e                	ja     1639 <stivale_hdr-0x1fe9c7>
    15cb:	00 6e 75             	add    BYTE PTR [rsi+0x75],ch
    15ce:	6d                   	ins    DWORD PTR es:[rdi],dx
    15cf:	5f                   	pop    rdi
    15d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    15d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15d2:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    15d5:	73 79                	jae    1650 <stivale_hdr-0x1fe9b0>
    15d7:	73 5f                	jae    1638 <stivale_hdr-0x1fe9c8>
    15d9:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    15dc:	79 5f                	jns    163d <stivale_hdr-0x1fe9c3>
    15de:	66 72 61             	data16 jb 1642 <stivale_hdr-0x1fe9be>
    15e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    15e2:	65 62                	gs (bad) 
    15e4:	75 66                	jne    164c <stivale_hdr-0x1fe9b4>
    15e6:	66 65 72 00          	data16 gs jb 15ea <stivale_hdr-0x1fea16>
    15ea:	74 6f                	je     165b <stivale_hdr-0x1fe9a5>
    15ec:	74 61                	je     164f <stivale_hdr-0x1fe9b1>
    15ee:	6c                   	ins    BYTE PTR es:[rdi],dx
    15ef:	5f                   	pop    rdi
    15f0:	72 61                	jb     1653 <stivale_hdr-0x1fe9ad>
    15f2:	6d                   	ins    DWORD PTR es:[rdi],dx
    15f3:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    15f6:	79 5f                	jns    1657 <stivale_hdr-0x1fe9a9>
    15f8:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    15fb:	65 00 73 79          	add    BYTE PTR gs:[rbx+0x79],dh
    15ff:	73 5f                	jae    1660 <stivale_hdr-0x1fe9a0>
    1601:	67 65 74 5f          	addr32 gs je 1664 <stivale_hdr-0x1fe99c>
    1605:	69 6e 66 6f 00 63 74 	imul   ebp,DWORD PTR [rsi+0x66],0x7463006f
    160c:	72 6c                	jb     167a <stivale_hdr-0x1fe986>
    160e:	5f                   	pop    rdi
    160f:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    1611:	77 6e                	ja     1681 <stivale_hdr-0x1fe97f>
    1613:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
    1616:	70 73                	jo     168b <stivale_hdr-0x1fe975>
    1618:	5f                   	pop    rdi
    1619:	6c                   	ins    BYTE PTR es:[rdi],dx
    161a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    161b:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    161e:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
    1620:	5f                   	pop    rdi
    1621:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    1623:	77 6e                	ja     1693 <stivale_hdr-0x1fe96d>
    1625:	00 73 79             	add    BYTE PTR [rbx+0x79],dh
    1628:	73 5f                	jae    1689 <stivale_hdr-0x1fe977>
    162a:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
    162e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    162f:	61                   	(bad)  
    1630:	72 64                	jb     1696 <stivale_hdr-0x1fe96a>
    1632:	5f                   	pop    rdi
    1633:	65 76 65             	gs jbe 169b <stivale_hdr-0x1fe965>
    1636:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1637:	74 5f                	je     1698 <stivale_hdr-0x1fe968>
    1639:	73 75                	jae    16b0 <stivale_hdr-0x1fe950>
    163b:	62 73                	(bad)  
    163d:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    1640:	62                   	(bad)  
    1641:	65 00 66 72          	add    BYTE PTR gs:[rsi+0x72],ah
    1645:	65 65 5f             	gs gs pop rdi
    1648:	72 61                	jb     16ab <stivale_hdr-0x1fe955>
    164a:	6d                   	ins    DWORD PTR es:[rdi],dx
    164b:	00 74 65 78          	add    BYTE PTR [rbp+riz*2+0x78],dh
    164f:	74 00                	je     1651 <stivale_hdr-0x1fe9af>
    1651:	73 79                	jae    16cc <stivale_hdr-0x1fe934>
    1653:	73 5f                	jae    16b4 <stivale_hdr-0x1fe94c>
    1655:	74 74                	je     16cb <stivale_hdr-0x1fe935>
    1657:	79 5f                	jns    16b8 <stivale_hdr-0x1fe948>
    1659:	70 72                	jo     16cd <stivale_hdr-0x1fe933>
    165b:	69 6e 74 00 73 63 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72637300
    1662:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1663:	6c                   	ins    BYTE PTR es:[rdi],dx
    1664:	6c                   	ins    BYTE PTR es:[rdi],dx
    1665:	5f                   	pop    rdi
    1666:	6c                   	ins    BYTE PTR es:[rdi],dx
    1667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1668:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    166b:	72 65                	jb     16d2 <stivale_hdr-0x1fe92e>
    166d:	6c                   	ins    BYTE PTR es:[rdi],dx
    166e:	65 61                	gs (bad) 
    1670:	73 65                	jae    16d7 <stivale_hdr-0x1fe929>
    1672:	5f                   	pop    rdi
    1673:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1674:	72 5f                	jb     16d5 <stivale_hdr-0x1fe92b>
    1676:	70 72                	jo     16ea <stivale_hdr-0x1fe916>
    1678:	65 73 73             	gs jae 16ee <stivale_hdr-0x1fe912>
    167b:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    167e:	79 62                	jns    16e2 <stivale_hdr-0x1fe91e>
    1680:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1681:	61                   	(bad)  
    1682:	72 64                	jb     16e8 <stivale_hdr-0x1fe918>
    1684:	5f                   	pop    rdi
    1685:	70 61                	jo     16e8 <stivale_hdr-0x1fe918>
    1687:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    168a:	74 00                	je     168c <stivale_hdr-0x1fe974>
    168c:	6b 65 79 70          	imul   esp,DWORD PTR [rbp+0x79],0x70
    1690:	61                   	(bad)  
    1691:	64 5f                	fs pop rdi
    1693:	74 68                	je     16fd <stivale_hdr-0x1fe903>
    1695:	72 65                	jb     16fc <stivale_hdr-0x1fe904>
    1697:	65 00 6b 63          	add    BYTE PTR gs:[rbx+0x63],ch
    169b:	61                   	(bad)  
    169c:	73 63                	jae    1701 <stivale_hdr-0x1fe8ff>
    169e:	69 69 00 6b 62 64 75 	imul   ebp,DWORD PTR [rcx+0x0],0x7564626b
    16a5:	73 00                	jae    16a7 <stivale_hdr-0x1fe959>
    16a7:	62 61                	(bad)  
    16a9:	63 6b 74             	movsxd ebp,DWORD PTR [rbx+0x74]
    16ac:	69 63 6b 00 63 6c 6f 	imul   esp,DWORD PTR [rbx+0x6b],0x6f6c6300
    16b3:	73 65                	jae    171a <stivale_hdr-0x1fe8e6>
    16b5:	5f                   	pop    rdi
    16b6:	62 72                	(bad)  
    16b8:	61                   	(bad)  
    16b9:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    16bc:	74 00                	je     16be <stivale_hdr-0x1fe942>
    16be:	6b 65 79 70          	imul   esp,DWORD PTR [rbp+0x79],0x70
    16c2:	61                   	(bad)  
    16c3:	64 5f                	fs pop rdi
    16c5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    16c7:	75 72                	jne    173b <stivale_hdr-0x1fe8c5>
    16c9:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    16cc:	79 70                	jns    173e <stivale_hdr-0x1fe8c2>
    16ce:	61                   	(bad)  
    16cf:	64 5f                	fs pop rdi
    16d1:	66 69 76 65 00 6c    	imul   si,WORD PTR [rsi+0x65],0x6c00
    16d7:	65 66 74 5f          	gs data16 je 173a <stivale_hdr-0x1fe8c6>
    16db:	63 74 72 6c          	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
    16df:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    16e2:	79 70                	jns    1754 <stivale_hdr-0x1fe8ac>
    16e4:	61                   	(bad)  
    16e5:	64 5f                	fs pop rdi
    16e7:	65 69 67 68 74 00 6b 	imul   esp,DWORD PTR gs:[rdi+0x68],0x656b0074
    16ee:	65 
    16ef:	79 70                	jns    1761 <stivale_hdr-0x1fe89f>
    16f1:	61                   	(bad)  
    16f2:	64 5f                	fs pop rdi
    16f4:	70 6c                	jo     1762 <stivale_hdr-0x1fe89e>
    16f6:	75 73                	jne    176b <stivale_hdr-0x1fe895>
    16f8:	00 73 63             	add    BYTE PTR [rbx+0x63],dh
    16fb:	72 6c                	jb     1769 <stivale_hdr-0x1fe897>
    16fd:	5f                   	pop    rdi
    16fe:	6c                   	ins    BYTE PTR es:[rdi],dx
    16ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1700:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    1703:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1706:	6d                   	ins    DWORD PTR es:[rdi],dx
    1707:	61                   	(bad)  
    1708:	00 6c 65 66          	add    BYTE PTR [rbp+riz*2+0x66],ch
    170c:	74 5f                	je     176d <stivale_hdr-0x1fe893>
    170e:	73 68                	jae    1778 <stivale_hdr-0x1fe888>
    1710:	69 66 74 00 6b 65 79 	imul   esp,DWORD PTR [rsi+0x74],0x79656b00
    1717:	70 61                	jo     177a <stivale_hdr-0x1fe886>
    1719:	64 5f                	fs pop rdi
    171b:	70 65                	jo     1782 <stivale_hdr-0x1fe87e>
    171d:	72 69                	jb     1788 <stivale_hdr-0x1fe878>
    171f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1720:	64 00 6b 65          	add    BYTE PTR fs:[rbx+0x65],ch
    1724:	79 70                	jns    1796 <stivale_hdr-0x1fe86a>
    1726:	61                   	(bad)  
    1727:	64 5f                	fs pop rdi
    1729:	73 65                	jae    1790 <stivale_hdr-0x1fe870>
    172b:	76 65                	jbe    1792 <stivale_hdr-0x1fe86e>
    172d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    172e:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    1731:	79 70                	jns    17a3 <stivale_hdr-0x1fe85d>
    1733:	61                   	(bad)  
    1734:	64 5f                	fs pop rdi
    1736:	74 77                	je     17af <stivale_hdr-0x1fe851>
    1738:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1739:	00 65 71             	add    BYTE PTR [rbp+0x71],ah
    173c:	75 61                	jne    179f <stivale_hdr-0x1fe861>
    173e:	6c                   	ins    BYTE PTR es:[rdi],dx
    173f:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    1742:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1744:	5f                   	pop    rdi
    1745:	62 72                	(bad)  
    1747:	61                   	(bad)  
    1748:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    174b:	74 00                	je     174d <stivale_hdr-0x1fe8b3>
    174d:	73 72                	jae    17c1 <stivale_hdr-0x1fe83f>
    174f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1751:	75 73                	jne    17c6 <stivale_hdr-0x1fe83a>
    1753:	65 72 73             	gs jb  17c9 <stivale_hdr-0x1fe837>
    1756:	70 61                	jo     17b9 <stivale_hdr-0x1fe847>
    1758:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    175b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    175d:	74 72                	je     17d1 <stivale_hdr-0x1fe82f>
    175f:	79 2f                	jns    1790 <stivale_hdr-0x1fe870>
    1761:	6b 63 61 73          	imul   esp,DWORD PTR [rbx+0x61],0x73
    1765:	63 69 69             	movsxd ebp,DWORD PTR [rcx+0x69]
    1768:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    176c:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    176f:	79 70                	jns    17e1 <stivale_hdr-0x1fe81f>
    1771:	61                   	(bad)  
    1772:	64 5f                	fs pop rdi
    1774:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1775:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1776:	65 00 62 61          	add    BYTE PTR gs:[rdx+0x61],ah
    177a:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
    177d:	6c                   	ins    BYTE PTR es:[rdi],dx
    177e:	61                   	(bad)  
    177f:	73 68                	jae    17e9 <stivale_hdr-0x1fe817>
    1781:	00 65 73             	add    BYTE PTR [rbp+0x73],ah
    1784:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    1787:	65 00 6b 65          	add    BYTE PTR gs:[rbx+0x65],ch
    178b:	79 70                	jns    17fd <stivale_hdr-0x1fe803>
    178d:	61                   	(bad)  
    178e:	64 5f                	fs pop rdi
    1790:	73 74                	jae    1806 <stivale_hdr-0x1fe7fa>
    1792:	61                   	(bad)  
    1793:	72 00                	jb     1795 <stivale_hdr-0x1fe86b>
    1795:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    1798:	73 00                	jae    179a <stivale_hdr-0x1fe866>
    179a:	6b 62 64 75          	imul   esp,DWORD PTR [rdx+0x64],0x75
    179e:	73 5f                	jae    17ff <stivale_hdr-0x1fe801>
    17a0:	63 00                	movsxd eax,DWORD PTR [rax]
    17a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    17a3:	65 66 74 5f          	gs data16 je 1806 <stivale_hdr-0x1fe7fa>
    17a7:	61                   	(bad)  
    17a8:	6c                   	ins    BYTE PTR es:[rdi],dx
    17a9:	74 00                	je     17ab <stivale_hdr-0x1fe855>
    17ab:	6b 62 64 75          	imul   esp,DWORD PTR [rdx+0x64],0x75
    17af:	73 5f                	jae    1810 <stivale_hdr-0x1fe7f0>
    17b1:	73 00                	jae    17b3 <stivale_hdr-0x1fe84d>
    17b3:	6b 65 79 70          	imul   esp,DWORD PTR [rbp+0x79],0x70
    17b7:	61                   	(bad)  
    17b8:	64 5f                	fs pop rdi
    17ba:	7a 65                	jp     1821 <stivale_hdr-0x1fe7df>
    17bc:	72 6f                	jb     182d <stivale_hdr-0x1fe7d3>
    17be:	00 72 69             	add    BYTE PTR [rdx+0x69],dh
    17c1:	67 68 74 5f 73 68    	addr32 push 0x68735f74
    17c7:	69 66 74 00 6e 75 6d 	imul   esp,DWORD PTR [rsi+0x74],0x6d756e00
    17ce:	62                   	(bad)  
    17cf:	65 72 5f             	gs jb  1831 <stivale_hdr-0x1fe7cf>
    17d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    17d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17d4:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    17d7:	6b 62 64 75          	imul   esp,DWORD PTR [rdx+0x64],0x75
    17db:	73 5f                	jae    183c <stivale_hdr-0x1fe7c4>
    17dd:	73 63                	jae    1842 <stivale_hdr-0x1fe7be>
    17df:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17e2:	37                   	(bad)  
    17e3:	6b 63 61 73          	imul   esp,DWORD PTR [rbx+0x61],0x73
    17e7:	63 69 69             	movsxd ebp,DWORD PTR [rcx+0x69]
    17ea:	68 62 62 00 6e       	push   0x6e006262
    17ef:	75 6c                	jne    185d <stivale_hdr-0x1fe7a3>
    17f1:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f2:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    17f5:	79 70                	jns    1867 <stivale_hdr-0x1fe799>
    17f7:	61                   	(bad)  
    17f8:	64 5f                	fs pop rdi
    17fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17fb:	69 6e 65 00 61 70 6f 	imul   ebp,DWORD PTR [rsi+0x65],0x6f706100
    1802:	73 74                	jae    1878 <stivale_hdr-0x1fe788>
    1804:	72 6f                	jb     1875 <stivale_hdr-0x1fe78b>
    1806:	70 68                	jo     1870 <stivale_hdr-0x1fe790>
    1808:	65 00 6b 65          	add    BYTE PTR gs:[rbx+0x65],ch
    180c:	79 70                	jns    187e <stivale_hdr-0x1fe782>
    180e:	61                   	(bad)  
    180f:	64 5f                	fs pop rdi
    1811:	73 69                	jae    187c <stivale_hdr-0x1fe784>
    1813:	78 00                	js     1815 <stivale_hdr-0x1fe7eb>
    1815:	73 65                	jae    187c <stivale_hdr-0x1fe784>
    1817:	6d                   	ins    DWORD PTR es:[rdi],dx
    1818:	69 63 6f 6c 6f 6e 00 	imul   esp,DWORD PTR [rbx+0x6f],0x6e6f6c
    181f:	6b 65 79 70          	imul   esp,DWORD PTR [rbp+0x79],0x70
    1823:	61                   	(bad)  
    1824:	64 5f                	fs pop rdi
    1826:	64 61                	fs (bad) 
    1828:	73 68                	jae    1892 <stivale_hdr-0x1fe76e>
    182a:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    182d:	55                   	push   rbp
    182e:	49                   	rex.WB
    182f:	44 5f                	rex.R pop rdi
    1831:	46                   	rex.RX
    1832:	45                   	rex.RB
    1833:	41 54                	push   r12
    1835:	5f                   	pop    rdi
    1836:	45                   	rex.RB
    1837:	44 58                	rex.R pop rax
    1839:	5f                   	pop    rdi
    183a:	53                   	push   rbx
    183b:	53                   	push   rbx
    183c:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    183f:	55                   	push   rbp
    1840:	49                   	rex.WB
    1841:	44 5f                	rex.R pop rdi
    1843:	46                   	rex.RX
    1844:	45                   	rex.RB
    1845:	41 54                	push   r12
    1847:	5f                   	pop    rdi
    1848:	45                   	rex.RB
    1849:	44 58                	rex.R pop rax
    184b:	5f                   	pop    rdi
    184c:	50                   	push   rax
    184d:	47                   	rex.RXB
    184e:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1852:	55                   	push   rbp
    1853:	49                   	rex.WB
    1854:	44 5f                	rex.R pop rdi
    1856:	46                   	rex.RX
    1857:	45                   	rex.RB
    1858:	41 54                	push   r12
    185a:	5f                   	pop    rdi
    185b:	45                   	rex.RB
    185c:	43 58                	rex.XB pop r8
    185e:	5f                   	pop    rdi
    185f:	53                   	push   rbx
    1860:	53                   	push   rbx
    1861:	45 33 00             	xor    r8d,DWORD PTR [r8]
    1864:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1867:	69 64 5f 67 65 74 5f 	imul   esp,DWORD PTR [rdi+rbx*2+0x67],0x665f7465
    186e:	66 
    186f:	69 65 6c 64 00 73 72 	imul   esp,DWORD PTR [rbp+0x6c],0x72730064
    1876:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1878:	75 73                	jne    18ed <stivale_hdr-0x1fe713>
    187a:	65 72 73             	gs jb  18f0 <stivale_hdr-0x1fe710>
    187d:	70 61                	jo     18e0 <stivale_hdr-0x1fe720>
    187f:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    1882:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1884:	74 72                	je     18f8 <stivale_hdr-0x1fe708>
    1886:	79 2f                	jns    18b7 <stivale_hdr-0x1fe749>
    1888:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    188b:	69 64 2e 63 70 70 00 	imul   esp,DWORD PTR [rsi+rbp*1+0x63],0x43007070
    1892:	43 
    1893:	50                   	push   rax
    1894:	55                   	push   rbp
    1895:	49                   	rex.WB
    1896:	44 5f                	rex.R pop rdi
    1898:	46                   	rex.RX
    1899:	45                   	rex.RB
    189a:	41 54                	push   r12
    189c:	5f                   	pop    rdi
    189d:	45                   	rex.RB
    189e:	44 58                	rex.R pop rax
    18a0:	5f                   	pop    rdi
    18a1:	53                   	push   rbx
    18a2:	45 50                	rex.RB push r8
    18a4:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    18a7:	55                   	push   rbp
    18a8:	49                   	rex.WB
    18a9:	44 5f                	rex.R pop rdi
    18ab:	46                   	rex.RX
    18ac:	45                   	rex.RB
    18ad:	41 54                	push   r12
    18af:	5f                   	pop    rdi
    18b0:	45                   	rex.RB
    18b1:	44 58                	rex.R pop rax
    18b3:	5f                   	pop    rdi
    18b4:	50                   	push   rax
    18b5:	42                   	rex.X
    18b6:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    18ba:	55                   	push   rbp
    18bb:	49                   	rex.WB
    18bc:	44 5f                	rex.R pop rdi
    18be:	46                   	rex.RX
    18bf:	45                   	rex.RB
    18c0:	41 54                	push   r12
    18c2:	5f                   	pop    rdi
    18c3:	45                   	rex.RB
    18c4:	43 58                	rex.XB pop r8
    18c6:	5f                   	pop    rdi
    18c7:	50                   	push   rax
    18c8:	43                   	rex.XB
    18c9:	4c                   	rex.WR
    18ca:	4d 55                	rex.WRB push r13
    18cc:	4c 00 43 50          	rex.WR add BYTE PTR [rbx+0x50],r8b
    18d0:	55                   	push   rbp
    18d1:	49                   	rex.WB
    18d2:	44 5f                	rex.R pop rdi
    18d4:	46                   	rex.RX
    18d5:	45                   	rex.RB
    18d6:	41 54                	push   r12
    18d8:	5f                   	pop    rdi
    18d9:	45                   	rex.RB
    18da:	44 58                	rex.R pop rax
    18dc:	5f                   	pop    rdi
    18dd:	53                   	push   rbx
    18de:	53                   	push   rbx
    18df:	45 32 00             	xor    r8b,BYTE PTR [r8]
    18e2:	43 50                	rex.XB push r8
    18e4:	55                   	push   rbp
    18e5:	49                   	rex.WB
    18e6:	44 5f                	rex.R pop rdi
    18e8:	46                   	rex.RX
    18e9:	45                   	rex.RB
    18ea:	41 54                	push   r12
    18ec:	5f                   	pop    rdi
    18ed:	45                   	rex.RB
    18ee:	43 58                	rex.XB pop r8
    18f0:	5f                   	pop    rdi
    18f1:	4d                   	rex.WRB
    18f2:	4f 56                	rex.WRXB push r14
    18f4:	42                   	rex.X
    18f5:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    18f9:	55                   	push   rbp
    18fa:	49                   	rex.WB
    18fb:	44 5f                	rex.R pop rdi
    18fd:	46                   	rex.RX
    18fe:	45                   	rex.RB
    18ff:	41 54                	push   r12
    1901:	5f                   	pop    rdi
    1902:	45                   	rex.RB
    1903:	43 58                	rex.XB pop r8
    1905:	5f                   	pop    rdi
    1906:	53                   	push   rbx
    1907:	4d 58                	rex.WRB pop r8
    1909:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    190c:	55                   	push   rbp
    190d:	49                   	rex.WB
    190e:	44 5f                	rex.R pop rdi
    1910:	46                   	rex.RX
    1911:	45                   	rex.RB
    1912:	41 54                	push   r12
    1914:	5f                   	pop    rdi
    1915:	45                   	rex.RB
    1916:	44 58                	rex.R pop rax
    1918:	5f                   	pop    rdi
    1919:	43                   	rex.XB
    191a:	4c                   	rex.WR
    191b:	46 00 43 50          	rex.RX add BYTE PTR [rbx+0x50],r8b
    191f:	55                   	push   rbp
    1920:	49                   	rex.WB
    1921:	44 5f                	rex.R pop rdi
    1923:	46                   	rex.RX
    1924:	45                   	rex.RB
    1925:	41 54                	push   r12
    1927:	5f                   	pop    rdi
    1928:	45                   	rex.RB
    1929:	43 58                	rex.XB pop r8
    192b:	5f                   	pop    rdi
    192c:	56                   	push   rsi
    192d:	4d 58                	rex.WRB pop r8
    192f:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1932:	55                   	push   rbp
    1933:	49                   	rex.WB
    1934:	44 5f                	rex.R pop rdi
    1936:	46                   	rex.RX
    1937:	45                   	rex.RB
    1938:	41 54                	push   r12
    193a:	5f                   	pop    rdi
    193b:	45                   	rex.RB
    193c:	43 58                	rex.XB pop r8
    193e:	5f                   	pop    rdi
    193f:	54                   	push   rsp
    1940:	4d 32 00             	rex.WRB xor r8b,BYTE PTR [r8]
    1943:	43 50                	rex.XB push r8
    1945:	55                   	push   rbp
    1946:	49                   	rex.WB
    1947:	44 5f                	rex.R pop rdi
    1949:	46                   	rex.RX
    194a:	45                   	rex.RB
    194b:	41 54                	push   r12
    194d:	5f                   	pop    rdi
    194e:	45                   	rex.RB
    194f:	43 58                	rex.XB pop r8
    1951:	5f                   	pop    rdi
    1952:	44 53                	rex.R push rbx
    1954:	5f                   	pop    rdi
    1955:	43 50                	rex.XB push r8
    1957:	4c 00 43 50          	rex.WR add BYTE PTR [rbx+0x50],r8b
    195b:	55                   	push   rbp
    195c:	49                   	rex.WB
    195d:	44 5f                	rex.R pop rdi
    195f:	46                   	rex.RX
    1960:	45                   	rex.RB
    1961:	41 54                	push   r12
    1963:	5f                   	pop    rdi
    1964:	45                   	rex.RB
    1965:	44 58                	rex.R pop rax
    1967:	5f                   	pop    rdi
    1968:	48 54                	rex.W push rsp
    196a:	54                   	push   rsp
    196b:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    196e:	55                   	push   rbp
    196f:	49                   	rex.WB
    1970:	44 5f                	rex.R pop rdi
    1972:	46                   	rex.RX
    1973:	45                   	rex.RB
    1974:	41 54                	push   r12
    1976:	5f                   	pop    rdi
    1977:	45                   	rex.RB
    1978:	44 58                	rex.R pop rax
    197a:	5f                   	pop    rdi
    197b:	50                   	push   rax
    197c:	41                   	rex.B
    197d:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1981:	55                   	push   rbp
    1982:	49                   	rex.WB
    1983:	44 5f                	rex.R pop rdi
    1985:	46                   	rex.RX
    1986:	45                   	rex.RB
    1987:	41 54                	push   r12
    1989:	5f                   	pop    rdi
    198a:	45                   	rex.RB
    198b:	44 58                	rex.R pop rax
    198d:	5f                   	pop    rdi
    198e:	56                   	push   rsi
    198f:	4d                   	rex.WRB
    1990:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1994:	55                   	push   rbp
    1995:	49                   	rex.WB
    1996:	44 5f                	rex.R pop rdi
    1998:	46                   	rex.RX
    1999:	45                   	rex.RB
    199a:	41 54                	push   r12
    199c:	5f                   	pop    rdi
    199d:	45                   	rex.RB
    199e:	44 58                	rex.R pop rax
    19a0:	5f                   	pop    rdi
    19a1:	46 50                	rex.RX push rax
    19a3:	55                   	push   rbp
    19a4:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    19a7:	55                   	push   rbp
    19a8:	49                   	rex.WB
    19a9:	44 5f                	rex.R pop rdi
    19ab:	46                   	rex.RX
    19ac:	45                   	rex.RB
    19ad:	41 54                	push   r12
    19af:	5f                   	pop    rdi
    19b0:	45                   	rex.RB
    19b1:	44 58                	rex.R pop rax
    19b3:	5f                   	pop    rdi
    19b4:	4d                   	rex.WRB
    19b5:	43                   	rex.XB
    19b6:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    19ba:	55                   	push   rbp
    19bb:	49                   	rex.WB
    19bc:	44 5f                	rex.R pop rdi
    19be:	46                   	rex.RX
    19bf:	45                   	rex.RB
    19c0:	41 54                	push   r12
    19c2:	5f                   	pop    rdi
    19c3:	45                   	rex.RB
    19c4:	44 58                	rex.R pop rax
    19c6:	5f                   	pop    rdi
    19c7:	4d 54                	rex.WRB push r12
    19c9:	52                   	push   rdx
    19ca:	52                   	push   rdx
    19cb:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    19ce:	55                   	push   rbp
    19cf:	49                   	rex.WB
    19d0:	44 5f                	rex.R pop rdi
    19d2:	52                   	push   rdx
    19d3:	45                   	rex.RB
    19d4:	47                   	rex.RXB
    19d5:	49 53                	rex.WB push r11
    19d7:	54                   	push   rsp
    19d8:	45 52                	rex.RB push r10
    19da:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    19dd:	55                   	push   rbp
    19de:	49                   	rex.WB
    19df:	44 5f                	rex.R pop rdi
    19e1:	46                   	rex.RX
    19e2:	45                   	rex.RB
    19e3:	41 54                	push   r12
    19e5:	5f                   	pop    rdi
    19e6:	45                   	rex.RB
    19e7:	43 58                	rex.XB pop r8
    19e9:	5f                   	pop    rdi
    19ea:	43                   	rex.XB
    19eb:	49                   	rex.WB
    19ec:	44 00 43 50          	add    BYTE PTR [rbx+0x50],r8b
    19f0:	55                   	push   rbp
    19f1:	49                   	rex.WB
    19f2:	44 5f                	rex.R pop rdi
    19f4:	46                   	rex.RX
    19f5:	45                   	rex.RB
    19f6:	41 54                	push   r12
    19f8:	5f                   	pop    rdi
    19f9:	45                   	rex.RB
    19fa:	43 58                	rex.XB pop r8
    19fc:	5f                   	pop    rdi
    19fd:	50                   	push   rax
    19fe:	44                   	rex.R
    19ff:	43                   	rex.XB
    1a00:	4d 00 43 50          	rex.WRB add BYTE PTR [r11+0x50],r8b
    1a04:	55                   	push   rbp
    1a05:	49                   	rex.WB
    1a06:	44 5f                	rex.R pop rdi
    1a08:	46                   	rex.RX
    1a09:	45                   	rex.RB
    1a0a:	41 54                	push   r12
    1a0c:	5f                   	pop    rdi
    1a0d:	45                   	rex.RB
    1a0e:	44 58                	rex.R pop rax
    1a10:	5f                   	pop    rdi
    1a11:	50                   	push   rax
    1a12:	53                   	push   rbx
    1a13:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1a17:	55                   	push   rbp
    1a18:	49                   	rex.WB
    1a19:	44 5f                	rex.R pop rdi
    1a1b:	46                   	rex.RX
    1a1c:	45                   	rex.RB
    1a1d:	41 54                	push   r12
    1a1f:	5f                   	pop    rdi
    1a20:	45                   	rex.RB
    1a21:	44 58                	rex.R pop rax
    1a23:	5f                   	pop    rdi
    1a24:	43 58                	rex.XB pop r8
    1a26:	38 00                	cmp    BYTE PTR [rax],al
    1a28:	43 50                	rex.XB push r8
    1a2a:	55                   	push   rbp
    1a2b:	49                   	rex.WB
    1a2c:	44 5f                	rex.R pop rdi
    1a2e:	46                   	rex.RX
    1a2f:	45                   	rex.RB
    1a30:	41 54                	push   r12
    1a32:	5f                   	pop    rdi
    1a33:	45                   	rex.RB
    1a34:	44 58                	rex.R pop rax
    1a36:	5f                   	pop    rdi
    1a37:	4d 53                	rex.WRB push r11
    1a39:	52                   	push   rdx
    1a3a:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1a3d:	55                   	push   rbp
    1a3e:	49                   	rex.WB
    1a3f:	44 5f                	rex.R pop rdi
    1a41:	46                   	rex.RX
    1a42:	45                   	rex.RB
    1a43:	41 54                	push   r12
    1a45:	5f                   	pop    rdi
    1a46:	45                   	rex.RB
    1a47:	44 58                	rex.R pop rax
    1a49:	5f                   	pop    rdi
    1a4a:	41 50                	push   r8
    1a4c:	49                   	rex.WB
    1a4d:	43 00 43 50          	rex.XB add BYTE PTR [r11+0x50],al
    1a51:	55                   	push   rbp
    1a52:	49                   	rex.WB
    1a53:	44 5f                	rex.R pop rdi
    1a55:	46                   	rex.RX
    1a56:	45                   	rex.RB
    1a57:	41 54                	push   r12
    1a59:	5f                   	pop    rdi
    1a5a:	45                   	rex.RB
    1a5b:	43 58                	rex.XB pop r8
    1a5d:	5f                   	pop    rdi
    1a5e:	45 53                	rex.RB push r11
    1a60:	54                   	push   rsp
    1a61:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1a64:	55                   	push   rbp
    1a65:	49                   	rex.WB
    1a66:	44 5f                	rex.R pop rdi
    1a68:	46                   	rex.RX
    1a69:	45                   	rex.RB
    1a6a:	41 54                	push   r12
    1a6c:	5f                   	pop    rdi
    1a6d:	45                   	rex.RB
    1a6e:	43 58                	rex.XB pop r8
    1a70:	5f                   	pop    rdi
    1a71:	46                   	rex.RX
    1a72:	4d                   	rex.WRB
    1a73:	41 00 43 50          	add    BYTE PTR [r11+0x50],al
    1a77:	55                   	push   rbp
    1a78:	49                   	rex.WB
    1a79:	44 5f                	rex.R pop rdi
    1a7b:	46                   	rex.RX
    1a7c:	45                   	rex.RB
    1a7d:	41 54                	push   r12
    1a7f:	5f                   	pop    rdi
    1a80:	45                   	rex.RB
    1a81:	43 58                	rex.XB pop r8
    1a83:	5f                   	pop    rdi
    1a84:	44                   	rex.R
    1a85:	43                   	rex.XB
    1a86:	41 00 43 50          	add    BYTE PTR [r11+0x50],al
    1a8a:	55                   	push   rbp
    1a8b:	49                   	rex.WB
    1a8c:	44 5f                	rex.R pop rdi
    1a8e:	46                   	rex.RX
    1a8f:	45                   	rex.RB
    1a90:	41 54                	push   r12
    1a92:	5f                   	pop    rdi
    1a93:	45                   	rex.RB
    1a94:	44 58                	rex.R pop rax
    1a96:	5f                   	pop    rdi
    1a97:	4d                   	rex.WRB
    1a98:	43                   	rex.XB
    1a99:	41 00 43 50          	add    BYTE PTR [r11+0x50],al
    1a9d:	55                   	push   rbp
    1a9e:	49                   	rex.WB
    1a9f:	44 5f                	rex.R pop rdi
    1aa1:	46                   	rex.RX
    1aa2:	45                   	rex.RB
    1aa3:	41 54                	push   r12
    1aa5:	5f                   	pop    rdi
    1aa6:	45                   	rex.RB
    1aa7:	44 58                	rex.R pop rax
    1aa9:	5f                   	pop    rdi
    1aaa:	50                   	push   rax
    1aab:	53                   	push   rbx
    1aac:	4e 00 43 50          	rex.WRX add BYTE PTR [rbx+0x50],r8b
    1ab0:	55                   	push   rbp
    1ab1:	49                   	rex.WB
    1ab2:	44 5f                	rex.R pop rdi
    1ab4:	46                   	rex.RX
    1ab5:	45                   	rex.RB
    1ab6:	41 54                	push   r12
    1ab8:	5f                   	pop    rdi
    1ab9:	45                   	rex.RB
    1aba:	44 58                	rex.R pop rax
    1abc:	5f                   	pop    rdi
    1abd:	44 54                	rex.R push rsp
    1abf:	45 53                	rex.RB push r11
    1ac1:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1ac4:	55                   	push   rbp
    1ac5:	49                   	rex.WB
    1ac6:	44 5f                	rex.R pop rdi
    1ac8:	46                   	rex.RX
    1ac9:	45                   	rex.RB
    1aca:	41 54                	push   r12
    1acc:	5f                   	pop    rdi
    1acd:	45                   	rex.RB
    1ace:	43 58                	rex.XB pop r8
    1ad0:	5f                   	pop    rdi
    1ad1:	44 54                	rex.R push rsp
    1ad3:	45 53                	rex.RB push r11
    1ad5:	36 34 00             	ss xor al,0x0
    1ad8:	43 50                	rex.XB push r8
    1ada:	55                   	push   rbp
    1adb:	49                   	rex.WB
    1adc:	44 5f                	rex.R pop rdi
    1ade:	46                   	rex.RX
    1adf:	45                   	rex.RB
    1ae0:	41 54                	push   r12
    1ae2:	5f                   	pop    rdi
    1ae3:	45                   	rex.RB
    1ae4:	43 58                	rex.XB pop r8
    1ae6:	5f                   	pop    rdi
    1ae7:	58                   	pop    rax
    1ae8:	53                   	push   rbx
    1ae9:	41 56                	push   r14
    1aeb:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1aef:	55                   	push   rbp
    1af0:	49                   	rex.WB
    1af1:	44 5f                	rex.R pop rdi
    1af3:	46                   	rex.RX
    1af4:	45                   	rex.RB
    1af5:	41 54                	push   r12
    1af7:	5f                   	pop    rdi
    1af8:	45                   	rex.RB
    1af9:	43 58                	rex.XB pop r8
    1afb:	5f                   	pop    rdi
    1afc:	45 54                	rex.RB push r12
    1afe:	50                   	push   rax
    1aff:	52                   	push   rdx
    1b00:	44 00 5f 5a          	add    BYTE PTR [rdi+0x5a],r11b
    1b04:	31 35 63 70 75 69    	xor    DWORD PTR [rip+0x69757063],esi        # 69758b6d <__kernel_end+0x69546b6d>
    1b0a:	64 5f                	fs pop rdi
    1b0c:	67 65 74 5f          	addr32 gs je 1b6f <stivale_hdr-0x1fe491>
    1b10:	66 69 65 6c 64 31    	imul   sp,WORD PTR [rbp+0x6c],0x3164
    1b16:	34 43                	xor    al,0x43
    1b18:	50                   	push   rax
    1b19:	55                   	push   rbp
    1b1a:	49                   	rex.WB
    1b1b:	44 5f                	rex.R pop rdi
    1b1d:	52                   	push   rdx
    1b1e:	45                   	rex.RB
    1b1f:	47                   	rex.RXB
    1b20:	49 53                	rex.WB push r11
    1b22:	54                   	push   rsp
    1b23:	45 52                	rex.RB push r10
    1b25:	31 31                	xor    DWORD PTR [rcx],esi
    1b27:	43 50                	rex.XB push r8
    1b29:	55                   	push   rbp
    1b2a:	49                   	rex.WB
    1b2b:	44 5f                	rex.R pop rdi
    1b2d:	46                   	rex.RX
    1b2e:	49                   	rex.WB
    1b2f:	45                   	rex.RB
    1b30:	4c                   	rex.WR
    1b31:	44 00 43 50          	add    BYTE PTR [rbx+0x50],r8b
    1b35:	55                   	push   rbp
    1b36:	49                   	rex.WB
    1b37:	44 5f                	rex.R pop rdi
    1b39:	46                   	rex.RX
    1b3a:	45                   	rex.RB
    1b3b:	41 54                	push   r12
    1b3d:	5f                   	pop    rdi
    1b3e:	45                   	rex.RB
    1b3f:	44 58                	rex.R pop rax
    1b41:	5f                   	pop    rdi
    1b42:	50                   	push   rax
    1b43:	53                   	push   rbx
    1b44:	45 33 36             	xor    r14d,DWORD PTR [r14]
    1b47:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1b4a:	55                   	push   rbp
    1b4b:	49                   	rex.WB
    1b4c:	44 5f                	rex.R pop rdi
    1b4e:	46                   	rex.RX
    1b4f:	45                   	rex.RB
    1b50:	41 54                	push   r12
    1b52:	5f                   	pop    rdi
    1b53:	45                   	rex.RB
    1b54:	44 58                	rex.R pop rax
    1b56:	5f                   	pop    rdi
    1b57:	49                   	rex.WB
    1b58:	41                   	rex.B
    1b59:	36 34 00             	ss xor al,0x0
    1b5c:	43 50                	rex.XB push r8
    1b5e:	55                   	push   rbp
    1b5f:	49                   	rex.WB
    1b60:	44 5f                	rex.R pop rdi
    1b62:	46                   	rex.RX
    1b63:	45                   	rex.RB
    1b64:	41 54                	push   r12
    1b66:	5f                   	pop    rdi
    1b67:	45                   	rex.RB
    1b68:	43 58                	rex.XB pop r8
    1b6a:	5f                   	pop    rdi
    1b6b:	41                   	rex.B
    1b6c:	45 53                	rex.RB push r11
    1b6e:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1b71:	55                   	push   rbp
    1b72:	49                   	rex.WB
    1b73:	44 5f                	rex.R pop rdi
    1b75:	46                   	rex.RX
    1b76:	45                   	rex.RB
    1b77:	41 54                	push   r12
    1b79:	5f                   	pop    rdi
    1b7a:	45                   	rex.RB
    1b7b:	43 58                	rex.XB pop r8
    1b7d:	5f                   	pop    rdi
    1b7e:	41 56                	push   r14
    1b80:	58                   	pop    rax
    1b81:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1b84:	55                   	push   rbp
    1b85:	49                   	rex.WB
    1b86:	44 5f                	rex.R pop rdi
    1b88:	46                   	rex.RX
    1b89:	45                   	rex.RB
    1b8a:	41 54                	push   r12
    1b8c:	5f                   	pop    rdi
    1b8d:	45                   	rex.RB
    1b8e:	44 58                	rex.R pop rax
    1b90:	5f                   	pop    rdi
    1b91:	54                   	push   rsp
    1b92:	4d 31 00             	xor    QWORD PTR [r8],r8
    1b95:	43 50                	rex.XB push r8
    1b97:	55                   	push   rbp
    1b98:	49                   	rex.WB
    1b99:	44 5f                	rex.R pop rdi
    1b9b:	46                   	rex.RX
    1b9c:	45                   	rex.RB
    1b9d:	41 54                	push   r12
    1b9f:	5f                   	pop    rdi
    1ba0:	45                   	rex.RB
    1ba1:	44 58                	rex.R pop rax
    1ba3:	5f                   	pop    rdi
    1ba4:	54                   	push   rsp
    1ba5:	53                   	push   rbx
    1ba6:	43 00 43 50          	rex.XB add BYTE PTR [r11+0x50],al
    1baa:	55                   	push   rbp
    1bab:	49                   	rex.WB
    1bac:	44 5f                	rex.R pop rdi
    1bae:	46                   	rex.RX
    1baf:	45                   	rex.RB
    1bb0:	41 54                	push   r12
    1bb2:	5f                   	pop    rdi
    1bb3:	45                   	rex.RB
    1bb4:	44 58                	rex.R pop rax
    1bb6:	5f                   	pop    rdi
    1bb7:	41                   	rex.B
    1bb8:	43 50                	rex.XB push r8
    1bba:	49 00 43 50          	rex.WB add BYTE PTR [r11+0x50],al
    1bbe:	55                   	push   rbp
    1bbf:	49                   	rex.WB
    1bc0:	44 5f                	rex.R pop rdi
    1bc2:	46                   	rex.RX
    1bc3:	45                   	rex.RB
    1bc4:	41 54                	push   r12
    1bc6:	5f                   	pop    rdi
    1bc7:	45                   	rex.RB
    1bc8:	44 58                	rex.R pop rax
    1bca:	5f                   	pop    rdi
    1bcb:	4d                   	rex.WRB
    1bcc:	4d 58                	rex.WRB pop r8
    1bce:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1bd1:	55                   	push   rbp
    1bd2:	49                   	rex.WB
    1bd3:	44 5f                	rex.R pop rdi
    1bd5:	46                   	rex.RX
    1bd6:	45                   	rex.RB
    1bd7:	41 54                	push   r12
    1bd9:	5f                   	pop    rdi
    1bda:	45                   	rex.RB
    1bdb:	43 58                	rex.XB pop r8
    1bdd:	5f                   	pop    rdi
    1bde:	78 32                	js     1c12 <stivale_hdr-0x1fe3ee>
    1be0:	41 50                	push   r8
    1be2:	49                   	rex.WB
    1be3:	43 00 43 50          	rex.XB add BYTE PTR [r11+0x50],al
    1be7:	55                   	push   rbp
    1be8:	49                   	rex.WB
    1be9:	44 5f                	rex.R pop rdi
    1beb:	46                   	rex.RX
    1bec:	45                   	rex.RB
    1bed:	41 54                	push   r12
    1bef:	5f                   	pop    rdi
    1bf0:	45                   	rex.RB
    1bf1:	43 58                	rex.XB pop r8
    1bf3:	5f                   	pop    rdi
    1bf4:	43 58                	rex.XB pop r8
    1bf6:	31 36                	xor    DWORD PTR [rsi],esi
    1bf8:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1bfb:	55                   	push   rbp
    1bfc:	49                   	rex.WB
    1bfd:	44 5f                	rex.R pop rdi
    1bff:	46                   	rex.RX
    1c00:	45                   	rex.RB
    1c01:	41 54                	push   r12
    1c03:	5f                   	pop    rdi
    1c04:	45                   	rex.RB
    1c05:	43 58                	rex.XB pop r8
    1c07:	5f                   	pop    rdi
    1c08:	53                   	push   rbx
    1c09:	53                   	push   rbx
    1c0a:	53                   	push   rbx
    1c0b:	45 33 00             	xor    r8d,DWORD PTR [r8]
    1c0e:	43 50                	rex.XB push r8
    1c10:	55                   	push   rbp
    1c11:	49                   	rex.WB
    1c12:	44 5f                	rex.R pop rdi
    1c14:	46                   	rex.RX
    1c15:	45                   	rex.RB
    1c16:	41 54                	push   r12
    1c18:	5f                   	pop    rdi
    1c19:	45                   	rex.RB
    1c1a:	43 58                	rex.XB pop r8
    1c1c:	5f                   	pop    rdi
    1c1d:	50                   	push   rax
    1c1e:	43                   	rex.XB
    1c1f:	49                   	rex.WB
    1c20:	44                   	rex.R
    1c21:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1c25:	55                   	push   rbp
    1c26:	49                   	rex.WB
    1c27:	44 5f                	rex.R pop rdi
    1c29:	46                   	rex.RX
    1c2a:	45                   	rex.RB
    1c2b:	41 54                	push   r12
    1c2d:	5f                   	pop    rdi
    1c2e:	45                   	rex.RB
    1c2f:	43 58                	rex.XB pop r8
    1c31:	5f                   	pop    rdi
    1c32:	53                   	push   rbx
    1c33:	53                   	push   rbx
    1c34:	45 34 5f             	rex.RB xor al,0x5f
    1c37:	31 00                	xor    DWORD PTR [rax],eax
    1c39:	43 50                	rex.XB push r8
    1c3b:	55                   	push   rbp
    1c3c:	49                   	rex.WB
    1c3d:	44 5f                	rex.R pop rdi
    1c3f:	46                   	rex.RX
    1c40:	45                   	rex.RB
    1c41:	41 54                	push   r12
    1c43:	5f                   	pop    rdi
    1c44:	45                   	rex.RB
    1c45:	43 58                	rex.XB pop r8
    1c47:	5f                   	pop    rdi
    1c48:	53                   	push   rbx
    1c49:	53                   	push   rbx
    1c4a:	45 34 5f             	rex.RB xor al,0x5f
    1c4d:	32 00                	xor    al,BYTE PTR [rax]
    1c4f:	43 50                	rex.XB push r8
    1c51:	55                   	push   rbp
    1c52:	49                   	rex.WB
    1c53:	44 5f                	rex.R pop rdi
    1c55:	46                   	rex.RX
    1c56:	45                   	rex.RB
    1c57:	41 54                	push   r12
    1c59:	5f                   	pop    rdi
    1c5a:	45                   	rex.RB
    1c5b:	44 58                	rex.R pop rax
    1c5d:	5f                   	pop    rdi
    1c5e:	53                   	push   rbx
    1c5f:	53                   	push   rbx
    1c60:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1c64:	55                   	push   rbp
    1c65:	49                   	rex.WB
    1c66:	44 5f                	rex.R pop rdi
    1c68:	46                   	rex.RX
    1c69:	45                   	rex.RB
    1c6a:	41 54                	push   r12
    1c6c:	5f                   	pop    rdi
    1c6d:	45                   	rex.RB
    1c6e:	43 58                	rex.XB pop r8
    1c70:	5f                   	pop    rdi
    1c71:	50                   	push   rax
    1c72:	4f 50                	rex.WRXB push r8
    1c74:	43                   	rex.XB
    1c75:	4e 54                	rex.WRX push rsp
    1c77:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1c7a:	55                   	push   rbp
    1c7b:	49                   	rex.WB
    1c7c:	44 5f                	rex.R pop rdi
    1c7e:	46                   	rex.RX
    1c7f:	45                   	rex.RB
    1c80:	41 54                	push   r12
    1c82:	5f                   	pop    rdi
    1c83:	45                   	rex.RB
    1c84:	43 58                	rex.XB pop r8
    1c86:	5f                   	pop    rdi
    1c87:	4d                   	rex.WRB
    1c88:	4f                   	rex.WRXB
    1c89:	4e                   	rex.WRX
    1c8a:	49 54                	rex.WB push r12
    1c8c:	4f 52                	rex.WRXB push r10
    1c8e:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1c91:	55                   	push   rbp
    1c92:	49                   	rex.WB
    1c93:	44 5f                	rex.R pop rdi
    1c95:	46                   	rex.RX
    1c96:	45                   	rex.RB
    1c97:	41 54                	push   r12
    1c99:	5f                   	pop    rdi
    1c9a:	45                   	rex.RB
    1c9b:	44 58                	rex.R pop rax
    1c9d:	5f                   	pop    rdi
    1c9e:	46 58                	rex.RX pop rax
    1ca0:	53                   	push   rbx
    1ca1:	52                   	push   rdx
    1ca2:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1ca5:	55                   	push   rbp
    1ca6:	49                   	rex.WB
    1ca7:	44 5f                	rex.R pop rdi
    1ca9:	46                   	rex.RX
    1caa:	45                   	rex.RB
    1cab:	41 54                	push   r12
    1cad:	5f                   	pop    rdi
    1cae:	45                   	rex.RB
    1caf:	44 58                	rex.R pop rax
    1cb1:	5f                   	pop    rdi
    1cb2:	43                   	rex.XB
    1cb3:	4d                   	rex.WRB
    1cb4:	4f 56                	rex.WRXB push r14
    1cb6:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1cb9:	55                   	push   rbp
    1cba:	49                   	rex.WB
    1cbb:	44 5f                	rex.R pop rdi
    1cbd:	46                   	rex.RX
    1cbe:	45                   	rex.RB
    1cbf:	41 54                	push   r12
    1cc1:	5f                   	pop    rdi
    1cc2:	45                   	rex.RB
    1cc3:	44 58                	rex.R pop rax
    1cc5:	5f                   	pop    rdi
    1cc6:	50                   	push   rax
    1cc7:	41 54                	push   r12
    1cc9:	00 43 50             	add    BYTE PTR [rbx+0x50],al
    1ccc:	55                   	push   rbp
    1ccd:	49                   	rex.WB
    1cce:	44 5f                	rex.R pop rdi
    1cd0:	46                   	rex.RX
    1cd1:	45                   	rex.RB
    1cd2:	41 54                	push   r12
    1cd4:	5f                   	pop    rdi
    1cd5:	45                   	rex.RB
    1cd6:	44 58                	rex.R pop rax
    1cd8:	5f                   	pop    rdi
    1cd9:	44                   	rex.R
    1cda:	45 00 43 50          	add    BYTE PTR [r11+0x50],r8b
    1cde:	55                   	push   rbp
    1cdf:	49                   	rex.WB
    1ce0:	44 5f                	rex.R pop rdi
    1ce2:	46                   	rex.RX
    1ce3:	45                   	rex.RB
    1ce4:	41 54                	push   r12
    1ce6:	5f                   	pop    rdi
    1ce7:	45                   	rex.RB
    1ce8:	43 58                	rex.XB pop r8
    1cea:	5f                   	pop    rdi
    1ceb:	4f 53                	rex.WRXB push r11
    1ced:	58                   	pop    rax
    1cee:	53                   	push   rbx
    1cef:	41 56                	push   r14
    1cf1:	45 00 75 69          	add    BYTE PTR [r13+0x69],r14b
    1cf5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cf6:	74 36                	je     1d2e <stivale_hdr-0x1fe2d2>
    1cf8:	34 5f                	xor    al,0x5f
    1cfa:	74 00                	je     1cfc <stivale_hdr-0x1fe304>
    1cfc:	24 67                	and    al,0x67
    1cfe:	65 74 5f             	gs je  1d60 <stivale_hdr-0x1fe2a0>
    1d01:	69 6e 66 6f 00 24 63 	imul   ebp,DWORD PTR [rsi+0x66],0x6324006f
    1d08:	70 75                	jo     1d7f <stivale_hdr-0x1fe281>
    1d0a:	69 6e 66 6f 00 69 74 	imul   ebp,DWORD PTR [rsi+0x66],0x7469006f
    1d11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d12:	61                   	(bad)  
    1d13:	00 24 24             	add    BYTE PTR [rsp],ah
    1d16:	68 65 6c 70 00       	push   0x706c65
    1d1b:	5f                   	pop    rdi
    1d1c:	5a                   	pop    rdx
    1d1d:	31 34 6b             	xor    DWORD PTR [rbx+rbp*2],esi
    1d20:	65 79 62             	gs jns 1d85 <stivale_hdr-0x1fe27b>
    1d23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d24:	61                   	(bad)  
    1d25:	72 64                	jb     1d8b <stivale_hdr-0x1fe275>
    1d27:	5f                   	pop    rdi
    1d28:	65 76 65             	gs jbe 1d90 <stivale_hdr-0x1fe270>
    1d2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d2c:	74 31                	je     1d5f <stivale_hdr-0x1fe2a1>
    1d2e:	39 6b 65             	cmp    DWORD PTR [rbx+0x65],ebp
    1d31:	79 62                	jns    1d95 <stivale_hdr-0x1fe26b>
    1d33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d34:	61                   	(bad)  
    1d35:	72 64                	jb     1d9b <stivale_hdr-0x1fe265>
    1d37:	5f                   	pop    rdi
    1d38:	65 76 65             	gs jbe 1da0 <stivale_hdr-0x1fe260>
    1d3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d3c:	74 5f                	je     1d9d <stivale_hdr-0x1fe263>
    1d3e:	61                   	(bad)  
    1d3f:	72 67                	jb     1da8 <stivale_hdr-0x1fe258>
    1d41:	73 00                	jae    1d43 <stivale_hdr-0x1fe2bd>
    1d43:	24 73                	and    al,0x73
    1d45:	75 62                	jne    1da9 <stivale_hdr-0x1fe257>
    1d47:	73 63                	jae    1dac <stivale_hdr-0x1fe254>
    1d49:	72 69                	jb     1db4 <stivale_hdr-0x1fe24c>
    1d4b:	62                   	(bad)  
    1d4c:	65 5f                	gs pop rdi
    1d4e:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
    1d52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d53:	61                   	(bad)  
    1d54:	72 64                	jb     1dba <stivale_hdr-0x1fe246>
    1d56:	5f                   	pop    rdi
    1d57:	65 76 65             	gs jbe 1dbf <stivale_hdr-0x1fe241>
    1d5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d5b:	74 00                	je     1d5d <stivale_hdr-0x1fe2a3>
    1d5d:	5f                   	pop    rdi
    1d5e:	5a                   	pop    rdx
    1d5f:	36 24 24             	ss and al,0x24
    1d62:	68 65 6c 70 76       	push   0x76706c65
    1d67:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d6a:	39 24 67             	cmp    DWORD PTR [rdi+riz*2],esp
    1d6d:	65 74 5f             	gs je  1dcf <stivale_hdr-0x1fe231>
    1d70:	69 6e 66 6f 68 00 5f 	imul   ebp,DWORD PTR [rsi+0x66],0x5f00686f
    1d77:	5a                   	pop    rdx
    1d78:	37                   	(bad)  
    1d79:	24 6d                	and    al,0x6d
    1d7b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1d7d:	73 65                	jae    1de4 <stivale_hdr-0x1fe21c>
    1d7f:	74 50                	je     1dd1 <stivale_hdr-0x1fe22f>
    1d81:	76 68                	jbe    1deb <stivale_hdr-0x1fe215>
    1d83:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d84:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d87:	32 35 24 73 75 62    	xor    dh,BYTE PTR [rip+0x62757324]        # 627590b1 <__kernel_end+0x625470b1>
    1d8d:	73 63                	jae    1df2 <stivale_hdr-0x1fe20e>
    1d8f:	72 69                	jb     1dfa <stivale_hdr-0x1fe206>
    1d91:	62                   	(bad)  
    1d92:	65 5f                	gs pop rdi
    1d94:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
    1d98:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d99:	61                   	(bad)  
    1d9a:	72 64                	jb     1e00 <stivale_hdr-0x1fe200>
    1d9c:	5f                   	pop    rdi
    1d9d:	65 76 65             	gs jbe 1e05 <stivale_hdr-0x1fe1fb>
    1da0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1da1:	74 50                	je     1df3 <stivale_hdr-0x1fe20d>
    1da3:	46 76 31             	rex.RX jbe 1dd7 <stivale_hdr-0x1fe229>
    1da6:	39 6b 65             	cmp    DWORD PTR [rbx+0x65],ebp
    1da9:	79 62                	jns    1e0d <stivale_hdr-0x1fe1f3>
    1dab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dac:	61                   	(bad)  
    1dad:	72 64                	jb     1e13 <stivale_hdr-0x1fe1ed>
    1daf:	5f                   	pop    rdi
    1db0:	65 76 65             	gs jbe 1e18 <stivale_hdr-0x1fe1e8>
    1db3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1db4:	74 5f                	je     1e15 <stivale_hdr-0x1fe1eb>
    1db6:	61                   	(bad)  
    1db7:	72 67                	jb     1e20 <stivale_hdr-0x1fe1e0>
    1db9:	73 45                	jae    1e00 <stivale_hdr-0x1fe200>
    1dbb:	00 24 73             	add    BYTE PTR [rbx+rsi*2],ah
    1dbe:	74 72                	je     1e32 <stivale_hdr-0x1fe1ce>
    1dc0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1dc3:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
    1dc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dc7:	61                   	(bad)  
    1dc8:	5f                   	pop    rdi
    1dc9:	62                   	(bad)  
    1dca:	75 66                	jne    1e32 <stivale_hdr-0x1fe1ce>
    1dcc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1dcf:	39 24 24             	cmp    DWORD PTR [rsp],esp
    1dd2:	6d                   	ins    DWORD PTR es:[rdi],dx
    1dd3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1dd5:	69 6e 66 6f 76 00 77 	imul   ebp,DWORD PTR [rsi+0x66],0x7700766f
    1ddc:	72 69                	jb     1e47 <stivale_hdr-0x1fe1b9>
    1dde:	74 65                	je     1e45 <stivale_hdr-0x1fe1bb>
    1de0:	5f                   	pop    rdi
    1de1:	74 74                	je     1e57 <stivale_hdr-0x1fe1a9>
    1de3:	79 00                	jns    1de5 <stivale_hdr-0x1fe21b>
    1de5:	75 6d                	jne    1e54 <stivale_hdr-0x1fe1ac>
    1de7:	61                   	(bad)  
    1de8:	69 6e 00 69 74 6f 61 	imul   ebp,DWORD PTR [rsi+0x0],0x616f7469
    1def:	5f                   	pop    rdi
    1df0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1df3:	72 61                	jb     1e56 <stivale_hdr-0x1fe1aa>
    1df5:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    1df9:	73 00                	jae    1dfb <stivale_hdr-0x1fe205>
    1dfb:	5f                   	pop    rdi
    1dfc:	5a                   	pop    rdx
    1dfd:	31 30                	xor    DWORD PTR [rax],esi
    1dff:	24 24                	and    al,0x24
    1e01:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1e04:	5f                   	pop    rdi
    1e05:	69 6e 66 6f 76 00 24 	imul   ebp,DWORD PTR [rsi+0x66],0x2400766f
    1e0c:	24 6d                	and    al,0x6d
    1e0e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1e10:	69 6e 66 6f 00 24 61 	imul   ebp,DWORD PTR [rsi+0x66],0x6124006f
    1e17:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e18:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e19:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e1a:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    1e1d:	65 5f                	gs pop rdi
    1e1f:	70 61                	jo     1e82 <stivale_hdr-0x1fe17e>
    1e21:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    1e26:	34 69                	xor    al,0x69
    1e28:	74 6f                	je     1e99 <stivale_hdr-0x1fe167>
    1e2a:	61                   	(bad)  
    1e2b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e2c:	69 00 73 6c 68 73    	imul   eax,DWORD PTR [rax],0x73686c73
    1e32:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
    1e35:	62 73                	(bad)  
    1e37:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    1e3a:	62                   	(bad)  
    1e3b:	65 5f                	gs pop rdi
    1e3d:	6b 62 64 5f          	imul   esp,DWORD PTR [rdx+0x64],0x5f
    1e41:	65 76 65             	gs jbe 1ea9 <stivale_hdr-0x1fe157>
    1e44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e45:	74 00                	je     1e47 <stivale_hdr-0x1fe1b9>
    1e47:	65 76 65             	gs jbe 1eaf <stivale_hdr-0x1fe151>
    1e4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e4b:	74 5f                	je     1eac <stivale_hdr-0x1fe154>
    1e4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e4e:	63 63 75             	movsxd esp,DWORD PTR [rbx+0x75]
    1e51:	72 65                	jb     1eb8 <stivale_hdr-0x1fe148>
    1e53:	64 00 24 70          	add    BYTE PTR fs:[rax+rsi*2],ah
    1e57:	72 69                	jb     1ec2 <stivale_hdr-0x1fe13e>
    1e59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e5a:	74 00                	je     1e5c <stivale_hdr-0x1fe1a4>
    1e5c:	24 70                	and    al,0x70
    1e5e:	65 72 66             	gs jb  1ec7 <stivale_hdr-0x1fe139>
    1e61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e62:	72 6d                	jb     1ed1 <stivale_hdr-0x1fe12f>
    1e64:	5f                   	pop    rdi
    1e65:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1e68:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e69:	61                   	(bad)  
    1e6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e6b:	64 00 73 72          	add    BYTE PTR fs:[rbx+0x72],dh
    1e6f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1e71:	75 73                	jne    1ee6 <stivale_hdr-0x1fe11a>
    1e73:	65 72 73             	gs jb  1ee9 <stivale_hdr-0x1fe117>
    1e76:	70 61                	jo     1ed9 <stivale_hdr-0x1fe127>
    1e78:	63 65 2f             	movsxd esp,DWORD PTR [rbp+0x2f]
    1e7b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1e7d:	74 72                	je     1ef1 <stivale_hdr-0x1fe10f>
    1e7f:	79 2f                	jns    1eb0 <stivale_hdr-0x1fe150>
    1e81:	75 6d                	jne    1ef0 <stivale_hdr-0x1fe110>
    1e83:	61                   	(bad)  
    1e84:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
    1e8b:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1e8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e8f:	61                   	(bad)  
    1e90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e91:	64 5f                	fs pop rdi
    1e93:	62                   	(bad)  
    1e94:	75 66                	jne    1efc <stivale_hdr-0x1fe104>
    1e96:	66 65 72 5f          	data16 gs jb 1ef9 <stivale_hdr-0x1fe107>
    1e9a:	69 6e 64 65 78 00 73 	imul   ebp,DWORD PTR [rsi+0x64],0x73007865
    1ea1:	79 73                	jns    1f16 <stivale_hdr-0x1fe0ea>
    1ea3:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    1ea6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ea7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1eaa:	36 24 70             	ss and al,0x70
    1ead:	72 69                	jb     1f18 <stivale_hdr-0x1fe0e8>
    1eaf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1eb0:	74 50                	je     1f02 <stivale_hdr-0x1fe0fe>
    1eb2:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    1eb5:	75 73                	jne    1f2a <stivale_hdr-0x1fe0d6>
    1eb7:	65 64 5f             	gs fs pop rdi
    1eba:	72 61                	jb     1f1d <stivale_hdr-0x1fe0e3>
    1ebc:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ebd:	00 24 63             	add    BYTE PTR [rbx+riz*2],ah
    1ec0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ec1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ec2:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ec3:	61                   	(bad)  
    1ec4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ec5:	64 5f                	fs pop rdi
    1ec7:	62                   	(bad)  
    1ec8:	75 66                	jne    1f30 <stivale_hdr-0x1fe0d0>
    1eca:	66 65 72 00          	data16 gs jb 1ece <stivale_hdr-0x1fe132>
    1ece:	24 6d                	and    al,0x6d
    1ed0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1ed2:	73 65                	jae    1f39 <stivale_hdr-0x1fe0c7>
    1ed4:	74 00                	je     1ed6 <stivale_hdr-0x1fe12a>
    1ed6:	5f                   	pop    rdi
    1ed7:	5a                   	pop    rdx
    1ed8:	37                   	(bad)  
    1ed9:	24 73                	and    al,0x73
    1edb:	74 72                	je     1f4f <stivale_hdr-0x1fe0b1>
    1edd:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1ee0:	50                   	push   rax
    1ee1:	4b 63 53 30          	rex.WXB movsxd rdx,DWORD PTR [r11+0x30]
    1ee5:	5f                   	pop    rdi
    1ee6:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    1ee9:	75 66                	jne    1f51 <stivale_hdr-0x1fe0af>
    1eeb:	66 65 72 00          	data16 gs jb 1eef <stivale_hdr-0x1fe111>
    1eef:	70 72                	jo     1f63 <stivale_hdr-0x1fe09d>
    1ef1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ef2:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ef3:	70 74                	jo     1f69 <stivale_hdr-0x1fe097>
    1ef5:	5f                   	pop    rdi
    1ef6:	77 61                	ja     1f59 <stivale_hdr-0x1fe0a7>
    1ef8:	69 74 69 6e 67 00 5f 	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x5a5f0067
    1eff:	5a 
    1f00:	31 36                	xor    DWORD PTR [rsi],esi
    1f02:	24 70                	and    al,0x70
    1f04:	65 72 66             	gs jb  1f6d <stivale_hdr-0x1fe093>
    1f07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f08:	72 6d                	jb     1f77 <stivale_hdr-0x1fe089>
    1f0a:	5f                   	pop    rdi
    1f0b:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    1f0e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f0f:	61                   	(bad)  
    1f10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f11:	64 50                	fs push rax
    1f13:	63 00                	movsxd eax,DWORD PTR [rax]
    1f15:	24 70                	and    al,0x70
    1f17:	72 6f                	jb     1f88 <stivale_hdr-0x1fe078>
    1f19:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f1a:	70 74                	jo     1f90 <stivale_hdr-0x1fe070>
    1f1c:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    1f1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f20:	74 38                	je     1f5a <stivale_hdr-0x1fe0a6>
    1f22:	5f                   	pop    rdi
    1f23:	74 00                	je     1f25 <stivale_hdr-0x1fe0db>
    1f25:	24 24                	and    al,0x24
    1f27:	63 70 75             	movsxd esi,DWORD PTR [rax+0x75]
    1f2a:	5f                   	pop    rdi
    1f2b:	69 6e 66 6f 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f006f
    1f32:	37                   	(bad)  
    1f33:	24 70                	and    al,0x70
    1f35:	72 6f                	jb     1fa6 <stivale_hdr-0x1fe05a>
    1f37:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f38:	70 74                	jo     1fae <stivale_hdr-0x1fe052>
    1f3a:	76 00                	jbe    1f3c <stivale_hdr-0x1fe0c4>
    1f3c:	75 6e                	jne    1fac <stivale_hdr-0x1fe054>
    1f3e:	68 61 6e 64 6c       	push   0x6c646e61
    1f43:	65 64 5f             	gs fs pop rdi
    1f46:	62 61                	(bad)  
    1f48:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
    1f4b:	70 61                	jo     1fae <stivale_hdr-0x1fe052>
    1f4d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1f50:	5f                   	pop    rdi
    1f51:	5a                   	pop    rdx
    1f52:	31 34 24             	xor    DWORD PTR [rsp],esi
    1f55:	61                   	(bad)  
    1f56:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f57:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f59:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    1f5c:	65 5f                	gs pop rdi
    1f5e:	70 61                	jo     1fc1 <stivale_hdr-0x1fe03f>
    1f60:	67 65 76 00          	addr32 gs jbe 1f64 <stivale_hdr-0x1fe09c>
    1f64:	62                   	(bad)  
    1f65:	69 74 5f 69 6e 64 65 	imul   esi,DWORD PTR [rdi+rbx*2+0x69],0x7865646e
    1f6c:	78 
    1f6d:	65 72 00             	gs jb  1f70 <stivale_hdr-0x1fe090>
    1f70:	73 72                	jae    1fe4 <stivale_hdr-0x1fe01c>
    1f72:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1f74:	75 74                	jne    1fea <stivale_hdr-0x1fe016>
    1f76:	69 6c 2f 62 69 74 6d 	imul   ebp,DWORD PTR [rdi+rbp*1+0x62],0x616d7469
    1f7d:	61 
    1f7e:	70 2e                	jo     1fae <stivale_hdr-0x1fe052>
    1f80:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    1f83:	00 62 79             	add    BYTE PTR [rdx+0x79],ah
    1f86:	74 65                	je     1fed <stivale_hdr-0x1fe013>
    1f88:	5f                   	pop    rdi
    1f89:	69 6e 64 65 78 00 62 	imul   ebp,DWORD PTR [rsi+0x64],0x62007865
    1f90:	69 74 5f 69 6e 64 65 	imul   esi,DWORD PTR [rdi+rbx*2+0x69],0x7865646e
    1f97:	78 
    1f98:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    1f9b:	64 69 67 69 74 00 64 	imul   esp,DWORD PTR fs:[rdi+0x69],0x65640074
    1fa2:	65 
    1fa3:	73 74                	jae    2019 <stivale_hdr-0x1fdfe7>
    1fa5:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
    1fa8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fa9:	74 36                	je     1fe1 <stivale_hdr-0x1fe01f>
    1fab:	34 00                	xor    al,0x0
    1fad:	73 74                	jae    2023 <stivale_hdr-0x1fdfdd>
    1faf:	72 6c                	jb     201d <stivale_hdr-0x1fdfe3>
    1fb1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1fb3:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    1fb6:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    1fb8:	75 74                	jne    202e <stivale_hdr-0x1fdfd2>
    1fba:	69 6c 2f 6b 75 74 69 	imul   ebp,DWORD PTR [rdi+rbp*1+0x6b],0x6c697475
    1fc1:	6c 
    1fc2:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    1fc6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1fc9:	4e 34 75             	rex.WRX xor al,0x75
    1fcc:	74 69                	je     2037 <stivale_hdr-0x1fdfc9>
    1fce:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fcf:	37                   	(bad)  
    1fd0:	69 73 64 69 67 69 74 	imul   esi,DWORD PTR [rbx+0x64],0x74696769
    1fd7:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    1fda:	5f                   	pop    rdi
    1fdb:	5a                   	pop    rdx
    1fdc:	4e 34 75             	rex.WRX xor al,0x75
    1fdf:	74 69                	je     204a <stivale_hdr-0x1fdfb6>
    1fe1:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fe2:	36 73 74             	ss jae 2059 <stivale_hdr-0x1fdfa7>
    1fe5:	72 63                	jb     204a <stivale_hdr-0x1fdfb6>
    1fe7:	70 79                	jo     2062 <stivale_hdr-0x1fdf9e>
    1fe9:	45 50                	rex.RB push r8
    1feb:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    1fee:	63 00                	movsxd eax,DWORD PTR [rax]
    1ff0:	5f                   	pop    rdi
    1ff1:	5a                   	pop    rdx
    1ff2:	4e 34 75             	rex.WRX xor al,0x75
    1ff5:	74 69                	je     2060 <stivale_hdr-0x1fdfa0>
    1ff7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ff8:	34 69                	xor    al,0x69
    1ffa:	74 6f                	je     206b <stivale_hdr-0x1fdf95>
    1ffc:	61                   	(bad)  
    1ffd:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1fff:	69 00 5f 5a 4e 34    	imul   eax,DWORD PTR [rax],0x344e5a5f
    2005:	75 74                	jne    207b <stivale_hdr-0x1fdf85>
    2007:	69 6c 36 73 74 72 63 	imul   ebp,DWORD PTR [rsi+rsi*1+0x73],0x61637274
    200e:	61 
    200f:	74 45                	je     2056 <stivale_hdr-0x1fdfaa>
    2011:	50                   	push   rax
    2012:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    2015:	63 00                	movsxd eax,DWORD PTR [rax]
    2017:	73 74                	jae    208d <stivale_hdr-0x1fdf73>
    2019:	72 63                	jb     207e <stivale_hdr-0x1fdf82>
    201b:	61                   	(bad)  
    201c:	74 00                	je     201e <stivale_hdr-0x1fdfe2>
    201e:	73 69                	jae    2089 <stivale_hdr-0x1fdf77>
    2020:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2021:	74 00                	je     2023 <stivale_hdr-0x1fdfdd>
    2023:	73 74                	jae    2099 <stivale_hdr-0x1fdf67>
    2025:	72 63                	jb     208a <stivale_hdr-0x1fdf76>
    2027:	70 79                	jo     20a2 <stivale_hdr-0x1fdf5e>
    2029:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    202c:	4e 34 75             	rex.WRX xor al,0x75
    202f:	74 69                	je     209a <stivale_hdr-0x1fdf66>
    2031:	6c                   	ins    BYTE PTR es:[rdi],dx
    2032:	37                   	(bad)  
    2033:	73 74                	jae    20a9 <stivale_hdr-0x1fdf57>
    2035:	72 63                	jb     209a <stivale_hdr-0x1fdf66>
    2037:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2038:	6d                   	ins    DWORD PTR es:[rdi],dx
    2039:	70 45                	jo     2080 <stivale_hdr-0x1fdf80>
    203b:	50                   	push   rax
    203c:	4b 63 53 31          	rex.WXB movsxd rdx,DWORD PTR [r11+0x31]
    2040:	5f                   	pop    rdi
    2041:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2044:	4e 34 75             	rex.WRX xor al,0x75
    2047:	74 69                	je     20b2 <stivale_hdr-0x1fdf4e>
    2049:	6c                   	ins    BYTE PTR es:[rdi],dx
    204a:	36 73 74             	ss jae 20c1 <stivale_hdr-0x1fdf3f>
    204d:	72 6c                	jb     20bb <stivale_hdr-0x1fdf45>
    204f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2051:	45 50                	rex.RB push r8
    2053:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    2056:	73 74                	jae    20cc <stivale_hdr-0x1fdf34>
    2058:	72 63                	jb     20bd <stivale_hdr-0x1fdf43>
    205a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    205b:	6d                   	ins    DWORD PTR es:[rdi],dx
    205c:	70 00                	jo     205e <stivale_hdr-0x1fdfa2>
    205e:	70 63                	jo     20c3 <stivale_hdr-0x1fdf3d>
    2060:	73 70                	jae    20d2 <stivale_hdr-0x1fdf2e>
    2062:	6b 00 70             	imul   eax,DWORD PTR [rax],0x70
    2065:	6c                   	ins    BYTE PTR es:[rdi],dx
    2066:	61                   	(bad)  
    2067:	79 5f                	jns    20c8 <stivale_hdr-0x1fdf38>
    2069:	73 6f                	jae    20da <stivale_hdr-0x1fdf26>
    206b:	75 6e                	jne    20db <stivale_hdr-0x1fdf25>
    206d:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2071:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
    2075:	73 35                	jae    20ac <stivale_hdr-0x1fdf54>
    2077:	61                   	(bad)  
    2078:	75 64                	jne    20de <stivale_hdr-0x1fdf22>
    207a:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
    2081:	6b 34 62 65          	imul   esi,DWORD PTR [rdx+riz*2],0x65
    2085:	65 70 45             	gs jo  20cd <stivale_hdr-0x1fdf33>
    2088:	76 00                	jbe    208a <stivale_hdr-0x1fdf76>
    208a:	64 75 72             	fs jne 20ff <stivale_hdr-0x1fdf01>
    208d:	61                   	(bad)  
    208e:	74 69                	je     20f9 <stivale_hdr-0x1fdf07>
    2090:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2091:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2092:	00 61 75             	add    BYTE PTR [rcx+0x75],ah
    2095:	64 69 6f 00 5f 5a 4e 	imul   ebp,DWORD PTR fs:[rdi+0x0],0x334e5a5f
    209c:	33 
    209d:	73 79                	jae    2118 <stivale_hdr-0x1fdee8>
    209f:	73 35                	jae    20d6 <stivale_hdr-0x1fdf2a>
    20a1:	61                   	(bad)  
    20a2:	75 64                	jne    2108 <stivale_hdr-0x1fdef8>
    20a4:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
    20ab:	6b 34 62 65          	imul   esi,DWORD PTR [rdx+riz*2],0x65
    20af:	65 70 45             	gs jo  20f7 <stivale_hdr-0x1fdf09>
    20b2:	6a 6a                	push   0x6a
    20b4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    20b7:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
    20bb:	73 35                	jae    20f2 <stivale_hdr-0x1fdf0e>
    20bd:	61                   	(bad)  
    20be:	75 64                	jne    2124 <stivale_hdr-0x1fdedc>
    20c0:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
    20c7:	6b 31 30             	imul   esi,DWORD PTR [rcx],0x30
    20ca:	70 6c                	jo     2138 <stivale_hdr-0x1fdec8>
    20cc:	61                   	(bad)  
    20cd:	79 5f                	jns    212e <stivale_hdr-0x1fded2>
    20cf:	73 6f                	jae    2140 <stivale_hdr-0x1fdec0>
    20d1:	75 6e                	jne    2141 <stivale_hdr-0x1fdebf>
    20d3:	64 45 6a 00          	fs rex.RB push 0x0
    20d7:	62                   	(bad)  
    20d8:	65 65 70 00          	gs gs jo 20dc <stivale_hdr-0x1fdf24>
    20dc:	73 74                	jae    2152 <stivale_hdr-0x1fdeae>
    20de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20df:	70 5f                	jo     2140 <stivale_hdr-0x1fdec0>
    20e1:	73 6f                	jae    2152 <stivale_hdr-0x1fdeae>
    20e3:	75 6e                	jne    2153 <stivale_hdr-0x1fdead>
    20e5:	64 00 73 72          	add    BYTE PTR fs:[rbx+0x72],dh
    20e9:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    20eb:	64 72 69             	fs jb  2157 <stivale_hdr-0x1fdea9>
    20ee:	76 65                	jbe    2155 <stivale_hdr-0x1fdeab>
    20f0:	72 73                	jb     2165 <stivale_hdr-0x1fde9b>
    20f2:	2f                   	(bad)  
    20f3:	61                   	(bad)  
    20f4:	75 64                	jne    215a <stivale_hdr-0x1fdea6>
    20f6:	69 6f 2f 62 65 65 70 	imul   ebp,DWORD PTR [rdi+0x2f],0x70656562
    20fd:	65 72 2f             	gs jb  212f <stivale_hdr-0x1fded1>
    2100:	62                   	(bad)  
    2101:	65 65 70 65          	gs gs jo 216a <stivale_hdr-0x1fde96>
    2105:	72 2e                	jb     2135 <stivale_hdr-0x1fdecb>
    2107:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    210a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    210d:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
    2111:	73 35                	jae    2148 <stivale_hdr-0x1fdeb8>
    2113:	61                   	(bad)  
    2114:	75 64                	jne    217a <stivale_hdr-0x1fde86>
    2116:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
    211d:	6b 34 69 6e          	imul   esi,DWORD PTR [rcx+rbp*2],0x6e
    2121:	69 74 45 76 00 5f 5a 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x4e5a5f00
    2128:	4e 
    2129:	33 73 79             	xor    esi,DWORD PTR [rbx+0x79]
    212c:	73 35                	jae    2163 <stivale_hdr-0x1fde9d>
    212e:	61                   	(bad)  
    212f:	75 64                	jne    2195 <stivale_hdr-0x1fde6b>
    2131:	69 6f 35 70 63 73 70 	imul   ebp,DWORD PTR [rdi+0x35],0x70736370
    2138:	6b 31 30             	imul   esi,DWORD PTR [rcx],0x30
    213b:	73 74                	jae    21b1 <stivale_hdr-0x1fde4f>
    213d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    213e:	70 5f                	jo     219f <stivale_hdr-0x1fde61>
    2140:	73 6f                	jae    21b1 <stivale_hdr-0x1fde4f>
    2142:	75 6e                	jne    21b2 <stivale_hdr-0x1fde4e>
    2144:	64 45 76 00          	fs rex.RB jbe 2148 <stivale_hdr-0x1fdeb8>
    2148:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2149:	66 66 73 65          	data16 data16 jae 21b2 <stivale_hdr-0x1fde4e>
    214d:	74 31                	je     2180 <stivale_hdr-0x1fde80>
    214f:	00 6f 66             	add    BYTE PTR [rdi+0x66],ch
    2152:	66 73 65             	data16 jae 21ba <stivale_hdr-0x1fde46>
    2155:	74 32                	je     2189 <stivale_hdr-0x1fde77>
    2157:	00 70 69             	add    BYTE PTR [rax+0x69],dh
    215a:	63 5f 72             	movsxd ebx,DWORD PTR [rdi+0x72]
    215d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    215f:	61                   	(bad)  
    2160:	70 00                	jo     2162 <stivale_hdr-0x1fde9e>
    2162:	69 72 71 5f 75 6e 6d 	imul   esi,DWORD PTR [rdx+0x71],0x6d6e755f
    2169:	61                   	(bad)  
    216a:	73 6b                	jae    21d7 <stivale_hdr-0x1fde29>
    216c:	00 70 69             	add    BYTE PTR [rax+0x69],dh
    216f:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    2172:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2174:	64 5f                	fs pop rdi
    2176:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    2178:	69 00 69 72 71 5f    	imul   eax,DWORD PTR [rax],0x5f717269
    217e:	6d                   	ins    DWORD PTR es:[rdi],dx
    217f:	61                   	(bad)  
    2180:	73 6b                	jae    21ed <stivale_hdr-0x1fde13>
    2182:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    2185:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2186:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
    218c:	5f                   	pop    rdi
    218d:	70 69                	jo     21f8 <stivale_hdr-0x1fde08>
    218f:	63 00                	movsxd eax,DWORD PTR [rax]
    2191:	69 6f 5f 77 61 69 74 	imul   ebp,DWORD PTR [rdi+0x5f],0x74696177
    2198:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    219b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    219d:	64 72 69             	fs jb  2209 <stivale_hdr-0x1fddf7>
    21a0:	76 65                	jbe    2207 <stivale_hdr-0x1fddf9>
    21a2:	72 73                	jb     2217 <stivale_hdr-0x1fdde9>
    21a4:	2f                   	(bad)  
    21a5:	38 32                	cmp    BYTE PTR [rdx],dh
    21a7:	35 39 2f 70 69       	xor    eax,0x69702f39
    21ac:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    21ae:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    21b1:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
    21b4:	73 74                	jae    222a <stivale_hdr-0x1fddd6>
    21b6:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    21b9:	61                   	(bad)  
    21ba:	72 74                	jb     2230 <stivale_hdr-0x1fddd0>
    21bc:	5f                   	pop    rdi
    21bd:	62                   	(bad)  
    21be:	75 73                	jne    2233 <stivale_hdr-0x1fddcd>
    21c0:	00 63 61             	add    BYTE PTR [rbx+0x61],ah
    21c3:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    21c6:	5f                   	pop    rdi
    21c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    21c8:	69 6e 65 5f 73 69 7a 	imul   ebp,DWORD PTR [rsi+0x65],0x7a69735f
    21cf:	65 00 70 63          	add    BYTE PTR gs:[rax+0x63],dh
    21d3:	69 5f 73 65 67 6d 65 	imul   ebx,DWORD PTR [rdi+0x73],0x656d6765
    21da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21db:	74 5f                	je     223c <stivale_hdr-0x1fddc4>
    21dd:	67 72 6f             	addr32 jb 224f <stivale_hdr-0x1fddb1>
    21e0:	75 70                	jne    2252 <stivale_hdr-0x1fddae>
    21e2:	00 6d 63             	add    BYTE PTR [rbp+0x63],ch
    21e5:	66 67 5f             	addr32 pop di
    21e8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    21ea:	74 72                	je     225e <stivale_hdr-0x1fdda2>
    21ec:	69 65 73 00 63 75 72 	imul   esp,DWORD PTR [rbp+0x73],0x72756300
    21f3:	72 65                	jb     225a <stivale_hdr-0x1fdda6>
    21f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21f6:	74 5f                	je     2257 <stivale_hdr-0x1fdda9>
    21f8:	64 65 76 69          	fs gs jbe 2265 <stivale_hdr-0x1fdd9b>
    21fc:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    21ff:	66 75 6e             	data16 jne 2270 <stivale_hdr-0x1fdd90>
    2202:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    2206:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2207:	5f                   	pop    rdi
    2208:	61                   	(bad)  
    2209:	64 64 72 65          	fs fs jb 2272 <stivale_hdr-0x1fdd8e>
    220d:	73 73                	jae    2282 <stivale_hdr-0x1fdd7e>
    220f:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2212:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2214:	64 72 69             	fs jb  2280 <stivale_hdr-0x1fdd80>
    2217:	76 65                	jbe    227e <stivale_hdr-0x1fdd82>
    2219:	72 73                	jb     228e <stivale_hdr-0x1fdd72>
    221b:	2f                   	(bad)  
    221c:	61                   	(bad)  
    221d:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2220:	2f                   	(bad)  
    2221:	70 63                	jo     2286 <stivale_hdr-0x1fdd7a>
    2223:	69 2e 63 70 70 00    	imul   ebp,DWORD PTR [rsi],0x707063
    2229:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    222b:	75 6d                	jne    229a <stivale_hdr-0x1fdd66>
    222d:	65 72 61             	gs jb  2291 <stivale_hdr-0x1fdd6f>
    2230:	74 65                	je     2297 <stivale_hdr-0x1fdd69>
    2232:	5f                   	pop    rdi
    2233:	64 65 76 69          	fs gs jbe 22a0 <stivale_hdr-0x1fdd60>
    2237:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    223a:	62                   	(bad)  
    223b:	75 73                	jne    22b0 <stivale_hdr-0x1fdd50>
    223d:	5f                   	pop    rdi
    223e:	61                   	(bad)  
    223f:	64 64 72 65          	fs fs jb 22a8 <stivale_hdr-0x1fdd58>
    2243:	73 73                	jae    22b8 <stivale_hdr-0x1fdd48>
    2245:	00 64 65 76          	add    BYTE PTR [rbp+riz*2+0x76],ah
    2249:	69 63 65 5f 63 6c 61 	imul   esp,DWORD PTR [rbx+0x65],0x616c635f
    2250:	73 73                	jae    22c5 <stivale_hdr-0x1fdd3b>
    2252:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    2255:	75 6d                	jne    22c4 <stivale_hdr-0x1fdd3c>
    2257:	65 72 61             	gs jb  22bb <stivale_hdr-0x1fdd45>
    225a:	74 65                	je     22c1 <stivale_hdr-0x1fdd3f>
    225c:	5f                   	pop    rdi
    225d:	66 75 6e             	data16 jne 22ce <stivale_hdr-0x1fdd32>
    2260:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    2264:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2265:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    2268:	75 6d                	jne    22d7 <stivale_hdr-0x1fdd29>
    226a:	65 72 61             	gs jb  22ce <stivale_hdr-0x1fdd32>
    226d:	74 65                	je     22d4 <stivale_hdr-0x1fdd2c>
    226f:	5f                   	pop    rdi
    2270:	62                   	(bad)  
    2271:	75 73                	jne    22e6 <stivale_hdr-0x1fdd1a>
    2273:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2276:	31 33                	xor    DWORD PTR [rbx],esi
    2278:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    227a:	75 6d                	jne    22e9 <stivale_hdr-0x1fdd17>
    227c:	65 72 61             	gs jb  22e0 <stivale_hdr-0x1fdd20>
    227f:	74 65                	je     22e6 <stivale_hdr-0x1fdd1a>
    2281:	5f                   	pop    rdi
    2282:	62                   	(bad)  
    2283:	75 73                	jne    22f8 <stivale_hdr-0x1fdd08>
    2285:	6d                   	ins    DWORD PTR es:[rdi],dx
    2286:	6d                   	ins    DWORD PTR es:[rdi],dx
    2287:	00 64 65 76          	add    BYTE PTR [rbp+riz*2+0x76],ah
    228b:	69 63 65 5f 61 64 64 	imul   esp,DWORD PTR [rbx+0x65],0x6464615f
    2292:	72 65                	jb     22f9 <stivale_hdr-0x1fdd07>
    2294:	73 73                	jae    2309 <stivale_hdr-0x1fdcf7>
    2296:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    2299:	75 6d                	jne    2308 <stivale_hdr-0x1fdcf8>
    229b:	65 72 61             	gs jb  22ff <stivale_hdr-0x1fdd01>
    229e:	74 65                	je     2305 <stivale_hdr-0x1fdcfb>
    22a0:	5f                   	pop    rdi
    22a1:	70 63                	jo     2306 <stivale_hdr-0x1fdcfa>
    22a3:	69 00 6c 61 74 65    	imul   eax,DWORD PTR [rax],0x6574616c
    22a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22aa:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    22ad:	74 69                	je     2318 <stivale_hdr-0x1fdce8>
    22af:	6d                   	ins    DWORD PTR es:[rdi],dx
    22b0:	65 72 00             	gs jb  22b3 <stivale_hdr-0x1fdd4d>
    22b3:	5f                   	pop    rdi
    22b4:	5a                   	pop    rdx
    22b5:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    22b9:	33 70 63             	xor    esi,DWORD PTR [rax+0x63]
    22bc:	69 31 33 65 6e 75    	imul   esi,DWORD PTR [rcx],0x756e6533
    22c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    22c3:	65 72 61             	gs jb  2327 <stivale_hdr-0x1fdcd9>
    22c6:	74 65                	je     232d <stivale_hdr-0x1fdcd3>
    22c8:	5f                   	pop    rdi
    22c9:	70 63                	jo     232e <stivale_hdr-0x1fdcd2>
    22cb:	69 45 76 00 5f 5a 31 	imul   eax,DWORD PTR [rbp+0x76],0x315a5f00
    22d2:	38 65 6e             	cmp    BYTE PTR [rbp+0x6e],ah
    22d5:	75 6d                	jne    2344 <stivale_hdr-0x1fdcbc>
    22d7:	65 72 61             	gs jb  233b <stivale_hdr-0x1fdcc5>
    22da:	74 65                	je     2341 <stivale_hdr-0x1fdcbf>
    22dc:	5f                   	pop    rdi
    22dd:	66 75 6e             	data16 jne 234e <stivale_hdr-0x1fdcb2>
    22e0:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    22e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22e5:	6d                   	ins    DWORD PTR es:[rdi],dx
    22e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    22e7:	00 64 65 76          	add    BYTE PTR [rbp+riz*2+0x76],ah
    22eb:	69 63 65 5f 69 64 00 	imul   esp,DWORD PTR [rbx+0x65],0x64695f
    22f2:	64 65 76 69          	fs gs jbe 235f <stivale_hdr-0x1fdca1>
    22f6:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    22f9:	73 75                	jae    2370 <stivale_hdr-0x1fdc90>
    22fb:	62 63 6c 61 73       	(bad)
    2300:	73 00                	jae    2302 <stivale_hdr-0x1fdcfe>
    2302:	70 72                	jo     2376 <stivale_hdr-0x1fdc8a>
    2304:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2305:	67 72 61             	addr32 jb 2369 <stivale_hdr-0x1fdc97>
    2308:	6d                   	ins    DWORD PTR es:[rdi],dx
    2309:	5f                   	pop    rdi
    230a:	69 6e 74 65 72 66 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
    2311:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2314:	5f                   	pop    rdi
    2315:	5a                   	pop    rdx
    2316:	31 36                	xor    DWORD PTR [rsi],esi
    2318:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    231a:	75 6d                	jne    2389 <stivale_hdr-0x1fdc77>
    231c:	65 72 61             	gs jb  2380 <stivale_hdr-0x1fdc80>
    231f:	74 65                	je     2386 <stivale_hdr-0x1fdc7a>
    2321:	5f                   	pop    rdi
    2322:	64 65 76 69          	fs gs jbe 238f <stivale_hdr-0x1fdc71>
    2326:	63 65 6d             	movsxd esp,DWORD PTR [rbp+0x6d]
    2329:	6d                   	ins    DWORD PTR es:[rdi],dx
    232a:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    232d:	64 5f                	fs pop rdi
    232f:	62                   	(bad)  
    2330:	75 73                	jne    23a5 <stivale_hdr-0x1fdc5b>
    2332:	00 64 65 76          	add    BYTE PTR [rbp+riz*2+0x76],ah
    2336:	69 63 65 5f 63 6f 6e 	imul   esp,DWORD PTR [rbx+0x65],0x6e6f635f
    233d:	66 69 67 75 72 61    	imul   sp,WORD PTR [rdi+0x75],0x6172
    2343:	74 69                	je     23ae <stivale_hdr-0x1fdc52>
    2345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2346:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2347:	00 68 65             	add    BYTE PTR [rax+0x65],ch
    234a:	61                   	(bad)  
    234b:	64 65 72 5f          	fs gs jb 23ae <stivale_hdr-0x1fdc52>
    234f:	74 79                	je     23ca <stivale_hdr-0x1fdc36>
    2351:	70 65                	jo     23b8 <stivale_hdr-0x1fdc48>
    2353:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2356:	76 69                	jbe    23c1 <stivale_hdr-0x1fdc3f>
    2358:	73 69                	jae    23c3 <stivale_hdr-0x1fdc3d>
    235a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    235b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    235c:	5f                   	pop    rdi
    235d:	69 64 00 73 68 75 74 	imul   esp,DWORD PTR [rax+rax*1+0x73],0x64747568
    2364:	64 
    2365:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2366:	77 6e                	ja     23d6 <stivale_hdr-0x1fdc2a>
    2368:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    236b:	73 74                	jae    23e1 <stivale_hdr-0x1fdc1f>
    236d:	61                   	(bad)  
    236e:	72 74                	jb     23e4 <stivale_hdr-0x1fdc1c>
    2370:	5f                   	pop    rdi
    2371:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2374:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    2378:	73 74                	jae    23ee <stivale_hdr-0x1fdc12>
    237a:	61                   	(bad)  
    237b:	72 74                	jb     23f1 <stivale_hdr-0x1fdc0f>
    237d:	5f                   	pop    rdi
    237e:	77 61                	ja     23e1 <stivale_hdr-0x1fdc1f>
    2380:	72 6d                	jb     23ef <stivale_hdr-0x1fdc11>
    2382:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2385:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2387:	64 72 69             	fs jb  23f3 <stivale_hdr-0x1fdc0d>
    238a:	76 65                	jbe    23f1 <stivale_hdr-0x1fdc0f>
    238c:	72 73                	jb     2401 <stivale_hdr-0x1fdbff>
    238e:	2f                   	(bad)  
    238f:	61                   	(bad)  
    2390:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    2393:	2f                   	(bad)  
    2394:	70 6f                	jo     2405 <stivale_hdr-0x1fdbfb>
    2396:	77 65                	ja     23fd <stivale_hdr-0x1fdc03>
    2398:	72 2e                	jb     23c8 <stivale_hdr-0x1fdc38>
    239a:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    239d:	00 70 6f             	add    BYTE PTR [rax+0x6f],dh
    23a0:	77 65                	ja     2407 <stivale_hdr-0x1fdbf9>
    23a2:	72 00                	jb     23a4 <stivale_hdr-0x1fdc5c>
    23a4:	73 65                	jae    240b <stivale_hdr-0x1fdbf5>
    23a6:	72 69                	jb     2411 <stivale_hdr-0x1fdbef>
    23a8:	61                   	(bad)  
    23a9:	6c                   	ins    BYTE PTR es:[rdi],dx
    23aa:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    23ad:	74 5f                	je     240e <stivale_hdr-0x1fdbf2>
    23af:	74 61                	je     2412 <stivale_hdr-0x1fdbee>
    23b1:	62                   	(bad)  
    23b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    23b3:	65 00 73 72          	add    BYTE PTR gs:[rbx+0x72],dh
    23b7:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    23b9:	64 72 69             	fs jb  2425 <stivale_hdr-0x1fdbdb>
    23bc:	76 65                	jbe    2423 <stivale_hdr-0x1fdbdd>
    23be:	72 73                	jb     2433 <stivale_hdr-0x1fdbcd>
    23c0:	2f                   	(bad)  
    23c1:	61                   	(bad)  
    23c2:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    23c5:	2f                   	(bad)  
    23c6:	61                   	(bad)  
    23c7:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    23ca:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    23ce:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    23d1:	4e 33 73 79          	rex.WRX xor r14,QWORD PTR [rbx+0x79]
    23d5:	73 34                	jae    240b <stivale_hdr-0x1fdbf5>
    23d7:	61                   	(bad)  
    23d8:	63 70 69             	movsxd esi,DWORD PTR [rax+0x69]
    23db:	39 67 65             	cmp    DWORD PTR [rdi+0x65],esp
    23de:	74 5f                	je     243f <stivale_hdr-0x1fdbc1>
    23e0:	74 61                	je     2443 <stivale_hdr-0x1fdbbd>
    23e2:	62                   	(bad)  
    23e3:	6c                   	ins    BYTE PTR es:[rdi],dx
    23e4:	65 45 50             	gs rex.RB push r8
    23e7:	63 00                	movsxd eax,DWORD PTR [rax]
    23e9:	73 65                	jae    2450 <stivale_hdr-0x1fdbb0>
    23eb:	72 69                	jb     2456 <stivale_hdr-0x1fdbaa>
    23ed:	61                   	(bad)  
    23ee:	6c                   	ins    BYTE PTR es:[rdi],dx
    23ef:	5f                   	pop    rdi
    23f0:	62                   	(bad)  
    23f1:	79 74                	jns    2467 <stivale_hdr-0x1fdb99>
    23f3:	65 00 78 73          	add    BYTE PTR gs:[rax+0x73],bh
    23f7:	64 74 5f             	fs je  2459 <stivale_hdr-0x1fdba7>
    23fa:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    23fc:	74 72                	je     2470 <stivale_hdr-0x1fdb90>
    23fe:	69 65 73 00 63 75 72 	imul   esp,DWORD PTR [rbp+0x73],0x72756300
    2405:	72 65                	jb     246c <stivale_hdr-0x1fdb94>
    2407:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2408:	74 5f                	je     2469 <stivale_hdr-0x1fdb97>
    240a:	73 64                	jae    2470 <stivale_hdr-0x1fdb90>
    240c:	74 5f                	je     246d <stivale_hdr-0x1fdb93>
    240e:	68 65 61 64 65       	push   0x65646165
    2413:	72 00                	jb     2415 <stivale_hdr-0x1fdbeb>
    2415:	73 72                	jae    2489 <stivale_hdr-0x1fdb77>
    2417:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2419:	64 72 69             	fs jb  2485 <stivale_hdr-0x1fdb7b>
    241c:	76 65                	jbe    2483 <stivale_hdr-0x1fdb7d>
    241e:	72 73                	jb     2493 <stivale_hdr-0x1fdb6d>
    2420:	2f                   	(bad)  
    2421:	74 74                	je     2497 <stivale_hdr-0x1fdb69>
    2423:	79 2f                	jns    2454 <stivale_hdr-0x1fdbac>
    2425:	74 74                	je     249b <stivale_hdr-0x1fdb65>
    2427:	79 2e                	jns    2457 <stivale_hdr-0x1fdba9>
    2429:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    242c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    242f:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2433:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2437:	33 72 6f             	xor    esi,DWORD PTR [rdx+0x6f]
    243a:	77 45                	ja     2481 <stivale_hdr-0x1fdb7f>
    243c:	00 73 69             	add    BYTE PTR [rbx+0x69],dh
    243f:	7a 65                	jp     24a6 <stivale_hdr-0x1fdb5a>
    2441:	5f                   	pop    rdi
    2442:	74 00                	je     2444 <stivale_hdr-0x1fdbbc>
    2444:	5f                   	pop    rdi
    2445:	5a                   	pop    rdx
    2446:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    244a:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    244e:	31 38                	xor    DWORD PTR [rax],edi
    2450:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2453:	76 65                	jbe    24ba <stivale_hdr-0x1fdb46>
    2455:	72 74                	jb     24cb <stivale_hdr-0x1fdb35>
    2457:	5f                   	pop    rdi
    2458:	76 67                	jbe    24c1 <stivale_hdr-0x1fdb3f>
    245a:	61                   	(bad)  
    245b:	5f                   	pop    rdi
    245c:	74 6f                	je     24cd <stivale_hdr-0x1fdb33>
    245e:	5f                   	pop    rdi
    245f:	70 69                	jo     24ca <stivale_hdr-0x1fdb36>
    2461:	78 45                	js     24a8 <stivale_hdr-0x1fdb58>
    2463:	68 00 79 70 6f       	push   0x6f707900
    2468:	73 00                	jae    246a <stivale_hdr-0x1fdb96>
    246a:	56                   	push   rsi
    246b:	47                   	rex.RXB
    246c:	41 5f                	pop    r15
    246e:	43                   	rex.XB
    246f:	4f                   	rex.WRXB
    2470:	4c                   	rex.WR
    2471:	4f 52                	rex.WRXB push r10
    2473:	5f                   	pop    rdi
    2474:	43 59                	rex.XB pop r9
    2476:	41                   	rex.B
    2477:	4e 00 73 6f          	rex.WRX add BYTE PTR [rbx+0x6f],r14b
    247b:	75 72                	jne    24ef <stivale_hdr-0x1fdb11>
    247d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2480:	73 65                	jae    24e7 <stivale_hdr-0x1fdb19>
    2482:	74 5f                	je     24e3 <stivale_hdr-0x1fdb1d>
    2484:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2487:	73 6f                	jae    24f8 <stivale_hdr-0x1fdb08>
    2489:	72 00                	jb     248b <stivale_hdr-0x1fdb75>
    248b:	70 75                	jo     2502 <stivale_hdr-0x1fdafe>
    248d:	74 5f                	je     24ee <stivale_hdr-0x1fdb12>
    248f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2491:	74 72                	je     2505 <stivale_hdr-0x1fdafb>
    2493:	79 5f                	jns    24f4 <stivale_hdr-0x1fdb0c>
    2495:	61                   	(bad)  
    2496:	74 00                	je     2498 <stivale_hdr-0x1fdb68>
    2498:	56                   	push   rsi
    2499:	47                   	rex.RXB
    249a:	41 5f                	pop    r15
    249c:	43                   	rex.XB
    249d:	4f                   	rex.WRXB
    249e:	4c                   	rex.WR
    249f:	4f 52                	rex.WRXB push r10
    24a1:	5f                   	pop    rdi
    24a2:	42                   	rex.X
    24a3:	4c 55                	rex.WR push rbp
    24a5:	45 00 56 47          	add    BYTE PTR [r14+0x47],r10b
    24a9:	41 5f                	pop    r15
    24ab:	43                   	rex.XB
    24ac:	4f                   	rex.WRXB
    24ad:	4c                   	rex.WR
    24ae:	4f 52                	rex.WRXB push r10
    24b0:	5f                   	pop    rdi
    24b1:	57                   	push   rdi
    24b2:	48                   	rex.W
    24b3:	49 54                	rex.WB push r12
    24b5:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    24b9:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    24bd:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    24c1:	31 30                	xor    DWORD PTR [rax],esi
    24c3:	73 65                	jae    252a <stivale_hdr-0x1fdad6>
    24c5:	74 5f                	je     2526 <stivale_hdr-0x1fdada>
    24c7:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    24ca:	73 6f                	jae    253b <stivale_hdr-0x1fdac5>
    24cc:	72 45                	jb     2513 <stivale_hdr-0x1fdaed>
    24ce:	6d                   	ins    DWORD PTR es:[rdi],dx
    24cf:	6d                   	ins    DWORD PTR es:[rdi],dx
    24d0:	00 78 70             	add    BYTE PTR [rax+0x70],bh
    24d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24d4:	73 00                	jae    24d6 <stivale_hdr-0x1fdb2a>
    24d6:	56                   	push   rsi
    24d7:	47                   	rex.RXB
    24d8:	41 5f                	pop    r15
    24da:	43                   	rex.XB
    24db:	4f                   	rex.WRXB
    24dc:	4c                   	rex.WR
    24dd:	4f 52                	rex.WRXB push r10
    24df:	5f                   	pop    rdi
    24e0:	52                   	push   rdx
    24e1:	45                   	rex.RB
    24e2:	44 00 56 47          	add    BYTE PTR [rsi+0x47],r10b
    24e6:	41 5f                	pop    r15
    24e8:	43                   	rex.XB
    24e9:	4f                   	rex.WRXB
    24ea:	4c                   	rex.WR
    24eb:	4f 52                	rex.WRXB push r10
    24ed:	5f                   	pop    rdi
    24ee:	4c                   	rex.WR
    24ef:	49                   	rex.WB
    24f0:	47                   	rex.RXB
    24f1:	48 54                	rex.W push rsp
    24f3:	5f                   	pop    rdi
    24f4:	47 52                	rex.RXB push r10
    24f6:	45                   	rex.RB
    24f7:	45                   	rex.RB
    24f8:	4e 00 70 6f          	rex.WRX add BYTE PTR [rax+0x6f],r14b
    24fc:	73 69                	jae    2567 <stivale_hdr-0x1fda99>
    24fe:	74 69                	je     2569 <stivale_hdr-0x1fda97>
    2500:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2501:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2502:	61                   	(bad)  
    2503:	6c                   	ins    BYTE PTR es:[rdi],dx
    2504:	5f                   	pop    rdi
    2505:	70 6f                	jo     2576 <stivale_hdr-0x1fda8a>
    2507:	69 6e 74 00 66 6f 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e6f6600
    250e:	74 5f                	je     256f <stivale_hdr-0x1fda91>
    2510:	73 65                	jae    2577 <stivale_hdr-0x1fda89>
    2512:	6c                   	ins    BYTE PTR es:[rdi],dx
    2513:	65 63 74 6f 72       	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
    2518:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    251b:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    251f:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2523:	32 32                	xor    dh,BYTE PTR [rdx]
    2525:	72 65                	jb     258c <stivale_hdr-0x1fda74>
    2527:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2528:	64 65 72 5f          	fs gs jb 258b <stivale_hdr-0x1fda75>
    252c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    252e:	74 72                	je     25a2 <stivale_hdr-0x1fda5e>
    2530:	79 5f                	jns    2591 <stivale_hdr-0x1fda6f>
    2532:	61                   	(bad)  
    2533:	74 5f                	je     2594 <stivale_hdr-0x1fda6c>
    2535:	62                   	(bad)  
    2536:	75 66                	jne    259e <stivale_hdr-0x1fda62>
    2538:	66 65 72 45          	data16 gs jb 2581 <stivale_hdr-0x1fda7f>
    253c:	74 74                	je     25b2 <stivale_hdr-0x1fda4e>
    253e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2541:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2545:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2549:	39 76 67             	cmp    DWORD PTR [rsi+0x67],esi
    254c:	61                   	(bad)  
    254d:	5f                   	pop    rdi
    254e:	77 69                	ja     25b9 <stivale_hdr-0x1fda47>
    2550:	64 74 68             	fs je  25bb <stivale_hdr-0x1fda45>
    2553:	45 00 74 65 78       	add    BYTE PTR [r13+riz*2+0x78],r14b
    2558:	74 5f                	je     25b9 <stivale_hdr-0x1fda47>
    255a:	62                   	(bad)  
    255b:	75 66                	jne    25c3 <stivale_hdr-0x1fda3d>
    255d:	66 65 72 00          	data16 gs jb 2561 <stivale_hdr-0x1fda9f>
    2561:	74 65                	je     25c8 <stivale_hdr-0x1fda38>
    2563:	72 6d                	jb     25d2 <stivale_hdr-0x1fda2e>
    2565:	5f                   	pop    rdi
    2566:	73 69                	jae    25d1 <stivale_hdr-0x1fda2f>
    2568:	7a 65                	jp     25cf <stivale_hdr-0x1fda31>
    256a:	00 72 6f             	add    BYTE PTR [rdx+0x6f],dh
    256d:	77 63                	ja     25d2 <stivale_hdr-0x1fda2e>
    256f:	00 76 67             	add    BYTE PTR [rsi+0x67],dh
    2572:	61                   	(bad)  
    2573:	5f                   	pop    rdi
    2574:	77 69                	ja     25df <stivale_hdr-0x1fda21>
    2576:	64 74 68             	fs je  25e1 <stivale_hdr-0x1fda1f>
    2579:	00 56 47             	add    BYTE PTR [rsi+0x47],dl
    257c:	41 5f                	pop    r15
    257e:	43                   	rex.XB
    257f:	4f                   	rex.WRXB
    2580:	4c                   	rex.WR
    2581:	4f 52                	rex.WRXB push r10
    2583:	5f                   	pop    rdi
    2584:	4c                   	rex.WR
    2585:	49                   	rex.WB
    2586:	47                   	rex.RXB
    2587:	48 54                	rex.W push rsp
    2589:	5f                   	pop    rdi
    258a:	43 59                	rex.XB pop r9
    258c:	41                   	rex.B
    258d:	4e 00 76 67          	rex.WRX add BYTE PTR [rsi+0x67],r14b
    2591:	61                   	(bad)  
    2592:	5f                   	pop    rdi
    2593:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2595:	74 72                	je     2609 <stivale_hdr-0x1fd9f7>
    2597:	79 00                	jns    2599 <stivale_hdr-0x1fda67>
    2599:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    259c:	75 6d                	jne    260b <stivale_hdr-0x1fd9f5>
    259e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    259f:	63 00                	movsxd eax,DWORD PTR [rax]
    25a1:	5f                   	pop    rdi
    25a2:	5a                   	pop    rdx
    25a3:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    25a7:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    25ab:	31 35 72 65 6e 64    	xor    DWORD PTR [rip+0x646e6572],esi        # 646e8b23 <__kernel_end+0x644d6b23>
    25b1:	65 72 5f             	gs jb  2613 <stivale_hdr-0x1fd9ed>
    25b4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    25b6:	74 72                	je     262a <stivale_hdr-0x1fd9d6>
    25b8:	79 5f                	jns    2619 <stivale_hdr-0x1fd9e7>
    25ba:	61                   	(bad)  
    25bb:	74 45                	je     2602 <stivale_hdr-0x1fd9fe>
    25bd:	74 74                	je     2633 <stivale_hdr-0x1fd9cd>
    25bf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    25c2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    25c6:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    25ca:	31 33                	xor    DWORD PTR [rbx],esi
    25cc:	72 65                	jb     2633 <stivale_hdr-0x1fd9cd>
    25ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25cf:	64 65 72 5f          	fs gs jb 2632 <stivale_hdr-0x1fd9ce>
    25d3:	62                   	(bad)  
    25d4:	75 66                	jne    263c <stivale_hdr-0x1fd9c4>
    25d6:	66 65 72 45          	data16 gs jb 261f <stivale_hdr-0x1fd9e1>
    25da:	76 00                	jbe    25dc <stivale_hdr-0x1fda24>
    25dc:	56                   	push   rsi
    25dd:	47                   	rex.RXB
    25de:	41 5f                	pop    r15
    25e0:	43                   	rex.XB
    25e1:	4f                   	rex.WRXB
    25e2:	4c                   	rex.WR
    25e3:	4f 52                	rex.WRXB push r10
    25e5:	5f                   	pop    rdi
    25e6:	4c                   	rex.WR
    25e7:	49                   	rex.WB
    25e8:	47                   	rex.RXB
    25e9:	48 54                	rex.W push rsp
    25eb:	5f                   	pop    rdi
    25ec:	42                   	rex.X
    25ed:	4c 55                	rex.WR push rbp
    25ef:	45 00 56 47          	add    BYTE PTR [r14+0x47],r10b
    25f3:	41 5f                	pop    r15
    25f5:	43                   	rex.XB
    25f6:	4f                   	rex.WRXB
    25f7:	4c                   	rex.WR
    25f8:	4f 52                	rex.WRXB push r10
    25fa:	5f                   	pop    rdi
    25fb:	42                   	rex.X
    25fc:	4c                   	rex.WR
    25fd:	41                   	rex.B
    25fe:	43                   	rex.XB
    25ff:	4b 00 5f 5a          	rex.WXB add BYTE PTR [r15+0x5a],bl
    2603:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2607:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    260b:	35 77 72 69 74       	xor    eax,0x74697277
    2610:	65 45 50             	gs rex.RB push r8
    2613:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    2616:	70 6f                	jo     2687 <stivale_hdr-0x1fd979>
    2618:	73 69                	jae    2683 <stivale_hdr-0x1fd97d>
    261a:	00 56 47             	add    BYTE PTR [rsi+0x47],dl
    261d:	41 5f                	pop    r15
    261f:	43                   	rex.XB
    2620:	4f                   	rex.WRXB
    2621:	4c                   	rex.WR
    2622:	4f 52                	rex.WRXB push r10
    2624:	5f                   	pop    rdi
    2625:	47 52                	rex.RXB push r10
    2627:	45                   	rex.RB
    2628:	45                   	rex.RB
    2629:	4e 00 67 65          	rex.WRX add BYTE PTR [rdi+0x65],r12b
    262d:	74 5f                	je     268e <stivale_hdr-0x1fd972>
    262f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2630:	70 74                	jo     26a6 <stivale_hdr-0x1fd95a>
    2632:	69 6d 61 6c 5f 73 69 	imul   ebp,DWORD PTR [rbp+0x61],0x69735f6c
    2639:	7a 65                	jp     26a0 <stivale_hdr-0x1fd960>
    263b:	00 56 47             	add    BYTE PTR [rsi+0x47],dl
    263e:	41 5f                	pop    r15
    2640:	43                   	rex.XB
    2641:	4f                   	rex.WRXB
    2642:	4c                   	rex.WR
    2643:	4f 52                	rex.WRXB push r10
    2645:	5f                   	pop    rdi
    2646:	4c                   	rex.WR
    2647:	49                   	rex.WB
    2648:	47                   	rex.RXB
    2649:	48 54                	rex.W push rsp
    264b:	5f                   	pop    rdi
    264c:	52                   	push   rdx
    264d:	45                   	rex.RB
    264e:	44 00 70 75          	add    BYTE PTR [rax+0x75],r14b
    2652:	74 5f                	je     26b3 <stivale_hdr-0x1fd94d>
    2654:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2657:	72 00                	jb     2659 <stivale_hdr-0x1fd9a7>
    2659:	70 75                	jo     26d0 <stivale_hdr-0x1fd930>
    265b:	74 73                	je     26d0 <stivale_hdr-0x1fd930>
    265d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2660:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2664:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2668:	36 63 6f 6c          	movsxd ebp,DWORD PTR ss:[rdi+0x6c]
    266c:	75 6d                	jne    26db <stivale_hdr-0x1fd925>
    266e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    266f:	45 00 76 67          	add    BYTE PTR [r14+0x67],r14b
    2673:	61                   	(bad)  
    2674:	5f                   	pop    rdi
    2675:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2678:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2679:	72 5f                	jb     26da <stivale_hdr-0x1fd926>
    267b:	66 67 00 5f 5a       	data16 add BYTE PTR [edi+0x5a],bl
    2680:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2684:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2688:	31 31                	xor    DWORD PTR [rcx],esi
    268a:	74 65                	je     26f1 <stivale_hdr-0x1fd90f>
    268c:	78 74                	js     2702 <stivale_hdr-0x1fd8fe>
    268e:	5f                   	pop    rdi
    268f:	62                   	(bad)  
    2690:	75 66                	jne    26f8 <stivale_hdr-0x1fd908>
    2692:	66 65 72 45          	data16 gs jb 26db <stivale_hdr-0x1fd925>
    2696:	00 56 47             	add    BYTE PTR [rsi+0x47],dl
    2699:	41 5f                	pop    r15
    269b:	43                   	rex.XB
    269c:	4f                   	rex.WRXB
    269d:	4c                   	rex.WR
    269e:	4f 52                	rex.WRXB push r10
    26a0:	5f                   	pop    rdi
    26a1:	4c                   	rex.WR
    26a2:	49                   	rex.WB
    26a3:	47                   	rex.RXB
    26a4:	48 54                	rex.W push rsp
    26a6:	5f                   	pop    rdi
    26a7:	4d                   	rex.WRB
    26a8:	41                   	rex.B
    26a9:	47                   	rex.RXB
    26aa:	45                   	rex.RB
    26ab:	4e 54                	rex.WRX push rsp
    26ad:	41 00 72 65          	add    BYTE PTR [r10+0x65],sil
    26b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26b2:	64 65 72 5f          	fs gs jb 2715 <stivale_hdr-0x1fd8eb>
    26b6:	62                   	(bad)  
    26b7:	75 66                	jne    271f <stivale_hdr-0x1fd8e1>
    26b9:	66 65 72 00          	data16 gs jb 26bd <stivale_hdr-0x1fd943>
    26bd:	5f                   	pop    rdi
    26be:	5a                   	pop    rdx
    26bf:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    26c3:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    26c7:	31 36                	xor    DWORD PTR [rsi],esi
    26c9:	67 65 74 5f          	addr32 gs je 272c <stivale_hdr-0x1fd8d4>
    26cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26ce:	70 74                	jo     2744 <stivale_hdr-0x1fd8bc>
    26d0:	69 6d 61 6c 5f 73 69 	imul   ebp,DWORD PTR [rbp+0x61],0x69735f6c
    26d7:	7a 65                	jp     273e <stivale_hdr-0x1fd8c2>
    26d9:	45                   	rex.RB
    26da:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    26de:	78 36                	js     2716 <stivale_hdr-0x1fd8ea>
    26e0:	73 68                	jae    274a <stivale_hdr-0x1fd8b6>
    26e2:	61                   	(bad)  
    26e3:	70 65                	jo     274a <stivale_hdr-0x1fd8b6>
    26e5:	73 31                	jae    2718 <stivale_hdr-0x1fd8e8>
    26e7:	32 73 5f             	xor    dh,BYTE PTR [rbx+0x5f]
    26ea:	64 69 6d 65 6e 73 69 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
    26f1:	6f 
    26f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26f3:	73 45                	jae    273a <stivale_hdr-0x1fd8c6>
    26f5:	00 62 67             	add    BYTE PTR [rdx+0x67],ah
    26f8:	5f                   	pop    rdi
    26f9:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    26fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fd:	72 00                	jb     26ff <stivale_hdr-0x1fd901>
    26ff:	73 5f                	jae    2760 <stivale_hdr-0x1fd8a0>
    2701:	70 6f                	jo     2772 <stivale_hdr-0x1fd88e>
    2703:	73 5f                	jae    2764 <stivale_hdr-0x1fd89c>
    2705:	70 6f                	jo     2776 <stivale_hdr-0x1fd88a>
    2707:	69 6e 74 00 69 74 65 	imul   ebp,DWORD PTR [rsi+0x74],0x65746900
    270e:	72 00                	jb     2710 <stivale_hdr-0x1fd8f0>
    2710:	56                   	push   rsi
    2711:	47                   	rex.RXB
    2712:	41 5f                	pop    r15
    2714:	43                   	rex.XB
    2715:	4f                   	rex.WRXB
    2716:	4c                   	rex.WR
    2717:	4f 52                	rex.WRXB push r10
    2719:	5f                   	pop    rdi
    271a:	4c                   	rex.WR
    271b:	49                   	rex.WB
    271c:	47                   	rex.RXB
    271d:	48 54                	rex.W push rsp
    271f:	5f                   	pop    rdi
    2720:	42 52                	rex.X push rdx
    2722:	4f 57                	rex.WRXB push r15
    2724:	4e 00 56 47          	rex.WRX add BYTE PTR [rsi+0x47],r10b
    2728:	41 5f                	pop    r15
    272a:	43                   	rex.XB
    272b:	4f                   	rex.WRXB
    272c:	4c                   	rex.WR
    272d:	4f 52                	rex.WRXB push r10
    272f:	5f                   	pop    rdi
    2730:	4d                   	rex.WRB
    2731:	41                   	rex.B
    2732:	47                   	rex.RXB
    2733:	45                   	rex.RB
    2734:	4e 54                	rex.WRX push rsp
    2736:	41 00 66 67          	add    BYTE PTR [r14+0x67],spl
    273a:	5f                   	pop    rdi
    273b:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    273e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    273f:	72 00                	jb     2741 <stivale_hdr-0x1fd8bf>
    2741:	5f                   	pop    rdi
    2742:	5a                   	pop    rdx
    2743:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2747:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    274b:	31 30                	xor    DWORD PTR [rax],esi
    274d:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
    2754:	69 7a 65 45 76 00 56 	imul   edi,DWORD PTR [rdx+0x65],0x56007645
    275b:	47                   	rex.RXB
    275c:	41 5f                	pop    r15
    275e:	43                   	rex.XB
    275f:	4f                   	rex.WRXB
    2760:	4c                   	rex.WR
    2761:	4f 52                	rex.WRXB push r10
    2763:	5f                   	pop    rdi
    2764:	4c                   	rex.WR
    2765:	49                   	rex.WB
    2766:	47                   	rex.RXB
    2767:	48 54                	rex.W push rsp
    2769:	5f                   	pop    rdi
    276a:	47 52                	rex.RXB push r10
    276c:	45 59                	rex.RB pop r9
    276e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2771:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2775:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2779:	35 63 6c 65 61       	xor    eax,0x61656c63
    277e:	72 45                	jb     27c5 <stivale_hdr-0x1fd83b>
    2780:	76 00                	jbe    2782 <stivale_hdr-0x1fd87e>
    2782:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2785:	76 65                	jbe    27ec <stivale_hdr-0x1fd814>
    2787:	72 74                	jb     27fd <stivale_hdr-0x1fd803>
    2789:	5f                   	pop    rdi
    278a:	76 67                	jbe    27f3 <stivale_hdr-0x1fd80d>
    278c:	61                   	(bad)  
    278d:	5f                   	pop    rdi
    278e:	74 6f                	je     27ff <stivale_hdr-0x1fd801>
    2790:	5f                   	pop    rdi
    2791:	70 69                	jo     27fc <stivale_hdr-0x1fd804>
    2793:	78 00                	js     2795 <stivale_hdr-0x1fd86b>
    2795:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    2799:	72 00                	jb     279b <stivale_hdr-0x1fd865>
    279b:	5f                   	pop    rdi
    279c:	5a                   	pop    rdx
    279d:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    27a1:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    27a5:	31 30                	xor    DWORD PTR [rax],esi
    27a7:	76 67                	jbe    2810 <stivale_hdr-0x1fd7f0>
    27a9:	61                   	(bad)  
    27aa:	5f                   	pop    rdi
    27ab:	68 65 69 67 68       	push   0x68676965
    27b0:	74 45                	je     27f7 <stivale_hdr-0x1fd809>
    27b2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    27b5:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    27b9:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    27bd:	31 32                	xor    DWORD PTR [rdx],esi
    27bf:	70 75                	jo     2836 <stivale_hdr-0x1fd7ca>
    27c1:	74 5f                	je     2822 <stivale_hdr-0x1fd7de>
    27c3:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    27c5:	74 72                	je     2839 <stivale_hdr-0x1fd7c7>
    27c7:	79 5f                	jns    2828 <stivale_hdr-0x1fd7d8>
    27c9:	61                   	(bad)  
    27ca:	74 45                	je     2811 <stivale_hdr-0x1fd7ef>
    27cc:	63 68 6d             	movsxd ebp,DWORD PTR [rax+0x6d]
    27cf:	6d                   	ins    DWORD PTR es:[rdi],dx
    27d0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    27d3:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    27d7:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    27db:	35 73 68 69 66       	xor    eax,0x66696873
    27e0:	74 45                	je     2827 <stivale_hdr-0x1fd7d9>
    27e2:	76 00                	jbe    27e4 <stivale_hdr-0x1fd81c>
    27e4:	73 5f                	jae    2845 <stivale_hdr-0x1fd7bb>
    27e6:	64 69 6d 65 6e 73 69 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
    27ed:	6f 
    27ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27ef:	73 00                	jae    27f1 <stivale_hdr-0x1fd80f>
    27f1:	70 6c                	jo     285f <stivale_hdr-0x1fd7a1>
    27f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27f4:	74 5f                	je     2855 <stivale_hdr-0x1fd7ab>
    27f6:	70 69                	jo     2861 <stivale_hdr-0x1fd79f>
    27f8:	78 65                	js     285f <stivale_hdr-0x1fd7a1>
    27fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    27fb:	00 73 63             	add    BYTE PTR [rbx+0x63],dh
    27fe:	72 65                	jb     2865 <stivale_hdr-0x1fd79b>
    2800:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2802:	5f                   	pop    rdi
    2803:	72 65                	jb     286a <stivale_hdr-0x1fd796>
    2805:	73 00                	jae    2807 <stivale_hdr-0x1fd7f9>
    2807:	5f                   	pop    rdi
    2808:	5a                   	pop    rdx
    2809:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    280d:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    2811:	38 70 75             	cmp    BYTE PTR [rax+0x75],dh
    2814:	74 5f                	je     2875 <stivale_hdr-0x1fd78b>
    2816:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2819:	72 45                	jb     2860 <stivale_hdr-0x1fd7a0>
    281b:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    281e:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2821:	75 6d                	jne    2890 <stivale_hdr-0x1fd770>
    2823:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2824:	00 77 72             	add    BYTE PTR [rdi+0x72],dh
    2827:	69 74 65 5f 6c 69 6e 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x656e696c
    282e:	65 
    282f:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2832:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2833:	64 65 72 5f          	fs gs jb 2896 <stivale_hdr-0x1fd76a>
    2837:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2839:	74 72                	je     28ad <stivale_hdr-0x1fd753>
    283b:	79 5f                	jns    289c <stivale_hdr-0x1fd764>
    283d:	61                   	(bad)  
    283e:	74 00                	je     2840 <stivale_hdr-0x1fd7c0>
    2840:	56                   	push   rsi
    2841:	47                   	rex.RXB
    2842:	41 5f                	pop    r15
    2844:	43                   	rex.XB
    2845:	4f                   	rex.WRXB
    2846:	4c                   	rex.WR
    2847:	4f 52                	rex.WRXB push r10
    2849:	5f                   	pop    rdi
    284a:	44                   	rex.R
    284b:	41 52                	push   r10
    284d:	4b 5f                	rex.WXB pop r15
    284f:	47 52                	rex.RXB push r10
    2851:	45 59                	rex.RB pop r9
    2853:	00 56 47             	add    BYTE PTR [rsi+0x47],dl
    2856:	41 5f                	pop    r15
    2858:	43                   	rex.XB
    2859:	4f                   	rex.WRXB
    285a:	4c                   	rex.WR
    285b:	4f 52                	rex.WRXB push r10
    285d:	5f                   	pop    rdi
    285e:	42 52                	rex.X push rdx
    2860:	4f 57                	rex.WRXB push r15
    2862:	4e 00 76 67          	rex.WRX add BYTE PTR [rsi+0x67],r14b
    2866:	61                   	(bad)  
    2867:	5f                   	pop    rdi
    2868:	68 65 69 67 68       	push   0x68676965
    286d:	74 00                	je     286f <stivale_hdr-0x1fd791>
    286f:	70 6c                	jo     28dd <stivale_hdr-0x1fd723>
    2871:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2872:	74 5f                	je     28d3 <stivale_hdr-0x1fd72d>
    2874:	70 69                	jo     28df <stivale_hdr-0x1fd721>
    2876:	78 65                	js     28dd <stivale_hdr-0x1fd723>
    2878:	6c                   	ins    BYTE PTR es:[rdi],dx
    2879:	5f                   	pop    rdi
    287a:	62                   	(bad)  
    287b:	75 66                	jne    28e3 <stivale_hdr-0x1fd71d>
    287d:	66 65 72 00          	data16 gs jb 2881 <stivale_hdr-0x1fd77f>
    2881:	72 65                	jb     28e8 <stivale_hdr-0x1fd718>
    2883:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2884:	64 65 72 5f          	fs gs jb 28e7 <stivale_hdr-0x1fd719>
    2888:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    288a:	74 72                	je     28fe <stivale_hdr-0x1fd702>
    288c:	79 5f                	jns    28ed <stivale_hdr-0x1fd713>
    288e:	61                   	(bad)  
    288f:	74 5f                	je     28f0 <stivale_hdr-0x1fd710>
    2891:	62                   	(bad)  
    2892:	75 66                	jne    28fa <stivale_hdr-0x1fd706>
    2894:	66 65 72 00          	data16 gs jb 2898 <stivale_hdr-0x1fd768>
    2898:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    289b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    289c:	72 43                	jb     28e1 <stivale_hdr-0x1fd71f>
    289e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    289f:	64 65 00 76 67       	fs add BYTE PTR gs:[rsi+0x67],dh
    28a4:	61                   	(bad)  
    28a5:	5f                   	pop    rdi
    28a6:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    28a9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28aa:	72 5f                	jb     290b <stivale_hdr-0x1fd6f5>
    28ac:	62                   	(bad)  
    28ad:	67 00 76 63          	add    BYTE PTR [esi+0x63],dh
    28b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    28b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28b4:	72 00                	jb     28b6 <stivale_hdr-0x1fd74a>
    28b6:	67 65 74 5f          	addr32 gs je 2919 <stivale_hdr-0x1fd6e7>
    28ba:	62                   	(bad)  
    28bb:	69 74 00 76 67 61 5f 	imul   esi,DWORD PTR [rax+rax*1+0x76],0x635f6167
    28c2:	63 
    28c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    28c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28c6:	72 00                	jb     28c8 <stivale_hdr-0x1fd738>
    28c8:	5f                   	pop    rdi
    28c9:	5a                   	pop    rdx
    28ca:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    28ce:	33 74 74 79          	xor    esi,DWORD PTR [rsp+rsi*2+0x79]
    28d2:	31 30                	xor    DWORD PTR [rax],esi
    28d4:	77 72                	ja     2948 <stivale_hdr-0x1fd6b8>
    28d6:	69 74 65 5f 6c 69 6e 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x656e696c
    28dd:	65 
    28de:	45 50                	rex.RB push r8
    28e0:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    28e3:	5f                   	pop    rdi
    28e4:	5a                   	pop    rdx
    28e5:	37                   	(bad)  
    28e6:	76 70                	jbe    2958 <stivale_hdr-0x1fd6a8>
    28e8:	72 69                	jb     2953 <stivale_hdr-0x1fd6ad>
    28ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28eb:	74 66                	je     2953 <stivale_hdr-0x1fd6ad>
    28ed:	50                   	push   rax
    28ee:	4b 63 50 31          	rex.WXB movsxd rdx,DWORD PTR [r8+0x31]
    28f2:	33 5f 5f             	xor    ebx,DWORD PTR [rdi+0x5f]
    28f5:	76 61                	jbe    2958 <stivale_hdr-0x1fd6a8>
    28f7:	5f                   	pop    rdi
    28f8:	6c                   	ins    BYTE PTR es:[rdi],dx
    28f9:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    2900:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    2903:	64 64 69 6e 67 00 69 	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x746e6900
    290a:	6e 74 
    290c:	53                   	push   rbx
    290d:	74 72                	je     2981 <stivale_hdr-0x1fd67f>
    290f:	42 75 66             	rex.X jne 2978 <stivale_hdr-0x1fd688>
    2912:	66 65 72 00          	data16 gs jb 2916 <stivale_hdr-0x1fd6ea>
    2916:	70 6c                	jo     2984 <stivale_hdr-0x1fd67c>
    2918:	75 73                	jne    298d <stivale_hdr-0x1fd673>
    291a:	53                   	push   rbx
    291b:	69 67 6e 49 66 4e 65 	imul   esp,DWORD PTR [rdi+0x6e],0x654e6649
    2922:	65 64 65 64 00 67 70 	gs fs gs add BYTE PTR fs:[rdi+0x70],ah
    2929:	5f                   	pop    rdi
    292a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    292b:	66 66 73 65          	data16 data16 jae 2994 <stivale_hdr-0x1fd66c>
    292f:	74 00                	je     2931 <stivale_hdr-0x1fd6cf>
    2931:	73 68                	jae    299b <stivale_hdr-0x1fd665>
    2933:	69 66 74 65 72 00 6c 	imul   esp,DWORD PTR [rsi+0x74],0x6c007265
    293a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    293b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    293c:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
    2941:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    2945:	73 69                	jae    29b0 <stivale_hdr-0x1fd650>
    2947:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2949:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    294e:	74 00                	je     2950 <stivale_hdr-0x1fd6b0>
    2950:	64 65 63 50 6c       	fs movsxd edx,DWORD PTR gs:[rax+0x6c]
    2955:	61                   	(bad)  
    2956:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    2959:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    295c:	39 5f 5f             	cmp    DWORD PTR [rdi+0x5f],ebx
    295f:	69 6e 74 5f 73 74 72 	imul   ebp,DWORD PTR [rsi+0x74],0x7274735f
    2966:	6c                   	ins    BYTE PTR es:[rdi],dx
    2967:	50                   	push   rax
    2968:	63 69 62             	movsxd ebp,DWORD PTR [rcx+0x62]
    296b:	62                   	(bad)  
    296c:	69 62 62 00 75 69 6e 	imul   esp,DWORD PTR [rdx+0x62],0x6e697500
    2973:	74 6d                	je     29e2 <stivale_hdr-0x1fd61e>
    2975:	61                   	(bad)  
    2976:	78 5f                	js     29d7 <stivale_hdr-0x1fd629>
    2978:	74 00                	je     297a <stivale_hdr-0x1fd686>
    297a:	5f                   	pop    rdi
    297b:	5a                   	pop    rdx
    297c:	31 36                	xor    DWORD PTR [rsi],esi
    297e:	64 69 73 70 6c 61 79 	imul   esi,DWORD PTR fs:[rbx+0x70],0x4379616c
    2985:	43 
    2986:	68 61 72 61 63       	push   0x63617261
    298b:	74 65                	je     29f2 <stivale_hdr-0x1fd60e>
    298d:	72 63                	jb     29f2 <stivale_hdr-0x1fd60e>
    298f:	50                   	push   rax
    2990:	69 00 5f 5f 62 75    	imul   eax,DWORD PTR [rax],0x75625f5f
    2996:	69 6c 74 69 6e 5f 76 	imul   ebp,DWORD PTR [rsp+rsi*2+0x69],0x61765f6e
    299d:	61 
    299e:	5f                   	pop    rdi
    299f:	6c                   	ins    BYTE PTR es:[rdi],dx
    29a0:	69 73 74 00 70 72 65 	imul   esi,DWORD PTR [rbx+0x74],0x65727000
    29a7:	63 53 70             	movsxd edx,DWORD PTR [rbx+0x70]
    29aa:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
    29ad:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    29af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29b0:	64 65 00 66 6c       	fs add BYTE PTR gs:[rsi+0x6c],ah
    29b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29b6:	61                   	(bad)  
    29b7:	74 69                	je     2a22 <stivale_hdr-0x1fd5de>
    29b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29ba:	67 00 69 6e          	add    BYTE PTR [ecx+0x6e],ch
    29be:	74 65                	je     2a25 <stivale_hdr-0x1fd5db>
    29c0:	67 65 72 00          	addr32 gs jb 29c4 <stivale_hdr-0x1fd63c>
    29c4:	64 69 73 70 6c 61 79 	imul   esi,DWORD PTR fs:[rbx+0x70],0x4379616c
    29cb:	43 
    29cc:	68 61 72 61 63       	push   0x63617261
    29d1:	74 65                	je     2a38 <stivale_hdr-0x1fd5c8>
    29d3:	72 00                	jb     29d5 <stivale_hdr-0x1fd62b>
    29d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29d6:	76 65                	jbe    2a3d <stivale_hdr-0x1fd5c3>
    29d8:	72 66                	jb     2a40 <stivale_hdr-0x1fd5c0>
    29da:	6c                   	ins    BYTE PTR es:[rdi],dx
    29db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29dc:	77 5f                	ja     2a3d <stivale_hdr-0x1fd5c3>
    29de:	61                   	(bad)  
    29df:	72 67                	jb     2a48 <stivale_hdr-0x1fd5b8>
    29e1:	5f                   	pop    rdi
    29e2:	61                   	(bad)  
    29e3:	72 65                	jb     2a4a <stivale_hdr-0x1fd5b6>
    29e5:	61                   	(bad)  
    29e6:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    29e9:	74 46                	je     2a31 <stivale_hdr-0x1fd5cf>
    29eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29ec:	72 6d                	jb     2a5b <stivale_hdr-0x1fd5a5>
    29ee:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    29f2:	65 64 65 66 20 5f 5f 	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    29f9:	76 61                	jbe    2a5c <stivale_hdr-0x1fd5a4>
    29fb:	5f                   	pop    rdi
    29fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    29fd:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    2a04:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    2a07:	76 61                	jbe    2a6a <stivale_hdr-0x1fd596>
    2a09:	5f                   	pop    rdi
    2a0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a0b:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    2a12:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2a15:	31 33                	xor    DWORD PTR [rbx],esi
    2a17:	64 69 73 70 6c 61 79 	imul   esi,DWORD PTR fs:[rbx+0x70],0x5379616c
    2a1e:	53 
    2a1f:	74 72                	je     2a93 <stivale_hdr-0x1fd56d>
    2a21:	69 6e 67 50 63 50 69 	imul   ebp,DWORD PTR [rsi+0x67],0x69506350
    2a28:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
    2a2b:	72 6d                	jb     2a9a <stivale_hdr-0x1fd566>
    2a2d:	00 70 74             	add    BYTE PTR [rax+0x74],dh
    2a30:	72 64                	jb     2a96 <stivale_hdr-0x1fd56a>
    2a32:	69 66 66 5f 74 00 5f 	imul   esp,DWORD PTR [rsi+0x66],0x5f00745f
    2a39:	5f                   	pop    rdi
    2a3a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2a3c:	75 63                	jne    2aa1 <stivale_hdr-0x1fd55f>
    2a3e:	5f                   	pop    rdi
    2a3f:	76 61                	jbe    2aa2 <stivale_hdr-0x1fd55e>
    2a41:	5f                   	pop    rdi
    2a42:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a43:	69 73 74 00 6c 65 6e 	imul   esi,DWORD PTR [rbx+0x74],0x6e656c00
    2a4a:	67 74 68             	addr32 je 2ab5 <stivale_hdr-0x1fd54b>
    2a4d:	53                   	push   rbx
    2a4e:	70 65                	jo     2ab5 <stivale_hdr-0x1fd54b>
    2a50:	63 00                	movsxd eax,DWORD PTR [rax]
    2a52:	73 70                	jae    2ac4 <stivale_hdr-0x1fd53c>
    2a54:	61                   	(bad)  
    2a55:	63 65 4e             	movsxd esp,DWORD PTR [rbp+0x4e]
    2a58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a59:	53                   	push   rbx
    2a5a:	69 67 6e 00 76 70 72 	imul   esp,DWORD PTR [rdi+0x6e],0x72707600
    2a61:	69 6e 74 66 00 73 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72730066
    2a68:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2a6a:	64 72 69             	fs jb  2ad6 <stivale_hdr-0x1fd52a>
    2a6d:	76 65                	jbe    2ad4 <stivale_hdr-0x1fd52c>
    2a6f:	72 73                	jb     2ae4 <stivale_hdr-0x1fd51c>
    2a71:	2f                   	(bad)  
    2a72:	74 74                	je     2ae8 <stivale_hdr-0x1fd518>
    2a74:	79 2f                	jns    2aa5 <stivale_hdr-0x1fd55b>
    2a76:	70 72                	jo     2aea <stivale_hdr-0x1fd516>
    2a78:	69 6e 74 66 2e 63 70 	imul   ebp,DWORD PTR [rsi+0x74],0x70632e66
    2a7f:	70 00                	jo     2a81 <stivale_hdr-0x1fd57f>
    2a81:	65 78 70             	gs js  2af4 <stivale_hdr-0x1fd50c>
    2a84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a85:	00 7a 65             	add    BYTE PTR [rdx+0x65],bh
    2a88:	72 6f                	jb     2af9 <stivale_hdr-0x1fd507>
    2a8a:	50                   	push   rax
    2a8b:	61                   	(bad)  
    2a8c:	64 00 65 78          	add    BYTE PTR fs:[rbp+0x78],ah
    2a90:	74 42                	je     2ad4 <stivale_hdr-0x1fd52c>
    2a92:	72 65                	jb     2af9 <stivale_hdr-0x1fd507>
    2a94:	61                   	(bad)  
    2a95:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
    2a98:	70 61                	jo     2afb <stivale_hdr-0x1fd505>
    2a9a:	63 65 53             	movsxd esp,DWORD PTR [rbp+0x53]
    2a9d:	69 67 6e 49 66 4e 65 	imul   esp,DWORD PTR [rdi+0x6e],0x654e6649
    2aa4:	65 64 65 64 00 72 65 	gs fs gs add BYTE PTR fs:[rdx+0x65],dh
    2aab:	67 5f                	addr32 pop rdi
    2aad:	73 61                	jae    2b10 <stivale_hdr-0x1fd4f0>
    2aaf:	76 65                	jbe    2b16 <stivale_hdr-0x1fd4ea>
    2ab1:	5f                   	pop    rdi
    2ab2:	61                   	(bad)  
    2ab3:	72 65                	jb     2b1a <stivale_hdr-0x1fd4e6>
    2ab5:	61                   	(bad)  
    2ab6:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
    2ab9:	72 6d                	jb     2b28 <stivale_hdr-0x1fd4d8>
    2abb:	61                   	(bad)  
    2abc:	74 00                	je     2abe <stivale_hdr-0x1fd542>
    2abe:	70 61                	jo     2b21 <stivale_hdr-0x1fd4df>
    2ac0:	64 64 69 6e 67 4e 6f 	fs imul ebp,DWORD PTR fs:[rsi+0x67],0x6a006f4e
    2ac7:	00 6a 
    2ac9:	75 73                	jne    2b3e <stivale_hdr-0x1fd4c2>
    2acb:	74 69                	je     2b36 <stivale_hdr-0x1fd4ca>
    2acd:	66 79 00             	data16 jns 2ad0 <stivale_hdr-0x1fd530>
    2ad0:	64 69 73 70 6c 61 79 	imul   esi,DWORD PTR fs:[rbx+0x70],0x5379616c
    2ad7:	53 
    2ad8:	74 72                	je     2b4c <stivale_hdr-0x1fd4b4>
    2ada:	69 6e 67 00 70 6c 75 	imul   ebp,DWORD PTR [rsi+0x67],0x756c7000
    2ae1:	73 53                	jae    2b36 <stivale_hdr-0x1fd4ca>
    2ae3:	69 67 6e 00 66 70 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f706600
    2aea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aeb:	66 66 73 65          	data16 data16 jae 2b54 <stivale_hdr-0x1fd4ac>
    2aef:	74 00                	je     2af1 <stivale_hdr-0x1fd50f>
    2af1:	6c                   	ins    BYTE PTR es:[rdi],dx
    2af2:	65 66 74 4a          	gs data16 je 2b40 <stivale_hdr-0x1fd4c0>
    2af6:	75 73                	jne    2b6b <stivale_hdr-0x1fd495>
    2af8:	74 69                	je     2b63 <stivale_hdr-0x1fd49d>
    2afa:	66 79 00             	data16 jns 2afd <stivale_hdr-0x1fd503>
    2afd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b00:	72 73                	jb     2b75 <stivale_hdr-0x1fd48b>
    2b02:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
    2b05:	65 63 69 66          	movsxd ebp,DWORD PTR gs:[rcx+0x66]
    2b09:	69 65 72 00 5f 5f 69 	imul   esp,DWORD PTR [rbp+0x72],0x695f5f00
    2b10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b11:	74 5f                	je     2b72 <stivale_hdr-0x1fd48e>
    2b13:	73 74                	jae    2b89 <stivale_hdr-0x1fd477>
    2b15:	72 00                	jb     2b17 <stivale_hdr-0x1fd4e9>
    2b17:	67 65 74 5f          	addr32 gs je 2b7a <stivale_hdr-0x1fd486>
    2b1b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b1e:	72 61                	jb     2b81 <stivale_hdr-0x1fd47f>
    2b20:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    2b24:	5f                   	pop    rdi
    2b25:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2b27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b28:	74 00                	je     2b2a <stivale_hdr-0x1fd4d6>
    2b2a:	5f                   	pop    rdi
    2b2b:	5a                   	pop    rdx
    2b2c:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2b30:	78 36                	js     2b68 <stivale_hdr-0x1fd498>
    2b32:	73 68                	jae    2b9c <stivale_hdr-0x1fd464>
    2b34:	61                   	(bad)  
    2b35:	70 65                	jo     2b9c <stivale_hdr-0x1fd464>
    2b37:	73 31                	jae    2b6a <stivale_hdr-0x1fd496>
    2b39:	31 72 65             	xor    DWORD PTR [rdx+0x65],esi
    2b3c:	63 74 5f 63          	movsxd esi,DWORD PTR [rdi+rbx*2+0x63]
    2b40:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2b42:	74 65                	je     2ba9 <stivale_hdr-0x1fd457>
    2b44:	72 45                	jb     2b8b <stivale_hdr-0x1fd475>
    2b46:	4e 53                	rex.WRX push rbx
    2b48:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
    2b4b:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
    2b4e:	70 6f                	jo     2bbf <stivale_hdr-0x1fd441>
    2b50:	73 5f                	jae    2bb1 <stivale_hdr-0x1fd44f>
    2b52:	70 6f                	jo     2bc3 <stivale_hdr-0x1fd43d>
    2b54:	69 6e 74 45 53 31 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f315345
    2b5b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b5e:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2b62:	78 35                	js     2b99 <stivale_hdr-0x1fd467>
    2b64:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2b66:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b67:	74 73                	je     2bdc <stivale_hdr-0x1fd424>
    2b69:	31 38                	xor    DWORD PTR [rax],edi
    2b6b:	67 65 74 5f          	addr32 gs je 2bce <stivale_hdr-0x1fd432>
    2b6f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b72:	72 61                	jb     2bd5 <stivale_hdr-0x1fd42b>
    2b74:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    2b78:	5f                   	pop    rdi
    2b79:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2b7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b7c:	74 45                	je     2bc3 <stivale_hdr-0x1fd43d>
    2b7e:	63 00                	movsxd eax,DWORD PTR [rax]
    2b80:	6b 65 72 6e          	imul   esp,DWORD PTR [rbp+0x72],0x6e
    2b84:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2b86:	5f                   	pop    rdi
    2b87:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2b89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b8a:	74 00                	je     2b8c <stivale_hdr-0x1fd474>
    2b8c:	5f                   	pop    rdi
    2b8d:	5a                   	pop    rdx
    2b8e:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2b92:	78 36                	js     2bca <stivale_hdr-0x1fd436>
    2b94:	73 68                	jae    2bfe <stivale_hdr-0x1fd402>
    2b96:	61                   	(bad)  
    2b97:	70 65                	jo     2bfe <stivale_hdr-0x1fd402>
    2b99:	73 33                	jae    2bce <stivale_hdr-0x1fd432>
    2b9b:	70 6f                	jo     2c0c <stivale_hdr-0x1fd3f4>
    2b9d:	73 45                	jae    2be4 <stivale_hdr-0x1fd41c>
    2b9f:	6a 6a                	push   0x6a
    2ba1:	00 62 75             	add    BYTE PTR [rdx+0x75],ah
    2ba4:	66 66 00 66 6f       	data16 data16 add BYTE PTR [rsi+0x6f],ah
    2ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2baa:	74 73                	je     2c1f <stivale_hdr-0x1fd3e1>
    2bac:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2baf:	73 74                	jae    2c25 <stivale_hdr-0x1fd3db>
    2bb1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bb2:	72 65                	jb     2c19 <stivale_hdr-0x1fd3e7>
    2bb4:	5f                   	pop    rdi
    2bb5:	73 63                	jae    2c1a <stivale_hdr-0x1fd3e6>
    2bb7:	72 65                	jb     2c1e <stivale_hdr-0x1fd3e2>
    2bb9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2bbb:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2bbe:	63 74 5f 63          	movsxd esi,DWORD PTR [rdi+rbx*2+0x63]
    2bc2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2bc4:	74 65                	je     2c2b <stivale_hdr-0x1fd3d5>
    2bc6:	72 00                	jb     2bc8 <stivale_hdr-0x1fd438>
    2bc8:	73 61                	jae    2c2b <stivale_hdr-0x1fd3d5>
    2bca:	76 65                	jbe    2c31 <stivale_hdr-0x1fd3cf>
    2bcc:	5f                   	pop    rdi
    2bcd:	73 63                	jae    2c32 <stivale_hdr-0x1fd3ce>
    2bcf:	72 65                	jb     2c36 <stivale_hdr-0x1fd3ca>
    2bd1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2bd3:	00 70 6f             	add    BYTE PTR [rax+0x6f],dh
    2bd6:	73 42                	jae    2c1a <stivale_hdr-0x1fd3e6>
    2bd8:	52                   	push   rdx
    2bd9:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    2bdc:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    2bde:	64 72 69             	fs jb  2c4a <stivale_hdr-0x1fd3b6>
    2be1:	76 65                	jbe    2c48 <stivale_hdr-0x1fd3b8>
    2be3:	72 73                	jb     2c58 <stivale_hdr-0x1fd3a8>
    2be5:	2f                   	(bad)  
    2be6:	67 66 78 2f          	addr32 data16 js 2c19 <stivale_hdr-0x1fd3e7>
    2bea:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2bec:	70 2f                	jo     2c1d <stivale_hdr-0x1fd3e3>
    2bee:	67 6f                	outs   dx,DWORD PTR ds:[esi]
    2bf0:	70 2e                	jo     2c20 <stivale_hdr-0x1fd3e0>
    2bf2:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    2bf5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bf8:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2bfc:	78 36                	js     2c34 <stivale_hdr-0x1fd3cc>
    2bfe:	73 63                	jae    2c63 <stivale_hdr-0x1fd39d>
    2c00:	72 65                	jb     2c67 <stivale_hdr-0x1fd399>
    2c02:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2c04:	34 62                	xor    al,0x62
    2c06:	75 66                	jne    2c6e <stivale_hdr-0x1fd392>
    2c08:	66 45 76 00          	data16 rex.RB jbe 2c0c <stivale_hdr-0x1fd3f4>
    2c0c:	72 65                	jb     2c73 <stivale_hdr-0x1fd38d>
    2c0e:	63 74 5f 72          	movsxd esi,DWORD PTR [rdi+rbx*2+0x72]
    2c12:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    2c14:	61                   	(bad)  
    2c15:	74 69                	je     2c80 <stivale_hdr-0x1fd380>
    2c17:	76 65                	jbe    2c7e <stivale_hdr-0x1fd382>
    2c19:	5f                   	pop    rdi
    2c1a:	63 65 6e             	movsxd esp,DWORD PTR [rbp+0x6e]
    2c1d:	74 65                	je     2c84 <stivale_hdr-0x1fd37c>
    2c1f:	72 00                	jb     2c21 <stivale_hdr-0x1fd3df>
    2c21:	5f                   	pop    rdi
    2c22:	5a                   	pop    rdx
    2c23:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2c27:	78 36                	js     2c5f <stivale_hdr-0x1fd3a1>
    2c29:	73 63                	jae    2c8e <stivale_hdr-0x1fd372>
    2c2b:	72 65                	jb     2c92 <stivale_hdr-0x1fd36e>
    2c2d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2c2f:	31 34 72             	xor    DWORD PTR [rdx+rsi*2],esi
    2c32:	65 73 74             	gs jae 2ca9 <stivale_hdr-0x1fd357>
    2c35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c36:	72 65                	jb     2c9d <stivale_hdr-0x1fd363>
    2c38:	5f                   	pop    rdi
    2c39:	73 63                	jae    2c9e <stivale_hdr-0x1fd362>
    2c3b:	72 65                	jb     2ca2 <stivale_hdr-0x1fd35e>
    2c3d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2c3f:	45 76 00             	rex.RB jbe 2c42 <stivale_hdr-0x1fd3be>
    2c42:	72 65                	jb     2ca9 <stivale_hdr-0x1fd357>
    2c44:	63 74 5f 61          	movsxd esi,DWORD PTR [rdi+rbx*2+0x61]
    2c48:	62 73 6f 6c 75       	(bad)
    2c4d:	74 65                	je     2cb4 <stivale_hdr-0x1fd34c>
    2c4f:	5f                   	pop    rdi
    2c50:	63 65 6e             	movsxd esp,DWORD PTR [rbp+0x6e]
    2c53:	74 65                	je     2cba <stivale_hdr-0x1fd346>
    2c55:	72 00                	jb     2c57 <stivale_hdr-0x1fd3a9>
    2c57:	64 69 6d 65 6e 73 00 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x7000736e
    2c5e:	70 
    2c5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c60:	73 54                	jae    2cb6 <stivale_hdr-0x1fd34a>
    2c62:	4c 00 5f 5a          	rex.WR add BYTE PTR [rdi+0x5a],r11b
    2c66:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2c6a:	78 36                	js     2ca2 <stivale_hdr-0x1fd35e>
    2c6c:	73 68                	jae    2cd6 <stivale_hdr-0x1fd32a>
    2c6e:	61                   	(bad)  
    2c6f:	70 65                	jo     2cd6 <stivale_hdr-0x1fd32a>
    2c71:	73 34                	jae    2ca7 <stivale_hdr-0x1fd359>
    2c73:	72 65                	jb     2cda <stivale_hdr-0x1fd326>
    2c75:	63 74 45 4e          	movsxd esi,DWORD PTR [rbp+rax*2+0x4e]
    2c79:	53                   	push   rbx
    2c7a:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
    2c7d:	31 73 5f             	xor    DWORD PTR [rbx+0x5f],esi
    2c80:	70 6f                	jo     2cf1 <stivale_hdr-0x1fd30f>
    2c82:	73 5f                	jae    2ce3 <stivale_hdr-0x1fd31d>
    2c84:	70 6f                	jo     2cf5 <stivale_hdr-0x1fd30b>
    2c86:	69 6e 74 45 4e 53 30 	imul   ebp,DWORD PTR [rsi+0x74],0x30534e45
    2c8d:	5f                   	pop    rdi
    2c8e:	31 32                	xor    DWORD PTR [rdx],esi
    2c90:	73 5f                	jae    2cf1 <stivale_hdr-0x1fd30f>
    2c92:	64 69 6d 65 6e 73 69 	imul   ebp,DWORD PTR fs:[rbp+0x65],0x6f69736e
    2c99:	6f 
    2c9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c9b:	73 45                	jae    2ce2 <stivale_hdr-0x1fd31e>
    2c9d:	6a 00                	push   0x0
    2c9f:	5f                   	pop    rdi
    2ca0:	5a                   	pop    rdx
    2ca1:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2ca5:	78 36                	js     2cdd <stivale_hdr-0x1fd323>
    2ca7:	73 68                	jae    2d11 <stivale_hdr-0x1fd2ef>
    2ca9:	61                   	(bad)  
    2caa:	70 65                	jo     2d11 <stivale_hdr-0x1fd2ef>
    2cac:	73 34                	jae    2ce2 <stivale_hdr-0x1fd31e>
    2cae:	64 69 6d 73 45 6a 6a 	imul   ebp,DWORD PTR fs:[rbp+0x73],0x6a6a45
    2cb5:	00 
    2cb6:	72 65                	jb     2d1d <stivale_hdr-0x1fd2e3>
    2cb8:	63 74 00 5f          	movsxd esi,DWORD PTR [rax+rax*1+0x5f]
    2cbc:	5a                   	pop    rdx
    2cbd:	4e 33 67 66          	rex.WRX xor r12,QWORD PTR [rdi+0x66]
    2cc1:	78 36                	js     2cf9 <stivale_hdr-0x1fd307>
    2cc3:	73 63                	jae    2d28 <stivale_hdr-0x1fd2d8>
    2cc5:	72 65                	jb     2d2c <stivale_hdr-0x1fd2d4>
    2cc7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2cc9:	31 31                	xor    DWORD PTR [rcx],esi
    2ccb:	73 61                	jae    2d2e <stivale_hdr-0x1fd2d2>
    2ccd:	76 65                	jbe    2d34 <stivale_hdr-0x1fd2cc>
    2ccf:	5f                   	pop    rdi
    2cd0:	73 63                	jae    2d35 <stivale_hdr-0x1fd2cb>
    2cd2:	72 65                	jb     2d39 <stivale_hdr-0x1fd2c7>
    2cd4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2cd6:	45 76 00             	rex.RB jbe 2cd9 <stivale_hdr-0x1fd327>
    2cd9:	64 69 6d 73 00 70 78 	imul   ebp,DWORD PTR fs:[rbp+0x73],0x63787000
    2ce0:	63 
    2ce1:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ce2:	64 5f                	fs pop rdi
    2ce4:	63 72 00             	movsxd esi,DWORD PTR [rdx+0x0]
    2ce7:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    2cea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ceb:	74 5f                	je     2d4c <stivale_hdr-0x1fd2b4>
    2ced:	68 69 67 68 00       	push   0x686769
    2cf2:	70 6f                	jo     2d63 <stivale_hdr-0x1fd29d>
    2cf4:	72 74                	jb     2d6a <stivale_hdr-0x1fd296>
    2cf6:	73 5f                	jae    2d57 <stivale_hdr-0x1fd2a9>
    2cf8:	69 6d 70 6c 65 6d 65 	imul   ebp,DWORD PTR [rbp+0x70],0x656d656c
    2cff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d00:	74 65                	je     2d67 <stivale_hdr-0x1fd299>
    2d02:	64 00 64 6d 61       	add    BYTE PTR fs:[rbp+rbp*2+0x61],ah
    2d07:	5f                   	pop    rdi
    2d08:	62                   	(bad)  
    2d09:	75 66                	jne    2d71 <stivale_hdr-0x1fd28f>
    2d0b:	66 65 72 00          	data16 gs jb 2d0f <stivale_hdr-0x1fd2f1>
    2d0f:	77 5f                	ja     2d70 <stivale_hdr-0x1fd290>
    2d11:	64 65 76 69          	fs gs jbe 2d7e <stivale_hdr-0x1fd282>
    2d15:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2d18:	68 75 6e 67 00       	push   0x676e75
    2d1d:	63 61 72             	movsxd esp,DWORD PTR [rcx+0x72]
    2d20:	64 62                	fs (bad) 
    2d22:	75 73                	jne    2d97 <stivale_hdr-0x1fd269>
    2d24:	5f                   	pop    rdi
    2d25:	63 69 73             	movsxd ebp,DWORD PTR [rcx+0x73]
    2d28:	5f                   	pop    rdi
    2d29:	70 6f                	jo     2d9a <stivale_hdr-0x1fd266>
    2d2b:	69 6e 74 65 72 00 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72007265
    2d32:	5f                   	pop    rdi
    2d33:	64 65 76 69          	fs gs jbe 2da0 <stivale_hdr-0x1fd260>
    2d37:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2d3a:	74 6f                	je     2dab <stivale_hdr-0x1fd255>
    2d3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2d3d:	5f                   	pop    rdi
    2d3e:	62                   	(bad)  
    2d3f:	75 73                	jne    2db4 <stivale_hdr-0x1fd24c>
    2d41:	79 00                	jns    2d43 <stivale_hdr-0x1fd2bd>
    2d43:	73 65                	jae    2daa <stivale_hdr-0x1fd256>
    2d45:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d46:	62                   	(bad)  
    2d47:	5f                   	pop    rdi
    2d48:	73 00                	jae    2d4a <stivale_hdr-0x1fd2b6>
    2d4a:	70 72                	jo     2dbe <stivale_hdr-0x1fd242>
    2d4c:	65 66 65 74 63       	gs data16 gs je 2db4 <stivale_hdr-0x1fd24c>
    2d51:	68 61 62 6c 65       	push   0x656c6261
    2d56:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d59:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2d5d:	34 64                	xor    al,0x64
    2d5f:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    2d66:	69 31 33 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6333
    2d6c:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d6d:	61                   	(bad)  
    2d6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d6f:	64 5f                	fs pop rdi
    2d71:	73 74                	jae    2de7 <stivale_hdr-0x1fd219>
    2d73:	61                   	(bad)  
    2d74:	72 74                	jb     2dea <stivale_hdr-0x1fd216>
    2d76:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    2d78:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d7b:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2d7f:	34 64                	xor    al,0x64
    2d81:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    2d88:	69 31 33 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6333
    2d8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d8f:	61                   	(bad)  
    2d90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d91:	64 5f                	fs pop rdi
    2d93:	77 72                	ja     2e07 <stivale_hdr-0x1fd1f9>
    2d95:	69 74 65 45 6d 6d 74 	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x50746d6d
    2d9c:	50 
    2d9d:	76 00                	jbe    2d9f <stivale_hdr-0x1fd261>
    2d9f:	73 61                	jae    2e02 <stivale_hdr-0x1fd1fe>
    2da1:	74 61                	je     2e04 <stivale_hdr-0x1fd1fc>
    2da3:	5f                   	pop    rdi
    2da4:	73 00                	jae    2da6 <stivale_hdr-0x1fd25a>
    2da6:	73 61                	jae    2e09 <stivale_hdr-0x1fd1f7>
    2da8:	74 61                	je     2e0b <stivale_hdr-0x1fd1f5>
    2daa:	5f                   	pop    rdi
    2dab:	61                   	(bad)  
    2dac:	63 74 69 76          	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
    2db0:	65 00 75 73          	add    BYTE PTR gs:[rbp+0x73],dh
    2db4:	61                   	(bad)  
    2db5:	62                   	(bad)  
    2db6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2db7:	65 5f                	gs pop rdi
    2db9:	70 6f                	jo     2e2a <stivale_hdr-0x1fd1d6>
    2dbb:	72 74                	jb     2e31 <stivale_hdr-0x1fd1cf>
    2dbd:	73 00                	jae    2dbf <stivale_hdr-0x1fd241>
    2dbf:	73 75                	jae    2e36 <stivale_hdr-0x1fd1ca>
    2dc1:	62 73                	(bad)  
    2dc3:	79 73                	jns    2e38 <stivale_hdr-0x1fd1c8>
    2dc5:	74 65                	je     2e2c <stivale_hdr-0x1fd1d4>
    2dc7:	6d                   	ins    DWORD PTR es:[rdi],dx
    2dc8:	5f                   	pop    rdi
    2dc9:	76 65                	jbe    2e30 <stivale_hdr-0x1fd1d0>
    2dcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dcc:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    2dce:	72 5f                	jb     2e2f <stivale_hdr-0x1fd1d1>
    2dd0:	69 64 00 76 65 72 73 	imul   esp,DWORD PTR [rax+rax*1+0x76],0x69737265
    2dd7:	69 
    2dd8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dda:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
    2ddd:	62 73                	(bad)  
    2ddf:	79 73                	jns    2e54 <stivale_hdr-0x1fd1ac>
    2de1:	74 65                	je     2e48 <stivale_hdr-0x1fd1b8>
    2de3:	6d                   	ins    DWORD PTR es:[rdi],dx
    2de4:	5f                   	pop    rdi
    2de5:	69 64 00 69 6e 74 65 	imul   esp,DWORD PTR [rax+rax*1+0x69],0x7265746e
    2dec:	72 
    2ded:	72 75                	jb     2e64 <stivale_hdr-0x1fd19c>
    2def:	70 74                	jo     2e65 <stivale_hdr-0x1fd19b>
    2df1:	5f                   	pop    rdi
    2df2:	6c                   	ins    BYTE PTR es:[rdi],dx
    2df3:	69 6e 65 00 72 65 61 	imul   ebp,DWORD PTR [rsi+0x65],0x61657200
    2dfa:	64 5f                	fs pop rdi
    2dfc:	64 6d                	fs ins DWORD PTR es:[rdi],dx
    2dfe:	61                   	(bad)  
    2dff:	5f                   	pop    rdi
    2e00:	65 78 00             	gs js  2e03 <stivale_hdr-0x1fd1fd>
    2e03:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2e06:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e07:	61                   	(bad)  
    2e08:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e09:	64 5f                	fs pop rdi
    2e0b:	72 65                	jb     2e72 <stivale_hdr-0x1fd18e>
    2e0d:	61                   	(bad)  
    2e0e:	64 00 61 68          	add    BYTE PTR fs:[rcx+0x68],ah
    2e12:	63 69 5f             	movsxd ebp,DWORD PTR [rcx+0x5f]
    2e15:	64 65 76 69          	fs gs jbe 2e82 <stivale_hdr-0x1fd17e>
    2e19:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2e1c:	68 65 61 64 65       	push   0x65646165
    2e21:	72 00                	jb     2e23 <stivale_hdr-0x1fd1dd>
    2e23:	68 62 61 5f 63       	push   0x635f6162
    2e28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e29:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e2a:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e2b:	61                   	(bad)  
    2e2c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e2d:	64 5f                	fs pop rdi
    2e2f:	74 61                	je     2e92 <stivale_hdr-0x1fd16e>
    2e31:	62                   	(bad)  
    2e32:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e33:	65 00 6e 65          	add    BYTE PTR gs:[rsi+0x65],ch
    2e37:	77 5f                	ja     2e98 <stivale_hdr-0x1fd168>
    2e39:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e3a:	69 73 74 5f 62 61 73 	imul   esi,DWORD PTR [rbx+0x74],0x7361625f
    2e41:	65 00 62 61          	add    BYTE PTR gs:[rdx+0x61],ah
    2e45:	72 30                	jb     2e77 <stivale_hdr-0x1fd189>
    2e47:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    2e4a:	72 31                	jb     2e7d <stivale_hdr-0x1fd183>
    2e4c:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    2e4f:	72 32                	jb     2e83 <stivale_hdr-0x1fd17d>
    2e51:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    2e54:	72 33                	jb     2e89 <stivale_hdr-0x1fd177>
    2e56:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    2e59:	72 34                	jb     2e8f <stivale_hdr-0x1fd171>
    2e5b:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    2e5e:	72 35                	jb     2e95 <stivale_hdr-0x1fd16b>
    2e60:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2e63:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e64:	62                   	(bad)  
    2e65:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2e68:	67 5f                	addr32 pop rdi
    2e6a:	64 32 68 00          	xor    ch,BYTE PTR fs:[rax+0x0]
    2e6e:	68 62 61 5f 70       	push   0x705f6162
    2e73:	72 64                	jb     2ed9 <stivale_hdr-0x1fd127>
    2e75:	74 5f                	je     2ed6 <stivale_hdr-0x1fd12a>
    2e77:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2e79:	74 72                	je     2eed <stivale_hdr-0x1fd113>
    2e7b:	79 00                	jns    2e7d <stivale_hdr-0x1fd183>
    2e7d:	73 61                	jae    2ee0 <stivale_hdr-0x1fd120>
    2e7f:	74 61                	je     2ee2 <stivale_hdr-0x1fd11e>
    2e81:	5f                   	pop    rdi
    2e82:	70 69                	jo     2eed <stivale_hdr-0x1fd113>
    2e84:	5f                   	pop    rdi
    2e85:	73 00                	jae    2e87 <stivale_hdr-0x1fd179>
    2e87:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2e8a:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
    2e90:	5f                   	pop    rdi
    2e91:	70 6f                	jo     2f02 <stivale_hdr-0x1fd0fe>
    2e93:	72 74                	jb     2f09 <stivale_hdr-0x1fd0f7>
    2e95:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    2e98:	75 6e                	jne    2f08 <stivale_hdr-0x1fd0f8>
    2e9a:	74 5f                	je     2efb <stivale_hdr-0x1fd105>
    2e9c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e9e:	77 00                	ja     2ea0 <stivale_hdr-0x1fd160>
    2ea0:	66 65 61             	data16 gs (bad) 
    2ea3:	74 75                	je     2f1a <stivale_hdr-0x1fd0e6>
    2ea5:	72 65                	jb     2f0c <stivale_hdr-0x1fd0f4>
    2ea7:	5f                   	pop    rdi
    2ea8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ea9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2eaa:	77 00                	ja     2eac <stivale_hdr-0x1fd154>
    2eac:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ead:	62 61                	(bad)  
    2eaf:	30 00                	xor    BYTE PTR [rax],al
    2eb1:	6c                   	ins    BYTE PTR es:[rdi],dx
    2eb2:	62 61                	(bad)  
    2eb4:	31 00                	xor    DWORD PTR [rax],eax
    2eb6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2eb7:	62 61                	(bad)  
    2eb9:	32 00                	xor    al,BYTE PTR [rax]
    2ebb:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ebc:	62 61                	(bad)  
    2ebe:	33 00                	xor    eax,DWORD PTR [rax]
    2ec0:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ec1:	62 61 34 00 6c       	(bad)
    2ec6:	62 61 35 00 63 6f 6d 	vpacksswb xmm29,xmm25,XMMWORD PTR [rdi+0x6d0]
    2ecd:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ece:	61                   	(bad)  
    2ecf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed0:	64 5f                	fs pop rdi
    2ed2:	73 74                	jae    2f48 <stivale_hdr-0x1fd0b8>
    2ed4:	61                   	(bad)  
    2ed5:	72 74                	jb     2f4b <stivale_hdr-0x1fd0b5>
    2ed7:	00 74 61 73          	add    BYTE PTR [rcx+riz*2+0x73],dh
    2edb:	6b 5f 66 69          	imul   ebx,DWORD PTR [rdi+0x66],0x69
    2edf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ee0:	65 5f                	gs pop rdi
    2ee2:	64 61                	fs (bad) 
    2ee4:	74 61                	je     2f47 <stivale_hdr-0x1fd0b9>
    2ee6:	00 70 78             	add    BYTE PTR [rax+0x78],dh
    2ee9:	63 6d 64             	movsxd ebp,DWORD PTR [rbp+0x64]
    2eec:	5f                   	pop    rdi
    2eed:	66 72 00             	data16 jb 2ef0 <stivale_hdr-0x1fd110>
    2ef0:	5f                   	pop    rdi
    2ef1:	5a                   	pop    rdx
    2ef2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2ef6:	34 64                	xor    al,0x64
    2ef8:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    2eff:	69 35 70 6f 72 74 73 	imul   esi,DWORD PTR [rip+0x74726f70],0x63004573        # 74729e79 <__kernel_end+0x74517e79>
    2f06:	45 00 63 
    2f09:	61                   	(bad)  
    2f0a:	70 61                	jo     2f6d <stivale_hdr-0x1fd093>
    2f0c:	62                   	(bad)  
    2f0d:	69 6c 6c 69 74 69 65 	imul   ebp,DWORD PTR [rsp+rbp*2+0x69],0x73656974
    2f14:	73 
    2f15:	5f                   	pop    rdi
    2f16:	70 74                	jo     2f8c <stivale_hdr-0x1fd074>
    2f18:	72 00                	jb     2f1a <stivale_hdr-0x1fd0e6>
    2f1a:	67 6c                	ins    BYTE PTR es:[edi],dx
    2f1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f1d:	62 61 6c 5f 68       	(bad)
    2f22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f23:	73 74                	jae    2f99 <stivale_hdr-0x1fd067>
    2f25:	5f                   	pop    rdi
    2f26:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2f29:	74 72                	je     2f9d <stivale_hdr-0x1fd063>
    2f2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f2d:	00 63 75             	add    BYTE PTR [rbx+0x75],ah
    2f30:	72 72                	jb     2fa4 <stivale_hdr-0x1fd05c>
    2f32:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2f34:	74 5f                	je     2f95 <stivale_hdr-0x1fd06b>
    2f36:	70 6f                	jo     2fa7 <stivale_hdr-0x1fd059>
    2f38:	72 74                	jb     2fae <stivale_hdr-0x1fd052>
    2f3a:	5f                   	pop    rdi
    2f3b:	74 79                	je     2fb6 <stivale_hdr-0x1fd04a>
    2f3d:	70 65                	jo     2fa4 <stivale_hdr-0x1fd05c>
    2f3f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f42:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2f46:	34 64                	xor    al,0x64
    2f48:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    2f4f:	69 31 35 61 68 63    	imul   esi,DWORD PTR [rcx],0x63686135
    2f55:	69 5f 63 6f 6e 74 72 	imul   ebx,DWORD PTR [rdi+0x63],0x72746e6f
    2f5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f5d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f5f:	65 72 45             	gs jb  2fa7 <stivale_hdr-0x1fd059>
    2f62:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
    2f65:	74 61                	je     2fc8 <stivale_hdr-0x1fd038>
    2f67:	5f                   	pop    rdi
    2f68:	65 72 72             	gs jb  2fdd <stivale_hdr-0x1fd023>
    2f6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f6c:	72 00                	jb     2f6e <stivale_hdr-0x1fd092>
    2f6e:	72 65                	jb     2fd5 <stivale_hdr-0x1fd02b>
    2f70:	61                   	(bad)  
    2f71:	64 5f                	fs pop rdi
    2f73:	70 69                	jo     2fde <stivale_hdr-0x1fd022>
    2f75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f76:	00 76 65             	add    BYTE PTR [rsi+0x65],dh
    2f79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f7a:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    2f7c:	72 00                	jb     2f7e <stivale_hdr-0x1fd082>
    2f7e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2f81:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f84:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f87:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    2f8b:	34 64                	xor    al,0x64
    2f8d:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    2f94:	69 31 31 70 72 6f    	imul   esi,DWORD PTR [rcx],0x6f727031
    2f9a:	62                   	(bad)  
    2f9b:	65 5f                	gs pop rdi
    2f9d:	70 6f                	jo     300e <stivale_hdr-0x1fcff2>
    2f9f:	72 74                	jb     3015 <stivale_hdr-0x1fcfeb>
    2fa1:	73 45                	jae    2fe8 <stivale_hdr-0x1fd018>
    2fa3:	76 00                	jbe    2fa5 <stivale_hdr-0x1fd05b>
    2fa5:	77 5f                	ja     3006 <stivale_hdr-0x1fcffa>
    2fa7:	64 65 76 69          	fs gs jbe 3014 <stivale_hdr-0x1fcfec>
    2fab:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2fae:	74 6f                	je     301f <stivale_hdr-0x1fcfe1>
    2fb0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fb1:	5f                   	pop    rdi
    2fb2:	62                   	(bad)  
    2fb3:	75 73                	jne    3028 <stivale_hdr-0x1fcfd8>
    2fb5:	79 00                	jns    2fb7 <stivale_hdr-0x1fd049>
    2fb7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2fba:	6d                   	ins    DWORD PTR es:[rdi],dx
    2fbb:	61                   	(bad)  
    2fbc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fbd:	64 5f                	fs pop rdi
    2fbf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fc0:	69 73 74 5f 73 6c 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f6c735f
    2fc7:	74 00                	je     2fc9 <stivale_hdr-0x1fd037>
    2fc9:	70 72                	jo     303d <stivale_hdr-0x1fcfc3>
    2fcb:	64 62                	fs (bad) 
    2fcd:	5f                   	pop    rdi
    2fce:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    2fd1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fd2:	74 00                	je     2fd4 <stivale_hdr-0x1fd02c>
    2fd4:	64 65 76 5f          	fs gs jbe 3037 <stivale_hdr-0x1fcfc9>
    2fd8:	62                   	(bad)  
    2fd9:	69 74 73 00 24 66 69 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x6e696624
    2fe0:	6e 
    2fe1:	64 5f                	fs pop rdi
    2fe3:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2fe6:	6d                   	ins    DWORD PTR es:[rdi],dx
    2fe7:	61                   	(bad)  
    2fe8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fe9:	64 5f                	fs pop rdi
    2feb:	73 6c                	jae    3059 <stivale_hdr-0x1fcfa7>
    2fed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fee:	74 00                	je     2ff0 <stivale_hdr-0x1fd010>
    2ff0:	64 61                	fs (bad) 
    2ff2:	74 61                	je     3055 <stivale_hdr-0x1fcfab>
    2ff4:	5f                   	pop    rdi
    2ff5:	62 61                	(bad)  
    2ff7:	73 65                	jae    305e <stivale_hdr-0x1fcfa2>
    2ff9:	5f                   	pop    rdi
    2ffa:	61                   	(bad)  
    2ffb:	64 64 72 65          	fs fs jb 3064 <stivale_hdr-0x1fcf9c>
    2fff:	73 73                	jae    3074 <stivale_hdr-0x1fcf8c>
    3001:	5f                   	pop    rdi
    3002:	75 70                	jne    3074 <stivale_hdr-0x1fcf8c>
    3004:	70 65                	jo     306b <stivale_hdr-0x1fcf95>
    3006:	72 00                	jb     3008 <stivale_hdr-0x1fcff8>
    3008:	63 33                	movsxd esi,DWORD PTR [rbx]
    300a:	5f                   	pop    rdi
    300b:	70 6f                	jo     307c <stivale_hdr-0x1fcf84>
    300d:	72 74                	jb     3083 <stivale_hdr-0x1fcf7d>
    300f:	73 00                	jae    3011 <stivale_hdr-0x1fcfef>
    3011:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3014:	6d                   	ins    DWORD PTR es:[rdi],dx
    3015:	61                   	(bad)  
    3016:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3017:	64 5f                	fs pop rdi
    3019:	6c                   	ins    BYTE PTR es:[rdi],dx
    301a:	69 73 74 5f 62 61 73 	imul   esi,DWORD PTR [rbx+0x74],0x7361625f
    3021:	65 5f                	gs pop rdi
    3023:	75 70                	jne    3095 <stivale_hdr-0x1fcf6b>
    3025:	70 65                	jo     308c <stivale_hdr-0x1fcf74>
    3027:	72 00                	jb     3029 <stivale_hdr-0x1fcfd7>
    3029:	73 61                	jae    308c <stivale_hdr-0x1fcf74>
    302b:	74 61                	je     308e <stivale_hdr-0x1fcf72>
    302d:	5f                   	pop    rdi
    302e:	73 74                	jae    30a4 <stivale_hdr-0x1fcf5c>
    3030:	61                   	(bad)  
    3031:	74 75                	je     30a8 <stivale_hdr-0x1fcf58>
    3033:	73 00                	jae    3035 <stivale_hdr-0x1fcfcb>
    3035:	64 6d                	fs ins DWORD PTR es:[rdi],dx
    3037:	61                   	(bad)  
    3038:	5f                   	pop    rdi
    3039:	61                   	(bad)  
    303a:	63 74 00 63          	movsxd esi,DWORD PTR [rax+rax*1+0x63]
    303e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    303f:	6d                   	ins    DWORD PTR es:[rdi],dx
    3040:	6d                   	ins    DWORD PTR es:[rdi],dx
    3041:	61                   	(bad)  
    3042:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3043:	64 5f                	fs pop rdi
    3045:	66 69 73 5f 6c 65    	imul   si,WORD PTR [rbx+0x5f],0x656c
    304b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    304c:	67 74 68             	addr32 je 30b7 <stivale_hdr-0x1fcf49>
    304f:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    3052:	61                   	(bad)  
    3053:	74 75                	je     30ca <stivale_hdr-0x1fcf36>
    3055:	72 65                	jb     30bc <stivale_hdr-0x1fcf44>
    3057:	5f                   	pop    rdi
    3058:	68 69 67 68 00       	push   0x686769
    305d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    305e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    305f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3060:	65 00 63 6f          	add    BYTE PTR gs:[rbx+0x6f],ah
    3064:	6d                   	ins    DWORD PTR es:[rdi],dx
    3065:	6d                   	ins    DWORD PTR es:[rdi],dx
    3066:	61                   	(bad)  
    3067:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3068:	64 5f                	fs pop rdi
    306a:	6c                   	ins    BYTE PTR es:[rdi],dx
    306b:	69 73 74 5f 62 61 73 	imul   esi,DWORD PTR [rbx+0x74],0x7361625f
    3072:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    3076:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    307a:	34 64                	xor    al,0x64
    307c:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    3083:	69 31 33 67 65 74    	imul   esi,DWORD PTR [rcx],0x74656733
    3089:	5f                   	pop    rdi
    308a:	70 6f                	jo     30fb <stivale_hdr-0x1fcf05>
    308c:	72 74                	jb     3102 <stivale_hdr-0x1fcefe>
    308e:	5f                   	pop    rdi
    308f:	74 79                	je     310a <stivale_hdr-0x1fcef6>
    3091:	70 65                	jo     30f8 <stivale_hdr-0x1fcf08>
    3093:	45 50                	rex.RB push r8
    3095:	4e 53                	rex.WRX push rbx
    3097:	31 5f 38             	xor    DWORD PTR [rdi+0x38],ebx
    309a:	68 62 61 5f 70       	push   0x705f6162
    309f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30a0:	72 74                	jb     3116 <stivale_hdr-0x1fceea>
    30a2:	45 00 69 6d          	add    BYTE PTR [r9+0x6d],r13b
    30a6:	70 6c                	jo     3114 <stivale_hdr-0x1fceec>
    30a8:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    30aa:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30ac:	74 65                	je     3113 <stivale_hdr-0x1fceed>
    30ae:	64 5f                	fs pop rdi
    30b0:	70 6f                	jo     3121 <stivale_hdr-0x1fcedf>
    30b2:	72 74                	jb     3128 <stivale_hdr-0x1fced8>
    30b4:	73 00                	jae    30b6 <stivale_hdr-0x1fcf4a>
    30b6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30b8:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
    30bc:	75 72                	jne    3130 <stivale_hdr-0x1fced0>
    30be:	65 5f                	gs pop rdi
    30c0:	6d                   	ins    DWORD PTR es:[rdi],dx
    30c1:	61                   	(bad)  
    30c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30c3:	61                   	(bad)  
    30c4:	67 65 6d             	gs ins DWORD PTR es:[edi],dx
    30c7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30c9:	74 5f                	je     312a <stivale_hdr-0x1fced6>
    30cb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    30ce:	74 72                	je     3142 <stivale_hdr-0x1fcebe>
    30d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    30d2:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
    30d5:	74 61                	je     3138 <stivale_hdr-0x1fcec8>
    30d7:	5f                   	pop    rdi
    30d8:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    30db:	74 72                	je     314f <stivale_hdr-0x1fceb1>
    30dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30de:	6c                   	ins    BYTE PTR es:[rdi],dx
    30df:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    30e2:	6d                   	ins    DWORD PTR es:[rdi],dx
    30e3:	6d                   	ins    DWORD PTR es:[rdi],dx
    30e4:	61                   	(bad)  
    30e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30e6:	64 5f                	fs pop rdi
    30e8:	69 73 73 75 65 00 62 	imul   esi,DWORD PTR [rbx+0x73],0x62006575
    30ef:	79 74                	jns    3165 <stivale_hdr-0x1fce9b>
    30f1:	65 5f                	gs pop rdi
    30f3:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    30f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30f7:	74 00                	je     30f9 <stivale_hdr-0x1fcf07>
    30f9:	66 69 73 5f 72 65    	imul   si,WORD PTR [rbx+0x5f],0x6572
    30ff:	67 69 73 74 65 72 5f 	imul   esi,DWORD PTR [ebx+0x74],0x685f7265
    3106:	68 
    3107:	32 64 00 63          	xor    ah,BYTE PTR [rax+rax*1+0x63]
    310b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    310c:	6d                   	ins    DWORD PTR es:[rdi],dx
    310d:	6d                   	ins    DWORD PTR es:[rdi],dx
    310e:	61                   	(bad)  
    310f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3110:	64 5f                	fs pop rdi
    3112:	74 61                	je     3175 <stivale_hdr-0x1fce8b>
    3114:	62                   	(bad)  
    3115:	6c                   	ins    BYTE PTR es:[rdi],dx
    3116:	65 5f                	gs pop rdi
    3118:	62 61                	(bad)  
    311a:	73 65                	jae    3181 <stivale_hdr-0x1fce7f>
    311c:	5f                   	pop    rdi
    311d:	75 70                	jne    318f <stivale_hdr-0x1fce71>
    311f:	70 65                	jo     3186 <stivale_hdr-0x1fce7a>
    3121:	72 00                	jb     3123 <stivale_hdr-0x1fcedd>
    3123:	70 72                	jo     3197 <stivale_hdr-0x1fce69>
    3125:	64 74 5f             	fs je  3187 <stivale_hdr-0x1fce79>
    3128:	6c                   	ins    BYTE PTR es:[rdi],dx
    3129:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    312b:	67 74 68             	addr32 je 3196 <stivale_hdr-0x1fce6a>
    312e:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    3131:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    3135:	5f                   	pop    rdi
    3136:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    3139:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    313a:	74 00                	je     313c <stivale_hdr-0x1fcec4>
    313c:	68 6f 73 74 5f       	push   0x5f74736f
    3141:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    3144:	61                   	(bad)  
    3145:	62                   	(bad)  
    3146:	69 6c 69 74 79 00 73 	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x65730079
    314d:	65 
    314e:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    3152:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3155:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3159:	34 64                	xor    al,0x64
    315b:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    3162:	69 34 61 62 61 72 45 	imul   esi,DWORD PTR [rcx+riz*2],0x45726162
    3169:	00 63 33             	add    BYTE PTR [rbx+0x33],ah
    316c:	5f                   	pop    rdi
    316d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    3170:	74 72                	je     31e4 <stivale_hdr-0x1fce1c>
    3172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3173:	6c                   	ins    BYTE PTR es:[rdi],dx
    3174:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    3177:	77 5f                	ja     31d8 <stivale_hdr-0x1fce28>
    3179:	66 69 73 5f 62 61    	imul   si,WORD PTR [rbx+0x5f],0x6162
    317f:	73 65                	jae    31e6 <stivale_hdr-0x1fce1a>
    3181:	00 61 68             	add    BYTE PTR [rcx+0x68],ah
    3184:	63 69 5f             	movsxd ebp,DWORD PTR [rcx+0x5f]
    3187:	70 6f                	jo     31f8 <stivale_hdr-0x1fce08>
    3189:	72 74                	jb     31ff <stivale_hdr-0x1fce01>
    318b:	5f                   	pop    rdi
    318c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    318d:	75 6d                	jne    31fc <stivale_hdr-0x1fce04>
    318f:	62                   	(bad)  
    3190:	65 72 00             	gs jb  3193 <stivale_hdr-0x1fce6d>
    3193:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    319a:	70 74                	jo     3210 <stivale_hdr-0x1fcdf0>
    319c:	5f                   	pop    rdi
    319d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    319f:	61                   	(bad)  
    31a0:	62                   	(bad)  
    31a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    31a2:	65 00 65 6e          	add    BYTE PTR gs:[rbp+0x6e],ah
    31a6:	63 6c 6f 73          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
    31aa:	75 72                	jne    321e <stivale_hdr-0x1fcde2>
    31ac:	65 5f                	gs pop rdi
    31ae:	6d                   	ins    DWORD PTR es:[rdi],dx
    31af:	61                   	(bad)  
    31b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31b1:	61                   	(bad)  
    31b2:	67 65 6d             	gs ins DWORD PTR es:[edi],dx
    31b5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    31b7:	74 5f                	je     3218 <stivale_hdr-0x1fcde8>
    31b9:	6c                   	ins    BYTE PTR es:[rdi],dx
    31ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31bb:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    31be:	69 6f 6e 00 72 5f 73 	imul   ebp,DWORD PTR [rdi+0x6e],0x735f7200
    31c5:	75 63                	jne    322a <stivale_hdr-0x1fcdd6>
    31c7:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    31ca:	73 00                	jae    31cc <stivale_hdr-0x1fce34>
    31cc:	64 65 76 69          	fs gs jbe 3239 <stivale_hdr-0x1fcdc7>
    31d0:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    31d3:	64 65 74 65          	fs gs je 323c <stivale_hdr-0x1fcdc4>
    31d7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    31db:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31dc:	5f                   	pop    rdi
    31dd:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    31e0:	65 00 69 6e          	add    BYTE PTR gs:[rcx+0x6e],ch
    31e4:	74 65                	je     324b <stivale_hdr-0x1fcdb5>
    31e6:	72 72                	jb     325a <stivale_hdr-0x1fcda6>
    31e8:	75 70                	jne    325a <stivale_hdr-0x1fcda6>
    31ea:	74 5f                	je     324b <stivale_hdr-0x1fcdb5>
    31ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31ee:	5f                   	pop    rdi
    31ef:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    31f2:	70 6c                	jo     3260 <stivale_hdr-0x1fcda0>
    31f4:	65 74 69             	gs je  3260 <stivale_hdr-0x1fcda0>
    31f7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31f9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    31fc:	31 38                	xor    DWORD PTR [rax],edi
    31fe:	24 66                	and    al,0x66
    3200:	69 6e 64 5f 63 6f 6d 	imul   ebp,DWORD PTR [rsi+0x64],0x6d6f635f
    3207:	6d                   	ins    DWORD PTR es:[rdi],dx
    3208:	61                   	(bad)  
    3209:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    320a:	64 5f                	fs pop rdi
    320c:	73 6c                	jae    327a <stivale_hdr-0x1fcd86>
    320e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    320f:	74 50                	je     3261 <stivale_hdr-0x1fcd9f>
    3211:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3215:	34 64                	xor    al,0x64
    3217:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    321e:	69 38 68 62 61 5f    	imul   edi,DWORD PTR [rax],0x5f616268
    3224:	70 6f                	jo     3295 <stivale_hdr-0x1fcd6b>
    3226:	72 74                	jb     329c <stivale_hdr-0x1fcd64>
    3228:	45 00 68 62          	add    BYTE PTR [r8+0x62],r13b
    322c:	61                   	(bad)  
    322d:	5f                   	pop    rdi
    322e:	6d                   	ins    DWORD PTR es:[rdi],dx
    322f:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    3231:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3232:	72 79                	jb     32ad <stivale_hdr-0x1fcd53>
    3234:	00 69 64             	add    BYTE PTR [rcx+0x64],ch
    3237:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3239:	74 69                	je     32a4 <stivale_hdr-0x1fcd5c>
    323b:	66 79 00             	data16 jns 323e <stivale_hdr-0x1fcdc2>
    323e:	61                   	(bad)  
    323f:	68 63 69 5f 70       	push   0x705f6963
    3244:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3245:	72 74                	jb     32bb <stivale_hdr-0x1fcd45>
    3247:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    324a:	6d                   	ins    DWORD PTR es:[rdi],dx
    324b:	6d                   	ins    DWORD PTR es:[rdi],dx
    324c:	61                   	(bad)  
    324d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    324e:	64 5f                	fs pop rdi
    3250:	73 74                	jae    32c6 <stivale_hdr-0x1fcd3a>
    3252:	61                   	(bad)  
    3253:	74 75                	je     32ca <stivale_hdr-0x1fcd36>
    3255:	73 00                	jae    3257 <stivale_hdr-0x1fcda9>
    3257:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    325a:	6d                   	ins    DWORD PTR es:[rdi],dx
    325b:	61                   	(bad)  
    325c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    325d:	64 5f                	fs pop rdi
    325f:	73 74                	jae    32d5 <stivale_hdr-0x1fcd2b>
    3261:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3262:	70 00                	jo     3264 <stivale_hdr-0x1fcd9c>
    3264:	77 72                	ja     32d8 <stivale_hdr-0x1fcd28>
    3266:	69 74 65 5f 70 69 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x6f6970
    326d:	00 
    326e:	70 6f                	jo     32df <stivale_hdr-0x1fcd21>
    3270:	72 74                	jb     32e6 <stivale_hdr-0x1fcd1a>
    3272:	5f                   	pop    rdi
    3273:	6d                   	ins    DWORD PTR es:[rdi],dx
    3274:	75 6c                	jne    32e2 <stivale_hdr-0x1fcd1e>
    3276:	74 69                	je     32e1 <stivale_hdr-0x1fcd1f>
    3278:	70 6c                	jo     32e6 <stivale_hdr-0x1fcd1a>
    327a:	69 65 72 00 70 78 63 	imul   esp,DWORD PTR [rbp+0x72],0x63787000
    3281:	6d                   	ins    DWORD PTR es:[rdi],dx
    3282:	64 5f                	fs pop rdi
    3284:	73 74                	jae    32fa <stivale_hdr-0x1fcd06>
    3286:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    3289:	74 5f                	je     32ea <stivale_hdr-0x1fcd16>
    328b:	70 6f                	jo     32fc <stivale_hdr-0x1fcd04>
    328d:	72 74                	jb     3303 <stivale_hdr-0x1fccfd>
    328f:	5f                   	pop    rdi
    3290:	74 79                	je     330b <stivale_hdr-0x1fccf5>
    3292:	70 65                	jo     32f9 <stivale_hdr-0x1fcd07>
    3294:	00 74 66 65          	add    BYTE PTR [rsi+riz*2+0x65],dh
    3298:	73 00                	jae    329a <stivale_hdr-0x1fcd66>
    329a:	6d                   	ins    DWORD PTR es:[rdi],dx
    329b:	61                   	(bad)  
    329c:	78 69                	js     3307 <stivale_hdr-0x1fccf9>
    329e:	6d                   	ins    DWORD PTR es:[rdi],dx
    329f:	75 6d                	jne    330e <stivale_hdr-0x1fccf2>
    32a1:	5f                   	pop    rdi
    32a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    32a3:	61                   	(bad)  
    32a4:	74 65                	je     330b <stivale_hdr-0x1fccf5>
    32a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32a7:	63 79 00             	movsxd edi,DWORD PTR [rcx+0x0]
    32aa:	6d                   	ins    DWORD PTR es:[rdi],dx
    32ab:	69 6e 69 6d 75 6d 5f 	imul   ebp,DWORD PTR [rsi+0x69],0x5f6d756d
    32b2:	67 72 61             	addr32 jb 3316 <stivale_hdr-0x1fccea>
    32b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32b6:	74 00                	je     32b8 <stivale_hdr-0x1fcd48>
    32b8:	68 6f 73 74 5f       	push   0x5f74736f
    32bd:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    32c0:	61                   	(bad)  
    32c1:	62                   	(bad)  
    32c2:	69 6c 69 74 79 5f 65 	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x78655f79
    32c9:	78 
    32ca:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
    32cd:	74 61                	je     3330 <stivale_hdr-0x1fccd0>
    32cf:	5f                   	pop    rdi
    32d0:	70 69                	jo     333b <stivale_hdr-0x1fccc5>
    32d2:	5f                   	pop    rdi
    32d3:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    32d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    32d7:	61                   	(bad)  
    32d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32d9:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    32dd:	74 65                	je     3344 <stivale_hdr-0x1fccbc>
    32df:	72 72                	jb     3353 <stivale_hdr-0x1fccad>
    32e1:	75 70                	jne    3353 <stivale_hdr-0x1fccad>
    32e3:	74 5f                	je     3344 <stivale_hdr-0x1fccbc>
    32e5:	73 74                	jae    335b <stivale_hdr-0x1fcca5>
    32e7:	61                   	(bad)  
    32e8:	74 75                	je     335f <stivale_hdr-0x1fcca1>
    32ea:	73 00                	jae    32ec <stivale_hdr-0x1fcd14>
    32ec:	73 65                	jae    3353 <stivale_hdr-0x1fccad>
    32ee:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    32f2:	5f                   	pop    rdi
    32f3:	68 69 67 68 00       	push   0x686769
    32f8:	70 72                	jo     336c <stivale_hdr-0x1fcc94>
    32fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32fb:	62                   	(bad)  
    32fc:	65 5f                	gs pop rdi
    32fe:	70 6f                	jo     336f <stivale_hdr-0x1fcc91>
    3300:	72 74                	jb     3376 <stivale_hdr-0x1fcc8a>
    3302:	73 00                	jae    3304 <stivale_hdr-0x1fccfc>
    3304:	73 65                	jae    336b <stivale_hdr-0x1fcc95>
    3306:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    330a:	5f                   	pop    rdi
    330b:	6c                   	ins    BYTE PTR es:[rdi],dx
    330c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    330d:	77 00                	ja     330f <stivale_hdr-0x1fccf1>
    330f:	69 6e 74 65 72 72 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75727265
    3316:	70 74                	jo     338c <stivale_hdr-0x1fcc74>
    3318:	5f                   	pop    rdi
    3319:	70 69                	jo     3384 <stivale_hdr-0x1fcc7c>
    331b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    331c:	00 70 69             	add    BYTE PTR [rax+0x69],dh
    331f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3320:	5f                   	pop    rdi
    3321:	73 65                	jae    3388 <stivale_hdr-0x1fcc78>
    3323:	74 75                	je     339a <stivale_hdr-0x1fcc66>
    3325:	70 00                	jo     3327 <stivale_hdr-0x1fccd9>
    3327:	73 61                	jae    338a <stivale_hdr-0x1fcc76>
    3329:	74 61                	je     338c <stivale_hdr-0x1fcc74>
    332b:	5f                   	pop    rdi
    332c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    332f:	6d                   	ins    DWORD PTR es:[rdi],dx
    3330:	61                   	(bad)  
    3331:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3332:	64 00 73 61          	add    BYTE PTR fs:[rbx+0x61],dh
    3336:	74 61                	je     3399 <stivale_hdr-0x1fcc67>
    3338:	5f                   	pop    rdi
    3339:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    333a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    333b:	74 69                	je     33a6 <stivale_hdr-0x1fcc5a>
    333d:	66 69 63 61 74 69    	imul   sp,WORD PTR [rbx+0x61],0x6974
    3343:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3344:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3345:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    3348:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    334a:	64 72 69             	fs jb  33b6 <stivale_hdr-0x1fcc4a>
    334d:	76 65                	jbe    33b4 <stivale_hdr-0x1fcc4c>
    334f:	72 73                	jb     33c4 <stivale_hdr-0x1fcc3c>
    3351:	2f                   	(bad)  
    3352:	64 69 73 6b 2f 61 68 	imul   esi,DWORD PTR fs:[rbx+0x6b],0x6368612f
    3359:	63 
    335a:	69 2f 61 68 63 69    	imul   ebp,DWORD PTR [rdi],0x69636861
    3360:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    3364:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3367:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    336b:	34 64                	xor    al,0x64
    336d:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    3374:	69 31 32 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6332
    337a:	6d                   	ins    DWORD PTR es:[rdi],dx
    337b:	61                   	(bad)  
    337c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    337d:	64 5f                	fs pop rdi
    337f:	72 65                	jb     33e6 <stivale_hdr-0x1fcc1a>
    3381:	61                   	(bad)  
    3382:	64 45 6d             	fs rex.RB ins DWORD PTR es:[rdi],dx
    3385:	6d                   	ins    DWORD PTR es:[rdi],dx
    3386:	74 50                	je     33d8 <stivale_hdr-0x1fcc28>
    3388:	76 00                	jbe    338a <stivale_hdr-0x1fcc76>
    338a:	72 65                	jb     33f1 <stivale_hdr-0x1fcc0f>
    338c:	67 5f                	addr32 pop rdi
    338e:	68 32 64 00 65       	push   0x65006432
    3393:	78 70                	js     3405 <stivale_hdr-0x1fcbfb>
    3395:	61                   	(bad)  
    3396:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3397:	73 69                	jae    3402 <stivale_hdr-0x1fcbfe>
    3399:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    339a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    339b:	5f                   	pop    rdi
    339c:	72 6f                	jb     340d <stivale_hdr-0x1fcbf3>
    339e:	6d                   	ins    DWORD PTR es:[rdi],dx
    339f:	5f                   	pop    rdi
    33a0:	62 61                	(bad)  
    33a2:	73 65                	jae    3409 <stivale_hdr-0x1fcbf7>
    33a4:	00 72 5f             	add    BYTE PTR [rdx+0x5f],dh
    33a7:	74 61                	je     340a <stivale_hdr-0x1fcbf6>
    33a9:	73 6b                	jae    3416 <stivale_hdr-0x1fcbea>
    33ab:	5f                   	pop    rdi
    33ac:	66 69 6c 65 5f 65 72 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7265
    33b3:	72 6f                	jb     3424 <stivale_hdr-0x1fcbdc>
    33b5:	72 00                	jb     33b7 <stivale_hdr-0x1fcc49>
    33b7:	61                   	(bad)  
    33b8:	68 63 69 5f 72       	push   0x725f6963
    33bd:	65 61                	gs (bad) 
    33bf:	64 5f                	fs pop rdi
    33c1:	73 74                	jae    3437 <stivale_hdr-0x1fcbc9>
    33c3:	61                   	(bad)  
    33c4:	74 75                	je     343b <stivale_hdr-0x1fcbc5>
    33c6:	73 00                	jae    33c8 <stivale_hdr-0x1fcc38>
    33c8:	72 65                	jb     342f <stivale_hdr-0x1fcbd1>
    33ca:	73 65                	jae    3431 <stivale_hdr-0x1fcbcf>
    33cc:	74 00                	je     33ce <stivale_hdr-0x1fcc32>
    33ce:	69 70 6d 5f 63 6f 64 	imul   esi,DWORD PTR [rax+0x6d],0x646f635f
    33d5:	65 00 68 62          	add    BYTE PTR gs:[rax+0x62],ch
    33d9:	61                   	(bad)  
    33da:	5f                   	pop    rdi
    33db:	70 78                	jo     3455 <stivale_hdr-0x1fcbab>
    33dd:	69 73 00 64 65 76 69 	imul   esi,DWORD PTR [rbx+0x0],0x69766564
    33e4:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    33e7:	68 65 61 64 65       	push   0x65646165
    33ec:	72 5f                	jb     344d <stivale_hdr-0x1fcbb3>
    33ee:	65 78 30             	gs js  3421 <stivale_hdr-0x1fcbdf>
    33f1:	00 70 6d             	add    BYTE PTR [rax+0x6d],dh
    33f4:	5f                   	pop    rdi
    33f5:	73 00                	jae    33f7 <stivale_hdr-0x1fcc09>
    33f7:	68 62 61 5f 70       	push   0x705f6162
    33fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33fd:	72 74                	jb     3473 <stivale_hdr-0x1fcb8d>
    33ff:	00 61 68             	add    BYTE PTR [rcx+0x68],ah
    3402:	63 69 5f             	movsxd ebp,DWORD PTR [rcx+0x5f]
    3405:	77 72                	ja     3479 <stivale_hdr-0x1fcb87>
    3407:	69 74 65 5f 73 74 61 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x74617473
    340e:	74 
    340f:	75 73                	jne    3484 <stivale_hdr-0x1fcb7c>
    3411:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3414:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3418:	34 64                	xor    al,0x64
    341a:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    3421:	69 31 34 63 6f 6e    	imul   esi,DWORD PTR [rcx],0x6e6f6334
    3427:	66 69 67 75 72 65    	imul   sp,WORD PTR [rdi+0x75],0x6572
    342d:	5f                   	pop    rdi
    342e:	70 6f                	jo     349f <stivale_hdr-0x1fcb61>
    3430:	72 74                	jb     34a6 <stivale_hdr-0x1fcb5a>
    3432:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    3434:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3437:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    343b:	34 64                	xor    al,0x64
    343d:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    3444:	69 31 32 63 6f 6d    	imul   esi,DWORD PTR [rcx],0x6d6f6332
    344a:	6d                   	ins    DWORD PTR es:[rdi],dx
    344b:	61                   	(bad)  
    344c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    344d:	64 5f                	fs pop rdi
    344f:	73 74                	jae    34c5 <stivale_hdr-0x1fcb3b>
    3451:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3452:	70 45                	jo     3499 <stivale_hdr-0x1fcb67>
    3454:	6d                   	ins    DWORD PTR es:[rdi],dx
    3455:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    3458:	74 65                	je     34bf <stivale_hdr-0x1fcb41>
    345a:	72 66                	jb     34c2 <stivale_hdr-0x1fcb3e>
    345c:	61                   	(bad)  
    345d:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    3460:	70 6f                	jo     34d1 <stivale_hdr-0x1fcb2f>
    3462:	77 65                	ja     34c9 <stivale_hdr-0x1fcb37>
    3464:	72 5f                	jb     34c5 <stivale_hdr-0x1fcb3b>
    3466:	6d                   	ins    DWORD PTR es:[rdi],dx
    3467:	61                   	(bad)  
    3468:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3469:	61                   	(bad)  
    346a:	67 65 6d             	gs ins DWORD PTR es:[edi],dx
    346d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    346f:	74 00                	je     3471 <stivale_hdr-0x1fcb8f>
    3471:	73 6c                	jae    34df <stivale_hdr-0x1fcb21>
    3473:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3474:	74 73                	je     34e9 <stivale_hdr-0x1fcb17>
    3476:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
    3479:	69 6e 6c 6f 63 6b 00 	imul   ebp,DWORD PTR [rsi+0x6c],0x6b636f
    3480:	64 61                	fs (bad) 
    3482:	74 61                	je     34e5 <stivale_hdr-0x1fcb1b>
    3484:	5f                   	pop    rdi
    3485:	62 61                	(bad)  
    3487:	73 65                	jae    34ee <stivale_hdr-0x1fcb12>
    3489:	5f                   	pop    rdi
    348a:	61                   	(bad)  
    348b:	64 64 72 65          	fs fs jb 34f4 <stivale_hdr-0x1fcb0c>
    348f:	73 73                	jae    3504 <stivale_hdr-0x1fcafc>
    3491:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    3494:	6d                   	ins    DWORD PTR es:[rdi],dx
    3495:	6d                   	ins    DWORD PTR es:[rdi],dx
    3496:	61                   	(bad)  
    3497:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3498:	64 5f                	fs pop rdi
    349a:	73 74                	jae    3510 <stivale_hdr-0x1fcaf0>
    349c:	61                   	(bad)  
    349d:	74 75                	je     3514 <stivale_hdr-0x1fcaec>
    349f:	73 5f                	jae    3500 <stivale_hdr-0x1fcb00>
    34a1:	66 69 65 6c 64 00    	imul   sp,WORD PTR [rbp+0x6c],0x64
    34a7:	70 6f                	jo     3518 <stivale_hdr-0x1fcae8>
    34a9:	72 74                	jb     351f <stivale_hdr-0x1fcae1>
    34ab:	5f                   	pop    rdi
    34ac:	73 69                	jae    3517 <stivale_hdr-0x1fcae9>
    34ae:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    34b0:	61                   	(bad)  
    34b1:	74 75                	je     3528 <stivale_hdr-0x1fcad8>
    34b3:	72 65                	jb     351a <stivale_hdr-0x1fcae6>
    34b5:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
    34b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b9:	73 5f                	jae    351a <stivale_hdr-0x1fcae6>
    34bb:	68 61 6e 64 6f       	push   0x6f646e61
    34c0:	66 66 5f             	data16 pop di
    34c3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    34c6:	74 72                	je     353a <stivale_hdr-0x1fcac6>
    34c8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    34ca:	5f                   	pop    rdi
    34cb:	73 74                	jae    3541 <stivale_hdr-0x1fcabf>
    34cd:	61                   	(bad)  
    34ce:	74 75                	je     3545 <stivale_hdr-0x1fcabb>
    34d0:	73 00                	jae    34d2 <stivale_hdr-0x1fcb2e>
    34d2:	61                   	(bad)  
    34d3:	62 61                	(bad)  
    34d5:	72 00                	jb     34d7 <stivale_hdr-0x1fcb29>
    34d7:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    34da:	6d                   	ins    DWORD PTR es:[rdi],dx
    34db:	61                   	(bad)  
    34dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34dd:	64 5f                	fs pop rdi
    34df:	74 61                	je     3542 <stivale_hdr-0x1fcabe>
    34e1:	62                   	(bad)  
    34e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    34e3:	65 5f                	gs pop rdi
    34e5:	62 61                	(bad)  
    34e7:	73 65                	jae    354e <stivale_hdr-0x1fcab2>
    34e9:	00 70 72             	add    BYTE PTR [rax+0x72],dh
    34ec:	64 74 5f             	fs je  354e <stivale_hdr-0x1fcab2>
    34ef:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    34f1:	74 72                	je     3565 <stivale_hdr-0x1fca9b>
    34f3:	69 65 73 00 61 68 63 	imul   esp,DWORD PTR [rbp+0x73],0x63686100
    34fa:	69 5f 63 6f 6e 74 72 	imul   ebx,DWORD PTR [rdi+0x63],0x72746e6f
    3501:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3502:	6c                   	ins    BYTE PTR es:[rdi],dx
    3503:	6c                   	ins    BYTE PTR es:[rdi],dx
    3504:	65 72 00             	gs jb  3507 <stivale_hdr-0x1fcaf9>
    3507:	74 66                	je     356f <stivale_hdr-0x1fca91>
    3509:	5f                   	pop    rdi
    350a:	64 61                	fs (bad) 
    350c:	74 61                	je     356f <stivale_hdr-0x1fca91>
    350e:	5f                   	pop    rdi
    350f:	62                   	(bad)  
    3510:	69 74 73 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x324e5a5f
    3517:	32 
    3518:	69 6f 34 64 69 73 6b 	imul   ebp,DWORD PTR [rdi+0x34],0x6b736964
    351f:	34 61                	xor    al,0x61
    3521:	68 63 69 31 30       	push   0x30316963
    3526:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
    352d:	69 7a 65 45 50 4e 53 	imul   edi,DWORD PTR [rdx+0x65],0x534e5045
    3534:	5f                   	pop    rdi
    3535:	33 70 63             	xor    esi,DWORD PTR [rax+0x63]
    3538:	69 31 33 64 65 76    	imul   esi,DWORD PTR [rcx],0x76656433
    353e:	69 63 65 5f 68 65 61 	imul   esp,DWORD PTR [rbx+0x65],0x6165685f
    3545:	64 65 72 45          	fs gs jb 358e <stivale_hdr-0x1fca72>
    3549:	00 77 72             	add    BYTE PTR [rdi+0x72],dh
    354c:	69 74 65 5f 64 6d 61 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x5f616d64
    3553:	5f 
    3554:	65 78 00             	gs js  3557 <stivale_hdr-0x1fcaa9>
    3557:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    355a:	6d                   	ins    DWORD PTR es:[rdi],dx
    355b:	61                   	(bad)  
    355c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    355d:	64 5f                	fs pop rdi
    355f:	77 72                	ja     35d3 <stivale_hdr-0x1fca2d>
    3561:	69 74 65 00 72 5f 64 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x65645f72
    3568:	65 
    3569:	76 69                	jbe    35d4 <stivale_hdr-0x1fca2c>
    356b:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    356e:	68 75 6e 67 00       	push   0x676e75
    3573:	66 69 73 5f 73 77    	imul   si,WORD PTR [rbx+0x5f],0x7773
    3579:	69 74 63 68 5f 63 6f 	imul   esi,DWORD PTR [rbx+riz*2+0x68],0x6e6f635f
    3580:	6e 
    3581:	74 72                	je     35f5 <stivale_hdr-0x1fca0b>
    3583:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3584:	6c                   	ins    BYTE PTR es:[rdi],dx
    3585:	00 64 6d 61          	add    BYTE PTR [rbp+rbp*2+0x61],ah
    3589:	5f                   	pop    rdi
    358a:	73 65                	jae    35f1 <stivale_hdr-0x1fca0f>
    358c:	74 75                	je     3603 <stivale_hdr-0x1fc9fd>
    358e:	70 00                	jo     3590 <stivale_hdr-0x1fca70>
    3590:	68 62 61 5f 63       	push   0x635f6162
    3595:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3596:	6d                   	ins    DWORD PTR es:[rdi],dx
    3597:	6d                   	ins    DWORD PTR es:[rdi],dx
    3598:	61                   	(bad)  
    3599:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    359a:	64 5f                	fs pop rdi
    359c:	68 65 61 64 65       	push   0x65646165
    35a1:	72 00                	jb     35a3 <stivale_hdr-0x1fca5d>
    35a3:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    35a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    35a7:	61                   	(bad)  
    35a8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    35a9:	64 5f                	fs pop rdi
    35ab:	66 69 73 00 64 65    	imul   si,WORD PTR [rbx+0x0],0x6564
    35b1:	76 69                	jbe    361c <stivale_hdr-0x1fc9e4>
    35b3:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    35b6:	64 65 74 65          	fs gs je 361f <stivale_hdr-0x1fc9e1>
    35ba:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    35be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    35bf:	00 77 5f             	add    BYTE PTR [rdi+0x5f],dh
    35c2:	73 75                	jae    3639 <stivale_hdr-0x1fc9c7>
    35c4:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    35c7:	73 73                	jae    363c <stivale_hdr-0x1fc9c4>
    35c9:	00 70 78             	add    BYTE PTR [rax+0x78],dh
    35cc:	63 6d 64             	movsxd ebp,DWORD PTR [rbp+0x64]
    35cf:	5f                   	pop    rdi
    35d0:	66 72 65             	data16 jb 3638 <stivale_hdr-0x1fc9c8>
    35d3:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    35d6:	65 61                	gs (bad) 
    35d8:	72 5f                	jb     3639 <stivale_hdr-0x1fc9c7>
    35da:	62                   	(bad)  
    35db:	75 73                	jne    3650 <stivale_hdr-0x1fc9b0>
    35dd:	79 00                	jns    35df <stivale_hdr-0x1fca21>
    35df:	73 61                	jae    3642 <stivale_hdr-0x1fc9be>
    35e1:	74 61                	je     3644 <stivale_hdr-0x1fc9bc>
    35e3:	5f                   	pop    rdi
    35e4:	70 69                	jo     364f <stivale_hdr-0x1fc9b1>
    35e6:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    35e9:	75 73                	jne    365e <stivale_hdr-0x1fc9a2>
    35eb:	68 00 66 69 73       	push   0x73696600
    35f0:	5f                   	pop    rdi
    35f1:	74 79                	je     366c <stivale_hdr-0x1fc994>
    35f3:	70 65                	jo     365a <stivale_hdr-0x1fc9a6>
    35f5:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    35f8:	6d                   	ins    DWORD PTR es:[rdi],dx
    35f9:	6d                   	ins    DWORD PTR es:[rdi],dx
    35fa:	61                   	(bad)  
    35fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    35fc:	64 5f                	fs pop rdi
    35fe:	74 61                	je     3661 <stivale_hdr-0x1fc99f>
    3600:	62                   	(bad)  
    3601:	6c                   	ins    BYTE PTR es:[rdi],dx
    3602:	65 5f                	gs pop rdi
    3604:	61                   	(bad)  
    3605:	64 64 72 65          	fs fs jb 366e <stivale_hdr-0x1fc992>
    3609:	73 73                	jae    367e <stivale_hdr-0x1fc982>
    360b:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    360e:	73 5f                	jae    366f <stivale_hdr-0x1fc991>
    3610:	62 61                	(bad)  
    3612:	73 65                	jae    3679 <stivale_hdr-0x1fc987>
    3614:	5f                   	pop    rdi
    3615:	75 70                	jne    3687 <stivale_hdr-0x1fc979>
    3617:	70 65                	jo     367e <stivale_hdr-0x1fc982>
    3619:	72 00                	jb     361b <stivale_hdr-0x1fc9e5>
    361b:	5f                   	pop    rdi
    361c:	5a                   	pop    rdx
    361d:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3621:	34 64                	xor    al,0x64
    3623:	69 73 6b 34 61 68 63 	imul   esi,DWORD PTR [rbx+0x6b],0x63686134
    362a:	69 31 32 75 73 61    	imul   esi,DWORD PTR [rcx],0x61737532
    3630:	62                   	(bad)  
    3631:	6c                   	ins    BYTE PTR es:[rdi],dx
    3632:	65 5f                	gs pop rdi
    3634:	70 6f                	jo     36a5 <stivale_hdr-0x1fc95b>
    3636:	72 74                	jb     36ac <stivale_hdr-0x1fc954>
    3638:	73 45                	jae    367f <stivale_hdr-0x1fc981>
    363a:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
    363d:	74 61                	je     36a0 <stivale_hdr-0x1fc960>
    363f:	00 77 5f             	add    BYTE PTR [rdi+0x5f],dh
    3642:	74 61                	je     36a5 <stivale_hdr-0x1fc95b>
    3644:	73 6b                	jae    36b1 <stivale_hdr-0x1fc94f>
    3646:	5f                   	pop    rdi
    3647:	66 69 6c 65 5f 65 72 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7265
    364e:	72 6f                	jb     36bf <stivale_hdr-0x1fc941>
    3650:	72 00                	jb     3652 <stivale_hdr-0x1fc9ae>
    3652:	5f                   	pop    rdi
    3653:	5a                   	pop    rdx
    3654:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3658:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    365b:	79 62                	jns    36bf <stivale_hdr-0x1fc941>
    365d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    365e:	61                   	(bad)  
    365f:	72 64                	jb     36c5 <stivale_hdr-0x1fc93b>
    3661:	32 34 6b             	xor    dh,BYTE PTR [rbx+rbp*2]
    3664:	65 79 62             	gs jns 36c9 <stivale_hdr-0x1fc937>
    3667:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3668:	61                   	(bad)  
    3669:	72 64                	jb     36cf <stivale_hdr-0x1fc931>
    366b:	5f                   	pop    rdi
    366c:	65 76 65             	gs jbe 36d4 <stivale_hdr-0x1fc92c>
    366f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3670:	74 5f                	je     36d1 <stivale_hdr-0x1fc92f>
    3672:	70 75                	jo     36e9 <stivale_hdr-0x1fc917>
    3674:	62                   	(bad)  
    3675:	6c                   	ins    BYTE PTR es:[rdi],dx
    3676:	69 73 68 65 72 45 4e 	imul   esi,DWORD PTR [rbx+0x68],0x4e457265
    367d:	53                   	push   rbx
    367e:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
    3681:	35 6b 65 79 62       	xor    eax,0x6279656b
    3686:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3687:	61                   	(bad)  
    3688:	72 64                	jb     36ee <stivale_hdr-0x1fc912>
    368a:	5f                   	pop    rdi
    368b:	70 61                	jo     36ee <stivale_hdr-0x1fc912>
    368d:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3690:	74 45                	je     36d7 <stivale_hdr-0x1fc929>
    3692:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3695:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3699:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    369c:	79 62                	jns    3700 <stivale_hdr-0x1fc900>
    369e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    369f:	61                   	(bad)  
    36a0:	72 64                	jb     3706 <stivale_hdr-0x1fc8fa>
    36a2:	39 63 74             	cmp    DWORD PTR [rbx+0x74],esp
    36a5:	72 6c                	jb     3713 <stivale_hdr-0x1fc8ed>
    36a7:	5f                   	pop    rdi
    36a8:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    36aa:	77 6e                	ja     371a <stivale_hdr-0x1fc8e6>
    36ac:	45 00 73 75          	add    BYTE PTR [r11+0x75],r14b
    36b0:	62 73                	(bad)  
    36b2:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    36b5:	62                   	(bad)  
    36b6:	65 72 5f             	gs jb  3718 <stivale_hdr-0x1fc8e8>
    36b9:	66 75 6e             	data16 jne 372a <stivale_hdr-0x1fc8d6>
    36bc:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    36c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36c1:	00 6b 62             	add    BYTE PTR [rbx+0x62],ch
    36c4:	64 5f                	fs pop rdi
    36c6:	69 72 71 5f 68 61 6e 	imul   esi,DWORD PTR [rdx+0x71],0x6e61685f
    36cd:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    36cf:	65 72 00             	gs jb  36d2 <stivale_hdr-0x1fc92e>
    36d2:	5f                   	pop    rdi
    36d3:	5a                   	pop    rdx
    36d4:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    36d8:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    36db:	79 62                	jns    373f <stivale_hdr-0x1fc8c1>
    36dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36de:	61                   	(bad)  
    36df:	72 64                	jb     3745 <stivale_hdr-0x1fc8bb>
    36e1:	38 61 6c             	cmp    BYTE PTR [rcx+0x6c],ah
    36e4:	74 5f                	je     3745 <stivale_hdr-0x1fc8bb>
    36e6:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    36e8:	77 6e                	ja     3758 <stivale_hdr-0x1fc8a8>
    36ea:	45 00 6b 65          	add    BYTE PTR [r11+0x65],r13b
    36ee:	79 62                	jns    3752 <stivale_hdr-0x1fc8ae>
    36f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36f1:	61                   	(bad)  
    36f2:	72 64                	jb     3758 <stivale_hdr-0x1fc8a8>
    36f4:	5f                   	pop    rdi
    36f5:	73 75                	jae    376c <stivale_hdr-0x1fc894>
    36f7:	62 73                	(bad)  
    36f9:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    36fc:	62                   	(bad)  
    36fd:	65 72 73             	gs jb  3773 <stivale_hdr-0x1fc88d>
    3700:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    3703:	79 62                	jns    3767 <stivale_hdr-0x1fc899>
    3705:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3706:	61                   	(bad)  
    3707:	72 64                	jb     376d <stivale_hdr-0x1fc893>
    3709:	5f                   	pop    rdi
    370a:	65 76 65             	gs jbe 3772 <stivale_hdr-0x1fc88e>
    370d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    370e:	74 5f                	je     376f <stivale_hdr-0x1fc891>
    3710:	70 75                	jo     3787 <stivale_hdr-0x1fc879>
    3712:	62                   	(bad)  
    3713:	6c                   	ins    BYTE PTR es:[rdi],dx
    3714:	69 73 68 65 72 00 6b 	imul   esi,DWORD PTR [rbx+0x68],0x6b007265
    371b:	62                   	(bad)  
    371c:	70 61                	jo     377f <stivale_hdr-0x1fc881>
    371e:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3721:	74 00                	je     3723 <stivale_hdr-0x1fc8dd>
    3723:	5f                   	pop    rdi
    3724:	5a                   	pop    rdx
    3725:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3729:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    372c:	79 62                	jns    3790 <stivale_hdr-0x1fc870>
    372e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    372f:	61                   	(bad)  
    3730:	72 64                	jb     3796 <stivale_hdr-0x1fc86a>
    3732:	31 31                	xor    DWORD PTR [rcx],esi
    3734:	73 63                	jae    3799 <stivale_hdr-0x1fc867>
    3736:	72 6f                	jb     37a7 <stivale_hdr-0x1fc859>
    3738:	6c                   	ins    BYTE PTR es:[rdi],dx
    3739:	6c                   	ins    BYTE PTR es:[rdi],dx
    373a:	5f                   	pop    rdi
    373b:	6c                   	ins    BYTE PTR es:[rdi],dx
    373c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    373d:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    3740:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    3743:	79 62                	jns    37a7 <stivale_hdr-0x1fc859>
    3745:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3746:	61                   	(bad)  
    3747:	72 64                	jb     37ad <stivale_hdr-0x1fc853>
    3749:	5f                   	pop    rdi
    374a:	65 76 65             	gs jbe 37b2 <stivale_hdr-0x1fc84e>
    374d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    374e:	74 5f                	je     37af <stivale_hdr-0x1fc851>
    3750:	73 75                	jae    37c7 <stivale_hdr-0x1fc839>
    3752:	62 73                	(bad)  
    3754:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    3757:	62                   	(bad)  
    3758:	65 72 00             	gs jb  375b <stivale_hdr-0x1fc8a5>
    375b:	5f                   	pop    rdi
    375c:	5a                   	pop    rdx
    375d:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3761:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    3764:	79 62                	jns    37c8 <stivale_hdr-0x1fc838>
    3766:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3767:	61                   	(bad)  
    3768:	72 64                	jb     37ce <stivale_hdr-0x1fc832>
    376a:	38 6e 75             	cmp    BYTE PTR [rsi+0x75],ch
    376d:	6d                   	ins    DWORD PTR es:[rdi],dx
    376e:	5f                   	pop    rdi
    376f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3770:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3771:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    3774:	00 6b 65             	add    BYTE PTR [rbx+0x65],ch
    3777:	79 62                	jns    37db <stivale_hdr-0x1fc825>
    3779:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    377a:	61                   	(bad)  
    377b:	72 64                	jb     37e1 <stivale_hdr-0x1fc81f>
    377d:	5f                   	pop    rdi
    377e:	65 76 65             	gs jbe 37e6 <stivale_hdr-0x1fc81a>
    3781:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3782:	74 5f                	je     37e3 <stivale_hdr-0x1fc81d>
    3784:	75 6e                	jne    37f4 <stivale_hdr-0x1fc80c>
    3786:	73 75                	jae    37fd <stivale_hdr-0x1fc803>
    3788:	62 73                	(bad)  
    378a:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    378d:	62                   	(bad)  
    378e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    3792:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3796:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    3799:	79 62                	jns    37fd <stivale_hdr-0x1fc803>
    379b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    379c:	61                   	(bad)  
    379d:	72 64                	jb     3803 <stivale_hdr-0x1fc7fd>
    379f:	37                   	(bad)  
    37a0:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
    37a2:	5f                   	pop    rdi
    37a3:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    37a5:	77 6e                	ja     3815 <stivale_hdr-0x1fc7eb>
    37a7:	45 00 73 72          	add    BYTE PTR [r11+0x72],r14b
    37ab:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    37ad:	64 72 69             	fs jb  3819 <stivale_hdr-0x1fc7e7>
    37b0:	76 65                	jbe    3817 <stivale_hdr-0x1fc7e9>
    37b2:	72 73                	jb     3827 <stivale_hdr-0x1fc7d9>
    37b4:	2f                   	(bad)  
    37b5:	6b 62 64 2f          	imul   esp,DWORD PTR [rdx+0x64],0x2f
    37b9:	6b 62 64 2e          	imul   esp,DWORD PTR [rdx+0x64],0x2e
    37bd:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    37c0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    37c3:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    37c7:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    37ca:	79 62                	jns    382e <stivale_hdr-0x1fc7d2>
    37cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37cd:	61                   	(bad)  
    37ce:	72 64                	jb     3834 <stivale_hdr-0x1fc7cc>
    37d0:	37                   	(bad)  
    37d1:	73 68                	jae    383b <stivale_hdr-0x1fc7c5>
    37d3:	69 66 74 65 64 45 00 	imul   esp,DWORD PTR [rsi+0x74],0x456465
    37da:	5f                   	pop    rdi
    37db:	5a                   	pop    rdx
    37dc:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    37e0:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    37e3:	79 62                	jns    3847 <stivale_hdr-0x1fc7b9>
    37e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37e6:	61                   	(bad)  
    37e7:	72 64                	jb     384d <stivale_hdr-0x1fc7b3>
    37e9:	34 69                	xor    al,0x69
    37eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    37ec:	69 74 45 76 00 5f 5a 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x4e5a5f00
    37f3:	4e 
    37f4:	32 69 6f             	xor    ch,BYTE PTR [rcx+0x6f]
    37f7:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    37fa:	79 62                	jns    385e <stivale_hdr-0x1fc7a2>
    37fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37fd:	61                   	(bad)  
    37fe:	72 64                	jb     3864 <stivale_hdr-0x1fc79c>
    3800:	32 34 6b             	xor    dh,BYTE PTR [rbx+rbp*2]
    3803:	65 79 62             	gs jns 3868 <stivale_hdr-0x1fc798>
    3806:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3807:	61                   	(bad)  
    3808:	72 64                	jb     386e <stivale_hdr-0x1fc792>
    380a:	5f                   	pop    rdi
    380b:	65 76 65             	gs jbe 3873 <stivale_hdr-0x1fc78d>
    380e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    380f:	74 5f                	je     3870 <stivale_hdr-0x1fc790>
    3811:	73 75                	jae    3888 <stivale_hdr-0x1fc778>
    3813:	62 73                	(bad)  
    3815:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    3818:	62                   	(bad)  
    3819:	65 45 50             	gs rex.RB push r8
    381c:	46 76 4e             	rex.RX jbe 386d <stivale_hdr-0x1fc793>
    381f:	53                   	push   rbx
    3820:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
    3823:	35 6b 65 79 62       	xor    eax,0x6279656b
    3828:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3829:	61                   	(bad)  
    382a:	72 64                	jb     3890 <stivale_hdr-0x1fc770>
    382c:	5f                   	pop    rdi
    382d:	70 61                	jo     3890 <stivale_hdr-0x1fc770>
    382f:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    3832:	74 45                	je     3879 <stivale_hdr-0x1fc787>
    3834:	45 00 73 63          	add    BYTE PTR [r11+0x63],r14b
    3838:	61                   	(bad)  
    3839:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    383a:	5f                   	pop    rdi
    383b:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    383e:	65 00 66 75          	add    BYTE PTR gs:[rsi+0x75],ah
    3842:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3843:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    3847:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3848:	5f                   	pop    rdi
    3849:	69 6e 64 65 78 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007865
    3850:	5a                   	pop    rdx
    3851:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3855:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    3858:	79 62                	jns    38bc <stivale_hdr-0x1fc744>
    385a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    385b:	61                   	(bad)  
    385c:	72 64                	jb     38c2 <stivale_hdr-0x1fc73e>
    385e:	39 63 61             	cmp    DWORD PTR [rbx+0x61],esp
    3861:	70 73                	jo     38d6 <stivale_hdr-0x1fc72a>
    3863:	5f                   	pop    rdi
    3864:	6c                   	ins    BYTE PTR es:[rdi],dx
    3865:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3866:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    3869:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    386c:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    3870:	38 6b 65             	cmp    BYTE PTR [rbx+0x65],ch
    3873:	79 62                	jns    38d7 <stivale_hdr-0x1fc729>
    3875:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3876:	61                   	(bad)  
    3877:	72 64                	jb     38dd <stivale_hdr-0x1fc723>
    3879:	32 36                	xor    dh,BYTE PTR [rsi]
    387b:	6b 65 79 62          	imul   esp,DWORD PTR [rbp+0x79],0x62
    387f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3880:	61                   	(bad)  
    3881:	72 64                	jb     38e7 <stivale_hdr-0x1fc719>
    3883:	5f                   	pop    rdi
    3884:	65 76 65             	gs jbe 38ec <stivale_hdr-0x1fc714>
    3887:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3888:	74 5f                	je     38e9 <stivale_hdr-0x1fc717>
    388a:	75 6e                	jne    38fa <stivale_hdr-0x1fc706>
    388c:	73 75                	jae    3903 <stivale_hdr-0x1fc6fd>
    388e:	62 73                	(bad)  
    3890:	63 72 69             	movsxd esi,DWORD PTR [rdx+0x69]
    3893:	62                   	(bad)  
    3894:	65 45 50             	gs rex.RB push r8
    3897:	46 76 4e             	rex.RX jbe 38e8 <stivale_hdr-0x1fc718>
    389a:	53                   	push   rbx
    389b:	30 5f 31             	xor    BYTE PTR [rdi+0x31],bl
    389e:	35 6b 65 79 62       	xor    eax,0x6279656b
    38a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    38a4:	61                   	(bad)  
    38a5:	72 64                	jb     390b <stivale_hdr-0x1fc6f5>
    38a7:	5f                   	pop    rdi
    38a8:	70 61                	jo     390b <stivale_hdr-0x1fc6f5>
    38aa:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    38ad:	74 45                	je     38f4 <stivale_hdr-0x1fc70c>
    38af:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    38b3:	31 32                	xor    DWORD PTR [rdx],esi
    38b5:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    38b9:	72 5f                	jb     391a <stivale_hdr-0x1fc6e6>
    38bb:	62                   	(bad)  
    38bc:	75 66                	jne    3924 <stivale_hdr-0x1fc6dc>
    38be:	66 65 72 76          	data16 gs jb 3938 <stivale_hdr-0x1fc6c8>
    38c2:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    38c5:	61                   	(bad)  
    38c6:	64 5f                	fs pop rdi
    38c8:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    38cb:	6d                   	ins    DWORD PTR es:[rdi],dx
    38cc:	61                   	(bad)  
    38cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38ce:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    38d2:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    38d6:	36 73 65             	ss jae 393e <stivale_hdr-0x1fc6c2>
    38d9:	72 69                	jb     3944 <stivale_hdr-0x1fc6bc>
    38db:	61                   	(bad)  
    38dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    38dd:	37                   	(bad)  
    38de:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    38e1:	73 6f                	jae    3952 <stivale_hdr-0x1fc6ae>
    38e3:	6c                   	ins    BYTE PTR es:[rdi],dx
    38e4:	65 34 69             	gs xor al,0x69
    38e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38e8:	69 74 45 76 00 63 6f 	imul   esi,DWORD PTR [rbp+rax*2+0x76],0x6e6f6300
    38ef:	6e 
    38f0:	73 6f                	jae    3961 <stivale_hdr-0x1fc69f>
    38f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    38f3:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    38f7:	4e 32 69 6f          	rex.WRX xor r13b,BYTE PTR [rcx+0x6f]
    38fb:	36 73 65             	ss jae 3963 <stivale_hdr-0x1fc69d>
    38fe:	72 69                	jb     3969 <stivale_hdr-0x1fc697>
    3900:	61                   	(bad)  
    3901:	6c                   	ins    BYTE PTR es:[rdi],dx
    3902:	37                   	(bad)  
    3903:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    3906:	73 6f                	jae    3977 <stivale_hdr-0x1fc689>
    3908:	6c                   	ins    BYTE PTR es:[rdi],dx
    3909:	65 31 34 72          	xor    DWORD PTR gs:[rdx+rsi*2],esi
    390d:	65 61                	gs (bad) 
    390f:	64 5f                	fs pop rdi
    3911:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3914:	72 61                	jb     3977 <stivale_hdr-0x1fc689>
    3916:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    391a:	45 76 00             	rex.RB jbe 391d <stivale_hdr-0x1fc6e3>
    391d:	73 65                	jae    3984 <stivale_hdr-0x1fc67c>
    391f:	72 69                	jb     398a <stivale_hdr-0x1fc676>
    3921:	61                   	(bad)  
    3922:	6c                   	ins    BYTE PTR es:[rdi],dx
    3923:	5f                   	pop    rdi
    3924:	6d                   	ins    DWORD PTR es:[rdi],dx
    3925:	73 67                	jae    398e <stivale_hdr-0x1fc672>
    3927:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    392a:	31 32                	xor    DWORD PTR [rdx],esi
    392c:	72 65                	jb     3993 <stivale_hdr-0x1fc66d>
    392e:	61                   	(bad)  
    392f:	64 5f                	fs pop rdi
    3931:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3934:	6d                   	ins    DWORD PTR es:[rdi],dx
    3935:	61                   	(bad)  
    3936:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3937:	64 76 00             	fs jbe 393a <stivale_hdr-0x1fc6c6>
    393a:	72 65                	jb     39a1 <stivale_hdr-0x1fc65f>
    393c:	61                   	(bad)  
    393d:	64 5f                	fs pop rdi
    393f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3942:	72 61                	jb     39a5 <stivale_hdr-0x1fc65b>
    3944:	63 74 65 72          	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
    3948:	00 73 72             	add    BYTE PTR [rbx+0x72],dh
    394b:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    394d:	64 72 69             	fs jb  39b9 <stivale_hdr-0x1fc647>
    3950:	76 65                	jbe    39b7 <stivale_hdr-0x1fc649>
    3952:	72 73                	jb     39c7 <stivale_hdr-0x1fc639>
    3954:	2f                   	(bad)  
    3955:	75 61                	jne    39b8 <stivale_hdr-0x1fc648>
    3957:	72 74                	jb     39cd <stivale_hdr-0x1fc633>
    3959:	2f                   	(bad)  
    395a:	73 65                	jae    39c1 <stivale_hdr-0x1fc63f>
    395c:	72 69                	jb     39c7 <stivale_hdr-0x1fc639>
    395e:	61                   	(bad)  
    395f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3960:	2e 63 70 70          	movsxd esi,DWORD PTR cs:[rax+0x70]
    3964:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    3967:	72 69                	jb     39d2 <stivale_hdr-0x1fc62e>
    3969:	61                   	(bad)  
    396a:	6c                   	ins    BYTE PTR es:[rdi],dx
    396b:	5f                   	pop    rdi
    396c:	62                   	(bad)  
    396d:	75 66                	jne    39d5 <stivale_hdr-0x1fc62b>
    396f:	66 65 72 00          	data16 gs jb 3973 <stivale_hdr-0x1fc68d>
    3973:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    3977:	72 5f                	jb     39d8 <stivale_hdr-0x1fc628>
    3979:	62                   	(bad)  
    397a:	75 66                	jne    39e2 <stivale_hdr-0x1fc61e>
    397c:	66 65 72 00          	data16 gs jb 3980 <stivale_hdr-0x1fc680>
    3980:	5f                   	pop    rdi
    3981:	5a                   	pop    rdx
    3982:	36 70 72             	ss jo  39f7 <stivale_hdr-0x1fc609>
    3985:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3986:	6d                   	ins    DWORD PTR es:[rdi],dx
    3987:	70 74                	jo     39fd <stivale_hdr-0x1fc603>
    3989:	76 00                	jbe    398b <stivale_hdr-0x1fc675>

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   8:	55                   	push   rbp
   9:	29 20                	sub    DWORD PTR [rax],esp
   b:	31 30                	xor    DWORD PTR [rax],esi
   d:	2e 32 2e             	xor    ch,BYTE PTR cs:[rsi]
  10:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_ranges:

0000000000000000 <.debug_ranges>:
   0:	00 90 20 00 00 00    	add    BYTE PTR [rax+0x20],dl
   6:	00 00                	add    BYTE PTR [rax],al
   8:	99                   	cdq    
   9:	90                   	nop
   a:	20 00                	and    BYTE PTR [rax],al
	...
  20:	99                   	cdq    
  21:	90                   	nop
  22:	20 00                	and    BYTE PTR [rax],al
  24:	00 00                	add    BYTE PTR [rax],al
  26:	00 00                	add    BYTE PTR [rax],al
  28:	f1                   	icebp  
  29:	90                   	nop
  2a:	20 00                	and    BYTE PTR [rax],al
	...
  40:	f1                   	icebp  
  41:	90                   	nop
  42:	20 00                	and    BYTE PTR [rax],al
  44:	00 00                	add    BYTE PTR [rax],al
  46:	00 00                	add    BYTE PTR [rax],al
  48:	6a 91                	push   0xffffffffffffff91
  4a:	20 00                	and    BYTE PTR [rax],al
  4c:	00 00                	add    BYTE PTR [rax],al
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	6a 91                	push   0xffffffffffffff91
  52:	20 00                	and    BYTE PTR [rax],al
  54:	00 00                	add    BYTE PTR [rax],al
  56:	00 00                	add    BYTE PTR [rax],al
  58:	cb                   	retf   
  59:	91                   	xchg   ecx,eax
  5a:	20 00                	and    BYTE PTR [rax],al
  5c:	00 00                	add    BYTE PTR [rax],al
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	cb                   	retf   
  61:	91                   	xchg   ecx,eax
  62:	20 00                	and    BYTE PTR [rax],al
  64:	00 00                	add    BYTE PTR [rax],al
  66:	00 00                	add    BYTE PTR [rax],al
  68:	e1 91                	loope  fffffffffffffffb <__kernel_end+0xffffffffffdedffb>
  6a:	20 00                	and    BYTE PTR [rax],al
  6c:	00 00                	add    BYTE PTR [rax],al
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	e1 91                	loope  3 <stivale_hdr-0x1ffffd>
  72:	20 00                	and    BYTE PTR [rax],al
  74:	00 00                	add    BYTE PTR [rax],al
  76:	00 00                	add    BYTE PTR [rax],al
  78:	ff 91 20 00 00 00    	call   QWORD PTR [rcx+0x20]
  7e:	00 00                	add    BYTE PTR [rax],al
  80:	ff 91 20 00 00 00    	call   QWORD PTR [rcx+0x20]
  86:	00 00                	add    BYTE PTR [rax],al
  88:	15 92 20 00 00       	adc    eax,0x2092
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 15 92 20 00 00    	add    BYTE PTR [rip+0x2092],dl        # 2127 <stivale_hdr-0x1fded9>
  95:	00 00                	add    BYTE PTR [rax],al
  97:	00 36                	add    BYTE PTR [rsi],dh
  99:	92                   	xchg   edx,eax
  9a:	20 00                	and    BYTE PTR [rax],al
  9c:	00 00                	add    BYTE PTR [rax],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	36 92                	ss xchg edx,eax
  a2:	20 00                	and    BYTE PTR [rax],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	83 92 20 00 00 00 00 	adc    DWORD PTR [rdx+0x20],0x0
  af:	00 83 92 20 00 00    	add    BYTE PTR [rbx+0x2092],al
  b5:	00 00                	add    BYTE PTR [rax],al
  b7:	00 70 93             	add    BYTE PTR [rax-0x6d],dh
  ba:	20 00                	and    BYTE PTR [rax],al
  bc:	00 00                	add    BYTE PTR [rax],al
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	70 93                	jo     55 <stivale_hdr-0x1fffab>
  c2:	20 00                	and    BYTE PTR [rax],al
  c4:	00 00                	add    BYTE PTR [rax],al
  c6:	00 00                	add    BYTE PTR [rax],al
  c8:	23 94 20 00 00 00 00 	and    edx,DWORD PTR [rax+riz*1+0x0]
  cf:	00 23                	add    BYTE PTR [rbx],ah
  d1:	94                   	xchg   esp,eax
  d2:	20 00                	and    BYTE PTR [rax],al
  d4:	00 00                	add    BYTE PTR [rax],al
  d6:	00 00                	add    BYTE PTR [rax],al
  d8:	6b 94 20 00 00 00 00 	imul   edx,DWORD PTR [rax+riz*1+0x0],0x0
  df:	00 
  e0:	6b 94 20 00 00 00 00 	imul   edx,DWORD PTR [rax+riz*1+0x0],0x0
  e7:	00 
  e8:	25 95 20 00 00       	and    eax,0x2095
  ed:	00 00                	add    BYTE PTR [rax],al
  ef:	00 25 95 20 00 00    	add    BYTE PTR [rip+0x2095],ah        # 218a <stivale_hdr-0x1fde76>
  f5:	00 00                	add    BYTE PTR [rax],al
  f7:	00 be 96 20 00 00    	add    BYTE PTR [rsi+0x2096],bh
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 be 96 20 00 00    	add    BYTE PTR [rsi+0x2096],bh
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 e9                	add    cl,ch
 109:	96                   	xchg   esi,eax
 10a:	20 00                	and    BYTE PTR [rax],al
 10c:	00 00                	add    BYTE PTR [rax],al
 10e:	00 00                	add    BYTE PTR [rax],al
 110:	e9 96 20 00 00       	jmp    21ab <stivale_hdr-0x1fde55>
 115:	00 00                	add    BYTE PTR [rax],al
 117:	00 6e 97             	add    BYTE PTR [rsi-0x69],ch
 11a:	20 00                	and    BYTE PTR [rax],al
	...
 130:	ca 1b 00             	retf   0x1b
 133:	00 00                	add    BYTE PTR [rax],al
 135:	00 00                	add    BYTE PTR [rax],al
 137:	00 fa                	add    dl,bh
 139:	1d 00 00 00 00       	sbb    eax,0x0
 13e:	00 00                	add    BYTE PTR [rax],al
 140:	fd                   	std    
 141:	1d 00 00 00 00       	sbb    eax,0x0
 146:	00 00                	add    BYTE PTR [rax],al
 148:	fe                   	(bad)  
 149:	1d 00 00 00 00       	sbb    eax,0x0
	...

Disassembly of section .debug_pubnames:

0000000000000000 <.debug_pubnames>:
   0:	0e                   	(bad)  
   1:	00 00                	add    BYTE PTR [rax],al
   3:	00 03                	add    BYTE PTR [rbx],al
	...
  11:	00 0e                	add    BYTE PTR [rsi],cl
  13:	00 00                	add    BYTE PTR [rax],al
  15:	00 03                	add    BYTE PTR [rbx],al
	...
  23:	00 0e                	add    BYTE PTR [rsi],cl
  25:	00 00                	add    BYTE PTR [rax],al
  27:	00 03                	add    BYTE PTR [rbx],al
	...
  35:	00 0e                	add    BYTE PTR [rsi],cl
  37:	00 00                	add    BYTE PTR [rax],al
  39:	00 03                	add    BYTE PTR [rbx],al
	...
  47:	00 0e                	add    BYTE PTR [rsi],cl
  49:	00 00                	add    BYTE PTR [rax],al
  4b:	00 03                	add    BYTE PTR [rbx],al
	...
  59:	00 0e                	add    BYTE PTR [rsi],cl
  5b:	00 00                	add    BYTE PTR [rax],al
  5d:	00 03                	add    BYTE PTR [rbx],al
	...
  6b:	00 0e                	add    BYTE PTR [rsi],cl
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .debug_frame:

0000000000000000 <.debug_frame>:
	...

Disassembly of section .debug_loc:

0000000000000000 <.debug_loc>:
	...
